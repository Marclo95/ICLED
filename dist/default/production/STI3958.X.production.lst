

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Wed Jun 11 16:15:16 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	18F26K42
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,space=0,delta=1,noexec
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     7                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,noexec
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,space=0,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,space=0,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,space=0,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,space=0,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,space=0,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,space=0,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,space=0,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,space=0,delta=1,group=3
    32                           	psect	text16,global,reloc=2,class=CODE,space=0,delta=1,group=1
    33                           	psect	text17,global,reloc=2,class=CODE,space=0,delta=1,group=1
    34                           	psect	text18,global,reloc=2,class=CODE,space=0,delta=1,group=1
    35                           	psect	text19,global,reloc=2,class=CODE,space=0,delta=1,group=1
    36                           	psect	text20,global,reloc=2,class=CODE,space=0,delta=1,group=3
    37                           	psect	text21,global,reloc=2,class=CODE,space=0,delta=1,group=1
    38                           	psect	text22,global,reloc=2,class=CODE,space=0,delta=1,group=3
    39                           	psect	text23,global,reloc=2,class=CODE,space=0,delta=1,group=3
    40                           	psect	text24,global,reloc=2,class=CODE,space=0,delta=1,group=3
    41                           	psect	text25,global,reloc=2,class=CODE,space=0,delta=1,group=3
    42                           	psect	text26,global,reloc=2,class=CODE,space=0,delta=1,group=3
    43                           	psect	text27,global,reloc=2,class=CODE,space=0,delta=1,group=3
    44                           	psect	text28,global,reloc=2,class=CODE,space=0,delta=1,group=3
    45                           	psect	text29,global,reloc=2,class=CODE,space=0,delta=1,group=2
    46                           	psect	text30,global,reloc=2,class=CODE,space=0,delta=1,group=2
    47                           	psect	text31,global,reloc=2,class=CODE,space=0,delta=1,group=2
    48                           	psect	text32,global,reloc=2,class=CODE,space=0,delta=1,group=2
    49                           	psect	text33,global,reloc=2,class=CODE,space=0,delta=1,group=2
    50                           	psect	text34,global,reloc=2,class=CODE,space=0,delta=1,group=2
    51                           	psect	text35,global,reloc=2,class=CODE,space=0,delta=1,group=2
    52                           	psect	text36,global,reloc=2,class=CODE,space=0,delta=1,group=2
    53                           	psect	text37,global,reloc=2,class=CODE,space=0,delta=1
    54                           	psect	text38,global,reloc=2,class=CODE,space=0,delta=1,group=2
    55                           	psect	text39,global,reloc=2,class=CODE,space=0,delta=1,group=2
    56                           	psect	text40,global,reloc=2,class=CODE,space=0,delta=1,group=2
    57                           	psect	text41,global,reloc=2,class=CODE,space=0,delta=1
    58                           	psect	text42,global,reloc=2,class=CODE,space=0,delta=1
    59                           	psect	text43,global,reloc=2,class=CODE,space=0,delta=1
    60                           	psect	text44,global,reloc=2,class=CODE,space=0,delta=1
    61                           	psect	text45,global,reloc=2,class=CODE,space=0,delta=1
    62                           	psect	text46,global,reloc=2,class=CODE,space=0,delta=1
    63                           	psect	text47,global,reloc=2,class=CODE,space=0,delta=1
    64                           	psect	text48,global,reloc=2,class=CODE,space=0,delta=1
    65                           	psect	text49,global,reloc=2,class=CODE,space=0,delta=1
    66                           	psect	text50,global,reloc=2,class=CODE,space=0,delta=1
    67                           	psect	text51,global,reloc=2,class=CODE,space=0,delta=1
    68                           	psect	text52,global,reloc=2,class=CODE,space=0,delta=1
    69                           	psect	text53,global,reloc=2,class=CODE,space=0,delta=1
    70                           	psect	text54,global,reloc=2,class=CODE,space=0,delta=1
    71                           	psect	text55,global,reloc=2,class=CODE,space=0,delta=1
    72                           	psect	text56,global,reloc=2,class=CODE,space=0,delta=1
    73                           	psect	text57,global,reloc=2,class=CODE,space=0,delta=1
    74                           	psect	text58,global,reloc=2,class=CODE,space=0,delta=1
    75                           	psect	text59,global,reloc=2,class=CODE,space=0,delta=1
    76                           	psect	text60,global,reloc=2,class=CODE,space=0,delta=1
    77                           	psect	text61,global,reloc=2,class=CODE,space=0,delta=1
    78                           	psect	text62,global,reloc=2,class=CODE,space=0,delta=1
    79                           	psect	text63,global,reloc=2,class=CODE,space=0,delta=1
    80                           	psect	text64,global,reloc=2,class=CODE,space=0,delta=1
    81                           	psect	text65,global,reloc=2,class=CODE,space=0,delta=1
    82                           	psect	text66,global,reloc=2,class=CODE,space=0,delta=1
    83                           	psect	text67,global,reloc=2,class=CODE,space=0,delta=1
    84                           	psect	text68,global,reloc=2,class=CODE,space=0,delta=1
    85                           	psect	text69,global,reloc=2,class=CODE,space=0,delta=1
    86                           	psect	text70,global,reloc=2,class=CODE,space=0,delta=1
    87                           	psect	text71,global,reloc=2,class=CODE,space=0,delta=1
    88                           	psect	text72,global,reloc=2,class=CODE,space=0,delta=1
    89                           	psect	text73,global,reloc=2,class=CODE,space=0,delta=1
    90                           	psect	text74,global,reloc=2,class=CODE,space=0,delta=1
    91                           	psect	text75,global,reloc=2,class=CODE,space=0,delta=1
    92                           	psect	text76,global,reloc=2,class=CODE,space=0,delta=1
    93                           	psect	text77,global,reloc=2,class=CODE,space=0,delta=1
    94                           	psect	text78,global,reloc=2,class=CODE,space=0,delta=1
    95                           	psect	text79,global,reloc=2,class=CODE,space=0,delta=1
    96                           	psect	text80,global,reloc=2,class=CODE,space=0,delta=1
    97                           	psect	text81,global,reloc=2,class=CODE,space=0,delta=1
    98                           	psect	text82,global,reloc=2,class=CODE,space=0,delta=1
    99                           	psect	text83,global,reloc=2,class=CODE,space=0,delta=1
   100                           	psect	text84,global,reloc=2,class=CODE,space=0,delta=1
   101                           	psect	text85,global,reloc=2,class=CODE,space=0,delta=1
   102                           	psect	text86,global,reloc=2,class=CODE,space=0,delta=1
   103                           	psect	text87,global,reloc=2,class=CODE,space=0,delta=1
   104                           	psect	text88,global,reloc=2,class=CODE,space=0,delta=1
   105                           	psect	text89,global,reloc=2,class=CODE,space=0,delta=1
   106                           	psect	text90,global,reloc=2,class=CODE,space=0,delta=1
   107                           	psect	text91,global,reloc=2,class=CODE,space=0,delta=1
   108                           	psect	text92,global,reloc=2,class=CODE,space=0,delta=1
   109                           	psect	text93,global,reloc=2,class=CODE,space=0,delta=1
   110                           	psect	text94,global,reloc=2,class=CODE,space=0,delta=1
   111                           	psect	text95,global,reloc=2,class=CODE,space=0,delta=1
   112                           	psect	text96,global,reloc=2,class=CODE,space=0,delta=1
   113                           	psect	text97,global,reloc=2,class=CODE,space=0,delta=1
   114                           	psect	text98,global,reloc=2,class=CODE,space=0,delta=1
   115                           	psect	text99,global,reloc=2,class=CODE,space=0,delta=1
   116                           	psect	text100,global,reloc=2,class=CODE,space=0,delta=1
   117                           	psect	text101,global,reloc=2,class=CODE,space=0,delta=1
   118                           	psect	text102,global,reloc=2,class=CODE,space=0,delta=1
   119                           	psect	text103,global,reloc=2,class=CODE,space=0,delta=1
   120                           	psect	text104,global,reloc=2,class=CODE,space=0,delta=1
   121                           	psect	text105,global,reloc=2,class=CODE,space=0,delta=1
   122                           	psect	text106,global,reloc=2,class=CODE,space=0,delta=1
   123                           	psect	text107,global,reloc=2,class=CODE,space=0,delta=1
   124                           	psect	text108,global,reloc=2,class=CODE,space=0,delta=1
   125                           	psect	text109,global,reloc=2,class=CODE,space=0,delta=1
   126                           	psect	text110,global,reloc=2,class=CODE,space=0,delta=1
   127                           	psect	text111,global,reloc=2,class=CODE,space=0,delta=1
   128                           	psect	text112,global,reloc=2,class=CODE,space=0,delta=1
   129                           	psect	ivt0x8,global,reloc=2,class=CODE,space=0,delta=1,noexec,keep,optim=
   130                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   131                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   132                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   133   000000                     
   134                           ; Generated 13/12/2024 GMT
   135                           ; 
   136                           ; Copyright © 2024, Microchip Technology Inc. and its subsidiaries ("Microchip")
   137                           ; All rights reserved.
   138                           ; 
   139                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   140                           ; 
   141                           ; Redistribution and use in source and binary forms, with or without modification, are
   142                           ; permitted provided that the following conditions are met:
   143                           ; 
   144                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   145                           ;        conditions and the following disclaimer.
   146                           ; 
   147                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   148                           ;        of conditions and the following disclaimer in the documentation and/or other
   149                           ;        materials provided with the distribution. Publication is not required when
   150                           ;        this file is used in an embedded application.
   151                           ; 
   152                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   153                           ;        software without specific prior written permission.
   154                           ; 
   155                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   156                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   157                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   158                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   159                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   160                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   161                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   162                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   163                           ; 
   164                           ; 
   165                           ; Code-generator required, PIC18F26K42 Definitions
   166                           ; 
   167                           ; SFR Addresses
   168   003FE0                     bsr             equ	16352
   169   003FE9                     fsr0            equ	16361
   170   003FEA                     fsr0h           equ	16362
   171   003FE9                     fsr0l           equ	16361
   172   003FE1                     fsr1            equ	16353
   173   003FE2                     fsr1h           equ	16354
   174   003FE1                     fsr1l           equ	16353
   175   003FD9                     fsr2            equ	16345
   176   003FDA                     fsr2h           equ	16346
   177   003FD9                     fsr2l           equ	16345
   178   003FEF                     indf0           equ	16367
   179   003FE7                     indf1           equ	16359
   180   003FDF                     indf2           equ	16351
   181   003FD2                     intcon          equ	16338
   182   0039E5                     nvmcon          equ	14821
   183   003FF9                     pcl             equ	16377
   184   003FFA                     pclath          equ	16378
   185   003FFB                     pclatu          equ	16379
   186   003FEB                     plusw0          equ	16363
   187   003FE3                     plusw1          equ	16355
   188   003FDB                     plusw2          equ	16347
   189   003FED                     postdec0        equ	16365
   190   003FE5                     postdec1        equ	16357
   191   003FDD                     postdec2        equ	16349
   192   003FEE                     postinc0        equ	16366
   193   003FE6                     postinc1        equ	16358
   194   003FDE                     postinc2        equ	16350
   195   003FEC                     preinc0         equ	16364
   196   003FE4                     preinc1         equ	16356
   197   003FDC                     preinc2         equ	16348
   198   003FF3                     prod            equ	16371
   199   003FF4                     prodh           equ	16372
   200   003FF3                     prodl           equ	16371
   201   003FD8                     status          equ	16344
   202   003FF5                     tablat          equ	16373
   203   003FF6                     tblptr          equ	16374
   204   003FF7                     tblptrh         equ	16375
   205   003FF6                     tblptrl         equ	16374
   206   003FF8                     tblptru         equ	16376
   207   003FFD                     tosl            equ	16381
   208   003FE8                     wreg            equ	16360
   209   003880                     STATUS_CSHAD    equ	14464	;# 
   210   003881                     WREG_CSHAD      equ	14465	;# 
   211   003882                     BSR_CSHAD       equ	14466	;# 
   212   003883                     SHADCON         equ	14467	;# 
   213   003884                     STATUS_SHAD     equ	14468	;# 
   214   003885                     WREG_SHAD       equ	14469	;# 
   215   003886                     BSR_SHAD        equ	14470	;# 
   216   003887                     PCLATH_SHAD     equ	14471	;# 
   217   003888                     PCLATU_SHAD     equ	14472	;# 
   218   003889                     FSR0SH          equ	14473	;# 
   219   003889                     FSR0L_SHAD      equ	14473	;# 
   220   00388A                     FSR0H_SHAD      equ	14474	;# 
   221   00388B                     FSR1SH          equ	14475	;# 
   222   00388B                     FSR1L_SHAD      equ	14475	;# 
   223   00388C                     FSR1H_SHAD      equ	14476	;# 
   224   00388D                     FSR2SH          equ	14477	;# 
   225   00388D                     FSR2L_SHAD      equ	14477	;# 
   226   00388E                     FSR2H_SHAD      equ	14478	;# 
   227   00388F                     PRODSH          equ	14479	;# 
   228   00388F                     PRODL_SHAD      equ	14479	;# 
   229   003890                     PRODH_SHAD      equ	14480	;# 
   230   00389D                     IVTADL          equ	14493	;# 
   231   00389E                     IVTADH          equ	14494	;# 
   232   00389F                     IVTADU          equ	14495	;# 
   233   00395B                     WDTCON0         equ	14683	;# 
   234   00395C                     WDTCON1         equ	14684	;# 
   235   00395D                     WDTPSL          equ	14685	;# 
   236   00395E                     WDTPSH          equ	14686	;# 
   237   00395F                     WDTTMR          equ	14687	;# 
   238   003960                     CRCDATA         equ	14688	;# 
   239   003960                     CRCDATL         equ	14688	;# 
   240   003961                     CRCDATH         equ	14689	;# 
   241   003962                     CRCACC          equ	14690	;# 
   242   003962                     CRCACCL         equ	14690	;# 
   243   003963                     CRCACCH         equ	14691	;# 
   244   003964                     CRCSHFT         equ	14692	;# 
   245   003964                     CRCSHIFTL       equ	14692	;# 
   246   003965                     CRCSHIFTH       equ	14693	;# 
   247   003966                     CRCXOR          equ	14694	;# 
   248   003966                     CRCXORL         equ	14694	;# 
   249   003967                     CRCXORH         equ	14695	;# 
   250   003968                     CRCCON0         equ	14696	;# 
   251   003969                     CRCCON1         equ	14697	;# 
   252   003976                     SCANLADR        equ	14710	;# 
   253   003976                     SCANLADRL       equ	14710	;# 
   254   003977                     SCANLADRH       equ	14711	;# 
   255   003978                     SCANLADRU       equ	14712	;# 
   256   003979                     SCANHADR        equ	14713	;# 
   257   003979                     SCANHADRL       equ	14713	;# 
   258   00397A                     SCANHADRH       equ	14714	;# 
   259   00397B                     SCANHADRU       equ	14715	;# 
   260   00397C                     SCANCON0        equ	14716	;# 
   261   00397D                     SCANTRIG        equ	14717	;# 
   262   003980                     IPR0            equ	14720	;# 
   263   003981                     IPR1            equ	14721	;# 
   264   003982                     IPR2            equ	14722	;# 
   265   003983                     IPR3            equ	14723	;# 
   266   003984                     IPR4            equ	14724	;# 
   267   003985                     IPR5            equ	14725	;# 
   268   003986                     IPR6            equ	14726	;# 
   269   003987                     IPR7            equ	14727	;# 
   270   003988                     IPR8            equ	14728	;# 
   271   003989                     IPR9            equ	14729	;# 
   272   00398A                     IPR10           equ	14730	;# 
   273   003990                     PIE0            equ	14736	;# 
   274   003991                     PIE1            equ	14737	;# 
   275   003992                     PIE2            equ	14738	;# 
   276   003993                     PIE3            equ	14739	;# 
   277   003994                     PIE4            equ	14740	;# 
   278   003995                     PIE5            equ	14741	;# 
   279   003996                     PIE6            equ	14742	;# 
   280   003997                     PIE7            equ	14743	;# 
   281   003998                     PIE8            equ	14744	;# 
   282   003999                     PIE9            equ	14745	;# 
   283   00399A                     PIE10           equ	14746	;# 
   284   0039A0                     PIR0            equ	14752	;# 
   285   0039A1                     PIR1            equ	14753	;# 
   286   0039A2                     PIR2            equ	14754	;# 
   287   0039A3                     PIR3            equ	14755	;# 
   288   0039A4                     PIR4            equ	14756	;# 
   289   0039A5                     PIR5            equ	14757	;# 
   290   0039A6                     PIR6            equ	14758	;# 
   291   0039A7                     PIR7            equ	14759	;# 
   292   0039A8                     PIR8            equ	14760	;# 
   293   0039A9                     PIR9            equ	14761	;# 
   294   0039AA                     PIR10           equ	14762	;# 
   295   0039C0                     PMD0            equ	14784	;# 
   296   0039C1                     PMD1            equ	14785	;# 
   297   0039C2                     PMD2            equ	14786	;# 
   298   0039C3                     PMD3            equ	14787	;# 
   299   0039C4                     PMD4            equ	14788	;# 
   300   0039C5                     PMD5            equ	14789	;# 
   301   0039C6                     PMD6            equ	14790	;# 
   302   0039C7                     PMD7            equ	14791	;# 
   303   0039D0                     BORCON          equ	14800	;# 
   304   0039D1                     VREGCON         equ	14801	;# 
   305   0039D8                     CPUDOZE         equ	14808	;# 
   306   0039D9                     OSCCON1         equ	14809	;# 
   307   0039DA                     OSCCON2         equ	14810	;# 
   308   0039DB                     OSCCON3         equ	14811	;# 
   309   0039DC                     OSCSTAT         equ	14812	;# 
   310   0039DC                     OSCSTAT1        equ	14812	;# 
   311   0039DD                     OSCEN           equ	14813	;# 
   312   0039DE                     OSCTUNE         equ	14814	;# 
   313   0039DF                     OSCFRQ          equ	14815	;# 
   314   0039E0                     NVMADRL         equ	14816	;# 
   315   0039E1                     NVMADRH         equ	14817	;# 
   316   0039E3                     NVMDAT          equ	14819	;# 
   317   0039E5                     NVMCON1         equ	14821	;# 
   318   0039E6                     NVMCON2         equ	14822	;# 
   319   0039EF                     PRLOCK          equ	14831	;# 
   320   0039F1                     ISRPR           equ	14833	;# 
   321   0039F2                     MAINPR          equ	14834	;# 
   322   0039F3                     DMA1PR          equ	14835	;# 
   323   0039F4                     DMA2PR          equ	14836	;# 
   324   0039F7                     SCANPR          equ	14839	;# 
   325   003A00                     RA0PPS          equ	14848	;# 
   326   003A01                     RA1PPS          equ	14849	;# 
   327   003A02                     RA2PPS          equ	14850	;# 
   328   003A03                     RA3PPS          equ	14851	;# 
   329   003A04                     RA4PPS          equ	14852	;# 
   330   003A05                     RA5PPS          equ	14853	;# 
   331   003A06                     RA6PPS          equ	14854	;# 
   332   003A07                     RA7PPS          equ	14855	;# 
   333   003A08                     RB0PPS          equ	14856	;# 
   334   003A09                     RB1PPS          equ	14857	;# 
   335   003A0A                     RB2PPS          equ	14858	;# 
   336   003A0B                     RB3PPS          equ	14859	;# 
   337   003A0C                     RB4PPS          equ	14860	;# 
   338   003A0D                     RB5PPS          equ	14861	;# 
   339   003A0E                     RB6PPS          equ	14862	;# 
   340   003A0F                     RB7PPS          equ	14863	;# 
   341   003A10                     RC0PPS          equ	14864	;# 
   342   003A11                     RC1PPS          equ	14865	;# 
   343   003A12                     RC2PPS          equ	14866	;# 
   344   003A13                     RC3PPS          equ	14867	;# 
   345   003A14                     RC4PPS          equ	14868	;# 
   346   003A15                     RC5PPS          equ	14869	;# 
   347   003A16                     RC6PPS          equ	14870	;# 
   348   003A17                     RC7PPS          equ	14871	;# 
   349   003A40                     ANSELA          equ	14912	;# 
   350   003A41                     WPUA            equ	14913	;# 
   351   003A42                     ODCONA          equ	14914	;# 
   352   003A43                     SLRCONA         equ	14915	;# 
   353   003A44                     INLVLA          equ	14916	;# 
   354   003A45                     IOCAP           equ	14917	;# 
   355   003A46                     IOCAN           equ	14918	;# 
   356   003A47                     IOCAF           equ	14919	;# 
   357   003A48                     CCDPA           equ	14920	;# 
   358   003A49                     CCDNA           equ	14921	;# 
   359   003A50                     ANSELB          equ	14928	;# 
   360   003A51                     WPUB            equ	14929	;# 
   361   003A52                     ODCONB          equ	14930	;# 
   362   003A53                     SLRCONB         equ	14931	;# 
   363   003A54                     INLVLB          equ	14932	;# 
   364   003A55                     IOCBP           equ	14933	;# 
   365   003A56                     IOCBN           equ	14934	;# 
   366   003A57                     IOCBF           equ	14935	;# 
   367   003A58                     CCDPB           equ	14936	;# 
   368   003A59                     CCDNB           equ	14937	;# 
   369   003A5A                     RB1I2C          equ	14938	;# 
   370   003A5B                     RB2I2C          equ	14939	;# 
   371   003A60                     ANSELC          equ	14944	;# 
   372   003A61                     WPUC            equ	14945	;# 
   373   003A62                     ODCONC          equ	14946	;# 
   374   003A63                     SLRCONC         equ	14947	;# 
   375   003A64                     INLVLC          equ	14948	;# 
   376   003A65                     IOCCP           equ	14949	;# 
   377   003A66                     IOCCN           equ	14950	;# 
   378   003A67                     IOCCF           equ	14951	;# 
   379   003A68                     CCDPC           equ	14952	;# 
   380   003A69                     CCDNC           equ	14953	;# 
   381   003A6A                     RC3I2C          equ	14954	;# 
   382   003A6B                     RC4I2C          equ	14955	;# 
   383   003A81                     WPUE            equ	14977	;# 
   384   003A84                     INLVLE          equ	14980	;# 
   385   003A85                     IOCEP           equ	14981	;# 
   386   003A86                     IOCEN           equ	14982	;# 
   387   003A87                     IOCEF           equ	14983	;# 
   388   003ABE                     CCDCON          equ	15038	;# 
   389   003ABF                     PPSLOCK         equ	15039	;# 
   390   003AC0                     INT0PPS         equ	15040	;# 
   391   003AC1                     INT1PPS         equ	15041	;# 
   392   003AC2                     INT2PPS         equ	15042	;# 
   393   003AC3                     T0CKIPPS        equ	15043	;# 
   394   003AC4                     T1CKIPPS        equ	15044	;# 
   395   003AC5                     T1GPPS          equ	15045	;# 
   396   003AC6                     T3CKIPPS        equ	15046	;# 
   397   003AC7                     T3GPPS          equ	15047	;# 
   398   003AC8                     T5CKIPPS        equ	15048	;# 
   399   003AC9                     T5GPPS          equ	15049	;# 
   400   003ACA                     T2INPPS         equ	15050	;# 
   401   003ACB                     T4INPPS         equ	15051	;# 
   402   003ACC                     T6INPPS         equ	15052	;# 
   403   003ACD                     CCP1PPS         equ	15053	;# 
   404   003ACE                     CCP2PPS         equ	15054	;# 
   405   003ACF                     CCP3PPS         equ	15055	;# 
   406   003AD0                     CCP4PPS         equ	15056	;# 
   407   003AD1                     SMT1WINPPS      equ	15057	;# 
   408   003AD2                     SMT1SIGPPS      equ	15058	;# 
   409   003AD3                     CWG1INPPS       equ	15059	;# 
   410   003AD4                     CWG2INPPS       equ	15060	;# 
   411   003AD5                     CWG3INPPS       equ	15061	;# 
   412   003AD6                     MD1CARLPPS      equ	15062	;# 
   413   003AD7                     MD1CARHPPS      equ	15063	;# 
   414   003AD8                     MD1SRCPPS       equ	15064	;# 
   415   003AD9                     CLCIN0PPS       equ	15065	;# 
   416   003ADA                     CLCIN1PPS       equ	15066	;# 
   417   003ADB                     CLCIN2PPS       equ	15067	;# 
   418   003ADC                     CLCIN3PPS       equ	15068	;# 
   419   003ADD                     ADACTPPS        equ	15069	;# 
   420   003ADE                     SPI1SCKPPS      equ	15070	;# 
   421   003ADF                     SPI1SDIPPS      equ	15071	;# 
   422   003AE0                     SPI1SSPPS       equ	15072	;# 
   423   003AE1                     I2C1SCLPPS      equ	15073	;# 
   424   003AE2                     I2C1SDAPPS      equ	15074	;# 
   425   003AE3                     I2C2SCLPPS      equ	15075	;# 
   426   003AE4                     I2C2SDAPPS      equ	15076	;# 
   427   003AE5                     U1RXPPS         equ	15077	;# 
   428   003AE6                     U1CTSPPS        equ	15078	;# 
   429   003AE8                     U2RXPPS         equ	15080	;# 
   430   003AE9                     U2CTSPPS        equ	15081	;# 
   431   003BC9                     DMA2BUF         equ	15305	;# 
   432   003BCA                     DMA2DCNT        equ	15306	;# 
   433   003BCA                     DMA2DCNTL       equ	15306	;# 
   434   003BCB                     DMA2DCNTH       equ	15307	;# 
   435   003BCC                     DMA2DPTR        equ	15308	;# 
   436   003BCC                     DMA2DPTRL       equ	15308	;# 
   437   003BCD                     DMA2DPTRH       equ	15309	;# 
   438   003BCE                     DMA2DSZ         equ	15310	;# 
   439   003BCE                     DMA2DSZL        equ	15310	;# 
   440   003BCF                     DMA2DSZH        equ	15311	;# 
   441   003BD0                     DMA2DSA         equ	15312	;# 
   442   003BD0                     DMA2DSAL        equ	15312	;# 
   443   003BD1                     DMA2DSAH        equ	15313	;# 
   444   003BD2                     DMA2SCNT        equ	15314	;# 
   445   003BD2                     DMA2SCNTL       equ	15314	;# 
   446   003BD3                     DMA2SCNTH       equ	15315	;# 
   447   003BD4                     DMA2SPTR        equ	15316	;# 
   448   003BD4                     DMA2SPTRL       equ	15316	;# 
   449   003BD5                     DMA2SPTRH       equ	15317	;# 
   450   003BD6                     DMA2SPTRU       equ	15318	;# 
   451   003BD7                     DMA2SSZ         equ	15319	;# 
   452   003BD7                     DMA2SSZL        equ	15319	;# 
   453   003BD8                     DMA2SSZH        equ	15320	;# 
   454   003BD9                     DMA2SSA         equ	15321	;# 
   455   003BD9                     DMA2SSAL        equ	15321	;# 
   456   003BDA                     DMA2SSAH        equ	15322	;# 
   457   003BDB                     DMA2SSAU        equ	15323	;# 
   458   003BDC                     DMA2CON0        equ	15324	;# 
   459   003BDD                     DMA2CON1        equ	15325	;# 
   460   003BDE                     DMA2AIRQ        equ	15326	;# 
   461   003BDF                     DMA2SIRQ        equ	15327	;# 
   462   003BE9                     DMA1BUF         equ	15337	;# 
   463   003BEA                     DMA1DCNT        equ	15338	;# 
   464   003BEA                     DMA1DCNTL       equ	15338	;# 
   465   003BEB                     DMA1DCNTH       equ	15339	;# 
   466   003BEC                     DMA1DPTR        equ	15340	;# 
   467   003BEC                     DMA1DPTRL       equ	15340	;# 
   468   003BED                     DMA1DPTRH       equ	15341	;# 
   469   003BEE                     DMA1DSZ         equ	15342	;# 
   470   003BEE                     DMA1DSZL        equ	15342	;# 
   471   003BEF                     DMA1DSZH        equ	15343	;# 
   472   003BF0                     DMA1DSA         equ	15344	;# 
   473   003BF0                     DMA1DSAL        equ	15344	;# 
   474   003BF1                     DMA1DSAH        equ	15345	;# 
   475   003BF2                     DMA1SCNT        equ	15346	;# 
   476   003BF2                     DMA1SCNTL       equ	15346	;# 
   477   003BF3                     DMA1SCNTH       equ	15347	;# 
   478   003BF4                     DMA1SPTR        equ	15348	;# 
   479   003BF4                     DMA1SPTRL       equ	15348	;# 
   480   003BF5                     DMA1SPTRH       equ	15349	;# 
   481   003BF6                     DMA1SPTRU       equ	15350	;# 
   482   003BF7                     DMA1SSZ         equ	15351	;# 
   483   003BF7                     DMA1SSZL        equ	15351	;# 
   484   003BF8                     DMA1SSZH        equ	15352	;# 
   485   003BF9                     DMA1SSA         equ	15353	;# 
   486   003BF9                     DMA1SSAL        equ	15353	;# 
   487   003BFA                     DMA1SSAH        equ	15354	;# 
   488   003BFB                     DMA1SSAU        equ	15355	;# 
   489   003BFC                     DMA1CON0        equ	15356	;# 
   490   003BFD                     DMA1CON1        equ	15357	;# 
   491   003BFE                     DMA1AIRQ        equ	15358	;# 
   492   003BFF                     DMA1SIRQ        equ	15359	;# 
   493   003C56                     CLC4CON         equ	15446	;# 
   494   003C57                     CLC4POL         equ	15447	;# 
   495   003C58                     CLC4SEL0        equ	15448	;# 
   496   003C59                     CLC4SEL1        equ	15449	;# 
   497   003C5A                     CLC4SEL2        equ	15450	;# 
   498   003C5B                     CLC4SEL3        equ	15451	;# 
   499   003C5C                     CLC4GLS0        equ	15452	;# 
   500   003C5D                     CLC4GLS1        equ	15453	;# 
   501   003C5E                     CLC4GLS2        equ	15454	;# 
   502   003C5F                     CLC4GLS3        equ	15455	;# 
   503   003C60                     CLC3CON         equ	15456	;# 
   504   003C61                     CLC3POL         equ	15457	;# 
   505   003C62                     CLC3SEL0        equ	15458	;# 
   506   003C63                     CLC3SEL1        equ	15459	;# 
   507   003C64                     CLC3SEL2        equ	15460	;# 
   508   003C65                     CLC3SEL3        equ	15461	;# 
   509   003C66                     CLC3GLS0        equ	15462	;# 
   510   003C67                     CLC3GLS1        equ	15463	;# 
   511   003C68                     CLC3GLS2        equ	15464	;# 
   512   003C69                     CLC3GLS3        equ	15465	;# 
   513   003C6A                     CLC2CON         equ	15466	;# 
   514   003C6B                     CLC2POL         equ	15467	;# 
   515   003C6C                     CLC2SEL0        equ	15468	;# 
   516   003C6D                     CLC2SEL1        equ	15469	;# 
   517   003C6E                     CLC2SEL2        equ	15470	;# 
   518   003C6F                     CLC2SEL3        equ	15471	;# 
   519   003C70                     CLC2GLS0        equ	15472	;# 
   520   003C71                     CLC2GLS1        equ	15473	;# 
   521   003C72                     CLC2GLS2        equ	15474	;# 
   522   003C73                     CLC2GLS3        equ	15475	;# 
   523   003C74                     CLC1CON         equ	15476	;# 
   524   003C75                     CLC1POL         equ	15477	;# 
   525   003C76                     CLC1SEL0        equ	15478	;# 
   526   003C77                     CLC1SEL1        equ	15479	;# 
   527   003C78                     CLC1SEL2        equ	15480	;# 
   528   003C79                     CLC1SEL3        equ	15481	;# 
   529   003C7A                     CLC1GLS0        equ	15482	;# 
   530   003C7B                     CLC1GLS1        equ	15483	;# 
   531   003C7C                     CLC1GLS2        equ	15484	;# 
   532   003C7D                     CLC1GLS3        equ	15485	;# 
   533   003C7E                     CLCDATA0        equ	15486	;# 
   534   003CE5                     CLKRCON         equ	15589	;# 
   535   003CE6                     CLKRCLK         equ	15590	;# 
   536   003CFA                     MD1CON0         equ	15610	;# 
   537   003CFB                     MD1CON1         equ	15611	;# 
   538   003CFC                     MD1SRC          equ	15612	;# 
   539   003CFD                     MD1CARL         equ	15613	;# 
   540   003CFE                     MD1CARH         equ	15614	;# 
   541   003D10                     SPI1RXB         equ	15632	;# 
   542   003D11                     SPI1TXB         equ	15633	;# 
   543   003D12                     SPI1TCNT        equ	15634	;# 
   544   003D12                     SPI1TCNTL       equ	15634	;# 
   545   003D13                     SPI1TCNTH       equ	15635	;# 
   546   003D14                     SPI1CON0        equ	15636	;# 
   547   003D15                     SPI1CON1        equ	15637	;# 
   548   003D16                     SPI1CON2        equ	15638	;# 
   549   003D17                     SPI1STATUS      equ	15639	;# 
   550   003D18                     SPI1TWIDTH      equ	15640	;# 
   551   003D19                     SPI1BAUD        equ	15641	;# 
   552   003D1A                     SPI1INTF        equ	15642	;# 
   553   003D1B                     SPI1INTE        equ	15643	;# 
   554   003D1C                     SPI1CLK         equ	15644	;# 
   555   003D54                     I2C2RXB         equ	15700	;# 
   556   003D55                     I2C2TXB         equ	15701	;# 
   557   003D56                     I2C2CNT         equ	15702	;# 
   558   003D57                     I2C2ADB0        equ	15703	;# 
   559   003D58                     I2C2ADB1        equ	15704	;# 
   560   003D59                     I2C2ADR0        equ	15705	;# 
   561   003D5A                     I2C2ADR1        equ	15706	;# 
   562   003D5B                     I2C2ADR2        equ	15707	;# 
   563   003D5C                     I2C2ADR3        equ	15708	;# 
   564   003D5D                     I2C2CON0        equ	15709	;# 
   565   003D5E                     I2C2CON1        equ	15710	;# 
   566   003D5F                     I2C2CON2        equ	15711	;# 
   567   003D60                     I2C2ERR         equ	15712	;# 
   568   003D61                     I2C2STAT0       equ	15713	;# 
   569   003D62                     I2C2STAT1       equ	15714	;# 
   570   003D63                     I2C2PIR         equ	15715	;# 
   571   003D64                     I2C2PIE         equ	15716	;# 
   572   003D65                     I2C2CLK         equ	15717	;# 
   573   003D66                     I2C2BTO         equ	15718	;# 
   574   003D6A                     I2C1RXB         equ	15722	;# 
   575   003D6B                     I2C1TXB         equ	15723	;# 
   576   003D6C                     I2C1CNT         equ	15724	;# 
   577   003D6D                     I2C1ADB0        equ	15725	;# 
   578   003D6E                     I2C1ADB1        equ	15726	;# 
   579   003D6F                     I2C1ADR0        equ	15727	;# 
   580   003D70                     I2C1ADR1        equ	15728	;# 
   581   003D71                     I2C1ADR2        equ	15729	;# 
   582   003D72                     I2C1ADR3        equ	15730	;# 
   583   003D73                     I2C1CON0        equ	15731	;# 
   584   003D74                     I2C1CON1        equ	15732	;# 
   585   003D75                     I2C1CON2        equ	15733	;# 
   586   003D76                     I2C1ERR         equ	15734	;# 
   587   003D77                     I2C1STAT0       equ	15735	;# 
   588   003D78                     I2C1STAT1       equ	15736	;# 
   589   003D79                     I2C1PIR         equ	15737	;# 
   590   003D7A                     I2C1PIE         equ	15738	;# 
   591   003D7B                     I2C1CLK         equ	15739	;# 
   592   003D7C                     I2C1BTO         equ	15740	;# 
   593   003DD0                     U2RXB           equ	15824	;# 
   594   003DD0                     U2RXBL          equ	15824	;# 
   595   003DD2                     U2TXB           equ	15826	;# 
   596   003DD2                     U2TXBL          equ	15826	;# 
   597   003DD4                     U2P1            equ	15828	;# 
   598   003DD4                     U2P1L           equ	15828	;# 
   599   003DD6                     U2P2            equ	15830	;# 
   600   003DD6                     U2P2L           equ	15830	;# 
   601   003DD8                     U2P3            equ	15832	;# 
   602   003DD8                     U2P3L           equ	15832	;# 
   603   003DDA                     U2CON0          equ	15834	;# 
   604   003DDB                     U2CON1          equ	15835	;# 
   605   003DDC                     U2CON2          equ	15836	;# 
   606   003DDD                     U2BRG           equ	15837	;# 
   607   003DDD                     U2BRGL          equ	15837	;# 
   608   003DDE                     U2BRGH          equ	15838	;# 
   609   003DDF                     U2FIFO          equ	15839	;# 
   610   003DE0                     U2UIR           equ	15840	;# 
   611   003DE1                     U2ERRIR         equ	15841	;# 
   612   003DE2                     U2ERRIE         equ	15842	;# 
   613   003DE8                     U1RXB           equ	15848	;# 
   614   003DE8                     U1RXBL          equ	15848	;# 
   615   003DE9                     U1RXCHK         equ	15849	;# 
   616   003DEA                     U1TXB           equ	15850	;# 
   617   003DEA                     U1TXBL          equ	15850	;# 
   618   003DEB                     U1TXCHK         equ	15851	;# 
   619   003DEC                     U1P1            equ	15852	;# 
   620   003DEC                     U1P1L           equ	15852	;# 
   621   003DED                     U1P1H           equ	15853	;# 
   622   003DEE                     U1P2            equ	15854	;# 
   623   003DEE                     U1P2L           equ	15854	;# 
   624   003DEF                     U1P2H           equ	15855	;# 
   625   003DF0                     U1P3            equ	15856	;# 
   626   003DF0                     U1P3L           equ	15856	;# 
   627   003DF1                     U1P3H           equ	15857	;# 
   628   003DF2                     U1CON0          equ	15858	;# 
   629   003DF3                     U1CON1          equ	15859	;# 
   630   003DF4                     U1CON2          equ	15860	;# 
   631   003DF5                     U1BRG           equ	15861	;# 
   632   003DF5                     U1BRGL          equ	15861	;# 
   633   003DF6                     U1BRGH          equ	15862	;# 
   634   003DF7                     U1FIFO          equ	15863	;# 
   635   003DF8                     U1UIR           equ	15864	;# 
   636   003DF9                     U1ERRIR         equ	15865	;# 
   637   003DFA                     U1ERRIE         equ	15866	;# 
   638   003E9C                     DAC1CON1        equ	16028	;# 
   639   003E9E                     DAC1CON0        equ	16030	;# 
   640   003EB8                     CM2CON0         equ	16056	;# 
   641   003EB9                     CM2CON1         equ	16057	;# 
   642   003EBA                     CM2NCH          equ	16058	;# 
   643   003EBB                     CM2PCH          equ	16059	;# 
   644   003EBC                     CM1CON0         equ	16060	;# 
   645   003EBD                     CM1CON1         equ	16061	;# 
   646   003EBE                     CM1NCH          equ	16062	;# 
   647   003EBF                     CM1PCH          equ	16063	;# 
   648   003EC0                     CMOUT           equ	16064	;# 
   649   003EC1                     FVRCON          equ	16065	;# 
   650   003EC3                     ZCDCON          equ	16067	;# 
   651   003EC9                     HLVDCON0        equ	16073	;# 
   652   003ECA                     HLVDCON1        equ	16074	;# 
   653   003ED7                     ADCP            equ	16087	;# 
   654   003EDE                     ADLTH           equ	16094	;# 
   655   003EDE                     ADLTHL          equ	16094	;# 
   656   003EDF                     ADLTHH          equ	16095	;# 
   657   003EE0                     ADUTH           equ	16096	;# 
   658   003EE0                     ADUTHL          equ	16096	;# 
   659   003EE1                     ADUTHH          equ	16097	;# 
   660   003EE2                     ADERR           equ	16098	;# 
   661   003EE2                     ADERRL          equ	16098	;# 
   662   003EE3                     ADERRH          equ	16099	;# 
   663   003EE4                     ADSTPT          equ	16100	;# 
   664   003EE4                     ADSTPTL         equ	16100	;# 
   665   003EE5                     ADSTPTH         equ	16101	;# 
   666   003EE6                     ADFLTR          equ	16102	;# 
   667   003EE6                     ADFLTRL         equ	16102	;# 
   668   003EE7                     ADFLTRH         equ	16103	;# 
   669   003EE8                     ADACC           equ	16104	;# 
   670   003EE8                     ADACCL          equ	16104	;# 
   671   003EE9                     ADACCH          equ	16105	;# 
   672   003EEA                     ADACCU          equ	16106	;# 
   673   003EEB                     ADCNT           equ	16107	;# 
   674   003EEC                     ADRPT           equ	16108	;# 
   675   003EED                     ADPREV          equ	16109	;# 
   676   003EED                     ADPREVL         equ	16109	;# 
   677   003EEE                     ADPREVH         equ	16110	;# 
   678   003EEF                     ADRES           equ	16111	;# 
   679   003EEF                     ADRESL          equ	16111	;# 
   680   003EF0                     ADRESH          equ	16112	;# 
   681   003EF1                     ADPCH           equ	16113	;# 
   682   003EF3                     ADACQ           equ	16115	;# 
   683   003EF3                     ADACQL          equ	16115	;# 
   684   003EF4                     ADACQH          equ	16116	;# 
   685   003EF5                     ADCAP           equ	16117	;# 
   686   003EF6                     ADPRE           equ	16118	;# 
   687   003EF6                     ADPREL          equ	16118	;# 
   688   003EF7                     ADPREH          equ	16119	;# 
   689   003EF8                     ADCON0          equ	16120	;# 
   690   003EF9                     ADCON1          equ	16121	;# 
   691   003EFA                     ADCON2          equ	16122	;# 
   692   003EFB                     ADCON3          equ	16123	;# 
   693   003EFC                     ADSTAT          equ	16124	;# 
   694   003EFD                     ADREF           equ	16125	;# 
   695   003EFE                     ADACT           equ	16126	;# 
   696   003EFF                     ADCLK           equ	16127	;# 
   697   003F12                     SMT1TMR         equ	16146	;# 
   698   003F12                     SMT1TMRL        equ	16146	;# 
   699   003F13                     SMT1TMRH        equ	16147	;# 
   700   003F14                     SMT1TMRU        equ	16148	;# 
   701   003F15                     SMT1CPR         equ	16149	;# 
   702   003F15                     SMT1CPRL        equ	16149	;# 
   703   003F16                     SMT1CPRH        equ	16150	;# 
   704   003F17                     SMT1CPRU        equ	16151	;# 
   705   003F18                     SMT1CPW         equ	16152	;# 
   706   003F18                     SMT1CPWL        equ	16152	;# 
   707   003F19                     SMT1CPWH        equ	16153	;# 
   708   003F1A                     SMT1CPWU        equ	16154	;# 
   709   003F1B                     SMT1PR          equ	16155	;# 
   710   003F1B                     SMT1PRL         equ	16155	;# 
   711   003F1C                     SMT1PRH         equ	16156	;# 
   712   003F1D                     SMT1PRU         equ	16157	;# 
   713   003F1E                     SMT1CON0        equ	16158	;# 
   714   003F1F                     SMT1CON1        equ	16159	;# 
   715   003F20                     SMT1STAT        equ	16160	;# 
   716   003F21                     SMT1CLK         equ	16161	;# 
   717   003F22                     SMT1SIG         equ	16162	;# 
   718   003F23                     SMT1WIN         equ	16163	;# 
   719   003F38                     NCO1ACC         equ	16184	;# 
   720   003F38                     NCO1ACCL        equ	16184	;# 
   721   003F39                     NCO1ACCH        equ	16185	;# 
   722   003F3A                     NCO1ACCU        equ	16186	;# 
   723   003F3B                     NCO1INC         equ	16187	;# 
   724   003F3B                     NCO1INCL        equ	16187	;# 
   725   003F3C                     NCO1INCH        equ	16188	;# 
   726   003F3D                     NCO1INCU        equ	16189	;# 
   727   003F3E                     NCO1CON         equ	16190	;# 
   728   003F3F                     NCO1CLK         equ	16191	;# 
   729   003F40                     CWG3CLK         equ	16192	;# 
   730   003F40                     CWG3CLKCON      equ	16192	;# 
   731   003F41                     CWG3ISM         equ	16193	;# 
   732   003F41                     CWG3DAT         equ	16193	;# 
   733   003F42                     CWG3DBR         equ	16194	;# 
   734   003F43                     CWG3DBF         equ	16195	;# 
   735   003F44                     CWG3CON0        equ	16196	;# 
   736   003F45                     CWG3CON1        equ	16197	;# 
   737   003F46                     CWG3AS0         equ	16198	;# 
   738   003F47                     CWG3AS1         equ	16199	;# 
   739   003F48                     CWG3STR         equ	16200	;# 
   740   003F49                     CWG2CLK         equ	16201	;# 
   741   003F49                     CWG2CLKCON      equ	16201	;# 
   742   003F4A                     CWG2ISM         equ	16202	;# 
   743   003F4A                     CWG2DAT         equ	16202	;# 
   744   003F4B                     CWG2DBR         equ	16203	;# 
   745   003F4C                     CWG2DBF         equ	16204	;# 
   746   003F4D                     CWG2CON0        equ	16205	;# 
   747   003F4E                     CWG2CON1        equ	16206	;# 
   748   003F4F                     CWG2AS0         equ	16207	;# 
   749   003F50                     CWG2AS1         equ	16208	;# 
   750   003F51                     CWG2STR         equ	16209	;# 
   751   003F52                     CWG1CLK         equ	16210	;# 
   752   003F52                     CWG1CLKCON      equ	16210	;# 
   753   003F53                     CWG1ISM         equ	16211	;# 
   754   003F53                     CWG1DAT         equ	16211	;# 
   755   003F54                     CWG1DBR         equ	16212	;# 
   756   003F55                     CWG1DBF         equ	16213	;# 
   757   003F56                     CWG1CON0        equ	16214	;# 
   758   003F57                     CWG1CON1        equ	16215	;# 
   759   003F58                     CWG1AS0         equ	16216	;# 
   760   003F59                     CWG1AS1         equ	16217	;# 
   761   003F5A                     CWG1STR         equ	16218	;# 
   762   003F5E                     CCPTMRS0        equ	16222	;# 
   763   003F5F                     CCPTMRS1        equ	16223	;# 
   764   003F60                     PWM8DC          equ	16224	;# 
   765   003F60                     PWM8DCL         equ	16224	;# 
   766   003F61                     PWM8DCH         equ	16225	;# 
   767   003F62                     PWM8CON         equ	16226	;# 
   768   003F64                     PWM7DC          equ	16228	;# 
   769   003F64                     PWM7DCL         equ	16228	;# 
   770   003F65                     PWM7DCH         equ	16229	;# 
   771   003F66                     PWM7CON         equ	16230	;# 
   772   003F68                     PWM6DC          equ	16232	;# 
   773   003F68                     PWM6DCL         equ	16232	;# 
   774   003F69                     PWM6DCH         equ	16233	;# 
   775   003F6A                     PWM6CON         equ	16234	;# 
   776   003F6C                     PWM5DC          equ	16236	;# 
   777   003F6C                     PWM5DCL         equ	16236	;# 
   778   003F6D                     PWM5DCH         equ	16237	;# 
   779   003F6E                     PWM5CON         equ	16238	;# 
   780   003F70                     CCPR4           equ	16240	;# 
   781   003F70                     CCPR4L          equ	16240	;# 
   782   003F71                     CCPR4H          equ	16241	;# 
   783   003F72                     CCP4CON         equ	16242	;# 
   784   003F73                     CCP4CAP         equ	16243	;# 
   785   003F74                     CCPR3           equ	16244	;# 
   786   003F74                     CCPR3L          equ	16244	;# 
   787   003F75                     CCPR3H          equ	16245	;# 
   788   003F76                     CCP3CON         equ	16246	;# 
   789   003F77                     CCP3CAP         equ	16247	;# 
   790   003F78                     CCPR2           equ	16248	;# 
   791   003F78                     CCPR2L          equ	16248	;# 
   792   003F79                     CCPR2H          equ	16249	;# 
   793   003F7A                     CCP2CON         equ	16250	;# 
   794   003F7B                     CCP2CAP         equ	16251	;# 
   795   003F7C                     CCPR1           equ	16252	;# 
   796   003F7C                     CCPR1L          equ	16252	;# 
   797   003F7D                     CCPR1H          equ	16253	;# 
   798   003F7E                     CCP1CON         equ	16254	;# 
   799   003F7F                     CCP1CAP         equ	16255	;# 
   800   003F92                     T6TMR           equ	16274	;# 
   801   003F92                     TMR6            equ	16274	;# 
   802   003F93                     T6PR            equ	16275	;# 
   803   003F93                     PR6             equ	16275	;# 
   804   003F94                     T6CON           equ	16276	;# 
   805   003F95                     T6HLT           equ	16277	;# 
   806   003F96                     T6CLKCON        equ	16278	;# 
   807   003F96                     T6CLK           equ	16278	;# 
   808   003F97                     T6RST           equ	16279	;# 
   809   003F98                     TMR5            equ	16280	;# 
   810   003F98                     TMR5L           equ	16280	;# 
   811   003F99                     TMR5H           equ	16281	;# 
   812   003F9A                     T5CON           equ	16282	;# 
   813   003F9A                     TMR5CON         equ	16282	;# 
   814   003F9B                     T5GCON          equ	16283	;# 
   815   003F9B                     TMR5GCON        equ	16283	;# 
   816   003F9C                     T5GATE          equ	16284	;# 
   817   003F9C                     TMR5GATE        equ	16284	;# 
   818   003F9D                     T5CLK           equ	16285	;# 
   819   003F9D                     TMR5CLK         equ	16285	;# 
   820   003F9D                     PR5             equ	16285	;# 
   821   003F9E                     T4TMR           equ	16286	;# 
   822   003F9E                     TMR4            equ	16286	;# 
   823   003F9F                     T4PR            equ	16287	;# 
   824   003F9F                     PR4             equ	16287	;# 
   825   003FA0                     T4CON           equ	16288	;# 
   826   003FA1                     T4HLT           equ	16289	;# 
   827   003FA2                     T4CLKCON        equ	16290	;# 
   828   003FA2                     T4CLK           equ	16290	;# 
   829   003FA3                     T4RST           equ	16291	;# 
   830   003FA4                     TMR3            equ	16292	;# 
   831   003FA4                     TMR3L           equ	16292	;# 
   832   003FA5                     TMR3H           equ	16293	;# 
   833   003FA6                     T3CON           equ	16294	;# 
   834   003FA6                     TMR3CON         equ	16294	;# 
   835   003FA7                     T3GCON          equ	16295	;# 
   836   003FA7                     TMR3GCON        equ	16295	;# 
   837   003FA8                     T3GATE          equ	16296	;# 
   838   003FA8                     TMR3GATE        equ	16296	;# 
   839   003FA9                     T3CLK           equ	16297	;# 
   840   003FA9                     TMR3CLK         equ	16297	;# 
   841   003FA9                     PR3             equ	16297	;# 
   842   003FAA                     T2TMR           equ	16298	;# 
   843   003FAA                     TMR2            equ	16298	;# 
   844   003FAB                     T2PR            equ	16299	;# 
   845   003FAB                     PR2             equ	16299	;# 
   846   003FAC                     T2CON           equ	16300	;# 
   847   003FAD                     T2HLT           equ	16301	;# 
   848   003FAE                     T2CLKCON        equ	16302	;# 
   849   003FAE                     T2CLK           equ	16302	;# 
   850   003FAF                     T2RST           equ	16303	;# 
   851   003FB0                     TMR1            equ	16304	;# 
   852   003FB0                     TMR1L           equ	16304	;# 
   853   003FB1                     TMR1H           equ	16305	;# 
   854   003FB2                     T1CON           equ	16306	;# 
   855   003FB2                     TMR1CON         equ	16306	;# 
   856   003FB3                     T1GCON          equ	16307	;# 
   857   003FB3                     TMR1GCON        equ	16307	;# 
   858   003FB4                     T1GATE          equ	16308	;# 
   859   003FB4                     TMR1GATE        equ	16308	;# 
   860   003FB5                     T1CLK           equ	16309	;# 
   861   003FB5                     TMR1CLK         equ	16309	;# 
   862   003FB5                     PR1             equ	16309	;# 
   863   003FB6                     TMR0L           equ	16310	;# 
   864   003FB6                     TMR0            equ	16310	;# 
   865   003FB7                     TMR0H           equ	16311	;# 
   866   003FB7                     PR0             equ	16311	;# 
   867   003FB8                     T0CON0          equ	16312	;# 
   868   003FB9                     T0CON1          equ	16313	;# 
   869   003FBA                     LATA            equ	16314	;# 
   870   003FBB                     LATB            equ	16315	;# 
   871   003FBC                     LATC            equ	16316	;# 
   872   003FC2                     TRISA           equ	16322	;# 
   873   003FC3                     TRISB           equ	16323	;# 
   874   003FC4                     TRISC           equ	16324	;# 
   875   003FCA                     PORTA           equ	16330	;# 
   876   003FCB                     PORTB           equ	16331	;# 
   877   003FCC                     PORTC           equ	16332	;# 
   878   003FCE                     PORTE           equ	16334	;# 
   879   003FD2                     INTCON0         equ	16338	;# 
   880   003FD3                     INTCON1         equ	16339	;# 
   881   003FD4                     IVTLOCK         equ	16340	;# 
   882   003FD5                     IVTBASE         equ	16341	;# 
   883   003FD5                     IVTBASEL        equ	16341	;# 
   884   003FD6                     IVTBASEH        equ	16342	;# 
   885   003FD7                     IVTBASEU        equ	16343	;# 
   886   003FD8                     STATUS          equ	16344	;# 
   887   003FD9                     FSR2            equ	16345	;# 
   888   003FD9                     FSR2L           equ	16345	;# 
   889   003FDA                     FSR2H           equ	16346	;# 
   890   003FDB                     PLUSW2          equ	16347	;# 
   891   003FDC                     PREINC2         equ	16348	;# 
   892   003FDD                     POSTDEC2        equ	16349	;# 
   893   003FDE                     POSTINC2        equ	16350	;# 
   894   003FDF                     INDF2           equ	16351	;# 
   895   003FE0                     BSR             equ	16352	;# 
   896   003FE1                     FSR1            equ	16353	;# 
   897   003FE1                     FSR1L           equ	16353	;# 
   898   003FE2                     FSR1H           equ	16354	;# 
   899   003FE3                     PLUSW1          equ	16355	;# 
   900   003FE4                     PREINC1         equ	16356	;# 
   901   003FE5                     POSTDEC1        equ	16357	;# 
   902   003FE6                     POSTINC1        equ	16358	;# 
   903   003FE7                     INDF1           equ	16359	;# 
   904   003FE8                     WREG            equ	16360	;# 
   905   003FE9                     FSR0            equ	16361	;# 
   906   003FE9                     FSR0L           equ	16361	;# 
   907   003FEA                     FSR0H           equ	16362	;# 
   908   003FEB                     PLUSW0          equ	16363	;# 
   909   003FEC                     PREINC0         equ	16364	;# 
   910   003FED                     POSTDEC0        equ	16365	;# 
   911   003FEE                     POSTINC0        equ	16366	;# 
   912   003FEF                     INDF0           equ	16367	;# 
   913   003FF0                     PCON0           equ	16368	;# 
   914   003FF1                     PCON1           equ	16369	;# 
   915   003FF3                     PROD            equ	16371	;# 
   916   003FF3                     PRODL           equ	16371	;# 
   917   003FF4                     PRODH           equ	16372	;# 
   918   003FF5                     TABLAT          equ	16373	;# 
   919   003FF6                     TBLPTR          equ	16374	;# 
   920   003FF6                     TBLPTRL         equ	16374	;# 
   921   003FF7                     TBLPTRH         equ	16375	;# 
   922   003FF8                     TBLPTRU         equ	16376	;# 
   923   003FF9                     PCLAT           equ	16377	;# 
   924   003FF9                     PCL             equ	16377	;# 
   925   003FFA                     PCLATH          equ	16378	;# 
   926   003FFB                     PCLATU          equ	16379	;# 
   927   003FFC                     STKPTR          equ	16380	;# 
   928   003FFD                     TOS             equ	16381	;# 
   929   003FFD                     TOSL            equ	16381	;# 
   930   003FFE                     TOSH            equ	16382	;# 
   931   003FFF                     TOSU            equ	16383	;# 
   932   003880                     STATUS_CSHAD    equ	14464	;# 
   933   003881                     WREG_CSHAD      equ	14465	;# 
   934   003882                     BSR_CSHAD       equ	14466	;# 
   935   003883                     SHADCON         equ	14467	;# 
   936   003884                     STATUS_SHAD     equ	14468	;# 
   937   003885                     WREG_SHAD       equ	14469	;# 
   938   003886                     BSR_SHAD        equ	14470	;# 
   939   003887                     PCLATH_SHAD     equ	14471	;# 
   940   003888                     PCLATU_SHAD     equ	14472	;# 
   941   003889                     FSR0SH          equ	14473	;# 
   942   003889                     FSR0L_SHAD      equ	14473	;# 
   943   00388A                     FSR0H_SHAD      equ	14474	;# 
   944   00388B                     FSR1SH          equ	14475	;# 
   945   00388B                     FSR1L_SHAD      equ	14475	;# 
   946   00388C                     FSR1H_SHAD      equ	14476	;# 
   947   00388D                     FSR2SH          equ	14477	;# 
   948   00388D                     FSR2L_SHAD      equ	14477	;# 
   949   00388E                     FSR2H_SHAD      equ	14478	;# 
   950   00388F                     PRODSH          equ	14479	;# 
   951   00388F                     PRODL_SHAD      equ	14479	;# 
   952   003890                     PRODH_SHAD      equ	14480	;# 
   953   00389D                     IVTADL          equ	14493	;# 
   954   00389E                     IVTADH          equ	14494	;# 
   955   00389F                     IVTADU          equ	14495	;# 
   956   00395B                     WDTCON0         equ	14683	;# 
   957   00395C                     WDTCON1         equ	14684	;# 
   958   00395D                     WDTPSL          equ	14685	;# 
   959   00395E                     WDTPSH          equ	14686	;# 
   960   00395F                     WDTTMR          equ	14687	;# 
   961   003960                     CRCDATA         equ	14688	;# 
   962   003960                     CRCDATL         equ	14688	;# 
   963   003961                     CRCDATH         equ	14689	;# 
   964   003962                     CRCACC          equ	14690	;# 
   965   003962                     CRCACCL         equ	14690	;# 
   966   003963                     CRCACCH         equ	14691	;# 
   967   003964                     CRCSHFT         equ	14692	;# 
   968   003964                     CRCSHIFTL       equ	14692	;# 
   969   003965                     CRCSHIFTH       equ	14693	;# 
   970   003966                     CRCXOR          equ	14694	;# 
   971   003966                     CRCXORL         equ	14694	;# 
   972   003967                     CRCXORH         equ	14695	;# 
   973   003968                     CRCCON0         equ	14696	;# 
   974   003969                     CRCCON1         equ	14697	;# 
   975   003976                     SCANLADR        equ	14710	;# 
   976   003976                     SCANLADRL       equ	14710	;# 
   977   003977                     SCANLADRH       equ	14711	;# 
   978   003978                     SCANLADRU       equ	14712	;# 
   979   003979                     SCANHADR        equ	14713	;# 
   980   003979                     SCANHADRL       equ	14713	;# 
   981   00397A                     SCANHADRH       equ	14714	;# 
   982   00397B                     SCANHADRU       equ	14715	;# 
   983   00397C                     SCANCON0        equ	14716	;# 
   984   00397D                     SCANTRIG        equ	14717	;# 
   985   003980                     IPR0            equ	14720	;# 
   986   003981                     IPR1            equ	14721	;# 
   987   003982                     IPR2            equ	14722	;# 
   988   003983                     IPR3            equ	14723	;# 
   989   003984                     IPR4            equ	14724	;# 
   990   003985                     IPR5            equ	14725	;# 
   991   003986                     IPR6            equ	14726	;# 
   992   003987                     IPR7            equ	14727	;# 
   993   003988                     IPR8            equ	14728	;# 
   994   003989                     IPR9            equ	14729	;# 
   995   00398A                     IPR10           equ	14730	;# 
   996   003990                     PIE0            equ	14736	;# 
   997   003991                     PIE1            equ	14737	;# 
   998   003992                     PIE2            equ	14738	;# 
   999   003993                     PIE3            equ	14739	;# 
  1000   003994                     PIE4            equ	14740	;# 
  1001   003995                     PIE5            equ	14741	;# 
  1002   003996                     PIE6            equ	14742	;# 
  1003   003997                     PIE7            equ	14743	;# 
  1004   003998                     PIE8            equ	14744	;# 
  1005   003999                     PIE9            equ	14745	;# 
  1006   00399A                     PIE10           equ	14746	;# 
  1007   0039A0                     PIR0            equ	14752	;# 
  1008   0039A1                     PIR1            equ	14753	;# 
  1009   0039A2                     PIR2            equ	14754	;# 
  1010   0039A3                     PIR3            equ	14755	;# 
  1011   0039A4                     PIR4            equ	14756	;# 
  1012   0039A5                     PIR5            equ	14757	;# 
  1013   0039A6                     PIR6            equ	14758	;# 
  1014   0039A7                     PIR7            equ	14759	;# 
  1015   0039A8                     PIR8            equ	14760	;# 
  1016   0039A9                     PIR9            equ	14761	;# 
  1017   0039AA                     PIR10           equ	14762	;# 
  1018   0039C0                     PMD0            equ	14784	;# 
  1019   0039C1                     PMD1            equ	14785	;# 
  1020   0039C2                     PMD2            equ	14786	;# 
  1021   0039C3                     PMD3            equ	14787	;# 
  1022   0039C4                     PMD4            equ	14788	;# 
  1023   0039C5                     PMD5            equ	14789	;# 
  1024   0039C6                     PMD6            equ	14790	;# 
  1025   0039C7                     PMD7            equ	14791	;# 
  1026   0039D0                     BORCON          equ	14800	;# 
  1027   0039D1                     VREGCON         equ	14801	;# 
  1028   0039D8                     CPUDOZE         equ	14808	;# 
  1029   0039D9                     OSCCON1         equ	14809	;# 
  1030   0039DA                     OSCCON2         equ	14810	;# 
  1031   0039DB                     OSCCON3         equ	14811	;# 
  1032   0039DC                     OSCSTAT         equ	14812	;# 
  1033   0039DC                     OSCSTAT1        equ	14812	;# 
  1034   0039DD                     OSCEN           equ	14813	;# 
  1035   0039DE                     OSCTUNE         equ	14814	;# 
  1036   0039DF                     OSCFRQ          equ	14815	;# 
  1037   0039E0                     NVMADRL         equ	14816	;# 
  1038   0039E1                     NVMADRH         equ	14817	;# 
  1039   0039E3                     NVMDAT          equ	14819	;# 
  1040   0039E5                     NVMCON1         equ	14821	;# 
  1041   0039E6                     NVMCON2         equ	14822	;# 
  1042   0039EF                     PRLOCK          equ	14831	;# 
  1043   0039F1                     ISRPR           equ	14833	;# 
  1044   0039F2                     MAINPR          equ	14834	;# 
  1045   0039F3                     DMA1PR          equ	14835	;# 
  1046   0039F4                     DMA2PR          equ	14836	;# 
  1047   0039F7                     SCANPR          equ	14839	;# 
  1048   003A00                     RA0PPS          equ	14848	;# 
  1049   003A01                     RA1PPS          equ	14849	;# 
  1050   003A02                     RA2PPS          equ	14850	;# 
  1051   003A03                     RA3PPS          equ	14851	;# 
  1052   003A04                     RA4PPS          equ	14852	;# 
  1053   003A05                     RA5PPS          equ	14853	;# 
  1054   003A06                     RA6PPS          equ	14854	;# 
  1055   003A07                     RA7PPS          equ	14855	;# 
  1056   003A08                     RB0PPS          equ	14856	;# 
  1057   003A09                     RB1PPS          equ	14857	;# 
  1058   003A0A                     RB2PPS          equ	14858	;# 
  1059   003A0B                     RB3PPS          equ	14859	;# 
  1060   003A0C                     RB4PPS          equ	14860	;# 
  1061   003A0D                     RB5PPS          equ	14861	;# 
  1062   003A0E                     RB6PPS          equ	14862	;# 
  1063   003A0F                     RB7PPS          equ	14863	;# 
  1064   003A10                     RC0PPS          equ	14864	;# 
  1065   003A11                     RC1PPS          equ	14865	;# 
  1066   003A12                     RC2PPS          equ	14866	;# 
  1067   003A13                     RC3PPS          equ	14867	;# 
  1068   003A14                     RC4PPS          equ	14868	;# 
  1069   003A15                     RC5PPS          equ	14869	;# 
  1070   003A16                     RC6PPS          equ	14870	;# 
  1071   003A17                     RC7PPS          equ	14871	;# 
  1072   003A40                     ANSELA          equ	14912	;# 
  1073   003A41                     WPUA            equ	14913	;# 
  1074   003A42                     ODCONA          equ	14914	;# 
  1075   003A43                     SLRCONA         equ	14915	;# 
  1076   003A44                     INLVLA          equ	14916	;# 
  1077   003A45                     IOCAP           equ	14917	;# 
  1078   003A46                     IOCAN           equ	14918	;# 
  1079   003A47                     IOCAF           equ	14919	;# 
  1080   003A48                     CCDPA           equ	14920	;# 
  1081   003A49                     CCDNA           equ	14921	;# 
  1082   003A50                     ANSELB          equ	14928	;# 
  1083   003A51                     WPUB            equ	14929	;# 
  1084   003A52                     ODCONB          equ	14930	;# 
  1085   003A53                     SLRCONB         equ	14931	;# 
  1086   003A54                     INLVLB          equ	14932	;# 
  1087   003A55                     IOCBP           equ	14933	;# 
  1088   003A56                     IOCBN           equ	14934	;# 
  1089   003A57                     IOCBF           equ	14935	;# 
  1090   003A58                     CCDPB           equ	14936	;# 
  1091   003A59                     CCDNB           equ	14937	;# 
  1092   003A5A                     RB1I2C          equ	14938	;# 
  1093   003A5B                     RB2I2C          equ	14939	;# 
  1094   003A60                     ANSELC          equ	14944	;# 
  1095   003A61                     WPUC            equ	14945	;# 
  1096   003A62                     ODCONC          equ	14946	;# 
  1097   003A63                     SLRCONC         equ	14947	;# 
  1098   003A64                     INLVLC          equ	14948	;# 
  1099   003A65                     IOCCP           equ	14949	;# 
  1100   003A66                     IOCCN           equ	14950	;# 
  1101   003A67                     IOCCF           equ	14951	;# 
  1102   003A68                     CCDPC           equ	14952	;# 
  1103   003A69                     CCDNC           equ	14953	;# 
  1104   003A6A                     RC3I2C          equ	14954	;# 
  1105   003A6B                     RC4I2C          equ	14955	;# 
  1106   003A81                     WPUE            equ	14977	;# 
  1107   003A84                     INLVLE          equ	14980	;# 
  1108   003A85                     IOCEP           equ	14981	;# 
  1109   003A86                     IOCEN           equ	14982	;# 
  1110   003A87                     IOCEF           equ	14983	;# 
  1111   003ABE                     CCDCON          equ	15038	;# 
  1112   003ABF                     PPSLOCK         equ	15039	;# 
  1113   003AC0                     INT0PPS         equ	15040	;# 
  1114   003AC1                     INT1PPS         equ	15041	;# 
  1115   003AC2                     INT2PPS         equ	15042	;# 
  1116   003AC3                     T0CKIPPS        equ	15043	;# 
  1117   003AC4                     T1CKIPPS        equ	15044	;# 
  1118   003AC5                     T1GPPS          equ	15045	;# 
  1119   003AC6                     T3CKIPPS        equ	15046	;# 
  1120   003AC7                     T3GPPS          equ	15047	;# 
  1121   003AC8                     T5CKIPPS        equ	15048	;# 
  1122   003AC9                     T5GPPS          equ	15049	;# 
  1123   003ACA                     T2INPPS         equ	15050	;# 
  1124   003ACB                     T4INPPS         equ	15051	;# 
  1125   003ACC                     T6INPPS         equ	15052	;# 
  1126   003ACD                     CCP1PPS         equ	15053	;# 
  1127   003ACE                     CCP2PPS         equ	15054	;# 
  1128   003ACF                     CCP3PPS         equ	15055	;# 
  1129   003AD0                     CCP4PPS         equ	15056	;# 
  1130   003AD1                     SMT1WINPPS      equ	15057	;# 
  1131   003AD2                     SMT1SIGPPS      equ	15058	;# 
  1132   003AD3                     CWG1INPPS       equ	15059	;# 
  1133   003AD4                     CWG2INPPS       equ	15060	;# 
  1134   003AD5                     CWG3INPPS       equ	15061	;# 
  1135   003AD6                     MD1CARLPPS      equ	15062	;# 
  1136   003AD7                     MD1CARHPPS      equ	15063	;# 
  1137   003AD8                     MD1SRCPPS       equ	15064	;# 
  1138   003AD9                     CLCIN0PPS       equ	15065	;# 
  1139   003ADA                     CLCIN1PPS       equ	15066	;# 
  1140   003ADB                     CLCIN2PPS       equ	15067	;# 
  1141   003ADC                     CLCIN3PPS       equ	15068	;# 
  1142   003ADD                     ADACTPPS        equ	15069	;# 
  1143   003ADE                     SPI1SCKPPS      equ	15070	;# 
  1144   003ADF                     SPI1SDIPPS      equ	15071	;# 
  1145   003AE0                     SPI1SSPPS       equ	15072	;# 
  1146   003AE1                     I2C1SCLPPS      equ	15073	;# 
  1147   003AE2                     I2C1SDAPPS      equ	15074	;# 
  1148   003AE3                     I2C2SCLPPS      equ	15075	;# 
  1149   003AE4                     I2C2SDAPPS      equ	15076	;# 
  1150   003AE5                     U1RXPPS         equ	15077	;# 
  1151   003AE6                     U1CTSPPS        equ	15078	;# 
  1152   003AE8                     U2RXPPS         equ	15080	;# 
  1153   003AE9                     U2CTSPPS        equ	15081	;# 
  1154   003BC9                     DMA2BUF         equ	15305	;# 
  1155   003BCA                     DMA2DCNT        equ	15306	;# 
  1156   003BCA                     DMA2DCNTL       equ	15306	;# 
  1157   003BCB                     DMA2DCNTH       equ	15307	;# 
  1158   003BCC                     DMA2DPTR        equ	15308	;# 
  1159   003BCC                     DMA2DPTRL       equ	15308	;# 
  1160   003BCD                     DMA2DPTRH       equ	15309	;# 
  1161   003BCE                     DMA2DSZ         equ	15310	;# 
  1162   003BCE                     DMA2DSZL        equ	15310	;# 
  1163   003BCF                     DMA2DSZH        equ	15311	;# 
  1164   003BD0                     DMA2DSA         equ	15312	;# 
  1165   003BD0                     DMA2DSAL        equ	15312	;# 
  1166   003BD1                     DMA2DSAH        equ	15313	;# 
  1167   003BD2                     DMA2SCNT        equ	15314	;# 
  1168   003BD2                     DMA2SCNTL       equ	15314	;# 
  1169   003BD3                     DMA2SCNTH       equ	15315	;# 
  1170   003BD4                     DMA2SPTR        equ	15316	;# 
  1171   003BD4                     DMA2SPTRL       equ	15316	;# 
  1172   003BD5                     DMA2SPTRH       equ	15317	;# 
  1173   003BD6                     DMA2SPTRU       equ	15318	;# 
  1174   003BD7                     DMA2SSZ         equ	15319	;# 
  1175   003BD7                     DMA2SSZL        equ	15319	;# 
  1176   003BD8                     DMA2SSZH        equ	15320	;# 
  1177   003BD9                     DMA2SSA         equ	15321	;# 
  1178   003BD9                     DMA2SSAL        equ	15321	;# 
  1179   003BDA                     DMA2SSAH        equ	15322	;# 
  1180   003BDB                     DMA2SSAU        equ	15323	;# 
  1181   003BDC                     DMA2CON0        equ	15324	;# 
  1182   003BDD                     DMA2CON1        equ	15325	;# 
  1183   003BDE                     DMA2AIRQ        equ	15326	;# 
  1184   003BDF                     DMA2SIRQ        equ	15327	;# 
  1185   003BE9                     DMA1BUF         equ	15337	;# 
  1186   003BEA                     DMA1DCNT        equ	15338	;# 
  1187   003BEA                     DMA1DCNTL       equ	15338	;# 
  1188   003BEB                     DMA1DCNTH       equ	15339	;# 
  1189   003BEC                     DMA1DPTR        equ	15340	;# 
  1190   003BEC                     DMA1DPTRL       equ	15340	;# 
  1191   003BED                     DMA1DPTRH       equ	15341	;# 
  1192   003BEE                     DMA1DSZ         equ	15342	;# 
  1193   003BEE                     DMA1DSZL        equ	15342	;# 
  1194   003BEF                     DMA1DSZH        equ	15343	;# 
  1195   003BF0                     DMA1DSA         equ	15344	;# 
  1196   003BF0                     DMA1DSAL        equ	15344	;# 
  1197   003BF1                     DMA1DSAH        equ	15345	;# 
  1198   003BF2                     DMA1SCNT        equ	15346	;# 
  1199   003BF2                     DMA1SCNTL       equ	15346	;# 
  1200   003BF3                     DMA1SCNTH       equ	15347	;# 
  1201   003BF4                     DMA1SPTR        equ	15348	;# 
  1202   003BF4                     DMA1SPTRL       equ	15348	;# 
  1203   003BF5                     DMA1SPTRH       equ	15349	;# 
  1204   003BF6                     DMA1SPTRU       equ	15350	;# 
  1205   003BF7                     DMA1SSZ         equ	15351	;# 
  1206   003BF7                     DMA1SSZL        equ	15351	;# 
  1207   003BF8                     DMA1SSZH        equ	15352	;# 
  1208   003BF9                     DMA1SSA         equ	15353	;# 
  1209   003BF9                     DMA1SSAL        equ	15353	;# 
  1210   003BFA                     DMA1SSAH        equ	15354	;# 
  1211   003BFB                     DMA1SSAU        equ	15355	;# 
  1212   003BFC                     DMA1CON0        equ	15356	;# 
  1213   003BFD                     DMA1CON1        equ	15357	;# 
  1214   003BFE                     DMA1AIRQ        equ	15358	;# 
  1215   003BFF                     DMA1SIRQ        equ	15359	;# 
  1216   003C56                     CLC4CON         equ	15446	;# 
  1217   003C57                     CLC4POL         equ	15447	;# 
  1218   003C58                     CLC4SEL0        equ	15448	;# 
  1219   003C59                     CLC4SEL1        equ	15449	;# 
  1220   003C5A                     CLC4SEL2        equ	15450	;# 
  1221   003C5B                     CLC4SEL3        equ	15451	;# 
  1222   003C5C                     CLC4GLS0        equ	15452	;# 
  1223   003C5D                     CLC4GLS1        equ	15453	;# 
  1224   003C5E                     CLC4GLS2        equ	15454	;# 
  1225   003C5F                     CLC4GLS3        equ	15455	;# 
  1226   003C60                     CLC3CON         equ	15456	;# 
  1227   003C61                     CLC3POL         equ	15457	;# 
  1228   003C62                     CLC3SEL0        equ	15458	;# 
  1229   003C63                     CLC3SEL1        equ	15459	;# 
  1230   003C64                     CLC3SEL2        equ	15460	;# 
  1231   003C65                     CLC3SEL3        equ	15461	;# 
  1232   003C66                     CLC3GLS0        equ	15462	;# 
  1233   003C67                     CLC3GLS1        equ	15463	;# 
  1234   003C68                     CLC3GLS2        equ	15464	;# 
  1235   003C69                     CLC3GLS3        equ	15465	;# 
  1236   003C6A                     CLC2CON         equ	15466	;# 
  1237   003C6B                     CLC2POL         equ	15467	;# 
  1238   003C6C                     CLC2SEL0        equ	15468	;# 
  1239   003C6D                     CLC2SEL1        equ	15469	;# 
  1240   003C6E                     CLC2SEL2        equ	15470	;# 
  1241   003C6F                     CLC2SEL3        equ	15471	;# 
  1242   003C70                     CLC2GLS0        equ	15472	;# 
  1243   003C71                     CLC2GLS1        equ	15473	;# 
  1244   003C72                     CLC2GLS2        equ	15474	;# 
  1245   003C73                     CLC2GLS3        equ	15475	;# 
  1246   003C74                     CLC1CON         equ	15476	;# 
  1247   003C75                     CLC1POL         equ	15477	;# 
  1248   003C76                     CLC1SEL0        equ	15478	;# 
  1249   003C77                     CLC1SEL1        equ	15479	;# 
  1250   003C78                     CLC1SEL2        equ	15480	;# 
  1251   003C79                     CLC1SEL3        equ	15481	;# 
  1252   003C7A                     CLC1GLS0        equ	15482	;# 
  1253   003C7B                     CLC1GLS1        equ	15483	;# 
  1254   003C7C                     CLC1GLS2        equ	15484	;# 
  1255   003C7D                     CLC1GLS3        equ	15485	;# 
  1256   003C7E                     CLCDATA0        equ	15486	;# 
  1257   003CE5                     CLKRCON         equ	15589	;# 
  1258   003CE6                     CLKRCLK         equ	15590	;# 
  1259   003CFA                     MD1CON0         equ	15610	;# 
  1260   003CFB                     MD1CON1         equ	15611	;# 
  1261   003CFC                     MD1SRC          equ	15612	;# 
  1262   003CFD                     MD1CARL         equ	15613	;# 
  1263   003CFE                     MD1CARH         equ	15614	;# 
  1264   003D10                     SPI1RXB         equ	15632	;# 
  1265   003D11                     SPI1TXB         equ	15633	;# 
  1266   003D12                     SPI1TCNT        equ	15634	;# 
  1267   003D12                     SPI1TCNTL       equ	15634	;# 
  1268   003D13                     SPI1TCNTH       equ	15635	;# 
  1269   003D14                     SPI1CON0        equ	15636	;# 
  1270   003D15                     SPI1CON1        equ	15637	;# 
  1271   003D16                     SPI1CON2        equ	15638	;# 
  1272   003D17                     SPI1STATUS      equ	15639	;# 
  1273   003D18                     SPI1TWIDTH      equ	15640	;# 
  1274   003D19                     SPI1BAUD        equ	15641	;# 
  1275   003D1A                     SPI1INTF        equ	15642	;# 
  1276   003D1B                     SPI1INTE        equ	15643	;# 
  1277   003D1C                     SPI1CLK         equ	15644	;# 
  1278   003D54                     I2C2RXB         equ	15700	;# 
  1279   003D55                     I2C2TXB         equ	15701	;# 
  1280   003D56                     I2C2CNT         equ	15702	;# 
  1281   003D57                     I2C2ADB0        equ	15703	;# 
  1282   003D58                     I2C2ADB1        equ	15704	;# 
  1283   003D59                     I2C2ADR0        equ	15705	;# 
  1284   003D5A                     I2C2ADR1        equ	15706	;# 
  1285   003D5B                     I2C2ADR2        equ	15707	;# 
  1286   003D5C                     I2C2ADR3        equ	15708	;# 
  1287   003D5D                     I2C2CON0        equ	15709	;# 
  1288   003D5E                     I2C2CON1        equ	15710	;# 
  1289   003D5F                     I2C2CON2        equ	15711	;# 
  1290   003D60                     I2C2ERR         equ	15712	;# 
  1291   003D61                     I2C2STAT0       equ	15713	;# 
  1292   003D62                     I2C2STAT1       equ	15714	;# 
  1293   003D63                     I2C2PIR         equ	15715	;# 
  1294   003D64                     I2C2PIE         equ	15716	;# 
  1295   003D65                     I2C2CLK         equ	15717	;# 
  1296   003D66                     I2C2BTO         equ	15718	;# 
  1297   003D6A                     I2C1RXB         equ	15722	;# 
  1298   003D6B                     I2C1TXB         equ	15723	;# 
  1299   003D6C                     I2C1CNT         equ	15724	;# 
  1300   003D6D                     I2C1ADB0        equ	15725	;# 
  1301   003D6E                     I2C1ADB1        equ	15726	;# 
  1302   003D6F                     I2C1ADR0        equ	15727	;# 
  1303   003D70                     I2C1ADR1        equ	15728	;# 
  1304   003D71                     I2C1ADR2        equ	15729	;# 
  1305   003D72                     I2C1ADR3        equ	15730	;# 
  1306   003D73                     I2C1CON0        equ	15731	;# 
  1307   003D74                     I2C1CON1        equ	15732	;# 
  1308   003D75                     I2C1CON2        equ	15733	;# 
  1309   003D76                     I2C1ERR         equ	15734	;# 
  1310   003D77                     I2C1STAT0       equ	15735	;# 
  1311   003D78                     I2C1STAT1       equ	15736	;# 
  1312   003D79                     I2C1PIR         equ	15737	;# 
  1313   003D7A                     I2C1PIE         equ	15738	;# 
  1314   003D7B                     I2C1CLK         equ	15739	;# 
  1315   003D7C                     I2C1BTO         equ	15740	;# 
  1316   003DD0                     U2RXB           equ	15824	;# 
  1317   003DD0                     U2RXBL          equ	15824	;# 
  1318   003DD2                     U2TXB           equ	15826	;# 
  1319   003DD2                     U2TXBL          equ	15826	;# 
  1320   003DD4                     U2P1            equ	15828	;# 
  1321   003DD4                     U2P1L           equ	15828	;# 
  1322   003DD6                     U2P2            equ	15830	;# 
  1323   003DD6                     U2P2L           equ	15830	;# 
  1324   003DD8                     U2P3            equ	15832	;# 
  1325   003DD8                     U2P3L           equ	15832	;# 
  1326   003DDA                     U2CON0          equ	15834	;# 
  1327   003DDB                     U2CON1          equ	15835	;# 
  1328   003DDC                     U2CON2          equ	15836	;# 
  1329   003DDD                     U2BRG           equ	15837	;# 
  1330   003DDD                     U2BRGL          equ	15837	;# 
  1331   003DDE                     U2BRGH          equ	15838	;# 
  1332   003DDF                     U2FIFO          equ	15839	;# 
  1333   003DE0                     U2UIR           equ	15840	;# 
  1334   003DE1                     U2ERRIR         equ	15841	;# 
  1335   003DE2                     U2ERRIE         equ	15842	;# 
  1336   003DE8                     U1RXB           equ	15848	;# 
  1337   003DE8                     U1RXBL          equ	15848	;# 
  1338   003DE9                     U1RXCHK         equ	15849	;# 
  1339   003DEA                     U1TXB           equ	15850	;# 
  1340   003DEA                     U1TXBL          equ	15850	;# 
  1341   003DEB                     U1TXCHK         equ	15851	;# 
  1342   003DEC                     U1P1            equ	15852	;# 
  1343   003DEC                     U1P1L           equ	15852	;# 
  1344   003DED                     U1P1H           equ	15853	;# 
  1345   003DEE                     U1P2            equ	15854	;# 
  1346   003DEE                     U1P2L           equ	15854	;# 
  1347   003DEF                     U1P2H           equ	15855	;# 
  1348   003DF0                     U1P3            equ	15856	;# 
  1349   003DF0                     U1P3L           equ	15856	;# 
  1350   003DF1                     U1P3H           equ	15857	;# 
  1351   003DF2                     U1CON0          equ	15858	;# 
  1352   003DF3                     U1CON1          equ	15859	;# 
  1353   003DF4                     U1CON2          equ	15860	;# 
  1354   003DF5                     U1BRG           equ	15861	;# 
  1355   003DF5                     U1BRGL          equ	15861	;# 
  1356   003DF6                     U1BRGH          equ	15862	;# 
  1357   003DF7                     U1FIFO          equ	15863	;# 
  1358   003DF8                     U1UIR           equ	15864	;# 
  1359   003DF9                     U1ERRIR         equ	15865	;# 
  1360   003DFA                     U1ERRIE         equ	15866	;# 
  1361   003E9C                     DAC1CON1        equ	16028	;# 
  1362   003E9E                     DAC1CON0        equ	16030	;# 
  1363   003EB8                     CM2CON0         equ	16056	;# 
  1364   003EB9                     CM2CON1         equ	16057	;# 
  1365   003EBA                     CM2NCH          equ	16058	;# 
  1366   003EBB                     CM2PCH          equ	16059	;# 
  1367   003EBC                     CM1CON0         equ	16060	;# 
  1368   003EBD                     CM1CON1         equ	16061	;# 
  1369   003EBE                     CM1NCH          equ	16062	;# 
  1370   003EBF                     CM1PCH          equ	16063	;# 
  1371   003EC0                     CMOUT           equ	16064	;# 
  1372   003EC1                     FVRCON          equ	16065	;# 
  1373   003EC3                     ZCDCON          equ	16067	;# 
  1374   003EC9                     HLVDCON0        equ	16073	;# 
  1375   003ECA                     HLVDCON1        equ	16074	;# 
  1376   003ED7                     ADCP            equ	16087	;# 
  1377   003EDE                     ADLTH           equ	16094	;# 
  1378   003EDE                     ADLTHL          equ	16094	;# 
  1379   003EDF                     ADLTHH          equ	16095	;# 
  1380   003EE0                     ADUTH           equ	16096	;# 
  1381   003EE0                     ADUTHL          equ	16096	;# 
  1382   003EE1                     ADUTHH          equ	16097	;# 
  1383   003EE2                     ADERR           equ	16098	;# 
  1384   003EE2                     ADERRL          equ	16098	;# 
  1385   003EE3                     ADERRH          equ	16099	;# 
  1386   003EE4                     ADSTPT          equ	16100	;# 
  1387   003EE4                     ADSTPTL         equ	16100	;# 
  1388   003EE5                     ADSTPTH         equ	16101	;# 
  1389   003EE6                     ADFLTR          equ	16102	;# 
  1390   003EE6                     ADFLTRL         equ	16102	;# 
  1391   003EE7                     ADFLTRH         equ	16103	;# 
  1392   003EE8                     ADACC           equ	16104	;# 
  1393   003EE8                     ADACCL          equ	16104	;# 
  1394   003EE9                     ADACCH          equ	16105	;# 
  1395   003EEA                     ADACCU          equ	16106	;# 
  1396   003EEB                     ADCNT           equ	16107	;# 
  1397   003EEC                     ADRPT           equ	16108	;# 
  1398   003EED                     ADPREV          equ	16109	;# 
  1399   003EED                     ADPREVL         equ	16109	;# 
  1400   003EEE                     ADPREVH         equ	16110	;# 
  1401   003EEF                     ADRES           equ	16111	;# 
  1402   003EEF                     ADRESL          equ	16111	;# 
  1403   003EF0                     ADRESH          equ	16112	;# 
  1404   003EF1                     ADPCH           equ	16113	;# 
  1405   003EF3                     ADACQ           equ	16115	;# 
  1406   003EF3                     ADACQL          equ	16115	;# 
  1407   003EF4                     ADACQH          equ	16116	;# 
  1408   003EF5                     ADCAP           equ	16117	;# 
  1409   003EF6                     ADPRE           equ	16118	;# 
  1410   003EF6                     ADPREL          equ	16118	;# 
  1411   003EF7                     ADPREH          equ	16119	;# 
  1412   003EF8                     ADCON0          equ	16120	;# 
  1413   003EF9                     ADCON1          equ	16121	;# 
  1414   003EFA                     ADCON2          equ	16122	;# 
  1415   003EFB                     ADCON3          equ	16123	;# 
  1416   003EFC                     ADSTAT          equ	16124	;# 
  1417   003EFD                     ADREF           equ	16125	;# 
  1418   003EFE                     ADACT           equ	16126	;# 
  1419   003EFF                     ADCLK           equ	16127	;# 
  1420   003F12                     SMT1TMR         equ	16146	;# 
  1421   003F12                     SMT1TMRL        equ	16146	;# 
  1422   003F13                     SMT1TMRH        equ	16147	;# 
  1423   003F14                     SMT1TMRU        equ	16148	;# 
  1424   003F15                     SMT1CPR         equ	16149	;# 
  1425   003F15                     SMT1CPRL        equ	16149	;# 
  1426   003F16                     SMT1CPRH        equ	16150	;# 
  1427   003F17                     SMT1CPRU        equ	16151	;# 
  1428   003F18                     SMT1CPW         equ	16152	;# 
  1429   003F18                     SMT1CPWL        equ	16152	;# 
  1430   003F19                     SMT1CPWH        equ	16153	;# 
  1431   003F1A                     SMT1CPWU        equ	16154	;# 
  1432   003F1B                     SMT1PR          equ	16155	;# 
  1433   003F1B                     SMT1PRL         equ	16155	;# 
  1434   003F1C                     SMT1PRH         equ	16156	;# 
  1435   003F1D                     SMT1PRU         equ	16157	;# 
  1436   003F1E                     SMT1CON0        equ	16158	;# 
  1437   003F1F                     SMT1CON1        equ	16159	;# 
  1438   003F20                     SMT1STAT        equ	16160	;# 
  1439   003F21                     SMT1CLK         equ	16161	;# 
  1440   003F22                     SMT1SIG         equ	16162	;# 
  1441   003F23                     SMT1WIN         equ	16163	;# 
  1442   003F38                     NCO1ACC         equ	16184	;# 
  1443   003F38                     NCO1ACCL        equ	16184	;# 
  1444   003F39                     NCO1ACCH        equ	16185	;# 
  1445   003F3A                     NCO1ACCU        equ	16186	;# 
  1446   003F3B                     NCO1INC         equ	16187	;# 
  1447   003F3B                     NCO1INCL        equ	16187	;# 
  1448   003F3C                     NCO1INCH        equ	16188	;# 
  1449   003F3D                     NCO1INCU        equ	16189	;# 
  1450   003F3E                     NCO1CON         equ	16190	;# 
  1451   003F3F                     NCO1CLK         equ	16191	;# 
  1452   003F40                     CWG3CLK         equ	16192	;# 
  1453   003F40                     CWG3CLKCON      equ	16192	;# 
  1454   003F41                     CWG3ISM         equ	16193	;# 
  1455   003F41                     CWG3DAT         equ	16193	;# 
  1456   003F42                     CWG3DBR         equ	16194	;# 
  1457   003F43                     CWG3DBF         equ	16195	;# 
  1458   003F44                     CWG3CON0        equ	16196	;# 
  1459   003F45                     CWG3CON1        equ	16197	;# 
  1460   003F46                     CWG3AS0         equ	16198	;# 
  1461   003F47                     CWG3AS1         equ	16199	;# 
  1462   003F48                     CWG3STR         equ	16200	;# 
  1463   003F49                     CWG2CLK         equ	16201	;# 
  1464   003F49                     CWG2CLKCON      equ	16201	;# 
  1465   003F4A                     CWG2ISM         equ	16202	;# 
  1466   003F4A                     CWG2DAT         equ	16202	;# 
  1467   003F4B                     CWG2DBR         equ	16203	;# 
  1468   003F4C                     CWG2DBF         equ	16204	;# 
  1469   003F4D                     CWG2CON0        equ	16205	;# 
  1470   003F4E                     CWG2CON1        equ	16206	;# 
  1471   003F4F                     CWG2AS0         equ	16207	;# 
  1472   003F50                     CWG2AS1         equ	16208	;# 
  1473   003F51                     CWG2STR         equ	16209	;# 
  1474   003F52                     CWG1CLK         equ	16210	;# 
  1475   003F52                     CWG1CLKCON      equ	16210	;# 
  1476   003F53                     CWG1ISM         equ	16211	;# 
  1477   003F53                     CWG1DAT         equ	16211	;# 
  1478   003F54                     CWG1DBR         equ	16212	;# 
  1479   003F55                     CWG1DBF         equ	16213	;# 
  1480   003F56                     CWG1CON0        equ	16214	;# 
  1481   003F57                     CWG1CON1        equ	16215	;# 
  1482   003F58                     CWG1AS0         equ	16216	;# 
  1483   003F59                     CWG1AS1         equ	16217	;# 
  1484   003F5A                     CWG1STR         equ	16218	;# 
  1485   003F5E                     CCPTMRS0        equ	16222	;# 
  1486   003F5F                     CCPTMRS1        equ	16223	;# 
  1487   003F60                     PWM8DC          equ	16224	;# 
  1488   003F60                     PWM8DCL         equ	16224	;# 
  1489   003F61                     PWM8DCH         equ	16225	;# 
  1490   003F62                     PWM8CON         equ	16226	;# 
  1491   003F64                     PWM7DC          equ	16228	;# 
  1492   003F64                     PWM7DCL         equ	16228	;# 
  1493   003F65                     PWM7DCH         equ	16229	;# 
  1494   003F66                     PWM7CON         equ	16230	;# 
  1495   003F68                     PWM6DC          equ	16232	;# 
  1496   003F68                     PWM6DCL         equ	16232	;# 
  1497   003F69                     PWM6DCH         equ	16233	;# 
  1498   003F6A                     PWM6CON         equ	16234	;# 
  1499   003F6C                     PWM5DC          equ	16236	;# 
  1500   003F6C                     PWM5DCL         equ	16236	;# 
  1501   003F6D                     PWM5DCH         equ	16237	;# 
  1502   003F6E                     PWM5CON         equ	16238	;# 
  1503   003F70                     CCPR4           equ	16240	;# 
  1504   003F70                     CCPR4L          equ	16240	;# 
  1505   003F71                     CCPR4H          equ	16241	;# 
  1506   003F72                     CCP4CON         equ	16242	;# 
  1507   003F73                     CCP4CAP         equ	16243	;# 
  1508   003F74                     CCPR3           equ	16244	;# 
  1509   003F74                     CCPR3L          equ	16244	;# 
  1510   003F75                     CCPR3H          equ	16245	;# 
  1511   003F76                     CCP3CON         equ	16246	;# 
  1512   003F77                     CCP3CAP         equ	16247	;# 
  1513   003F78                     CCPR2           equ	16248	;# 
  1514   003F78                     CCPR2L          equ	16248	;# 
  1515   003F79                     CCPR2H          equ	16249	;# 
  1516   003F7A                     CCP2CON         equ	16250	;# 
  1517   003F7B                     CCP2CAP         equ	16251	;# 
  1518   003F7C                     CCPR1           equ	16252	;# 
  1519   003F7C                     CCPR1L          equ	16252	;# 
  1520   003F7D                     CCPR1H          equ	16253	;# 
  1521   003F7E                     CCP1CON         equ	16254	;# 
  1522   003F7F                     CCP1CAP         equ	16255	;# 
  1523   003F92                     T6TMR           equ	16274	;# 
  1524   003F92                     TMR6            equ	16274	;# 
  1525   003F93                     T6PR            equ	16275	;# 
  1526   003F93                     PR6             equ	16275	;# 
  1527   003F94                     T6CON           equ	16276	;# 
  1528   003F95                     T6HLT           equ	16277	;# 
  1529   003F96                     T6CLKCON        equ	16278	;# 
  1530   003F96                     T6CLK           equ	16278	;# 
  1531   003F97                     T6RST           equ	16279	;# 
  1532   003F98                     TMR5            equ	16280	;# 
  1533   003F98                     TMR5L           equ	16280	;# 
  1534   003F99                     TMR5H           equ	16281	;# 
  1535   003F9A                     T5CON           equ	16282	;# 
  1536   003F9A                     TMR5CON         equ	16282	;# 
  1537   003F9B                     T5GCON          equ	16283	;# 
  1538   003F9B                     TMR5GCON        equ	16283	;# 
  1539   003F9C                     T5GATE          equ	16284	;# 
  1540   003F9C                     TMR5GATE        equ	16284	;# 
  1541   003F9D                     T5CLK           equ	16285	;# 
  1542   003F9D                     TMR5CLK         equ	16285	;# 
  1543   003F9D                     PR5             equ	16285	;# 
  1544   003F9E                     T4TMR           equ	16286	;# 
  1545   003F9E                     TMR4            equ	16286	;# 
  1546   003F9F                     T4PR            equ	16287	;# 
  1547   003F9F                     PR4             equ	16287	;# 
  1548   003FA0                     T4CON           equ	16288	;# 
  1549   003FA1                     T4HLT           equ	16289	;# 
  1550   003FA2                     T4CLKCON        equ	16290	;# 
  1551   003FA2                     T4CLK           equ	16290	;# 
  1552   003FA3                     T4RST           equ	16291	;# 
  1553   003FA4                     TMR3            equ	16292	;# 
  1554   003FA4                     TMR3L           equ	16292	;# 
  1555   003FA5                     TMR3H           equ	16293	;# 
  1556   003FA6                     T3CON           equ	16294	;# 
  1557   003FA6                     TMR3CON         equ	16294	;# 
  1558   003FA7                     T3GCON          equ	16295	;# 
  1559   003FA7                     TMR3GCON        equ	16295	;# 
  1560   003FA8                     T3GATE          equ	16296	;# 
  1561   003FA8                     TMR3GATE        equ	16296	;# 
  1562   003FA9                     T3CLK           equ	16297	;# 
  1563   003FA9                     TMR3CLK         equ	16297	;# 
  1564   003FA9                     PR3             equ	16297	;# 
  1565   003FAA                     T2TMR           equ	16298	;# 
  1566   003FAA                     TMR2            equ	16298	;# 
  1567   003FAB                     T2PR            equ	16299	;# 
  1568   003FAB                     PR2             equ	16299	;# 
  1569   003FAC                     T2CON           equ	16300	;# 
  1570   003FAD                     T2HLT           equ	16301	;# 
  1571   003FAE                     T2CLKCON        equ	16302	;# 
  1572   003FAE                     T2CLK           equ	16302	;# 
  1573   003FAF                     T2RST           equ	16303	;# 
  1574   003FB0                     TMR1            equ	16304	;# 
  1575   003FB0                     TMR1L           equ	16304	;# 
  1576   003FB1                     TMR1H           equ	16305	;# 
  1577   003FB2                     T1CON           equ	16306	;# 
  1578   003FB2                     TMR1CON         equ	16306	;# 
  1579   003FB3                     T1GCON          equ	16307	;# 
  1580   003FB3                     TMR1GCON        equ	16307	;# 
  1581   003FB4                     T1GATE          equ	16308	;# 
  1582   003FB4                     TMR1GATE        equ	16308	;# 
  1583   003FB5                     T1CLK           equ	16309	;# 
  1584   003FB5                     TMR1CLK         equ	16309	;# 
  1585   003FB5                     PR1             equ	16309	;# 
  1586   003FB6                     TMR0L           equ	16310	;# 
  1587   003FB6                     TMR0            equ	16310	;# 
  1588   003FB7                     TMR0H           equ	16311	;# 
  1589   003FB7                     PR0             equ	16311	;# 
  1590   003FB8                     T0CON0          equ	16312	;# 
  1591   003FB9                     T0CON1          equ	16313	;# 
  1592   003FBA                     LATA            equ	16314	;# 
  1593   003FBB                     LATB            equ	16315	;# 
  1594   003FBC                     LATC            equ	16316	;# 
  1595   003FC2                     TRISA           equ	16322	;# 
  1596   003FC3                     TRISB           equ	16323	;# 
  1597   003FC4                     TRISC           equ	16324	;# 
  1598   003FCA                     PORTA           equ	16330	;# 
  1599   003FCB                     PORTB           equ	16331	;# 
  1600   003FCC                     PORTC           equ	16332	;# 
  1601   003FCE                     PORTE           equ	16334	;# 
  1602   003FD2                     INTCON0         equ	16338	;# 
  1603   003FD3                     INTCON1         equ	16339	;# 
  1604   003FD4                     IVTLOCK         equ	16340	;# 
  1605   003FD5                     IVTBASE         equ	16341	;# 
  1606   003FD5                     IVTBASEL        equ	16341	;# 
  1607   003FD6                     IVTBASEH        equ	16342	;# 
  1608   003FD7                     IVTBASEU        equ	16343	;# 
  1609   003FD8                     STATUS          equ	16344	;# 
  1610   003FD9                     FSR2            equ	16345	;# 
  1611   003FD9                     FSR2L           equ	16345	;# 
  1612   003FDA                     FSR2H           equ	16346	;# 
  1613   003FDB                     PLUSW2          equ	16347	;# 
  1614   003FDC                     PREINC2         equ	16348	;# 
  1615   003FDD                     POSTDEC2        equ	16349	;# 
  1616   003FDE                     POSTINC2        equ	16350	;# 
  1617   003FDF                     INDF2           equ	16351	;# 
  1618   003FE0                     BSR             equ	16352	;# 
  1619   003FE1                     FSR1            equ	16353	;# 
  1620   003FE1                     FSR1L           equ	16353	;# 
  1621   003FE2                     FSR1H           equ	16354	;# 
  1622   003FE3                     PLUSW1          equ	16355	;# 
  1623   003FE4                     PREINC1         equ	16356	;# 
  1624   003FE5                     POSTDEC1        equ	16357	;# 
  1625   003FE6                     POSTINC1        equ	16358	;# 
  1626   003FE7                     INDF1           equ	16359	;# 
  1627   003FE8                     WREG            equ	16360	;# 
  1628   003FE9                     FSR0            equ	16361	;# 
  1629   003FE9                     FSR0L           equ	16361	;# 
  1630   003FEA                     FSR0H           equ	16362	;# 
  1631   003FEB                     PLUSW0          equ	16363	;# 
  1632   003FEC                     PREINC0         equ	16364	;# 
  1633   003FED                     POSTDEC0        equ	16365	;# 
  1634   003FEE                     POSTINC0        equ	16366	;# 
  1635   003FEF                     INDF0           equ	16367	;# 
  1636   003FF0                     PCON0           equ	16368	;# 
  1637   003FF1                     PCON1           equ	16369	;# 
  1638   003FF3                     PROD            equ	16371	;# 
  1639   003FF3                     PRODL           equ	16371	;# 
  1640   003FF4                     PRODH           equ	16372	;# 
  1641   003FF5                     TABLAT          equ	16373	;# 
  1642   003FF6                     TBLPTR          equ	16374	;# 
  1643   003FF6                     TBLPTRL         equ	16374	;# 
  1644   003FF7                     TBLPTRH         equ	16375	;# 
  1645   003FF8                     TBLPTRU         equ	16376	;# 
  1646   003FF9                     PCLAT           equ	16377	;# 
  1647   003FF9                     PCL             equ	16377	;# 
  1648   003FFA                     PCLATH          equ	16378	;# 
  1649   003FFB                     PCLATU          equ	16379	;# 
  1650   003FFC                     STKPTR          equ	16380	;# 
  1651   003FFD                     TOS             equ	16381	;# 
  1652   003FFD                     TOSL            equ	16381	;# 
  1653   003FFE                     TOSH            equ	16382	;# 
  1654   003FFF                     TOSU            equ	16383	;# 
  1655   003880                     STATUS_CSHAD    equ	14464	;# 
  1656   003881                     WREG_CSHAD      equ	14465	;# 
  1657   003882                     BSR_CSHAD       equ	14466	;# 
  1658   003883                     SHADCON         equ	14467	;# 
  1659   003884                     STATUS_SHAD     equ	14468	;# 
  1660   003885                     WREG_SHAD       equ	14469	;# 
  1661   003886                     BSR_SHAD        equ	14470	;# 
  1662   003887                     PCLATH_SHAD     equ	14471	;# 
  1663   003888                     PCLATU_SHAD     equ	14472	;# 
  1664   003889                     FSR0SH          equ	14473	;# 
  1665   003889                     FSR0L_SHAD      equ	14473	;# 
  1666   00388A                     FSR0H_SHAD      equ	14474	;# 
  1667   00388B                     FSR1SH          equ	14475	;# 
  1668   00388B                     FSR1L_SHAD      equ	14475	;# 
  1669   00388C                     FSR1H_SHAD      equ	14476	;# 
  1670   00388D                     FSR2SH          equ	14477	;# 
  1671   00388D                     FSR2L_SHAD      equ	14477	;# 
  1672   00388E                     FSR2H_SHAD      equ	14478	;# 
  1673   00388F                     PRODSH          equ	14479	;# 
  1674   00388F                     PRODL_SHAD      equ	14479	;# 
  1675   003890                     PRODH_SHAD      equ	14480	;# 
  1676   00389D                     IVTADL          equ	14493	;# 
  1677   00389E                     IVTADH          equ	14494	;# 
  1678   00389F                     IVTADU          equ	14495	;# 
  1679   00395B                     WDTCON0         equ	14683	;# 
  1680   00395C                     WDTCON1         equ	14684	;# 
  1681   00395D                     WDTPSL          equ	14685	;# 
  1682   00395E                     WDTPSH          equ	14686	;# 
  1683   00395F                     WDTTMR          equ	14687	;# 
  1684   003960                     CRCDATA         equ	14688	;# 
  1685   003960                     CRCDATL         equ	14688	;# 
  1686   003961                     CRCDATH         equ	14689	;# 
  1687   003962                     CRCACC          equ	14690	;# 
  1688   003962                     CRCACCL         equ	14690	;# 
  1689   003963                     CRCACCH         equ	14691	;# 
  1690   003964                     CRCSHFT         equ	14692	;# 
  1691   003964                     CRCSHIFTL       equ	14692	;# 
  1692   003965                     CRCSHIFTH       equ	14693	;# 
  1693   003966                     CRCXOR          equ	14694	;# 
  1694   003966                     CRCXORL         equ	14694	;# 
  1695   003967                     CRCXORH         equ	14695	;# 
  1696   003968                     CRCCON0         equ	14696	;# 
  1697   003969                     CRCCON1         equ	14697	;# 
  1698   003976                     SCANLADR        equ	14710	;# 
  1699   003976                     SCANLADRL       equ	14710	;# 
  1700   003977                     SCANLADRH       equ	14711	;# 
  1701   003978                     SCANLADRU       equ	14712	;# 
  1702   003979                     SCANHADR        equ	14713	;# 
  1703   003979                     SCANHADRL       equ	14713	;# 
  1704   00397A                     SCANHADRH       equ	14714	;# 
  1705   00397B                     SCANHADRU       equ	14715	;# 
  1706   00397C                     SCANCON0        equ	14716	;# 
  1707   00397D                     SCANTRIG        equ	14717	;# 
  1708   003980                     IPR0            equ	14720	;# 
  1709   003981                     IPR1            equ	14721	;# 
  1710   003982                     IPR2            equ	14722	;# 
  1711   003983                     IPR3            equ	14723	;# 
  1712   003984                     IPR4            equ	14724	;# 
  1713   003985                     IPR5            equ	14725	;# 
  1714   003986                     IPR6            equ	14726	;# 
  1715   003987                     IPR7            equ	14727	;# 
  1716   003988                     IPR8            equ	14728	;# 
  1717   003989                     IPR9            equ	14729	;# 
  1718   00398A                     IPR10           equ	14730	;# 
  1719   003990                     PIE0            equ	14736	;# 
  1720   003991                     PIE1            equ	14737	;# 
  1721   003992                     PIE2            equ	14738	;# 
  1722   003993                     PIE3            equ	14739	;# 
  1723   003994                     PIE4            equ	14740	;# 
  1724   003995                     PIE5            equ	14741	;# 
  1725   003996                     PIE6            equ	14742	;# 
  1726   003997                     PIE7            equ	14743	;# 
  1727   003998                     PIE8            equ	14744	;# 
  1728   003999                     PIE9            equ	14745	;# 
  1729   00399A                     PIE10           equ	14746	;# 
  1730   0039A0                     PIR0            equ	14752	;# 
  1731   0039A1                     PIR1            equ	14753	;# 
  1732   0039A2                     PIR2            equ	14754	;# 
  1733   0039A3                     PIR3            equ	14755	;# 
  1734   0039A4                     PIR4            equ	14756	;# 
  1735   0039A5                     PIR5            equ	14757	;# 
  1736   0039A6                     PIR6            equ	14758	;# 
  1737   0039A7                     PIR7            equ	14759	;# 
  1738   0039A8                     PIR8            equ	14760	;# 
  1739   0039A9                     PIR9            equ	14761	;# 
  1740   0039AA                     PIR10           equ	14762	;# 
  1741   0039C0                     PMD0            equ	14784	;# 
  1742   0039C1                     PMD1            equ	14785	;# 
  1743   0039C2                     PMD2            equ	14786	;# 
  1744   0039C3                     PMD3            equ	14787	;# 
  1745   0039C4                     PMD4            equ	14788	;# 
  1746   0039C5                     PMD5            equ	14789	;# 
  1747   0039C6                     PMD6            equ	14790	;# 
  1748   0039C7                     PMD7            equ	14791	;# 
  1749   0039D0                     BORCON          equ	14800	;# 
  1750   0039D1                     VREGCON         equ	14801	;# 
  1751   0039D8                     CPUDOZE         equ	14808	;# 
  1752   0039D9                     OSCCON1         equ	14809	;# 
  1753   0039DA                     OSCCON2         equ	14810	;# 
  1754   0039DB                     OSCCON3         equ	14811	;# 
  1755   0039DC                     OSCSTAT         equ	14812	;# 
  1756   0039DC                     OSCSTAT1        equ	14812	;# 
  1757   0039DD                     OSCEN           equ	14813	;# 
  1758   0039DE                     OSCTUNE         equ	14814	;# 
  1759   0039DF                     OSCFRQ          equ	14815	;# 
  1760   0039E0                     NVMADRL         equ	14816	;# 
  1761   0039E1                     NVMADRH         equ	14817	;# 
  1762   0039E3                     NVMDAT          equ	14819	;# 
  1763   0039E5                     NVMCON1         equ	14821	;# 
  1764   0039E6                     NVMCON2         equ	14822	;# 
  1765   0039EF                     PRLOCK          equ	14831	;# 
  1766   0039F1                     ISRPR           equ	14833	;# 
  1767   0039F2                     MAINPR          equ	14834	;# 
  1768   0039F3                     DMA1PR          equ	14835	;# 
  1769   0039F4                     DMA2PR          equ	14836	;# 
  1770   0039F7                     SCANPR          equ	14839	;# 
  1771   003A00                     RA0PPS          equ	14848	;# 
  1772   003A01                     RA1PPS          equ	14849	;# 
  1773   003A02                     RA2PPS          equ	14850	;# 
  1774   003A03                     RA3PPS          equ	14851	;# 
  1775   003A04                     RA4PPS          equ	14852	;# 
  1776   003A05                     RA5PPS          equ	14853	;# 
  1777   003A06                     RA6PPS          equ	14854	;# 
  1778   003A07                     RA7PPS          equ	14855	;# 
  1779   003A08                     RB0PPS          equ	14856	;# 
  1780   003A09                     RB1PPS          equ	14857	;# 
  1781   003A0A                     RB2PPS          equ	14858	;# 
  1782   003A0B                     RB3PPS          equ	14859	;# 
  1783   003A0C                     RB4PPS          equ	14860	;# 
  1784   003A0D                     RB5PPS          equ	14861	;# 
  1785   003A0E                     RB6PPS          equ	14862	;# 
  1786   003A0F                     RB7PPS          equ	14863	;# 
  1787   003A10                     RC0PPS          equ	14864	;# 
  1788   003A11                     RC1PPS          equ	14865	;# 
  1789   003A12                     RC2PPS          equ	14866	;# 
  1790   003A13                     RC3PPS          equ	14867	;# 
  1791   003A14                     RC4PPS          equ	14868	;# 
  1792   003A15                     RC5PPS          equ	14869	;# 
  1793   003A16                     RC6PPS          equ	14870	;# 
  1794   003A17                     RC7PPS          equ	14871	;# 
  1795   003A40                     ANSELA          equ	14912	;# 
  1796   003A41                     WPUA            equ	14913	;# 
  1797   003A42                     ODCONA          equ	14914	;# 
  1798   003A43                     SLRCONA         equ	14915	;# 
  1799   003A44                     INLVLA          equ	14916	;# 
  1800   003A45                     IOCAP           equ	14917	;# 
  1801   003A46                     IOCAN           equ	14918	;# 
  1802   003A47                     IOCAF           equ	14919	;# 
  1803   003A48                     CCDPA           equ	14920	;# 
  1804   003A49                     CCDNA           equ	14921	;# 
  1805   003A50                     ANSELB          equ	14928	;# 
  1806   003A51                     WPUB            equ	14929	;# 
  1807   003A52                     ODCONB          equ	14930	;# 
  1808   003A53                     SLRCONB         equ	14931	;# 
  1809   003A54                     INLVLB          equ	14932	;# 
  1810   003A55                     IOCBP           equ	14933	;# 
  1811   003A56                     IOCBN           equ	14934	;# 
  1812   003A57                     IOCBF           equ	14935	;# 
  1813   003A58                     CCDPB           equ	14936	;# 
  1814   003A59                     CCDNB           equ	14937	;# 
  1815   003A5A                     RB1I2C          equ	14938	;# 
  1816   003A5B                     RB2I2C          equ	14939	;# 
  1817   003A60                     ANSELC          equ	14944	;# 
  1818   003A61                     WPUC            equ	14945	;# 
  1819   003A62                     ODCONC          equ	14946	;# 
  1820   003A63                     SLRCONC         equ	14947	;# 
  1821   003A64                     INLVLC          equ	14948	;# 
  1822   003A65                     IOCCP           equ	14949	;# 
  1823   003A66                     IOCCN           equ	14950	;# 
  1824   003A67                     IOCCF           equ	14951	;# 
  1825   003A68                     CCDPC           equ	14952	;# 
  1826   003A69                     CCDNC           equ	14953	;# 
  1827   003A6A                     RC3I2C          equ	14954	;# 
  1828   003A6B                     RC4I2C          equ	14955	;# 
  1829   003A81                     WPUE            equ	14977	;# 
  1830   003A84                     INLVLE          equ	14980	;# 
  1831   003A85                     IOCEP           equ	14981	;# 
  1832   003A86                     IOCEN           equ	14982	;# 
  1833   003A87                     IOCEF           equ	14983	;# 
  1834   003ABE                     CCDCON          equ	15038	;# 
  1835   003ABF                     PPSLOCK         equ	15039	;# 
  1836   003AC0                     INT0PPS         equ	15040	;# 
  1837   003AC1                     INT1PPS         equ	15041	;# 
  1838   003AC2                     INT2PPS         equ	15042	;# 
  1839   003AC3                     T0CKIPPS        equ	15043	;# 
  1840   003AC4                     T1CKIPPS        equ	15044	;# 
  1841   003AC5                     T1GPPS          equ	15045	;# 
  1842   003AC6                     T3CKIPPS        equ	15046	;# 
  1843   003AC7                     T3GPPS          equ	15047	;# 
  1844   003AC8                     T5CKIPPS        equ	15048	;# 
  1845   003AC9                     T5GPPS          equ	15049	;# 
  1846   003ACA                     T2INPPS         equ	15050	;# 
  1847   003ACB                     T4INPPS         equ	15051	;# 
  1848   003ACC                     T6INPPS         equ	15052	;# 
  1849   003ACD                     CCP1PPS         equ	15053	;# 
  1850   003ACE                     CCP2PPS         equ	15054	;# 
  1851   003ACF                     CCP3PPS         equ	15055	;# 
  1852   003AD0                     CCP4PPS         equ	15056	;# 
  1853   003AD1                     SMT1WINPPS      equ	15057	;# 
  1854   003AD2                     SMT1SIGPPS      equ	15058	;# 
  1855   003AD3                     CWG1INPPS       equ	15059	;# 
  1856   003AD4                     CWG2INPPS       equ	15060	;# 
  1857   003AD5                     CWG3INPPS       equ	15061	;# 
  1858   003AD6                     MD1CARLPPS      equ	15062	;# 
  1859   003AD7                     MD1CARHPPS      equ	15063	;# 
  1860   003AD8                     MD1SRCPPS       equ	15064	;# 
  1861   003AD9                     CLCIN0PPS       equ	15065	;# 
  1862   003ADA                     CLCIN1PPS       equ	15066	;# 
  1863   003ADB                     CLCIN2PPS       equ	15067	;# 
  1864   003ADC                     CLCIN3PPS       equ	15068	;# 
  1865   003ADD                     ADACTPPS        equ	15069	;# 
  1866   003ADE                     SPI1SCKPPS      equ	15070	;# 
  1867   003ADF                     SPI1SDIPPS      equ	15071	;# 
  1868   003AE0                     SPI1SSPPS       equ	15072	;# 
  1869   003AE1                     I2C1SCLPPS      equ	15073	;# 
  1870   003AE2                     I2C1SDAPPS      equ	15074	;# 
  1871   003AE3                     I2C2SCLPPS      equ	15075	;# 
  1872   003AE4                     I2C2SDAPPS      equ	15076	;# 
  1873   003AE5                     U1RXPPS         equ	15077	;# 
  1874   003AE6                     U1CTSPPS        equ	15078	;# 
  1875   003AE8                     U2RXPPS         equ	15080	;# 
  1876   003AE9                     U2CTSPPS        equ	15081	;# 
  1877   003BC9                     DMA2BUF         equ	15305	;# 
  1878   003BCA                     DMA2DCNT        equ	15306	;# 
  1879   003BCA                     DMA2DCNTL       equ	15306	;# 
  1880   003BCB                     DMA2DCNTH       equ	15307	;# 
  1881   003BCC                     DMA2DPTR        equ	15308	;# 
  1882   003BCC                     DMA2DPTRL       equ	15308	;# 
  1883   003BCD                     DMA2DPTRH       equ	15309	;# 
  1884   003BCE                     DMA2DSZ         equ	15310	;# 
  1885   003BCE                     DMA2DSZL        equ	15310	;# 
  1886   003BCF                     DMA2DSZH        equ	15311	;# 
  1887   003BD0                     DMA2DSA         equ	15312	;# 
  1888   003BD0                     DMA2DSAL        equ	15312	;# 
  1889   003BD1                     DMA2DSAH        equ	15313	;# 
  1890   003BD2                     DMA2SCNT        equ	15314	;# 
  1891   003BD2                     DMA2SCNTL       equ	15314	;# 
  1892   003BD3                     DMA2SCNTH       equ	15315	;# 
  1893   003BD4                     DMA2SPTR        equ	15316	;# 
  1894   003BD4                     DMA2SPTRL       equ	15316	;# 
  1895   003BD5                     DMA2SPTRH       equ	15317	;# 
  1896   003BD6                     DMA2SPTRU       equ	15318	;# 
  1897   003BD7                     DMA2SSZ         equ	15319	;# 
  1898   003BD7                     DMA2SSZL        equ	15319	;# 
  1899   003BD8                     DMA2SSZH        equ	15320	;# 
  1900   003BD9                     DMA2SSA         equ	15321	;# 
  1901   003BD9                     DMA2SSAL        equ	15321	;# 
  1902   003BDA                     DMA2SSAH        equ	15322	;# 
  1903   003BDB                     DMA2SSAU        equ	15323	;# 
  1904   003BDC                     DMA2CON0        equ	15324	;# 
  1905   003BDD                     DMA2CON1        equ	15325	;# 
  1906   003BDE                     DMA2AIRQ        equ	15326	;# 
  1907   003BDF                     DMA2SIRQ        equ	15327	;# 
  1908   003BE9                     DMA1BUF         equ	15337	;# 
  1909   003BEA                     DMA1DCNT        equ	15338	;# 
  1910   003BEA                     DMA1DCNTL       equ	15338	;# 
  1911   003BEB                     DMA1DCNTH       equ	15339	;# 
  1912   003BEC                     DMA1DPTR        equ	15340	;# 
  1913   003BEC                     DMA1DPTRL       equ	15340	;# 
  1914   003BED                     DMA1DPTRH       equ	15341	;# 
  1915   003BEE                     DMA1DSZ         equ	15342	;# 
  1916   003BEE                     DMA1DSZL        equ	15342	;# 
  1917   003BEF                     DMA1DSZH        equ	15343	;# 
  1918   003BF0                     DMA1DSA         equ	15344	;# 
  1919   003BF0                     DMA1DSAL        equ	15344	;# 
  1920   003BF1                     DMA1DSAH        equ	15345	;# 
  1921   003BF2                     DMA1SCNT        equ	15346	;# 
  1922   003BF2                     DMA1SCNTL       equ	15346	;# 
  1923   003BF3                     DMA1SCNTH       equ	15347	;# 
  1924   003BF4                     DMA1SPTR        equ	15348	;# 
  1925   003BF4                     DMA1SPTRL       equ	15348	;# 
  1926   003BF5                     DMA1SPTRH       equ	15349	;# 
  1927   003BF6                     DMA1SPTRU       equ	15350	;# 
  1928   003BF7                     DMA1SSZ         equ	15351	;# 
  1929   003BF7                     DMA1SSZL        equ	15351	;# 
  1930   003BF8                     DMA1SSZH        equ	15352	;# 
  1931   003BF9                     DMA1SSA         equ	15353	;# 
  1932   003BF9                     DMA1SSAL        equ	15353	;# 
  1933   003BFA                     DMA1SSAH        equ	15354	;# 
  1934   003BFB                     DMA1SSAU        equ	15355	;# 
  1935   003BFC                     DMA1CON0        equ	15356	;# 
  1936   003BFD                     DMA1CON1        equ	15357	;# 
  1937   003BFE                     DMA1AIRQ        equ	15358	;# 
  1938   003BFF                     DMA1SIRQ        equ	15359	;# 
  1939   003C56                     CLC4CON         equ	15446	;# 
  1940   003C57                     CLC4POL         equ	15447	;# 
  1941   003C58                     CLC4SEL0        equ	15448	;# 
  1942   003C59                     CLC4SEL1        equ	15449	;# 
  1943   003C5A                     CLC4SEL2        equ	15450	;# 
  1944   003C5B                     CLC4SEL3        equ	15451	;# 
  1945   003C5C                     CLC4GLS0        equ	15452	;# 
  1946   003C5D                     CLC4GLS1        equ	15453	;# 
  1947   003C5E                     CLC4GLS2        equ	15454	;# 
  1948   003C5F                     CLC4GLS3        equ	15455	;# 
  1949   003C60                     CLC3CON         equ	15456	;# 
  1950   003C61                     CLC3POL         equ	15457	;# 
  1951   003C62                     CLC3SEL0        equ	15458	;# 
  1952   003C63                     CLC3SEL1        equ	15459	;# 
  1953   003C64                     CLC3SEL2        equ	15460	;# 
  1954   003C65                     CLC3SEL3        equ	15461	;# 
  1955   003C66                     CLC3GLS0        equ	15462	;# 
  1956   003C67                     CLC3GLS1        equ	15463	;# 
  1957   003C68                     CLC3GLS2        equ	15464	;# 
  1958   003C69                     CLC3GLS3        equ	15465	;# 
  1959   003C6A                     CLC2CON         equ	15466	;# 
  1960   003C6B                     CLC2POL         equ	15467	;# 
  1961   003C6C                     CLC2SEL0        equ	15468	;# 
  1962   003C6D                     CLC2SEL1        equ	15469	;# 
  1963   003C6E                     CLC2SEL2        equ	15470	;# 
  1964   003C6F                     CLC2SEL3        equ	15471	;# 
  1965   003C70                     CLC2GLS0        equ	15472	;# 
  1966   003C71                     CLC2GLS1        equ	15473	;# 
  1967   003C72                     CLC2GLS2        equ	15474	;# 
  1968   003C73                     CLC2GLS3        equ	15475	;# 
  1969   003C74                     CLC1CON         equ	15476	;# 
  1970   003C75                     CLC1POL         equ	15477	;# 
  1971   003C76                     CLC1SEL0        equ	15478	;# 
  1972   003C77                     CLC1SEL1        equ	15479	;# 
  1973   003C78                     CLC1SEL2        equ	15480	;# 
  1974   003C79                     CLC1SEL3        equ	15481	;# 
  1975   003C7A                     CLC1GLS0        equ	15482	;# 
  1976   003C7B                     CLC1GLS1        equ	15483	;# 
  1977   003C7C                     CLC1GLS2        equ	15484	;# 
  1978   003C7D                     CLC1GLS3        equ	15485	;# 
  1979   003C7E                     CLCDATA0        equ	15486	;# 
  1980   003CE5                     CLKRCON         equ	15589	;# 
  1981   003CE6                     CLKRCLK         equ	15590	;# 
  1982   003CFA                     MD1CON0         equ	15610	;# 
  1983   003CFB                     MD1CON1         equ	15611	;# 
  1984   003CFC                     MD1SRC          equ	15612	;# 
  1985   003CFD                     MD1CARL         equ	15613	;# 
  1986   003CFE                     MD1CARH         equ	15614	;# 
  1987   003D10                     SPI1RXB         equ	15632	;# 
  1988   003D11                     SPI1TXB         equ	15633	;# 
  1989   003D12                     SPI1TCNT        equ	15634	;# 
  1990   003D12                     SPI1TCNTL       equ	15634	;# 
  1991   003D13                     SPI1TCNTH       equ	15635	;# 
  1992   003D14                     SPI1CON0        equ	15636	;# 
  1993   003D15                     SPI1CON1        equ	15637	;# 
  1994   003D16                     SPI1CON2        equ	15638	;# 
  1995   003D17                     SPI1STATUS      equ	15639	;# 
  1996   003D18                     SPI1TWIDTH      equ	15640	;# 
  1997   003D19                     SPI1BAUD        equ	15641	;# 
  1998   003D1A                     SPI1INTF        equ	15642	;# 
  1999   003D1B                     SPI1INTE        equ	15643	;# 
  2000   003D1C                     SPI1CLK         equ	15644	;# 
  2001   003D54                     I2C2RXB         equ	15700	;# 
  2002   003D55                     I2C2TXB         equ	15701	;# 
  2003   003D56                     I2C2CNT         equ	15702	;# 
  2004   003D57                     I2C2ADB0        equ	15703	;# 
  2005   003D58                     I2C2ADB1        equ	15704	;# 
  2006   003D59                     I2C2ADR0        equ	15705	;# 
  2007   003D5A                     I2C2ADR1        equ	15706	;# 
  2008   003D5B                     I2C2ADR2        equ	15707	;# 
  2009   003D5C                     I2C2ADR3        equ	15708	;# 
  2010   003D5D                     I2C2CON0        equ	15709	;# 
  2011   003D5E                     I2C2CON1        equ	15710	;# 
  2012   003D5F                     I2C2CON2        equ	15711	;# 
  2013   003D60                     I2C2ERR         equ	15712	;# 
  2014   003D61                     I2C2STAT0       equ	15713	;# 
  2015   003D62                     I2C2STAT1       equ	15714	;# 
  2016   003D63                     I2C2PIR         equ	15715	;# 
  2017   003D64                     I2C2PIE         equ	15716	;# 
  2018   003D65                     I2C2CLK         equ	15717	;# 
  2019   003D66                     I2C2BTO         equ	15718	;# 
  2020   003D6A                     I2C1RXB         equ	15722	;# 
  2021   003D6B                     I2C1TXB         equ	15723	;# 
  2022   003D6C                     I2C1CNT         equ	15724	;# 
  2023   003D6D                     I2C1ADB0        equ	15725	;# 
  2024   003D6E                     I2C1ADB1        equ	15726	;# 
  2025   003D6F                     I2C1ADR0        equ	15727	;# 
  2026   003D70                     I2C1ADR1        equ	15728	;# 
  2027   003D71                     I2C1ADR2        equ	15729	;# 
  2028   003D72                     I2C1ADR3        equ	15730	;# 
  2029   003D73                     I2C1CON0        equ	15731	;# 
  2030   003D74                     I2C1CON1        equ	15732	;# 
  2031   003D75                     I2C1CON2        equ	15733	;# 
  2032   003D76                     I2C1ERR         equ	15734	;# 
  2033   003D77                     I2C1STAT0       equ	15735	;# 
  2034   003D78                     I2C1STAT1       equ	15736	;# 
  2035   003D79                     I2C1PIR         equ	15737	;# 
  2036   003D7A                     I2C1PIE         equ	15738	;# 
  2037   003D7B                     I2C1CLK         equ	15739	;# 
  2038   003D7C                     I2C1BTO         equ	15740	;# 
  2039   003DD0                     U2RXB           equ	15824	;# 
  2040   003DD0                     U2RXBL          equ	15824	;# 
  2041   003DD2                     U2TXB           equ	15826	;# 
  2042   003DD2                     U2TXBL          equ	15826	;# 
  2043   003DD4                     U2P1            equ	15828	;# 
  2044   003DD4                     U2P1L           equ	15828	;# 
  2045   003DD6                     U2P2            equ	15830	;# 
  2046   003DD6                     U2P2L           equ	15830	;# 
  2047   003DD8                     U2P3            equ	15832	;# 
  2048   003DD8                     U2P3L           equ	15832	;# 
  2049   003DDA                     U2CON0          equ	15834	;# 
  2050   003DDB                     U2CON1          equ	15835	;# 
  2051   003DDC                     U2CON2          equ	15836	;# 
  2052   003DDD                     U2BRG           equ	15837	;# 
  2053   003DDD                     U2BRGL          equ	15837	;# 
  2054   003DDE                     U2BRGH          equ	15838	;# 
  2055   003DDF                     U2FIFO          equ	15839	;# 
  2056   003DE0                     U2UIR           equ	15840	;# 
  2057   003DE1                     U2ERRIR         equ	15841	;# 
  2058   003DE2                     U2ERRIE         equ	15842	;# 
  2059   003DE8                     U1RXB           equ	15848	;# 
  2060   003DE8                     U1RXBL          equ	15848	;# 
  2061   003DE9                     U1RXCHK         equ	15849	;# 
  2062   003DEA                     U1TXB           equ	15850	;# 
  2063   003DEA                     U1TXBL          equ	15850	;# 
  2064   003DEB                     U1TXCHK         equ	15851	;# 
  2065   003DEC                     U1P1            equ	15852	;# 
  2066   003DEC                     U1P1L           equ	15852	;# 
  2067   003DED                     U1P1H           equ	15853	;# 
  2068   003DEE                     U1P2            equ	15854	;# 
  2069   003DEE                     U1P2L           equ	15854	;# 
  2070   003DEF                     U1P2H           equ	15855	;# 
  2071   003DF0                     U1P3            equ	15856	;# 
  2072   003DF0                     U1P3L           equ	15856	;# 
  2073   003DF1                     U1P3H           equ	15857	;# 
  2074   003DF2                     U1CON0          equ	15858	;# 
  2075   003DF3                     U1CON1          equ	15859	;# 
  2076   003DF4                     U1CON2          equ	15860	;# 
  2077   003DF5                     U1BRG           equ	15861	;# 
  2078   003DF5                     U1BRGL          equ	15861	;# 
  2079   003DF6                     U1BRGH          equ	15862	;# 
  2080   003DF7                     U1FIFO          equ	15863	;# 
  2081   003DF8                     U1UIR           equ	15864	;# 
  2082   003DF9                     U1ERRIR         equ	15865	;# 
  2083   003DFA                     U1ERRIE         equ	15866	;# 
  2084   003E9C                     DAC1CON1        equ	16028	;# 
  2085   003E9E                     DAC1CON0        equ	16030	;# 
  2086   003EB8                     CM2CON0         equ	16056	;# 
  2087   003EB9                     CM2CON1         equ	16057	;# 
  2088   003EBA                     CM2NCH          equ	16058	;# 
  2089   003EBB                     CM2PCH          equ	16059	;# 
  2090   003EBC                     CM1CON0         equ	16060	;# 
  2091   003EBD                     CM1CON1         equ	16061	;# 
  2092   003EBE                     CM1NCH          equ	16062	;# 
  2093   003EBF                     CM1PCH          equ	16063	;# 
  2094   003EC0                     CMOUT           equ	16064	;# 
  2095   003EC1                     FVRCON          equ	16065	;# 
  2096   003EC3                     ZCDCON          equ	16067	;# 
  2097   003EC9                     HLVDCON0        equ	16073	;# 
  2098   003ECA                     HLVDCON1        equ	16074	;# 
  2099   003ED7                     ADCP            equ	16087	;# 
  2100   003EDE                     ADLTH           equ	16094	;# 
  2101   003EDE                     ADLTHL          equ	16094	;# 
  2102   003EDF                     ADLTHH          equ	16095	;# 
  2103   003EE0                     ADUTH           equ	16096	;# 
  2104   003EE0                     ADUTHL          equ	16096	;# 
  2105   003EE1                     ADUTHH          equ	16097	;# 
  2106   003EE2                     ADERR           equ	16098	;# 
  2107   003EE2                     ADERRL          equ	16098	;# 
  2108   003EE3                     ADERRH          equ	16099	;# 
  2109   003EE4                     ADSTPT          equ	16100	;# 
  2110   003EE4                     ADSTPTL         equ	16100	;# 
  2111   003EE5                     ADSTPTH         equ	16101	;# 
  2112   003EE6                     ADFLTR          equ	16102	;# 
  2113   003EE6                     ADFLTRL         equ	16102	;# 
  2114   003EE7                     ADFLTRH         equ	16103	;# 
  2115   003EE8                     ADACC           equ	16104	;# 
  2116   003EE8                     ADACCL          equ	16104	;# 
  2117   003EE9                     ADACCH          equ	16105	;# 
  2118   003EEA                     ADACCU          equ	16106	;# 
  2119   003EEB                     ADCNT           equ	16107	;# 
  2120   003EEC                     ADRPT           equ	16108	;# 
  2121   003EED                     ADPREV          equ	16109	;# 
  2122   003EED                     ADPREVL         equ	16109	;# 
  2123   003EEE                     ADPREVH         equ	16110	;# 
  2124   003EEF                     ADRES           equ	16111	;# 
  2125   003EEF                     ADRESL          equ	16111	;# 
  2126   003EF0                     ADRESH          equ	16112	;# 
  2127   003EF1                     ADPCH           equ	16113	;# 
  2128   003EF3                     ADACQ           equ	16115	;# 
  2129   003EF3                     ADACQL          equ	16115	;# 
  2130   003EF4                     ADACQH          equ	16116	;# 
  2131   003EF5                     ADCAP           equ	16117	;# 
  2132   003EF6                     ADPRE           equ	16118	;# 
  2133   003EF6                     ADPREL          equ	16118	;# 
  2134   003EF7                     ADPREH          equ	16119	;# 
  2135   003EF8                     ADCON0          equ	16120	;# 
  2136   003EF9                     ADCON1          equ	16121	;# 
  2137   003EFA                     ADCON2          equ	16122	;# 
  2138   003EFB                     ADCON3          equ	16123	;# 
  2139   003EFC                     ADSTAT          equ	16124	;# 
  2140   003EFD                     ADREF           equ	16125	;# 
  2141   003EFE                     ADACT           equ	16126	;# 
  2142   003EFF                     ADCLK           equ	16127	;# 
  2143   003F12                     SMT1TMR         equ	16146	;# 
  2144   003F12                     SMT1TMRL        equ	16146	;# 
  2145   003F13                     SMT1TMRH        equ	16147	;# 
  2146   003F14                     SMT1TMRU        equ	16148	;# 
  2147   003F15                     SMT1CPR         equ	16149	;# 
  2148   003F15                     SMT1CPRL        equ	16149	;# 
  2149   003F16                     SMT1CPRH        equ	16150	;# 
  2150   003F17                     SMT1CPRU        equ	16151	;# 
  2151   003F18                     SMT1CPW         equ	16152	;# 
  2152   003F18                     SMT1CPWL        equ	16152	;# 
  2153   003F19                     SMT1CPWH        equ	16153	;# 
  2154   003F1A                     SMT1CPWU        equ	16154	;# 
  2155   003F1B                     SMT1PR          equ	16155	;# 
  2156   003F1B                     SMT1PRL         equ	16155	;# 
  2157   003F1C                     SMT1PRH         equ	16156	;# 
  2158   003F1D                     SMT1PRU         equ	16157	;# 
  2159   003F1E                     SMT1CON0        equ	16158	;# 
  2160   003F1F                     SMT1CON1        equ	16159	;# 
  2161   003F20                     SMT1STAT        equ	16160	;# 
  2162   003F21                     SMT1CLK         equ	16161	;# 
  2163   003F22                     SMT1SIG         equ	16162	;# 
  2164   003F23                     SMT1WIN         equ	16163	;# 
  2165   003F38                     NCO1ACC         equ	16184	;# 
  2166   003F38                     NCO1ACCL        equ	16184	;# 
  2167   003F39                     NCO1ACCH        equ	16185	;# 
  2168   003F3A                     NCO1ACCU        equ	16186	;# 
  2169   003F3B                     NCO1INC         equ	16187	;# 
  2170   003F3B                     NCO1INCL        equ	16187	;# 
  2171   003F3C                     NCO1INCH        equ	16188	;# 
  2172   003F3D                     NCO1INCU        equ	16189	;# 
  2173   003F3E                     NCO1CON         equ	16190	;# 
  2174   003F3F                     NCO1CLK         equ	16191	;# 
  2175   003F40                     CWG3CLK         equ	16192	;# 
  2176   003F40                     CWG3CLKCON      equ	16192	;# 
  2177   003F41                     CWG3ISM         equ	16193	;# 
  2178   003F41                     CWG3DAT         equ	16193	;# 
  2179   003F42                     CWG3DBR         equ	16194	;# 
  2180   003F43                     CWG3DBF         equ	16195	;# 
  2181   003F44                     CWG3CON0        equ	16196	;# 
  2182   003F45                     CWG3CON1        equ	16197	;# 
  2183   003F46                     CWG3AS0         equ	16198	;# 
  2184   003F47                     CWG3AS1         equ	16199	;# 
  2185   003F48                     CWG3STR         equ	16200	;# 
  2186   003F49                     CWG2CLK         equ	16201	;# 
  2187   003F49                     CWG2CLKCON      equ	16201	;# 
  2188   003F4A                     CWG2ISM         equ	16202	;# 
  2189   003F4A                     CWG2DAT         equ	16202	;# 
  2190   003F4B                     CWG2DBR         equ	16203	;# 
  2191   003F4C                     CWG2DBF         equ	16204	;# 
  2192   003F4D                     CWG2CON0        equ	16205	;# 
  2193   003F4E                     CWG2CON1        equ	16206	;# 
  2194   003F4F                     CWG2AS0         equ	16207	;# 
  2195   003F50                     CWG2AS1         equ	16208	;# 
  2196   003F51                     CWG2STR         equ	16209	;# 
  2197   003F52                     CWG1CLK         equ	16210	;# 
  2198   003F52                     CWG1CLKCON      equ	16210	;# 
  2199   003F53                     CWG1ISM         equ	16211	;# 
  2200   003F53                     CWG1DAT         equ	16211	;# 
  2201   003F54                     CWG1DBR         equ	16212	;# 
  2202   003F55                     CWG1DBF         equ	16213	;# 
  2203   003F56                     CWG1CON0        equ	16214	;# 
  2204   003F57                     CWG1CON1        equ	16215	;# 
  2205   003F58                     CWG1AS0         equ	16216	;# 
  2206   003F59                     CWG1AS1         equ	16217	;# 
  2207   003F5A                     CWG1STR         equ	16218	;# 
  2208   003F5E                     CCPTMRS0        equ	16222	;# 
  2209   003F5F                     CCPTMRS1        equ	16223	;# 
  2210   003F60                     PWM8DC          equ	16224	;# 
  2211   003F60                     PWM8DCL         equ	16224	;# 
  2212   003F61                     PWM8DCH         equ	16225	;# 
  2213   003F62                     PWM8CON         equ	16226	;# 
  2214   003F64                     PWM7DC          equ	16228	;# 
  2215   003F64                     PWM7DCL         equ	16228	;# 
  2216   003F65                     PWM7DCH         equ	16229	;# 
  2217   003F66                     PWM7CON         equ	16230	;# 
  2218   003F68                     PWM6DC          equ	16232	;# 
  2219   003F68                     PWM6DCL         equ	16232	;# 
  2220   003F69                     PWM6DCH         equ	16233	;# 
  2221   003F6A                     PWM6CON         equ	16234	;# 
  2222   003F6C                     PWM5DC          equ	16236	;# 
  2223   003F6C                     PWM5DCL         equ	16236	;# 
  2224   003F6D                     PWM5DCH         equ	16237	;# 
  2225   003F6E                     PWM5CON         equ	16238	;# 
  2226   003F70                     CCPR4           equ	16240	;# 
  2227   003F70                     CCPR4L          equ	16240	;# 
  2228   003F71                     CCPR4H          equ	16241	;# 
  2229   003F72                     CCP4CON         equ	16242	;# 
  2230   003F73                     CCP4CAP         equ	16243	;# 
  2231   003F74                     CCPR3           equ	16244	;# 
  2232   003F74                     CCPR3L          equ	16244	;# 
  2233   003F75                     CCPR3H          equ	16245	;# 
  2234   003F76                     CCP3CON         equ	16246	;# 
  2235   003F77                     CCP3CAP         equ	16247	;# 
  2236   003F78                     CCPR2           equ	16248	;# 
  2237   003F78                     CCPR2L          equ	16248	;# 
  2238   003F79                     CCPR2H          equ	16249	;# 
  2239   003F7A                     CCP2CON         equ	16250	;# 
  2240   003F7B                     CCP2CAP         equ	16251	;# 
  2241   003F7C                     CCPR1           equ	16252	;# 
  2242   003F7C                     CCPR1L          equ	16252	;# 
  2243   003F7D                     CCPR1H          equ	16253	;# 
  2244   003F7E                     CCP1CON         equ	16254	;# 
  2245   003F7F                     CCP1CAP         equ	16255	;# 
  2246   003F92                     T6TMR           equ	16274	;# 
  2247   003F92                     TMR6            equ	16274	;# 
  2248   003F93                     T6PR            equ	16275	;# 
  2249   003F93                     PR6             equ	16275	;# 
  2250   003F94                     T6CON           equ	16276	;# 
  2251   003F95                     T6HLT           equ	16277	;# 
  2252   003F96                     T6CLKCON        equ	16278	;# 
  2253   003F96                     T6CLK           equ	16278	;# 
  2254   003F97                     T6RST           equ	16279	;# 
  2255   003F98                     TMR5            equ	16280	;# 
  2256   003F98                     TMR5L           equ	16280	;# 
  2257   003F99                     TMR5H           equ	16281	;# 
  2258   003F9A                     T5CON           equ	16282	;# 
  2259   003F9A                     TMR5CON         equ	16282	;# 
  2260   003F9B                     T5GCON          equ	16283	;# 
  2261   003F9B                     TMR5GCON        equ	16283	;# 
  2262   003F9C                     T5GATE          equ	16284	;# 
  2263   003F9C                     TMR5GATE        equ	16284	;# 
  2264   003F9D                     T5CLK           equ	16285	;# 
  2265   003F9D                     TMR5CLK         equ	16285	;# 
  2266   003F9D                     PR5             equ	16285	;# 
  2267   003F9E                     T4TMR           equ	16286	;# 
  2268   003F9E                     TMR4            equ	16286	;# 
  2269   003F9F                     T4PR            equ	16287	;# 
  2270   003F9F                     PR4             equ	16287	;# 
  2271   003FA0                     T4CON           equ	16288	;# 
  2272   003FA1                     T4HLT           equ	16289	;# 
  2273   003FA2                     T4CLKCON        equ	16290	;# 
  2274   003FA2                     T4CLK           equ	16290	;# 
  2275   003FA3                     T4RST           equ	16291	;# 
  2276   003FA4                     TMR3            equ	16292	;# 
  2277   003FA4                     TMR3L           equ	16292	;# 
  2278   003FA5                     TMR3H           equ	16293	;# 
  2279   003FA6                     T3CON           equ	16294	;# 
  2280   003FA6                     TMR3CON         equ	16294	;# 
  2281   003FA7                     T3GCON          equ	16295	;# 
  2282   003FA7                     TMR3GCON        equ	16295	;# 
  2283   003FA8                     T3GATE          equ	16296	;# 
  2284   003FA8                     TMR3GATE        equ	16296	;# 
  2285   003FA9                     T3CLK           equ	16297	;# 
  2286   003FA9                     TMR3CLK         equ	16297	;# 
  2287   003FA9                     PR3             equ	16297	;# 
  2288   003FAA                     T2TMR           equ	16298	;# 
  2289   003FAA                     TMR2            equ	16298	;# 
  2290   003FAB                     T2PR            equ	16299	;# 
  2291   003FAB                     PR2             equ	16299	;# 
  2292   003FAC                     T2CON           equ	16300	;# 
  2293   003FAD                     T2HLT           equ	16301	;# 
  2294   003FAE                     T2CLKCON        equ	16302	;# 
  2295   003FAE                     T2CLK           equ	16302	;# 
  2296   003FAF                     T2RST           equ	16303	;# 
  2297   003FB0                     TMR1            equ	16304	;# 
  2298   003FB0                     TMR1L           equ	16304	;# 
  2299   003FB1                     TMR1H           equ	16305	;# 
  2300   003FB2                     T1CON           equ	16306	;# 
  2301   003FB2                     TMR1CON         equ	16306	;# 
  2302   003FB3                     T1GCON          equ	16307	;# 
  2303   003FB3                     TMR1GCON        equ	16307	;# 
  2304   003FB4                     T1GATE          equ	16308	;# 
  2305   003FB4                     TMR1GATE        equ	16308	;# 
  2306   003FB5                     T1CLK           equ	16309	;# 
  2307   003FB5                     TMR1CLK         equ	16309	;# 
  2308   003FB5                     PR1             equ	16309	;# 
  2309   003FB6                     TMR0L           equ	16310	;# 
  2310   003FB6                     TMR0            equ	16310	;# 
  2311   003FB7                     TMR0H           equ	16311	;# 
  2312   003FB7                     PR0             equ	16311	;# 
  2313   003FB8                     T0CON0          equ	16312	;# 
  2314   003FB9                     T0CON1          equ	16313	;# 
  2315   003FBA                     LATA            equ	16314	;# 
  2316   003FBB                     LATB            equ	16315	;# 
  2317   003FBC                     LATC            equ	16316	;# 
  2318   003FC2                     TRISA           equ	16322	;# 
  2319   003FC3                     TRISB           equ	16323	;# 
  2320   003FC4                     TRISC           equ	16324	;# 
  2321   003FCA                     PORTA           equ	16330	;# 
  2322   003FCB                     PORTB           equ	16331	;# 
  2323   003FCC                     PORTC           equ	16332	;# 
  2324   003FCE                     PORTE           equ	16334	;# 
  2325   003FD2                     INTCON0         equ	16338	;# 
  2326   003FD3                     INTCON1         equ	16339	;# 
  2327   003FD4                     IVTLOCK         equ	16340	;# 
  2328   003FD5                     IVTBASE         equ	16341	;# 
  2329   003FD5                     IVTBASEL        equ	16341	;# 
  2330   003FD6                     IVTBASEH        equ	16342	;# 
  2331   003FD7                     IVTBASEU        equ	16343	;# 
  2332   003FD8                     STATUS          equ	16344	;# 
  2333   003FD9                     FSR2            equ	16345	;# 
  2334   003FD9                     FSR2L           equ	16345	;# 
  2335   003FDA                     FSR2H           equ	16346	;# 
  2336   003FDB                     PLUSW2          equ	16347	;# 
  2337   003FDC                     PREINC2         equ	16348	;# 
  2338   003FDD                     POSTDEC2        equ	16349	;# 
  2339   003FDE                     POSTINC2        equ	16350	;# 
  2340   003FDF                     INDF2           equ	16351	;# 
  2341   003FE0                     BSR             equ	16352	;# 
  2342   003FE1                     FSR1            equ	16353	;# 
  2343   003FE1                     FSR1L           equ	16353	;# 
  2344   003FE2                     FSR1H           equ	16354	;# 
  2345   003FE3                     PLUSW1          equ	16355	;# 
  2346   003FE4                     PREINC1         equ	16356	;# 
  2347   003FE5                     POSTDEC1        equ	16357	;# 
  2348   003FE6                     POSTINC1        equ	16358	;# 
  2349   003FE7                     INDF1           equ	16359	;# 
  2350   003FE8                     WREG            equ	16360	;# 
  2351   003FE9                     FSR0            equ	16361	;# 
  2352   003FE9                     FSR0L           equ	16361	;# 
  2353   003FEA                     FSR0H           equ	16362	;# 
  2354   003FEB                     PLUSW0          equ	16363	;# 
  2355   003FEC                     PREINC0         equ	16364	;# 
  2356   003FED                     POSTDEC0        equ	16365	;# 
  2357   003FEE                     POSTINC0        equ	16366	;# 
  2358   003FEF                     INDF0           equ	16367	;# 
  2359   003FF0                     PCON0           equ	16368	;# 
  2360   003FF1                     PCON1           equ	16369	;# 
  2361   003FF3                     PROD            equ	16371	;# 
  2362   003FF3                     PRODL           equ	16371	;# 
  2363   003FF4                     PRODH           equ	16372	;# 
  2364   003FF5                     TABLAT          equ	16373	;# 
  2365   003FF6                     TBLPTR          equ	16374	;# 
  2366   003FF6                     TBLPTRL         equ	16374	;# 
  2367   003FF7                     TBLPTRH         equ	16375	;# 
  2368   003FF8                     TBLPTRU         equ	16376	;# 
  2369   003FF9                     PCLAT           equ	16377	;# 
  2370   003FF9                     PCL             equ	16377	;# 
  2371   003FFA                     PCLATH          equ	16378	;# 
  2372   003FFB                     PCLATU          equ	16379	;# 
  2373   003FFC                     STKPTR          equ	16380	;# 
  2374   003FFD                     TOS             equ	16381	;# 
  2375   003FFD                     TOSL            equ	16381	;# 
  2376   003FFE                     TOSH            equ	16382	;# 
  2377   003FFF                     TOSU            equ	16383	;# 
  2378   003880                     STATUS_CSHAD    equ	14464	;# 
  2379   003881                     WREG_CSHAD      equ	14465	;# 
  2380   003882                     BSR_CSHAD       equ	14466	;# 
  2381   003883                     SHADCON         equ	14467	;# 
  2382   003884                     STATUS_SHAD     equ	14468	;# 
  2383   003885                     WREG_SHAD       equ	14469	;# 
  2384   003886                     BSR_SHAD        equ	14470	;# 
  2385   003887                     PCLATH_SHAD     equ	14471	;# 
  2386   003888                     PCLATU_SHAD     equ	14472	;# 
  2387   003889                     FSR0SH          equ	14473	;# 
  2388   003889                     FSR0L_SHAD      equ	14473	;# 
  2389   00388A                     FSR0H_SHAD      equ	14474	;# 
  2390   00388B                     FSR1SH          equ	14475	;# 
  2391   00388B                     FSR1L_SHAD      equ	14475	;# 
  2392   00388C                     FSR1H_SHAD      equ	14476	;# 
  2393   00388D                     FSR2SH          equ	14477	;# 
  2394   00388D                     FSR2L_SHAD      equ	14477	;# 
  2395   00388E                     FSR2H_SHAD      equ	14478	;# 
  2396   00388F                     PRODSH          equ	14479	;# 
  2397   00388F                     PRODL_SHAD      equ	14479	;# 
  2398   003890                     PRODH_SHAD      equ	14480	;# 
  2399   00389D                     IVTADL          equ	14493	;# 
  2400   00389E                     IVTADH          equ	14494	;# 
  2401   00389F                     IVTADU          equ	14495	;# 
  2402   00395B                     WDTCON0         equ	14683	;# 
  2403   00395C                     WDTCON1         equ	14684	;# 
  2404   00395D                     WDTPSL          equ	14685	;# 
  2405   00395E                     WDTPSH          equ	14686	;# 
  2406   00395F                     WDTTMR          equ	14687	;# 
  2407   003960                     CRCDATA         equ	14688	;# 
  2408   003960                     CRCDATL         equ	14688	;# 
  2409   003961                     CRCDATH         equ	14689	;# 
  2410   003962                     CRCACC          equ	14690	;# 
  2411   003962                     CRCACCL         equ	14690	;# 
  2412   003963                     CRCACCH         equ	14691	;# 
  2413   003964                     CRCSHFT         equ	14692	;# 
  2414   003964                     CRCSHIFTL       equ	14692	;# 
  2415   003965                     CRCSHIFTH       equ	14693	;# 
  2416   003966                     CRCXOR          equ	14694	;# 
  2417   003966                     CRCXORL         equ	14694	;# 
  2418   003967                     CRCXORH         equ	14695	;# 
  2419   003968                     CRCCON0         equ	14696	;# 
  2420   003969                     CRCCON1         equ	14697	;# 
  2421   003976                     SCANLADR        equ	14710	;# 
  2422   003976                     SCANLADRL       equ	14710	;# 
  2423   003977                     SCANLADRH       equ	14711	;# 
  2424   003978                     SCANLADRU       equ	14712	;# 
  2425   003979                     SCANHADR        equ	14713	;# 
  2426   003979                     SCANHADRL       equ	14713	;# 
  2427   00397A                     SCANHADRH       equ	14714	;# 
  2428   00397B                     SCANHADRU       equ	14715	;# 
  2429   00397C                     SCANCON0        equ	14716	;# 
  2430   00397D                     SCANTRIG        equ	14717	;# 
  2431   003980                     IPR0            equ	14720	;# 
  2432   003981                     IPR1            equ	14721	;# 
  2433   003982                     IPR2            equ	14722	;# 
  2434   003983                     IPR3            equ	14723	;# 
  2435   003984                     IPR4            equ	14724	;# 
  2436   003985                     IPR5            equ	14725	;# 
  2437   003986                     IPR6            equ	14726	;# 
  2438   003987                     IPR7            equ	14727	;# 
  2439   003988                     IPR8            equ	14728	;# 
  2440   003989                     IPR9            equ	14729	;# 
  2441   00398A                     IPR10           equ	14730	;# 
  2442   003990                     PIE0            equ	14736	;# 
  2443   003991                     PIE1            equ	14737	;# 
  2444   003992                     PIE2            equ	14738	;# 
  2445   003993                     PIE3            equ	14739	;# 
  2446   003994                     PIE4            equ	14740	;# 
  2447   003995                     PIE5            equ	14741	;# 
  2448   003996                     PIE6            equ	14742	;# 
  2449   003997                     PIE7            equ	14743	;# 
  2450   003998                     PIE8            equ	14744	;# 
  2451   003999                     PIE9            equ	14745	;# 
  2452   00399A                     PIE10           equ	14746	;# 
  2453   0039A0                     PIR0            equ	14752	;# 
  2454   0039A1                     PIR1            equ	14753	;# 
  2455   0039A2                     PIR2            equ	14754	;# 
  2456   0039A3                     PIR3            equ	14755	;# 
  2457   0039A4                     PIR4            equ	14756	;# 
  2458   0039A5                     PIR5            equ	14757	;# 
  2459   0039A6                     PIR6            equ	14758	;# 
  2460   0039A7                     PIR7            equ	14759	;# 
  2461   0039A8                     PIR8            equ	14760	;# 
  2462   0039A9                     PIR9            equ	14761	;# 
  2463   0039AA                     PIR10           equ	14762	;# 
  2464   0039C0                     PMD0            equ	14784	;# 
  2465   0039C1                     PMD1            equ	14785	;# 
  2466   0039C2                     PMD2            equ	14786	;# 
  2467   0039C3                     PMD3            equ	14787	;# 
  2468   0039C4                     PMD4            equ	14788	;# 
  2469   0039C5                     PMD5            equ	14789	;# 
  2470   0039C6                     PMD6            equ	14790	;# 
  2471   0039C7                     PMD7            equ	14791	;# 
  2472   0039D0                     BORCON          equ	14800	;# 
  2473   0039D1                     VREGCON         equ	14801	;# 
  2474   0039D8                     CPUDOZE         equ	14808	;# 
  2475   0039D9                     OSCCON1         equ	14809	;# 
  2476   0039DA                     OSCCON2         equ	14810	;# 
  2477   0039DB                     OSCCON3         equ	14811	;# 
  2478   0039DC                     OSCSTAT         equ	14812	;# 
  2479   0039DC                     OSCSTAT1        equ	14812	;# 
  2480   0039DD                     OSCEN           equ	14813	;# 
  2481   0039DE                     OSCTUNE         equ	14814	;# 
  2482   0039DF                     OSCFRQ          equ	14815	;# 
  2483   0039E0                     NVMADRL         equ	14816	;# 
  2484   0039E1                     NVMADRH         equ	14817	;# 
  2485   0039E3                     NVMDAT          equ	14819	;# 
  2486   0039E5                     NVMCON1         equ	14821	;# 
  2487   0039E6                     NVMCON2         equ	14822	;# 
  2488   0039EF                     PRLOCK          equ	14831	;# 
  2489   0039F1                     ISRPR           equ	14833	;# 
  2490   0039F2                     MAINPR          equ	14834	;# 
  2491   0039F3                     DMA1PR          equ	14835	;# 
  2492   0039F4                     DMA2PR          equ	14836	;# 
  2493   0039F7                     SCANPR          equ	14839	;# 
  2494   003A00                     RA0PPS          equ	14848	;# 
  2495   003A01                     RA1PPS          equ	14849	;# 
  2496   003A02                     RA2PPS          equ	14850	;# 
  2497   003A03                     RA3PPS          equ	14851	;# 
  2498   003A04                     RA4PPS          equ	14852	;# 
  2499   003A05                     RA5PPS          equ	14853	;# 
  2500   003A06                     RA6PPS          equ	14854	;# 
  2501   003A07                     RA7PPS          equ	14855	;# 
  2502   003A08                     RB0PPS          equ	14856	;# 
  2503   003A09                     RB1PPS          equ	14857	;# 
  2504   003A0A                     RB2PPS          equ	14858	;# 
  2505   003A0B                     RB3PPS          equ	14859	;# 
  2506   003A0C                     RB4PPS          equ	14860	;# 
  2507   003A0D                     RB5PPS          equ	14861	;# 
  2508   003A0E                     RB6PPS          equ	14862	;# 
  2509   003A0F                     RB7PPS          equ	14863	;# 
  2510   003A10                     RC0PPS          equ	14864	;# 
  2511   003A11                     RC1PPS          equ	14865	;# 
  2512   003A12                     RC2PPS          equ	14866	;# 
  2513   003A13                     RC3PPS          equ	14867	;# 
  2514   003A14                     RC4PPS          equ	14868	;# 
  2515   003A15                     RC5PPS          equ	14869	;# 
  2516   003A16                     RC6PPS          equ	14870	;# 
  2517   003A17                     RC7PPS          equ	14871	;# 
  2518   003A40                     ANSELA          equ	14912	;# 
  2519   003A41                     WPUA            equ	14913	;# 
  2520   003A42                     ODCONA          equ	14914	;# 
  2521   003A43                     SLRCONA         equ	14915	;# 
  2522   003A44                     INLVLA          equ	14916	;# 
  2523   003A45                     IOCAP           equ	14917	;# 
  2524   003A46                     IOCAN           equ	14918	;# 
  2525   003A47                     IOCAF           equ	14919	;# 
  2526   003A48                     CCDPA           equ	14920	;# 
  2527   003A49                     CCDNA           equ	14921	;# 
  2528   003A50                     ANSELB          equ	14928	;# 
  2529   003A51                     WPUB            equ	14929	;# 
  2530   003A52                     ODCONB          equ	14930	;# 
  2531   003A53                     SLRCONB         equ	14931	;# 
  2532   003A54                     INLVLB          equ	14932	;# 
  2533   003A55                     IOCBP           equ	14933	;# 
  2534   003A56                     IOCBN           equ	14934	;# 
  2535   003A57                     IOCBF           equ	14935	;# 
  2536   003A58                     CCDPB           equ	14936	;# 
  2537   003A59                     CCDNB           equ	14937	;# 
  2538   003A5A                     RB1I2C          equ	14938	;# 
  2539   003A5B                     RB2I2C          equ	14939	;# 
  2540   003A60                     ANSELC          equ	14944	;# 
  2541   003A61                     WPUC            equ	14945	;# 
  2542   003A62                     ODCONC          equ	14946	;# 
  2543   003A63                     SLRCONC         equ	14947	;# 
  2544   003A64                     INLVLC          equ	14948	;# 
  2545   003A65                     IOCCP           equ	14949	;# 
  2546   003A66                     IOCCN           equ	14950	;# 
  2547   003A67                     IOCCF           equ	14951	;# 
  2548   003A68                     CCDPC           equ	14952	;# 
  2549   003A69                     CCDNC           equ	14953	;# 
  2550   003A6A                     RC3I2C          equ	14954	;# 
  2551   003A6B                     RC4I2C          equ	14955	;# 
  2552   003A81                     WPUE            equ	14977	;# 
  2553   003A84                     INLVLE          equ	14980	;# 
  2554   003A85                     IOCEP           equ	14981	;# 
  2555   003A86                     IOCEN           equ	14982	;# 
  2556   003A87                     IOCEF           equ	14983	;# 
  2557   003ABE                     CCDCON          equ	15038	;# 
  2558   003ABF                     PPSLOCK         equ	15039	;# 
  2559   003AC0                     INT0PPS         equ	15040	;# 
  2560   003AC1                     INT1PPS         equ	15041	;# 
  2561   003AC2                     INT2PPS         equ	15042	;# 
  2562   003AC3                     T0CKIPPS        equ	15043	;# 
  2563   003AC4                     T1CKIPPS        equ	15044	;# 
  2564   003AC5                     T1GPPS          equ	15045	;# 
  2565   003AC6                     T3CKIPPS        equ	15046	;# 
  2566   003AC7                     T3GPPS          equ	15047	;# 
  2567   003AC8                     T5CKIPPS        equ	15048	;# 
  2568   003AC9                     T5GPPS          equ	15049	;# 
  2569   003ACA                     T2INPPS         equ	15050	;# 
  2570   003ACB                     T4INPPS         equ	15051	;# 
  2571   003ACC                     T6INPPS         equ	15052	;# 
  2572   003ACD                     CCP1PPS         equ	15053	;# 
  2573   003ACE                     CCP2PPS         equ	15054	;# 
  2574   003ACF                     CCP3PPS         equ	15055	;# 
  2575   003AD0                     CCP4PPS         equ	15056	;# 
  2576   003AD1                     SMT1WINPPS      equ	15057	;# 
  2577   003AD2                     SMT1SIGPPS      equ	15058	;# 
  2578   003AD3                     CWG1INPPS       equ	15059	;# 
  2579   003AD4                     CWG2INPPS       equ	15060	;# 
  2580   003AD5                     CWG3INPPS       equ	15061	;# 
  2581   003AD6                     MD1CARLPPS      equ	15062	;# 
  2582   003AD7                     MD1CARHPPS      equ	15063	;# 
  2583   003AD8                     MD1SRCPPS       equ	15064	;# 
  2584   003AD9                     CLCIN0PPS       equ	15065	;# 
  2585   003ADA                     CLCIN1PPS       equ	15066	;# 
  2586   003ADB                     CLCIN2PPS       equ	15067	;# 
  2587   003ADC                     CLCIN3PPS       equ	15068	;# 
  2588   003ADD                     ADACTPPS        equ	15069	;# 
  2589   003ADE                     SPI1SCKPPS      equ	15070	;# 
  2590   003ADF                     SPI1SDIPPS      equ	15071	;# 
  2591   003AE0                     SPI1SSPPS       equ	15072	;# 
  2592   003AE1                     I2C1SCLPPS      equ	15073	;# 
  2593   003AE2                     I2C1SDAPPS      equ	15074	;# 
  2594   003AE3                     I2C2SCLPPS      equ	15075	;# 
  2595   003AE4                     I2C2SDAPPS      equ	15076	;# 
  2596   003AE5                     U1RXPPS         equ	15077	;# 
  2597   003AE6                     U1CTSPPS        equ	15078	;# 
  2598   003AE8                     U2RXPPS         equ	15080	;# 
  2599   003AE9                     U2CTSPPS        equ	15081	;# 
  2600   003BC9                     DMA2BUF         equ	15305	;# 
  2601   003BCA                     DMA2DCNT        equ	15306	;# 
  2602   003BCA                     DMA2DCNTL       equ	15306	;# 
  2603   003BCB                     DMA2DCNTH       equ	15307	;# 
  2604   003BCC                     DMA2DPTR        equ	15308	;# 
  2605   003BCC                     DMA2DPTRL       equ	15308	;# 
  2606   003BCD                     DMA2DPTRH       equ	15309	;# 
  2607   003BCE                     DMA2DSZ         equ	15310	;# 
  2608   003BCE                     DMA2DSZL        equ	15310	;# 
  2609   003BCF                     DMA2DSZH        equ	15311	;# 
  2610   003BD0                     DMA2DSA         equ	15312	;# 
  2611   003BD0                     DMA2DSAL        equ	15312	;# 
  2612   003BD1                     DMA2DSAH        equ	15313	;# 
  2613   003BD2                     DMA2SCNT        equ	15314	;# 
  2614   003BD2                     DMA2SCNTL       equ	15314	;# 
  2615   003BD3                     DMA2SCNTH       equ	15315	;# 
  2616   003BD4                     DMA2SPTR        equ	15316	;# 
  2617   003BD4                     DMA2SPTRL       equ	15316	;# 
  2618   003BD5                     DMA2SPTRH       equ	15317	;# 
  2619   003BD6                     DMA2SPTRU       equ	15318	;# 
  2620   003BD7                     DMA2SSZ         equ	15319	;# 
  2621   003BD7                     DMA2SSZL        equ	15319	;# 
  2622   003BD8                     DMA2SSZH        equ	15320	;# 
  2623   003BD9                     DMA2SSA         equ	15321	;# 
  2624   003BD9                     DMA2SSAL        equ	15321	;# 
  2625   003BDA                     DMA2SSAH        equ	15322	;# 
  2626   003BDB                     DMA2SSAU        equ	15323	;# 
  2627   003BDC                     DMA2CON0        equ	15324	;# 
  2628   003BDD                     DMA2CON1        equ	15325	;# 
  2629   003BDE                     DMA2AIRQ        equ	15326	;# 
  2630   003BDF                     DMA2SIRQ        equ	15327	;# 
  2631   003BE9                     DMA1BUF         equ	15337	;# 
  2632   003BEA                     DMA1DCNT        equ	15338	;# 
  2633   003BEA                     DMA1DCNTL       equ	15338	;# 
  2634   003BEB                     DMA1DCNTH       equ	15339	;# 
  2635   003BEC                     DMA1DPTR        equ	15340	;# 
  2636   003BEC                     DMA1DPTRL       equ	15340	;# 
  2637   003BED                     DMA1DPTRH       equ	15341	;# 
  2638   003BEE                     DMA1DSZ         equ	15342	;# 
  2639   003BEE                     DMA1DSZL        equ	15342	;# 
  2640   003BEF                     DMA1DSZH        equ	15343	;# 
  2641   003BF0                     DMA1DSA         equ	15344	;# 
  2642   003BF0                     DMA1DSAL        equ	15344	;# 
  2643   003BF1                     DMA1DSAH        equ	15345	;# 
  2644   003BF2                     DMA1SCNT        equ	15346	;# 
  2645   003BF2                     DMA1SCNTL       equ	15346	;# 
  2646   003BF3                     DMA1SCNTH       equ	15347	;# 
  2647   003BF4                     DMA1SPTR        equ	15348	;# 
  2648   003BF4                     DMA1SPTRL       equ	15348	;# 
  2649   003BF5                     DMA1SPTRH       equ	15349	;# 
  2650   003BF6                     DMA1SPTRU       equ	15350	;# 
  2651   003BF7                     DMA1SSZ         equ	15351	;# 
  2652   003BF7                     DMA1SSZL        equ	15351	;# 
  2653   003BF8                     DMA1SSZH        equ	15352	;# 
  2654   003BF9                     DMA1SSA         equ	15353	;# 
  2655   003BF9                     DMA1SSAL        equ	15353	;# 
  2656   003BFA                     DMA1SSAH        equ	15354	;# 
  2657   003BFB                     DMA1SSAU        equ	15355	;# 
  2658   003BFC                     DMA1CON0        equ	15356	;# 
  2659   003BFD                     DMA1CON1        equ	15357	;# 
  2660   003BFE                     DMA1AIRQ        equ	15358	;# 
  2661   003BFF                     DMA1SIRQ        equ	15359	;# 
  2662   003C56                     CLC4CON         equ	15446	;# 
  2663   003C57                     CLC4POL         equ	15447	;# 
  2664   003C58                     CLC4SEL0        equ	15448	;# 
  2665   003C59                     CLC4SEL1        equ	15449	;# 
  2666   003C5A                     CLC4SEL2        equ	15450	;# 
  2667   003C5B                     CLC4SEL3        equ	15451	;# 
  2668   003C5C                     CLC4GLS0        equ	15452	;# 
  2669   003C5D                     CLC4GLS1        equ	15453	;# 
  2670   003C5E                     CLC4GLS2        equ	15454	;# 
  2671   003C5F                     CLC4GLS3        equ	15455	;# 
  2672   003C60                     CLC3CON         equ	15456	;# 
  2673   003C61                     CLC3POL         equ	15457	;# 
  2674   003C62                     CLC3SEL0        equ	15458	;# 
  2675   003C63                     CLC3SEL1        equ	15459	;# 
  2676   003C64                     CLC3SEL2        equ	15460	;# 
  2677   003C65                     CLC3SEL3        equ	15461	;# 
  2678   003C66                     CLC3GLS0        equ	15462	;# 
  2679   003C67                     CLC3GLS1        equ	15463	;# 
  2680   003C68                     CLC3GLS2        equ	15464	;# 
  2681   003C69                     CLC3GLS3        equ	15465	;# 
  2682   003C6A                     CLC2CON         equ	15466	;# 
  2683   003C6B                     CLC2POL         equ	15467	;# 
  2684   003C6C                     CLC2SEL0        equ	15468	;# 
  2685   003C6D                     CLC2SEL1        equ	15469	;# 
  2686   003C6E                     CLC2SEL2        equ	15470	;# 
  2687   003C6F                     CLC2SEL3        equ	15471	;# 
  2688   003C70                     CLC2GLS0        equ	15472	;# 
  2689   003C71                     CLC2GLS1        equ	15473	;# 
  2690   003C72                     CLC2GLS2        equ	15474	;# 
  2691   003C73                     CLC2GLS3        equ	15475	;# 
  2692   003C74                     CLC1CON         equ	15476	;# 
  2693   003C75                     CLC1POL         equ	15477	;# 
  2694   003C76                     CLC1SEL0        equ	15478	;# 
  2695   003C77                     CLC1SEL1        equ	15479	;# 
  2696   003C78                     CLC1SEL2        equ	15480	;# 
  2697   003C79                     CLC1SEL3        equ	15481	;# 
  2698   003C7A                     CLC1GLS0        equ	15482	;# 
  2699   003C7B                     CLC1GLS1        equ	15483	;# 
  2700   003C7C                     CLC1GLS2        equ	15484	;# 
  2701   003C7D                     CLC1GLS3        equ	15485	;# 
  2702   003C7E                     CLCDATA0        equ	15486	;# 
  2703   003CE5                     CLKRCON         equ	15589	;# 
  2704   003CE6                     CLKRCLK         equ	15590	;# 
  2705   003CFA                     MD1CON0         equ	15610	;# 
  2706   003CFB                     MD1CON1         equ	15611	;# 
  2707   003CFC                     MD1SRC          equ	15612	;# 
  2708   003CFD                     MD1CARL         equ	15613	;# 
  2709   003CFE                     MD1CARH         equ	15614	;# 
  2710   003D10                     SPI1RXB         equ	15632	;# 
  2711   003D11                     SPI1TXB         equ	15633	;# 
  2712   003D12                     SPI1TCNT        equ	15634	;# 
  2713   003D12                     SPI1TCNTL       equ	15634	;# 
  2714   003D13                     SPI1TCNTH       equ	15635	;# 
  2715   003D14                     SPI1CON0        equ	15636	;# 
  2716   003D15                     SPI1CON1        equ	15637	;# 
  2717   003D16                     SPI1CON2        equ	15638	;# 
  2718   003D17                     SPI1STATUS      equ	15639	;# 
  2719   003D18                     SPI1TWIDTH      equ	15640	;# 
  2720   003D19                     SPI1BAUD        equ	15641	;# 
  2721   003D1A                     SPI1INTF        equ	15642	;# 
  2722   003D1B                     SPI1INTE        equ	15643	;# 
  2723   003D1C                     SPI1CLK         equ	15644	;# 
  2724   003D54                     I2C2RXB         equ	15700	;# 
  2725   003D55                     I2C2TXB         equ	15701	;# 
  2726   003D56                     I2C2CNT         equ	15702	;# 
  2727   003D57                     I2C2ADB0        equ	15703	;# 
  2728   003D58                     I2C2ADB1        equ	15704	;# 
  2729   003D59                     I2C2ADR0        equ	15705	;# 
  2730   003D5A                     I2C2ADR1        equ	15706	;# 
  2731   003D5B                     I2C2ADR2        equ	15707	;# 
  2732   003D5C                     I2C2ADR3        equ	15708	;# 
  2733   003D5D                     I2C2CON0        equ	15709	;# 
  2734   003D5E                     I2C2CON1        equ	15710	;# 
  2735   003D5F                     I2C2CON2        equ	15711	;# 
  2736   003D60                     I2C2ERR         equ	15712	;# 
  2737   003D61                     I2C2STAT0       equ	15713	;# 
  2738   003D62                     I2C2STAT1       equ	15714	;# 
  2739   003D63                     I2C2PIR         equ	15715	;# 
  2740   003D64                     I2C2PIE         equ	15716	;# 
  2741   003D65                     I2C2CLK         equ	15717	;# 
  2742   003D66                     I2C2BTO         equ	15718	;# 
  2743   003D6A                     I2C1RXB         equ	15722	;# 
  2744   003D6B                     I2C1TXB         equ	15723	;# 
  2745   003D6C                     I2C1CNT         equ	15724	;# 
  2746   003D6D                     I2C1ADB0        equ	15725	;# 
  2747   003D6E                     I2C1ADB1        equ	15726	;# 
  2748   003D6F                     I2C1ADR0        equ	15727	;# 
  2749   003D70                     I2C1ADR1        equ	15728	;# 
  2750   003D71                     I2C1ADR2        equ	15729	;# 
  2751   003D72                     I2C1ADR3        equ	15730	;# 
  2752   003D73                     I2C1CON0        equ	15731	;# 
  2753   003D74                     I2C1CON1        equ	15732	;# 
  2754   003D75                     I2C1CON2        equ	15733	;# 
  2755   003D76                     I2C1ERR         equ	15734	;# 
  2756   003D77                     I2C1STAT0       equ	15735	;# 
  2757   003D78                     I2C1STAT1       equ	15736	;# 
  2758   003D79                     I2C1PIR         equ	15737	;# 
  2759   003D7A                     I2C1PIE         equ	15738	;# 
  2760   003D7B                     I2C1CLK         equ	15739	;# 
  2761   003D7C                     I2C1BTO         equ	15740	;# 
  2762   003DD0                     U2RXB           equ	15824	;# 
  2763   003DD0                     U2RXBL          equ	15824	;# 
  2764   003DD2                     U2TXB           equ	15826	;# 
  2765   003DD2                     U2TXBL          equ	15826	;# 
  2766   003DD4                     U2P1            equ	15828	;# 
  2767   003DD4                     U2P1L           equ	15828	;# 
  2768   003DD6                     U2P2            equ	15830	;# 
  2769   003DD6                     U2P2L           equ	15830	;# 
  2770   003DD8                     U2P3            equ	15832	;# 
  2771   003DD8                     U2P3L           equ	15832	;# 
  2772   003DDA                     U2CON0          equ	15834	;# 
  2773   003DDB                     U2CON1          equ	15835	;# 
  2774   003DDC                     U2CON2          equ	15836	;# 
  2775   003DDD                     U2BRG           equ	15837	;# 
  2776   003DDD                     U2BRGL          equ	15837	;# 
  2777   003DDE                     U2BRGH          equ	15838	;# 
  2778   003DDF                     U2FIFO          equ	15839	;# 
  2779   003DE0                     U2UIR           equ	15840	;# 
  2780   003DE1                     U2ERRIR         equ	15841	;# 
  2781   003DE2                     U2ERRIE         equ	15842	;# 
  2782   003DE8                     U1RXB           equ	15848	;# 
  2783   003DE8                     U1RXBL          equ	15848	;# 
  2784   003DE9                     U1RXCHK         equ	15849	;# 
  2785   003DEA                     U1TXB           equ	15850	;# 
  2786   003DEA                     U1TXBL          equ	15850	;# 
  2787   003DEB                     U1TXCHK         equ	15851	;# 
  2788   003DEC                     U1P1            equ	15852	;# 
  2789   003DEC                     U1P1L           equ	15852	;# 
  2790   003DED                     U1P1H           equ	15853	;# 
  2791   003DEE                     U1P2            equ	15854	;# 
  2792   003DEE                     U1P2L           equ	15854	;# 
  2793   003DEF                     U1P2H           equ	15855	;# 
  2794   003DF0                     U1P3            equ	15856	;# 
  2795   003DF0                     U1P3L           equ	15856	;# 
  2796   003DF1                     U1P3H           equ	15857	;# 
  2797   003DF2                     U1CON0          equ	15858	;# 
  2798   003DF3                     U1CON1          equ	15859	;# 
  2799   003DF4                     U1CON2          equ	15860	;# 
  2800   003DF5                     U1BRG           equ	15861	;# 
  2801   003DF5                     U1BRGL          equ	15861	;# 
  2802   003DF6                     U1BRGH          equ	15862	;# 
  2803   003DF7                     U1FIFO          equ	15863	;# 
  2804   003DF8                     U1UIR           equ	15864	;# 
  2805   003DF9                     U1ERRIR         equ	15865	;# 
  2806   003DFA                     U1ERRIE         equ	15866	;# 
  2807   003E9C                     DAC1CON1        equ	16028	;# 
  2808   003E9E                     DAC1CON0        equ	16030	;# 
  2809   003EB8                     CM2CON0         equ	16056	;# 
  2810   003EB9                     CM2CON1         equ	16057	;# 
  2811   003EBA                     CM2NCH          equ	16058	;# 
  2812   003EBB                     CM2PCH          equ	16059	;# 
  2813   003EBC                     CM1CON0         equ	16060	;# 
  2814   003EBD                     CM1CON1         equ	16061	;# 
  2815   003EBE                     CM1NCH          equ	16062	;# 
  2816   003EBF                     CM1PCH          equ	16063	;# 
  2817   003EC0                     CMOUT           equ	16064	;# 
  2818   003EC1                     FVRCON          equ	16065	;# 
  2819   003EC3                     ZCDCON          equ	16067	;# 
  2820   003EC9                     HLVDCON0        equ	16073	;# 
  2821   003ECA                     HLVDCON1        equ	16074	;# 
  2822   003ED7                     ADCP            equ	16087	;# 
  2823   003EDE                     ADLTH           equ	16094	;# 
  2824   003EDE                     ADLTHL          equ	16094	;# 
  2825   003EDF                     ADLTHH          equ	16095	;# 
  2826   003EE0                     ADUTH           equ	16096	;# 
  2827   003EE0                     ADUTHL          equ	16096	;# 
  2828   003EE1                     ADUTHH          equ	16097	;# 
  2829   003EE2                     ADERR           equ	16098	;# 
  2830   003EE2                     ADERRL          equ	16098	;# 
  2831   003EE3                     ADERRH          equ	16099	;# 
  2832   003EE4                     ADSTPT          equ	16100	;# 
  2833   003EE4                     ADSTPTL         equ	16100	;# 
  2834   003EE5                     ADSTPTH         equ	16101	;# 
  2835   003EE6                     ADFLTR          equ	16102	;# 
  2836   003EE6                     ADFLTRL         equ	16102	;# 
  2837   003EE7                     ADFLTRH         equ	16103	;# 
  2838   003EE8                     ADACC           equ	16104	;# 
  2839   003EE8                     ADACCL          equ	16104	;# 
  2840   003EE9                     ADACCH          equ	16105	;# 
  2841   003EEA                     ADACCU          equ	16106	;# 
  2842   003EEB                     ADCNT           equ	16107	;# 
  2843   003EEC                     ADRPT           equ	16108	;# 
  2844   003EED                     ADPREV          equ	16109	;# 
  2845   003EED                     ADPREVL         equ	16109	;# 
  2846   003EEE                     ADPREVH         equ	16110	;# 
  2847   003EEF                     ADRES           equ	16111	;# 
  2848   003EEF                     ADRESL          equ	16111	;# 
  2849   003EF0                     ADRESH          equ	16112	;# 
  2850   003EF1                     ADPCH           equ	16113	;# 
  2851   003EF3                     ADACQ           equ	16115	;# 
  2852   003EF3                     ADACQL          equ	16115	;# 
  2853   003EF4                     ADACQH          equ	16116	;# 
  2854   003EF5                     ADCAP           equ	16117	;# 
  2855   003EF6                     ADPRE           equ	16118	;# 
  2856   003EF6                     ADPREL          equ	16118	;# 
  2857   003EF7                     ADPREH          equ	16119	;# 
  2858   003EF8                     ADCON0          equ	16120	;# 
  2859   003EF9                     ADCON1          equ	16121	;# 
  2860   003EFA                     ADCON2          equ	16122	;# 
  2861   003EFB                     ADCON3          equ	16123	;# 
  2862   003EFC                     ADSTAT          equ	16124	;# 
  2863   003EFD                     ADREF           equ	16125	;# 
  2864   003EFE                     ADACT           equ	16126	;# 
  2865   003EFF                     ADCLK           equ	16127	;# 
  2866   003F12                     SMT1TMR         equ	16146	;# 
  2867   003F12                     SMT1TMRL        equ	16146	;# 
  2868   003F13                     SMT1TMRH        equ	16147	;# 
  2869   003F14                     SMT1TMRU        equ	16148	;# 
  2870   003F15                     SMT1CPR         equ	16149	;# 
  2871   003F15                     SMT1CPRL        equ	16149	;# 
  2872   003F16                     SMT1CPRH        equ	16150	;# 
  2873   003F17                     SMT1CPRU        equ	16151	;# 
  2874   003F18                     SMT1CPW         equ	16152	;# 
  2875   003F18                     SMT1CPWL        equ	16152	;# 
  2876   003F19                     SMT1CPWH        equ	16153	;# 
  2877   003F1A                     SMT1CPWU        equ	16154	;# 
  2878   003F1B                     SMT1PR          equ	16155	;# 
  2879   003F1B                     SMT1PRL         equ	16155	;# 
  2880   003F1C                     SMT1PRH         equ	16156	;# 
  2881   003F1D                     SMT1PRU         equ	16157	;# 
  2882   003F1E                     SMT1CON0        equ	16158	;# 
  2883   003F1F                     SMT1CON1        equ	16159	;# 
  2884   003F20                     SMT1STAT        equ	16160	;# 
  2885   003F21                     SMT1CLK         equ	16161	;# 
  2886   003F22                     SMT1SIG         equ	16162	;# 
  2887   003F23                     SMT1WIN         equ	16163	;# 
  2888   003F38                     NCO1ACC         equ	16184	;# 
  2889   003F38                     NCO1ACCL        equ	16184	;# 
  2890   003F39                     NCO1ACCH        equ	16185	;# 
  2891   003F3A                     NCO1ACCU        equ	16186	;# 
  2892   003F3B                     NCO1INC         equ	16187	;# 
  2893   003F3B                     NCO1INCL        equ	16187	;# 
  2894   003F3C                     NCO1INCH        equ	16188	;# 
  2895   003F3D                     NCO1INCU        equ	16189	;# 
  2896   003F3E                     NCO1CON         equ	16190	;# 
  2897   003F3F                     NCO1CLK         equ	16191	;# 
  2898   003F40                     CWG3CLK         equ	16192	;# 
  2899   003F40                     CWG3CLKCON      equ	16192	;# 
  2900   003F41                     CWG3ISM         equ	16193	;# 
  2901   003F41                     CWG3DAT         equ	16193	;# 
  2902   003F42                     CWG3DBR         equ	16194	;# 
  2903   003F43                     CWG3DBF         equ	16195	;# 
  2904   003F44                     CWG3CON0        equ	16196	;# 
  2905   003F45                     CWG3CON1        equ	16197	;# 
  2906   003F46                     CWG3AS0         equ	16198	;# 
  2907   003F47                     CWG3AS1         equ	16199	;# 
  2908   003F48                     CWG3STR         equ	16200	;# 
  2909   003F49                     CWG2CLK         equ	16201	;# 
  2910   003F49                     CWG2CLKCON      equ	16201	;# 
  2911   003F4A                     CWG2ISM         equ	16202	;# 
  2912   003F4A                     CWG2DAT         equ	16202	;# 
  2913   003F4B                     CWG2DBR         equ	16203	;# 
  2914   003F4C                     CWG2DBF         equ	16204	;# 
  2915   003F4D                     CWG2CON0        equ	16205	;# 
  2916   003F4E                     CWG2CON1        equ	16206	;# 
  2917   003F4F                     CWG2AS0         equ	16207	;# 
  2918   003F50                     CWG2AS1         equ	16208	;# 
  2919   003F51                     CWG2STR         equ	16209	;# 
  2920   003F52                     CWG1CLK         equ	16210	;# 
  2921   003F52                     CWG1CLKCON      equ	16210	;# 
  2922   003F53                     CWG1ISM         equ	16211	;# 
  2923   003F53                     CWG1DAT         equ	16211	;# 
  2924   003F54                     CWG1DBR         equ	16212	;# 
  2925   003F55                     CWG1DBF         equ	16213	;# 
  2926   003F56                     CWG1CON0        equ	16214	;# 
  2927   003F57                     CWG1CON1        equ	16215	;# 
  2928   003F58                     CWG1AS0         equ	16216	;# 
  2929   003F59                     CWG1AS1         equ	16217	;# 
  2930   003F5A                     CWG1STR         equ	16218	;# 
  2931   003F5E                     CCPTMRS0        equ	16222	;# 
  2932   003F5F                     CCPTMRS1        equ	16223	;# 
  2933   003F60                     PWM8DC          equ	16224	;# 
  2934   003F60                     PWM8DCL         equ	16224	;# 
  2935   003F61                     PWM8DCH         equ	16225	;# 
  2936   003F62                     PWM8CON         equ	16226	;# 
  2937   003F64                     PWM7DC          equ	16228	;# 
  2938   003F64                     PWM7DCL         equ	16228	;# 
  2939   003F65                     PWM7DCH         equ	16229	;# 
  2940   003F66                     PWM7CON         equ	16230	;# 
  2941   003F68                     PWM6DC          equ	16232	;# 
  2942   003F68                     PWM6DCL         equ	16232	;# 
  2943   003F69                     PWM6DCH         equ	16233	;# 
  2944   003F6A                     PWM6CON         equ	16234	;# 
  2945   003F6C                     PWM5DC          equ	16236	;# 
  2946   003F6C                     PWM5DCL         equ	16236	;# 
  2947   003F6D                     PWM5DCH         equ	16237	;# 
  2948   003F6E                     PWM5CON         equ	16238	;# 
  2949   003F70                     CCPR4           equ	16240	;# 
  2950   003F70                     CCPR4L          equ	16240	;# 
  2951   003F71                     CCPR4H          equ	16241	;# 
  2952   003F72                     CCP4CON         equ	16242	;# 
  2953   003F73                     CCP4CAP         equ	16243	;# 
  2954   003F74                     CCPR3           equ	16244	;# 
  2955   003F74                     CCPR3L          equ	16244	;# 
  2956   003F75                     CCPR3H          equ	16245	;# 
  2957   003F76                     CCP3CON         equ	16246	;# 
  2958   003F77                     CCP3CAP         equ	16247	;# 
  2959   003F78                     CCPR2           equ	16248	;# 
  2960   003F78                     CCPR2L          equ	16248	;# 
  2961   003F79                     CCPR2H          equ	16249	;# 
  2962   003F7A                     CCP2CON         equ	16250	;# 
  2963   003F7B                     CCP2CAP         equ	16251	;# 
  2964   003F7C                     CCPR1           equ	16252	;# 
  2965   003F7C                     CCPR1L          equ	16252	;# 
  2966   003F7D                     CCPR1H          equ	16253	;# 
  2967   003F7E                     CCP1CON         equ	16254	;# 
  2968   003F7F                     CCP1CAP         equ	16255	;# 
  2969   003F92                     T6TMR           equ	16274	;# 
  2970   003F92                     TMR6            equ	16274	;# 
  2971   003F93                     T6PR            equ	16275	;# 
  2972   003F93                     PR6             equ	16275	;# 
  2973   003F94                     T6CON           equ	16276	;# 
  2974   003F95                     T6HLT           equ	16277	;# 
  2975   003F96                     T6CLKCON        equ	16278	;# 
  2976   003F96                     T6CLK           equ	16278	;# 
  2977   003F97                     T6RST           equ	16279	;# 
  2978   003F98                     TMR5            equ	16280	;# 
  2979   003F98                     TMR5L           equ	16280	;# 
  2980   003F99                     TMR5H           equ	16281	;# 
  2981   003F9A                     T5CON           equ	16282	;# 
  2982   003F9A                     TMR5CON         equ	16282	;# 
  2983   003F9B                     T5GCON          equ	16283	;# 
  2984   003F9B                     TMR5GCON        equ	16283	;# 
  2985   003F9C                     T5GATE          equ	16284	;# 
  2986   003F9C                     TMR5GATE        equ	16284	;# 
  2987   003F9D                     T5CLK           equ	16285	;# 
  2988   003F9D                     TMR5CLK         equ	16285	;# 
  2989   003F9D                     PR5             equ	16285	;# 
  2990   003F9E                     T4TMR           equ	16286	;# 
  2991   003F9E                     TMR4            equ	16286	;# 
  2992   003F9F                     T4PR            equ	16287	;# 
  2993   003F9F                     PR4             equ	16287	;# 
  2994   003FA0                     T4CON           equ	16288	;# 
  2995   003FA1                     T4HLT           equ	16289	;# 
  2996   003FA2                     T4CLKCON        equ	16290	;# 
  2997   003FA2                     T4CLK           equ	16290	;# 
  2998   003FA3                     T4RST           equ	16291	;# 
  2999   003FA4                     TMR3            equ	16292	;# 
  3000   003FA4                     TMR3L           equ	16292	;# 
  3001   003FA5                     TMR3H           equ	16293	;# 
  3002   003FA6                     T3CON           equ	16294	;# 
  3003   003FA6                     TMR3CON         equ	16294	;# 
  3004   003FA7                     T3GCON          equ	16295	;# 
  3005   003FA7                     TMR3GCON        equ	16295	;# 
  3006   003FA8                     T3GATE          equ	16296	;# 
  3007   003FA8                     TMR3GATE        equ	16296	;# 
  3008   003FA9                     T3CLK           equ	16297	;# 
  3009   003FA9                     TMR3CLK         equ	16297	;# 
  3010   003FA9                     PR3             equ	16297	;# 
  3011   003FAA                     T2TMR           equ	16298	;# 
  3012   003FAA                     TMR2            equ	16298	;# 
  3013   003FAB                     T2PR            equ	16299	;# 
  3014   003FAB                     PR2             equ	16299	;# 
  3015   003FAC                     T2CON           equ	16300	;# 
  3016   003FAD                     T2HLT           equ	16301	;# 
  3017   003FAE                     T2CLKCON        equ	16302	;# 
  3018   003FAE                     T2CLK           equ	16302	;# 
  3019   003FAF                     T2RST           equ	16303	;# 
  3020   003FB0                     TMR1            equ	16304	;# 
  3021   003FB0                     TMR1L           equ	16304	;# 
  3022   003FB1                     TMR1H           equ	16305	;# 
  3023   003FB2                     T1CON           equ	16306	;# 
  3024   003FB2                     TMR1CON         equ	16306	;# 
  3025   003FB3                     T1GCON          equ	16307	;# 
  3026   003FB3                     TMR1GCON        equ	16307	;# 
  3027   003FB4                     T1GATE          equ	16308	;# 
  3028   003FB4                     TMR1GATE        equ	16308	;# 
  3029   003FB5                     T1CLK           equ	16309	;# 
  3030   003FB5                     TMR1CLK         equ	16309	;# 
  3031   003FB5                     PR1             equ	16309	;# 
  3032   003FB6                     TMR0L           equ	16310	;# 
  3033   003FB6                     TMR0            equ	16310	;# 
  3034   003FB7                     TMR0H           equ	16311	;# 
  3035   003FB7                     PR0             equ	16311	;# 
  3036   003FB8                     T0CON0          equ	16312	;# 
  3037   003FB9                     T0CON1          equ	16313	;# 
  3038   003FBA                     LATA            equ	16314	;# 
  3039   003FBB                     LATB            equ	16315	;# 
  3040   003FBC                     LATC            equ	16316	;# 
  3041   003FC2                     TRISA           equ	16322	;# 
  3042   003FC3                     TRISB           equ	16323	;# 
  3043   003FC4                     TRISC           equ	16324	;# 
  3044   003FCA                     PORTA           equ	16330	;# 
  3045   003FCB                     PORTB           equ	16331	;# 
  3046   003FCC                     PORTC           equ	16332	;# 
  3047   003FCE                     PORTE           equ	16334	;# 
  3048   003FD2                     INTCON0         equ	16338	;# 
  3049   003FD3                     INTCON1         equ	16339	;# 
  3050   003FD4                     IVTLOCK         equ	16340	;# 
  3051   003FD5                     IVTBASE         equ	16341	;# 
  3052   003FD5                     IVTBASEL        equ	16341	;# 
  3053   003FD6                     IVTBASEH        equ	16342	;# 
  3054   003FD7                     IVTBASEU        equ	16343	;# 
  3055   003FD8                     STATUS          equ	16344	;# 
  3056   003FD9                     FSR2            equ	16345	;# 
  3057   003FD9                     FSR2L           equ	16345	;# 
  3058   003FDA                     FSR2H           equ	16346	;# 
  3059   003FDB                     PLUSW2          equ	16347	;# 
  3060   003FDC                     PREINC2         equ	16348	;# 
  3061   003FDD                     POSTDEC2        equ	16349	;# 
  3062   003FDE                     POSTINC2        equ	16350	;# 
  3063   003FDF                     INDF2           equ	16351	;# 
  3064   003FE0                     BSR             equ	16352	;# 
  3065   003FE1                     FSR1            equ	16353	;# 
  3066   003FE1                     FSR1L           equ	16353	;# 
  3067   003FE2                     FSR1H           equ	16354	;# 
  3068   003FE3                     PLUSW1          equ	16355	;# 
  3069   003FE4                     PREINC1         equ	16356	;# 
  3070   003FE5                     POSTDEC1        equ	16357	;# 
  3071   003FE6                     POSTINC1        equ	16358	;# 
  3072   003FE7                     INDF1           equ	16359	;# 
  3073   003FE8                     WREG            equ	16360	;# 
  3074   003FE9                     FSR0            equ	16361	;# 
  3075   003FE9                     FSR0L           equ	16361	;# 
  3076   003FEA                     FSR0H           equ	16362	;# 
  3077   003FEB                     PLUSW0          equ	16363	;# 
  3078   003FEC                     PREINC0         equ	16364	;# 
  3079   003FED                     POSTDEC0        equ	16365	;# 
  3080   003FEE                     POSTINC0        equ	16366	;# 
  3081   003FEF                     INDF0           equ	16367	;# 
  3082   003FF0                     PCON0           equ	16368	;# 
  3083   003FF1                     PCON1           equ	16369	;# 
  3084   003FF3                     PROD            equ	16371	;# 
  3085   003FF3                     PRODL           equ	16371	;# 
  3086   003FF4                     PRODH           equ	16372	;# 
  3087   003FF5                     TABLAT          equ	16373	;# 
  3088   003FF6                     TBLPTR          equ	16374	;# 
  3089   003FF6                     TBLPTRL         equ	16374	;# 
  3090   003FF7                     TBLPTRH         equ	16375	;# 
  3091   003FF8                     TBLPTRU         equ	16376	;# 
  3092   003FF9                     PCLAT           equ	16377	;# 
  3093   003FF9                     PCL             equ	16377	;# 
  3094   003FFA                     PCLATH          equ	16378	;# 
  3095   003FFB                     PCLATU          equ	16379	;# 
  3096   003FFC                     STKPTR          equ	16380	;# 
  3097   003FFD                     TOS             equ	16381	;# 
  3098   003FFD                     TOSL            equ	16381	;# 
  3099   003FFE                     TOSH            equ	16382	;# 
  3100   003FFF                     TOSU            equ	16383	;# 
  3101   003880                     STATUS_CSHAD    equ	14464	;# 
  3102   003881                     WREG_CSHAD      equ	14465	;# 
  3103   003882                     BSR_CSHAD       equ	14466	;# 
  3104   003883                     SHADCON         equ	14467	;# 
  3105   003884                     STATUS_SHAD     equ	14468	;# 
  3106   003885                     WREG_SHAD       equ	14469	;# 
  3107   003886                     BSR_SHAD        equ	14470	;# 
  3108   003887                     PCLATH_SHAD     equ	14471	;# 
  3109   003888                     PCLATU_SHAD     equ	14472	;# 
  3110   003889                     FSR0SH          equ	14473	;# 
  3111   003889                     FSR0L_SHAD      equ	14473	;# 
  3112   00388A                     FSR0H_SHAD      equ	14474	;# 
  3113   00388B                     FSR1SH          equ	14475	;# 
  3114   00388B                     FSR1L_SHAD      equ	14475	;# 
  3115   00388C                     FSR1H_SHAD      equ	14476	;# 
  3116   00388D                     FSR2SH          equ	14477	;# 
  3117   00388D                     FSR2L_SHAD      equ	14477	;# 
  3118   00388E                     FSR2H_SHAD      equ	14478	;# 
  3119   00388F                     PRODSH          equ	14479	;# 
  3120   00388F                     PRODL_SHAD      equ	14479	;# 
  3121   003890                     PRODH_SHAD      equ	14480	;# 
  3122   00389D                     IVTADL          equ	14493	;# 
  3123   00389E                     IVTADH          equ	14494	;# 
  3124   00389F                     IVTADU          equ	14495	;# 
  3125   00395B                     WDTCON0         equ	14683	;# 
  3126   00395C                     WDTCON1         equ	14684	;# 
  3127   00395D                     WDTPSL          equ	14685	;# 
  3128   00395E                     WDTPSH          equ	14686	;# 
  3129   00395F                     WDTTMR          equ	14687	;# 
  3130   003960                     CRCDATA         equ	14688	;# 
  3131   003960                     CRCDATL         equ	14688	;# 
  3132   003961                     CRCDATH         equ	14689	;# 
  3133   003962                     CRCACC          equ	14690	;# 
  3134   003962                     CRCACCL         equ	14690	;# 
  3135   003963                     CRCACCH         equ	14691	;# 
  3136   003964                     CRCSHFT         equ	14692	;# 
  3137   003964                     CRCSHIFTL       equ	14692	;# 
  3138   003965                     CRCSHIFTH       equ	14693	;# 
  3139   003966                     CRCXOR          equ	14694	;# 
  3140   003966                     CRCXORL         equ	14694	;# 
  3141   003967                     CRCXORH         equ	14695	;# 
  3142   003968                     CRCCON0         equ	14696	;# 
  3143   003969                     CRCCON1         equ	14697	;# 
  3144   003976                     SCANLADR        equ	14710	;# 
  3145   003976                     SCANLADRL       equ	14710	;# 
  3146   003977                     SCANLADRH       equ	14711	;# 
  3147   003978                     SCANLADRU       equ	14712	;# 
  3148   003979                     SCANHADR        equ	14713	;# 
  3149   003979                     SCANHADRL       equ	14713	;# 
  3150   00397A                     SCANHADRH       equ	14714	;# 
  3151   00397B                     SCANHADRU       equ	14715	;# 
  3152   00397C                     SCANCON0        equ	14716	;# 
  3153   00397D                     SCANTRIG        equ	14717	;# 
  3154   003980                     IPR0            equ	14720	;# 
  3155   003981                     IPR1            equ	14721	;# 
  3156   003982                     IPR2            equ	14722	;# 
  3157   003983                     IPR3            equ	14723	;# 
  3158   003984                     IPR4            equ	14724	;# 
  3159   003985                     IPR5            equ	14725	;# 
  3160   003986                     IPR6            equ	14726	;# 
  3161   003987                     IPR7            equ	14727	;# 
  3162   003988                     IPR8            equ	14728	;# 
  3163   003989                     IPR9            equ	14729	;# 
  3164   00398A                     IPR10           equ	14730	;# 
  3165   003990                     PIE0            equ	14736	;# 
  3166   003991                     PIE1            equ	14737	;# 
  3167   003992                     PIE2            equ	14738	;# 
  3168   003993                     PIE3            equ	14739	;# 
  3169   003994                     PIE4            equ	14740	;# 
  3170   003995                     PIE5            equ	14741	;# 
  3171   003996                     PIE6            equ	14742	;# 
  3172   003997                     PIE7            equ	14743	;# 
  3173   003998                     PIE8            equ	14744	;# 
  3174   003999                     PIE9            equ	14745	;# 
  3175   00399A                     PIE10           equ	14746	;# 
  3176   0039A0                     PIR0            equ	14752	;# 
  3177   0039A1                     PIR1            equ	14753	;# 
  3178   0039A2                     PIR2            equ	14754	;# 
  3179   0039A3                     PIR3            equ	14755	;# 
  3180   0039A4                     PIR4            equ	14756	;# 
  3181   0039A5                     PIR5            equ	14757	;# 
  3182   0039A6                     PIR6            equ	14758	;# 
  3183   0039A7                     PIR7            equ	14759	;# 
  3184   0039A8                     PIR8            equ	14760	;# 
  3185   0039A9                     PIR9            equ	14761	;# 
  3186   0039AA                     PIR10           equ	14762	;# 
  3187   0039C0                     PMD0            equ	14784	;# 
  3188   0039C1                     PMD1            equ	14785	;# 
  3189   0039C2                     PMD2            equ	14786	;# 
  3190   0039C3                     PMD3            equ	14787	;# 
  3191   0039C4                     PMD4            equ	14788	;# 
  3192   0039C5                     PMD5            equ	14789	;# 
  3193   0039C6                     PMD6            equ	14790	;# 
  3194   0039C7                     PMD7            equ	14791	;# 
  3195   0039D0                     BORCON          equ	14800	;# 
  3196   0039D1                     VREGCON         equ	14801	;# 
  3197   0039D8                     CPUDOZE         equ	14808	;# 
  3198   0039D9                     OSCCON1         equ	14809	;# 
  3199   0039DA                     OSCCON2         equ	14810	;# 
  3200   0039DB                     OSCCON3         equ	14811	;# 
  3201   0039DC                     OSCSTAT         equ	14812	;# 
  3202   0039DC                     OSCSTAT1        equ	14812	;# 
  3203   0039DD                     OSCEN           equ	14813	;# 
  3204   0039DE                     OSCTUNE         equ	14814	;# 
  3205   0039DF                     OSCFRQ          equ	14815	;# 
  3206   0039E0                     NVMADRL         equ	14816	;# 
  3207   0039E1                     NVMADRH         equ	14817	;# 
  3208   0039E3                     NVMDAT          equ	14819	;# 
  3209   0039E5                     NVMCON1         equ	14821	;# 
  3210   0039E6                     NVMCON2         equ	14822	;# 
  3211   0039EF                     PRLOCK          equ	14831	;# 
  3212   0039F1                     ISRPR           equ	14833	;# 
  3213   0039F2                     MAINPR          equ	14834	;# 
  3214   0039F3                     DMA1PR          equ	14835	;# 
  3215   0039F4                     DMA2PR          equ	14836	;# 
  3216   0039F7                     SCANPR          equ	14839	;# 
  3217   003A00                     RA0PPS          equ	14848	;# 
  3218   003A01                     RA1PPS          equ	14849	;# 
  3219   003A02                     RA2PPS          equ	14850	;# 
  3220   003A03                     RA3PPS          equ	14851	;# 
  3221   003A04                     RA4PPS          equ	14852	;# 
  3222   003A05                     RA5PPS          equ	14853	;# 
  3223   003A06                     RA6PPS          equ	14854	;# 
  3224   003A07                     RA7PPS          equ	14855	;# 
  3225   003A08                     RB0PPS          equ	14856	;# 
  3226   003A09                     RB1PPS          equ	14857	;# 
  3227   003A0A                     RB2PPS          equ	14858	;# 
  3228   003A0B                     RB3PPS          equ	14859	;# 
  3229   003A0C                     RB4PPS          equ	14860	;# 
  3230   003A0D                     RB5PPS          equ	14861	;# 
  3231   003A0E                     RB6PPS          equ	14862	;# 
  3232   003A0F                     RB7PPS          equ	14863	;# 
  3233   003A10                     RC0PPS          equ	14864	;# 
  3234   003A11                     RC1PPS          equ	14865	;# 
  3235   003A12                     RC2PPS          equ	14866	;# 
  3236   003A13                     RC3PPS          equ	14867	;# 
  3237   003A14                     RC4PPS          equ	14868	;# 
  3238   003A15                     RC5PPS          equ	14869	;# 
  3239   003A16                     RC6PPS          equ	14870	;# 
  3240   003A17                     RC7PPS          equ	14871	;# 
  3241   003A40                     ANSELA          equ	14912	;# 
  3242   003A41                     WPUA            equ	14913	;# 
  3243   003A42                     ODCONA          equ	14914	;# 
  3244   003A43                     SLRCONA         equ	14915	;# 
  3245   003A44                     INLVLA          equ	14916	;# 
  3246   003A45                     IOCAP           equ	14917	;# 
  3247   003A46                     IOCAN           equ	14918	;# 
  3248   003A47                     IOCAF           equ	14919	;# 
  3249   003A48                     CCDPA           equ	14920	;# 
  3250   003A49                     CCDNA           equ	14921	;# 
  3251   003A50                     ANSELB          equ	14928	;# 
  3252   003A51                     WPUB            equ	14929	;# 
  3253   003A52                     ODCONB          equ	14930	;# 
  3254   003A53                     SLRCONB         equ	14931	;# 
  3255   003A54                     INLVLB          equ	14932	;# 
  3256   003A55                     IOCBP           equ	14933	;# 
  3257   003A56                     IOCBN           equ	14934	;# 
  3258   003A57                     IOCBF           equ	14935	;# 
  3259   003A58                     CCDPB           equ	14936	;# 
  3260   003A59                     CCDNB           equ	14937	;# 
  3261   003A5A                     RB1I2C          equ	14938	;# 
  3262   003A5B                     RB2I2C          equ	14939	;# 
  3263   003A60                     ANSELC          equ	14944	;# 
  3264   003A61                     WPUC            equ	14945	;# 
  3265   003A62                     ODCONC          equ	14946	;# 
  3266   003A63                     SLRCONC         equ	14947	;# 
  3267   003A64                     INLVLC          equ	14948	;# 
  3268   003A65                     IOCCP           equ	14949	;# 
  3269   003A66                     IOCCN           equ	14950	;# 
  3270   003A67                     IOCCF           equ	14951	;# 
  3271   003A68                     CCDPC           equ	14952	;# 
  3272   003A69                     CCDNC           equ	14953	;# 
  3273   003A6A                     RC3I2C          equ	14954	;# 
  3274   003A6B                     RC4I2C          equ	14955	;# 
  3275   003A81                     WPUE            equ	14977	;# 
  3276   003A84                     INLVLE          equ	14980	;# 
  3277   003A85                     IOCEP           equ	14981	;# 
  3278   003A86                     IOCEN           equ	14982	;# 
  3279   003A87                     IOCEF           equ	14983	;# 
  3280   003ABE                     CCDCON          equ	15038	;# 
  3281   003ABF                     PPSLOCK         equ	15039	;# 
  3282   003AC0                     INT0PPS         equ	15040	;# 
  3283   003AC1                     INT1PPS         equ	15041	;# 
  3284   003AC2                     INT2PPS         equ	15042	;# 
  3285   003AC3                     T0CKIPPS        equ	15043	;# 
  3286   003AC4                     T1CKIPPS        equ	15044	;# 
  3287   003AC5                     T1GPPS          equ	15045	;# 
  3288   003AC6                     T3CKIPPS        equ	15046	;# 
  3289   003AC7                     T3GPPS          equ	15047	;# 
  3290   003AC8                     T5CKIPPS        equ	15048	;# 
  3291   003AC9                     T5GPPS          equ	15049	;# 
  3292   003ACA                     T2INPPS         equ	15050	;# 
  3293   003ACB                     T4INPPS         equ	15051	;# 
  3294   003ACC                     T6INPPS         equ	15052	;# 
  3295   003ACD                     CCP1PPS         equ	15053	;# 
  3296   003ACE                     CCP2PPS         equ	15054	;# 
  3297   003ACF                     CCP3PPS         equ	15055	;# 
  3298   003AD0                     CCP4PPS         equ	15056	;# 
  3299   003AD1                     SMT1WINPPS      equ	15057	;# 
  3300   003AD2                     SMT1SIGPPS      equ	15058	;# 
  3301   003AD3                     CWG1INPPS       equ	15059	;# 
  3302   003AD4                     CWG2INPPS       equ	15060	;# 
  3303   003AD5                     CWG3INPPS       equ	15061	;# 
  3304   003AD6                     MD1CARLPPS      equ	15062	;# 
  3305   003AD7                     MD1CARHPPS      equ	15063	;# 
  3306   003AD8                     MD1SRCPPS       equ	15064	;# 
  3307   003AD9                     CLCIN0PPS       equ	15065	;# 
  3308   003ADA                     CLCIN1PPS       equ	15066	;# 
  3309   003ADB                     CLCIN2PPS       equ	15067	;# 
  3310   003ADC                     CLCIN3PPS       equ	15068	;# 
  3311   003ADD                     ADACTPPS        equ	15069	;# 
  3312   003ADE                     SPI1SCKPPS      equ	15070	;# 
  3313   003ADF                     SPI1SDIPPS      equ	15071	;# 
  3314   003AE0                     SPI1SSPPS       equ	15072	;# 
  3315   003AE1                     I2C1SCLPPS      equ	15073	;# 
  3316   003AE2                     I2C1SDAPPS      equ	15074	;# 
  3317   003AE3                     I2C2SCLPPS      equ	15075	;# 
  3318   003AE4                     I2C2SDAPPS      equ	15076	;# 
  3319   003AE5                     U1RXPPS         equ	15077	;# 
  3320   003AE6                     U1CTSPPS        equ	15078	;# 
  3321   003AE8                     U2RXPPS         equ	15080	;# 
  3322   003AE9                     U2CTSPPS        equ	15081	;# 
  3323   003BC9                     DMA2BUF         equ	15305	;# 
  3324   003BCA                     DMA2DCNT        equ	15306	;# 
  3325   003BCA                     DMA2DCNTL       equ	15306	;# 
  3326   003BCB                     DMA2DCNTH       equ	15307	;# 
  3327   003BCC                     DMA2DPTR        equ	15308	;# 
  3328   003BCC                     DMA2DPTRL       equ	15308	;# 
  3329   003BCD                     DMA2DPTRH       equ	15309	;# 
  3330   003BCE                     DMA2DSZ         equ	15310	;# 
  3331   003BCE                     DMA2DSZL        equ	15310	;# 
  3332   003BCF                     DMA2DSZH        equ	15311	;# 
  3333   003BD0                     DMA2DSA         equ	15312	;# 
  3334   003BD0                     DMA2DSAL        equ	15312	;# 
  3335   003BD1                     DMA2DSAH        equ	15313	;# 
  3336   003BD2                     DMA2SCNT        equ	15314	;# 
  3337   003BD2                     DMA2SCNTL       equ	15314	;# 
  3338   003BD3                     DMA2SCNTH       equ	15315	;# 
  3339   003BD4                     DMA2SPTR        equ	15316	;# 
  3340   003BD4                     DMA2SPTRL       equ	15316	;# 
  3341   003BD5                     DMA2SPTRH       equ	15317	;# 
  3342   003BD6                     DMA2SPTRU       equ	15318	;# 
  3343   003BD7                     DMA2SSZ         equ	15319	;# 
  3344   003BD7                     DMA2SSZL        equ	15319	;# 
  3345   003BD8                     DMA2SSZH        equ	15320	;# 
  3346   003BD9                     DMA2SSA         equ	15321	;# 
  3347   003BD9                     DMA2SSAL        equ	15321	;# 
  3348   003BDA                     DMA2SSAH        equ	15322	;# 
  3349   003BDB                     DMA2SSAU        equ	15323	;# 
  3350   003BDC                     DMA2CON0        equ	15324	;# 
  3351   003BDD                     DMA2CON1        equ	15325	;# 
  3352   003BDE                     DMA2AIRQ        equ	15326	;# 
  3353   003BDF                     DMA2SIRQ        equ	15327	;# 
  3354   003BE9                     DMA1BUF         equ	15337	;# 
  3355   003BEA                     DMA1DCNT        equ	15338	;# 
  3356   003BEA                     DMA1DCNTL       equ	15338	;# 
  3357   003BEB                     DMA1DCNTH       equ	15339	;# 
  3358   003BEC                     DMA1DPTR        equ	15340	;# 
  3359   003BEC                     DMA1DPTRL       equ	15340	;# 
  3360   003BED                     DMA1DPTRH       equ	15341	;# 
  3361   003BEE                     DMA1DSZ         equ	15342	;# 
  3362   003BEE                     DMA1DSZL        equ	15342	;# 
  3363   003BEF                     DMA1DSZH        equ	15343	;# 
  3364   003BF0                     DMA1DSA         equ	15344	;# 
  3365   003BF0                     DMA1DSAL        equ	15344	;# 
  3366   003BF1                     DMA1DSAH        equ	15345	;# 
  3367   003BF2                     DMA1SCNT        equ	15346	;# 
  3368   003BF2                     DMA1SCNTL       equ	15346	;# 
  3369   003BF3                     DMA1SCNTH       equ	15347	;# 
  3370   003BF4                     DMA1SPTR        equ	15348	;# 
  3371   003BF4                     DMA1SPTRL       equ	15348	;# 
  3372   003BF5                     DMA1SPTRH       equ	15349	;# 
  3373   003BF6                     DMA1SPTRU       equ	15350	;# 
  3374   003BF7                     DMA1SSZ         equ	15351	;# 
  3375   003BF7                     DMA1SSZL        equ	15351	;# 
  3376   003BF8                     DMA1SSZH        equ	15352	;# 
  3377   003BF9                     DMA1SSA         equ	15353	;# 
  3378   003BF9                     DMA1SSAL        equ	15353	;# 
  3379   003BFA                     DMA1SSAH        equ	15354	;# 
  3380   003BFB                     DMA1SSAU        equ	15355	;# 
  3381   003BFC                     DMA1CON0        equ	15356	;# 
  3382   003BFD                     DMA1CON1        equ	15357	;# 
  3383   003BFE                     DMA1AIRQ        equ	15358	;# 
  3384   003BFF                     DMA1SIRQ        equ	15359	;# 
  3385   003C56                     CLC4CON         equ	15446	;# 
  3386   003C57                     CLC4POL         equ	15447	;# 
  3387   003C58                     CLC4SEL0        equ	15448	;# 
  3388   003C59                     CLC4SEL1        equ	15449	;# 
  3389   003C5A                     CLC4SEL2        equ	15450	;# 
  3390   003C5B                     CLC4SEL3        equ	15451	;# 
  3391   003C5C                     CLC4GLS0        equ	15452	;# 
  3392   003C5D                     CLC4GLS1        equ	15453	;# 
  3393   003C5E                     CLC4GLS2        equ	15454	;# 
  3394   003C5F                     CLC4GLS3        equ	15455	;# 
  3395   003C60                     CLC3CON         equ	15456	;# 
  3396   003C61                     CLC3POL         equ	15457	;# 
  3397   003C62                     CLC3SEL0        equ	15458	;# 
  3398   003C63                     CLC3SEL1        equ	15459	;# 
  3399   003C64                     CLC3SEL2        equ	15460	;# 
  3400   003C65                     CLC3SEL3        equ	15461	;# 
  3401   003C66                     CLC3GLS0        equ	15462	;# 
  3402   003C67                     CLC3GLS1        equ	15463	;# 
  3403   003C68                     CLC3GLS2        equ	15464	;# 
  3404   003C69                     CLC3GLS3        equ	15465	;# 
  3405   003C6A                     CLC2CON         equ	15466	;# 
  3406   003C6B                     CLC2POL         equ	15467	;# 
  3407   003C6C                     CLC2SEL0        equ	15468	;# 
  3408   003C6D                     CLC2SEL1        equ	15469	;# 
  3409   003C6E                     CLC2SEL2        equ	15470	;# 
  3410   003C6F                     CLC2SEL3        equ	15471	;# 
  3411   003C70                     CLC2GLS0        equ	15472	;# 
  3412   003C71                     CLC2GLS1        equ	15473	;# 
  3413   003C72                     CLC2GLS2        equ	15474	;# 
  3414   003C73                     CLC2GLS3        equ	15475	;# 
  3415   003C74                     CLC1CON         equ	15476	;# 
  3416   003C75                     CLC1POL         equ	15477	;# 
  3417   003C76                     CLC1SEL0        equ	15478	;# 
  3418   003C77                     CLC1SEL1        equ	15479	;# 
  3419   003C78                     CLC1SEL2        equ	15480	;# 
  3420   003C79                     CLC1SEL3        equ	15481	;# 
  3421   003C7A                     CLC1GLS0        equ	15482	;# 
  3422   003C7B                     CLC1GLS1        equ	15483	;# 
  3423   003C7C                     CLC1GLS2        equ	15484	;# 
  3424   003C7D                     CLC1GLS3        equ	15485	;# 
  3425   003C7E                     CLCDATA0        equ	15486	;# 
  3426   003CE5                     CLKRCON         equ	15589	;# 
  3427   003CE6                     CLKRCLK         equ	15590	;# 
  3428   003CFA                     MD1CON0         equ	15610	;# 
  3429   003CFB                     MD1CON1         equ	15611	;# 
  3430   003CFC                     MD1SRC          equ	15612	;# 
  3431   003CFD                     MD1CARL         equ	15613	;# 
  3432   003CFE                     MD1CARH         equ	15614	;# 
  3433   003D10                     SPI1RXB         equ	15632	;# 
  3434   003D11                     SPI1TXB         equ	15633	;# 
  3435   003D12                     SPI1TCNT        equ	15634	;# 
  3436   003D12                     SPI1TCNTL       equ	15634	;# 
  3437   003D13                     SPI1TCNTH       equ	15635	;# 
  3438   003D14                     SPI1CON0        equ	15636	;# 
  3439   003D15                     SPI1CON1        equ	15637	;# 
  3440   003D16                     SPI1CON2        equ	15638	;# 
  3441   003D17                     SPI1STATUS      equ	15639	;# 
  3442   003D18                     SPI1TWIDTH      equ	15640	;# 
  3443   003D19                     SPI1BAUD        equ	15641	;# 
  3444   003D1A                     SPI1INTF        equ	15642	;# 
  3445   003D1B                     SPI1INTE        equ	15643	;# 
  3446   003D1C                     SPI1CLK         equ	15644	;# 
  3447   003D54                     I2C2RXB         equ	15700	;# 
  3448   003D55                     I2C2TXB         equ	15701	;# 
  3449   003D56                     I2C2CNT         equ	15702	;# 
  3450   003D57                     I2C2ADB0        equ	15703	;# 
  3451   003D58                     I2C2ADB1        equ	15704	;# 
  3452   003D59                     I2C2ADR0        equ	15705	;# 
  3453   003D5A                     I2C2ADR1        equ	15706	;# 
  3454   003D5B                     I2C2ADR2        equ	15707	;# 
  3455   003D5C                     I2C2ADR3        equ	15708	;# 
  3456   003D5D                     I2C2CON0        equ	15709	;# 
  3457   003D5E                     I2C2CON1        equ	15710	;# 
  3458   003D5F                     I2C2CON2        equ	15711	;# 
  3459   003D60                     I2C2ERR         equ	15712	;# 
  3460   003D61                     I2C2STAT0       equ	15713	;# 
  3461   003D62                     I2C2STAT1       equ	15714	;# 
  3462   003D63                     I2C2PIR         equ	15715	;# 
  3463   003D64                     I2C2PIE         equ	15716	;# 
  3464   003D65                     I2C2CLK         equ	15717	;# 
  3465   003D66                     I2C2BTO         equ	15718	;# 
  3466   003D6A                     I2C1RXB         equ	15722	;# 
  3467   003D6B                     I2C1TXB         equ	15723	;# 
  3468   003D6C                     I2C1CNT         equ	15724	;# 
  3469   003D6D                     I2C1ADB0        equ	15725	;# 
  3470   003D6E                     I2C1ADB1        equ	15726	;# 
  3471   003D6F                     I2C1ADR0        equ	15727	;# 
  3472   003D70                     I2C1ADR1        equ	15728	;# 
  3473   003D71                     I2C1ADR2        equ	15729	;# 
  3474   003D72                     I2C1ADR3        equ	15730	;# 
  3475   003D73                     I2C1CON0        equ	15731	;# 
  3476   003D74                     I2C1CON1        equ	15732	;# 
  3477   003D75                     I2C1CON2        equ	15733	;# 
  3478   003D76                     I2C1ERR         equ	15734	;# 
  3479   003D77                     I2C1STAT0       equ	15735	;# 
  3480   003D78                     I2C1STAT1       equ	15736	;# 
  3481   003D79                     I2C1PIR         equ	15737	;# 
  3482   003D7A                     I2C1PIE         equ	15738	;# 
  3483   003D7B                     I2C1CLK         equ	15739	;# 
  3484   003D7C                     I2C1BTO         equ	15740	;# 
  3485   003DD0                     U2RXB           equ	15824	;# 
  3486   003DD0                     U2RXBL          equ	15824	;# 
  3487   003DD2                     U2TXB           equ	15826	;# 
  3488   003DD2                     U2TXBL          equ	15826	;# 
  3489   003DD4                     U2P1            equ	15828	;# 
  3490   003DD4                     U2P1L           equ	15828	;# 
  3491   003DD6                     U2P2            equ	15830	;# 
  3492   003DD6                     U2P2L           equ	15830	;# 
  3493   003DD8                     U2P3            equ	15832	;# 
  3494   003DD8                     U2P3L           equ	15832	;# 
  3495   003DDA                     U2CON0          equ	15834	;# 
  3496   003DDB                     U2CON1          equ	15835	;# 
  3497   003DDC                     U2CON2          equ	15836	;# 
  3498   003DDD                     U2BRG           equ	15837	;# 
  3499   003DDD                     U2BRGL          equ	15837	;# 
  3500   003DDE                     U2BRGH          equ	15838	;# 
  3501   003DDF                     U2FIFO          equ	15839	;# 
  3502   003DE0                     U2UIR           equ	15840	;# 
  3503   003DE1                     U2ERRIR         equ	15841	;# 
  3504   003DE2                     U2ERRIE         equ	15842	;# 
  3505   003DE8                     U1RXB           equ	15848	;# 
  3506   003DE8                     U1RXBL          equ	15848	;# 
  3507   003DE9                     U1RXCHK         equ	15849	;# 
  3508   003DEA                     U1TXB           equ	15850	;# 
  3509   003DEA                     U1TXBL          equ	15850	;# 
  3510   003DEB                     U1TXCHK         equ	15851	;# 
  3511   003DEC                     U1P1            equ	15852	;# 
  3512   003DEC                     U1P1L           equ	15852	;# 
  3513   003DED                     U1P1H           equ	15853	;# 
  3514   003DEE                     U1P2            equ	15854	;# 
  3515   003DEE                     U1P2L           equ	15854	;# 
  3516   003DEF                     U1P2H           equ	15855	;# 
  3517   003DF0                     U1P3            equ	15856	;# 
  3518   003DF0                     U1P3L           equ	15856	;# 
  3519   003DF1                     U1P3H           equ	15857	;# 
  3520   003DF2                     U1CON0          equ	15858	;# 
  3521   003DF3                     U1CON1          equ	15859	;# 
  3522   003DF4                     U1CON2          equ	15860	;# 
  3523   003DF5                     U1BRG           equ	15861	;# 
  3524   003DF5                     U1BRGL          equ	15861	;# 
  3525   003DF6                     U1BRGH          equ	15862	;# 
  3526   003DF7                     U1FIFO          equ	15863	;# 
  3527   003DF8                     U1UIR           equ	15864	;# 
  3528   003DF9                     U1ERRIR         equ	15865	;# 
  3529   003DFA                     U1ERRIE         equ	15866	;# 
  3530   003E9C                     DAC1CON1        equ	16028	;# 
  3531   003E9E                     DAC1CON0        equ	16030	;# 
  3532   003EB8                     CM2CON0         equ	16056	;# 
  3533   003EB9                     CM2CON1         equ	16057	;# 
  3534   003EBA                     CM2NCH          equ	16058	;# 
  3535   003EBB                     CM2PCH          equ	16059	;# 
  3536   003EBC                     CM1CON0         equ	16060	;# 
  3537   003EBD                     CM1CON1         equ	16061	;# 
  3538   003EBE                     CM1NCH          equ	16062	;# 
  3539   003EBF                     CM1PCH          equ	16063	;# 
  3540   003EC0                     CMOUT           equ	16064	;# 
  3541   003EC1                     FVRCON          equ	16065	;# 
  3542   003EC3                     ZCDCON          equ	16067	;# 
  3543   003EC9                     HLVDCON0        equ	16073	;# 
  3544   003ECA                     HLVDCON1        equ	16074	;# 
  3545   003ED7                     ADCP            equ	16087	;# 
  3546   003EDE                     ADLTH           equ	16094	;# 
  3547   003EDE                     ADLTHL          equ	16094	;# 
  3548   003EDF                     ADLTHH          equ	16095	;# 
  3549   003EE0                     ADUTH           equ	16096	;# 
  3550   003EE0                     ADUTHL          equ	16096	;# 
  3551   003EE1                     ADUTHH          equ	16097	;# 
  3552   003EE2                     ADERR           equ	16098	;# 
  3553   003EE2                     ADERRL          equ	16098	;# 
  3554   003EE3                     ADERRH          equ	16099	;# 
  3555   003EE4                     ADSTPT          equ	16100	;# 
  3556   003EE4                     ADSTPTL         equ	16100	;# 
  3557   003EE5                     ADSTPTH         equ	16101	;# 
  3558   003EE6                     ADFLTR          equ	16102	;# 
  3559   003EE6                     ADFLTRL         equ	16102	;# 
  3560   003EE7                     ADFLTRH         equ	16103	;# 
  3561   003EE8                     ADACC           equ	16104	;# 
  3562   003EE8                     ADACCL          equ	16104	;# 
  3563   003EE9                     ADACCH          equ	16105	;# 
  3564   003EEA                     ADACCU          equ	16106	;# 
  3565   003EEB                     ADCNT           equ	16107	;# 
  3566   003EEC                     ADRPT           equ	16108	;# 
  3567   003EED                     ADPREV          equ	16109	;# 
  3568   003EED                     ADPREVL         equ	16109	;# 
  3569   003EEE                     ADPREVH         equ	16110	;# 
  3570   003EEF                     ADRES           equ	16111	;# 
  3571   003EEF                     ADRESL          equ	16111	;# 
  3572   003EF0                     ADRESH          equ	16112	;# 
  3573   003EF1                     ADPCH           equ	16113	;# 
  3574   003EF3                     ADACQ           equ	16115	;# 
  3575   003EF3                     ADACQL          equ	16115	;# 
  3576   003EF4                     ADACQH          equ	16116	;# 
  3577   003EF5                     ADCAP           equ	16117	;# 
  3578   003EF6                     ADPRE           equ	16118	;# 
  3579   003EF6                     ADPREL          equ	16118	;# 
  3580   003EF7                     ADPREH          equ	16119	;# 
  3581   003EF8                     ADCON0          equ	16120	;# 
  3582   003EF9                     ADCON1          equ	16121	;# 
  3583   003EFA                     ADCON2          equ	16122	;# 
  3584   003EFB                     ADCON3          equ	16123	;# 
  3585   003EFC                     ADSTAT          equ	16124	;# 
  3586   003EFD                     ADREF           equ	16125	;# 
  3587   003EFE                     ADACT           equ	16126	;# 
  3588   003EFF                     ADCLK           equ	16127	;# 
  3589   003F12                     SMT1TMR         equ	16146	;# 
  3590   003F12                     SMT1TMRL        equ	16146	;# 
  3591   003F13                     SMT1TMRH        equ	16147	;# 
  3592   003F14                     SMT1TMRU        equ	16148	;# 
  3593   003F15                     SMT1CPR         equ	16149	;# 
  3594   003F15                     SMT1CPRL        equ	16149	;# 
  3595   003F16                     SMT1CPRH        equ	16150	;# 
  3596   003F17                     SMT1CPRU        equ	16151	;# 
  3597   003F18                     SMT1CPW         equ	16152	;# 
  3598   003F18                     SMT1CPWL        equ	16152	;# 
  3599   003F19                     SMT1CPWH        equ	16153	;# 
  3600   003F1A                     SMT1CPWU        equ	16154	;# 
  3601   003F1B                     SMT1PR          equ	16155	;# 
  3602   003F1B                     SMT1PRL         equ	16155	;# 
  3603   003F1C                     SMT1PRH         equ	16156	;# 
  3604   003F1D                     SMT1PRU         equ	16157	;# 
  3605   003F1E                     SMT1CON0        equ	16158	;# 
  3606   003F1F                     SMT1CON1        equ	16159	;# 
  3607   003F20                     SMT1STAT        equ	16160	;# 
  3608   003F21                     SMT1CLK         equ	16161	;# 
  3609   003F22                     SMT1SIG         equ	16162	;# 
  3610   003F23                     SMT1WIN         equ	16163	;# 
  3611   003F38                     NCO1ACC         equ	16184	;# 
  3612   003F38                     NCO1ACCL        equ	16184	;# 
  3613   003F39                     NCO1ACCH        equ	16185	;# 
  3614   003F3A                     NCO1ACCU        equ	16186	;# 
  3615   003F3B                     NCO1INC         equ	16187	;# 
  3616   003F3B                     NCO1INCL        equ	16187	;# 
  3617   003F3C                     NCO1INCH        equ	16188	;# 
  3618   003F3D                     NCO1INCU        equ	16189	;# 
  3619   003F3E                     NCO1CON         equ	16190	;# 
  3620   003F3F                     NCO1CLK         equ	16191	;# 
  3621   003F40                     CWG3CLK         equ	16192	;# 
  3622   003F40                     CWG3CLKCON      equ	16192	;# 
  3623   003F41                     CWG3ISM         equ	16193	;# 
  3624   003F41                     CWG3DAT         equ	16193	;# 
  3625   003F42                     CWG3DBR         equ	16194	;# 
  3626   003F43                     CWG3DBF         equ	16195	;# 
  3627   003F44                     CWG3CON0        equ	16196	;# 
  3628   003F45                     CWG3CON1        equ	16197	;# 
  3629   003F46                     CWG3AS0         equ	16198	;# 
  3630   003F47                     CWG3AS1         equ	16199	;# 
  3631   003F48                     CWG3STR         equ	16200	;# 
  3632   003F49                     CWG2CLK         equ	16201	;# 
  3633   003F49                     CWG2CLKCON      equ	16201	;# 
  3634   003F4A                     CWG2ISM         equ	16202	;# 
  3635   003F4A                     CWG2DAT         equ	16202	;# 
  3636   003F4B                     CWG2DBR         equ	16203	;# 
  3637   003F4C                     CWG2DBF         equ	16204	;# 
  3638   003F4D                     CWG2CON0        equ	16205	;# 
  3639   003F4E                     CWG2CON1        equ	16206	;# 
  3640   003F4F                     CWG2AS0         equ	16207	;# 
  3641   003F50                     CWG2AS1         equ	16208	;# 
  3642   003F51                     CWG2STR         equ	16209	;# 
  3643   003F52                     CWG1CLK         equ	16210	;# 
  3644   003F52                     CWG1CLKCON      equ	16210	;# 
  3645   003F53                     CWG1ISM         equ	16211	;# 
  3646   003F53                     CWG1DAT         equ	16211	;# 
  3647   003F54                     CWG1DBR         equ	16212	;# 
  3648   003F55                     CWG1DBF         equ	16213	;# 
  3649   003F56                     CWG1CON0        equ	16214	;# 
  3650   003F57                     CWG1CON1        equ	16215	;# 
  3651   003F58                     CWG1AS0         equ	16216	;# 
  3652   003F59                     CWG1AS1         equ	16217	;# 
  3653   003F5A                     CWG1STR         equ	16218	;# 
  3654   003F5E                     CCPTMRS0        equ	16222	;# 
  3655   003F5F                     CCPTMRS1        equ	16223	;# 
  3656   003F60                     PWM8DC          equ	16224	;# 
  3657   003F60                     PWM8DCL         equ	16224	;# 
  3658   003F61                     PWM8DCH         equ	16225	;# 
  3659   003F62                     PWM8CON         equ	16226	;# 
  3660   003F64                     PWM7DC          equ	16228	;# 
  3661   003F64                     PWM7DCL         equ	16228	;# 
  3662   003F65                     PWM7DCH         equ	16229	;# 
  3663   003F66                     PWM7CON         equ	16230	;# 
  3664   003F68                     PWM6DC          equ	16232	;# 
  3665   003F68                     PWM6DCL         equ	16232	;# 
  3666   003F69                     PWM6DCH         equ	16233	;# 
  3667   003F6A                     PWM6CON         equ	16234	;# 
  3668   003F6C                     PWM5DC          equ	16236	;# 
  3669   003F6C                     PWM5DCL         equ	16236	;# 
  3670   003F6D                     PWM5DCH         equ	16237	;# 
  3671   003F6E                     PWM5CON         equ	16238	;# 
  3672   003F70                     CCPR4           equ	16240	;# 
  3673   003F70                     CCPR4L          equ	16240	;# 
  3674   003F71                     CCPR4H          equ	16241	;# 
  3675   003F72                     CCP4CON         equ	16242	;# 
  3676   003F73                     CCP4CAP         equ	16243	;# 
  3677   003F74                     CCPR3           equ	16244	;# 
  3678   003F74                     CCPR3L          equ	16244	;# 
  3679   003F75                     CCPR3H          equ	16245	;# 
  3680   003F76                     CCP3CON         equ	16246	;# 
  3681   003F77                     CCP3CAP         equ	16247	;# 
  3682   003F78                     CCPR2           equ	16248	;# 
  3683   003F78                     CCPR2L          equ	16248	;# 
  3684   003F79                     CCPR2H          equ	16249	;# 
  3685   003F7A                     CCP2CON         equ	16250	;# 
  3686   003F7B                     CCP2CAP         equ	16251	;# 
  3687   003F7C                     CCPR1           equ	16252	;# 
  3688   003F7C                     CCPR1L          equ	16252	;# 
  3689   003F7D                     CCPR1H          equ	16253	;# 
  3690   003F7E                     CCP1CON         equ	16254	;# 
  3691   003F7F                     CCP1CAP         equ	16255	;# 
  3692   003F92                     T6TMR           equ	16274	;# 
  3693   003F92                     TMR6            equ	16274	;# 
  3694   003F93                     T6PR            equ	16275	;# 
  3695   003F93                     PR6             equ	16275	;# 
  3696   003F94                     T6CON           equ	16276	;# 
  3697   003F95                     T6HLT           equ	16277	;# 
  3698   003F96                     T6CLKCON        equ	16278	;# 
  3699   003F96                     T6CLK           equ	16278	;# 
  3700   003F97                     T6RST           equ	16279	;# 
  3701   003F98                     TMR5            equ	16280	;# 
  3702   003F98                     TMR5L           equ	16280	;# 
  3703   003F99                     TMR5H           equ	16281	;# 
  3704   003F9A                     T5CON           equ	16282	;# 
  3705   003F9A                     TMR5CON         equ	16282	;# 
  3706   003F9B                     T5GCON          equ	16283	;# 
  3707   003F9B                     TMR5GCON        equ	16283	;# 
  3708   003F9C                     T5GATE          equ	16284	;# 
  3709   003F9C                     TMR5GATE        equ	16284	;# 
  3710   003F9D                     T5CLK           equ	16285	;# 
  3711   003F9D                     TMR5CLK         equ	16285	;# 
  3712   003F9D                     PR5             equ	16285	;# 
  3713   003F9E                     T4TMR           equ	16286	;# 
  3714   003F9E                     TMR4            equ	16286	;# 
  3715   003F9F                     T4PR            equ	16287	;# 
  3716   003F9F                     PR4             equ	16287	;# 
  3717   003FA0                     T4CON           equ	16288	;# 
  3718   003FA1                     T4HLT           equ	16289	;# 
  3719   003FA2                     T4CLKCON        equ	16290	;# 
  3720   003FA2                     T4CLK           equ	16290	;# 
  3721   003FA3                     T4RST           equ	16291	;# 
  3722   003FA4                     TMR3            equ	16292	;# 
  3723   003FA4                     TMR3L           equ	16292	;# 
  3724   003FA5                     TMR3H           equ	16293	;# 
  3725   003FA6                     T3CON           equ	16294	;# 
  3726   003FA6                     TMR3CON         equ	16294	;# 
  3727   003FA7                     T3GCON          equ	16295	;# 
  3728   003FA7                     TMR3GCON        equ	16295	;# 
  3729   003FA8                     T3GATE          equ	16296	;# 
  3730   003FA8                     TMR3GATE        equ	16296	;# 
  3731   003FA9                     T3CLK           equ	16297	;# 
  3732   003FA9                     TMR3CLK         equ	16297	;# 
  3733   003FA9                     PR3             equ	16297	;# 
  3734   003FAA                     T2TMR           equ	16298	;# 
  3735   003FAA                     TMR2            equ	16298	;# 
  3736   003FAB                     T2PR            equ	16299	;# 
  3737   003FAB                     PR2             equ	16299	;# 
  3738   003FAC                     T2CON           equ	16300	;# 
  3739   003FAD                     T2HLT           equ	16301	;# 
  3740   003FAE                     T2CLKCON        equ	16302	;# 
  3741   003FAE                     T2CLK           equ	16302	;# 
  3742   003FAF                     T2RST           equ	16303	;# 
  3743   003FB0                     TMR1            equ	16304	;# 
  3744   003FB0                     TMR1L           equ	16304	;# 
  3745   003FB1                     TMR1H           equ	16305	;# 
  3746   003FB2                     T1CON           equ	16306	;# 
  3747   003FB2                     TMR1CON         equ	16306	;# 
  3748   003FB3                     T1GCON          equ	16307	;# 
  3749   003FB3                     TMR1GCON        equ	16307	;# 
  3750   003FB4                     T1GATE          equ	16308	;# 
  3751   003FB4                     TMR1GATE        equ	16308	;# 
  3752   003FB5                     T1CLK           equ	16309	;# 
  3753   003FB5                     TMR1CLK         equ	16309	;# 
  3754   003FB5                     PR1             equ	16309	;# 
  3755   003FB6                     TMR0L           equ	16310	;# 
  3756   003FB6                     TMR0            equ	16310	;# 
  3757   003FB7                     TMR0H           equ	16311	;# 
  3758   003FB7                     PR0             equ	16311	;# 
  3759   003FB8                     T0CON0          equ	16312	;# 
  3760   003FB9                     T0CON1          equ	16313	;# 
  3761   003FBA                     LATA            equ	16314	;# 
  3762   003FBB                     LATB            equ	16315	;# 
  3763   003FBC                     LATC            equ	16316	;# 
  3764   003FC2                     TRISA           equ	16322	;# 
  3765   003FC3                     TRISB           equ	16323	;# 
  3766   003FC4                     TRISC           equ	16324	;# 
  3767   003FCA                     PORTA           equ	16330	;# 
  3768   003FCB                     PORTB           equ	16331	;# 
  3769   003FCC                     PORTC           equ	16332	;# 
  3770   003FCE                     PORTE           equ	16334	;# 
  3771   003FD2                     INTCON0         equ	16338	;# 
  3772   003FD3                     INTCON1         equ	16339	;# 
  3773   003FD4                     IVTLOCK         equ	16340	;# 
  3774   003FD5                     IVTBASE         equ	16341	;# 
  3775   003FD5                     IVTBASEL        equ	16341	;# 
  3776   003FD6                     IVTBASEH        equ	16342	;# 
  3777   003FD7                     IVTBASEU        equ	16343	;# 
  3778   003FD8                     STATUS          equ	16344	;# 
  3779   003FD9                     FSR2            equ	16345	;# 
  3780   003FD9                     FSR2L           equ	16345	;# 
  3781   003FDA                     FSR2H           equ	16346	;# 
  3782   003FDB                     PLUSW2          equ	16347	;# 
  3783   003FDC                     PREINC2         equ	16348	;# 
  3784   003FDD                     POSTDEC2        equ	16349	;# 
  3785   003FDE                     POSTINC2        equ	16350	;# 
  3786   003FDF                     INDF2           equ	16351	;# 
  3787   003FE0                     BSR             equ	16352	;# 
  3788   003FE1                     FSR1            equ	16353	;# 
  3789   003FE1                     FSR1L           equ	16353	;# 
  3790   003FE2                     FSR1H           equ	16354	;# 
  3791   003FE3                     PLUSW1          equ	16355	;# 
  3792   003FE4                     PREINC1         equ	16356	;# 
  3793   003FE5                     POSTDEC1        equ	16357	;# 
  3794   003FE6                     POSTINC1        equ	16358	;# 
  3795   003FE7                     INDF1           equ	16359	;# 
  3796   003FE8                     WREG            equ	16360	;# 
  3797   003FE9                     FSR0            equ	16361	;# 
  3798   003FE9                     FSR0L           equ	16361	;# 
  3799   003FEA                     FSR0H           equ	16362	;# 
  3800   003FEB                     PLUSW0          equ	16363	;# 
  3801   003FEC                     PREINC0         equ	16364	;# 
  3802   003FED                     POSTDEC0        equ	16365	;# 
  3803   003FEE                     POSTINC0        equ	16366	;# 
  3804   003FEF                     INDF0           equ	16367	;# 
  3805   003FF0                     PCON0           equ	16368	;# 
  3806   003FF1                     PCON1           equ	16369	;# 
  3807   003FF3                     PROD            equ	16371	;# 
  3808   003FF3                     PRODL           equ	16371	;# 
  3809   003FF4                     PRODH           equ	16372	;# 
  3810   003FF5                     TABLAT          equ	16373	;# 
  3811   003FF6                     TBLPTR          equ	16374	;# 
  3812   003FF6                     TBLPTRL         equ	16374	;# 
  3813   003FF7                     TBLPTRH         equ	16375	;# 
  3814   003FF8                     TBLPTRU         equ	16376	;# 
  3815   003FF9                     PCLAT           equ	16377	;# 
  3816   003FF9                     PCL             equ	16377	;# 
  3817   003FFA                     PCLATH          equ	16378	;# 
  3818   003FFB                     PCLATU          equ	16379	;# 
  3819   003FFC                     STKPTR          equ	16380	;# 
  3820   003FFD                     TOS             equ	16381	;# 
  3821   003FFD                     TOSL            equ	16381	;# 
  3822   003FFE                     TOSH            equ	16382	;# 
  3823   003FFF                     TOSU            equ	16383	;# 
  3824   003880                     STATUS_CSHAD    equ	14464	;# 
  3825   003881                     WREG_CSHAD      equ	14465	;# 
  3826   003882                     BSR_CSHAD       equ	14466	;# 
  3827   003883                     SHADCON         equ	14467	;# 
  3828   003884                     STATUS_SHAD     equ	14468	;# 
  3829   003885                     WREG_SHAD       equ	14469	;# 
  3830   003886                     BSR_SHAD        equ	14470	;# 
  3831   003887                     PCLATH_SHAD     equ	14471	;# 
  3832   003888                     PCLATU_SHAD     equ	14472	;# 
  3833   003889                     FSR0SH          equ	14473	;# 
  3834   003889                     FSR0L_SHAD      equ	14473	;# 
  3835   00388A                     FSR0H_SHAD      equ	14474	;# 
  3836   00388B                     FSR1SH          equ	14475	;# 
  3837   00388B                     FSR1L_SHAD      equ	14475	;# 
  3838   00388C                     FSR1H_SHAD      equ	14476	;# 
  3839   00388D                     FSR2SH          equ	14477	;# 
  3840   00388D                     FSR2L_SHAD      equ	14477	;# 
  3841   00388E                     FSR2H_SHAD      equ	14478	;# 
  3842   00388F                     PRODSH          equ	14479	;# 
  3843   00388F                     PRODL_SHAD      equ	14479	;# 
  3844   003890                     PRODH_SHAD      equ	14480	;# 
  3845   00389D                     IVTADL          equ	14493	;# 
  3846   00389E                     IVTADH          equ	14494	;# 
  3847   00389F                     IVTADU          equ	14495	;# 
  3848   00395B                     WDTCON0         equ	14683	;# 
  3849   00395C                     WDTCON1         equ	14684	;# 
  3850   00395D                     WDTPSL          equ	14685	;# 
  3851   00395E                     WDTPSH          equ	14686	;# 
  3852   00395F                     WDTTMR          equ	14687	;# 
  3853   003960                     CRCDATA         equ	14688	;# 
  3854   003960                     CRCDATL         equ	14688	;# 
  3855   003961                     CRCDATH         equ	14689	;# 
  3856   003962                     CRCACC          equ	14690	;# 
  3857   003962                     CRCACCL         equ	14690	;# 
  3858   003963                     CRCACCH         equ	14691	;# 
  3859   003964                     CRCSHFT         equ	14692	;# 
  3860   003964                     CRCSHIFTL       equ	14692	;# 
  3861   003965                     CRCSHIFTH       equ	14693	;# 
  3862   003966                     CRCXOR          equ	14694	;# 
  3863   003966                     CRCXORL         equ	14694	;# 
  3864   003967                     CRCXORH         equ	14695	;# 
  3865   003968                     CRCCON0         equ	14696	;# 
  3866   003969                     CRCCON1         equ	14697	;# 
  3867   003976                     SCANLADR        equ	14710	;# 
  3868   003976                     SCANLADRL       equ	14710	;# 
  3869   003977                     SCANLADRH       equ	14711	;# 
  3870   003978                     SCANLADRU       equ	14712	;# 
  3871   003979                     SCANHADR        equ	14713	;# 
  3872   003979                     SCANHADRL       equ	14713	;# 
  3873   00397A                     SCANHADRH       equ	14714	;# 
  3874   00397B                     SCANHADRU       equ	14715	;# 
  3875   00397C                     SCANCON0        equ	14716	;# 
  3876   00397D                     SCANTRIG        equ	14717	;# 
  3877   003980                     IPR0            equ	14720	;# 
  3878   003981                     IPR1            equ	14721	;# 
  3879   003982                     IPR2            equ	14722	;# 
  3880   003983                     IPR3            equ	14723	;# 
  3881   003984                     IPR4            equ	14724	;# 
  3882   003985                     IPR5            equ	14725	;# 
  3883   003986                     IPR6            equ	14726	;# 
  3884   003987                     IPR7            equ	14727	;# 
  3885   003988                     IPR8            equ	14728	;# 
  3886   003989                     IPR9            equ	14729	;# 
  3887   00398A                     IPR10           equ	14730	;# 
  3888   003990                     PIE0            equ	14736	;# 
  3889   003991                     PIE1            equ	14737	;# 
  3890   003992                     PIE2            equ	14738	;# 
  3891   003993                     PIE3            equ	14739	;# 
  3892   003994                     PIE4            equ	14740	;# 
  3893   003995                     PIE5            equ	14741	;# 
  3894   003996                     PIE6            equ	14742	;# 
  3895   003997                     PIE7            equ	14743	;# 
  3896   003998                     PIE8            equ	14744	;# 
  3897   003999                     PIE9            equ	14745	;# 
  3898   00399A                     PIE10           equ	14746	;# 
  3899   0039A0                     PIR0            equ	14752	;# 
  3900   0039A1                     PIR1            equ	14753	;# 
  3901   0039A2                     PIR2            equ	14754	;# 
  3902   0039A3                     PIR3            equ	14755	;# 
  3903   0039A4                     PIR4            equ	14756	;# 
  3904   0039A5                     PIR5            equ	14757	;# 
  3905   0039A6                     PIR6            equ	14758	;# 
  3906   0039A7                     PIR7            equ	14759	;# 
  3907   0039A8                     PIR8            equ	14760	;# 
  3908   0039A9                     PIR9            equ	14761	;# 
  3909   0039AA                     PIR10           equ	14762	;# 
  3910   0039C0                     PMD0            equ	14784	;# 
  3911   0039C1                     PMD1            equ	14785	;# 
  3912   0039C2                     PMD2            equ	14786	;# 
  3913   0039C3                     PMD3            equ	14787	;# 
  3914   0039C4                     PMD4            equ	14788	;# 
  3915   0039C5                     PMD5            equ	14789	;# 
  3916   0039C6                     PMD6            equ	14790	;# 
  3917   0039C7                     PMD7            equ	14791	;# 
  3918   0039D0                     BORCON          equ	14800	;# 
  3919   0039D1                     VREGCON         equ	14801	;# 
  3920   0039D8                     CPUDOZE         equ	14808	;# 
  3921   0039D9                     OSCCON1         equ	14809	;# 
  3922   0039DA                     OSCCON2         equ	14810	;# 
  3923   0039DB                     OSCCON3         equ	14811	;# 
  3924   0039DC                     OSCSTAT         equ	14812	;# 
  3925   0039DC                     OSCSTAT1        equ	14812	;# 
  3926   0039DD                     OSCEN           equ	14813	;# 
  3927   0039DE                     OSCTUNE         equ	14814	;# 
  3928   0039DF                     OSCFRQ          equ	14815	;# 
  3929   0039E0                     NVMADRL         equ	14816	;# 
  3930   0039E1                     NVMADRH         equ	14817	;# 
  3931   0039E3                     NVMDAT          equ	14819	;# 
  3932   0039E5                     NVMCON1         equ	14821	;# 
  3933   0039E6                     NVMCON2         equ	14822	;# 
  3934   0039EF                     PRLOCK          equ	14831	;# 
  3935   0039F1                     ISRPR           equ	14833	;# 
  3936   0039F2                     MAINPR          equ	14834	;# 
  3937   0039F3                     DMA1PR          equ	14835	;# 
  3938   0039F4                     DMA2PR          equ	14836	;# 
  3939   0039F7                     SCANPR          equ	14839	;# 
  3940   003A00                     RA0PPS          equ	14848	;# 
  3941   003A01                     RA1PPS          equ	14849	;# 
  3942   003A02                     RA2PPS          equ	14850	;# 
  3943   003A03                     RA3PPS          equ	14851	;# 
  3944   003A04                     RA4PPS          equ	14852	;# 
  3945   003A05                     RA5PPS          equ	14853	;# 
  3946   003A06                     RA6PPS          equ	14854	;# 
  3947   003A07                     RA7PPS          equ	14855	;# 
  3948   003A08                     RB0PPS          equ	14856	;# 
  3949   003A09                     RB1PPS          equ	14857	;# 
  3950   003A0A                     RB2PPS          equ	14858	;# 
  3951   003A0B                     RB3PPS          equ	14859	;# 
  3952   003A0C                     RB4PPS          equ	14860	;# 
  3953   003A0D                     RB5PPS          equ	14861	;# 
  3954   003A0E                     RB6PPS          equ	14862	;# 
  3955   003A0F                     RB7PPS          equ	14863	;# 
  3956   003A10                     RC0PPS          equ	14864	;# 
  3957   003A11                     RC1PPS          equ	14865	;# 
  3958   003A12                     RC2PPS          equ	14866	;# 
  3959   003A13                     RC3PPS          equ	14867	;# 
  3960   003A14                     RC4PPS          equ	14868	;# 
  3961   003A15                     RC5PPS          equ	14869	;# 
  3962   003A16                     RC6PPS          equ	14870	;# 
  3963   003A17                     RC7PPS          equ	14871	;# 
  3964   003A40                     ANSELA          equ	14912	;# 
  3965   003A41                     WPUA            equ	14913	;# 
  3966   003A42                     ODCONA          equ	14914	;# 
  3967   003A43                     SLRCONA         equ	14915	;# 
  3968   003A44                     INLVLA          equ	14916	;# 
  3969   003A45                     IOCAP           equ	14917	;# 
  3970   003A46                     IOCAN           equ	14918	;# 
  3971   003A47                     IOCAF           equ	14919	;# 
  3972   003A48                     CCDPA           equ	14920	;# 
  3973   003A49                     CCDNA           equ	14921	;# 
  3974   003A50                     ANSELB          equ	14928	;# 
  3975   003A51                     WPUB            equ	14929	;# 
  3976   003A52                     ODCONB          equ	14930	;# 
  3977   003A53                     SLRCONB         equ	14931	;# 
  3978   003A54                     INLVLB          equ	14932	;# 
  3979   003A55                     IOCBP           equ	14933	;# 
  3980   003A56                     IOCBN           equ	14934	;# 
  3981   003A57                     IOCBF           equ	14935	;# 
  3982   003A58                     CCDPB           equ	14936	;# 
  3983   003A59                     CCDNB           equ	14937	;# 
  3984   003A5A                     RB1I2C          equ	14938	;# 
  3985   003A5B                     RB2I2C          equ	14939	;# 
  3986   003A60                     ANSELC          equ	14944	;# 
  3987   003A61                     WPUC            equ	14945	;# 
  3988   003A62                     ODCONC          equ	14946	;# 
  3989   003A63                     SLRCONC         equ	14947	;# 
  3990   003A64                     INLVLC          equ	14948	;# 
  3991   003A65                     IOCCP           equ	14949	;# 
  3992   003A66                     IOCCN           equ	14950	;# 
  3993   003A67                     IOCCF           equ	14951	;# 
  3994   003A68                     CCDPC           equ	14952	;# 
  3995   003A69                     CCDNC           equ	14953	;# 
  3996   003A6A                     RC3I2C          equ	14954	;# 
  3997   003A6B                     RC4I2C          equ	14955	;# 
  3998   003A81                     WPUE            equ	14977	;# 
  3999   003A84                     INLVLE          equ	14980	;# 
  4000   003A85                     IOCEP           equ	14981	;# 
  4001   003A86                     IOCEN           equ	14982	;# 
  4002   003A87                     IOCEF           equ	14983	;# 
  4003   003ABE                     CCDCON          equ	15038	;# 
  4004   003ABF                     PPSLOCK         equ	15039	;# 
  4005   003AC0                     INT0PPS         equ	15040	;# 
  4006   003AC1                     INT1PPS         equ	15041	;# 
  4007   003AC2                     INT2PPS         equ	15042	;# 
  4008   003AC3                     T0CKIPPS        equ	15043	;# 
  4009   003AC4                     T1CKIPPS        equ	15044	;# 
  4010   003AC5                     T1GPPS          equ	15045	;# 
  4011   003AC6                     T3CKIPPS        equ	15046	;# 
  4012   003AC7                     T3GPPS          equ	15047	;# 
  4013   003AC8                     T5CKIPPS        equ	15048	;# 
  4014   003AC9                     T5GPPS          equ	15049	;# 
  4015   003ACA                     T2INPPS         equ	15050	;# 
  4016   003ACB                     T4INPPS         equ	15051	;# 
  4017   003ACC                     T6INPPS         equ	15052	;# 
  4018   003ACD                     CCP1PPS         equ	15053	;# 
  4019   003ACE                     CCP2PPS         equ	15054	;# 
  4020   003ACF                     CCP3PPS         equ	15055	;# 
  4021   003AD0                     CCP4PPS         equ	15056	;# 
  4022   003AD1                     SMT1WINPPS      equ	15057	;# 
  4023   003AD2                     SMT1SIGPPS      equ	15058	;# 
  4024   003AD3                     CWG1INPPS       equ	15059	;# 
  4025   003AD4                     CWG2INPPS       equ	15060	;# 
  4026   003AD5                     CWG3INPPS       equ	15061	;# 
  4027   003AD6                     MD1CARLPPS      equ	15062	;# 
  4028   003AD7                     MD1CARHPPS      equ	15063	;# 
  4029   003AD8                     MD1SRCPPS       equ	15064	;# 
  4030   003AD9                     CLCIN0PPS       equ	15065	;# 
  4031   003ADA                     CLCIN1PPS       equ	15066	;# 
  4032   003ADB                     CLCIN2PPS       equ	15067	;# 
  4033   003ADC                     CLCIN3PPS       equ	15068	;# 
  4034   003ADD                     ADACTPPS        equ	15069	;# 
  4035   003ADE                     SPI1SCKPPS      equ	15070	;# 
  4036   003ADF                     SPI1SDIPPS      equ	15071	;# 
  4037   003AE0                     SPI1SSPPS       equ	15072	;# 
  4038   003AE1                     I2C1SCLPPS      equ	15073	;# 
  4039   003AE2                     I2C1SDAPPS      equ	15074	;# 
  4040   003AE3                     I2C2SCLPPS      equ	15075	;# 
  4041   003AE4                     I2C2SDAPPS      equ	15076	;# 
  4042   003AE5                     U1RXPPS         equ	15077	;# 
  4043   003AE6                     U1CTSPPS        equ	15078	;# 
  4044   003AE8                     U2RXPPS         equ	15080	;# 
  4045   003AE9                     U2CTSPPS        equ	15081	;# 
  4046   003BC9                     DMA2BUF         equ	15305	;# 
  4047   003BCA                     DMA2DCNT        equ	15306	;# 
  4048   003BCA                     DMA2DCNTL       equ	15306	;# 
  4049   003BCB                     DMA2DCNTH       equ	15307	;# 
  4050   003BCC                     DMA2DPTR        equ	15308	;# 
  4051   003BCC                     DMA2DPTRL       equ	15308	;# 
  4052   003BCD                     DMA2DPTRH       equ	15309	;# 
  4053   003BCE                     DMA2DSZ         equ	15310	;# 
  4054   003BCE                     DMA2DSZL        equ	15310	;# 
  4055   003BCF                     DMA2DSZH        equ	15311	;# 
  4056   003BD0                     DMA2DSA         equ	15312	;# 
  4057   003BD0                     DMA2DSAL        equ	15312	;# 
  4058   003BD1                     DMA2DSAH        equ	15313	;# 
  4059   003BD2                     DMA2SCNT        equ	15314	;# 
  4060   003BD2                     DMA2SCNTL       equ	15314	;# 
  4061   003BD3                     DMA2SCNTH       equ	15315	;# 
  4062   003BD4                     DMA2SPTR        equ	15316	;# 
  4063   003BD4                     DMA2SPTRL       equ	15316	;# 
  4064   003BD5                     DMA2SPTRH       equ	15317	;# 
  4065   003BD6                     DMA2SPTRU       equ	15318	;# 
  4066   003BD7                     DMA2SSZ         equ	15319	;# 
  4067   003BD7                     DMA2SSZL        equ	15319	;# 
  4068   003BD8                     DMA2SSZH        equ	15320	;# 
  4069   003BD9                     DMA2SSA         equ	15321	;# 
  4070   003BD9                     DMA2SSAL        equ	15321	;# 
  4071   003BDA                     DMA2SSAH        equ	15322	;# 
  4072   003BDB                     DMA2SSAU        equ	15323	;# 
  4073   003BDC                     DMA2CON0        equ	15324	;# 
  4074   003BDD                     DMA2CON1        equ	15325	;# 
  4075   003BDE                     DMA2AIRQ        equ	15326	;# 
  4076   003BDF                     DMA2SIRQ        equ	15327	;# 
  4077   003BE9                     DMA1BUF         equ	15337	;# 
  4078   003BEA                     DMA1DCNT        equ	15338	;# 
  4079   003BEA                     DMA1DCNTL       equ	15338	;# 
  4080   003BEB                     DMA1DCNTH       equ	15339	;# 
  4081   003BEC                     DMA1DPTR        equ	15340	;# 
  4082   003BEC                     DMA1DPTRL       equ	15340	;# 
  4083   003BED                     DMA1DPTRH       equ	15341	;# 
  4084   003BEE                     DMA1DSZ         equ	15342	;# 
  4085   003BEE                     DMA1DSZL        equ	15342	;# 
  4086   003BEF                     DMA1DSZH        equ	15343	;# 
  4087   003BF0                     DMA1DSA         equ	15344	;# 
  4088   003BF0                     DMA1DSAL        equ	15344	;# 
  4089   003BF1                     DMA1DSAH        equ	15345	;# 
  4090   003BF2                     DMA1SCNT        equ	15346	;# 
  4091   003BF2                     DMA1SCNTL       equ	15346	;# 
  4092   003BF3                     DMA1SCNTH       equ	15347	;# 
  4093   003BF4                     DMA1SPTR        equ	15348	;# 
  4094   003BF4                     DMA1SPTRL       equ	15348	;# 
  4095   003BF5                     DMA1SPTRH       equ	15349	;# 
  4096   003BF6                     DMA1SPTRU       equ	15350	;# 
  4097   003BF7                     DMA1SSZ         equ	15351	;# 
  4098   003BF7                     DMA1SSZL        equ	15351	;# 
  4099   003BF8                     DMA1SSZH        equ	15352	;# 
  4100   003BF9                     DMA1SSA         equ	15353	;# 
  4101   003BF9                     DMA1SSAL        equ	15353	;# 
  4102   003BFA                     DMA1SSAH        equ	15354	;# 
  4103   003BFB                     DMA1SSAU        equ	15355	;# 
  4104   003BFC                     DMA1CON0        equ	15356	;# 
  4105   003BFD                     DMA1CON1        equ	15357	;# 
  4106   003BFE                     DMA1AIRQ        equ	15358	;# 
  4107   003BFF                     DMA1SIRQ        equ	15359	;# 
  4108   003C56                     CLC4CON         equ	15446	;# 
  4109   003C57                     CLC4POL         equ	15447	;# 
  4110   003C58                     CLC4SEL0        equ	15448	;# 
  4111   003C59                     CLC4SEL1        equ	15449	;# 
  4112   003C5A                     CLC4SEL2        equ	15450	;# 
  4113   003C5B                     CLC4SEL3        equ	15451	;# 
  4114   003C5C                     CLC4GLS0        equ	15452	;# 
  4115   003C5D                     CLC4GLS1        equ	15453	;# 
  4116   003C5E                     CLC4GLS2        equ	15454	;# 
  4117   003C5F                     CLC4GLS3        equ	15455	;# 
  4118   003C60                     CLC3CON         equ	15456	;# 
  4119   003C61                     CLC3POL         equ	15457	;# 
  4120   003C62                     CLC3SEL0        equ	15458	;# 
  4121   003C63                     CLC3SEL1        equ	15459	;# 
  4122   003C64                     CLC3SEL2        equ	15460	;# 
  4123   003C65                     CLC3SEL3        equ	15461	;# 
  4124   003C66                     CLC3GLS0        equ	15462	;# 
  4125   003C67                     CLC3GLS1        equ	15463	;# 
  4126   003C68                     CLC3GLS2        equ	15464	;# 
  4127   003C69                     CLC3GLS3        equ	15465	;# 
  4128   003C6A                     CLC2CON         equ	15466	;# 
  4129   003C6B                     CLC2POL         equ	15467	;# 
  4130   003C6C                     CLC2SEL0        equ	15468	;# 
  4131   003C6D                     CLC2SEL1        equ	15469	;# 
  4132   003C6E                     CLC2SEL2        equ	15470	;# 
  4133   003C6F                     CLC2SEL3        equ	15471	;# 
  4134   003C70                     CLC2GLS0        equ	15472	;# 
  4135   003C71                     CLC2GLS1        equ	15473	;# 
  4136   003C72                     CLC2GLS2        equ	15474	;# 
  4137   003C73                     CLC2GLS3        equ	15475	;# 
  4138   003C74                     CLC1CON         equ	15476	;# 
  4139   003C75                     CLC1POL         equ	15477	;# 
  4140   003C76                     CLC1SEL0        equ	15478	;# 
  4141   003C77                     CLC1SEL1        equ	15479	;# 
  4142   003C78                     CLC1SEL2        equ	15480	;# 
  4143   003C79                     CLC1SEL3        equ	15481	;# 
  4144   003C7A                     CLC1GLS0        equ	15482	;# 
  4145   003C7B                     CLC1GLS1        equ	15483	;# 
  4146   003C7C                     CLC1GLS2        equ	15484	;# 
  4147   003C7D                     CLC1GLS3        equ	15485	;# 
  4148   003C7E                     CLCDATA0        equ	15486	;# 
  4149   003CE5                     CLKRCON         equ	15589	;# 
  4150   003CE6                     CLKRCLK         equ	15590	;# 
  4151   003CFA                     MD1CON0         equ	15610	;# 
  4152   003CFB                     MD1CON1         equ	15611	;# 
  4153   003CFC                     MD1SRC          equ	15612	;# 
  4154   003CFD                     MD1CARL         equ	15613	;# 
  4155   003CFE                     MD1CARH         equ	15614	;# 
  4156   003D10                     SPI1RXB         equ	15632	;# 
  4157   003D11                     SPI1TXB         equ	15633	;# 
  4158   003D12                     SPI1TCNT        equ	15634	;# 
  4159   003D12                     SPI1TCNTL       equ	15634	;# 
  4160   003D13                     SPI1TCNTH       equ	15635	;# 
  4161   003D14                     SPI1CON0        equ	15636	;# 
  4162   003D15                     SPI1CON1        equ	15637	;# 
  4163   003D16                     SPI1CON2        equ	15638	;# 
  4164   003D17                     SPI1STATUS      equ	15639	;# 
  4165   003D18                     SPI1TWIDTH      equ	15640	;# 
  4166   003D19                     SPI1BAUD        equ	15641	;# 
  4167   003D1A                     SPI1INTF        equ	15642	;# 
  4168   003D1B                     SPI1INTE        equ	15643	;# 
  4169   003D1C                     SPI1CLK         equ	15644	;# 
  4170   003D54                     I2C2RXB         equ	15700	;# 
  4171   003D55                     I2C2TXB         equ	15701	;# 
  4172   003D56                     I2C2CNT         equ	15702	;# 
  4173   003D57                     I2C2ADB0        equ	15703	;# 
  4174   003D58                     I2C2ADB1        equ	15704	;# 
  4175   003D59                     I2C2ADR0        equ	15705	;# 
  4176   003D5A                     I2C2ADR1        equ	15706	;# 
  4177   003D5B                     I2C2ADR2        equ	15707	;# 
  4178   003D5C                     I2C2ADR3        equ	15708	;# 
  4179   003D5D                     I2C2CON0        equ	15709	;# 
  4180   003D5E                     I2C2CON1        equ	15710	;# 
  4181   003D5F                     I2C2CON2        equ	15711	;# 
  4182   003D60                     I2C2ERR         equ	15712	;# 
  4183   003D61                     I2C2STAT0       equ	15713	;# 
  4184   003D62                     I2C2STAT1       equ	15714	;# 
  4185   003D63                     I2C2PIR         equ	15715	;# 
  4186   003D64                     I2C2PIE         equ	15716	;# 
  4187   003D65                     I2C2CLK         equ	15717	;# 
  4188   003D66                     I2C2BTO         equ	15718	;# 
  4189   003D6A                     I2C1RXB         equ	15722	;# 
  4190   003D6B                     I2C1TXB         equ	15723	;# 
  4191   003D6C                     I2C1CNT         equ	15724	;# 
  4192   003D6D                     I2C1ADB0        equ	15725	;# 
  4193   003D6E                     I2C1ADB1        equ	15726	;# 
  4194   003D6F                     I2C1ADR0        equ	15727	;# 
  4195   003D70                     I2C1ADR1        equ	15728	;# 
  4196   003D71                     I2C1ADR2        equ	15729	;# 
  4197   003D72                     I2C1ADR3        equ	15730	;# 
  4198   003D73                     I2C1CON0        equ	15731	;# 
  4199   003D74                     I2C1CON1        equ	15732	;# 
  4200   003D75                     I2C1CON2        equ	15733	;# 
  4201   003D76                     I2C1ERR         equ	15734	;# 
  4202   003D77                     I2C1STAT0       equ	15735	;# 
  4203   003D78                     I2C1STAT1       equ	15736	;# 
  4204   003D79                     I2C1PIR         equ	15737	;# 
  4205   003D7A                     I2C1PIE         equ	15738	;# 
  4206   003D7B                     I2C1CLK         equ	15739	;# 
  4207   003D7C                     I2C1BTO         equ	15740	;# 
  4208   003DD0                     U2RXB           equ	15824	;# 
  4209   003DD0                     U2RXBL          equ	15824	;# 
  4210   003DD2                     U2TXB           equ	15826	;# 
  4211   003DD2                     U2TXBL          equ	15826	;# 
  4212   003DD4                     U2P1            equ	15828	;# 
  4213   003DD4                     U2P1L           equ	15828	;# 
  4214   003DD6                     U2P2            equ	15830	;# 
  4215   003DD6                     U2P2L           equ	15830	;# 
  4216   003DD8                     U2P3            equ	15832	;# 
  4217   003DD8                     U2P3L           equ	15832	;# 
  4218   003DDA                     U2CON0          equ	15834	;# 
  4219   003DDB                     U2CON1          equ	15835	;# 
  4220   003DDC                     U2CON2          equ	15836	;# 
  4221   003DDD                     U2BRG           equ	15837	;# 
  4222   003DDD                     U2BRGL          equ	15837	;# 
  4223   003DDE                     U2BRGH          equ	15838	;# 
  4224   003DDF                     U2FIFO          equ	15839	;# 
  4225   003DE0                     U2UIR           equ	15840	;# 
  4226   003DE1                     U2ERRIR         equ	15841	;# 
  4227   003DE2                     U2ERRIE         equ	15842	;# 
  4228   003DE8                     U1RXB           equ	15848	;# 
  4229   003DE8                     U1RXBL          equ	15848	;# 
  4230   003DE9                     U1RXCHK         equ	15849	;# 
  4231   003DEA                     U1TXB           equ	15850	;# 
  4232   003DEA                     U1TXBL          equ	15850	;# 
  4233   003DEB                     U1TXCHK         equ	15851	;# 
  4234   003DEC                     U1P1            equ	15852	;# 
  4235   003DEC                     U1P1L           equ	15852	;# 
  4236   003DED                     U1P1H           equ	15853	;# 
  4237   003DEE                     U1P2            equ	15854	;# 
  4238   003DEE                     U1P2L           equ	15854	;# 
  4239   003DEF                     U1P2H           equ	15855	;# 
  4240   003DF0                     U1P3            equ	15856	;# 
  4241   003DF0                     U1P3L           equ	15856	;# 
  4242   003DF1                     U1P3H           equ	15857	;# 
  4243   003DF2                     U1CON0          equ	15858	;# 
  4244   003DF3                     U1CON1          equ	15859	;# 
  4245   003DF4                     U1CON2          equ	15860	;# 
  4246   003DF5                     U1BRG           equ	15861	;# 
  4247   003DF5                     U1BRGL          equ	15861	;# 
  4248   003DF6                     U1BRGH          equ	15862	;# 
  4249   003DF7                     U1FIFO          equ	15863	;# 
  4250   003DF8                     U1UIR           equ	15864	;# 
  4251   003DF9                     U1ERRIR         equ	15865	;# 
  4252   003DFA                     U1ERRIE         equ	15866	;# 
  4253   003E9C                     DAC1CON1        equ	16028	;# 
  4254   003E9E                     DAC1CON0        equ	16030	;# 
  4255   003EB8                     CM2CON0         equ	16056	;# 
  4256   003EB9                     CM2CON1         equ	16057	;# 
  4257   003EBA                     CM2NCH          equ	16058	;# 
  4258   003EBB                     CM2PCH          equ	16059	;# 
  4259   003EBC                     CM1CON0         equ	16060	;# 
  4260   003EBD                     CM1CON1         equ	16061	;# 
  4261   003EBE                     CM1NCH          equ	16062	;# 
  4262   003EBF                     CM1PCH          equ	16063	;# 
  4263   003EC0                     CMOUT           equ	16064	;# 
  4264   003EC1                     FVRCON          equ	16065	;# 
  4265   003EC3                     ZCDCON          equ	16067	;# 
  4266   003EC9                     HLVDCON0        equ	16073	;# 
  4267   003ECA                     HLVDCON1        equ	16074	;# 
  4268   003ED7                     ADCP            equ	16087	;# 
  4269   003EDE                     ADLTH           equ	16094	;# 
  4270   003EDE                     ADLTHL          equ	16094	;# 
  4271   003EDF                     ADLTHH          equ	16095	;# 
  4272   003EE0                     ADUTH           equ	16096	;# 
  4273   003EE0                     ADUTHL          equ	16096	;# 
  4274   003EE1                     ADUTHH          equ	16097	;# 
  4275   003EE2                     ADERR           equ	16098	;# 
  4276   003EE2                     ADERRL          equ	16098	;# 
  4277   003EE3                     ADERRH          equ	16099	;# 
  4278   003EE4                     ADSTPT          equ	16100	;# 
  4279   003EE4                     ADSTPTL         equ	16100	;# 
  4280   003EE5                     ADSTPTH         equ	16101	;# 
  4281   003EE6                     ADFLTR          equ	16102	;# 
  4282   003EE6                     ADFLTRL         equ	16102	;# 
  4283   003EE7                     ADFLTRH         equ	16103	;# 
  4284   003EE8                     ADACC           equ	16104	;# 
  4285   003EE8                     ADACCL          equ	16104	;# 
  4286   003EE9                     ADACCH          equ	16105	;# 
  4287   003EEA                     ADACCU          equ	16106	;# 
  4288   003EEB                     ADCNT           equ	16107	;# 
  4289   003EEC                     ADRPT           equ	16108	;# 
  4290   003EED                     ADPREV          equ	16109	;# 
  4291   003EED                     ADPREVL         equ	16109	;# 
  4292   003EEE                     ADPREVH         equ	16110	;# 
  4293   003EEF                     ADRES           equ	16111	;# 
  4294   003EEF                     ADRESL          equ	16111	;# 
  4295   003EF0                     ADRESH          equ	16112	;# 
  4296   003EF1                     ADPCH           equ	16113	;# 
  4297   003EF3                     ADACQ           equ	16115	;# 
  4298   003EF3                     ADACQL          equ	16115	;# 
  4299   003EF4                     ADACQH          equ	16116	;# 
  4300   003EF5                     ADCAP           equ	16117	;# 
  4301   003EF6                     ADPRE           equ	16118	;# 
  4302   003EF6                     ADPREL          equ	16118	;# 
  4303   003EF7                     ADPREH          equ	16119	;# 
  4304   003EF8                     ADCON0          equ	16120	;# 
  4305   003EF9                     ADCON1          equ	16121	;# 
  4306   003EFA                     ADCON2          equ	16122	;# 
  4307   003EFB                     ADCON3          equ	16123	;# 
  4308   003EFC                     ADSTAT          equ	16124	;# 
  4309   003EFD                     ADREF           equ	16125	;# 
  4310   003EFE                     ADACT           equ	16126	;# 
  4311   003EFF                     ADCLK           equ	16127	;# 
  4312   003F12                     SMT1TMR         equ	16146	;# 
  4313   003F12                     SMT1TMRL        equ	16146	;# 
  4314   003F13                     SMT1TMRH        equ	16147	;# 
  4315   003F14                     SMT1TMRU        equ	16148	;# 
  4316   003F15                     SMT1CPR         equ	16149	;# 
  4317   003F15                     SMT1CPRL        equ	16149	;# 
  4318   003F16                     SMT1CPRH        equ	16150	;# 
  4319   003F17                     SMT1CPRU        equ	16151	;# 
  4320   003F18                     SMT1CPW         equ	16152	;# 
  4321   003F18                     SMT1CPWL        equ	16152	;# 
  4322   003F19                     SMT1CPWH        equ	16153	;# 
  4323   003F1A                     SMT1CPWU        equ	16154	;# 
  4324   003F1B                     SMT1PR          equ	16155	;# 
  4325   003F1B                     SMT1PRL         equ	16155	;# 
  4326   003F1C                     SMT1PRH         equ	16156	;# 
  4327   003F1D                     SMT1PRU         equ	16157	;# 
  4328   003F1E                     SMT1CON0        equ	16158	;# 
  4329   003F1F                     SMT1CON1        equ	16159	;# 
  4330   003F20                     SMT1STAT        equ	16160	;# 
  4331   003F21                     SMT1CLK         equ	16161	;# 
  4332   003F22                     SMT1SIG         equ	16162	;# 
  4333   003F23                     SMT1WIN         equ	16163	;# 
  4334   003F38                     NCO1ACC         equ	16184	;# 
  4335   003F38                     NCO1ACCL        equ	16184	;# 
  4336   003F39                     NCO1ACCH        equ	16185	;# 
  4337   003F3A                     NCO1ACCU        equ	16186	;# 
  4338   003F3B                     NCO1INC         equ	16187	;# 
  4339   003F3B                     NCO1INCL        equ	16187	;# 
  4340   003F3C                     NCO1INCH        equ	16188	;# 
  4341   003F3D                     NCO1INCU        equ	16189	;# 
  4342   003F3E                     NCO1CON         equ	16190	;# 
  4343   003F3F                     NCO1CLK         equ	16191	;# 
  4344   003F40                     CWG3CLK         equ	16192	;# 
  4345   003F40                     CWG3CLKCON      equ	16192	;# 
  4346   003F41                     CWG3ISM         equ	16193	;# 
  4347   003F41                     CWG3DAT         equ	16193	;# 
  4348   003F42                     CWG3DBR         equ	16194	;# 
  4349   003F43                     CWG3DBF         equ	16195	;# 
  4350   003F44                     CWG3CON0        equ	16196	;# 
  4351   003F45                     CWG3CON1        equ	16197	;# 
  4352   003F46                     CWG3AS0         equ	16198	;# 
  4353   003F47                     CWG3AS1         equ	16199	;# 
  4354   003F48                     CWG3STR         equ	16200	;# 
  4355   003F49                     CWG2CLK         equ	16201	;# 
  4356   003F49                     CWG2CLKCON      equ	16201	;# 
  4357   003F4A                     CWG2ISM         equ	16202	;# 
  4358   003F4A                     CWG2DAT         equ	16202	;# 
  4359   003F4B                     CWG2DBR         equ	16203	;# 
  4360   003F4C                     CWG2DBF         equ	16204	;# 
  4361   003F4D                     CWG2CON0        equ	16205	;# 
  4362   003F4E                     CWG2CON1        equ	16206	;# 
  4363   003F4F                     CWG2AS0         equ	16207	;# 
  4364   003F50                     CWG2AS1         equ	16208	;# 
  4365   003F51                     CWG2STR         equ	16209	;# 
  4366   003F52                     CWG1CLK         equ	16210	;# 
  4367   003F52                     CWG1CLKCON      equ	16210	;# 
  4368   003F53                     CWG1ISM         equ	16211	;# 
  4369   003F53                     CWG1DAT         equ	16211	;# 
  4370   003F54                     CWG1DBR         equ	16212	;# 
  4371   003F55                     CWG1DBF         equ	16213	;# 
  4372   003F56                     CWG1CON0        equ	16214	;# 
  4373   003F57                     CWG1CON1        equ	16215	;# 
  4374   003F58                     CWG1AS0         equ	16216	;# 
  4375   003F59                     CWG1AS1         equ	16217	;# 
  4376   003F5A                     CWG1STR         equ	16218	;# 
  4377   003F5E                     CCPTMRS0        equ	16222	;# 
  4378   003F5F                     CCPTMRS1        equ	16223	;# 
  4379   003F60                     PWM8DC          equ	16224	;# 
  4380   003F60                     PWM8DCL         equ	16224	;# 
  4381   003F61                     PWM8DCH         equ	16225	;# 
  4382   003F62                     PWM8CON         equ	16226	;# 
  4383   003F64                     PWM7DC          equ	16228	;# 
  4384   003F64                     PWM7DCL         equ	16228	;# 
  4385   003F65                     PWM7DCH         equ	16229	;# 
  4386   003F66                     PWM7CON         equ	16230	;# 
  4387   003F68                     PWM6DC          equ	16232	;# 
  4388   003F68                     PWM6DCL         equ	16232	;# 
  4389   003F69                     PWM6DCH         equ	16233	;# 
  4390   003F6A                     PWM6CON         equ	16234	;# 
  4391   003F6C                     PWM5DC          equ	16236	;# 
  4392   003F6C                     PWM5DCL         equ	16236	;# 
  4393   003F6D                     PWM5DCH         equ	16237	;# 
  4394   003F6E                     PWM5CON         equ	16238	;# 
  4395   003F70                     CCPR4           equ	16240	;# 
  4396   003F70                     CCPR4L          equ	16240	;# 
  4397   003F71                     CCPR4H          equ	16241	;# 
  4398   003F72                     CCP4CON         equ	16242	;# 
  4399   003F73                     CCP4CAP         equ	16243	;# 
  4400   003F74                     CCPR3           equ	16244	;# 
  4401   003F74                     CCPR3L          equ	16244	;# 
  4402   003F75                     CCPR3H          equ	16245	;# 
  4403   003F76                     CCP3CON         equ	16246	;# 
  4404   003F77                     CCP3CAP         equ	16247	;# 
  4405   003F78                     CCPR2           equ	16248	;# 
  4406   003F78                     CCPR2L          equ	16248	;# 
  4407   003F79                     CCPR2H          equ	16249	;# 
  4408   003F7A                     CCP2CON         equ	16250	;# 
  4409   003F7B                     CCP2CAP         equ	16251	;# 
  4410   003F7C                     CCPR1           equ	16252	;# 
  4411   003F7C                     CCPR1L          equ	16252	;# 
  4412   003F7D                     CCPR1H          equ	16253	;# 
  4413   003F7E                     CCP1CON         equ	16254	;# 
  4414   003F7F                     CCP1CAP         equ	16255	;# 
  4415   003F92                     T6TMR           equ	16274	;# 
  4416   003F92                     TMR6            equ	16274	;# 
  4417   003F93                     T6PR            equ	16275	;# 
  4418   003F93                     PR6             equ	16275	;# 
  4419   003F94                     T6CON           equ	16276	;# 
  4420   003F95                     T6HLT           equ	16277	;# 
  4421   003F96                     T6CLKCON        equ	16278	;# 
  4422   003F96                     T6CLK           equ	16278	;# 
  4423   003F97                     T6RST           equ	16279	;# 
  4424   003F98                     TMR5            equ	16280	;# 
  4425   003F98                     TMR5L           equ	16280	;# 
  4426   003F99                     TMR5H           equ	16281	;# 
  4427   003F9A                     T5CON           equ	16282	;# 
  4428   003F9A                     TMR5CON         equ	16282	;# 
  4429   003F9B                     T5GCON          equ	16283	;# 
  4430   003F9B                     TMR5GCON        equ	16283	;# 
  4431   003F9C                     T5GATE          equ	16284	;# 
  4432   003F9C                     TMR5GATE        equ	16284	;# 
  4433   003F9D                     T5CLK           equ	16285	;# 
  4434   003F9D                     TMR5CLK         equ	16285	;# 
  4435   003F9D                     PR5             equ	16285	;# 
  4436   003F9E                     T4TMR           equ	16286	;# 
  4437   003F9E                     TMR4            equ	16286	;# 
  4438   003F9F                     T4PR            equ	16287	;# 
  4439   003F9F                     PR4             equ	16287	;# 
  4440   003FA0                     T4CON           equ	16288	;# 
  4441   003FA1                     T4HLT           equ	16289	;# 
  4442   003FA2                     T4CLKCON        equ	16290	;# 
  4443   003FA2                     T4CLK           equ	16290	;# 
  4444   003FA3                     T4RST           equ	16291	;# 
  4445   003FA4                     TMR3            equ	16292	;# 
  4446   003FA4                     TMR3L           equ	16292	;# 
  4447   003FA5                     TMR3H           equ	16293	;# 
  4448   003FA6                     T3CON           equ	16294	;# 
  4449   003FA6                     TMR3CON         equ	16294	;# 
  4450   003FA7                     T3GCON          equ	16295	;# 
  4451   003FA7                     TMR3GCON        equ	16295	;# 
  4452   003FA8                     T3GATE          equ	16296	;# 
  4453   003FA8                     TMR3GATE        equ	16296	;# 
  4454   003FA9                     T3CLK           equ	16297	;# 
  4455   003FA9                     TMR3CLK         equ	16297	;# 
  4456   003FA9                     PR3             equ	16297	;# 
  4457   003FAA                     T2TMR           equ	16298	;# 
  4458   003FAA                     TMR2            equ	16298	;# 
  4459   003FAB                     T2PR            equ	16299	;# 
  4460   003FAB                     PR2             equ	16299	;# 
  4461   003FAC                     T2CON           equ	16300	;# 
  4462   003FAD                     T2HLT           equ	16301	;# 
  4463   003FAE                     T2CLKCON        equ	16302	;# 
  4464   003FAE                     T2CLK           equ	16302	;# 
  4465   003FAF                     T2RST           equ	16303	;# 
  4466   003FB0                     TMR1            equ	16304	;# 
  4467   003FB0                     TMR1L           equ	16304	;# 
  4468   003FB1                     TMR1H           equ	16305	;# 
  4469   003FB2                     T1CON           equ	16306	;# 
  4470   003FB2                     TMR1CON         equ	16306	;# 
  4471   003FB3                     T1GCON          equ	16307	;# 
  4472   003FB3                     TMR1GCON        equ	16307	;# 
  4473   003FB4                     T1GATE          equ	16308	;# 
  4474   003FB4                     TMR1GATE        equ	16308	;# 
  4475   003FB5                     T1CLK           equ	16309	;# 
  4476   003FB5                     TMR1CLK         equ	16309	;# 
  4477   003FB5                     PR1             equ	16309	;# 
  4478   003FB6                     TMR0L           equ	16310	;# 
  4479   003FB6                     TMR0            equ	16310	;# 
  4480   003FB7                     TMR0H           equ	16311	;# 
  4481   003FB7                     PR0             equ	16311	;# 
  4482   003FB8                     T0CON0          equ	16312	;# 
  4483   003FB9                     T0CON1          equ	16313	;# 
  4484   003FBA                     LATA            equ	16314	;# 
  4485   003FBB                     LATB            equ	16315	;# 
  4486   003FBC                     LATC            equ	16316	;# 
  4487   003FC2                     TRISA           equ	16322	;# 
  4488   003FC3                     TRISB           equ	16323	;# 
  4489   003FC4                     TRISC           equ	16324	;# 
  4490   003FCA                     PORTA           equ	16330	;# 
  4491   003FCB                     PORTB           equ	16331	;# 
  4492   003FCC                     PORTC           equ	16332	;# 
  4493   003FCE                     PORTE           equ	16334	;# 
  4494   003FD2                     INTCON0         equ	16338	;# 
  4495   003FD3                     INTCON1         equ	16339	;# 
  4496   003FD4                     IVTLOCK         equ	16340	;# 
  4497   003FD5                     IVTBASE         equ	16341	;# 
  4498   003FD5                     IVTBASEL        equ	16341	;# 
  4499   003FD6                     IVTBASEH        equ	16342	;# 
  4500   003FD7                     IVTBASEU        equ	16343	;# 
  4501   003FD8                     STATUS          equ	16344	;# 
  4502   003FD9                     FSR2            equ	16345	;# 
  4503   003FD9                     FSR2L           equ	16345	;# 
  4504   003FDA                     FSR2H           equ	16346	;# 
  4505   003FDB                     PLUSW2          equ	16347	;# 
  4506   003FDC                     PREINC2         equ	16348	;# 
  4507   003FDD                     POSTDEC2        equ	16349	;# 
  4508   003FDE                     POSTINC2        equ	16350	;# 
  4509   003FDF                     INDF2           equ	16351	;# 
  4510   003FE0                     BSR             equ	16352	;# 
  4511   003FE1                     FSR1            equ	16353	;# 
  4512   003FE1                     FSR1L           equ	16353	;# 
  4513   003FE2                     FSR1H           equ	16354	;# 
  4514   003FE3                     PLUSW1          equ	16355	;# 
  4515   003FE4                     PREINC1         equ	16356	;# 
  4516   003FE5                     POSTDEC1        equ	16357	;# 
  4517   003FE6                     POSTINC1        equ	16358	;# 
  4518   003FE7                     INDF1           equ	16359	;# 
  4519   003FE8                     WREG            equ	16360	;# 
  4520   003FE9                     FSR0            equ	16361	;# 
  4521   003FE9                     FSR0L           equ	16361	;# 
  4522   003FEA                     FSR0H           equ	16362	;# 
  4523   003FEB                     PLUSW0          equ	16363	;# 
  4524   003FEC                     PREINC0         equ	16364	;# 
  4525   003FED                     POSTDEC0        equ	16365	;# 
  4526   003FEE                     POSTINC0        equ	16366	;# 
  4527   003FEF                     INDF0           equ	16367	;# 
  4528   003FF0                     PCON0           equ	16368	;# 
  4529   003FF1                     PCON1           equ	16369	;# 
  4530   003FF3                     PROD            equ	16371	;# 
  4531   003FF3                     PRODL           equ	16371	;# 
  4532   003FF4                     PRODH           equ	16372	;# 
  4533   003FF5                     TABLAT          equ	16373	;# 
  4534   003FF6                     TBLPTR          equ	16374	;# 
  4535   003FF6                     TBLPTRL         equ	16374	;# 
  4536   003FF7                     TBLPTRH         equ	16375	;# 
  4537   003FF8                     TBLPTRU         equ	16376	;# 
  4538   003FF9                     PCLAT           equ	16377	;# 
  4539   003FF9                     PCL             equ	16377	;# 
  4540   003FFA                     PCLATH          equ	16378	;# 
  4541   003FFB                     PCLATU          equ	16379	;# 
  4542   003FFC                     STKPTR          equ	16380	;# 
  4543   003FFD                     TOS             equ	16381	;# 
  4544   003FFD                     TOSL            equ	16381	;# 
  4545   003FFE                     TOSH            equ	16382	;# 
  4546   003FFF                     TOSU            equ	16383	;# 
  4547   003880                     STATUS_CSHAD    equ	14464	;# 
  4548   003881                     WREG_CSHAD      equ	14465	;# 
  4549   003882                     BSR_CSHAD       equ	14466	;# 
  4550   003883                     SHADCON         equ	14467	;# 
  4551   003884                     STATUS_SHAD     equ	14468	;# 
  4552   003885                     WREG_SHAD       equ	14469	;# 
  4553   003886                     BSR_SHAD        equ	14470	;# 
  4554   003887                     PCLATH_SHAD     equ	14471	;# 
  4555   003888                     PCLATU_SHAD     equ	14472	;# 
  4556   003889                     FSR0SH          equ	14473	;# 
  4557   003889                     FSR0L_SHAD      equ	14473	;# 
  4558   00388A                     FSR0H_SHAD      equ	14474	;# 
  4559   00388B                     FSR1SH          equ	14475	;# 
  4560   00388B                     FSR1L_SHAD      equ	14475	;# 
  4561   00388C                     FSR1H_SHAD      equ	14476	;# 
  4562   00388D                     FSR2SH          equ	14477	;# 
  4563   00388D                     FSR2L_SHAD      equ	14477	;# 
  4564   00388E                     FSR2H_SHAD      equ	14478	;# 
  4565   00388F                     PRODSH          equ	14479	;# 
  4566   00388F                     PRODL_SHAD      equ	14479	;# 
  4567   003890                     PRODH_SHAD      equ	14480	;# 
  4568   00389D                     IVTADL          equ	14493	;# 
  4569   00389E                     IVTADH          equ	14494	;# 
  4570   00389F                     IVTADU          equ	14495	;# 
  4571   00395B                     WDTCON0         equ	14683	;# 
  4572   00395C                     WDTCON1         equ	14684	;# 
  4573   00395D                     WDTPSL          equ	14685	;# 
  4574   00395E                     WDTPSH          equ	14686	;# 
  4575   00395F                     WDTTMR          equ	14687	;# 
  4576   003960                     CRCDATA         equ	14688	;# 
  4577   003960                     CRCDATL         equ	14688	;# 
  4578   003961                     CRCDATH         equ	14689	;# 
  4579   003962                     CRCACC          equ	14690	;# 
  4580   003962                     CRCACCL         equ	14690	;# 
  4581   003963                     CRCACCH         equ	14691	;# 
  4582   003964                     CRCSHFT         equ	14692	;# 
  4583   003964                     CRCSHIFTL       equ	14692	;# 
  4584   003965                     CRCSHIFTH       equ	14693	;# 
  4585   003966                     CRCXOR          equ	14694	;# 
  4586   003966                     CRCXORL         equ	14694	;# 
  4587   003967                     CRCXORH         equ	14695	;# 
  4588   003968                     CRCCON0         equ	14696	;# 
  4589   003969                     CRCCON1         equ	14697	;# 
  4590   003976                     SCANLADR        equ	14710	;# 
  4591   003976                     SCANLADRL       equ	14710	;# 
  4592   003977                     SCANLADRH       equ	14711	;# 
  4593   003978                     SCANLADRU       equ	14712	;# 
  4594   003979                     SCANHADR        equ	14713	;# 
  4595   003979                     SCANHADRL       equ	14713	;# 
  4596   00397A                     SCANHADRH       equ	14714	;# 
  4597   00397B                     SCANHADRU       equ	14715	;# 
  4598   00397C                     SCANCON0        equ	14716	;# 
  4599   00397D                     SCANTRIG        equ	14717	;# 
  4600   003980                     IPR0            equ	14720	;# 
  4601   003981                     IPR1            equ	14721	;# 
  4602   003982                     IPR2            equ	14722	;# 
  4603   003983                     IPR3            equ	14723	;# 
  4604   003984                     IPR4            equ	14724	;# 
  4605   003985                     IPR5            equ	14725	;# 
  4606   003986                     IPR6            equ	14726	;# 
  4607   003987                     IPR7            equ	14727	;# 
  4608   003988                     IPR8            equ	14728	;# 
  4609   003989                     IPR9            equ	14729	;# 
  4610   00398A                     IPR10           equ	14730	;# 
  4611   003990                     PIE0            equ	14736	;# 
  4612   003991                     PIE1            equ	14737	;# 
  4613   003992                     PIE2            equ	14738	;# 
  4614   003993                     PIE3            equ	14739	;# 
  4615   003994                     PIE4            equ	14740	;# 
  4616   003995                     PIE5            equ	14741	;# 
  4617   003996                     PIE6            equ	14742	;# 
  4618   003997                     PIE7            equ	14743	;# 
  4619   003998                     PIE8            equ	14744	;# 
  4620   003999                     PIE9            equ	14745	;# 
  4621   00399A                     PIE10           equ	14746	;# 
  4622   0039A0                     PIR0            equ	14752	;# 
  4623   0039A1                     PIR1            equ	14753	;# 
  4624   0039A2                     PIR2            equ	14754	;# 
  4625   0039A3                     PIR3            equ	14755	;# 
  4626   0039A4                     PIR4            equ	14756	;# 
  4627   0039A5                     PIR5            equ	14757	;# 
  4628   0039A6                     PIR6            equ	14758	;# 
  4629   0039A7                     PIR7            equ	14759	;# 
  4630   0039A8                     PIR8            equ	14760	;# 
  4631   0039A9                     PIR9            equ	14761	;# 
  4632   0039AA                     PIR10           equ	14762	;# 
  4633   0039C0                     PMD0            equ	14784	;# 
  4634   0039C1                     PMD1            equ	14785	;# 
  4635   0039C2                     PMD2            equ	14786	;# 
  4636   0039C3                     PMD3            equ	14787	;# 
  4637   0039C4                     PMD4            equ	14788	;# 
  4638   0039C5                     PMD5            equ	14789	;# 
  4639   0039C6                     PMD6            equ	14790	;# 
  4640   0039C7                     PMD7            equ	14791	;# 
  4641   0039D0                     BORCON          equ	14800	;# 
  4642   0039D1                     VREGCON         equ	14801	;# 
  4643   0039D8                     CPUDOZE         equ	14808	;# 
  4644   0039D9                     OSCCON1         equ	14809	;# 
  4645   0039DA                     OSCCON2         equ	14810	;# 
  4646   0039DB                     OSCCON3         equ	14811	;# 
  4647   0039DC                     OSCSTAT         equ	14812	;# 
  4648   0039DC                     OSCSTAT1        equ	14812	;# 
  4649   0039DD                     OSCEN           equ	14813	;# 
  4650   0039DE                     OSCTUNE         equ	14814	;# 
  4651   0039DF                     OSCFRQ          equ	14815	;# 
  4652   0039E0                     NVMADRL         equ	14816	;# 
  4653   0039E1                     NVMADRH         equ	14817	;# 
  4654   0039E3                     NVMDAT          equ	14819	;# 
  4655   0039E5                     NVMCON1         equ	14821	;# 
  4656   0039E6                     NVMCON2         equ	14822	;# 
  4657   0039EF                     PRLOCK          equ	14831	;# 
  4658   0039F1                     ISRPR           equ	14833	;# 
  4659   0039F2                     MAINPR          equ	14834	;# 
  4660   0039F3                     DMA1PR          equ	14835	;# 
  4661   0039F4                     DMA2PR          equ	14836	;# 
  4662   0039F7                     SCANPR          equ	14839	;# 
  4663   003A00                     RA0PPS          equ	14848	;# 
  4664   003A01                     RA1PPS          equ	14849	;# 
  4665   003A02                     RA2PPS          equ	14850	;# 
  4666   003A03                     RA3PPS          equ	14851	;# 
  4667   003A04                     RA4PPS          equ	14852	;# 
  4668   003A05                     RA5PPS          equ	14853	;# 
  4669   003A06                     RA6PPS          equ	14854	;# 
  4670   003A07                     RA7PPS          equ	14855	;# 
  4671   003A08                     RB0PPS          equ	14856	;# 
  4672   003A09                     RB1PPS          equ	14857	;# 
  4673   003A0A                     RB2PPS          equ	14858	;# 
  4674   003A0B                     RB3PPS          equ	14859	;# 
  4675   003A0C                     RB4PPS          equ	14860	;# 
  4676   003A0D                     RB5PPS          equ	14861	;# 
  4677   003A0E                     RB6PPS          equ	14862	;# 
  4678   003A0F                     RB7PPS          equ	14863	;# 
  4679   003A10                     RC0PPS          equ	14864	;# 
  4680   003A11                     RC1PPS          equ	14865	;# 
  4681   003A12                     RC2PPS          equ	14866	;# 
  4682   003A13                     RC3PPS          equ	14867	;# 
  4683   003A14                     RC4PPS          equ	14868	;# 
  4684   003A15                     RC5PPS          equ	14869	;# 
  4685   003A16                     RC6PPS          equ	14870	;# 
  4686   003A17                     RC7PPS          equ	14871	;# 
  4687   003A40                     ANSELA          equ	14912	;# 
  4688   003A41                     WPUA            equ	14913	;# 
  4689   003A42                     ODCONA          equ	14914	;# 
  4690   003A43                     SLRCONA         equ	14915	;# 
  4691   003A44                     INLVLA          equ	14916	;# 
  4692   003A45                     IOCAP           equ	14917	;# 
  4693   003A46                     IOCAN           equ	14918	;# 
  4694   003A47                     IOCAF           equ	14919	;# 
  4695   003A48                     CCDPA           equ	14920	;# 
  4696   003A49                     CCDNA           equ	14921	;# 
  4697   003A50                     ANSELB          equ	14928	;# 
  4698   003A51                     WPUB            equ	14929	;# 
  4699   003A52                     ODCONB          equ	14930	;# 
  4700   003A53                     SLRCONB         equ	14931	;# 
  4701   003A54                     INLVLB          equ	14932	;# 
  4702   003A55                     IOCBP           equ	14933	;# 
  4703   003A56                     IOCBN           equ	14934	;# 
  4704   003A57                     IOCBF           equ	14935	;# 
  4705   003A58                     CCDPB           equ	14936	;# 
  4706   003A59                     CCDNB           equ	14937	;# 
  4707   003A5A                     RB1I2C          equ	14938	;# 
  4708   003A5B                     RB2I2C          equ	14939	;# 
  4709   003A60                     ANSELC          equ	14944	;# 
  4710   003A61                     WPUC            equ	14945	;# 
  4711   003A62                     ODCONC          equ	14946	;# 
  4712   003A63                     SLRCONC         equ	14947	;# 
  4713   003A64                     INLVLC          equ	14948	;# 
  4714   003A65                     IOCCP           equ	14949	;# 
  4715   003A66                     IOCCN           equ	14950	;# 
  4716   003A67                     IOCCF           equ	14951	;# 
  4717   003A68                     CCDPC           equ	14952	;# 
  4718   003A69                     CCDNC           equ	14953	;# 
  4719   003A6A                     RC3I2C          equ	14954	;# 
  4720   003A6B                     RC4I2C          equ	14955	;# 
  4721   003A81                     WPUE            equ	14977	;# 
  4722   003A84                     INLVLE          equ	14980	;# 
  4723   003A85                     IOCEP           equ	14981	;# 
  4724   003A86                     IOCEN           equ	14982	;# 
  4725   003A87                     IOCEF           equ	14983	;# 
  4726   003ABE                     CCDCON          equ	15038	;# 
  4727   003ABF                     PPSLOCK         equ	15039	;# 
  4728   003AC0                     INT0PPS         equ	15040	;# 
  4729   003AC1                     INT1PPS         equ	15041	;# 
  4730   003AC2                     INT2PPS         equ	15042	;# 
  4731   003AC3                     T0CKIPPS        equ	15043	;# 
  4732   003AC4                     T1CKIPPS        equ	15044	;# 
  4733   003AC5                     T1GPPS          equ	15045	;# 
  4734   003AC6                     T3CKIPPS        equ	15046	;# 
  4735   003AC7                     T3GPPS          equ	15047	;# 
  4736   003AC8                     T5CKIPPS        equ	15048	;# 
  4737   003AC9                     T5GPPS          equ	15049	;# 
  4738   003ACA                     T2INPPS         equ	15050	;# 
  4739   003ACB                     T4INPPS         equ	15051	;# 
  4740   003ACC                     T6INPPS         equ	15052	;# 
  4741   003ACD                     CCP1PPS         equ	15053	;# 
  4742   003ACE                     CCP2PPS         equ	15054	;# 
  4743   003ACF                     CCP3PPS         equ	15055	;# 
  4744   003AD0                     CCP4PPS         equ	15056	;# 
  4745   003AD1                     SMT1WINPPS      equ	15057	;# 
  4746   003AD2                     SMT1SIGPPS      equ	15058	;# 
  4747   003AD3                     CWG1INPPS       equ	15059	;# 
  4748   003AD4                     CWG2INPPS       equ	15060	;# 
  4749   003AD5                     CWG3INPPS       equ	15061	;# 
  4750   003AD6                     MD1CARLPPS      equ	15062	;# 
  4751   003AD7                     MD1CARHPPS      equ	15063	;# 
  4752   003AD8                     MD1SRCPPS       equ	15064	;# 
  4753   003AD9                     CLCIN0PPS       equ	15065	;# 
  4754   003ADA                     CLCIN1PPS       equ	15066	;# 
  4755   003ADB                     CLCIN2PPS       equ	15067	;# 
  4756   003ADC                     CLCIN3PPS       equ	15068	;# 
  4757   003ADD                     ADACTPPS        equ	15069	;# 
  4758   003ADE                     SPI1SCKPPS      equ	15070	;# 
  4759   003ADF                     SPI1SDIPPS      equ	15071	;# 
  4760   003AE0                     SPI1SSPPS       equ	15072	;# 
  4761   003AE1                     I2C1SCLPPS      equ	15073	;# 
  4762   003AE2                     I2C1SDAPPS      equ	15074	;# 
  4763   003AE3                     I2C2SCLPPS      equ	15075	;# 
  4764   003AE4                     I2C2SDAPPS      equ	15076	;# 
  4765   003AE5                     U1RXPPS         equ	15077	;# 
  4766   003AE6                     U1CTSPPS        equ	15078	;# 
  4767   003AE8                     U2RXPPS         equ	15080	;# 
  4768   003AE9                     U2CTSPPS        equ	15081	;# 
  4769   003BC9                     DMA2BUF         equ	15305	;# 
  4770   003BCA                     DMA2DCNT        equ	15306	;# 
  4771   003BCA                     DMA2DCNTL       equ	15306	;# 
  4772   003BCB                     DMA2DCNTH       equ	15307	;# 
  4773   003BCC                     DMA2DPTR        equ	15308	;# 
  4774   003BCC                     DMA2DPTRL       equ	15308	;# 
  4775   003BCD                     DMA2DPTRH       equ	15309	;# 
  4776   003BCE                     DMA2DSZ         equ	15310	;# 
  4777   003BCE                     DMA2DSZL        equ	15310	;# 
  4778   003BCF                     DMA2DSZH        equ	15311	;# 
  4779   003BD0                     DMA2DSA         equ	15312	;# 
  4780   003BD0                     DMA2DSAL        equ	15312	;# 
  4781   003BD1                     DMA2DSAH        equ	15313	;# 
  4782   003BD2                     DMA2SCNT        equ	15314	;# 
  4783   003BD2                     DMA2SCNTL       equ	15314	;# 
  4784   003BD3                     DMA2SCNTH       equ	15315	;# 
  4785   003BD4                     DMA2SPTR        equ	15316	;# 
  4786   003BD4                     DMA2SPTRL       equ	15316	;# 
  4787   003BD5                     DMA2SPTRH       equ	15317	;# 
  4788   003BD6                     DMA2SPTRU       equ	15318	;# 
  4789   003BD7                     DMA2SSZ         equ	15319	;# 
  4790   003BD7                     DMA2SSZL        equ	15319	;# 
  4791   003BD8                     DMA2SSZH        equ	15320	;# 
  4792   003BD9                     DMA2SSA         equ	15321	;# 
  4793   003BD9                     DMA2SSAL        equ	15321	;# 
  4794   003BDA                     DMA2SSAH        equ	15322	;# 
  4795   003BDB                     DMA2SSAU        equ	15323	;# 
  4796   003BDC                     DMA2CON0        equ	15324	;# 
  4797   003BDD                     DMA2CON1        equ	15325	;# 
  4798   003BDE                     DMA2AIRQ        equ	15326	;# 
  4799   003BDF                     DMA2SIRQ        equ	15327	;# 
  4800   003BE9                     DMA1BUF         equ	15337	;# 
  4801   003BEA                     DMA1DCNT        equ	15338	;# 
  4802   003BEA                     DMA1DCNTL       equ	15338	;# 
  4803   003BEB                     DMA1DCNTH       equ	15339	;# 
  4804   003BEC                     DMA1DPTR        equ	15340	;# 
  4805   003BEC                     DMA1DPTRL       equ	15340	;# 
  4806   003BED                     DMA1DPTRH       equ	15341	;# 
  4807   003BEE                     DMA1DSZ         equ	15342	;# 
  4808   003BEE                     DMA1DSZL        equ	15342	;# 
  4809   003BEF                     DMA1DSZH        equ	15343	;# 
  4810   003BF0                     DMA1DSA         equ	15344	;# 
  4811   003BF0                     DMA1DSAL        equ	15344	;# 
  4812   003BF1                     DMA1DSAH        equ	15345	;# 
  4813   003BF2                     DMA1SCNT        equ	15346	;# 
  4814   003BF2                     DMA1SCNTL       equ	15346	;# 
  4815   003BF3                     DMA1SCNTH       equ	15347	;# 
  4816   003BF4                     DMA1SPTR        equ	15348	;# 
  4817   003BF4                     DMA1SPTRL       equ	15348	;# 
  4818   003BF5                     DMA1SPTRH       equ	15349	;# 
  4819   003BF6                     DMA1SPTRU       equ	15350	;# 
  4820   003BF7                     DMA1SSZ         equ	15351	;# 
  4821   003BF7                     DMA1SSZL        equ	15351	;# 
  4822   003BF8                     DMA1SSZH        equ	15352	;# 
  4823   003BF9                     DMA1SSA         equ	15353	;# 
  4824   003BF9                     DMA1SSAL        equ	15353	;# 
  4825   003BFA                     DMA1SSAH        equ	15354	;# 
  4826   003BFB                     DMA1SSAU        equ	15355	;# 
  4827   003BFC                     DMA1CON0        equ	15356	;# 
  4828   003BFD                     DMA1CON1        equ	15357	;# 
  4829   003BFE                     DMA1AIRQ        equ	15358	;# 
  4830   003BFF                     DMA1SIRQ        equ	15359	;# 
  4831   003C56                     CLC4CON         equ	15446	;# 
  4832   003C57                     CLC4POL         equ	15447	;# 
  4833   003C58                     CLC4SEL0        equ	15448	;# 
  4834   003C59                     CLC4SEL1        equ	15449	;# 
  4835   003C5A                     CLC4SEL2        equ	15450	;# 
  4836   003C5B                     CLC4SEL3        equ	15451	;# 
  4837   003C5C                     CLC4GLS0        equ	15452	;# 
  4838   003C5D                     CLC4GLS1        equ	15453	;# 
  4839   003C5E                     CLC4GLS2        equ	15454	;# 
  4840   003C5F                     CLC4GLS3        equ	15455	;# 
  4841   003C60                     CLC3CON         equ	15456	;# 
  4842   003C61                     CLC3POL         equ	15457	;# 
  4843   003C62                     CLC3SEL0        equ	15458	;# 
  4844   003C63                     CLC3SEL1        equ	15459	;# 
  4845   003C64                     CLC3SEL2        equ	15460	;# 
  4846   003C65                     CLC3SEL3        equ	15461	;# 
  4847   003C66                     CLC3GLS0        equ	15462	;# 
  4848   003C67                     CLC3GLS1        equ	15463	;# 
  4849   003C68                     CLC3GLS2        equ	15464	;# 
  4850   003C69                     CLC3GLS3        equ	15465	;# 
  4851   003C6A                     CLC2CON         equ	15466	;# 
  4852   003C6B                     CLC2POL         equ	15467	;# 
  4853   003C6C                     CLC2SEL0        equ	15468	;# 
  4854   003C6D                     CLC2SEL1        equ	15469	;# 
  4855   003C6E                     CLC2SEL2        equ	15470	;# 
  4856   003C6F                     CLC2SEL3        equ	15471	;# 
  4857   003C70                     CLC2GLS0        equ	15472	;# 
  4858   003C71                     CLC2GLS1        equ	15473	;# 
  4859   003C72                     CLC2GLS2        equ	15474	;# 
  4860   003C73                     CLC2GLS3        equ	15475	;# 
  4861   003C74                     CLC1CON         equ	15476	;# 
  4862   003C75                     CLC1POL         equ	15477	;# 
  4863   003C76                     CLC1SEL0        equ	15478	;# 
  4864   003C77                     CLC1SEL1        equ	15479	;# 
  4865   003C78                     CLC1SEL2        equ	15480	;# 
  4866   003C79                     CLC1SEL3        equ	15481	;# 
  4867   003C7A                     CLC1GLS0        equ	15482	;# 
  4868   003C7B                     CLC1GLS1        equ	15483	;# 
  4869   003C7C                     CLC1GLS2        equ	15484	;# 
  4870   003C7D                     CLC1GLS3        equ	15485	;# 
  4871   003C7E                     CLCDATA0        equ	15486	;# 
  4872   003CE5                     CLKRCON         equ	15589	;# 
  4873   003CE6                     CLKRCLK         equ	15590	;# 
  4874   003CFA                     MD1CON0         equ	15610	;# 
  4875   003CFB                     MD1CON1         equ	15611	;# 
  4876   003CFC                     MD1SRC          equ	15612	;# 
  4877   003CFD                     MD1CARL         equ	15613	;# 
  4878   003CFE                     MD1CARH         equ	15614	;# 
  4879   003D10                     SPI1RXB         equ	15632	;# 
  4880   003D11                     SPI1TXB         equ	15633	;# 
  4881   003D12                     SPI1TCNT        equ	15634	;# 
  4882   003D12                     SPI1TCNTL       equ	15634	;# 
  4883   003D13                     SPI1TCNTH       equ	15635	;# 
  4884   003D14                     SPI1CON0        equ	15636	;# 
  4885   003D15                     SPI1CON1        equ	15637	;# 
  4886   003D16                     SPI1CON2        equ	15638	;# 
  4887   003D17                     SPI1STATUS      equ	15639	;# 
  4888   003D18                     SPI1TWIDTH      equ	15640	;# 
  4889   003D19                     SPI1BAUD        equ	15641	;# 
  4890   003D1A                     SPI1INTF        equ	15642	;# 
  4891   003D1B                     SPI1INTE        equ	15643	;# 
  4892   003D1C                     SPI1CLK         equ	15644	;# 
  4893   003D54                     I2C2RXB         equ	15700	;# 
  4894   003D55                     I2C2TXB         equ	15701	;# 
  4895   003D56                     I2C2CNT         equ	15702	;# 
  4896   003D57                     I2C2ADB0        equ	15703	;# 
  4897   003D58                     I2C2ADB1        equ	15704	;# 
  4898   003D59                     I2C2ADR0        equ	15705	;# 
  4899   003D5A                     I2C2ADR1        equ	15706	;# 
  4900   003D5B                     I2C2ADR2        equ	15707	;# 
  4901   003D5C                     I2C2ADR3        equ	15708	;# 
  4902   003D5D                     I2C2CON0        equ	15709	;# 
  4903   003D5E                     I2C2CON1        equ	15710	;# 
  4904   003D5F                     I2C2CON2        equ	15711	;# 
  4905   003D60                     I2C2ERR         equ	15712	;# 
  4906   003D61                     I2C2STAT0       equ	15713	;# 
  4907   003D62                     I2C2STAT1       equ	15714	;# 
  4908   003D63                     I2C2PIR         equ	15715	;# 
  4909   003D64                     I2C2PIE         equ	15716	;# 
  4910   003D65                     I2C2CLK         equ	15717	;# 
  4911   003D66                     I2C2BTO         equ	15718	;# 
  4912   003D6A                     I2C1RXB         equ	15722	;# 
  4913   003D6B                     I2C1TXB         equ	15723	;# 
  4914   003D6C                     I2C1CNT         equ	15724	;# 
  4915   003D6D                     I2C1ADB0        equ	15725	;# 
  4916   003D6E                     I2C1ADB1        equ	15726	;# 
  4917   003D6F                     I2C1ADR0        equ	15727	;# 
  4918   003D70                     I2C1ADR1        equ	15728	;# 
  4919   003D71                     I2C1ADR2        equ	15729	;# 
  4920   003D72                     I2C1ADR3        equ	15730	;# 
  4921   003D73                     I2C1CON0        equ	15731	;# 
  4922   003D74                     I2C1CON1        equ	15732	;# 
  4923   003D75                     I2C1CON2        equ	15733	;# 
  4924   003D76                     I2C1ERR         equ	15734	;# 
  4925   003D77                     I2C1STAT0       equ	15735	;# 
  4926   003D78                     I2C1STAT1       equ	15736	;# 
  4927   003D79                     I2C1PIR         equ	15737	;# 
  4928   003D7A                     I2C1PIE         equ	15738	;# 
  4929   003D7B                     I2C1CLK         equ	15739	;# 
  4930   003D7C                     I2C1BTO         equ	15740	;# 
  4931   003DD0                     U2RXB           equ	15824	;# 
  4932   003DD0                     U2RXBL          equ	15824	;# 
  4933   003DD2                     U2TXB           equ	15826	;# 
  4934   003DD2                     U2TXBL          equ	15826	;# 
  4935   003DD4                     U2P1            equ	15828	;# 
  4936   003DD4                     U2P1L           equ	15828	;# 
  4937   003DD6                     U2P2            equ	15830	;# 
  4938   003DD6                     U2P2L           equ	15830	;# 
  4939   003DD8                     U2P3            equ	15832	;# 
  4940   003DD8                     U2P3L           equ	15832	;# 
  4941   003DDA                     U2CON0          equ	15834	;# 
  4942   003DDB                     U2CON1          equ	15835	;# 
  4943   003DDC                     U2CON2          equ	15836	;# 
  4944   003DDD                     U2BRG           equ	15837	;# 
  4945   003DDD                     U2BRGL          equ	15837	;# 
  4946   003DDE                     U2BRGH          equ	15838	;# 
  4947   003DDF                     U2FIFO          equ	15839	;# 
  4948   003DE0                     U2UIR           equ	15840	;# 
  4949   003DE1                     U2ERRIR         equ	15841	;# 
  4950   003DE2                     U2ERRIE         equ	15842	;# 
  4951   003DE8                     U1RXB           equ	15848	;# 
  4952   003DE8                     U1RXBL          equ	15848	;# 
  4953   003DE9                     U1RXCHK         equ	15849	;# 
  4954   003DEA                     U1TXB           equ	15850	;# 
  4955   003DEA                     U1TXBL          equ	15850	;# 
  4956   003DEB                     U1TXCHK         equ	15851	;# 
  4957   003DEC                     U1P1            equ	15852	;# 
  4958   003DEC                     U1P1L           equ	15852	;# 
  4959   003DED                     U1P1H           equ	15853	;# 
  4960   003DEE                     U1P2            equ	15854	;# 
  4961   003DEE                     U1P2L           equ	15854	;# 
  4962   003DEF                     U1P2H           equ	15855	;# 
  4963   003DF0                     U1P3            equ	15856	;# 
  4964   003DF0                     U1P3L           equ	15856	;# 
  4965   003DF1                     U1P3H           equ	15857	;# 
  4966   003DF2                     U1CON0          equ	15858	;# 
  4967   003DF3                     U1CON1          equ	15859	;# 
  4968   003DF4                     U1CON2          equ	15860	;# 
  4969   003DF5                     U1BRG           equ	15861	;# 
  4970   003DF5                     U1BRGL          equ	15861	;# 
  4971   003DF6                     U1BRGH          equ	15862	;# 
  4972   003DF7                     U1FIFO          equ	15863	;# 
  4973   003DF8                     U1UIR           equ	15864	;# 
  4974   003DF9                     U1ERRIR         equ	15865	;# 
  4975   003DFA                     U1ERRIE         equ	15866	;# 
  4976   003E9C                     DAC1CON1        equ	16028	;# 
  4977   003E9E                     DAC1CON0        equ	16030	;# 
  4978   003EB8                     CM2CON0         equ	16056	;# 
  4979   003EB9                     CM2CON1         equ	16057	;# 
  4980   003EBA                     CM2NCH          equ	16058	;# 
  4981   003EBB                     CM2PCH          equ	16059	;# 
  4982   003EBC                     CM1CON0         equ	16060	;# 
  4983   003EBD                     CM1CON1         equ	16061	;# 
  4984   003EBE                     CM1NCH          equ	16062	;# 
  4985   003EBF                     CM1PCH          equ	16063	;# 
  4986   003EC0                     CMOUT           equ	16064	;# 
  4987   003EC1                     FVRCON          equ	16065	;# 
  4988   003EC3                     ZCDCON          equ	16067	;# 
  4989   003EC9                     HLVDCON0        equ	16073	;# 
  4990   003ECA                     HLVDCON1        equ	16074	;# 
  4991   003ED7                     ADCP            equ	16087	;# 
  4992   003EDE                     ADLTH           equ	16094	;# 
  4993   003EDE                     ADLTHL          equ	16094	;# 
  4994   003EDF                     ADLTHH          equ	16095	;# 
  4995   003EE0                     ADUTH           equ	16096	;# 
  4996   003EE0                     ADUTHL          equ	16096	;# 
  4997   003EE1                     ADUTHH          equ	16097	;# 
  4998   003EE2                     ADERR           equ	16098	;# 
  4999   003EE2                     ADERRL          equ	16098	;# 
  5000   003EE3                     ADERRH          equ	16099	;# 
  5001   003EE4                     ADSTPT          equ	16100	;# 
  5002   003EE4                     ADSTPTL         equ	16100	;# 
  5003   003EE5                     ADSTPTH         equ	16101	;# 
  5004   003EE6                     ADFLTR          equ	16102	;# 
  5005   003EE6                     ADFLTRL         equ	16102	;# 
  5006   003EE7                     ADFLTRH         equ	16103	;# 
  5007   003EE8                     ADACC           equ	16104	;# 
  5008   003EE8                     ADACCL          equ	16104	;# 
  5009   003EE9                     ADACCH          equ	16105	;# 
  5010   003EEA                     ADACCU          equ	16106	;# 
  5011   003EEB                     ADCNT           equ	16107	;# 
  5012   003EEC                     ADRPT           equ	16108	;# 
  5013   003EED                     ADPREV          equ	16109	;# 
  5014   003EED                     ADPREVL         equ	16109	;# 
  5015   003EEE                     ADPREVH         equ	16110	;# 
  5016   003EEF                     ADRES           equ	16111	;# 
  5017   003EEF                     ADRESL          equ	16111	;# 
  5018   003EF0                     ADRESH          equ	16112	;# 
  5019   003EF1                     ADPCH           equ	16113	;# 
  5020   003EF3                     ADACQ           equ	16115	;# 
  5021   003EF3                     ADACQL          equ	16115	;# 
  5022   003EF4                     ADACQH          equ	16116	;# 
  5023   003EF5                     ADCAP           equ	16117	;# 
  5024   003EF6                     ADPRE           equ	16118	;# 
  5025   003EF6                     ADPREL          equ	16118	;# 
  5026   003EF7                     ADPREH          equ	16119	;# 
  5027   003EF8                     ADCON0          equ	16120	;# 
  5028   003EF9                     ADCON1          equ	16121	;# 
  5029   003EFA                     ADCON2          equ	16122	;# 
  5030   003EFB                     ADCON3          equ	16123	;# 
  5031   003EFC                     ADSTAT          equ	16124	;# 
  5032   003EFD                     ADREF           equ	16125	;# 
  5033   003EFE                     ADACT           equ	16126	;# 
  5034   003EFF                     ADCLK           equ	16127	;# 
  5035   003F12                     SMT1TMR         equ	16146	;# 
  5036   003F12                     SMT1TMRL        equ	16146	;# 
  5037   003F13                     SMT1TMRH        equ	16147	;# 
  5038   003F14                     SMT1TMRU        equ	16148	;# 
  5039   003F15                     SMT1CPR         equ	16149	;# 
  5040   003F15                     SMT1CPRL        equ	16149	;# 
  5041   003F16                     SMT1CPRH        equ	16150	;# 
  5042   003F17                     SMT1CPRU        equ	16151	;# 
  5043   003F18                     SMT1CPW         equ	16152	;# 
  5044   003F18                     SMT1CPWL        equ	16152	;# 
  5045   003F19                     SMT1CPWH        equ	16153	;# 
  5046   003F1A                     SMT1CPWU        equ	16154	;# 
  5047   003F1B                     SMT1PR          equ	16155	;# 
  5048   003F1B                     SMT1PRL         equ	16155	;# 
  5049   003F1C                     SMT1PRH         equ	16156	;# 
  5050   003F1D                     SMT1PRU         equ	16157	;# 
  5051   003F1E                     SMT1CON0        equ	16158	;# 
  5052   003F1F                     SMT1CON1        equ	16159	;# 
  5053   003F20                     SMT1STAT        equ	16160	;# 
  5054   003F21                     SMT1CLK         equ	16161	;# 
  5055   003F22                     SMT1SIG         equ	16162	;# 
  5056   003F23                     SMT1WIN         equ	16163	;# 
  5057   003F38                     NCO1ACC         equ	16184	;# 
  5058   003F38                     NCO1ACCL        equ	16184	;# 
  5059   003F39                     NCO1ACCH        equ	16185	;# 
  5060   003F3A                     NCO1ACCU        equ	16186	;# 
  5061   003F3B                     NCO1INC         equ	16187	;# 
  5062   003F3B                     NCO1INCL        equ	16187	;# 
  5063   003F3C                     NCO1INCH        equ	16188	;# 
  5064   003F3D                     NCO1INCU        equ	16189	;# 
  5065   003F3E                     NCO1CON         equ	16190	;# 
  5066   003F3F                     NCO1CLK         equ	16191	;# 
  5067   003F40                     CWG3CLK         equ	16192	;# 
  5068   003F40                     CWG3CLKCON      equ	16192	;# 
  5069   003F41                     CWG3ISM         equ	16193	;# 
  5070   003F41                     CWG3DAT         equ	16193	;# 
  5071   003F42                     CWG3DBR         equ	16194	;# 
  5072   003F43                     CWG3DBF         equ	16195	;# 
  5073   003F44                     CWG3CON0        equ	16196	;# 
  5074   003F45                     CWG3CON1        equ	16197	;# 
  5075   003F46                     CWG3AS0         equ	16198	;# 
  5076   003F47                     CWG3AS1         equ	16199	;# 
  5077   003F48                     CWG3STR         equ	16200	;# 
  5078   003F49                     CWG2CLK         equ	16201	;# 
  5079   003F49                     CWG2CLKCON      equ	16201	;# 
  5080   003F4A                     CWG2ISM         equ	16202	;# 
  5081   003F4A                     CWG2DAT         equ	16202	;# 
  5082   003F4B                     CWG2DBR         equ	16203	;# 
  5083   003F4C                     CWG2DBF         equ	16204	;# 
  5084   003F4D                     CWG2CON0        equ	16205	;# 
  5085   003F4E                     CWG2CON1        equ	16206	;# 
  5086   003F4F                     CWG2AS0         equ	16207	;# 
  5087   003F50                     CWG2AS1         equ	16208	;# 
  5088   003F51                     CWG2STR         equ	16209	;# 
  5089   003F52                     CWG1CLK         equ	16210	;# 
  5090   003F52                     CWG1CLKCON      equ	16210	;# 
  5091   003F53                     CWG1ISM         equ	16211	;# 
  5092   003F53                     CWG1DAT         equ	16211	;# 
  5093   003F54                     CWG1DBR         equ	16212	;# 
  5094   003F55                     CWG1DBF         equ	16213	;# 
  5095   003F56                     CWG1CON0        equ	16214	;# 
  5096   003F57                     CWG1CON1        equ	16215	;# 
  5097   003F58                     CWG1AS0         equ	16216	;# 
  5098   003F59                     CWG1AS1         equ	16217	;# 
  5099   003F5A                     CWG1STR         equ	16218	;# 
  5100   003F5E                     CCPTMRS0        equ	16222	;# 
  5101   003F5F                     CCPTMRS1        equ	16223	;# 
  5102   003F60                     PWM8DC          equ	16224	;# 
  5103   003F60                     PWM8DCL         equ	16224	;# 
  5104   003F61                     PWM8DCH         equ	16225	;# 
  5105   003F62                     PWM8CON         equ	16226	;# 
  5106   003F64                     PWM7DC          equ	16228	;# 
  5107   003F64                     PWM7DCL         equ	16228	;# 
  5108   003F65                     PWM7DCH         equ	16229	;# 
  5109   003F66                     PWM7CON         equ	16230	;# 
  5110   003F68                     PWM6DC          equ	16232	;# 
  5111   003F68                     PWM6DCL         equ	16232	;# 
  5112   003F69                     PWM6DCH         equ	16233	;# 
  5113   003F6A                     PWM6CON         equ	16234	;# 
  5114   003F6C                     PWM5DC          equ	16236	;# 
  5115   003F6C                     PWM5DCL         equ	16236	;# 
  5116   003F6D                     PWM5DCH         equ	16237	;# 
  5117   003F6E                     PWM5CON         equ	16238	;# 
  5118   003F70                     CCPR4           equ	16240	;# 
  5119   003F70                     CCPR4L          equ	16240	;# 
  5120   003F71                     CCPR4H          equ	16241	;# 
  5121   003F72                     CCP4CON         equ	16242	;# 
  5122   003F73                     CCP4CAP         equ	16243	;# 
  5123   003F74                     CCPR3           equ	16244	;# 
  5124   003F74                     CCPR3L          equ	16244	;# 
  5125   003F75                     CCPR3H          equ	16245	;# 
  5126   003F76                     CCP3CON         equ	16246	;# 
  5127   003F77                     CCP3CAP         equ	16247	;# 
  5128   003F78                     CCPR2           equ	16248	;# 
  5129   003F78                     CCPR2L          equ	16248	;# 
  5130   003F79                     CCPR2H          equ	16249	;# 
  5131   003F7A                     CCP2CON         equ	16250	;# 
  5132   003F7B                     CCP2CAP         equ	16251	;# 
  5133   003F7C                     CCPR1           equ	16252	;# 
  5134   003F7C                     CCPR1L          equ	16252	;# 
  5135   003F7D                     CCPR1H          equ	16253	;# 
  5136   003F7E                     CCP1CON         equ	16254	;# 
  5137   003F7F                     CCP1CAP         equ	16255	;# 
  5138   003F92                     T6TMR           equ	16274	;# 
  5139   003F92                     TMR6            equ	16274	;# 
  5140   003F93                     T6PR            equ	16275	;# 
  5141   003F93                     PR6             equ	16275	;# 
  5142   003F94                     T6CON           equ	16276	;# 
  5143   003F95                     T6HLT           equ	16277	;# 
  5144   003F96                     T6CLKCON        equ	16278	;# 
  5145   003F96                     T6CLK           equ	16278	;# 
  5146   003F97                     T6RST           equ	16279	;# 
  5147   003F98                     TMR5            equ	16280	;# 
  5148   003F98                     TMR5L           equ	16280	;# 
  5149   003F99                     TMR5H           equ	16281	;# 
  5150   003F9A                     T5CON           equ	16282	;# 
  5151   003F9A                     TMR5CON         equ	16282	;# 
  5152   003F9B                     T5GCON          equ	16283	;# 
  5153   003F9B                     TMR5GCON        equ	16283	;# 
  5154   003F9C                     T5GATE          equ	16284	;# 
  5155   003F9C                     TMR5GATE        equ	16284	;# 
  5156   003F9D                     T5CLK           equ	16285	;# 
  5157   003F9D                     TMR5CLK         equ	16285	;# 
  5158   003F9D                     PR5             equ	16285	;# 
  5159   003F9E                     T4TMR           equ	16286	;# 
  5160   003F9E                     TMR4            equ	16286	;# 
  5161   003F9F                     T4PR            equ	16287	;# 
  5162   003F9F                     PR4             equ	16287	;# 
  5163   003FA0                     T4CON           equ	16288	;# 
  5164   003FA1                     T4HLT           equ	16289	;# 
  5165   003FA2                     T4CLKCON        equ	16290	;# 
  5166   003FA2                     T4CLK           equ	16290	;# 
  5167   003FA3                     T4RST           equ	16291	;# 
  5168   003FA4                     TMR3            equ	16292	;# 
  5169   003FA4                     TMR3L           equ	16292	;# 
  5170   003FA5                     TMR3H           equ	16293	;# 
  5171   003FA6                     T3CON           equ	16294	;# 
  5172   003FA6                     TMR3CON         equ	16294	;# 
  5173   003FA7                     T3GCON          equ	16295	;# 
  5174   003FA7                     TMR3GCON        equ	16295	;# 
  5175   003FA8                     T3GATE          equ	16296	;# 
  5176   003FA8                     TMR3GATE        equ	16296	;# 
  5177   003FA9                     T3CLK           equ	16297	;# 
  5178   003FA9                     TMR3CLK         equ	16297	;# 
  5179   003FA9                     PR3             equ	16297	;# 
  5180   003FAA                     T2TMR           equ	16298	;# 
  5181   003FAA                     TMR2            equ	16298	;# 
  5182   003FAB                     T2PR            equ	16299	;# 
  5183   003FAB                     PR2             equ	16299	;# 
  5184   003FAC                     T2CON           equ	16300	;# 
  5185   003FAD                     T2HLT           equ	16301	;# 
  5186   003FAE                     T2CLKCON        equ	16302	;# 
  5187   003FAE                     T2CLK           equ	16302	;# 
  5188   003FAF                     T2RST           equ	16303	;# 
  5189   003FB0                     TMR1            equ	16304	;# 
  5190   003FB0                     TMR1L           equ	16304	;# 
  5191   003FB1                     TMR1H           equ	16305	;# 
  5192   003FB2                     T1CON           equ	16306	;# 
  5193   003FB2                     TMR1CON         equ	16306	;# 
  5194   003FB3                     T1GCON          equ	16307	;# 
  5195   003FB3                     TMR1GCON        equ	16307	;# 
  5196   003FB4                     T1GATE          equ	16308	;# 
  5197   003FB4                     TMR1GATE        equ	16308	;# 
  5198   003FB5                     T1CLK           equ	16309	;# 
  5199   003FB5                     TMR1CLK         equ	16309	;# 
  5200   003FB5                     PR1             equ	16309	;# 
  5201   003FB6                     TMR0L           equ	16310	;# 
  5202   003FB6                     TMR0            equ	16310	;# 
  5203   003FB7                     TMR0H           equ	16311	;# 
  5204   003FB7                     PR0             equ	16311	;# 
  5205   003FB8                     T0CON0          equ	16312	;# 
  5206   003FB9                     T0CON1          equ	16313	;# 
  5207   003FBA                     LATA            equ	16314	;# 
  5208   003FBB                     LATB            equ	16315	;# 
  5209   003FBC                     LATC            equ	16316	;# 
  5210   003FC2                     TRISA           equ	16322	;# 
  5211   003FC3                     TRISB           equ	16323	;# 
  5212   003FC4                     TRISC           equ	16324	;# 
  5213   003FCA                     PORTA           equ	16330	;# 
  5214   003FCB                     PORTB           equ	16331	;# 
  5215   003FCC                     PORTC           equ	16332	;# 
  5216   003FCE                     PORTE           equ	16334	;# 
  5217   003FD2                     INTCON0         equ	16338	;# 
  5218   003FD3                     INTCON1         equ	16339	;# 
  5219   003FD4                     IVTLOCK         equ	16340	;# 
  5220   003FD5                     IVTBASE         equ	16341	;# 
  5221   003FD5                     IVTBASEL        equ	16341	;# 
  5222   003FD6                     IVTBASEH        equ	16342	;# 
  5223   003FD7                     IVTBASEU        equ	16343	;# 
  5224   003FD8                     STATUS          equ	16344	;# 
  5225   003FD9                     FSR2            equ	16345	;# 
  5226   003FD9                     FSR2L           equ	16345	;# 
  5227   003FDA                     FSR2H           equ	16346	;# 
  5228   003FDB                     PLUSW2          equ	16347	;# 
  5229   003FDC                     PREINC2         equ	16348	;# 
  5230   003FDD                     POSTDEC2        equ	16349	;# 
  5231   003FDE                     POSTINC2        equ	16350	;# 
  5232   003FDF                     INDF2           equ	16351	;# 
  5233   003FE0                     BSR             equ	16352	;# 
  5234   003FE1                     FSR1            equ	16353	;# 
  5235   003FE1                     FSR1L           equ	16353	;# 
  5236   003FE2                     FSR1H           equ	16354	;# 
  5237   003FE3                     PLUSW1          equ	16355	;# 
  5238   003FE4                     PREINC1         equ	16356	;# 
  5239   003FE5                     POSTDEC1        equ	16357	;# 
  5240   003FE6                     POSTINC1        equ	16358	;# 
  5241   003FE7                     INDF1           equ	16359	;# 
  5242   003FE8                     WREG            equ	16360	;# 
  5243   003FE9                     FSR0            equ	16361	;# 
  5244   003FE9                     FSR0L           equ	16361	;# 
  5245   003FEA                     FSR0H           equ	16362	;# 
  5246   003FEB                     PLUSW0          equ	16363	;# 
  5247   003FEC                     PREINC0         equ	16364	;# 
  5248   003FED                     POSTDEC0        equ	16365	;# 
  5249   003FEE                     POSTINC0        equ	16366	;# 
  5250   003FEF                     INDF0           equ	16367	;# 
  5251   003FF0                     PCON0           equ	16368	;# 
  5252   003FF1                     PCON1           equ	16369	;# 
  5253   003FF3                     PROD            equ	16371	;# 
  5254   003FF3                     PRODL           equ	16371	;# 
  5255   003FF4                     PRODH           equ	16372	;# 
  5256   003FF5                     TABLAT          equ	16373	;# 
  5257   003FF6                     TBLPTR          equ	16374	;# 
  5258   003FF6                     TBLPTRL         equ	16374	;# 
  5259   003FF7                     TBLPTRH         equ	16375	;# 
  5260   003FF8                     TBLPTRU         equ	16376	;# 
  5261   003FF9                     PCLAT           equ	16377	;# 
  5262   003FF9                     PCL             equ	16377	;# 
  5263   003FFA                     PCLATH          equ	16378	;# 
  5264   003FFB                     PCLATU          equ	16379	;# 
  5265   003FFC                     STKPTR          equ	16380	;# 
  5266   003FFD                     TOS             equ	16381	;# 
  5267   003FFD                     TOSL            equ	16381	;# 
  5268   003FFE                     TOSH            equ	16382	;# 
  5269   003FFF                     TOSU            equ	16383	;# 
  5270   003880                     STATUS_CSHAD    equ	14464	;# 
  5271   003881                     WREG_CSHAD      equ	14465	;# 
  5272   003882                     BSR_CSHAD       equ	14466	;# 
  5273   003883                     SHADCON         equ	14467	;# 
  5274   003884                     STATUS_SHAD     equ	14468	;# 
  5275   003885                     WREG_SHAD       equ	14469	;# 
  5276   003886                     BSR_SHAD        equ	14470	;# 
  5277   003887                     PCLATH_SHAD     equ	14471	;# 
  5278   003888                     PCLATU_SHAD     equ	14472	;# 
  5279   003889                     FSR0SH          equ	14473	;# 
  5280   003889                     FSR0L_SHAD      equ	14473	;# 
  5281   00388A                     FSR0H_SHAD      equ	14474	;# 
  5282   00388B                     FSR1SH          equ	14475	;# 
  5283   00388B                     FSR1L_SHAD      equ	14475	;# 
  5284   00388C                     FSR1H_SHAD      equ	14476	;# 
  5285   00388D                     FSR2SH          equ	14477	;# 
  5286   00388D                     FSR2L_SHAD      equ	14477	;# 
  5287   00388E                     FSR2H_SHAD      equ	14478	;# 
  5288   00388F                     PRODSH          equ	14479	;# 
  5289   00388F                     PRODL_SHAD      equ	14479	;# 
  5290   003890                     PRODH_SHAD      equ	14480	;# 
  5291   00389D                     IVTADL          equ	14493	;# 
  5292   00389E                     IVTADH          equ	14494	;# 
  5293   00389F                     IVTADU          equ	14495	;# 
  5294   00395B                     WDTCON0         equ	14683	;# 
  5295   00395C                     WDTCON1         equ	14684	;# 
  5296   00395D                     WDTPSL          equ	14685	;# 
  5297   00395E                     WDTPSH          equ	14686	;# 
  5298   00395F                     WDTTMR          equ	14687	;# 
  5299   003960                     CRCDATA         equ	14688	;# 
  5300   003960                     CRCDATL         equ	14688	;# 
  5301   003961                     CRCDATH         equ	14689	;# 
  5302   003962                     CRCACC          equ	14690	;# 
  5303   003962                     CRCACCL         equ	14690	;# 
  5304   003963                     CRCACCH         equ	14691	;# 
  5305   003964                     CRCSHFT         equ	14692	;# 
  5306   003964                     CRCSHIFTL       equ	14692	;# 
  5307   003965                     CRCSHIFTH       equ	14693	;# 
  5308   003966                     CRCXOR          equ	14694	;# 
  5309   003966                     CRCXORL         equ	14694	;# 
  5310   003967                     CRCXORH         equ	14695	;# 
  5311   003968                     CRCCON0         equ	14696	;# 
  5312   003969                     CRCCON1         equ	14697	;# 
  5313   003976                     SCANLADR        equ	14710	;# 
  5314   003976                     SCANLADRL       equ	14710	;# 
  5315   003977                     SCANLADRH       equ	14711	;# 
  5316   003978                     SCANLADRU       equ	14712	;# 
  5317   003979                     SCANHADR        equ	14713	;# 
  5318   003979                     SCANHADRL       equ	14713	;# 
  5319   00397A                     SCANHADRH       equ	14714	;# 
  5320   00397B                     SCANHADRU       equ	14715	;# 
  5321   00397C                     SCANCON0        equ	14716	;# 
  5322   00397D                     SCANTRIG        equ	14717	;# 
  5323   003980                     IPR0            equ	14720	;# 
  5324   003981                     IPR1            equ	14721	;# 
  5325   003982                     IPR2            equ	14722	;# 
  5326   003983                     IPR3            equ	14723	;# 
  5327   003984                     IPR4            equ	14724	;# 
  5328   003985                     IPR5            equ	14725	;# 
  5329   003986                     IPR6            equ	14726	;# 
  5330   003987                     IPR7            equ	14727	;# 
  5331   003988                     IPR8            equ	14728	;# 
  5332   003989                     IPR9            equ	14729	;# 
  5333   00398A                     IPR10           equ	14730	;# 
  5334   003990                     PIE0            equ	14736	;# 
  5335   003991                     PIE1            equ	14737	;# 
  5336   003992                     PIE2            equ	14738	;# 
  5337   003993                     PIE3            equ	14739	;# 
  5338   003994                     PIE4            equ	14740	;# 
  5339   003995                     PIE5            equ	14741	;# 
  5340   003996                     PIE6            equ	14742	;# 
  5341   003997                     PIE7            equ	14743	;# 
  5342   003998                     PIE8            equ	14744	;# 
  5343   003999                     PIE9            equ	14745	;# 
  5344   00399A                     PIE10           equ	14746	;# 
  5345   0039A0                     PIR0            equ	14752	;# 
  5346   0039A1                     PIR1            equ	14753	;# 
  5347   0039A2                     PIR2            equ	14754	;# 
  5348   0039A3                     PIR3            equ	14755	;# 
  5349   0039A4                     PIR4            equ	14756	;# 
  5350   0039A5                     PIR5            equ	14757	;# 
  5351   0039A6                     PIR6            equ	14758	;# 
  5352   0039A7                     PIR7            equ	14759	;# 
  5353   0039A8                     PIR8            equ	14760	;# 
  5354   0039A9                     PIR9            equ	14761	;# 
  5355   0039AA                     PIR10           equ	14762	;# 
  5356   0039C0                     PMD0            equ	14784	;# 
  5357   0039C1                     PMD1            equ	14785	;# 
  5358   0039C2                     PMD2            equ	14786	;# 
  5359   0039C3                     PMD3            equ	14787	;# 
  5360   0039C4                     PMD4            equ	14788	;# 
  5361   0039C5                     PMD5            equ	14789	;# 
  5362   0039C6                     PMD6            equ	14790	;# 
  5363   0039C7                     PMD7            equ	14791	;# 
  5364   0039D0                     BORCON          equ	14800	;# 
  5365   0039D1                     VREGCON         equ	14801	;# 
  5366   0039D8                     CPUDOZE         equ	14808	;# 
  5367   0039D9                     OSCCON1         equ	14809	;# 
  5368   0039DA                     OSCCON2         equ	14810	;# 
  5369   0039DB                     OSCCON3         equ	14811	;# 
  5370   0039DC                     OSCSTAT         equ	14812	;# 
  5371   0039DC                     OSCSTAT1        equ	14812	;# 
  5372   0039DD                     OSCEN           equ	14813	;# 
  5373   0039DE                     OSCTUNE         equ	14814	;# 
  5374   0039DF                     OSCFRQ          equ	14815	;# 
  5375   0039E0                     NVMADRL         equ	14816	;# 
  5376   0039E1                     NVMADRH         equ	14817	;# 
  5377   0039E3                     NVMDAT          equ	14819	;# 
  5378   0039E5                     NVMCON1         equ	14821	;# 
  5379   0039E6                     NVMCON2         equ	14822	;# 
  5380   0039EF                     PRLOCK          equ	14831	;# 
  5381   0039F1                     ISRPR           equ	14833	;# 
  5382   0039F2                     MAINPR          equ	14834	;# 
  5383   0039F3                     DMA1PR          equ	14835	;# 
  5384   0039F4                     DMA2PR          equ	14836	;# 
  5385   0039F7                     SCANPR          equ	14839	;# 
  5386   003A00                     RA0PPS          equ	14848	;# 
  5387   003A01                     RA1PPS          equ	14849	;# 
  5388   003A02                     RA2PPS          equ	14850	;# 
  5389   003A03                     RA3PPS          equ	14851	;# 
  5390   003A04                     RA4PPS          equ	14852	;# 
  5391   003A05                     RA5PPS          equ	14853	;# 
  5392   003A06                     RA6PPS          equ	14854	;# 
  5393   003A07                     RA7PPS          equ	14855	;# 
  5394   003A08                     RB0PPS          equ	14856	;# 
  5395   003A09                     RB1PPS          equ	14857	;# 
  5396   003A0A                     RB2PPS          equ	14858	;# 
  5397   003A0B                     RB3PPS          equ	14859	;# 
  5398   003A0C                     RB4PPS          equ	14860	;# 
  5399   003A0D                     RB5PPS          equ	14861	;# 
  5400   003A0E                     RB6PPS          equ	14862	;# 
  5401   003A0F                     RB7PPS          equ	14863	;# 
  5402   003A10                     RC0PPS          equ	14864	;# 
  5403   003A11                     RC1PPS          equ	14865	;# 
  5404   003A12                     RC2PPS          equ	14866	;# 
  5405   003A13                     RC3PPS          equ	14867	;# 
  5406   003A14                     RC4PPS          equ	14868	;# 
  5407   003A15                     RC5PPS          equ	14869	;# 
  5408   003A16                     RC6PPS          equ	14870	;# 
  5409   003A17                     RC7PPS          equ	14871	;# 
  5410   003A40                     ANSELA          equ	14912	;# 
  5411   003A41                     WPUA            equ	14913	;# 
  5412   003A42                     ODCONA          equ	14914	;# 
  5413   003A43                     SLRCONA         equ	14915	;# 
  5414   003A44                     INLVLA          equ	14916	;# 
  5415   003A45                     IOCAP           equ	14917	;# 
  5416   003A46                     IOCAN           equ	14918	;# 
  5417   003A47                     IOCAF           equ	14919	;# 
  5418   003A48                     CCDPA           equ	14920	;# 
  5419   003A49                     CCDNA           equ	14921	;# 
  5420   003A50                     ANSELB          equ	14928	;# 
  5421   003A51                     WPUB            equ	14929	;# 
  5422   003A52                     ODCONB          equ	14930	;# 
  5423   003A53                     SLRCONB         equ	14931	;# 
  5424   003A54                     INLVLB          equ	14932	;# 
  5425   003A55                     IOCBP           equ	14933	;# 
  5426   003A56                     IOCBN           equ	14934	;# 
  5427   003A57                     IOCBF           equ	14935	;# 
  5428   003A58                     CCDPB           equ	14936	;# 
  5429   003A59                     CCDNB           equ	14937	;# 
  5430   003A5A                     RB1I2C          equ	14938	;# 
  5431   003A5B                     RB2I2C          equ	14939	;# 
  5432   003A60                     ANSELC          equ	14944	;# 
  5433   003A61                     WPUC            equ	14945	;# 
  5434   003A62                     ODCONC          equ	14946	;# 
  5435   003A63                     SLRCONC         equ	14947	;# 
  5436   003A64                     INLVLC          equ	14948	;# 
  5437   003A65                     IOCCP           equ	14949	;# 
  5438   003A66                     IOCCN           equ	14950	;# 
  5439   003A67                     IOCCF           equ	14951	;# 
  5440   003A68                     CCDPC           equ	14952	;# 
  5441   003A69                     CCDNC           equ	14953	;# 
  5442   003A6A                     RC3I2C          equ	14954	;# 
  5443   003A6B                     RC4I2C          equ	14955	;# 
  5444   003A81                     WPUE            equ	14977	;# 
  5445   003A84                     INLVLE          equ	14980	;# 
  5446   003A85                     IOCEP           equ	14981	;# 
  5447   003A86                     IOCEN           equ	14982	;# 
  5448   003A87                     IOCEF           equ	14983	;# 
  5449   003ABE                     CCDCON          equ	15038	;# 
  5450   003ABF                     PPSLOCK         equ	15039	;# 
  5451   003AC0                     INT0PPS         equ	15040	;# 
  5452   003AC1                     INT1PPS         equ	15041	;# 
  5453   003AC2                     INT2PPS         equ	15042	;# 
  5454   003AC3                     T0CKIPPS        equ	15043	;# 
  5455   003AC4                     T1CKIPPS        equ	15044	;# 
  5456   003AC5                     T1GPPS          equ	15045	;# 
  5457   003AC6                     T3CKIPPS        equ	15046	;# 
  5458   003AC7                     T3GPPS          equ	15047	;# 
  5459   003AC8                     T5CKIPPS        equ	15048	;# 
  5460   003AC9                     T5GPPS          equ	15049	;# 
  5461   003ACA                     T2INPPS         equ	15050	;# 
  5462   003ACB                     T4INPPS         equ	15051	;# 
  5463   003ACC                     T6INPPS         equ	15052	;# 
  5464   003ACD                     CCP1PPS         equ	15053	;# 
  5465   003ACE                     CCP2PPS         equ	15054	;# 
  5466   003ACF                     CCP3PPS         equ	15055	;# 
  5467   003AD0                     CCP4PPS         equ	15056	;# 
  5468   003AD1                     SMT1WINPPS      equ	15057	;# 
  5469   003AD2                     SMT1SIGPPS      equ	15058	;# 
  5470   003AD3                     CWG1INPPS       equ	15059	;# 
  5471   003AD4                     CWG2INPPS       equ	15060	;# 
  5472   003AD5                     CWG3INPPS       equ	15061	;# 
  5473   003AD6                     MD1CARLPPS      equ	15062	;# 
  5474   003AD7                     MD1CARHPPS      equ	15063	;# 
  5475   003AD8                     MD1SRCPPS       equ	15064	;# 
  5476   003AD9                     CLCIN0PPS       equ	15065	;# 
  5477   003ADA                     CLCIN1PPS       equ	15066	;# 
  5478   003ADB                     CLCIN2PPS       equ	15067	;# 
  5479   003ADC                     CLCIN3PPS       equ	15068	;# 
  5480   003ADD                     ADACTPPS        equ	15069	;# 
  5481   003ADE                     SPI1SCKPPS      equ	15070	;# 
  5482   003ADF                     SPI1SDIPPS      equ	15071	;# 
  5483   003AE0                     SPI1SSPPS       equ	15072	;# 
  5484   003AE1                     I2C1SCLPPS      equ	15073	;# 
  5485   003AE2                     I2C1SDAPPS      equ	15074	;# 
  5486   003AE3                     I2C2SCLPPS      equ	15075	;# 
  5487   003AE4                     I2C2SDAPPS      equ	15076	;# 
  5488   003AE5                     U1RXPPS         equ	15077	;# 
  5489   003AE6                     U1CTSPPS        equ	15078	;# 
  5490   003AE8                     U2RXPPS         equ	15080	;# 
  5491   003AE9                     U2CTSPPS        equ	15081	;# 
  5492   003BC9                     DMA2BUF         equ	15305	;# 
  5493   003BCA                     DMA2DCNT        equ	15306	;# 
  5494   003BCA                     DMA2DCNTL       equ	15306	;# 
  5495   003BCB                     DMA2DCNTH       equ	15307	;# 
  5496   003BCC                     DMA2DPTR        equ	15308	;# 
  5497   003BCC                     DMA2DPTRL       equ	15308	;# 
  5498   003BCD                     DMA2DPTRH       equ	15309	;# 
  5499   003BCE                     DMA2DSZ         equ	15310	;# 
  5500   003BCE                     DMA2DSZL        equ	15310	;# 
  5501   003BCF                     DMA2DSZH        equ	15311	;# 
  5502   003BD0                     DMA2DSA         equ	15312	;# 
  5503   003BD0                     DMA2DSAL        equ	15312	;# 
  5504   003BD1                     DMA2DSAH        equ	15313	;# 
  5505   003BD2                     DMA2SCNT        equ	15314	;# 
  5506   003BD2                     DMA2SCNTL       equ	15314	;# 
  5507   003BD3                     DMA2SCNTH       equ	15315	;# 
  5508   003BD4                     DMA2SPTR        equ	15316	;# 
  5509   003BD4                     DMA2SPTRL       equ	15316	;# 
  5510   003BD5                     DMA2SPTRH       equ	15317	;# 
  5511   003BD6                     DMA2SPTRU       equ	15318	;# 
  5512   003BD7                     DMA2SSZ         equ	15319	;# 
  5513   003BD7                     DMA2SSZL        equ	15319	;# 
  5514   003BD8                     DMA2SSZH        equ	15320	;# 
  5515   003BD9                     DMA2SSA         equ	15321	;# 
  5516   003BD9                     DMA2SSAL        equ	15321	;# 
  5517   003BDA                     DMA2SSAH        equ	15322	;# 
  5518   003BDB                     DMA2SSAU        equ	15323	;# 
  5519   003BDC                     DMA2CON0        equ	15324	;# 
  5520   003BDD                     DMA2CON1        equ	15325	;# 
  5521   003BDE                     DMA2AIRQ        equ	15326	;# 
  5522   003BDF                     DMA2SIRQ        equ	15327	;# 
  5523   003BE9                     DMA1BUF         equ	15337	;# 
  5524   003BEA                     DMA1DCNT        equ	15338	;# 
  5525   003BEA                     DMA1DCNTL       equ	15338	;# 
  5526   003BEB                     DMA1DCNTH       equ	15339	;# 
  5527   003BEC                     DMA1DPTR        equ	15340	;# 
  5528   003BEC                     DMA1DPTRL       equ	15340	;# 
  5529   003BED                     DMA1DPTRH       equ	15341	;# 
  5530   003BEE                     DMA1DSZ         equ	15342	;# 
  5531   003BEE                     DMA1DSZL        equ	15342	;# 
  5532   003BEF                     DMA1DSZH        equ	15343	;# 
  5533   003BF0                     DMA1DSA         equ	15344	;# 
  5534   003BF0                     DMA1DSAL        equ	15344	;# 
  5535   003BF1                     DMA1DSAH        equ	15345	;# 
  5536   003BF2                     DMA1SCNT        equ	15346	;# 
  5537   003BF2                     DMA1SCNTL       equ	15346	;# 
  5538   003BF3                     DMA1SCNTH       equ	15347	;# 
  5539   003BF4                     DMA1SPTR        equ	15348	;# 
  5540   003BF4                     DMA1SPTRL       equ	15348	;# 
  5541   003BF5                     DMA1SPTRH       equ	15349	;# 
  5542   003BF6                     DMA1SPTRU       equ	15350	;# 
  5543   003BF7                     DMA1SSZ         equ	15351	;# 
  5544   003BF7                     DMA1SSZL        equ	15351	;# 
  5545   003BF8                     DMA1SSZH        equ	15352	;# 
  5546   003BF9                     DMA1SSA         equ	15353	;# 
  5547   003BF9                     DMA1SSAL        equ	15353	;# 
  5548   003BFA                     DMA1SSAH        equ	15354	;# 
  5549   003BFB                     DMA1SSAU        equ	15355	;# 
  5550   003BFC                     DMA1CON0        equ	15356	;# 
  5551   003BFD                     DMA1CON1        equ	15357	;# 
  5552   003BFE                     DMA1AIRQ        equ	15358	;# 
  5553   003BFF                     DMA1SIRQ        equ	15359	;# 
  5554   003C56                     CLC4CON         equ	15446	;# 
  5555   003C57                     CLC4POL         equ	15447	;# 
  5556   003C58                     CLC4SEL0        equ	15448	;# 
  5557   003C59                     CLC4SEL1        equ	15449	;# 
  5558   003C5A                     CLC4SEL2        equ	15450	;# 
  5559   003C5B                     CLC4SEL3        equ	15451	;# 
  5560   003C5C                     CLC4GLS0        equ	15452	;# 
  5561   003C5D                     CLC4GLS1        equ	15453	;# 
  5562   003C5E                     CLC4GLS2        equ	15454	;# 
  5563   003C5F                     CLC4GLS3        equ	15455	;# 
  5564   003C60                     CLC3CON         equ	15456	;# 
  5565   003C61                     CLC3POL         equ	15457	;# 
  5566   003C62                     CLC3SEL0        equ	15458	;# 
  5567   003C63                     CLC3SEL1        equ	15459	;# 
  5568   003C64                     CLC3SEL2        equ	15460	;# 
  5569   003C65                     CLC3SEL3        equ	15461	;# 
  5570   003C66                     CLC3GLS0        equ	15462	;# 
  5571   003C67                     CLC3GLS1        equ	15463	;# 
  5572   003C68                     CLC3GLS2        equ	15464	;# 
  5573   003C69                     CLC3GLS3        equ	15465	;# 
  5574   003C6A                     CLC2CON         equ	15466	;# 
  5575   003C6B                     CLC2POL         equ	15467	;# 
  5576   003C6C                     CLC2SEL0        equ	15468	;# 
  5577   003C6D                     CLC2SEL1        equ	15469	;# 
  5578   003C6E                     CLC2SEL2        equ	15470	;# 
  5579   003C6F                     CLC2SEL3        equ	15471	;# 
  5580   003C70                     CLC2GLS0        equ	15472	;# 
  5581   003C71                     CLC2GLS1        equ	15473	;# 
  5582   003C72                     CLC2GLS2        equ	15474	;# 
  5583   003C73                     CLC2GLS3        equ	15475	;# 
  5584   003C74                     CLC1CON         equ	15476	;# 
  5585   003C75                     CLC1POL         equ	15477	;# 
  5586   003C76                     CLC1SEL0        equ	15478	;# 
  5587   003C77                     CLC1SEL1        equ	15479	;# 
  5588   003C78                     CLC1SEL2        equ	15480	;# 
  5589   003C79                     CLC1SEL3        equ	15481	;# 
  5590   003C7A                     CLC1GLS0        equ	15482	;# 
  5591   003C7B                     CLC1GLS1        equ	15483	;# 
  5592   003C7C                     CLC1GLS2        equ	15484	;# 
  5593   003C7D                     CLC1GLS3        equ	15485	;# 
  5594   003C7E                     CLCDATA0        equ	15486	;# 
  5595   003CE5                     CLKRCON         equ	15589	;# 
  5596   003CE6                     CLKRCLK         equ	15590	;# 
  5597   003CFA                     MD1CON0         equ	15610	;# 
  5598   003CFB                     MD1CON1         equ	15611	;# 
  5599   003CFC                     MD1SRC          equ	15612	;# 
  5600   003CFD                     MD1CARL         equ	15613	;# 
  5601   003CFE                     MD1CARH         equ	15614	;# 
  5602   003D10                     SPI1RXB         equ	15632	;# 
  5603   003D11                     SPI1TXB         equ	15633	;# 
  5604   003D12                     SPI1TCNT        equ	15634	;# 
  5605   003D12                     SPI1TCNTL       equ	15634	;# 
  5606   003D13                     SPI1TCNTH       equ	15635	;# 
  5607   003D14                     SPI1CON0        equ	15636	;# 
  5608   003D15                     SPI1CON1        equ	15637	;# 
  5609   003D16                     SPI1CON2        equ	15638	;# 
  5610   003D17                     SPI1STATUS      equ	15639	;# 
  5611   003D18                     SPI1TWIDTH      equ	15640	;# 
  5612   003D19                     SPI1BAUD        equ	15641	;# 
  5613   003D1A                     SPI1INTF        equ	15642	;# 
  5614   003D1B                     SPI1INTE        equ	15643	;# 
  5615   003D1C                     SPI1CLK         equ	15644	;# 
  5616   003D54                     I2C2RXB         equ	15700	;# 
  5617   003D55                     I2C2TXB         equ	15701	;# 
  5618   003D56                     I2C2CNT         equ	15702	;# 
  5619   003D57                     I2C2ADB0        equ	15703	;# 
  5620   003D58                     I2C2ADB1        equ	15704	;# 
  5621   003D59                     I2C2ADR0        equ	15705	;# 
  5622   003D5A                     I2C2ADR1        equ	15706	;# 
  5623   003D5B                     I2C2ADR2        equ	15707	;# 
  5624   003D5C                     I2C2ADR3        equ	15708	;# 
  5625   003D5D                     I2C2CON0        equ	15709	;# 
  5626   003D5E                     I2C2CON1        equ	15710	;# 
  5627   003D5F                     I2C2CON2        equ	15711	;# 
  5628   003D60                     I2C2ERR         equ	15712	;# 
  5629   003D61                     I2C2STAT0       equ	15713	;# 
  5630   003D62                     I2C2STAT1       equ	15714	;# 
  5631   003D63                     I2C2PIR         equ	15715	;# 
  5632   003D64                     I2C2PIE         equ	15716	;# 
  5633   003D65                     I2C2CLK         equ	15717	;# 
  5634   003D66                     I2C2BTO         equ	15718	;# 
  5635   003D6A                     I2C1RXB         equ	15722	;# 
  5636   003D6B                     I2C1TXB         equ	15723	;# 
  5637   003D6C                     I2C1CNT         equ	15724	;# 
  5638   003D6D                     I2C1ADB0        equ	15725	;# 
  5639   003D6E                     I2C1ADB1        equ	15726	;# 
  5640   003D6F                     I2C1ADR0        equ	15727	;# 
  5641   003D70                     I2C1ADR1        equ	15728	;# 
  5642   003D71                     I2C1ADR2        equ	15729	;# 
  5643   003D72                     I2C1ADR3        equ	15730	;# 
  5644   003D73                     I2C1CON0        equ	15731	;# 
  5645   003D74                     I2C1CON1        equ	15732	;# 
  5646   003D75                     I2C1CON2        equ	15733	;# 
  5647   003D76                     I2C1ERR         equ	15734	;# 
  5648   003D77                     I2C1STAT0       equ	15735	;# 
  5649   003D78                     I2C1STAT1       equ	15736	;# 
  5650   003D79                     I2C1PIR         equ	15737	;# 
  5651   003D7A                     I2C1PIE         equ	15738	;# 
  5652   003D7B                     I2C1CLK         equ	15739	;# 
  5653   003D7C                     I2C1BTO         equ	15740	;# 
  5654   003DD0                     U2RXB           equ	15824	;# 
  5655   003DD0                     U2RXBL          equ	15824	;# 
  5656   003DD2                     U2TXB           equ	15826	;# 
  5657   003DD2                     U2TXBL          equ	15826	;# 
  5658   003DD4                     U2P1            equ	15828	;# 
  5659   003DD4                     U2P1L           equ	15828	;# 
  5660   003DD6                     U2P2            equ	15830	;# 
  5661   003DD6                     U2P2L           equ	15830	;# 
  5662   003DD8                     U2P3            equ	15832	;# 
  5663   003DD8                     U2P3L           equ	15832	;# 
  5664   003DDA                     U2CON0          equ	15834	;# 
  5665   003DDB                     U2CON1          equ	15835	;# 
  5666   003DDC                     U2CON2          equ	15836	;# 
  5667   003DDD                     U2BRG           equ	15837	;# 
  5668   003DDD                     U2BRGL          equ	15837	;# 
  5669   003DDE                     U2BRGH          equ	15838	;# 
  5670   003DDF                     U2FIFO          equ	15839	;# 
  5671   003DE0                     U2UIR           equ	15840	;# 
  5672   003DE1                     U2ERRIR         equ	15841	;# 
  5673   003DE2                     U2ERRIE         equ	15842	;# 
  5674   003DE8                     U1RXB           equ	15848	;# 
  5675   003DE8                     U1RXBL          equ	15848	;# 
  5676   003DE9                     U1RXCHK         equ	15849	;# 
  5677   003DEA                     U1TXB           equ	15850	;# 
  5678   003DEA                     U1TXBL          equ	15850	;# 
  5679   003DEB                     U1TXCHK         equ	15851	;# 
  5680   003DEC                     U1P1            equ	15852	;# 
  5681   003DEC                     U1P1L           equ	15852	;# 
  5682   003DED                     U1P1H           equ	15853	;# 
  5683   003DEE                     U1P2            equ	15854	;# 
  5684   003DEE                     U1P2L           equ	15854	;# 
  5685   003DEF                     U1P2H           equ	15855	;# 
  5686   003DF0                     U1P3            equ	15856	;# 
  5687   003DF0                     U1P3L           equ	15856	;# 
  5688   003DF1                     U1P3H           equ	15857	;# 
  5689   003DF2                     U1CON0          equ	15858	;# 
  5690   003DF3                     U1CON1          equ	15859	;# 
  5691   003DF4                     U1CON2          equ	15860	;# 
  5692   003DF5                     U1BRG           equ	15861	;# 
  5693   003DF5                     U1BRGL          equ	15861	;# 
  5694   003DF6                     U1BRGH          equ	15862	;# 
  5695   003DF7                     U1FIFO          equ	15863	;# 
  5696   003DF8                     U1UIR           equ	15864	;# 
  5697   003DF9                     U1ERRIR         equ	15865	;# 
  5698   003DFA                     U1ERRIE         equ	15866	;# 
  5699   003E9C                     DAC1CON1        equ	16028	;# 
  5700   003E9E                     DAC1CON0        equ	16030	;# 
  5701   003EB8                     CM2CON0         equ	16056	;# 
  5702   003EB9                     CM2CON1         equ	16057	;# 
  5703   003EBA                     CM2NCH          equ	16058	;# 
  5704   003EBB                     CM2PCH          equ	16059	;# 
  5705   003EBC                     CM1CON0         equ	16060	;# 
  5706   003EBD                     CM1CON1         equ	16061	;# 
  5707   003EBE                     CM1NCH          equ	16062	;# 
  5708   003EBF                     CM1PCH          equ	16063	;# 
  5709   003EC0                     CMOUT           equ	16064	;# 
  5710   003EC1                     FVRCON          equ	16065	;# 
  5711   003EC3                     ZCDCON          equ	16067	;# 
  5712   003EC9                     HLVDCON0        equ	16073	;# 
  5713   003ECA                     HLVDCON1        equ	16074	;# 
  5714   003ED7                     ADCP            equ	16087	;# 
  5715   003EDE                     ADLTH           equ	16094	;# 
  5716   003EDE                     ADLTHL          equ	16094	;# 
  5717   003EDF                     ADLTHH          equ	16095	;# 
  5718   003EE0                     ADUTH           equ	16096	;# 
  5719   003EE0                     ADUTHL          equ	16096	;# 
  5720   003EE1                     ADUTHH          equ	16097	;# 
  5721   003EE2                     ADERR           equ	16098	;# 
  5722   003EE2                     ADERRL          equ	16098	;# 
  5723   003EE3                     ADERRH          equ	16099	;# 
  5724   003EE4                     ADSTPT          equ	16100	;# 
  5725   003EE4                     ADSTPTL         equ	16100	;# 
  5726   003EE5                     ADSTPTH         equ	16101	;# 
  5727   003EE6                     ADFLTR          equ	16102	;# 
  5728   003EE6                     ADFLTRL         equ	16102	;# 
  5729   003EE7                     ADFLTRH         equ	16103	;# 
  5730   003EE8                     ADACC           equ	16104	;# 
  5731   003EE8                     ADACCL          equ	16104	;# 
  5732   003EE9                     ADACCH          equ	16105	;# 
  5733   003EEA                     ADACCU          equ	16106	;# 
  5734   003EEB                     ADCNT           equ	16107	;# 
  5735   003EEC                     ADRPT           equ	16108	;# 
  5736   003EED                     ADPREV          equ	16109	;# 
  5737   003EED                     ADPREVL         equ	16109	;# 
  5738   003EEE                     ADPREVH         equ	16110	;# 
  5739   003EEF                     ADRES           equ	16111	;# 
  5740   003EEF                     ADRESL          equ	16111	;# 
  5741   003EF0                     ADRESH          equ	16112	;# 
  5742   003EF1                     ADPCH           equ	16113	;# 
  5743   003EF3                     ADACQ           equ	16115	;# 
  5744   003EF3                     ADACQL          equ	16115	;# 
  5745   003EF4                     ADACQH          equ	16116	;# 
  5746   003EF5                     ADCAP           equ	16117	;# 
  5747   003EF6                     ADPRE           equ	16118	;# 
  5748   003EF6                     ADPREL          equ	16118	;# 
  5749   003EF7                     ADPREH          equ	16119	;# 
  5750   003EF8                     ADCON0          equ	16120	;# 
  5751   003EF9                     ADCON1          equ	16121	;# 
  5752   003EFA                     ADCON2          equ	16122	;# 
  5753   003EFB                     ADCON3          equ	16123	;# 
  5754   003EFC                     ADSTAT          equ	16124	;# 
  5755   003EFD                     ADREF           equ	16125	;# 
  5756   003EFE                     ADACT           equ	16126	;# 
  5757   003EFF                     ADCLK           equ	16127	;# 
  5758   003F12                     SMT1TMR         equ	16146	;# 
  5759   003F12                     SMT1TMRL        equ	16146	;# 
  5760   003F13                     SMT1TMRH        equ	16147	;# 
  5761   003F14                     SMT1TMRU        equ	16148	;# 
  5762   003F15                     SMT1CPR         equ	16149	;# 
  5763   003F15                     SMT1CPRL        equ	16149	;# 
  5764   003F16                     SMT1CPRH        equ	16150	;# 
  5765   003F17                     SMT1CPRU        equ	16151	;# 
  5766   003F18                     SMT1CPW         equ	16152	;# 
  5767   003F18                     SMT1CPWL        equ	16152	;# 
  5768   003F19                     SMT1CPWH        equ	16153	;# 
  5769   003F1A                     SMT1CPWU        equ	16154	;# 
  5770   003F1B                     SMT1PR          equ	16155	;# 
  5771   003F1B                     SMT1PRL         equ	16155	;# 
  5772   003F1C                     SMT1PRH         equ	16156	;# 
  5773   003F1D                     SMT1PRU         equ	16157	;# 
  5774   003F1E                     SMT1CON0        equ	16158	;# 
  5775   003F1F                     SMT1CON1        equ	16159	;# 
  5776   003F20                     SMT1STAT        equ	16160	;# 
  5777   003F21                     SMT1CLK         equ	16161	;# 
  5778   003F22                     SMT1SIG         equ	16162	;# 
  5779   003F23                     SMT1WIN         equ	16163	;# 
  5780   003F38                     NCO1ACC         equ	16184	;# 
  5781   003F38                     NCO1ACCL        equ	16184	;# 
  5782   003F39                     NCO1ACCH        equ	16185	;# 
  5783   003F3A                     NCO1ACCU        equ	16186	;# 
  5784   003F3B                     NCO1INC         equ	16187	;# 
  5785   003F3B                     NCO1INCL        equ	16187	;# 
  5786   003F3C                     NCO1INCH        equ	16188	;# 
  5787   003F3D                     NCO1INCU        equ	16189	;# 
  5788   003F3E                     NCO1CON         equ	16190	;# 
  5789   003F3F                     NCO1CLK         equ	16191	;# 
  5790   003F40                     CWG3CLK         equ	16192	;# 
  5791   003F40                     CWG3CLKCON      equ	16192	;# 
  5792   003F41                     CWG3ISM         equ	16193	;# 
  5793   003F41                     CWG3DAT         equ	16193	;# 
  5794   003F42                     CWG3DBR         equ	16194	;# 
  5795   003F43                     CWG3DBF         equ	16195	;# 
  5796   003F44                     CWG3CON0        equ	16196	;# 
  5797   003F45                     CWG3CON1        equ	16197	;# 
  5798   003F46                     CWG3AS0         equ	16198	;# 
  5799   003F47                     CWG3AS1         equ	16199	;# 
  5800   003F48                     CWG3STR         equ	16200	;# 
  5801   003F49                     CWG2CLK         equ	16201	;# 
  5802   003F49                     CWG2CLKCON      equ	16201	;# 
  5803   003F4A                     CWG2ISM         equ	16202	;# 
  5804   003F4A                     CWG2DAT         equ	16202	;# 
  5805   003F4B                     CWG2DBR         equ	16203	;# 
  5806   003F4C                     CWG2DBF         equ	16204	;# 
  5807   003F4D                     CWG2CON0        equ	16205	;# 
  5808   003F4E                     CWG2CON1        equ	16206	;# 
  5809   003F4F                     CWG2AS0         equ	16207	;# 
  5810   003F50                     CWG2AS1         equ	16208	;# 
  5811   003F51                     CWG2STR         equ	16209	;# 
  5812   003F52                     CWG1CLK         equ	16210	;# 
  5813   003F52                     CWG1CLKCON      equ	16210	;# 
  5814   003F53                     CWG1ISM         equ	16211	;# 
  5815   003F53                     CWG1DAT         equ	16211	;# 
  5816   003F54                     CWG1DBR         equ	16212	;# 
  5817   003F55                     CWG1DBF         equ	16213	;# 
  5818   003F56                     CWG1CON0        equ	16214	;# 
  5819   003F57                     CWG1CON1        equ	16215	;# 
  5820   003F58                     CWG1AS0         equ	16216	;# 
  5821   003F59                     CWG1AS1         equ	16217	;# 
  5822   003F5A                     CWG1STR         equ	16218	;# 
  5823   003F5E                     CCPTMRS0        equ	16222	;# 
  5824   003F5F                     CCPTMRS1        equ	16223	;# 
  5825   003F60                     PWM8DC          equ	16224	;# 
  5826   003F60                     PWM8DCL         equ	16224	;# 
  5827   003F61                     PWM8DCH         equ	16225	;# 
  5828   003F62                     PWM8CON         equ	16226	;# 
  5829   003F64                     PWM7DC          equ	16228	;# 
  5830   003F64                     PWM7DCL         equ	16228	;# 
  5831   003F65                     PWM7DCH         equ	16229	;# 
  5832   003F66                     PWM7CON         equ	16230	;# 
  5833   003F68                     PWM6DC          equ	16232	;# 
  5834   003F68                     PWM6DCL         equ	16232	;# 
  5835   003F69                     PWM6DCH         equ	16233	;# 
  5836   003F6A                     PWM6CON         equ	16234	;# 
  5837   003F6C                     PWM5DC          equ	16236	;# 
  5838   003F6C                     PWM5DCL         equ	16236	;# 
  5839   003F6D                     PWM5DCH         equ	16237	;# 
  5840   003F6E                     PWM5CON         equ	16238	;# 
  5841   003F70                     CCPR4           equ	16240	;# 
  5842   003F70                     CCPR4L          equ	16240	;# 
  5843   003F71                     CCPR4H          equ	16241	;# 
  5844   003F72                     CCP4CON         equ	16242	;# 
  5845   003F73                     CCP4CAP         equ	16243	;# 
  5846   003F74                     CCPR3           equ	16244	;# 
  5847   003F74                     CCPR3L          equ	16244	;# 
  5848   003F75                     CCPR3H          equ	16245	;# 
  5849   003F76                     CCP3CON         equ	16246	;# 
  5850   003F77                     CCP3CAP         equ	16247	;# 
  5851   003F78                     CCPR2           equ	16248	;# 
  5852   003F78                     CCPR2L          equ	16248	;# 
  5853   003F79                     CCPR2H          equ	16249	;# 
  5854   003F7A                     CCP2CON         equ	16250	;# 
  5855   003F7B                     CCP2CAP         equ	16251	;# 
  5856   003F7C                     CCPR1           equ	16252	;# 
  5857   003F7C                     CCPR1L          equ	16252	;# 
  5858   003F7D                     CCPR1H          equ	16253	;# 
  5859   003F7E                     CCP1CON         equ	16254	;# 
  5860   003F7F                     CCP1CAP         equ	16255	;# 
  5861   003F92                     T6TMR           equ	16274	;# 
  5862   003F92                     TMR6            equ	16274	;# 
  5863   003F93                     T6PR            equ	16275	;# 
  5864   003F93                     PR6             equ	16275	;# 
  5865   003F94                     T6CON           equ	16276	;# 
  5866   003F95                     T6HLT           equ	16277	;# 
  5867   003F96                     T6CLKCON        equ	16278	;# 
  5868   003F96                     T6CLK           equ	16278	;# 
  5869   003F97                     T6RST           equ	16279	;# 
  5870   003F98                     TMR5            equ	16280	;# 
  5871   003F98                     TMR5L           equ	16280	;# 
  5872   003F99                     TMR5H           equ	16281	;# 
  5873   003F9A                     T5CON           equ	16282	;# 
  5874   003F9A                     TMR5CON         equ	16282	;# 
  5875   003F9B                     T5GCON          equ	16283	;# 
  5876   003F9B                     TMR5GCON        equ	16283	;# 
  5877   003F9C                     T5GATE          equ	16284	;# 
  5878   003F9C                     TMR5GATE        equ	16284	;# 
  5879   003F9D                     T5CLK           equ	16285	;# 
  5880   003F9D                     TMR5CLK         equ	16285	;# 
  5881   003F9D                     PR5             equ	16285	;# 
  5882   003F9E                     T4TMR           equ	16286	;# 
  5883   003F9E                     TMR4            equ	16286	;# 
  5884   003F9F                     T4PR            equ	16287	;# 
  5885   003F9F                     PR4             equ	16287	;# 
  5886   003FA0                     T4CON           equ	16288	;# 
  5887   003FA1                     T4HLT           equ	16289	;# 
  5888   003FA2                     T4CLKCON        equ	16290	;# 
  5889   003FA2                     T4CLK           equ	16290	;# 
  5890   003FA3                     T4RST           equ	16291	;# 
  5891   003FA4                     TMR3            equ	16292	;# 
  5892   003FA4                     TMR3L           equ	16292	;# 
  5893   003FA5                     TMR3H           equ	16293	;# 
  5894   003FA6                     T3CON           equ	16294	;# 
  5895   003FA6                     TMR3CON         equ	16294	;# 
  5896   003FA7                     T3GCON          equ	16295	;# 
  5897   003FA7                     TMR3GCON        equ	16295	;# 
  5898   003FA8                     T3GATE          equ	16296	;# 
  5899   003FA8                     TMR3GATE        equ	16296	;# 
  5900   003FA9                     T3CLK           equ	16297	;# 
  5901   003FA9                     TMR3CLK         equ	16297	;# 
  5902   003FA9                     PR3             equ	16297	;# 
  5903   003FAA                     T2TMR           equ	16298	;# 
  5904   003FAA                     TMR2            equ	16298	;# 
  5905   003FAB                     T2PR            equ	16299	;# 
  5906   003FAB                     PR2             equ	16299	;# 
  5907   003FAC                     T2CON           equ	16300	;# 
  5908   003FAD                     T2HLT           equ	16301	;# 
  5909   003FAE                     T2CLKCON        equ	16302	;# 
  5910   003FAE                     T2CLK           equ	16302	;# 
  5911   003FAF                     T2RST           equ	16303	;# 
  5912   003FB0                     TMR1            equ	16304	;# 
  5913   003FB0                     TMR1L           equ	16304	;# 
  5914   003FB1                     TMR1H           equ	16305	;# 
  5915   003FB2                     T1CON           equ	16306	;# 
  5916   003FB2                     TMR1CON         equ	16306	;# 
  5917   003FB3                     T1GCON          equ	16307	;# 
  5918   003FB3                     TMR1GCON        equ	16307	;# 
  5919   003FB4                     T1GATE          equ	16308	;# 
  5920   003FB4                     TMR1GATE        equ	16308	;# 
  5921   003FB5                     T1CLK           equ	16309	;# 
  5922   003FB5                     TMR1CLK         equ	16309	;# 
  5923   003FB5                     PR1             equ	16309	;# 
  5924   003FB6                     TMR0L           equ	16310	;# 
  5925   003FB6                     TMR0            equ	16310	;# 
  5926   003FB7                     TMR0H           equ	16311	;# 
  5927   003FB7                     PR0             equ	16311	;# 
  5928   003FB8                     T0CON0          equ	16312	;# 
  5929   003FB9                     T0CON1          equ	16313	;# 
  5930   003FBA                     LATA            equ	16314	;# 
  5931   003FBB                     LATB            equ	16315	;# 
  5932   003FBC                     LATC            equ	16316	;# 
  5933   003FC2                     TRISA           equ	16322	;# 
  5934   003FC3                     TRISB           equ	16323	;# 
  5935   003FC4                     TRISC           equ	16324	;# 
  5936   003FCA                     PORTA           equ	16330	;# 
  5937   003FCB                     PORTB           equ	16331	;# 
  5938   003FCC                     PORTC           equ	16332	;# 
  5939   003FCE                     PORTE           equ	16334	;# 
  5940   003FD2                     INTCON0         equ	16338	;# 
  5941   003FD3                     INTCON1         equ	16339	;# 
  5942   003FD4                     IVTLOCK         equ	16340	;# 
  5943   003FD5                     IVTBASE         equ	16341	;# 
  5944   003FD5                     IVTBASEL        equ	16341	;# 
  5945   003FD6                     IVTBASEH        equ	16342	;# 
  5946   003FD7                     IVTBASEU        equ	16343	;# 
  5947   003FD8                     STATUS          equ	16344	;# 
  5948   003FD9                     FSR2            equ	16345	;# 
  5949   003FD9                     FSR2L           equ	16345	;# 
  5950   003FDA                     FSR2H           equ	16346	;# 
  5951   003FDB                     PLUSW2          equ	16347	;# 
  5952   003FDC                     PREINC2         equ	16348	;# 
  5953   003FDD                     POSTDEC2        equ	16349	;# 
  5954   003FDE                     POSTINC2        equ	16350	;# 
  5955   003FDF                     INDF2           equ	16351	;# 
  5956   003FE0                     BSR             equ	16352	;# 
  5957   003FE1                     FSR1            equ	16353	;# 
  5958   003FE1                     FSR1L           equ	16353	;# 
  5959   003FE2                     FSR1H           equ	16354	;# 
  5960   003FE3                     PLUSW1          equ	16355	;# 
  5961   003FE4                     PREINC1         equ	16356	;# 
  5962   003FE5                     POSTDEC1        equ	16357	;# 
  5963   003FE6                     POSTINC1        equ	16358	;# 
  5964   003FE7                     INDF1           equ	16359	;# 
  5965   003FE8                     WREG            equ	16360	;# 
  5966   003FE9                     FSR0            equ	16361	;# 
  5967   003FE9                     FSR0L           equ	16361	;# 
  5968   003FEA                     FSR0H           equ	16362	;# 
  5969   003FEB                     PLUSW0          equ	16363	;# 
  5970   003FEC                     PREINC0         equ	16364	;# 
  5971   003FED                     POSTDEC0        equ	16365	;# 
  5972   003FEE                     POSTINC0        equ	16366	;# 
  5973   003FEF                     INDF0           equ	16367	;# 
  5974   003FF0                     PCON0           equ	16368	;# 
  5975   003FF1                     PCON1           equ	16369	;# 
  5976   003FF3                     PROD            equ	16371	;# 
  5977   003FF3                     PRODL           equ	16371	;# 
  5978   003FF4                     PRODH           equ	16372	;# 
  5979   003FF5                     TABLAT          equ	16373	;# 
  5980   003FF6                     TBLPTR          equ	16374	;# 
  5981   003FF6                     TBLPTRL         equ	16374	;# 
  5982   003FF7                     TBLPTRH         equ	16375	;# 
  5983   003FF8                     TBLPTRU         equ	16376	;# 
  5984   003FF9                     PCLAT           equ	16377	;# 
  5985   003FF9                     PCL             equ	16377	;# 
  5986   003FFA                     PCLATH          equ	16378	;# 
  5987   003FFB                     PCLATU          equ	16379	;# 
  5988   003FFC                     STKPTR          equ	16380	;# 
  5989   003FFD                     TOS             equ	16381	;# 
  5990   003FFD                     TOSL            equ	16381	;# 
  5991   003FFE                     TOSH            equ	16382	;# 
  5992   003FFF                     TOSU            equ	16383	;# 
  5993                           
  5994 ;; Function _INT0_DefaultInterruptHandler is unused but had its address taken
  5995   000000                     _INT0_DefaultInterruptHandler equ	0
  5996                           
  5997 ;; Function _INT1_DefaultInterruptHandler is unused but had its address taken
  5998   000000                     _INT1_DefaultInterruptHandler equ	0
  5999                           
  6000 ;; Function _INT2_DefaultInterruptHandler is unused but had its address taken
  6001   000000                     _INT2_DefaultInterruptHandler equ	0
  6002                           
  6003 ;; Function _TMR1_DefaultGateCallback is unused but had its address taken
  6004   000000                     _TMR1_DefaultGateCallback equ	0
  6005                           
  6006                           	psect	mediumconst
  6007   00FEEC                     __pmediumconst:
  6008                           	callstack 0
  6009   00FEEC  00                 	db	0
  6010   00FEED                     _COLORS_TAB:
  6011                           	callstack 0
  6012   00FEED  00                 	db	0
  6013   00FEEE  64                 	db	100
  6014   00FEEF  00                 	db	0
  6015   00FEF0  64                 	db	100
  6016   00FEF1  00                 	db	0
  6017   00FEF2  00                 	db	0
  6018   00FEF3  00                 	db	0
  6019   00FEF4  00                 	db	0
  6020   00FEF5  64                 	db	100
  6021   00FEF6  32                 	db	50
  6022   00FEF7  64                 	db	100
  6023   00FEF8  00                 	db	0
  6024   00FEF9  64                 	db	100
  6025   00FEFA  64                 	db	100
  6026   00FEFB  00                 	db	0
  6027   00FEFC  00                 	db	0
  6028   00FEFD  32                 	db	50
  6029   00FEFE  64                 	db	100
  6030   00FEFF  00                 	db	0
  6031   00FF00  64                 	db	100
  6032   00FF01  32                 	db	50
  6033   00FF02  64                 	db	100
  6034   00FF03  64                 	db	100
  6035   00FF04  64                 	db	100
  6036   00FF05                     __end_of_COLORS_TAB:
  6037                           	callstack 0
  6038   00FF05                     LCD_SetCursor@F16382:
  6039                           	callstack 0
  6040   00FF05  00                 	db	0
  6041   00FF06  40                 	db	64
  6042   00FF07  10                 	db	16
  6043   00FF08  50                 	db	80
  6044   00FF09                     __end_ofLCD_SetCursor@F16382:
  6045                           	callstack 0
  6046   00FF09                     STR_2:
  6047                           
  6048                           ; BSR set to: 57
  6049   00FF09  31                 	db	49	;'1'
  6050   00FF0A  2E                 	db	46
  6051   00FF0B  49                 	db	73	;'I'
  6052   00FF0C  43                 	db	67	;'C'
  6053   00FF0D  4C                 	db	76	;'L'
  6054   00FF0E  45                 	db	69	;'E'
  6055   00FF0F  44                 	db	68	;'D'
  6056   00FF10  20                 	db	32
  6057   00FF11  32                 	db	50	;'2'
  6058   00FF12  2E                 	db	46
  6059   00FF13  4D                 	db	77	;'M'
  6060   00FF14  45                 	db	69	;'E'
  6061   00FF15  53                 	db	83	;'S'
  6062   00FF16  55                 	db	85	;'U'
  6063   00FF17  52                 	db	82	;'R'
  6064   00FF18  45                 	db	69	;'E'
  6065   00FF19  00                 	db	0
  6066   00FF1A                     STR_3:
  6067                           
  6068                           ; BSR set to: 57
  6069   00FF1A  33                 	db	51	;'3'
  6070   00FF1B  2E                 	db	46
  6071   00FF1C  49                 	db	73	;'I'
  6072   00FF1D  4E                 	db	78	;'N'
  6073   00FF1E  54                 	db	84	;'T'
  6074   00FF1F  45                 	db	69	;'E'
  6075   00FF20  4E                 	db	78	;'N'
  6076   00FF21  20                 	db	32
  6077   00FF22  34                 	db	52	;'4'
  6078   00FF23  2E                 	db	46
  6079   00FF24  41                 	db	65	;'A'
  6080   00FF25  4E                 	db	78	;'N'
  6081   00FF26  49                 	db	73	;'I'
  6082   00FF27  4D                 	db	77	;'M'
  6083   00FF28  41                 	db	65	;'A'
  6084   00FF29  00                 	db	0
  6085   00FF2A                     STR_10:
  6086                           
  6087                           ; BSR set to: 57
  6088   00FF2A  43                 	db	67	;'C'
  6089   00FF2B  6F                 	db	111	;'o'
  6090   00FF2C  75                 	db	117	;'u'
  6091   00FF2D  6C                 	db	108	;'l'
  6092   00FF2E  65                 	db	101	;'e'
  6093   00FF2F  75                 	db	117	;'u'
  6094   00FF30  72                 	db	114	;'r'
  6095   00FF31  3A                 	db	58	;':'
  6096   00FF32  20                 	db	32
  6097   00FF33  4F                 	db	79	;'O'
  6098   00FF34  52                 	db	82	;'R'
  6099   00FF35  41                 	db	65	;'A'
  6100   00FF36  4E                 	db	78	;'N'
  6101   00FF37  47                 	db	71	;'G'
  6102   00FF38  45                 	db	69	;'E'
  6103   00FF39  00                 	db	0
  6104   00FF3A                     STR_5:
  6105                           
  6106                           ; BSR set to: 57
  6107   00FF3A  31                 	db	49	;'1'
  6108   00FF3B  2E                 	db	46
  6109   00FF3C  52                 	db	82	;'R'
  6110   00FF3D  20                 	db	32
  6111   00FF3E  32                 	db	50	;'2'
  6112   00FF3F  2E                 	db	46
  6113   00FF40  47                 	db	71	;'G'
  6114   00FF41  20                 	db	32
  6115   00FF42  33                 	db	51	;'3'
  6116   00FF43  2E                 	db	46
  6117   00FF44  42                 	db	66	;'B'
  6118   00FF45  20                 	db	32
  6119   00FF46  34                 	db	52	;'4'
  6120   00FF47  2E                 	db	46
  6121   00FF48  4F                 	db	79	;'O'
  6122   00FF49  00                 	db	0
  6123   00FF4A                     STR_12:
  6124                           
  6125                           ; BSR set to: 57
  6126   00FF4A  43                 	db	67	;'C'
  6127   00FF4B  6F                 	db	111	;'o'
  6128   00FF4C  75                 	db	117	;'u'
  6129   00FF4D  6C                 	db	108	;'l'
  6130   00FF4E  65                 	db	101	;'e'
  6131   00FF4F  75                 	db	117	;'u'
  6132   00FF50  72                 	db	114	;'r'
  6133   00FF51  3A                 	db	58	;':'
  6134   00FF52  20                 	db	32
  6135   00FF53  56                 	db	86	;'V'
  6136   00FF54  49                 	db	73	;'I'
  6137   00FF55  4F                 	db	79	;'O'
  6138   00FF56  4C                 	db	76	;'L'
  6139   00FF57  45                 	db	69	;'E'
  6140   00FF58  54                 	db	84	;'T'
  6141   00FF59  00                 	db	0
  6142   00FF5A                     STR_14:
  6143                           
  6144                           ; BSR set to: 57
  6145   00FF5A  43                 	db	67	;'C'
  6146   00FF5B  6F                 	db	111	;'o'
  6147   00FF5C  75                 	db	117	;'u'
  6148   00FF5D  6C                 	db	108	;'l'
  6149   00FF5E  65                 	db	101	;'e'
  6150   00FF5F  75                 	db	117	;'u'
  6151   00FF60  72                 	db	114	;'r'
  6152   00FF61  3A                 	db	58	;':'
  6153   00FF62  20                 	db	32
  6154   00FF63  42                 	db	66	;'B'
  6155   00FF64  4C                 	db	76	;'L'
  6156   00FF65  41                 	db	65	;'A'
  6157   00FF66  4E                 	db	78	;'N'
  6158   00FF67  43                 	db	67	;'C'
  6159   00FF68  00                 	db	0
  6160   00FF69                     STR_7:
  6161                           
  6162                           ; BSR set to: 57
  6163   00FF69  43                 	db	67	;'C'
  6164   00FF6A  6F                 	db	111	;'o'
  6165   00FF6B  75                 	db	117	;'u'
  6166   00FF6C  6C                 	db	108	;'l'
  6167   00FF6D  65                 	db	101	;'e'
  6168   00FF6E  75                 	db	117	;'u'
  6169   00FF6F  72                 	db	114	;'r'
  6170   00FF70  3A                 	db	58	;':'
  6171   00FF71  20                 	db	32
  6172   00FF72  52                 	db	82	;'R'
  6173   00FF73  4F                 	db	79	;'O'
  6174   00FF74  55                 	db	85	;'U'
  6175   00FF75  47                 	db	71	;'G'
  6176   00FF76  45                 	db	69	;'E'
  6177   00FF77  00                 	db	0
  6178   00FF78                     STR_11:
  6179                           
  6180                           ; BSR set to: 57
  6181   00FF78  43                 	db	67	;'C'
  6182   00FF79  6F                 	db	111	;'o'
  6183   00FF7A  75                 	db	117	;'u'
  6184   00FF7B  6C                 	db	108	;'l'
  6185   00FF7C  65                 	db	101	;'e'
  6186   00FF7D  75                 	db	117	;'u'
  6187   00FF7E  72                 	db	114	;'r'
  6188   00FF7F  3A                 	db	58	;':'
  6189   00FF80  20                 	db	32
  6190   00FF81  4A                 	db	74	;'J'
  6191   00FF82  41                 	db	65	;'A'
  6192   00FF83  55                 	db	85	;'U'
  6193   00FF84  4E                 	db	78	;'N'
  6194   00FF85  45                 	db	69	;'E'
  6195   00FF86  00                 	db	0
  6196   00FF87                     STR_6:
  6197                           
  6198                           ; BSR set to: 57
  6199   00FF87  4D                 	db	77	;'M'
  6200   00FF88  65                 	db	101	;'e'
  6201   00FF89  73                 	db	115	;'s'
  6202   00FF8A  75                 	db	117	;'u'
  6203   00FF8B  72                 	db	114	;'r'
  6204   00FF8C  65                 	db	101	;'e'
  6205   00FF8D  20                 	db	32
  6206   00FF8E  63                 	db	99	;'c'
  6207   00FF8F  6F                 	db	111	;'o'
  6208   00FF90  75                 	db	117	;'u'
  6209   00FF91  72                 	db	114	;'r'
  6210   00FF92  61                 	db	97	;'a'
  6211   00FF93  6E                 	db	110	;'n'
  6212   00FF94  74                 	db	116	;'t'
  6213   00FF95  00                 	db	0
  6214   00FF96                     STR_18:
  6215                           
  6216                           ; BSR set to: 57
  6217   00FF96  43                 	db	67	;'C'
  6218   00FF97  6F                 	db	111	;'o'
  6219   00FF98  75                 	db	117	;'u'
  6220   00FF99  72                 	db	114	;'r'
  6221   00FF9A  65                 	db	101	;'e'
  6222   00FF9B  6E                 	db	110	;'n'
  6223   00FF9C  74                 	db	116	;'t'
  6224   00FF9D  20                 	db	32
  6225   00FF9E  6C                 	db	108	;'l'
  6226   00FF9F  65                 	db	101	;'e'
  6227   00FFA0  64                 	db	100	;'d'
  6228   00FFA1  73                 	db	115	;'s'
  6229   00FFA2  3A                 	db	58	;':'
  6230   00FFA3  00                 	db	0
  6231   00FFA4                     STR_13:
  6232                           
  6233                           ; BSR set to: 57
  6234   00FFA4  43                 	db	67	;'C'
  6235   00FFA5  6F                 	db	111	;'o'
  6236   00FFA6  75                 	db	117	;'u'
  6237   00FFA7  6C                 	db	108	;'l'
  6238   00FFA8  65                 	db	101	;'e'
  6239   00FFA9  75                 	db	117	;'u'
  6240   00FFAA  72                 	db	114	;'r'
  6241   00FFAB  3A                 	db	58	;':'
  6242   00FFAC  20                 	db	32
  6243   00FFAD  52                 	db	82	;'R'
  6244   00FFAE  4F                 	db	79	;'O'
  6245   00FFAF  53                 	db	83	;'S'
  6246   00FFB0  45                 	db	69	;'E'
  6247   00FFB1  00                 	db	0
  6248   00FFB2                     STR_8:
  6249                           
  6250                           ; BSR set to: 57
  6251   00FFB2  43                 	db	67	;'C'
  6252   00FFB3  6F                 	db	111	;'o'
  6253   00FFB4  75                 	db	117	;'u'
  6254   00FFB5  6C                 	db	108	;'l'
  6255   00FFB6  65                 	db	101	;'e'
  6256   00FFB7  75                 	db	117	;'u'
  6257   00FFB8  72                 	db	114	;'r'
  6258   00FFB9  3A                 	db	58	;':'
  6259   00FFBA  20                 	db	32
  6260   00FFBB  56                 	db	86	;'V'
  6261   00FFBC  45                 	db	69	;'E'
  6262   00FFBD  52                 	db	82	;'R'
  6263   00FFBE  54                 	db	84	;'T'
  6264   00FFBF  00                 	db	0
  6265   00FFC0                     STR_9:
  6266                           
  6267                           ; BSR set to: 57
  6268   00FFC0  43                 	db	67	;'C'
  6269   00FFC1  6F                 	db	111	;'o'
  6270   00FFC2  75                 	db	117	;'u'
  6271   00FFC3  6C                 	db	108	;'l'
  6272   00FFC4  65                 	db	101	;'e'
  6273   00FFC5  75                 	db	117	;'u'
  6274   00FFC6  72                 	db	114	;'r'
  6275   00FFC7  3A                 	db	58	;':'
  6276   00FFC8  20                 	db	32
  6277   00FFC9  42                 	db	66	;'B'
  6278   00FFCA  4C                 	db	76	;'L'
  6279   00FFCB  45                 	db	69	;'E'
  6280   00FFCC  55                 	db	85	;'U'
  6281   00FFCD  00                 	db	0
  6282   00FFCE                     STR_15:
  6283                           
  6284                           ; BSR set to: 57
  6285   00FFCE  45                 	db	69	;'E'
  6286   00FFCF  54                 	db	84	;'T'
  6287   00FFD0  45                 	db	69	;'E'
  6288   00FFD1  49                 	db	73	;'I'
  6289   00FFD2  4E                 	db	78	;'N'
  6290   00FFD3  44                 	db	68	;'D'
  6291   00FFD4  52                 	db	82	;'R'
  6292   00FFD5  45                 	db	69	;'E'
  6293   00FFD6  00                 	db	0
  6294   00FFD7                     STR_16:
  6295                           
  6296                           ; BSR set to: 57
  6297   00FFD7  56                 	db	86	;'V'
  6298   00FFD8  5F                 	db	95	;'_'
  6299   00FFD9  49                 	db	73	;'I'
  6300   00FFDA  6C                 	db	108	;'l'
  6301   00FFDB  65                 	db	101	;'e'
  6302   00FFDC  64                 	db	100	;'d'
  6303   00FFDD  3A                 	db	58	;':'
  6304   00FFDE  00                 	db	0
  6305   00FFDF                     STR_19:
  6306                           
  6307                           ; BSR set to: 57
  6308   00FFDF  25                 	db	37
  6309   00FFE0  2E                 	db	46
  6310   00FFE1  33                 	db	51	;'3'
  6311   00FFE2  65                 	db	101	;'e'
  6312   00FFE3  20                 	db	32
  6313   00FFE4  41                 	db	65	;'A'
  6314   00FFE5  00                 	db	0
  6315   00FFE6                     STR_17:
  6316                           
  6317                           ; BSR set to: 57
  6318   00FFE6  25                 	db	37
  6319   00FFE7  2E                 	db	46
  6320   00FFE8  32                 	db	50	;'2'
  6321   00FFE9  66                 	db	102	;'f'
  6322   00FFEA  20                 	db	32
  6323   00FFEB  56                 	db	86	;'V'
  6324   00FFEC  00                 	db	0
  6325   00FFED                     STR_4:
  6326                           
  6327                           ; BSR set to: 57
  6328   00FFED  4C                 	db	76	;'L'
  6329   00FFEE  45                 	db	69	;'E'
  6330   00FFEF  44                 	db	68	;'D'
  6331   00FFF0  3A                 	db	58	;':'
  6332   00FFF1  00                 	db	0
  6333   00FFF2                     STR_1:
  6334                           
  6335                           ; BSR set to: 57
  6336   00FFF2  4D                 	db	77	;'M'
  6337   00FFF3  65                 	db	101	;'e'
  6338   00FFF4  6E                 	db	110	;'n'
  6339   00FFF5  75                 	db	117	;'u'
  6340   00FFF6  00                 	db	0
  6341   00FFF7                     STR_20:
  6342                           
  6343                           ; BSR set to: 57
  6344   00FFF7  69                 	db	105	;'i'
  6345   00FFF8  6E                 	db	110	;'n'
  6346   00FFF9  66                 	db	102	;'f'
  6347   00FFFA  00                 	db	0
  6348   00FFFB                     STR_23:
  6349                           
  6350                           ; BSR set to: 57
  6351   00FFFB  6E                 	db	110	;'n'
  6352   00FFFC  61                 	db	97	;'a'
  6353   00FFFD  6E                 	db	110	;'n'
  6354   00FFFE  00                 	db	0
  6355   00FFFB                     STR_24          equ	STR_23
  6356   00FFFB                     STR_25          equ	STR_23
  6357   00FFF7                     STR_21          equ	STR_20
  6358   00FFF7                     STR_22          equ	STR_20
  6359   00FFFF  00                 	db	0	; dummy byte at the end
  6360   00FEEC                     __smallconst    set	__pmediumconst
  6361   00FEEC                     __mediumconst   set	__pmediumconst
  6362   000003                     __activetblptr  equ	3
  6363                           
  6364                           	psect	nvBANK0
  6365   0000ED                     __pnvBANK0:
  6366                           	callstack 0
  6367   0000ED                     _TMR1_OverflowCallback:
  6368                           	callstack 0
  6369   0000ED                     	ds	2
  6370   0000EF                     _INT2_InterruptHandler:
  6371                           	callstack 0
  6372   0000EF                     	ds	2
  6373   0000F1                     _INT1_InterruptHandler:
  6374                           	callstack 0
  6375   0000F1                     	ds	2
  6376   0000F3                     _INT0_InterruptHandler:
  6377                           	callstack 0
  6378   0000F3                     	ds	2
  6379   0000F5                     _BP3_InterruptHandler:
  6380                           	callstack 0
  6381   0000F5                     	ds	2
  6382   0000F7                     _BP2_InterruptHandler:
  6383                           	callstack 0
  6384   0000F7                     	ds	2
  6385   0000F9                     _BP1_InterruptHandler:
  6386                           	callstack 0
  6387   0000F9                     	ds	2
  6388                           
  6389                           	psect	nvBANK1
  6390   0001D6                     __pnvBANK1:
  6391                           	callstack 0
  6392   0001D6                     _TMR1_GateCallback:
  6393                           	callstack 0
  6394   0001D6                     	ds	2
  6395   0039A4                     _PIR4bits       set	14756
  6396   003994                     _PIE4bits       set	14740
  6397   0039A0                     _PIR0bits       set	14752
  6398   0039A7                     _PIR7bits       set	14759
  6399   0039A5                     _PIR5bits       set	14757
  6400   003990                     _PIE0bits       set	14736
  6401   0039DE                     _OSCTUNE        set	14814
  6402   0039DF                     _OSCFRQ         set	14815
  6403   0039DD                     _OSCEN          set	14813
  6404   0039DB                     _OSCCON3        set	14811
  6405   0039D9                     _OSCCON1        set	14809
  6406   003991                     _PIE1bits       set	14737
  6407   0039A1                     _PIR1bits       set	14753
  6408   003A47                     _IOCAFbits      set	14919
  6409   003A87                     _IOCEF          set	14983
  6410   003A86                     _IOCEN          set	14982
  6411   003A85                     _IOCEP          set	14981
  6412   003A67                     _IOCCF          set	14951
  6413   003A66                     _IOCCN          set	14950
  6414   003A65                     _IOCCP          set	14949
  6415   003A57                     _IOCBF          set	14935
  6416   003A56                     _IOCBN          set	14934
  6417   003A55                     _IOCBP          set	14933
  6418   003A47                     _IOCAF          set	14919
  6419   003A46                     _IOCAN          set	14918
  6420   003A45                     _IOCAP          set	14917
  6421   003A6B                     _RC4I2C         set	14955
  6422   003A6A                     _RC3I2C         set	14954
  6423   003A5B                     _RB2I2C         set	14939
  6424   003A5A                     _RB1I2C         set	14938
  6425   003A84                     _INLVLE         set	14980
  6426   003A64                     _INLVLC         set	14948
  6427   003A54                     _INLVLB         set	14932
  6428   003A44                     _INLVLA         set	14916
  6429   003A63                     _SLRCONC        set	14947
  6430   003A53                     _SLRCONB        set	14931
  6431   003A43                     _SLRCONA        set	14915
  6432   003A81                     _WPUE           set	14977
  6433   003A61                     _WPUC           set	14945
  6434   003A51                     _WPUB           set	14929
  6435   003A41                     _WPUA           set	14913
  6436   003A60                     _ANSELC         set	14944
  6437   003A50                     _ANSELB         set	14928
  6438   003A40                     _ANSELA         set	14912
  6439   003A62                     _ODCONC         set	14946
  6440   003A52                     _ODCONB         set	14930
  6441   003A42                     _ODCONA         set	14914
  6442   003ED7                     _ADCPbits       set	16087
  6443   003EF9                     _ADCON1bits     set	16121
  6444   003EE2                     _ADERRL         set	16098
  6445   003EE3                     _ADERRH         set	16099
  6446   003EED                     _ADPREVL        set	16109
  6447   003EEE                     _ADPREVH        set	16110
  6448   003EE6                     _ADFLTRL        set	16102
  6449   003EE7                     _ADFLTRH        set	16103
  6450   003EFC                     _ADSTATbits     set	16124
  6451   003EEB                     _ADCNT          set	16107
  6452   003EE8                     _ADACCL         set	16104
  6453   003EE9                     _ADACCH         set	16105
  6454   003EFB                     _ADCON3bits     set	16123
  6455   003EFA                     _ADCON2bits     set	16122
  6456   003EEF                     _ADRESL         set	16111
  6457   003EF0                     _ADRESH         set	16112
  6458   003EF8                     _ADCON0         set	16120
  6459   003EFE                     _ADACT          set	16126
  6460   003EFF                     _ADCLK          set	16127
  6461   003EFD                     _ADREF          set	16125
  6462   003EFC                     _ADSTAT         set	16124
  6463   003EFB                     _ADCON3         set	16123
  6464   003EFA                     _ADCON2         set	16122
  6465   003EF9                     _ADCON1         set	16121
  6466   003EF7                     _ADPREH         set	16119
  6467   003EF6                     _ADPREL         set	16118
  6468   003EF5                     _ADCAP          set	16117
  6469   003ED7                     _ADCP           set	16087
  6470   003EF4                     _ADACQH         set	16116
  6471   003EF3                     _ADACQL         set	16115
  6472   003EF1                     _ADPCH          set	16113
  6473   003EEC                     _ADRPT          set	16108
  6474   003EEA                     _ADACCU         set	16106
  6475   003EE5                     _ADSTPTH        set	16101
  6476   003EE4                     _ADSTPTL        set	16100
  6477   003EE1                     _ADUTHH         set	16097
  6478   003EE0                     _ADUTHL         set	16096
  6479   003EDF                     _ADLTHH         set	16095
  6480   003EDE                     _ADLTHL         set	16094
  6481   003EF8                     _ADCON0bits     set	16120
  6482   003FC2                     _TRISAbits      set	16322
  6483   003FC3                     _TRISBbits      set	16323
  6484   003FBA                     _LATAbits       set	16314
  6485   003FB3                     _T1GCONbits     set	16307
  6486   003FB2                     _T1CON          set	16306
  6487   003FB0                     _TMR1L          set	16304
  6488   003FB1                     _TMR1H          set	16305
  6489   003FB5                     _T1CLK          set	16309
  6490   003FB4                     _T1GATE         set	16308
  6491   003FB3                     _T1GCON         set	16307
  6492   003FB2                     _T1CONbits      set	16306
  6493   003FD2                     _INTCON0bits    set	16338
  6494   003FC4                     _TRISC          set	16324
  6495   003FC3                     _TRISB          set	16323
  6496   003FC2                     _TRISA          set	16322
  6497   003FBB                     _LATB           set	16315
  6498   003FBA                     _LATA           set	16314
  6499   003FBC                     _LATC           set	16316
  6500   003FBB                     _LATBbits       set	16315
  6501                           
  6502                           ; #config settings
  6503                           
  6504                           	psect	cinit
  6505   0061A4                     __pcinit:
  6506                           	callstack 0
  6507   0061A4                     start_initialization:
  6508                           	callstack 0
  6509   0061A4                     __initialization:
  6510                           	callstack 0
  6511                           
  6512                           ; Clear objects allocated to BIGRAM (432 bytes)
  6513   0061A4  EE00  F250         	lfsr	0,__pbssBIGRAM
  6514   0061A8  EE10 F1B0          	lfsr	1,432
  6515   0061AC                     clear_0:
  6516   0061AC  6AEE               	clrf	postinc0,c
  6517   0061AE  50E5               	movf	postdec1,w,c
  6518   0061B0  50E1               	movf	fsr1l,w,c
  6519   0061B2  E1FC               	bnz	clear_0
  6520   0061B4  50E2               	movf	fsr1h,w,c
  6521   0061B6  E1FA               	bnz	clear_0
  6522                           
  6523                           ; Clear objects allocated to BANK2 (80 bytes)
  6524   0061B8  EE00  F200         	lfsr	0,__pbssBANK2
  6525   0061BC  0E50               	movlw	80
  6526   0061BE                     clear_1:
  6527   0061BE  6AEE               	clrf	postinc0,c
  6528   0061C0  06E8               	decf	wreg,f,c
  6529   0061C2  E1FD               	bnz	clear_1
  6530                           
  6531                           ; Clear objects allocated to BANK0 (24 bytes)
  6532   0061C4  EE00  F0D5         	lfsr	0,__pbssBANK0
  6533   0061C8  0E18               	movlw	24
  6534   0061CA                     clear_2:
  6535   0061CA  6AEE               	clrf	postinc0,c
  6536   0061CC  06E8               	decf	wreg,f,c
  6537   0061CE  E1FD               	bnz	clear_2
  6538                           
  6539                           ; Clear objects allocated to COMRAM (1 bytes)
  6540   0061D0  6A5E               	clrf	__pbssCOMRAM& (0+255),c
  6541                           
  6542                           ;
  6543                           ; Setup IVTBASE
  6544                           ;
  6545   003FD5                     IVTBASEL        equ	16341
  6546   003FD6                     IVTBASEH        equ	16342
  6547   003FD7                     IVTBASEU        equ	16343
  6548   0061D2  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
  6549   0061D4  6ED5               	movwf	213,c
  6550   0061D6  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
  6551   0061D8  6ED6               	movwf	214,c
  6552   0061DA  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
  6553   0061DC  6ED7               	movwf	215,c
  6554   0061DE                     end_of_initialization:
  6555                           	callstack 0
  6556   0061DE                     __end_of__initialization:
  6557                           	callstack 0
  6558   0061DE  0100               	movlb	0
  6559   0061E0  EF9C  F02E         	goto	_main	;jump to C main() function
  6560                           
  6561                           	psect	bssCOMRAM
  6562   00005E                     __pbssCOMRAM:
  6563                           	callstack 0
  6564   00005E                     rainbow_scroll_vertical@offset:
  6565                           	callstack 0
  6566   00005E                     	ds	1
  6567                           
  6568                           	psect	bssBANK0
  6569   0000D5                     __pbssBANK0:
  6570                           	callstack 0
  6571   0000D5                     floorf@F521:
  6572                           	callstack 0
  6573   0000D5                     	ds	4
  6574   0000D9                     ___fpclassifyf@F465:
  6575                           	callstack 0
  6576   0000D9                     	ds	4
  6577   0000DD                     _width:
  6578                           	callstack 0
  6579   0000DD                     	ds	2
  6580   0000DF                     _prec:
  6581                           	callstack 0
  6582   0000DF                     	ds	2
  6583   0000E1                     TMR1_handler@timer_1s:
  6584                           	callstack 0
  6585   0000E1                     	ds	2
  6586   0000E3                     _timer1ReloadVal:
  6587                           	callstack 0
  6588   0000E3                     	ds	2
  6589   0000E5                     _ADC_ThresholdCallback:
  6590                           	callstack 0
  6591   0000E5                     	ds	2
  6592   0000E7                     _ADC_ConversionDoneCallback:
  6593                           	callstack 0
  6594   0000E7                     	ds	2
  6595   0000E9                     _flags:
  6596                           	callstack 0
  6597   0000E9                     	ds	1
  6598   0000EA                     _flag_start:
  6599                           	callstack 0
  6600   0000EA                     	ds	1
  6601   0000EB                     _etat_courant:
  6602                           	callstack 0
  6603   0000EB                     	ds	1
  6604   0000EC                     _adc_busy_status:
  6605                           	callstack 0
  6606   0000EC                     	ds	1
  6607                           
  6608                           	psect	bssBANK2
  6609   000200                     __pbssBANK2:
  6610                           	callstack 0
  6611   000200                     _dbuf:
  6612                           	callstack 0
  6613   000200                     	ds	80
  6614                           
  6615                           	psect	bssBIGRAM
  6616   000250                     __pbssBIGRAM:
  6617                           	callstack 0
  6618   000250                     _matrix_tab:
  6619                           	callstack 0
  6620   000250                     	ds	432
  6621                           
  6622                           	psect	cstackBANK1
  6623   000100                     __pcstackBANK1:
  6624                           	callstack 0
  6625   000100                     ??_INTERRUPT_InterruptManager:
  6626                           
  6627                           ; 1 bytes @ 0x0
  6628   000100                     	ds	6
  6629   000106                     ?___fpclassifyf:
  6630                           	callstack 0
  6631   000106                     ?_ADC_ConversionResultGet:
  6632                           	callstack 0
  6633   000106                     ?___awdiv:
  6634                           	callstack 0
  6635   000106                     ?___awmod:
  6636                           	callstack 0
  6637   000106                     ?_read_prec_or_width:
  6638                           	callstack 0
  6639   000106                     ?___fladd:
  6640                           	callstack 0
  6641   000106                     ?_labs:
  6642                           	callstack 0
  6643   000106                     ?___flneg:
  6644                           	callstack 0
  6645   000106                     ?___xxtofl:
  6646                           	callstack 0
  6647   000106                     ADC_ChannelSelect@channel:
  6648                           	callstack 0
  6649   000106                     BP1_SetInterruptHandler@InterruptHandler:
  6650                           	callstack 0
  6651   000106                     BP2_SetInterruptHandler@InterruptHandler:
  6652                           	callstack 0
  6653   000106                     BP3_SetInterruptHandler@InterruptHandler:
  6654                           	callstack 0
  6655   000106                     INT0_SetInterruptHandler@InterruptHandler:
  6656                           	callstack 0
  6657   000106                     INT1_SetInterruptHandler@InterruptHandler:
  6658                           	callstack 0
  6659   000106                     INT2_SetInterruptHandler@InterruptHandler:
  6660                           	callstack 0
  6661   000106                     TMR1_OverflowCallbackRegister@CallbackHandler:
  6662                           	callstack 0
  6663   000106                     ___awdiv@dividend:
  6664                           	callstack 0
  6665   000106                     ___awmod@dividend:
  6666                           	callstack 0
  6667   000106                     read_prec_or_width@fmt:
  6668                           	callstack 0
  6669   000106                     memcpy@d1:
  6670                           	callstack 0
  6671   000106                     fputc@c:
  6672                           	callstack 0
  6673   000106                     strcpy@dest:
  6674                           	callstack 0
  6675   000106                     ___fleq@ff1:
  6676                           	callstack 0
  6677   000106                     ___flneg@f1:
  6678                           	callstack 0
  6679   000106                     ___fladd@b:
  6680                           	callstack 0
  6681   000106                     ___xxtofl@val:
  6682                           	callstack 0
  6683   000106                     ___fpclassifyf@x:
  6684                           	callstack 0
  6685   000106                     labs@a:
  6686                           	callstack 0
  6687   000106                     ??_TMR1_Initialize:
  6688   000106                     ??_LCD_Command:
  6689   000106                     ??_LCD_Char:
  6690   000106                     
  6691                           ; 1 bytes @ 0x6
  6692   000106                     	ds	1
  6693   000107                     LCD_Command@cmd:
  6694                           	callstack 0
  6695   000107                     LCD_Char@data:
  6696                           	callstack 0
  6697                           
  6698                           ; 1 bytes @ 0x7
  6699   000107                     	ds	1
  6700   000108                     LCD_SetCursor@column:
  6701                           	callstack 0
  6702   000108                     LCD_String@str:
  6703                           	callstack 0
  6704   000108                     ___awdiv@divisor:
  6705                           	callstack 0
  6706   000108                     ___awmod@divisor:
  6707                           	callstack 0
  6708   000108                     read_prec_or_width@ap:
  6709                           	callstack 0
  6710   000108                     memcpy@s1:
  6711                           	callstack 0
  6712   000108                     fputc@fp:
  6713                           	callstack 0
  6714   000108                     strcpy@src:
  6715                           	callstack 0
  6716   000108                     ??_LCD_Clear:
  6717   000108                     ??_ADC_ConversionResultGet:
  6718   000108                     
  6719                           ; 1 bytes @ 0x8
  6720   000108                     	ds	1
  6721   000109                     LCD_SetCursor@row_offsets:
  6722                           	callstack 0
  6723   000109                     ??_LCD_Init:
  6724                           
  6725                           ; 1 bytes @ 0x9
  6726   000109                     	ds	1
  6727   00010A                     ___awdiv@counter:
  6728                           	callstack 0
  6729   00010A                     ___awmod@counter:
  6730                           	callstack 0
  6731   00010A                     memcpy@n:
  6732                           	callstack 0
  6733   00010A                     strcpy@d:
  6734                           	callstack 0
  6735   00010A                     ___fleq@ff2:
  6736                           	callstack 0
  6737   00010A                     ___fladd@a:
  6738                           	callstack 0
  6739   00010A                     ??_fputc:
  6740   00010A                     ??___fpclassifyf:
  6741   00010A                     ??_labs:
  6742   00010A                     ??___xxtofl:
  6743   00010A                     ??_read_prec_or_width:
  6744                           
  6745                           ; 1 bytes @ 0xA
  6746   00010A                     	ds	1
  6747   00010B                     ___awdiv@sign:
  6748                           	callstack 0
  6749   00010B                     ___awmod@sign:
  6750                           	callstack 0
  6751                           
  6752                           ; 1 bytes @ 0xB
  6753   00010B                     	ds	1
  6754   00010C                     read_prec_or_width@c:
  6755                           	callstack 0
  6756   00010C                     ___awdiv@quotient:
  6757                           	callstack 0
  6758   00010C                     memcpy@d:
  6759                           	callstack 0
  6760   00010C                     
  6761                           ; 1 bytes @ 0xC
  6762   00010C                     	ds	1
  6763   00010D                     LCD_SetCursor@row:
  6764                           	callstack 0
  6765   00010D                     read_prec_or_width@n:
  6766                           	callstack 0
  6767                           
  6768                           ; 2 bytes @ 0xD
  6769   00010D                     	ds	1
  6770   00010E                     ___xxtofl@sign:
  6771                           	callstack 0
  6772   00010E                     ___fpclassifyf@e:
  6773                           	callstack 0
  6774   00010E                     memcpy@s:
  6775                           	callstack 0
  6776   00010E                     ??___fladd:
  6777   00010E                     ??___fleq:
  6778                           
  6779                           ; 1 bytes @ 0xE
  6780   00010E                     	ds	1
  6781   00010F                     ___xxtofl@exp:
  6782                           	callstack 0
  6783   00010F                     fputs@s:
  6784                           	callstack 0
  6785                           
  6786                           ; 2 bytes @ 0xF
  6787   00010F                     	ds	1
  6788   000110                     memcpy@tmp:
  6789                           	callstack 0
  6790   000110                     ___xxtofl@arg:
  6791                           	callstack 0
  6792   000110                     ___fpclassifyf@u:
  6793                           	callstack 0
  6794                           
  6795                           ; 4 bytes @ 0x10
  6796   000110                     	ds	1
  6797   000111                     fputs@fp:
  6798                           	callstack 0
  6799                           
  6800                           ; 2 bytes @ 0x11
  6801   000111                     	ds	1
  6802   000112                     ___fladd@signs:
  6803                           	callstack 0
  6804                           
  6805                           ; 1 bytes @ 0x12
  6806   000112                     	ds	1
  6807   000113                     ___fladd@aexp:
  6808                           	callstack 0
  6809   000113                     fputs@c:
  6810                           	callstack 0
  6811   000113                     
  6812                           ; 1 bytes @ 0x13
  6813   000113                     	ds	1
  6814   000114                     ?___flmul:
  6815                           	callstack 0
  6816   000114                     ___fladd@bexp:
  6817                           	callstack 0
  6818   000114                     fputs@i:
  6819                           	callstack 0
  6820   000114                     ___flmul@b:
  6821                           	callstack 0
  6822                           
  6823                           ; 4 bytes @ 0x14
  6824   000114                     	ds	1
  6825   000115                     ___fladd@grs:
  6826                           	callstack 0
  6827                           
  6828                           ; 1 bytes @ 0x15
  6829   000115                     	ds	1
  6830   000116                     pad@fp:
  6831                           	callstack 0
  6832                           
  6833                           ; 2 bytes @ 0x16
  6834   000116                     	ds	2
  6835   000118                     pad@buf:
  6836                           	callstack 0
  6837   000118                     ___flmul@a:
  6838                           	callstack 0
  6839                           
  6840                           ; 4 bytes @ 0x18
  6841   000118                     	ds	2
  6842   00011A                     pad@p:
  6843                           	callstack 0
  6844                           
  6845                           ; 2 bytes @ 0x1A
  6846   00011A                     	ds	2
  6847   00011C                     ??___flmul:
  6848   00011C                     ??_pad:
  6849                           
  6850                           ; 1 bytes @ 0x1C
  6851   00011C                     	ds	1
  6852   00011D                     pad@i:
  6853                           	callstack 0
  6854                           
  6855                           ; 2 bytes @ 0x1D
  6856   00011D                     	ds	3
  6857   000120                     ___flmul@sign:
  6858                           	callstack 0
  6859                           
  6860                           ; 1 bytes @ 0x20
  6861   000120                     	ds	1
  6862   000121                     ___flmul@grs:
  6863                           	callstack 0
  6864                           
  6865                           ; 4 bytes @ 0x21
  6866   000121                     	ds	4
  6867   000125                     ___flmul@aexp:
  6868                           	callstack 0
  6869                           
  6870                           ; 1 bytes @ 0x25
  6871   000125                     	ds	1
  6872   000126                     ___flmul@bexp:
  6873                           	callstack 0
  6874                           
  6875                           ; 1 bytes @ 0x26
  6876   000126                     	ds	1
  6877   000127                     ___flmul@prod:
  6878                           	callstack 0
  6879                           
  6880                           ; 4 bytes @ 0x27
  6881   000127                     	ds	4
  6882   00012B                     ___flmul@temp:
  6883                           	callstack 0
  6884                           
  6885                           ; 2 bytes @ 0x2B
  6886   00012B                     	ds	2
  6887   00012D                     ?___fldiv:
  6888                           	callstack 0
  6889   00012D                     ?___flsub:
  6890                           	callstack 0
  6891   00012D                     ___flge@ff1:
  6892                           	callstack 0
  6893   00012D                     ___flsub@b:
  6894                           	callstack 0
  6895   00012D                     ___fldiv@b:
  6896                           	callstack 0
  6897                           
  6898                           ; 4 bytes @ 0x2D
  6899   00012D                     	ds	4
  6900   000131                     ___flge@ff2:
  6901                           	callstack 0
  6902   000131                     ___flsub@a:
  6903                           	callstack 0
  6904   000131                     ___fldiv@a:
  6905                           	callstack 0
  6906                           
  6907                           ; 4 bytes @ 0x31
  6908   000131                     	ds	4
  6909   000135                     ??___fldiv:
  6910   000135                     ??___flge:
  6911                           
  6912                           ; 1 bytes @ 0x35
  6913   000135                     	ds	4
  6914   000139                     ___fldiv@rem:
  6915                           	callstack 0
  6916                           
  6917                           ; 4 bytes @ 0x39
  6918   000139                     	ds	4
  6919   00013D                     ___fldiv@sign:
  6920                           	callstack 0
  6921                           
  6922                           ; 1 bytes @ 0x3D
  6923   00013D                     	ds	1
  6924   00013E                     ___fldiv@new_exp:
  6925                           	callstack 0
  6926                           
  6927                           ; 2 bytes @ 0x3E
  6928   00013E                     	ds	2
  6929   000140                     ___fldiv@grs:
  6930                           	callstack 0
  6931                           
  6932                           ; 4 bytes @ 0x40
  6933   000140                     	ds	4
  6934   000144                     ___fldiv@bexp:
  6935                           	callstack 0
  6936                           
  6937                           ; 1 bytes @ 0x44
  6938   000144                     	ds	1
  6939   000145                     ___fldiv@aexp:
  6940                           	callstack 0
  6941                           
  6942                           ; 1 bytes @ 0x45
  6943   000145                     	ds	1
  6944   000146                     ?_lire_tension:
  6945                           	callstack 0
  6946   000146                     ?_floorf:
  6947                           	callstack 0
  6948   000146                     floorf@x:
  6949                           	callstack 0
  6950                           
  6951                           ; 4 bytes @ 0x46
  6952   000146                     	ds	4
  6953   00014A                     lire_tension@tension:
  6954                           	callstack 0
  6955   00014A                     ??_floorf:
  6956                           
  6957                           ; 1 bytes @ 0x4A
  6958   00014A                     	ds	4
  6959   00014E                     lire_tension@adc_val:
  6960                           	callstack 0
  6961                           
  6962                           ; 2 bytes @ 0x4E
  6963   00014E                     	ds	2
  6964   000150                     ?___fltol:
  6965                           	callstack 0
  6966   000150                     ___fltol@f1:
  6967                           	callstack 0
  6968   000150                     floorf@m:
  6969                           	callstack 0
  6970                           
  6971                           ; 4 bytes @ 0x50
  6972   000150                     	ds	4
  6973   000154                     floorf@e:
  6974                           	callstack 0
  6975   000154                     ??___fltol:
  6976                           
  6977                           ; 1 bytes @ 0x54
  6978   000154                     	ds	2
  6979   000156                     floorf@u:
  6980                           	callstack 0
  6981                           
  6982                           ; 4 bytes @ 0x56
  6983   000156                     	ds	2
  6984   000158                     ___fltol@sign1:
  6985                           	callstack 0
  6986                           
  6987                           ; 1 bytes @ 0x58
  6988   000158                     	ds	1
  6989   000159                     ___fltol@exp1:
  6990                           	callstack 0
  6991                           
  6992                           ; 1 bytes @ 0x59
  6993   000159                     	ds	1
  6994   00015A                     efgtoa@fp:
  6995                           	callstack 0
  6996                           
  6997                           ; 2 bytes @ 0x5A
  6998   00015A                     	ds	2
  6999   00015C                     efgtoa@f:
  7000                           	callstack 0
  7001                           
  7002                           ; 4 bytes @ 0x5C
  7003   00015C                     	ds	4
  7004   000160                     efgtoa@c:
  7005                           	callstack 0
  7006                           
  7007                           ; 1 bytes @ 0x60
  7008   000160                     	ds	1
  7009   000161                     ??_efgtoa:
  7010                           
  7011                           ; 1 bytes @ 0x61
  7012   000161                     	ds	2
  7013   000163                     efgtoa@t:
  7014                           	callstack 0
  7015                           
  7016                           ; 2 bytes @ 0x63
  7017   000163                     	ds	2
  7018   000165                     _efgtoa$2326:
  7019                           	callstack 0
  7020                           
  7021                           ; 2 bytes @ 0x65
  7022   000165                     	ds	2
  7023   000167                     _efgtoa$2332:
  7024                           	callstack 0
  7025                           
  7026                           ; 2 bytes @ 0x67
  7027   000167                     	ds	2
  7028   000169                     efgtoa@ne:
  7029                           	callstack 0
  7030                           
  7031                           ; 2 bytes @ 0x69
  7032   000169                     	ds	2
  7033   00016B                     efgtoa@pp:
  7034                           	callstack 0
  7035                           
  7036                           ; 1 bytes @ 0x6B
  7037   00016B                     	ds	1
  7038   00016C                     efgtoa@esign:
  7039                           	callstack 0
  7040                           
  7041                           ; 1 bytes @ 0x6C
  7042   00016C                     	ds	1
  7043   00016D                     efgtoa@mode:
  7044                           	callstack 0
  7045                           
  7046                           ; 1 bytes @ 0x6D
  7047   00016D                     	ds	1
  7048   00016E                     efgtoa@d:
  7049                           	callstack 0
  7050                           
  7051                           ; 2 bytes @ 0x6E
  7052   00016E                     	ds	2
  7053   000170                     efgtoa@m:
  7054                           	callstack 0
  7055                           
  7056                           ; 2 bytes @ 0x70
  7057   000170                     	ds	2
  7058   000172                     efgtoa@p:
  7059                           	callstack 0
  7060                           
  7061                           ; 2 bytes @ 0x72
  7062   000172                     	ds	2
  7063   000174                     efgtoa@nmode:
  7064                           	callstack 0
  7065                           
  7066                           ; 1 bytes @ 0x74
  7067   000174                     	ds	1
  7068   000175                     efgtoa@w:
  7069                           	callstack 0
  7070                           
  7071                           ; 2 bytes @ 0x75
  7072   000175                     	ds	2
  7073   000177                     efgtoa@ou:
  7074                           	callstack 0
  7075                           
  7076                           ; 4 bytes @ 0x77
  7077   000177                     	ds	4
  7078   00017B                     efgtoa@h:
  7079                           	callstack 0
  7080                           
  7081                           ; 4 bytes @ 0x7B
  7082   00017B                     	ds	4
  7083   00017F                     efgtoa@l:
  7084                           	callstack 0
  7085                           
  7086                           ; 4 bytes @ 0x7F
  7087   00017F                     	ds	4
  7088   000183                     efgtoa@e:
  7089                           	callstack 0
  7090                           
  7091                           ; 2 bytes @ 0x83
  7092   000183                     	ds	2
  7093   000185                     efgtoa@sign:
  7094                           	callstack 0
  7095                           
  7096                           ; 1 bytes @ 0x85
  7097   000185                     	ds	1
  7098   000186                     efgtoa@i:
  7099                           	callstack 0
  7100                           
  7101                           ; 2 bytes @ 0x86
  7102   000186                     	ds	2
  7103   000188                     efgtoa@n:
  7104                           	callstack 0
  7105                           
  7106                           ; 2 bytes @ 0x88
  7107   000188                     	ds	2
  7108   00018A                     efgtoa@g:
  7109                           	callstack 0
  7110                           
  7111                           ; 4 bytes @ 0x8A
  7112   00018A                     	ds	4
  7113   00018E                     efgtoa@u:
  7114                           	callstack 0
  7115                           
  7116                           ; 4 bytes @ 0x8E
  7117   00018E                     	ds	4
  7118   000192                     vfpfcnvrt@fp:
  7119                           	callstack 0
  7120                           
  7121                           ; 2 bytes @ 0x92
  7122   000192                     	ds	2
  7123   000194                     vfpfcnvrt@fmt:
  7124                           	callstack 0
  7125                           
  7126                           ; 2 bytes @ 0x94
  7127   000194                     	ds	2
  7128   000196                     vfpfcnvrt@ap:
  7129                           	callstack 0
  7130                           
  7131                           ; 2 bytes @ 0x96
  7132   000196                     	ds	2
  7133   000198                     ??_vfpfcnvrt:
  7134                           
  7135                           ; 1 bytes @ 0x98
  7136   000198                     	ds	2
  7137   00019A                     vfpfcnvrt@convarg:
  7138                           	callstack 0
  7139                           
  7140                           ; 4 bytes @ 0x9A
  7141   00019A                     	ds	4
  7142   00019E                     vfpfcnvrt@c:
  7143                           	callstack 0
  7144                           
  7145                           ; 1 bytes @ 0x9E
  7146   00019E                     	ds	1
  7147   00019F                     vfpfcnvrt@cp:
  7148                           	callstack 0
  7149                           
  7150                           ; 2 bytes @ 0x9F
  7151   00019F                     	ds	2
  7152   0001A1                     ?_vfprintf:
  7153                           	callstack 0
  7154   0001A1                     vfprintf@fp:
  7155                           	callstack 0
  7156                           
  7157                           ; 2 bytes @ 0xA1
  7158   0001A1                     	ds	2
  7159   0001A3                     vfprintf@fmt:
  7160                           	callstack 0
  7161                           
  7162                           ; 2 bytes @ 0xA3
  7163   0001A3                     	ds	2
  7164   0001A5                     vfprintf@ap:
  7165                           	callstack 0
  7166                           
  7167                           ; 2 bytes @ 0xA5
  7168   0001A5                     	ds	2
  7169   0001A7                     vfprintf@cfmt:
  7170                           	callstack 0
  7171   0001A7                     
  7172                           ; 1 bytes @ 0xA7
  7173   0001A7                     	ds	2
  7174   0001A9                     ?_sprintf:
  7175                           	callstack 0
  7176   0001A9                     sprintf@s:
  7177                           	callstack 0
  7178                           
  7179                           ; 2 bytes @ 0xA9
  7180   0001A9                     	ds	2
  7181   0001AB                     sprintf@fmt:
  7182                           	callstack 0
  7183                           
  7184                           ; 2 bytes @ 0xAB
  7185   0001AB                     	ds	6
  7186   0001B1                     sprintf@ap:
  7187                           	callstack 0
  7188   0001B1                     
  7189                           ; 1 bytes @ 0xB1
  7190   0001B1                     	ds	2
  7191   0001B3                     sprintf@f:
  7192                           	callstack 0
  7193                           
  7194                           ; 11 bytes @ 0xB3
  7195   0001B3                     	ds	11
  7196   0001BE                     ??_LCD_UpdateMenu:
  7197                           
  7198                           ; 1 bytes @ 0xBE
  7199   0001BE                     	ds	2
  7200   0001C0                     LCD_UpdateMenu@buffer:
  7201                           	callstack 0
  7202                           
  7203                           ; 16 bytes @ 0xC0
  7204   0001C0                     	ds	16
  7205   0001D0                     LCD_UpdateMenu@tension:
  7206                           	callstack 0
  7207                           
  7208                           ; 4 bytes @ 0xD0
  7209   0001D0                     	ds	4
  7210   0001D4                     LCD_UpdateMenu@courant:
  7211                           	callstack 0
  7212                           
  7213                           ; 2 bytes @ 0xD4
  7214   0001D4                     	ds	2
  7215   0001D6                     
  7216                           ; 1 bytes @ 0xD6
  7217                           
  7218                           	psect	cstackBANK0
  7219   000060                     __pcstackBANK0:
  7220                           	callstack 0
  7221   000060                     i2efgtoa@t:
  7222                           	callstack 0
  7223                           
  7224                           ; 2 bytes @ 0x0
  7225   000060                     	ds	2
  7226   000062                     i2_efgtoa$2326:
  7227                           	callstack 0
  7228                           
  7229                           ; 2 bytes @ 0x2
  7230   000062                     	ds	2
  7231   000064                     i2_efgtoa$2332:
  7232                           	callstack 0
  7233                           
  7234                           ; 2 bytes @ 0x4
  7235   000064                     	ds	2
  7236   000066                     i2efgtoa@ne:
  7237                           	callstack 0
  7238                           
  7239                           ; 2 bytes @ 0x6
  7240   000066                     	ds	2
  7241   000068                     i2efgtoa@pp:
  7242                           	callstack 0
  7243                           
  7244                           ; 1 bytes @ 0x8
  7245   000068                     	ds	1
  7246   000069                     i2efgtoa@esign:
  7247                           	callstack 0
  7248                           
  7249                           ; 1 bytes @ 0x9
  7250   000069                     	ds	1
  7251   00006A                     i2efgtoa@mode:
  7252                           	callstack 0
  7253                           
  7254                           ; 1 bytes @ 0xA
  7255   00006A                     	ds	1
  7256   00006B                     i2efgtoa@d:
  7257                           	callstack 0
  7258                           
  7259                           ; 2 bytes @ 0xB
  7260   00006B                     	ds	2
  7261   00006D                     i2efgtoa@m:
  7262                           	callstack 0
  7263                           
  7264                           ; 2 bytes @ 0xD
  7265   00006D                     	ds	2
  7266   00006F                     i2efgtoa@p:
  7267                           	callstack 0
  7268                           
  7269                           ; 2 bytes @ 0xF
  7270   00006F                     	ds	2
  7271   000071                     i2efgtoa@nmode:
  7272                           	callstack 0
  7273                           
  7274                           ; 1 bytes @ 0x11
  7275   000071                     	ds	1
  7276   000072                     i2efgtoa@w:
  7277                           	callstack 0
  7278                           
  7279                           ; 2 bytes @ 0x12
  7280   000072                     	ds	2
  7281   000074                     i2efgtoa@ou:
  7282                           	callstack 0
  7283                           
  7284                           ; 4 bytes @ 0x14
  7285   000074                     	ds	4
  7286   000078                     i2efgtoa@h:
  7287                           	callstack 0
  7288                           
  7289                           ; 4 bytes @ 0x18
  7290   000078                     	ds	4
  7291   00007C                     i2efgtoa@l:
  7292                           	callstack 0
  7293                           
  7294                           ; 4 bytes @ 0x1C
  7295   00007C                     	ds	4
  7296   000080                     i2efgtoa@e:
  7297                           	callstack 0
  7298                           
  7299                           ; 2 bytes @ 0x20
  7300   000080                     	ds	2
  7301   000082                     i2efgtoa@sign:
  7302                           	callstack 0
  7303                           
  7304                           ; 1 bytes @ 0x22
  7305   000082                     	ds	1
  7306   000083                     i2efgtoa@i:
  7307                           	callstack 0
  7308                           
  7309                           ; 2 bytes @ 0x23
  7310   000083                     	ds	2
  7311   000085                     i2efgtoa@n:
  7312                           	callstack 0
  7313                           
  7314                           ; 2 bytes @ 0x25
  7315   000085                     	ds	2
  7316   000087                     i2efgtoa@g:
  7317                           	callstack 0
  7318                           
  7319                           ; 4 bytes @ 0x27
  7320   000087                     	ds	4
  7321   00008B                     i2efgtoa@u:
  7322                           	callstack 0
  7323                           
  7324                           ; 4 bytes @ 0x2B
  7325   00008B                     	ds	4
  7326   00008F                     i2vfpfcnvrt@fp:
  7327                           	callstack 0
  7328                           
  7329                           ; 2 bytes @ 0x2F
  7330   00008F                     	ds	2
  7331   000091                     i2vfpfcnvrt@fmt:
  7332                           	callstack 0
  7333                           
  7334                           ; 2 bytes @ 0x31
  7335   000091                     	ds	2
  7336   000093                     i2vfpfcnvrt@ap:
  7337                           	callstack 0
  7338                           
  7339                           ; 2 bytes @ 0x33
  7340   000093                     	ds	2
  7341   000095                     ??i2_vfpfcnvrt:
  7342                           
  7343                           ; 1 bytes @ 0x35
  7344   000095                     	ds	2
  7345   000097                     i2vfpfcnvrt@convarg:
  7346                           	callstack 0
  7347                           
  7348                           ; 4 bytes @ 0x37
  7349   000097                     	ds	4
  7350   00009B                     i2vfpfcnvrt@c:
  7351                           	callstack 0
  7352                           
  7353                           ; 1 bytes @ 0x3B
  7354   00009B                     	ds	1
  7355   00009C                     i2vfpfcnvrt@cp:
  7356                           	callstack 0
  7357                           
  7358                           ; 2 bytes @ 0x3C
  7359   00009C                     	ds	2
  7360   00009E                     ?i2_vfprintf:
  7361                           	callstack 0
  7362   00009E                     i2vfprintf@fp:
  7363                           	callstack 0
  7364                           
  7365                           ; 2 bytes @ 0x3E
  7366   00009E                     	ds	2
  7367   0000A0                     i2vfprintf@fmt:
  7368                           	callstack 0
  7369                           
  7370                           ; 2 bytes @ 0x40
  7371   0000A0                     	ds	2
  7372   0000A2                     i2vfprintf@ap:
  7373                           	callstack 0
  7374                           
  7375                           ; 2 bytes @ 0x42
  7376   0000A2                     	ds	2
  7377   0000A4                     i2vfprintf@cfmt:
  7378                           	callstack 0
  7379                           
  7380                           ; 2 bytes @ 0x44
  7381   0000A4                     	ds	2
  7382   0000A6                     ?i2_sprintf:
  7383                           	callstack 0
  7384   0000A6                     i2sprintf@s:
  7385                           	callstack 0
  7386                           
  7387                           ; 2 bytes @ 0x46
  7388   0000A6                     	ds	2
  7389   0000A8                     i2sprintf@fmt:
  7390                           	callstack 0
  7391                           
  7392                           ; 2 bytes @ 0x48
  7393   0000A8                     	ds	6
  7394   0000AE                     i2sprintf@ap:
  7395                           	callstack 0
  7396                           
  7397                           ; 2 bytes @ 0x4E
  7398   0000AE                     	ds	2
  7399   0000B0                     i2sprintf@f:
  7400                           	callstack 0
  7401                           
  7402                           ; 11 bytes @ 0x50
  7403   0000B0                     	ds	11
  7404   0000BB                     ??i2_LCD_UpdateMenu:
  7405                           
  7406                           ; 1 bytes @ 0x5B
  7407   0000BB                     	ds	2
  7408   0000BD                     i2LCD_UpdateMenu@buffer:
  7409                           	callstack 0
  7410                           
  7411                           ; 16 bytes @ 0x5D
  7412   0000BD                     	ds	16
  7413   0000CD                     i2LCD_UpdateMenu@tension:
  7414                           	callstack 0
  7415                           
  7416                           ; 4 bytes @ 0x6D
  7417   0000CD                     	ds	4
  7418   0000D1                     i2LCD_UpdateMenu@courant:
  7419                           	callstack 0
  7420                           
  7421                           ; 2 bytes @ 0x71
  7422   0000D1                     	ds	2
  7423   0000D3                     ??_int_BP1:
  7424   0000D3                     ??_int_BP2:
  7425   0000D3                     ??_int_BP3:
  7426                           
  7427                           ; 1 bytes @ 0x73
  7428   0000D3                     	ds	2
  7429                           
  7430                           	psect	cstackCOMRAM
  7431   000001                     __pcstackCOMRAM:
  7432                           	callstack 0
  7433   000001                     ?i2_ADC_ConversionResultGet:
  7434                           	callstack 0
  7435   000001                     ?i2___awdiv:
  7436                           	callstack 0
  7437   000001                     ?i2___awmod:
  7438                           	callstack 0
  7439   000001                     ?i2_read_prec_or_width:
  7440                           	callstack 0
  7441   000001                     ?i2___fpclassifyf:
  7442                           	callstack 0
  7443   000001                     ?i2___flneg:
  7444                           	callstack 0
  7445   000001                     ?i2___fladd:
  7446                           	callstack 0
  7447   000001                     ?i2___xxtofl:
  7448                           	callstack 0
  7449   000001                     ?i2_labs:
  7450                           	callstack 0
  7451   000001                     send_bit@bit:
  7452                           	callstack 0
  7453   000001                     i2ADC_ChannelSelect@channel:
  7454                           	callstack 0
  7455   000001                     TMR1_CounterSet@timerVal:
  7456                           	callstack 0
  7457   000001                     i2___awdiv@dividend:
  7458                           	callstack 0
  7459   000001                     i2___awmod@dividend:
  7460                           	callstack 0
  7461   000001                     i2read_prec_or_width@fmt:
  7462                           	callstack 0
  7463   000001                     i2memcpy@d1:
  7464                           	callstack 0
  7465   000001                     i2fputc@c:
  7466                           	callstack 0
  7467   000001                     i2strcpy@dest:
  7468                           	callstack 0
  7469   000001                     i2___fleq@ff1:
  7470                           	callstack 0
  7471   000001                     i2___flneg@f1:
  7472                           	callstack 0
  7473   000001                     i2___fladd@b:
  7474                           	callstack 0
  7475   000001                     i2___xxtofl@val:
  7476                           	callstack 0
  7477   000001                     i2___fpclassifyf@x:
  7478                           	callstack 0
  7479   000001                     i2labs@a:
  7480                           	callstack 0
  7481   000001                     ??_TMR1_handler:
  7482   000001                     ??i2_LCD_Command:
  7483   000001                     ??i2_LCD_Char:
  7484   000001                     
  7485                           ; 1 bytes @ 0x0
  7486   000001                     	ds	1
  7487   000002                     send_byte@byte:
  7488                           	callstack 0
  7489   000002                     i2LCD_Command@cmd:
  7490                           	callstack 0
  7491   000002                     i2LCD_Char@data:
  7492                           	callstack 0
  7493   000002                     
  7494                           ; 1 bytes @ 0x1
  7495   000002                     	ds	1
  7496   000003                     TMR1_CounterSet@onState:
  7497                           	callstack 0
  7498   000003                     send_byte@i:
  7499                           	callstack 0
  7500   000003                     i2LCD_SetCursor@column:
  7501                           	callstack 0
  7502   000003                     i2LCD_String@str:
  7503                           	callstack 0
  7504   000003                     i2___awdiv@divisor:
  7505                           	callstack 0
  7506   000003                     i2___awmod@divisor:
  7507                           	callstack 0
  7508   000003                     i2read_prec_or_width@ap:
  7509                           	callstack 0
  7510   000003                     i2memcpy@s1:
  7511                           	callstack 0
  7512   000003                     i2fputc@fp:
  7513                           	callstack 0
  7514   000003                     i2strcpy@src:
  7515                           	callstack 0
  7516   000003                     ??i2_LCD_Clear:
  7517   000003                     ??i2_ADC_ConversionResultGet:
  7518                           
  7519                           ; 1 bytes @ 0x2
  7520   000003                     	ds	1
  7521   000004                     send_color@g:
  7522                           	callstack 0
  7523   000004                     i2LCD_SetCursor@row_offsets:
  7524                           	callstack 0
  7525   000004                     ??i2_LCD_Init:
  7526                           
  7527                           ; 1 bytes @ 0x3
  7528   000004                     	ds	1
  7529   000005                     send_color@b:
  7530                           	callstack 0
  7531   000005                     i2___awdiv@counter:
  7532                           	callstack 0
  7533   000005                     i2___awmod@counter:
  7534                           	callstack 0
  7535   000005                     i2memcpy@n:
  7536                           	callstack 0
  7537   000005                     i2strcpy@d:
  7538                           	callstack 0
  7539   000005                     i2___fleq@ff2:
  7540                           	callstack 0
  7541   000005                     i2___fladd@a:
  7542                           	callstack 0
  7543   000005                     ??i2___xxtofl:
  7544   000005                     ??i2_read_prec_or_width:
  7545   000005                     ??i2___fpclassifyf:
  7546   000005                     ??i2_labs:
  7547   000005                     ??i2_fputc:
  7548   000005                     
  7549                           ; 1 bytes @ 0x4
  7550   000005                     	ds	1
  7551   000006                     send_color@r:
  7552                           	callstack 0
  7553   000006                     i2___awdiv@sign:
  7554                           	callstack 0
  7555   000006                     i2___awmod@sign:
  7556                           	callstack 0
  7557   000006                     
  7558                           ; 1 bytes @ 0x5
  7559   000006                     	ds	1
  7560   000007                     i2read_prec_or_width@c:
  7561                           	callstack 0
  7562   000007                     i2___awdiv@quotient:
  7563                           	callstack 0
  7564   000007                     i2memcpy@d:
  7565                           	callstack 0
  7566   000007                     ??_send_leds:
  7567   000007                     
  7568                           ; 1 bytes @ 0x6
  7569   000007                     	ds	1
  7570   000008                     i2LCD_SetCursor@row:
  7571                           	callstack 0
  7572   000008                     i2read_prec_or_width@n:
  7573                           	callstack 0
  7574                           
  7575                           ; 2 bytes @ 0x7
  7576   000008                     	ds	1
  7577   000009                     i2___xxtofl@sign:
  7578                           	callstack 0
  7579   000009                     i2___fpclassifyf@e:
  7580                           	callstack 0
  7581   000009                     i2memcpy@s:
  7582                           	callstack 0
  7583   000009                     ??i2___fleq:
  7584   000009                     ??i2___fladd:
  7585                           
  7586                           ; 1 bytes @ 0x8
  7587   000009                     	ds	1
  7588   00000A                     i2___xxtofl@exp:
  7589                           	callstack 0
  7590   00000A                     i2fputs@s:
  7591                           	callstack 0
  7592                           
  7593                           ; 2 bytes @ 0x9
  7594   00000A                     	ds	1
  7595   00000B                     i2memcpy@tmp:
  7596                           	callstack 0
  7597   00000B                     i2___xxtofl@arg:
  7598                           	callstack 0
  7599   00000B                     i2___fpclassifyf@u:
  7600                           	callstack 0
  7601                           
  7602                           ; 4 bytes @ 0xA
  7603   00000B                     	ds	1
  7604   00000C                     i2fputs@fp:
  7605                           	callstack 0
  7606                           
  7607                           ; 2 bytes @ 0xB
  7608   00000C                     	ds	1
  7609   00000D                     i2___fladd@signs:
  7610                           	callstack 0
  7611                           
  7612                           ; 1 bytes @ 0xC
  7613   00000D                     	ds	1
  7614   00000E                     i2___fladd@aexp:
  7615                           	callstack 0
  7616   00000E                     i2fputs@c:
  7617                           	callstack 0
  7618   00000E                     
  7619                           ; 1 bytes @ 0xD
  7620   00000E                     	ds	1
  7621   00000F                     ?i2___flmul:
  7622                           	callstack 0
  7623   00000F                     i2___fladd@bexp:
  7624                           	callstack 0
  7625   00000F                     i2fputs@i:
  7626                           	callstack 0
  7627   00000F                     i2___flmul@b:
  7628                           	callstack 0
  7629                           
  7630                           ; 4 bytes @ 0xE
  7631   00000F                     	ds	1
  7632   000010                     i2___fladd@grs:
  7633                           	callstack 0
  7634                           
  7635                           ; 1 bytes @ 0xF
  7636   000010                     	ds	1
  7637   000011                     i2pad@fp:
  7638                           	callstack 0
  7639                           
  7640                           ; 2 bytes @ 0x10
  7641   000011                     	ds	2
  7642   000013                     send_leds@i:
  7643                           	callstack 0
  7644   000013                     i2pad@buf:
  7645                           	callstack 0
  7646   000013                     i2___flmul@a:
  7647                           	callstack 0
  7648                           
  7649                           ; 4 bytes @ 0x12
  7650   000013                     	ds	1
  7651   000014                     send_leds@j:
  7652                           	callstack 0
  7653                           
  7654                           ; 1 bytes @ 0x13
  7655   000014                     	ds	1
  7656   000015                     on_leds@g:
  7657                           	callstack 0
  7658   000015                     i2pad@p:
  7659                           	callstack 0
  7660   000015                     ??_off_leds:
  7661                           
  7662                           ; 1 bytes @ 0x14
  7663   000015                     	ds	1
  7664   000016                     on_leds@b:
  7665                           	callstack 0
  7666                           
  7667                           ; 1 bytes @ 0x15
  7668   000016                     	ds	1
  7669   000017                     ??_on_leds:
  7670   000017                     ??i2___flmul:
  7671   000017                     ??i2_pad:
  7672                           
  7673                           ; 1 bytes @ 0x16
  7674   000017                     	ds	1
  7675   000018                     i2pad@i:
  7676                           	callstack 0
  7677                           
  7678                           ; 2 bytes @ 0x17
  7679   000018                     	ds	1
  7680   000019                     off_leds@i:
  7681                           	callstack 0
  7682                           
  7683                           ; 1 bytes @ 0x18
  7684   000019                     	ds	1
  7685   00001A                     off_leds@j:
  7686                           	callstack 0
  7687                           
  7688                           ; 1 bytes @ 0x19
  7689   00001A                     	ds	1
  7690   00001B                     on_leds@r:
  7691                           	callstack 0
  7692   00001B                     i2___flmul@sign:
  7693                           	callstack 0
  7694                           
  7695                           ; 1 bytes @ 0x1A
  7696   00001B                     	ds	1
  7697   00001C                     on_leds@i:
  7698                           	callstack 0
  7699   00001C                     i2___flmul@grs:
  7700                           	callstack 0
  7701                           
  7702                           ; 4 bytes @ 0x1B
  7703   00001C                     	ds	1
  7704   00001D                     on_leds@j:
  7705                           	callstack 0
  7706                           
  7707                           ; 1 bytes @ 0x1C
  7708   00001D                     	ds	1
  7709   00001E                     ??_appliquer_action:
  7710                           
  7711                           ; 1 bytes @ 0x1D
  7712   00001E                     	ds	2
  7713   000020                     i2___flmul@aexp:
  7714                           	callstack 0
  7715                           
  7716                           ; 1 bytes @ 0x1F
  7717   000020                     	ds	1
  7718   000021                     i2___flmul@bexp:
  7719                           	callstack 0
  7720                           
  7721                           ; 1 bytes @ 0x20
  7722   000021                     	ds	1
  7723   000022                     appliquer_action@color:
  7724                           	callstack 0
  7725   000022                     i2___flmul@prod:
  7726                           	callstack 0
  7727                           
  7728                           ; 4 bytes @ 0x21
  7729   000022                     	ds	4
  7730   000026                     i2___flmul@temp:
  7731                           	callstack 0
  7732                           
  7733                           ; 2 bytes @ 0x25
  7734   000026                     	ds	2
  7735   000028                     ?i2___flsub:
  7736                           	callstack 0
  7737   000028                     ?i2___fldiv:
  7738                           	callstack 0
  7739   000028                     i2___flge@ff1:
  7740                           	callstack 0
  7741   000028                     i2___flsub@b:
  7742                           	callstack 0
  7743   000028                     i2___fldiv@b:
  7744                           	callstack 0
  7745                           
  7746                           ; 4 bytes @ 0x27
  7747   000028                     	ds	4
  7748   00002C                     i2___flge@ff2:
  7749                           	callstack 0
  7750   00002C                     i2___flsub@a:
  7751                           	callstack 0
  7752   00002C                     i2___fldiv@a:
  7753                           	callstack 0
  7754                           
  7755                           ; 4 bytes @ 0x2B
  7756   00002C                     	ds	4
  7757   000030                     ??i2___flge:
  7758   000030                     ??i2___fldiv:
  7759                           
  7760                           ; 1 bytes @ 0x2F
  7761   000030                     	ds	4
  7762   000034                     i2___fldiv@rem:
  7763                           	callstack 0
  7764                           
  7765                           ; 4 bytes @ 0x33
  7766   000034                     	ds	4
  7767   000038                     i2___fldiv@sign:
  7768                           	callstack 0
  7769                           
  7770                           ; 1 bytes @ 0x37
  7771   000038                     	ds	1
  7772   000039                     i2___fldiv@new_exp:
  7773                           	callstack 0
  7774                           
  7775                           ; 2 bytes @ 0x38
  7776   000039                     	ds	2
  7777   00003B                     i2___fldiv@grs:
  7778                           	callstack 0
  7779                           
  7780                           ; 4 bytes @ 0x3A
  7781   00003B                     	ds	4
  7782   00003F                     i2___fldiv@bexp:
  7783                           	callstack 0
  7784                           
  7785                           ; 1 bytes @ 0x3E
  7786   00003F                     	ds	1
  7787   000040                     i2___fldiv@aexp:
  7788                           	callstack 0
  7789                           
  7790                           ; 1 bytes @ 0x3F
  7791   000040                     	ds	1
  7792   000041                     ?i2_lire_tension:
  7793                           	callstack 0
  7794   000041                     ?i2_floorf:
  7795                           	callstack 0
  7796   000041                     i2floorf@x:
  7797                           	callstack 0
  7798                           
  7799                           ; 4 bytes @ 0x40
  7800   000041                     	ds	4
  7801   000045                     i2lire_tension@tension:
  7802                           	callstack 0
  7803   000045                     ??i2_floorf:
  7804                           
  7805                           ; 1 bytes @ 0x44
  7806   000045                     	ds	4
  7807   000049                     i2lire_tension@adc_val:
  7808                           	callstack 0
  7809                           
  7810                           ; 2 bytes @ 0x48
  7811   000049                     	ds	2
  7812   00004B                     ?i2___fltol:
  7813                           	callstack 0
  7814   00004B                     i2___fltol@f1:
  7815                           	callstack 0
  7816   00004B                     i2floorf@m:
  7817                           	callstack 0
  7818                           
  7819                           ; 4 bytes @ 0x4A
  7820   00004B                     	ds	4
  7821   00004F                     i2floorf@e:
  7822                           	callstack 0
  7823   00004F                     ??i2___fltol:
  7824                           
  7825                           ; 1 bytes @ 0x4E
  7826   00004F                     	ds	2
  7827   000051                     i2floorf@u:
  7828                           	callstack 0
  7829                           
  7830                           ; 4 bytes @ 0x50
  7831   000051                     	ds	2
  7832   000053                     i2___fltol@sign1:
  7833                           	callstack 0
  7834                           
  7835                           ; 1 bytes @ 0x52
  7836   000053                     	ds	1
  7837   000054                     i2___fltol@exp1:
  7838                           	callstack 0
  7839                           
  7840                           ; 1 bytes @ 0x53
  7841   000054                     	ds	1
  7842   000055                     i2efgtoa@fp:
  7843                           	callstack 0
  7844                           
  7845                           ; 2 bytes @ 0x54
  7846   000055                     	ds	2
  7847   000057                     i2efgtoa@f:
  7848                           	callstack 0
  7849                           
  7850                           ; 4 bytes @ 0x56
  7851   000057                     	ds	4
  7852   00005B                     i2efgtoa@c:
  7853                           	callstack 0
  7854                           
  7855                           ; 1 bytes @ 0x5A
  7856   00005B                     	ds	1
  7857   00005C                     ??i2_efgtoa:
  7858                           
  7859                           ; 1 bytes @ 0x5B
  7860   00005C                     	ds	2
  7861   00005E                     
  7862                           ; 1 bytes @ 0x5D
  7863 ;;
  7864 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  7865 ;;
  7866 ;; *************** function _main *****************
  7867 ;; Defined at:
  7868 ;;		line 422 in file "main.c"
  7869 ;; Parameters:    Size  Location     Type
  7870 ;;		None
  7871 ;; Auto vars:     Size  Location     Type
  7872 ;;  frame           1    0        unsigned char 
  7873 ;; Return value:  Size  Location     Type
  7874 ;;                  2  874[None  ] int 
  7875 ;; Registers used:
  7876 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7877 ;; Tracked objects:
  7878 ;;		On entry : 0/0
  7879 ;;		On exit  : 0/0
  7880 ;;		Unchanged: 0/0
  7881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7882 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7883 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7884 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7885 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7886 ;;Total ram usage:        0 bytes
  7887 ;; Hardware stack levels required when called: 22
  7888 ;; This function calls:
  7889 ;;		_ADC_Initialize
  7890 ;;		_BP1_SetInterruptHandler
  7891 ;;		_BP2_SetInterruptHandler
  7892 ;;		_BP3_SetInterruptHandler
  7893 ;;		_LCD_UpdateMenu
  7894 ;;		_SYSTEM_Initialize
  7895 ;;		_TMR1_OverflowCallbackRegister
  7896 ;; This function is called by:
  7897 ;;		Startup code after reset
  7898 ;; This function uses a non-reentrant model
  7899 ;;
  7900                           
  7901                           	psect	text0
  7902   005D38                     __ptext0:
  7903                           	callstack 0
  7904   005D38                     _main:
  7905                           	callstack 9
  7906   005D38                     
  7907                           ;main.c: 424:     SYSTEM_Initialize();
  7908   005D38  ECC6  F032         	call	_SYSTEM_Initialize	;wreg free
  7909                           
  7910                           ;main.c: 425:     ADC_Initialize();
  7911   005D3C  ECBB  F02D         	call	_ADC_Initialize	;wreg free
  7912                           
  7913                           ;main.c: 426:     TMR1_OverflowCallbackRegister(TMR1_handler);
  7914   005D40  0EE0               	movlw	low _TMR1_handler
  7915   005D42  0101               	movlb	1	; () banked
  7916   005D44  6F06               	movwf	TMR1_OverflowCallbackRegister@CallbackHandler& (0+255),b
  7917   005D46  0E5E               	movlw	high _TMR1_handler
  7918   005D48  6F07               	movwf	(TMR1_OverflowCallbackRegister@CallbackHandler+1)& (0+255),b
  7919   005D4A  EC0B  F033         	call	_TMR1_OverflowCallbackRegister	;wreg free
  7920                           
  7921                           ;main.c: 428:    BP1_SetInterruptHandler(int_BP1);
  7922   005D4E  0E18               	movlw	low _int_BP1
  7923   005D50  0101               	movlb	1	; () banked
  7924   005D52  6F06               	movwf	BP1_SetInterruptHandler@InterruptHandler& (0+255),b
  7925   005D54  0E5B               	movlw	high _int_BP1
  7926   005D56  6F07               	movwf	(BP1_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  7927   005D58  EC1A  F033         	call	_BP1_SetInterruptHandler	;wreg free
  7928                           
  7929                           ;main.c: 429:    BP2_SetInterruptHandler(int_BP2);
  7930   005D5C  0E42               	movlw	low _int_BP2
  7931   005D5E  0101               	movlb	1	; () banked
  7932   005D60  6F06               	movwf	BP2_SetInterruptHandler@InterruptHandler& (0+255),b
  7933   005D62  0E44               	movlw	high _int_BP2
  7934   005D64  6F07               	movwf	(BP2_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  7935   005D66  EC15  F033         	call	_BP2_SetInterruptHandler	;wreg free
  7936                           
  7937                           ;main.c: 430:    BP3_SetInterruptHandler(int_BP3);
  7938   005D6A  0E94               	movlw	low _int_BP3
  7939   005D6C  0101               	movlb	1	; () banked
  7940   005D6E  6F06               	movwf	BP3_SetInterruptHandler@InterruptHandler& (0+255),b
  7941   005D70  0E64               	movlw	high _int_BP3
  7942   005D72  6F07               	movwf	(BP3_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  7943   005D74  EC10  F033         	call	_BP3_SetInterruptHandler	;wreg free
  7944   005D78                     
  7945                           ;main.c: 432:     (INTCON0bits.GIE = 1);
  7946   005D78  8ED2               	bsf	210,7,c	;volatile
  7947   005D7A                     
  7948                           ;main.c: 433:     TRISBbits.TRISB5 = 0;
  7949   005D7A  9AC3               	bcf	195,5,c	;volatile
  7950   005D7C                     
  7951                           ;main.c: 434:     LATBbits.LATB5 = 0;
  7952   005D7C  9ABB               	bcf	187,5,c	;volatile
  7953   005D7E                     
  7954                           ;main.c: 435:     TRISAbits.TRISA0 = 0;
  7955   005D7E  90C2               	bcf	194,0,c	;volatile
  7956   005D80                     
  7957                           ;main.c: 436:     LATAbits.LATA0 = 0;
  7958   005D80  90BA               	bcf	186,0,c	;volatile
  7959   005D82                     
  7960                           ;main.c: 441:     LCD_UpdateMenu();
  7961   005D82  EC47  F014         	call	_LCD_UpdateMenu	;wreg free
  7962   005D86                     l875:
  7963   005D86  EFC3  F02E         	goto	l875
  7964   005D8A  EF0D  F000         	goto	start
  7965   005D8E                     __end_of_main:
  7966                           	callstack 0
  7967                           
  7968 ;; *************** function _TMR1_OverflowCallbackRegister *****************
  7969 ;; Defined at:
  7970 ;;		line 215 in file "mcc_generated_files/timer/src/tmr1.c"
  7971 ;; Parameters:    Size  Location     Type
  7972 ;;  CallbackHand    2    6[BANK1 ] PTR FTN()void 
  7973 ;;		 -> TMR1_handler(1), 
  7974 ;; Auto vars:     Size  Location     Type
  7975 ;;		None
  7976 ;; Return value:  Size  Location     Type
  7977 ;;                  1    wreg      void 
  7978 ;; Registers used:
  7979 ;;		wreg, status,2, status,0
  7980 ;; Tracked objects:
  7981 ;;		On entry : 0/0
  7982 ;;		On exit  : 0/0
  7983 ;;		Unchanged: 0/0
  7984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7985 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7986 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7987 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7988 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7989 ;;Total ram usage:        2 bytes
  7990 ;; Hardware stack levels used: 1
  7991 ;; Hardware stack levels required when called: 13
  7992 ;; This function calls:
  7993 ;;		Nothing
  7994 ;; This function is called by:
  7995 ;;		_main
  7996 ;; This function uses a non-reentrant model
  7997 ;;
  7998                           
  7999                           	psect	text1
  8000   006616                     __ptext1:
  8001                           	callstack 0
  8002   006616                     _TMR1_OverflowCallbackRegister:
  8003                           	callstack 17
  8004   006616                     
  8005                           ;mcc_generated_files/timer/src/tmr1.c: 215: void TMR1_OverflowCallbackRegister(void (*Ca
      +                          llbackHandler)(void));mcc_generated_files/timer/src/tmr1.c: 216: {;mcc_generated_files/t
      +                          imer/src/tmr1.c: 217:     TMR1_OverflowCallback = CallbackHandler;
  8006   006616  C106  F0ED         	movff	TMR1_OverflowCallbackRegister@CallbackHandler,_TMR1_OverflowCallback
  8007   00661A  C107  F0EE         	movff	TMR1_OverflowCallbackRegister@CallbackHandler+1,_TMR1_OverflowCallback+1
  8008   00661E  0012               	return		;funcret
  8009   006620                     __end_of_TMR1_OverflowCallbackRegister:
  8010                           	callstack 0
  8011                           
  8012 ;; *************** function _SYSTEM_Initialize *****************
  8013 ;; Defined at:
  8014 ;;		line 40 in file "mcc_generated_files/system/src/system.c"
  8015 ;; Parameters:    Size  Location     Type
  8016 ;;		None
  8017 ;; Auto vars:     Size  Location     Type
  8018 ;;		None
  8019 ;; Return value:  Size  Location     Type
  8020 ;;                  1    wreg      void 
  8021 ;; Registers used:
  8022 ;;		wreg, status,2, status,0, cstack
  8023 ;; Tracked objects:
  8024 ;;		On entry : 0/0
  8025 ;;		On exit  : 0/0
  8026 ;;		Unchanged: 0/0
  8027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8028 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8029 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8030 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8031 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8032 ;;Total ram usage:        0 bytes
  8033 ;; Hardware stack levels used: 1
  8034 ;; Hardware stack levels required when called: 15
  8035 ;; This function calls:
  8036 ;;		_ADC_Initialize
  8037 ;;		_CLOCK_Initialize
  8038 ;;		_INTERRUPT_Initialize
  8039 ;;		_PIN_MANAGER_Initialize
  8040 ;;		_TMR1_Initialize
  8041 ;; This function is called by:
  8042 ;;		_main
  8043 ;; This function uses a non-reentrant model
  8044 ;;
  8045                           
  8046                           	psect	text2
  8047   00658C                     __ptext2:
  8048                           	callstack 0
  8049   00658C                     _SYSTEM_Initialize:
  8050                           	callstack 15
  8051   00658C                     
  8052                           ;mcc_generated_files/system/src/system.c: 42:     CLOCK_Initialize();
  8053   00658C  ECFC  F032         	call	_CLOCK_Initialize	;wreg free
  8054   006590                     
  8055                           ;mcc_generated_files/system/src/system.c: 43:     PIN_MANAGER_Initialize();
  8056   006590  EC34  F02C         	call	_PIN_MANAGER_Initialize	;wreg free
  8057   006594                     
  8058                           ;mcc_generated_files/system/src/system.c: 44:     ADC_Initialize();
  8059   006594  ECBB  F02D         	call	_ADC_Initialize	;wreg free
  8060   006598                     
  8061                           ;mcc_generated_files/system/src/system.c: 45:     TMR1_Initialize();
  8062   006598  ECB1  F030         	call	_TMR1_Initialize	;wreg free
  8063   00659C                     
  8064                           ;mcc_generated_files/system/src/system.c: 46:     INTERRUPT_Initialize();
  8065   00659C  ECF2  F030         	call	_INTERRUPT_Initialize	;wreg free
  8066   0065A0  0012               	return		;funcret
  8067   0065A2                     __end_of_SYSTEM_Initialize:
  8068                           	callstack 0
  8069                           
  8070 ;; *************** function _TMR1_Initialize *****************
  8071 ;; Defined at:
  8072 ;;		line 48 in file "mcc_generated_files/timer/src/tmr1.c"
  8073 ;; Parameters:    Size  Location     Type
  8074 ;;		None
  8075 ;; Auto vars:     Size  Location     Type
  8076 ;;		None
  8077 ;; Return value:  Size  Location     Type
  8078 ;;                  1    wreg      void 
  8079 ;; Registers used:
  8080 ;;		wreg, status,2, status,0
  8081 ;; Tracked objects:
  8082 ;;		On entry : 0/0
  8083 ;;		On exit  : 0/0
  8084 ;;		Unchanged: 0/0
  8085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8086 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8087 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8088 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8089 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8090 ;;Total ram usage:        2 bytes
  8091 ;; Hardware stack levels used: 1
  8092 ;; Hardware stack levels required when called: 13
  8093 ;; This function calls:
  8094 ;;		Nothing
  8095 ;; This function is called by:
  8096 ;;		_SYSTEM_Initialize
  8097 ;; This function uses a non-reentrant model
  8098 ;;
  8099                           
  8100                           	psect	text3
  8101   006162                     __ptext3:
  8102                           	callstack 0
  8103   006162                     _TMR1_Initialize:
  8104                           	callstack 16
  8105   006162                     
  8106                           ;mcc_generated_files/timer/src/tmr1.c: 50:     T1CONbits.TMR1ON = 0U;
  8107   006162  90B2               	bcf	178,0,c	;volatile
  8108                           
  8109                           ;mcc_generated_files/timer/src/tmr1.c: 52:     T1GCON = (0 << 0x3)
  8110   006164  6AB3               	clrf	179,c	;volatile
  8111                           
  8112                           ;mcc_generated_files/timer/src/tmr1.c: 58:     T1GATE = (0 << 0x0);
  8113   006166  6AB4               	clrf	180,c	;volatile
  8114   006168                     
  8115                           ;mcc_generated_files/timer/src/tmr1.c: 60:     T1CLK = (4 << 0x0);
  8116   006168  0E04               	movlw	4
  8117   00616A  6EB5               	movwf	181,c	;volatile
  8118                           
  8119                           ;mcc_generated_files/timer/src/tmr1.c: 62:     TMR1H = 0xF3;
  8120   00616C  0EF3               	movlw	243
  8121   00616E  6EB1               	movwf	177,c	;volatile
  8122                           
  8123                           ;mcc_generated_files/timer/src/tmr1.c: 63:     TMR1L = 0xE3;
  8124   006170  0EE3               	movlw	227
  8125   006172  6EB0               	movwf	176,c	;volatile
  8126                           
  8127                           ;mcc_generated_files/timer/src/tmr1.c: 65:     timer1ReloadVal=((uint16_t)TMR1H << 8) | 
      +                          TMR1L;
  8128   006174  50B1               	movf	177,w,c	;volatile
  8129   006176  0101               	movlb	1	; () banked
  8130   006178  6F06               	movwf	??_TMR1_Initialize& (0+255),b
  8131   00617A  50B0               	movf	176,w,c	;volatile
  8132   00617C  0100               	movlb	0	; () banked
  8133   00617E  6FE3               	movwf	_timer1ReloadVal& (0+255),b	;volatile
  8134   006180  C106  F0E4         	movff	??_TMR1_Initialize,_timer1ReloadVal+1	;volatile
  8135   006184                     
  8136                           ; BSR set to: 0
  8137                           ;mcc_generated_files/timer/src/tmr1.c: 67:     TMR1_OverflowCallback = TMR1_DefaultOverf
      +                          lowCallback;
  8138   006184  0E80               	movlw	low _TMR1_DefaultOverflowCallback
  8139   006186  6FED               	movwf	_TMR1_OverflowCallback& (0+255),b
  8140   006188  0E66               	movlw	high _TMR1_DefaultOverflowCallback
  8141   00618A  6FEE               	movwf	(_TMR1_OverflowCallback+1)& (0+255),b
  8142   00618C                     
  8143                           ; BSR set to: 0
  8144                           ;mcc_generated_files/timer/src/tmr1.c: 68:     TMR1_GateCallback = TMR1_DefaultGateCallb
      +                          ack;
  8145   00618C  0E00               	movlw	0
  8146   00618E  0101               	movlb	1	; () banked
  8147   006190  6FD6               	movwf	_TMR1_GateCallback& (0+255),b
  8148   006192  0E00               	movlw	0
  8149   006194  6FD7               	movwf	(_TMR1_GateCallback+1)& (0+255),b
  8150   006196                     
  8151                           ; BSR set to: 1
  8152                           ;mcc_generated_files/timer/src/tmr1.c: 70:  PIR4bits.TMR1IF = 0U;
  8153   006196  0139               	movlb	57	; () banked
  8154   006198  91A4               	bcf	164,0,b	;volatile
  8155   00619A                     
  8156                           ; BSR set to: 57
  8157                           ;mcc_generated_files/timer/src/tmr1.c: 71:  PIE4bits.TMR1IE = 1U;
  8158   00619A  8194               	bsf	148,0,b	;volatile
  8159   00619C                     
  8160                           ; BSR set to: 57
  8161                           ;mcc_generated_files/timer/src/tmr1.c: 72:  PIR4bits.TMR1GIF = 0U;
  8162   00619C  93A4               	bcf	164,1,b	;volatile
  8163                           
  8164                           ;mcc_generated_files/timer/src/tmr1.c: 74:     T1CON = (1 << 0x0)
  8165   00619E  0E05               	movlw	5
  8166   0061A0  6EB2               	movwf	178,c	;volatile
  8167   0061A2                     
  8168                           ; BSR set to: 57
  8169   0061A2  0012               	return		;funcret
  8170   0061A4                     __end_of_TMR1_Initialize:
  8171                           	callstack 0
  8172                           
  8173 ;; *************** function _PIN_MANAGER_Initialize *****************
  8174 ;; Defined at:
  8175 ;;		line 41 in file "mcc_generated_files/system/src/pins.c"
  8176 ;; Parameters:    Size  Location     Type
  8177 ;;		None
  8178 ;; Auto vars:     Size  Location     Type
  8179 ;;		None
  8180 ;; Return value:  Size  Location     Type
  8181 ;;                  1    wreg      void 
  8182 ;; Registers used:
  8183 ;;		wreg, status,2, status,0, cstack
  8184 ;; Tracked objects:
  8185 ;;		On entry : 0/0
  8186 ;;		On exit  : 0/0
  8187 ;;		Unchanged: 0/0
  8188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8189 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8190 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8191 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8192 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8193 ;;Total ram usage:        0 bytes
  8194 ;; Hardware stack levels used: 1
  8195 ;; Hardware stack levels required when called: 14
  8196 ;; This function calls:
  8197 ;;		_BP1_SetInterruptHandler
  8198 ;;		_BP2_SetInterruptHandler
  8199 ;;		_BP3_SetInterruptHandler
  8200 ;; This function is called by:
  8201 ;;		_SYSTEM_Initialize
  8202 ;; This function uses a non-reentrant model
  8203 ;;
  8204                           
  8205                           	psect	text4
  8206   005868                     __ptext4:
  8207                           	callstack 0
  8208   005868                     _PIN_MANAGER_Initialize:
  8209                           	callstack 15
  8210   005868                     
  8211                           ;mcc_generated_files/system/src/pins.c: 46:     LATA = 0x0;
  8212   005868  6ABA               	clrf	186,c	;volatile
  8213                           
  8214                           ;mcc_generated_files/system/src/pins.c: 47:     LATB = 0x0;
  8215   00586A  6ABB               	clrf	187,c	;volatile
  8216                           
  8217                           ;mcc_generated_files/system/src/pins.c: 48:     LATC = 0x0;
  8218   00586C  6ABC               	clrf	188,c	;volatile
  8219                           
  8220                           ;mcc_generated_files/system/src/pins.c: 52:     ODCONA = 0x0;
  8221   00586E  013A               	movlb	58	; () banked
  8222   005870  6B42               	clrf	66,b	;volatile
  8223                           
  8224                           ;mcc_generated_files/system/src/pins.c: 53:     ODCONB = 0x0;
  8225   005872  6B52               	clrf	82,b	;volatile
  8226                           
  8227                           ;mcc_generated_files/system/src/pins.c: 54:     ODCONC = 0x0;
  8228   005874  6B62               	clrf	98,b	;volatile
  8229   005876                     
  8230                           ; BSR set to: 58
  8231                           ;mcc_generated_files/system/src/pins.c: 59:     TRISA = 0xFE;
  8232   005876  0EFE               	movlw	254
  8233   005878  6EC2               	movwf	194,c	;volatile
  8234                           
  8235                           ;mcc_generated_files/system/src/pins.c: 60:     TRISB = 0xDC;
  8236   00587A  0EDC               	movlw	220
  8237   00587C  6EC3               	movwf	195,c	;volatile
  8238   00587E                     
  8239                           ; BSR set to: 58
  8240                           ;mcc_generated_files/system/src/pins.c: 61:     TRISC = 0x0;
  8241   00587E  6AC4               	clrf	196,c	;volatile
  8242                           
  8243                           ;mcc_generated_files/system/src/pins.c: 66:     ANSELA = 0xF0;
  8244   005880  0EF0               	movlw	240
  8245   005882  6F40               	movwf	64,b	;volatile
  8246                           
  8247                           ;mcc_generated_files/system/src/pins.c: 67:     ANSELB = 0xDC;
  8248   005884  0EDC               	movlw	220
  8249   005886  6F50               	movwf	80,b	;volatile
  8250   005888                     
  8251                           ; BSR set to: 58
  8252                           ;mcc_generated_files/system/src/pins.c: 68:     ANSELC = 0x0;
  8253   005888  6B60               	clrf	96,b	;volatile
  8254   00588A                     
  8255                           ; BSR set to: 58
  8256                           ;mcc_generated_files/system/src/pins.c: 73:     WPUA = 0x0;
  8257   00588A  6B41               	clrf	65,b	;volatile
  8258   00588C                     
  8259                           ; BSR set to: 58
  8260                           ;mcc_generated_files/system/src/pins.c: 74:     WPUB = 0x0;
  8261   00588C  6B51               	clrf	81,b	;volatile
  8262   00588E                     
  8263                           ; BSR set to: 58
  8264                           ;mcc_generated_files/system/src/pins.c: 75:     WPUC = 0x0;
  8265   00588E  6B61               	clrf	97,b	;volatile
  8266   005890                     
  8267                           ; BSR set to: 58
  8268                           ;mcc_generated_files/system/src/pins.c: 76:     WPUE = 0x0;
  8269   005890  6B81               	clrf	129,b	;volatile
  8270   005892                     
  8271                           ; BSR set to: 58
  8272                           ;mcc_generated_files/system/src/pins.c: 82:     SLRCONA = 0xFF;
  8273   005892  6943               	setf	67,b	;volatile
  8274   005894                     
  8275                           ; BSR set to: 58
  8276                           ;mcc_generated_files/system/src/pins.c: 83:     SLRCONB = 0xFF;
  8277   005894  6953               	setf	83,b	;volatile
  8278   005896                     
  8279                           ; BSR set to: 58
  8280                           ;mcc_generated_files/system/src/pins.c: 84:     SLRCONC = 0xFF;
  8281   005896  6963               	setf	99,b	;volatile
  8282   005898                     
  8283                           ; BSR set to: 58
  8284                           ;mcc_generated_files/system/src/pins.c: 89:     INLVLA = 0xFF;
  8285   005898  6944               	setf	68,b	;volatile
  8286   00589A                     
  8287                           ; BSR set to: 58
  8288                           ;mcc_generated_files/system/src/pins.c: 90:     INLVLB = 0xFF;
  8289   00589A  6954               	setf	84,b	;volatile
  8290   00589C                     
  8291                           ; BSR set to: 58
  8292                           ;mcc_generated_files/system/src/pins.c: 91:     INLVLC = 0xFF;
  8293   00589C  6964               	setf	100,b	;volatile
  8294                           
  8295                           ;mcc_generated_files/system/src/pins.c: 92:     INLVLE = 0x8;
  8296   00589E  0E08               	movlw	8
  8297   0058A0  6F84               	movwf	132,b	;volatile
  8298   0058A2                     
  8299                           ; BSR set to: 58
  8300                           ;mcc_generated_files/system/src/pins.c: 97:     RB1I2C = 0x0;
  8301   0058A2  6B5A               	clrf	90,b	;volatile
  8302   0058A4                     
  8303                           ; BSR set to: 58
  8304                           ;mcc_generated_files/system/src/pins.c: 98:     RB2I2C = 0x0;
  8305   0058A4  6B5B               	clrf	91,b	;volatile
  8306   0058A6                     
  8307                           ; BSR set to: 58
  8308                           ;mcc_generated_files/system/src/pins.c: 99:     RC3I2C = 0x0;
  8309   0058A6  6B6A               	clrf	106,b	;volatile
  8310   0058A8                     
  8311                           ; BSR set to: 58
  8312                           ;mcc_generated_files/system/src/pins.c: 100:     RC4I2C = 0x0;
  8313   0058A8  6B6B               	clrf	107,b	;volatile
  8314                           
  8315                           ;mcc_generated_files/system/src/pins.c: 108:     IOCAP = 0xE;
  8316   0058AA  0E0E               	movlw	14
  8317   0058AC  6F45               	movwf	69,b	;volatile
  8318   0058AE                     
  8319                           ; BSR set to: 58
  8320                           ;mcc_generated_files/system/src/pins.c: 109:     IOCAN = 0x0;
  8321   0058AE  6B46               	clrf	70,b	;volatile
  8322   0058B0                     
  8323                           ; BSR set to: 58
  8324                           ;mcc_generated_files/system/src/pins.c: 110:     IOCAF = 0x0;
  8325   0058B0  6B47               	clrf	71,b	;volatile
  8326   0058B2                     
  8327                           ; BSR set to: 58
  8328                           ;mcc_generated_files/system/src/pins.c: 111:     IOCBP = 0x0;
  8329   0058B2  6B55               	clrf	85,b	;volatile
  8330   0058B4                     
  8331                           ; BSR set to: 58
  8332                           ;mcc_generated_files/system/src/pins.c: 112:     IOCBN = 0x0;
  8333   0058B4  6B56               	clrf	86,b	;volatile
  8334   0058B6                     
  8335                           ; BSR set to: 58
  8336                           ;mcc_generated_files/system/src/pins.c: 113:     IOCBF = 0x0;
  8337   0058B6  6B57               	clrf	87,b	;volatile
  8338   0058B8                     
  8339                           ; BSR set to: 58
  8340                           ;mcc_generated_files/system/src/pins.c: 114:     IOCCP = 0x0;
  8341   0058B8  6B65               	clrf	101,b	;volatile
  8342   0058BA                     
  8343                           ; BSR set to: 58
  8344                           ;mcc_generated_files/system/src/pins.c: 115:     IOCCN = 0x0;
  8345   0058BA  6B66               	clrf	102,b	;volatile
  8346   0058BC                     
  8347                           ; BSR set to: 58
  8348                           ;mcc_generated_files/system/src/pins.c: 116:     IOCCF = 0x0;
  8349   0058BC  6B67               	clrf	103,b	;volatile
  8350   0058BE                     
  8351                           ; BSR set to: 58
  8352                           ;mcc_generated_files/system/src/pins.c: 117:     IOCEP = 0x0;
  8353   0058BE  6B85               	clrf	133,b	;volatile
  8354   0058C0                     
  8355                           ; BSR set to: 58
  8356                           ;mcc_generated_files/system/src/pins.c: 118:     IOCEN = 0x0;
  8357   0058C0  6B86               	clrf	134,b	;volatile
  8358   0058C2                     
  8359                           ; BSR set to: 58
  8360                           ;mcc_generated_files/system/src/pins.c: 119:     IOCEF = 0x0;
  8361   0058C2  6B87               	clrf	135,b	;volatile
  8362   0058C4                     
  8363                           ; BSR set to: 58
  8364                           ;mcc_generated_files/system/src/pins.c: 121:     BP1_SetInterruptHandler(BP1_DefaultInte
      +                          rruptHandler);
  8365   0058C4  0E86               	movlw	low _BP1_DefaultInterruptHandler
  8366   0058C6  0101               	movlb	1	; () banked
  8367   0058C8  6F06               	movwf	BP1_SetInterruptHandler@InterruptHandler& (0+255),b
  8368   0058CA  0E66               	movlw	high _BP1_DefaultInterruptHandler
  8369   0058CC  6F07               	movwf	(BP1_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  8370   0058CE  EC1A  F033         	call	_BP1_SetInterruptHandler	;wreg free
  8371   0058D2                     
  8372                           ;mcc_generated_files/system/src/pins.c: 122:     BP2_SetInterruptHandler(BP2_DefaultInte
      +                          rruptHandler);
  8373   0058D2  0E84               	movlw	low _BP2_DefaultInterruptHandler
  8374   0058D4  0101               	movlb	1	; () banked
  8375   0058D6  6F06               	movwf	BP2_SetInterruptHandler@InterruptHandler& (0+255),b
  8376   0058D8  0E66               	movlw	high _BP2_DefaultInterruptHandler
  8377   0058DA  6F07               	movwf	(BP2_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  8378   0058DC  EC15  F033         	call	_BP2_SetInterruptHandler	;wreg free
  8379   0058E0                     
  8380                           ;mcc_generated_files/system/src/pins.c: 123:     BP3_SetInterruptHandler(BP3_DefaultInte
      +                          rruptHandler);
  8381   0058E0  0E82               	movlw	low _BP3_DefaultInterruptHandler
  8382   0058E2  0101               	movlb	1	; () banked
  8383   0058E4  6F06               	movwf	BP3_SetInterruptHandler@InterruptHandler& (0+255),b
  8384   0058E6  0E66               	movlw	high _BP3_DefaultInterruptHandler
  8385   0058E8  6F07               	movwf	(BP3_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  8386   0058EA  EC10  F033         	call	_BP3_SetInterruptHandler	;wreg free
  8387   0058EE                     
  8388                           ;mcc_generated_files/system/src/pins.c: 126:     PIE0bits.IOCIE = 1;
  8389   0058EE  0139               	movlb	57	; () banked
  8390   0058F0  8F90               	bsf	144,7,b	;volatile
  8391   0058F2                     
  8392                           ; BSR set to: 57
  8393   0058F2  0012               	return		;funcret
  8394   0058F4                     __end_of_PIN_MANAGER_Initialize:
  8395                           	callstack 0
  8396                           
  8397 ;; *************** function _BP3_SetInterruptHandler *****************
  8398 ;; Defined at:
  8399 ;;		line 226 in file "mcc_generated_files/system/src/pins.c"
  8400 ;; Parameters:    Size  Location     Type
  8401 ;;  InterruptHan    2    6[BANK1 ] PTR FTN()void 
  8402 ;;		 -> int_BP3(1), BP3_DefaultInterruptHandler(1), 
  8403 ;; Auto vars:     Size  Location     Type
  8404 ;;		None
  8405 ;; Return value:  Size  Location     Type
  8406 ;;                  1    wreg      void 
  8407 ;; Registers used:
  8408 ;;		wreg, status,2, status,0
  8409 ;; Tracked objects:
  8410 ;;		On entry : 0/0
  8411 ;;		On exit  : 0/0
  8412 ;;		Unchanged: 0/0
  8413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8414 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8415 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8416 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8417 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8418 ;;Total ram usage:        2 bytes
  8419 ;; Hardware stack levels used: 1
  8420 ;; Hardware stack levels required when called: 13
  8421 ;; This function calls:
  8422 ;;		Nothing
  8423 ;; This function is called by:
  8424 ;;		_PIN_MANAGER_Initialize
  8425 ;;		_main
  8426 ;; This function uses a non-reentrant model
  8427 ;;
  8428                           
  8429                           	psect	text5
  8430   006620                     __ptext5:
  8431                           	callstack 0
  8432   006620                     _BP3_SetInterruptHandler:
  8433                           	callstack 15
  8434   006620                     
  8435                           ;mcc_generated_files/system/src/pins.c: 227:     BP3_InterruptHandler = InterruptHandler
      +                          ;
  8436   006620  C106  F0F5         	movff	BP3_SetInterruptHandler@InterruptHandler,_BP3_InterruptHandler
  8437   006624  C107  F0F6         	movff	BP3_SetInterruptHandler@InterruptHandler+1,_BP3_InterruptHandler+1
  8438   006628  0012               	return		;funcret
  8439   00662A                     __end_of_BP3_SetInterruptHandler:
  8440                           	callstack 0
  8441                           
  8442 ;; *************** function _BP2_SetInterruptHandler *****************
  8443 ;; Defined at:
  8444 ;;		line 196 in file "mcc_generated_files/system/src/pins.c"
  8445 ;; Parameters:    Size  Location     Type
  8446 ;;  InterruptHan    2    6[BANK1 ] PTR FTN()void 
  8447 ;;		 -> int_BP2(1), BP2_DefaultInterruptHandler(1), 
  8448 ;; Auto vars:     Size  Location     Type
  8449 ;;		None
  8450 ;; Return value:  Size  Location     Type
  8451 ;;                  1    wreg      void 
  8452 ;; Registers used:
  8453 ;;		wreg, status,2, status,0
  8454 ;; Tracked objects:
  8455 ;;		On entry : 0/0
  8456 ;;		On exit  : 0/0
  8457 ;;		Unchanged: 0/0
  8458 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8459 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8460 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8461 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8462 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8463 ;;Total ram usage:        2 bytes
  8464 ;; Hardware stack levels used: 1
  8465 ;; Hardware stack levels required when called: 13
  8466 ;; This function calls:
  8467 ;;		Nothing
  8468 ;; This function is called by:
  8469 ;;		_PIN_MANAGER_Initialize
  8470 ;;		_main
  8471 ;; This function uses a non-reentrant model
  8472 ;;
  8473                           
  8474                           	psect	text6
  8475   00662A                     __ptext6:
  8476                           	callstack 0
  8477   00662A                     _BP2_SetInterruptHandler:
  8478                           	callstack 15
  8479   00662A                     
  8480                           ;mcc_generated_files/system/src/pins.c: 197:     BP2_InterruptHandler = InterruptHandler
      +                          ;
  8481   00662A  C106  F0F7         	movff	BP2_SetInterruptHandler@InterruptHandler,_BP2_InterruptHandler
  8482   00662E  C107  F0F8         	movff	BP2_SetInterruptHandler@InterruptHandler+1,_BP2_InterruptHandler+1
  8483   006632  0012               	return		;funcret
  8484   006634                     __end_of_BP2_SetInterruptHandler:
  8485                           	callstack 0
  8486                           
  8487 ;; *************** function _BP1_SetInterruptHandler *****************
  8488 ;; Defined at:
  8489 ;;		line 166 in file "mcc_generated_files/system/src/pins.c"
  8490 ;; Parameters:    Size  Location     Type
  8491 ;;  InterruptHan    2    6[BANK1 ] PTR FTN()void 
  8492 ;;		 -> int_BP1(1), BP1_DefaultInterruptHandler(1), 
  8493 ;; Auto vars:     Size  Location     Type
  8494 ;;		None
  8495 ;; Return value:  Size  Location     Type
  8496 ;;                  1    wreg      void 
  8497 ;; Registers used:
  8498 ;;		wreg, status,2, status,0
  8499 ;; Tracked objects:
  8500 ;;		On entry : 0/0
  8501 ;;		On exit  : 0/0
  8502 ;;		Unchanged: 0/0
  8503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8504 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8505 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8506 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8507 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8508 ;;Total ram usage:        2 bytes
  8509 ;; Hardware stack levels used: 1
  8510 ;; Hardware stack levels required when called: 13
  8511 ;; This function calls:
  8512 ;;		Nothing
  8513 ;; This function is called by:
  8514 ;;		_PIN_MANAGER_Initialize
  8515 ;;		_main
  8516 ;; This function uses a non-reentrant model
  8517 ;;
  8518                           
  8519                           	psect	text7
  8520   006634                     __ptext7:
  8521                           	callstack 0
  8522   006634                     _BP1_SetInterruptHandler:
  8523                           	callstack 15
  8524   006634                     
  8525                           ;mcc_generated_files/system/src/pins.c: 167:     BP1_InterruptHandler = InterruptHandler
      +                          ;
  8526   006634  C106  F0F9         	movff	BP1_SetInterruptHandler@InterruptHandler,_BP1_InterruptHandler
  8527   006638  C107  F0FA         	movff	BP1_SetInterruptHandler@InterruptHandler+1,_BP1_InterruptHandler+1
  8528   00663C  0012               	return		;funcret
  8529   00663E                     __end_of_BP1_SetInterruptHandler:
  8530                           	callstack 0
  8531                           
  8532 ;; *************** function _INTERRUPT_Initialize *****************
  8533 ;; Defined at:
  8534 ;;		line 42 in file "mcc_generated_files/system/src/interrupt.c"
  8535 ;; Parameters:    Size  Location     Type
  8536 ;;		None
  8537 ;; Auto vars:     Size  Location     Type
  8538 ;;		None
  8539 ;; Return value:  Size  Location     Type
  8540 ;;                  1    wreg      void 
  8541 ;; Registers used:
  8542 ;;		wreg, status,2, status,0, cstack
  8543 ;; Tracked objects:
  8544 ;;		On entry : 0/0
  8545 ;;		On exit  : 0/0
  8546 ;;		Unchanged: 0/0
  8547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8548 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8549 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8550 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8551 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8552 ;;Total ram usage:        0 bytes
  8553 ;; Hardware stack levels used: 1
  8554 ;; Hardware stack levels required when called: 14
  8555 ;; This function calls:
  8556 ;;		_INT0_SetInterruptHandler
  8557 ;;		_INT1_SetInterruptHandler
  8558 ;;		_INT2_SetInterruptHandler
  8559 ;; This function is called by:
  8560 ;;		_SYSTEM_Initialize
  8561 ;; This function uses a non-reentrant model
  8562 ;;
  8563                           
  8564                           	psect	text8
  8565   0061E4                     __ptext8:
  8566                           	callstack 0
  8567   0061E4                     _INTERRUPT_Initialize:
  8568                           	callstack 15
  8569   0061E4                     
  8570                           ;mcc_generated_files/system/src/interrupt.c: 45:     INTCON0bits.IPEN = 0;
  8571   0061E4  9AD2               	bcf	210,5,c	;volatile
  8572                           
  8573                           ;mcc_generated_files/system/src/interrupt.c: 49:     (PIR1bits.INT0IF = 0);
  8574   0061E6  0139               	movlb	57	; () banked
  8575   0061E8  91A1               	bcf	161,0,b	;volatile
  8576                           
  8577                           ;mcc_generated_files/system/src/interrupt.c: 50:     (INTCON0bits.INT0EDG = 1);
  8578   0061EA  80D2               	bsf	210,0,c	;volatile
  8579   0061EC                     
  8580                           ; BSR set to: 57
  8581                           ;mcc_generated_files/system/src/interrupt.c: 52:     INT0_SetInterruptHandler(INT0_Defau
      +                          ltInterruptHandler);
  8582   0061EC  0E00               	movlw	0
  8583   0061EE  0101               	movlb	1	; () banked
  8584   0061F0  6F06               	movwf	INT0_SetInterruptHandler@InterruptHandler& (0+255),b
  8585   0061F2  0E00               	movlw	0
  8586   0061F4  6F07               	movwf	(INT0_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  8587   0061F6  EC29  F033         	call	_INT0_SetInterruptHandler	;wreg free
  8588   0061FA                     
  8589                           ;mcc_generated_files/system/src/interrupt.c: 57:     (PIR5bits.INT1IF = 0);
  8590   0061FA  0139               	movlb	57	; () banked
  8591   0061FC  91A5               	bcf	165,0,b	;volatile
  8592   0061FE                     
  8593                           ; BSR set to: 57
  8594                           ;mcc_generated_files/system/src/interrupt.c: 58:     (INTCON0bits.INT1EDG = 1);
  8595   0061FE  82D2               	bsf	210,1,c	;volatile
  8596                           
  8597                           ;mcc_generated_files/system/src/interrupt.c: 60:     INT1_SetInterruptHandler(INT1_Defau
      +                          ltInterruptHandler);
  8598   006200  0E00               	movlw	0
  8599   006202  0101               	movlb	1	; () banked
  8600   006204  6F06               	movwf	INT1_SetInterruptHandler@InterruptHandler& (0+255),b
  8601   006206  0E00               	movlw	0
  8602   006208  6F07               	movwf	(INT1_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  8603   00620A  EC24  F033         	call	_INT1_SetInterruptHandler	;wreg free
  8604   00620E                     
  8605                           ;mcc_generated_files/system/src/interrupt.c: 65:     (PIR7bits.INT2IF = 0);
  8606   00620E  0139               	movlb	57	; () banked
  8607   006210  9BA7               	bcf	167,5,b	;volatile
  8608   006212                     
  8609                           ; BSR set to: 57
  8610                           ;mcc_generated_files/system/src/interrupt.c: 66:     (INTCON0bits.INT2EDG = 1);
  8611   006212  84D2               	bsf	210,2,c	;volatile
  8612                           
  8613                           ;mcc_generated_files/system/src/interrupt.c: 68:     INT2_SetInterruptHandler(INT2_Defau
      +                          ltInterruptHandler);
  8614   006214  0E00               	movlw	0
  8615   006216  0101               	movlb	1	; () banked
  8616   006218  6F06               	movwf	INT2_SetInterruptHandler@InterruptHandler& (0+255),b
  8617   00621A  0E00               	movlw	0
  8618   00621C  6F07               	movwf	(INT2_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  8619   00621E  EC1F  F033         	call	_INT2_SetInterruptHandler	;wreg free
  8620   006222  0012               	return		;funcret
  8621   006224                     __end_of_INTERRUPT_Initialize:
  8622                           	callstack 0
  8623                           
  8624 ;; *************** function _INT2_SetInterruptHandler *****************
  8625 ;; Defined at:
  8626 ;;		line 175 in file "mcc_generated_files/system/src/interrupt.c"
  8627 ;; Parameters:    Size  Location     Type
  8628 ;;  InterruptHan    2    6[BANK1 ] PTR FTN()void 
  8629 ;;		 -> INT2_DefaultInterruptHandler(1), 
  8630 ;; Auto vars:     Size  Location     Type
  8631 ;;		None
  8632 ;; Return value:  Size  Location     Type
  8633 ;;                  1    wreg      void 
  8634 ;; Registers used:
  8635 ;;		wreg, status,2, status,0
  8636 ;; Tracked objects:
  8637 ;;		On entry : 0/0
  8638 ;;		On exit  : 0/0
  8639 ;;		Unchanged: 0/0
  8640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8641 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8642 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8643 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8644 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8645 ;;Total ram usage:        2 bytes
  8646 ;; Hardware stack levels used: 1
  8647 ;; Hardware stack levels required when called: 13
  8648 ;; This function calls:
  8649 ;;		Nothing
  8650 ;; This function is called by:
  8651 ;;		_INTERRUPT_Initialize
  8652 ;; This function uses a non-reentrant model
  8653 ;;
  8654                           
  8655                           	psect	text9
  8656   00663E                     __ptext9:
  8657                           	callstack 0
  8658   00663E                     _INT2_SetInterruptHandler:
  8659                           	callstack 15
  8660   00663E                     
  8661                           ;mcc_generated_files/system/src/interrupt.c: 176:     INT2_InterruptHandler = InterruptH
      +                          andler;
  8662   00663E  C106  F0EF         	movff	INT2_SetInterruptHandler@InterruptHandler,_INT2_InterruptHandler
  8663   006642  C107  F0F0         	movff	INT2_SetInterruptHandler@InterruptHandler+1,_INT2_InterruptHandler+1
  8664   006646  0012               	return		;funcret
  8665   006648                     __end_of_INT2_SetInterruptHandler:
  8666                           	callstack 0
  8667                           
  8668 ;; *************** function _INT1_SetInterruptHandler *****************
  8669 ;; Defined at:
  8670 ;;		line 149 in file "mcc_generated_files/system/src/interrupt.c"
  8671 ;; Parameters:    Size  Location     Type
  8672 ;;  InterruptHan    2    6[BANK1 ] PTR FTN()void 
  8673 ;;		 -> INT1_DefaultInterruptHandler(1), 
  8674 ;; Auto vars:     Size  Location     Type
  8675 ;;		None
  8676 ;; Return value:  Size  Location     Type
  8677 ;;                  1    wreg      void 
  8678 ;; Registers used:
  8679 ;;		wreg, status,2, status,0
  8680 ;; Tracked objects:
  8681 ;;		On entry : 0/0
  8682 ;;		On exit  : 0/0
  8683 ;;		Unchanged: 0/0
  8684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8685 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8686 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8687 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8688 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8689 ;;Total ram usage:        2 bytes
  8690 ;; Hardware stack levels used: 1
  8691 ;; Hardware stack levels required when called: 13
  8692 ;; This function calls:
  8693 ;;		Nothing
  8694 ;; This function is called by:
  8695 ;;		_INTERRUPT_Initialize
  8696 ;; This function uses a non-reentrant model
  8697 ;;
  8698                           
  8699                           	psect	text10
  8700   006648                     __ptext10:
  8701                           	callstack 0
  8702   006648                     _INT1_SetInterruptHandler:
  8703                           	callstack 15
  8704   006648                     
  8705                           ;mcc_generated_files/system/src/interrupt.c: 150:     INT1_InterruptHandler = InterruptH
      +                          andler;
  8706   006648  C106  F0F1         	movff	INT1_SetInterruptHandler@InterruptHandler,_INT1_InterruptHandler
  8707   00664C  C107  F0F2         	movff	INT1_SetInterruptHandler@InterruptHandler+1,_INT1_InterruptHandler+1
  8708   006650  0012               	return		;funcret
  8709   006652                     __end_of_INT1_SetInterruptHandler:
  8710                           	callstack 0
  8711                           
  8712 ;; *************** function _INT0_SetInterruptHandler *****************
  8713 ;; Defined at:
  8714 ;;		line 123 in file "mcc_generated_files/system/src/interrupt.c"
  8715 ;; Parameters:    Size  Location     Type
  8716 ;;  InterruptHan    2    6[BANK1 ] PTR FTN()void 
  8717 ;;		 -> INT0_DefaultInterruptHandler(1), 
  8718 ;; Auto vars:     Size  Location     Type
  8719 ;;		None
  8720 ;; Return value:  Size  Location     Type
  8721 ;;                  1    wreg      void 
  8722 ;; Registers used:
  8723 ;;		wreg, status,2, status,0
  8724 ;; Tracked objects:
  8725 ;;		On entry : 0/0
  8726 ;;		On exit  : 0/0
  8727 ;;		Unchanged: 0/0
  8728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8729 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8730 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8731 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8732 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8733 ;;Total ram usage:        2 bytes
  8734 ;; Hardware stack levels used: 1
  8735 ;; Hardware stack levels required when called: 13
  8736 ;; This function calls:
  8737 ;;		Nothing
  8738 ;; This function is called by:
  8739 ;;		_INTERRUPT_Initialize
  8740 ;; This function uses a non-reentrant model
  8741 ;;
  8742                           
  8743                           	psect	text11
  8744   006652                     __ptext11:
  8745                           	callstack 0
  8746   006652                     _INT0_SetInterruptHandler:
  8747                           	callstack 15
  8748   006652                     
  8749                           ;mcc_generated_files/system/src/interrupt.c: 124:     INT0_InterruptHandler = InterruptH
      +                          andler;
  8750   006652  C106  F0F3         	movff	INT0_SetInterruptHandler@InterruptHandler,_INT0_InterruptHandler
  8751   006656  C107  F0F4         	movff	INT0_SetInterruptHandler@InterruptHandler+1,_INT0_InterruptHandler+1
  8752   00665A  0012               	return		;funcret
  8753   00665C                     __end_of_INT0_SetInterruptHandler:
  8754                           	callstack 0
  8755                           
  8756 ;; *************** function _CLOCK_Initialize *****************
  8757 ;; Defined at:
  8758 ;;		line 39 in file "mcc_generated_files/system/src/clock.c"
  8759 ;; Parameters:    Size  Location     Type
  8760 ;;		None
  8761 ;; Auto vars:     Size  Location     Type
  8762 ;;		None
  8763 ;; Return value:  Size  Location     Type
  8764 ;;                  1    wreg      void 
  8765 ;; Registers used:
  8766 ;;		wreg, status,2
  8767 ;; Tracked objects:
  8768 ;;		On entry : 0/0
  8769 ;;		On exit  : 0/0
  8770 ;;		Unchanged: 0/0
  8771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8772 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8773 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8774 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8775 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8776 ;;Total ram usage:        0 bytes
  8777 ;; Hardware stack levels used: 1
  8778 ;; Hardware stack levels required when called: 13
  8779 ;; This function calls:
  8780 ;;		Nothing
  8781 ;; This function is called by:
  8782 ;;		_SYSTEM_Initialize
  8783 ;; This function uses a non-reentrant model
  8784 ;;
  8785                           
  8786                           	psect	text12
  8787   0065F8                     __ptext12:
  8788                           	callstack 0
  8789   0065F8                     _CLOCK_Initialize:
  8790                           	callstack 16
  8791   0065F8                     
  8792                           ;mcc_generated_files/system/src/clock.c: 42:     OSCCON1 = (0 << 0x0)
  8793   0065F8  0E60               	movlw	96
  8794   0065FA  0139               	movlb	57	; () banked
  8795   0065FC  6FD9               	movwf	217,b	;volatile
  8796   0065FE                     
  8797                           ; BSR set to: 57
  8798                           ;mcc_generated_files/system/src/clock.c: 44:     OSCCON3 = (0 << 0x6)
  8799   0065FE  6BDB               	clrf	219,b	;volatile
  8800   006600                     
  8801                           ; BSR set to: 57
  8802                           ;mcc_generated_files/system/src/clock.c: 46:     OSCEN = (0 << 0x7)
  8803   006600  6BDD               	clrf	221,b	;volatile
  8804                           
  8805                           ;mcc_generated_files/system/src/clock.c: 52:     OSCFRQ = (8 << 0x0);
  8806   006602  0E08               	movlw	8
  8807   006604  6FDF               	movwf	223,b	;volatile
  8808   006606                     
  8809                           ; BSR set to: 57
  8810                           ;mcc_generated_files/system/src/clock.c: 53:     OSCTUNE = (0 << 0x0);
  8811   006606  6BDE               	clrf	222,b	;volatile
  8812   006608                     
  8813                           ; BSR set to: 57
  8814   006608  0012               	return		;funcret
  8815   00660A                     __end_of_CLOCK_Initialize:
  8816                           	callstack 0
  8817                           
  8818 ;; *************** function _ADC_Initialize *****************
  8819 ;; Defined at:
  8820 ;;		line 47 in file "mcc_generated_files/adc/src/adc.c"
  8821 ;; Parameters:    Size  Location     Type
  8822 ;;		None
  8823 ;; Auto vars:     Size  Location     Type
  8824 ;;		None
  8825 ;; Return value:  Size  Location     Type
  8826 ;;                  1    wreg      void 
  8827 ;; Registers used:
  8828 ;;		wreg, status,2, status,0
  8829 ;; Tracked objects:
  8830 ;;		On entry : 0/0
  8831 ;;		On exit  : 0/0
  8832 ;;		Unchanged: 0/0
  8833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8834 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8835 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8836 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8837 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8838 ;;Total ram usage:        0 bytes
  8839 ;; Hardware stack levels used: 1
  8840 ;; Hardware stack levels required when called: 13
  8841 ;; This function calls:
  8842 ;;		Nothing
  8843 ;; This function is called by:
  8844 ;;		_SYSTEM_Initialize
  8845 ;;		_main
  8846 ;; This function uses a non-reentrant model
  8847 ;;
  8848                           
  8849                           	psect	text13
  8850   005B76                     __ptext13:
  8851                           	callstack 0
  8852   005B76                     _ADC_Initialize:
  8853                           	callstack 16
  8854   005B76                     
  8855                           ;mcc_generated_files/adc/src/adc.c: 49:     ADCON0bits.ADON = 0;
  8856   005B76  013E               	movlb	62	; () banked
  8857   005B78  9FF8               	bcf	248,7,b	;volatile
  8858                           
  8859                           ;mcc_generated_files/adc/src/adc.c: 50:     ADLTHL = (0 << 0x0);
  8860   005B7A  6BDE               	clrf	222,b	;volatile
  8861                           
  8862                           ;mcc_generated_files/adc/src/adc.c: 51:     ADLTHH = (0 << 0x0);
  8863   005B7C  6BDF               	clrf	223,b	;volatile
  8864                           
  8865                           ;mcc_generated_files/adc/src/adc.c: 52:     ADUTHL = (0 << 0x0);
  8866   005B7E  6BE0               	clrf	224,b	;volatile
  8867                           
  8868                           ;mcc_generated_files/adc/src/adc.c: 53:     ADUTHH = (0 << 0x0);
  8869   005B80  6BE1               	clrf	225,b	;volatile
  8870                           
  8871                           ;mcc_generated_files/adc/src/adc.c: 54:     ADSTPTL = (0 << 0x0);
  8872   005B82  6BE4               	clrf	228,b	;volatile
  8873                           
  8874                           ;mcc_generated_files/adc/src/adc.c: 55:     ADSTPTH = (0 << 0x0);
  8875   005B84  6BE5               	clrf	229,b	;volatile
  8876                           
  8877                           ;mcc_generated_files/adc/src/adc.c: 56:     ADACCU = (0 << 0x0);
  8878   005B86  6BEA               	clrf	234,b	;volatile
  8879                           
  8880                           ;mcc_generated_files/adc/src/adc.c: 57:     ADRPT = (0 << 0x0);
  8881   005B88  6BEC               	clrf	236,b	;volatile
  8882                           
  8883                           ;mcc_generated_files/adc/src/adc.c: 58:     ADPCH = (0 << 0x0);
  8884   005B8A  6BF1               	clrf	241,b	;volatile
  8885                           
  8886                           ;mcc_generated_files/adc/src/adc.c: 59:     ADACQL = (0 << 0x0);
  8887   005B8C  6BF3               	clrf	243,b	;volatile
  8888                           
  8889                           ;mcc_generated_files/adc/src/adc.c: 60:     ADACQH = (0 << 0x0);
  8890   005B8E  6BF4               	clrf	244,b	;volatile
  8891                           
  8892                           ;mcc_generated_files/adc/src/adc.c: 61:     ADCP = (0 << 0x7);
  8893   005B90  6BD7               	clrf	215,b	;volatile
  8894                           
  8895                           ;mcc_generated_files/adc/src/adc.c: 62:     ADCAP = (0 << 0x0);
  8896   005B92  6BF5               	clrf	245,b	;volatile
  8897                           
  8898                           ;mcc_generated_files/adc/src/adc.c: 63:     ADPREL = (0 << 0x0);
  8899   005B94  6BF6               	clrf	246,b	;volatile
  8900                           
  8901                           ;mcc_generated_files/adc/src/adc.c: 64:     ADPREH = (0 << 0x0);
  8902   005B96  6BF7               	clrf	247,b	;volatile
  8903                           
  8904                           ;mcc_generated_files/adc/src/adc.c: 65:     ADCON1 = (0 << 0x0)
  8905   005B98  6BF9               	clrf	249,b	;volatile
  8906   005B9A                     
  8907                           ; BSR set to: 62
  8908                           ;mcc_generated_files/adc/src/adc.c: 69:     ADCON2 = (0 << 0x0)
  8909   005B9A  0E18               	movlw	24
  8910   005B9C  6FFA               	movwf	250,b	;volatile
  8911                           
  8912                           ;mcc_generated_files/adc/src/adc.c: 73:     ADCON3 = (0 << 0x0)
  8913   005B9E  0E10               	movlw	16
  8914   005BA0  6FFB               	movwf	251,b	;volatile
  8915   005BA2                     
  8916                           ; BSR set to: 62
  8917                           ;mcc_generated_files/adc/src/adc.c: 76:     ADSTAT =(0 << 0x4);
  8918   005BA2  6BFC               	clrf	252,b	;volatile
  8919   005BA4                     
  8920                           ; BSR set to: 62
  8921                           ;mcc_generated_files/adc/src/adc.c: 77:     ADREF = (0 << 0x0)
  8922   005BA4  6BFD               	clrf	253,b	;volatile
  8923                           
  8924                           ;mcc_generated_files/adc/src/adc.c: 79:     ADCLK = (31 << 0x0);
  8925   005BA6  0E1F               	movlw	31
  8926   005BA8  6FFF               	movwf	255,b	;volatile
  8927   005BAA                     
  8928                           ; BSR set to: 62
  8929                           ;mcc_generated_files/adc/src/adc.c: 80:     ADACT = (0 << 0x0);
  8930   005BAA  6BFE               	clrf	254,b	;volatile
  8931   005BAC                     
  8932                           ; BSR set to: 62
  8933                           ;mcc_generated_files/adc/src/adc.c: 82:     ADC_ConversionDoneCallback = ((void*)0);
  8934   005BAC  0E00               	movlw	0
  8935   005BAE  0100               	movlb	0	; () banked
  8936   005BB0  6FE7               	movwf	_ADC_ConversionDoneCallback& (0+255),b
  8937   005BB2  0E00               	movlw	0
  8938   005BB4  6FE8               	movwf	(_ADC_ConversionDoneCallback+1)& (0+255),b
  8939   005BB6                     
  8940                           ; BSR set to: 0
  8941                           ;mcc_generated_files/adc/src/adc.c: 83:     ADC_ThresholdCallback = ((void*)0);
  8942   005BB6  0E00               	movlw	0
  8943   005BB8  6FE5               	movwf	_ADC_ThresholdCallback& (0+255),b
  8944   005BBA  0E00               	movlw	0
  8945   005BBC  6FE6               	movwf	(_ADC_ThresholdCallback+1)& (0+255),b
  8946   005BBE                     
  8947                           ; BSR set to: 0
  8948                           ;mcc_generated_files/adc/src/adc.c: 84:     adc_busy_status = 0;
  8949   005BBE  6BEC               	clrf	_adc_busy_status& (0+255),b
  8950   005BC0                     
  8951                           ; BSR set to: 0
  8952                           ;mcc_generated_files/adc/src/adc.c: 86:     PIR1bits.ADIF = 0;
  8953   005BC0  0139               	movlb	57	; () banked
  8954   005BC2  95A1               	bcf	161,2,b	;volatile
  8955   005BC4                     
  8956                           ; BSR set to: 57
  8957                           ;mcc_generated_files/adc/src/adc.c: 87:     PIE1bits.ADIE = 0;
  8958   005BC4  9591               	bcf	145,2,b	;volatile
  8959   005BC6                     
  8960                           ; BSR set to: 57
  8961                           ;mcc_generated_files/adc/src/adc.c: 88:     PIR1bits.ADTIF = 0;
  8962   005BC6  97A1               	bcf	161,3,b	;volatile
  8963   005BC8                     
  8964                           ; BSR set to: 57
  8965                           ;mcc_generated_files/adc/src/adc.c: 89:     PIE1bits.ADTIE = 0;
  8966   005BC8  9791               	bcf	145,3,b	;volatile
  8967                           
  8968                           ;mcc_generated_files/adc/src/adc.c: 90:     ADCON0 = (0 << 0x0)
  8969   005BCA  0E84               	movlw	132
  8970   005BCC  013E               	movlb	62	; () banked
  8971   005BCE  6FF8               	movwf	248,b	;volatile
  8972   005BD0                     
  8973                           ; BSR set to: 62
  8974   005BD0  0012               	return		;funcret
  8975   005BD2                     __end_of_ADC_Initialize:
  8976                           	callstack 0
  8977                           
  8978 ;; *************** function _LCD_UpdateMenu *****************
  8979 ;; Defined at:
  8980 ;;		line 104 in file "main.c"
  8981 ;; Parameters:    Size  Location     Type
  8982 ;;		None
  8983 ;; Auto vars:     Size  Location     Type
  8984 ;;  tension         4  208[BANK1 ] float 
  8985 ;;  courant         2  212[BANK1 ] int 
  8986 ;;  buffer         16  192[BANK1 ] unsigned char [16]
  8987 ;; Return value:  Size  Location     Type
  8988 ;;                  1    wreg      void 
  8989 ;; Registers used:
  8990 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8991 ;; Tracked objects:
  8992 ;;		On entry : 0/0
  8993 ;;		On exit  : 0/0
  8994 ;;		Unchanged: 0/0
  8995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8996 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8997 ;;      Locals:         0       0      22       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8998 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8999 ;;      Totals:         0       0      24       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9000 ;;Total ram usage:       24 bytes
  9001 ;; Hardware stack levels used: 1
  9002 ;; Hardware stack levels required when called: 21
  9003 ;; This function calls:
  9004 ;;		_LCD_Char
  9005 ;;		_LCD_Init
  9006 ;;		_LCD_SetCursor
  9007 ;;		_LCD_String
  9008 ;;		___fltol
  9009 ;;		_lire_tension
  9010 ;;		_sprintf
  9011 ;; This function is called by:
  9012 ;;		_main
  9013 ;; This function uses a non-reentrant model
  9014 ;;
  9015                           
  9016                           	psect	text14
  9017   00288E                     __ptext14:
  9018                           	callstack 0
  9019   00288E                     _LCD_UpdateMenu:
  9020                           	callstack 9
  9021   00288E                     
  9022                           ;main.c: 106:     char buffer[16];;main.c: 108:     LCD_Init();
  9023   00288E  ECA6  F031         	call	_LCD_Init	;wreg free
  9024                           
  9025                           ;main.c: 109:     switch (etat_courant) {
  9026   002892  EFE5  F015         	goto	l8238
  9027   002896                     l8120:
  9028                           
  9029                           ; BSR set to: 1
  9030                           ;main.c: 111:             LCD_SetCursor(0,6); LCD_String("Menu");
  9031   002896  0E06               	movlw	6
  9032   002898  6F08               	movwf	LCD_SetCursor@column& (0+255),b
  9033   00289A  0E00               	movlw	0
  9034   00289C  EC5D  F02D         	call	_LCD_SetCursor
  9035   0028A0  0EF2               	movlw	low STR_1
  9036   0028A2  0101               	movlb	1	; () banked
  9037   0028A4  6F08               	movwf	LCD_String@str& (0+255),b
  9038   0028A6  0EFF               	movlw	high STR_1
  9039   0028A8  6F09               	movwf	(LCD_String@str+1)& (0+255),b
  9040   0028AA  EC7A  F02C         	call	_LCD_String	;wreg free
  9041   0028AE                     
  9042                           ;main.c: 112:             LCD_SetCursor(1,0); LCD_String("1.ICLED 2.MESURE");
  9043   0028AE  0E00               	movlw	0
  9044   0028B0  0101               	movlb	1	; () banked
  9045   0028B2  6F08               	movwf	LCD_SetCursor@column& (0+255),b
  9046   0028B4  0E01               	movlw	1
  9047   0028B6  EC5D  F02D         	call	_LCD_SetCursor
  9048   0028BA  0E09               	movlw	low STR_2
  9049   0028BC  0101               	movlb	1	; () banked
  9050   0028BE  6F08               	movwf	LCD_String@str& (0+255),b
  9051   0028C0  0EFF               	movlw	high STR_2
  9052   0028C2  6F09               	movwf	(LCD_String@str+1)& (0+255),b
  9053   0028C4  EC7A  F02C         	call	_LCD_String	;wreg free
  9054   0028C8                     
  9055                           ;main.c: 113:             LCD_SetCursor(2,0); LCD_String("3.INTEN 4.ANIMA");
  9056   0028C8  0E00               	movlw	0
  9057   0028CA  0101               	movlb	1	; () banked
  9058   0028CC  6F08               	movwf	LCD_SetCursor@column& (0+255),b
  9059   0028CE  0E02               	movlw	2
  9060   0028D0  EC5D  F02D         	call	_LCD_SetCursor
  9061   0028D4  0E1A               	movlw	low STR_3
  9062   0028D6  0101               	movlb	1	; () banked
  9063   0028D8  6F08               	movwf	LCD_String@str& (0+255),b
  9064   0028DA  0EFF               	movlw	high STR_3
  9065   0028DC  6F09               	movwf	(LCD_String@str+1)& (0+255),b
  9066   0028DE  EC7A  F02C         	call	_LCD_String	;wreg free
  9067                           
  9068                           ;main.c: 114:             LCD_SetCursor(2,15); LCD_Char(0b11011111);
  9069   0028E2  0E0F               	movlw	15
  9070   0028E4  0101               	movlb	1	; () banked
  9071   0028E6  6F08               	movwf	LCD_SetCursor@column& (0+255),b
  9072   0028E8  0E02               	movlw	2
  9073   0028EA  EC5D  F02D         	call	_LCD_SetCursor
  9074   0028EE  0EDF               	movlw	223
  9075   0028F0  EC26  F032         	call	_LCD_Char
  9076                           
  9077                           ;main.c: 115:             break;
  9078   0028F4  EF2C  F016         	goto	l761
  9079   0028F8                     l8132:
  9080                           
  9081                           ; BSR set to: 1
  9082                           ;main.c: 118:             LCD_SetCursor(0,0); LCD_String("LED:");
  9083   0028F8  0E00               	movlw	0
  9084   0028FA  6F08               	movwf	LCD_SetCursor@column& (0+255),b
  9085   0028FC  0E00               	movlw	0
  9086   0028FE  EC5D  F02D         	call	_LCD_SetCursor
  9087   002902  0EED               	movlw	low STR_4
  9088   002904  0101               	movlb	1	; () banked
  9089   002906  6F08               	movwf	LCD_String@str& (0+255),b
  9090   002908  0EFF               	movlw	high STR_4
  9091   00290A  6F09               	movwf	(LCD_String@str+1)& (0+255),b
  9092   00290C  EC7A  F02C         	call	_LCD_String	;wreg free
  9093   002910                     
  9094                           ;main.c: 119:             LCD_SetCursor(1,0); LCD_String("1.R 2.G 3.B 4.O");
  9095   002910  0E00               	movlw	0
  9096   002912  0101               	movlb	1	; () banked
  9097   002914  6F08               	movwf	LCD_SetCursor@column& (0+255),b
  9098   002916  0E01               	movlw	1
  9099   002918  EC5D  F02D         	call	_LCD_SetCursor
  9100   00291C  0E3A               	movlw	low STR_5
  9101   00291E  0101               	movlb	1	; () banked
  9102   002920  6F08               	movwf	LCD_String@str& (0+255),b
  9103   002922  0EFF               	movlw	high STR_5
  9104   002924  6F09               	movwf	(LCD_String@str+1)& (0+255),b
  9105   002926  EC7A  F02C         	call	_LCD_String	;wreg free
  9106                           
  9107                           ;main.c: 120:             break;
  9108   00292A  EF2C  F016         	goto	l761
  9109   00292E                     l8138:
  9110                           
  9111                           ; BSR set to: 1
  9112                           ;main.c: 123:             LCD_SetCursor(0,0); LCD_String("Mesure courant");
  9113   00292E  0E00               	movlw	0
  9114   002930  6F08               	movwf	LCD_SetCursor@column& (0+255),b
  9115   002932  0E00               	movlw	0
  9116   002934  EC5D  F02D         	call	_LCD_SetCursor
  9117   002938  0E87               	movlw	low STR_6
  9118   00293A  0101               	movlb	1	; () banked
  9119   00293C  6F08               	movwf	LCD_String@str& (0+255),b
  9120   00293E  0EFF               	movlw	high STR_6
  9121   002940  6F09               	movwf	(LCD_String@str+1)& (0+255),b
  9122   002942  EC7A  F02C         	call	_LCD_String	;wreg free
  9123                           
  9124                           ;main.c: 124:             break;
  9125   002946  EF2C  F016         	goto	l761
  9126   00294A                     l8142:
  9127                           
  9128                           ; BSR set to: 1
  9129                           ;main.c: 127:             LCD_SetCursor(0,0); LCD_String("Couleur: ROUGE");
  9130   00294A  0E00               	movlw	0
  9131   00294C  6F08               	movwf	LCD_SetCursor@column& (0+255),b
  9132   00294E  0E00               	movlw	0
  9133   002950  EC5D  F02D         	call	_LCD_SetCursor
  9134   002954  0E69               	movlw	low STR_7
  9135   002956  0101               	movlb	1	; () banked
  9136   002958  6F08               	movwf	LCD_String@str& (0+255),b
  9137   00295A  0EFF               	movlw	high STR_7
  9138   00295C  6F09               	movwf	(LCD_String@str+1)& (0+255),b
  9139   00295E  EC7A  F02C         	call	_LCD_String	;wreg free
  9140   002962                     
  9141                           ;main.c: 128:             LCD_SetCursor(1,15); LCD_Char(0b01111110);
  9142   002962  0E0F               	movlw	15
  9143   002964  0101               	movlb	1	; () banked
  9144   002966  6F08               	movwf	LCD_SetCursor@column& (0+255),b
  9145   002968  0E01               	movlw	1
  9146   00296A  EC5D  F02D         	call	_LCD_SetCursor
  9147   00296E  0E7E               	movlw	126
  9148   002970  EC26  F032         	call	_LCD_Char
  9149                           
  9150                           ;main.c: 129:             break;
  9151   002974  EF2C  F016         	goto	l761
  9152   002978                     l8150:
  9153                           
  9154                           ; BSR set to: 1
  9155                           ;main.c: 132:             LCD_SetCursor(0,0); LCD_String("Couleur: VERT");
  9156   002978  0E00               	movlw	0
  9157   00297A  6F08               	movwf	LCD_SetCursor@column& (0+255),b
  9158   00297C  0E00               	movlw	0
  9159   00297E  EC5D  F02D         	call	_LCD_SetCursor
  9160   002982  0EB2               	movlw	low STR_8
  9161   002984  0101               	movlb	1	; () banked
  9162   002986  6F08               	movwf	LCD_String@str& (0+255),b
  9163   002988  0EFF               	movlw	high STR_8
  9164   00298A  6F09               	movwf	(LCD_String@str+1)& (0+255),b
  9165   00298C  EC7A  F02C         	call	_LCD_String	;wreg free
  9166   002990                     
  9167                           ;main.c: 133:             LCD_SetCursor(1,15); LCD_Char(0b01111110);
  9168   002990  0E0F               	movlw	15
  9169   002992  0101               	movlb	1	; () banked
  9170   002994  6F08               	movwf	LCD_SetCursor@column& (0+255),b
  9171   002996  0E01               	movlw	1
  9172   002998  EC5D  F02D         	call	_LCD_SetCursor
  9173   00299C  0E7E               	movlw	126
  9174   00299E  EC26  F032         	call	_LCD_Char
  9175                           
  9176                           ;main.c: 134:             break;
  9177   0029A2  EF2C  F016         	goto	l761
  9178   0029A6                     l8158:
  9179                           
  9180                           ; BSR set to: 1
  9181                           ;main.c: 137:             LCD_SetCursor(0,0); LCD_String("Couleur: BLEU");
  9182   0029A6  0E00               	movlw	0
  9183   0029A8  6F08               	movwf	LCD_SetCursor@column& (0+255),b
  9184   0029AA  0E00               	movlw	0
  9185   0029AC  EC5D  F02D         	call	_LCD_SetCursor
  9186   0029B0  0EC0               	movlw	low STR_9
  9187   0029B2  0101               	movlb	1	; () banked
  9188   0029B4  6F08               	movwf	LCD_String@str& (0+255),b
  9189   0029B6  0EFF               	movlw	high STR_9
  9190   0029B8  6F09               	movwf	(LCD_String@str+1)& (0+255),b
  9191   0029BA  EC7A  F02C         	call	_LCD_String	;wreg free
  9192   0029BE                     
  9193                           ;main.c: 138:             LCD_SetCursor(1,15); LCD_Char(0b01111110);
  9194   0029BE  0E0F               	movlw	15
  9195   0029C0  0101               	movlb	1	; () banked
  9196   0029C2  6F08               	movwf	LCD_SetCursor@column& (0+255),b
  9197   0029C4  0E01               	movlw	1
  9198   0029C6  EC5D  F02D         	call	_LCD_SetCursor
  9199   0029CA  0E7E               	movlw	126
  9200   0029CC  EC26  F032         	call	_LCD_Char
  9201                           
  9202                           ;main.c: 139:             break;
  9203   0029D0  EF2C  F016         	goto	l761
  9204   0029D4                     l8166:
  9205                           
  9206                           ; BSR set to: 1
  9207                           ;main.c: 142:             LCD_SetCursor(0,0); LCD_String("Couleur: ORANGE");
  9208   0029D4  0E00               	movlw	0
  9209   0029D6  6F08               	movwf	LCD_SetCursor@column& (0+255),b
  9210   0029D8  0E00               	movlw	0
  9211   0029DA  EC5D  F02D         	call	_LCD_SetCursor
  9212   0029DE  0E2A               	movlw	low STR_10
  9213   0029E0  0101               	movlb	1	; () banked
  9214   0029E2  6F08               	movwf	LCD_String@str& (0+255),b
  9215   0029E4  0EFF               	movlw	high STR_10
  9216   0029E6  6F09               	movwf	(LCD_String@str+1)& (0+255),b
  9217   0029E8  EC7A  F02C         	call	_LCD_String	;wreg free
  9218   0029EC                     
  9219                           ;main.c: 143:             LCD_SetCursor(1,15); LCD_Char(0b01111110);
  9220   0029EC  0E0F               	movlw	15
  9221   0029EE  0101               	movlb	1	; () banked
  9222   0029F0  6F08               	movwf	LCD_SetCursor@column& (0+255),b
  9223   0029F2  0E01               	movlw	1
  9224   0029F4  EC5D  F02D         	call	_LCD_SetCursor
  9225   0029F8  0E7E               	movlw	126
  9226   0029FA  EC26  F032         	call	_LCD_Char
  9227                           
  9228                           ;main.c: 144:             break;
  9229   0029FE  EF2C  F016         	goto	l761
  9230   002A02                     l8174:
  9231                           
  9232                           ; BSR set to: 1
  9233                           ;main.c: 147:             LCD_SetCursor(0,0); LCD_String("Couleur: JAUNE");
  9234   002A02  0E00               	movlw	0
  9235   002A04  6F08               	movwf	LCD_SetCursor@column& (0+255),b
  9236   002A06  0E00               	movlw	0
  9237   002A08  EC5D  F02D         	call	_LCD_SetCursor
  9238   002A0C  0E78               	movlw	low STR_11
  9239   002A0E  0101               	movlb	1	; () banked
  9240   002A10  6F08               	movwf	LCD_String@str& (0+255),b
  9241   002A12  0EFF               	movlw	high STR_11
  9242   002A14  6F09               	movwf	(LCD_String@str+1)& (0+255),b
  9243   002A16  EC7A  F02C         	call	_LCD_String	;wreg free
  9244   002A1A                     
  9245                           ;main.c: 148:             LCD_SetCursor(1,15); LCD_Char(0b01111110);
  9246   002A1A  0E0F               	movlw	15
  9247   002A1C  0101               	movlb	1	; () banked
  9248   002A1E  6F08               	movwf	LCD_SetCursor@column& (0+255),b
  9249   002A20  0E01               	movlw	1
  9250   002A22  EC5D  F02D         	call	_LCD_SetCursor
  9251   002A26  0E7E               	movlw	126
  9252   002A28  EC26  F032         	call	_LCD_Char
  9253                           
  9254                           ;main.c: 149:             break;
  9255   002A2C  EF2C  F016         	goto	l761
  9256   002A30                     l8182:
  9257                           
  9258                           ; BSR set to: 1
  9259                           ;main.c: 152:             LCD_SetCursor(0,0); LCD_String("Couleur: VIOLET");
  9260   002A30  0E00               	movlw	0
  9261   002A32  6F08               	movwf	LCD_SetCursor@column& (0+255),b
  9262   002A34  0E00               	movlw	0
  9263   002A36  EC5D  F02D         	call	_LCD_SetCursor
  9264   002A3A  0E4A               	movlw	low STR_12
  9265   002A3C  0101               	movlb	1	; () banked
  9266   002A3E  6F08               	movwf	LCD_String@str& (0+255),b
  9267   002A40  0EFF               	movlw	high STR_12
  9268   002A42  6F09               	movwf	(LCD_String@str+1)& (0+255),b
  9269   002A44  EC7A  F02C         	call	_LCD_String	;wreg free
  9270   002A48                     
  9271                           ;main.c: 153:             LCD_SetCursor(1,15); LCD_Char(0b01111110);
  9272   002A48  0E0F               	movlw	15
  9273   002A4A  0101               	movlb	1	; () banked
  9274   002A4C  6F08               	movwf	LCD_SetCursor@column& (0+255),b
  9275   002A4E  0E01               	movlw	1
  9276   002A50  EC5D  F02D         	call	_LCD_SetCursor
  9277   002A54  0E7E               	movlw	126
  9278   002A56  EC26  F032         	call	_LCD_Char
  9279                           
  9280                           ;main.c: 154:             break;
  9281   002A5A  EF2C  F016         	goto	l761
  9282   002A5E                     l8190:
  9283                           
  9284                           ; BSR set to: 1
  9285                           ;main.c: 157:             LCD_SetCursor(0,0); LCD_String("Couleur: ROSE");
  9286   002A5E  0E00               	movlw	0
  9287   002A60  6F08               	movwf	LCD_SetCursor@column& (0+255),b
  9288   002A62  0E00               	movlw	0
  9289   002A64  EC5D  F02D         	call	_LCD_SetCursor
  9290   002A68  0EA4               	movlw	low STR_13
  9291   002A6A  0101               	movlb	1	; () banked
  9292   002A6C  6F08               	movwf	LCD_String@str& (0+255),b
  9293   002A6E  0EFF               	movlw	high STR_13
  9294   002A70  6F09               	movwf	(LCD_String@str+1)& (0+255),b
  9295   002A72  EC7A  F02C         	call	_LCD_String	;wreg free
  9296   002A76                     
  9297                           ;main.c: 158:             LCD_SetCursor(1,15); LCD_Char(0b01111110);
  9298   002A76  0E0F               	movlw	15
  9299   002A78  0101               	movlb	1	; () banked
  9300   002A7A  6F08               	movwf	LCD_SetCursor@column& (0+255),b
  9301   002A7C  0E01               	movlw	1
  9302   002A7E  EC5D  F02D         	call	_LCD_SetCursor
  9303   002A82  0E7E               	movlw	126
  9304   002A84  EC26  F032         	call	_LCD_Char
  9305                           
  9306                           ;main.c: 159:             break;
  9307   002A88  EF2C  F016         	goto	l761
  9308   002A8C                     l8198:
  9309                           
  9310                           ; BSR set to: 1
  9311                           ;main.c: 162:             LCD_SetCursor(0,0); LCD_String("Couleur: BLANC");
  9312   002A8C  0E00               	movlw	0
  9313   002A8E  6F08               	movwf	LCD_SetCursor@column& (0+255),b
  9314   002A90  0E00               	movlw	0
  9315   002A92  EC5D  F02D         	call	_LCD_SetCursor
  9316   002A96  0E5A               	movlw	low STR_14
  9317   002A98  0101               	movlb	1	; () banked
  9318   002A9A  6F08               	movwf	LCD_String@str& (0+255),b
  9319   002A9C  0EFF               	movlw	high STR_14
  9320   002A9E  6F09               	movwf	(LCD_String@str+1)& (0+255),b
  9321   002AA0  EC7A  F02C         	call	_LCD_String	;wreg free
  9322   002AA4                     
  9323                           ;main.c: 163:             LCD_SetCursor(1,15); LCD_Char(0b01111110);
  9324   002AA4  0E0F               	movlw	15
  9325   002AA6  0101               	movlb	1	; () banked
  9326   002AA8  6F08               	movwf	LCD_SetCursor@column& (0+255),b
  9327   002AAA  0E01               	movlw	1
  9328   002AAC  EC5D  F02D         	call	_LCD_SetCursor
  9329   002AB0  0E7E               	movlw	126
  9330   002AB2  EC26  F032         	call	_LCD_Char
  9331                           
  9332                           ;main.c: 164:             break;
  9333   002AB6  EF2C  F016         	goto	l761
  9334   002ABA                     l8206:
  9335                           
  9336                           ; BSR set to: 1
  9337                           ;main.c: 171:             LCD_SetCursor(0,0); LCD_String("ETEINDRE");
  9338   002ABA  0E00               	movlw	0
  9339   002ABC  6F08               	movwf	LCD_SetCursor@column& (0+255),b
  9340   002ABE  0E00               	movlw	0
  9341   002AC0  EC5D  F02D         	call	_LCD_SetCursor
  9342   002AC4  0ECE               	movlw	low STR_15
  9343   002AC6  0101               	movlb	1	; () banked
  9344   002AC8  6F08               	movwf	LCD_String@str& (0+255),b
  9345   002ACA  0EFF               	movlw	high STR_15
  9346   002ACC  6F09               	movwf	(LCD_String@str+1)& (0+255),b
  9347   002ACE  EC7A  F02C         	call	_LCD_String	;wreg free
  9348   002AD2                     
  9349                           ;main.c: 172:             LCD_SetCursor(1,15); LCD_Char(0b01111111);
  9350   002AD2  0E0F               	movlw	15
  9351   002AD4  0101               	movlb	1	; () banked
  9352   002AD6  6F08               	movwf	LCD_SetCursor@column& (0+255),b
  9353   002AD8  0E01               	movlw	1
  9354   002ADA  EC5D  F02D         	call	_LCD_SetCursor
  9355   002ADE  0E7F               	movlw	127
  9356   002AE0  EC26  F032         	call	_LCD_Char
  9357                           
  9358                           ;main.c: 173:             break;
  9359   002AE4  EF2C  F016         	goto	l761
  9360   002AE8                     l8214:
  9361                           
  9362                           ; BSR set to: 1
  9363                           ;main.c: 176:             LCD_SetCursor(0,0);
  9364   002AE8  0E00               	movlw	0
  9365   002AEA  6F08               	movwf	LCD_SetCursor@column& (0+255),b
  9366   002AEC  0E00               	movlw	0
  9367   002AEE  EC5D  F02D         	call	_LCD_SetCursor
  9368   002AF2                     
  9369                           ;main.c: 177:             LCD_String("V_Iled:");
  9370   002AF2  0ED7               	movlw	low STR_16
  9371   002AF4  0101               	movlb	1	; () banked
  9372   002AF6  6F08               	movwf	LCD_String@str& (0+255),b
  9373   002AF8  0EFF               	movlw	high STR_16
  9374   002AFA  6F09               	movwf	(LCD_String@str+1)& (0+255),b
  9375   002AFC  EC7A  F02C         	call	_LCD_String	;wreg free
  9376   002B00                     
  9377                           ;main.c: 178:             LCD_SetCursor(1, 0);
  9378   002B00  0E00               	movlw	0
  9379   002B02  0101               	movlb	1	; () banked
  9380   002B04  6F08               	movwf	LCD_SetCursor@column& (0+255),b
  9381   002B06  0E01               	movlw	1
  9382   002B08  EC5D  F02D         	call	_LCD_SetCursor
  9383   002B0C                     
  9384                           ;main.c: 179:             float tension = lire_tension();
  9385   002B0C  EC9A  F02B         	call	_lire_tension	;wreg free
  9386   002B10  C146  F1D0         	movff	?_lire_tension,LCD_UpdateMenu@tension
  9387   002B14  C147  F1D1         	movff	?_lire_tension+1,LCD_UpdateMenu@tension+1
  9388   002B18  C148  F1D2         	movff	?_lire_tension+2,LCD_UpdateMenu@tension+2
  9389   002B1C  C149  F1D3         	movff	?_lire_tension+3,LCD_UpdateMenu@tension+3
  9390   002B20                     
  9391                           ;main.c: 180:             sprintf(buffer, "%.2f V", tension);
  9392   002B20  0EC0               	movlw	low LCD_UpdateMenu@buffer
  9393   002B22  0101               	movlb	1	; () banked
  9394   002B24  6FA9               	movwf	sprintf@s& (0+255),b
  9395   002B26  0E01               	movlw	high LCD_UpdateMenu@buffer
  9396   002B28  6FAA               	movwf	(sprintf@s+1)& (0+255),b
  9397   002B2A  0EE6               	movlw	low STR_17
  9398   002B2C  6FAB               	movwf	sprintf@fmt& (0+255),b
  9399   002B2E  0EFF               	movlw	high STR_17
  9400   002B30  6FAC               	movwf	(sprintf@fmt+1)& (0+255),b
  9401   002B32  C1D0  F1AD         	movff	LCD_UpdateMenu@tension,?_sprintf+4
  9402   002B36  C1D1  F1AE         	movff	LCD_UpdateMenu@tension+1,?_sprintf+5
  9403   002B3A  C1D2  F1AF         	movff	LCD_UpdateMenu@tension+2,?_sprintf+6
  9404   002B3E  C1D3  F1B0         	movff	LCD_UpdateMenu@tension+3,?_sprintf+7
  9405   002B42  EC48  F02F         	call	_sprintf	;wreg free
  9406   002B46                     
  9407                           ;main.c: 181:             LCD_String(buffer);
  9408   002B46  0EC0               	movlw	low LCD_UpdateMenu@buffer
  9409   002B48  0101               	movlb	1	; () banked
  9410   002B4A  6F08               	movwf	LCD_String@str& (0+255),b
  9411   002B4C  0E01               	movlw	high LCD_UpdateMenu@buffer
  9412   002B4E  6F09               	movwf	(LCD_String@str+1)& (0+255),b
  9413   002B50  EC7A  F02C         	call	_LCD_String	;wreg free
  9414   002B54                     
  9415                           ;main.c: 182:             LCD_SetCursor(2,0);
  9416   002B54  0E00               	movlw	0
  9417   002B56  0101               	movlb	1	; () banked
  9418   002B58  6F08               	movwf	LCD_SetCursor@column& (0+255),b
  9419   002B5A  0E02               	movlw	2
  9420   002B5C  EC5D  F02D         	call	_LCD_SetCursor
  9421   002B60                     
  9422                           ;main.c: 183:             LCD_String("Courent leds:");
  9423   002B60  0E96               	movlw	low STR_18
  9424   002B62  0101               	movlb	1	; () banked
  9425   002B64  6F08               	movwf	LCD_String@str& (0+255),b
  9426   002B66  0EFF               	movlw	high STR_18
  9427   002B68  6F09               	movwf	(LCD_String@str+1)& (0+255),b
  9428   002B6A  EC7A  F02C         	call	_LCD_String	;wreg free
  9429   002B6E                     
  9430                           ;main.c: 184:             LCD_SetCursor(3,0);
  9431   002B6E  0E00               	movlw	0
  9432   002B70  0101               	movlb	1	; () banked
  9433   002B72  6F08               	movwf	LCD_SetCursor@column& (0+255),b
  9434   002B74  0E03               	movlw	3
  9435   002B76  EC5D  F02D         	call	_LCD_SetCursor
  9436   002B7A                     
  9437                           ;main.c: 185:             int courant = lire_tension() ;
  9438   002B7A  EC9A  F02B         	call	_lire_tension	;wreg free
  9439   002B7E  C146  F150         	movff	?_lire_tension,___fltol@f1
  9440   002B82  C147  F151         	movff	?_lire_tension+1,___fltol@f1+1
  9441   002B86  C148  F152         	movff	?_lire_tension+2,___fltol@f1+2
  9442   002B8A  C149  F153         	movff	?_lire_tension+3,___fltol@f1+3
  9443   002B8E  ECBE  F022         	call	___fltol	;wreg free
  9444   002B92  C150  F1D4         	movff	?___fltol,LCD_UpdateMenu@courant
  9445   002B96  C151  F1D5         	movff	?___fltol+1,LCD_UpdateMenu@courant+1
  9446   002B9A                     
  9447                           ;main.c: 186:             sprintf(buffer, "%.3e A", courant);
  9448   002B9A  0EC0               	movlw	low LCD_UpdateMenu@buffer
  9449   002B9C  0101               	movlb	1	; () banked
  9450   002B9E  6FA9               	movwf	sprintf@s& (0+255),b
  9451   002BA0  0E01               	movlw	high LCD_UpdateMenu@buffer
  9452   002BA2  6FAA               	movwf	(sprintf@s+1)& (0+255),b
  9453   002BA4  0EDF               	movlw	low STR_19
  9454   002BA6  6FAB               	movwf	sprintf@fmt& (0+255),b
  9455   002BA8  0EFF               	movlw	high STR_19
  9456   002BAA  6FAC               	movwf	(sprintf@fmt+1)& (0+255),b
  9457   002BAC  C1D4  F1AD         	movff	LCD_UpdateMenu@courant,?_sprintf+4
  9458   002BB0  C1D5  F1AE         	movff	LCD_UpdateMenu@courant+1,?_sprintf+5
  9459   002BB4  EC48  F02F         	call	_sprintf	;wreg free
  9460                           
  9461                           ;main.c: 187:             LCD_String(buffer);
  9462   002BB8  0EC0               	movlw	low LCD_UpdateMenu@buffer
  9463   002BBA  0101               	movlb	1	; () banked
  9464   002BBC  6F08               	movwf	LCD_String@str& (0+255),b
  9465   002BBE  0E01               	movlw	high LCD_UpdateMenu@buffer
  9466   002BC0  6F09               	movwf	(LCD_String@str+1)& (0+255),b
  9467   002BC2  EC7A  F02C         	call	_LCD_String	;wreg free
  9468                           
  9469                           ;main.c: 189:             break;
  9470   002BC6  EF2C  F016         	goto	l761
  9471   002BCA                     l8238:
  9472   002BCA  0100               	movlb	0	; () banked
  9473   002BCC  51EB               	movf	_etat_courant& (0+255),w,b
  9474   002BCE  0101               	movlb	1	; () banked
  9475   002BD0  6FBE               	movwf	??_LCD_UpdateMenu& (0+255),b
  9476   002BD2  6BBF               	clrf	(??_LCD_UpdateMenu+1)& (0+255),b
  9477                           
  9478                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9479                           ; Switch size 1, requested type "simple"
  9480                           ; Number of cases is 1, Range of values is 0 to 0
  9481                           ; switch strategies available:
  9482                           ; Name         Instructions Cycles
  9483                           ; simple_byte            4     3 (average)
  9484                           ;	Chosen strategy is simple_byte
  9485   002BD4  51BF               	movf	(??_LCD_UpdateMenu+1)& (0+255),w,b
  9486   002BD6  0A00               	xorlw	0	; case 0
  9487   002BD8  B4D8               	btfsc	status,2,c
  9488   002BDA  EFF1  F015         	goto	l8834
  9489   002BDE  EF2C  F016         	goto	l761
  9490   002BE2                     l8834:
  9491                           
  9492                           ; BSR set to: 1
  9493                           ; Switch size 1, requested type "simple"
  9494                           ; Number of cases is 14, Range of values is 0 to 13
  9495                           ; switch strategies available:
  9496                           ; Name         Instructions Cycles
  9497                           ; simple_byte           43    22 (average)
  9498                           ;	Chosen strategy is simple_byte
  9499   002BE2  51BE               	movf	??_LCD_UpdateMenu& (0+255),w,b
  9500   002BE4  0A00               	xorlw	0	; case 0
  9501   002BE6  B4D8               	btfsc	status,2,c
  9502   002BE8  EF4B  F014         	goto	l8120
  9503   002BEC  0A01               	xorlw	1	; case 1
  9504   002BEE  B4D8               	btfsc	status,2,c
  9505   002BF0  EF7C  F014         	goto	l8132
  9506   002BF4  0A03               	xorlw	3	; case 2
  9507   002BF6  B4D8               	btfsc	status,2,c
  9508   002BF8  EF97  F014         	goto	l8138
  9509   002BFC  0A01               	xorlw	1	; case 3
  9510   002BFE  B4D8               	btfsc	status,2,c
  9511   002C00  EF2C  F016         	goto	l761
  9512   002C04  0A07               	xorlw	7	; case 4
  9513   002C06  B4D8               	btfsc	status,2,c
  9514   002C08  EFA5  F014         	goto	l8142
  9515   002C0C  0A01               	xorlw	1	; case 5
  9516   002C0E  B4D8               	btfsc	status,2,c
  9517   002C10  EFBC  F014         	goto	l8150
  9518   002C14  0A03               	xorlw	3	; case 6
  9519   002C16  B4D8               	btfsc	status,2,c
  9520   002C18  EFD3  F014         	goto	l8158
  9521   002C1C  0A01               	xorlw	1	; case 7
  9522   002C1E  B4D8               	btfsc	status,2,c
  9523   002C20  EFEA  F014         	goto	l8166
  9524   002C24  0A0F               	xorlw	15	; case 8
  9525   002C26  B4D8               	btfsc	status,2,c
  9526   002C28  EF01  F015         	goto	l8174
  9527   002C2C  0A01               	xorlw	1	; case 9
  9528   002C2E  B4D8               	btfsc	status,2,c
  9529   002C30  EF18  F015         	goto	l8182
  9530   002C34  0A03               	xorlw	3	; case 10
  9531   002C36  B4D8               	btfsc	status,2,c
  9532   002C38  EF2F  F015         	goto	l8190
  9533   002C3C  0A01               	xorlw	1	; case 11
  9534   002C3E  B4D8               	btfsc	status,2,c
  9535   002C40  EF46  F015         	goto	l8198
  9536   002C44  0A07               	xorlw	7	; case 12
  9537   002C46  B4D8               	btfsc	status,2,c
  9538   002C48  EF5D  F015         	goto	l8206
  9539   002C4C  0A01               	xorlw	1	; case 13
  9540   002C4E  B4D8               	btfsc	status,2,c
  9541   002C50  EF74  F015         	goto	l8214
  9542   002C54  EF2C  F016         	goto	l761
  9543   002C58                     l761:
  9544   002C58  0012               	return		;funcret
  9545   002C5A                     __end_of_LCD_UpdateMenu:
  9546                           	callstack 0
  9547                           
  9548 ;; *************** function _sprintf *****************
  9549 ;; Defined at:
  9550 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\nf_sprintf.c"
  9551 ;; Parameters:    Size  Location     Type
  9552 ;;  s               2  169[BANK1 ] PTR unsigned char 
  9553 ;;		 -> LCD_UpdateMenu@buffer(16), 
  9554 ;;  fmt             2  171[BANK1 ] PTR const unsigned char 
  9555 ;;		 -> STR_19(7), STR_17(7), 
  9556 ;; Auto vars:     Size  Location     Type
  9557 ;;  f              11  179[BANK1 ] struct _IO_FILE
  9558 ;;  ap              2  177[BANK1 ] PTR void [1]
  9559 ;;		 -> ?_sprintf(2), 
  9560 ;;  ret             2    0        int 
  9561 ;; Return value:  Size  Location     Type
  9562 ;;                  2  169[BANK1 ] int 
  9563 ;; Registers used:
  9564 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9565 ;; Tracked objects:
  9566 ;;		On entry : 0/0
  9567 ;;		On exit  : 0/0
  9568 ;;		Unchanged: 0/0
  9569 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9570 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9571 ;;      Locals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9572 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9573 ;;      Totals:         0       0      21       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9574 ;;Total ram usage:       21 bytes
  9575 ;; Hardware stack levels used: 1
  9576 ;; Hardware stack levels required when called: 20
  9577 ;; This function calls:
  9578 ;;		_vfprintf
  9579 ;; This function is called by:
  9580 ;;		_LCD_UpdateMenu
  9581 ;; This function uses a non-reentrant model
  9582 ;;
  9583                           
  9584                           	psect	text15
  9585   005E90                     __ptext15:
  9586                           	callstack 0
  9587   005E90                     _sprintf:
  9588                           	callstack 9
  9589   005E90  0EAD               	movlw	low (?_sprintf+4)
  9590   005E92  0101               	movlb	1	; () banked
  9591   005E94  6FB1               	movwf	sprintf@ap& (0+255),b
  9592   005E96  0E01               	movlw	high (?_sprintf+4)
  9593   005E98  6FB2               	movwf	(sprintf@ap+1)& (0+255),b
  9594   005E9A  C1A9  F1B3         	movff	sprintf@s,sprintf@f
  9595   005E9E  C1AA  F1B4         	movff	sprintf@s+1,sprintf@f+1
  9596   005EA2                     
  9597                           ; BSR set to: 1
  9598   005EA2  0E00               	movlw	0
  9599   005EA4  6FB6               	movwf	(sprintf@f+3)& (0+255),b
  9600   005EA6  0E00               	movlw	0
  9601   005EA8  6FB5               	movwf	(sprintf@f+2)& (0+255),b
  9602   005EAA                     
  9603                           ; BSR set to: 1
  9604   005EAA  0E00               	movlw	0
  9605   005EAC  6FBD               	movwf	(sprintf@f+10)& (0+255),b
  9606   005EAE  0E00               	movlw	0
  9607   005EB0  6FBC               	movwf	(sprintf@f+9)& (0+255),b
  9608   005EB2                     
  9609                           ; BSR set to: 1
  9610   005EB2  0EB3               	movlw	low sprintf@f
  9611   005EB4  6FA1               	movwf	vfprintf@fp& (0+255),b
  9612   005EB6  0E01               	movlw	high sprintf@f
  9613   005EB8  6FA2               	movwf	(vfprintf@fp+1)& (0+255),b
  9614   005EBA  C1AB  F1A3         	movff	sprintf@fmt,vfprintf@fmt
  9615   005EBE  C1AC  F1A4         	movff	sprintf@fmt+1,vfprintf@fmt+1
  9616   005EC2  0EB1               	movlw	low sprintf@ap
  9617   005EC4  6FA5               	movwf	vfprintf@ap& (0+255),b
  9618   005EC6  0E01               	movlw	high sprintf@ap
  9619   005EC8  6FA6               	movwf	(vfprintf@ap+1)& (0+255),b
  9620   005ECA  EC44  F02E         	call	_vfprintf	;wreg free
  9621   005ECE  0101               	movlb	1	; () banked
  9622   005ED0  51B5               	movf	(sprintf@f+2)& (0+255),w,b
  9623   005ED2  25A9               	addwf	sprintf@s& (0+255),w,b
  9624   005ED4  6ED9               	movwf	fsr2l,c
  9625   005ED6  51B6               	movf	(sprintf@f+3)& (0+255),w,b
  9626   005ED8  21AA               	addwfc	(sprintf@s+1)& (0+255),w,b
  9627   005EDA  6EDA               	movwf	fsr2h,c
  9628   005EDC  6ADF               	clrf	indf2,c
  9629   005EDE                     
  9630                           ; BSR set to: 1
  9631   005EDE  0012               	return		;funcret
  9632   005EE0                     __end_of_sprintf:
  9633                           	callstack 0
  9634                           
  9635 ;; *************** function _vfprintf *****************
  9636 ;; Defined at:
  9637 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  9638 ;; Parameters:    Size  Location     Type
  9639 ;;  fp              2  161[BANK1 ] PTR struct _IO_FILE
  9640 ;;		 -> sprintf@f(11), 
  9641 ;;  fmt             2  163[BANK1 ] PTR const unsigned char 
  9642 ;;		 -> STR_19(7), STR_17(7), 
  9643 ;;  ap              2  165[BANK1 ] PTR PTR void 
  9644 ;;		 -> sprintf@ap(2), 
  9645 ;; Auto vars:     Size  Location     Type
  9646 ;;  cfmt            2  167[BANK1 ] PTR unsigned char 
  9647 ;;		 -> STR_19(7), STR_17(7), 
  9648 ;; Return value:  Size  Location     Type
  9649 ;;                  2  161[BANK1 ] int 
  9650 ;; Registers used:
  9651 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9652 ;; Tracked objects:
  9653 ;;		On entry : 0/0
  9654 ;;		On exit  : 0/0
  9655 ;;		Unchanged: 0/0
  9656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9657 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9658 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9659 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9660 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9661 ;;Total ram usage:        8 bytes
  9662 ;; Hardware stack levels used: 1
  9663 ;; Hardware stack levels required when called: 19
  9664 ;; This function calls:
  9665 ;;		_vfpfcnvrt
  9666 ;; This function is called by:
  9667 ;;		_sprintf
  9668 ;; This function uses a non-reentrant model
  9669 ;;
  9670                           
  9671                           	psect	text16
  9672   005C88                     __ptext16:
  9673                           	callstack 0
  9674   005C88                     _vfprintf:
  9675                           	callstack 9
  9676   005C88                     
  9677                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v3.00\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  9678   005C88  C1A3  F1A7         	movff	vfprintf@fmt,vfprintf@cfmt
  9679   005C8C  C1A4  F1A8         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  9680                           
  9681                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  9682   005C90  EF59  F02E         	goto	l7858
  9683   005C94                     l7856:
  9684                           
  9685                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  9686   005C94  C1A1  F192         	movff	vfprintf@fp,vfpfcnvrt@fp
  9687   005C98  C1A2  F193         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  9688   005C9C  0EA7               	movlw	low vfprintf@cfmt
  9689   005C9E  0101               	movlb	1	; () banked
  9690   005CA0  6F94               	movwf	vfpfcnvrt@fmt& (0+255),b
  9691   005CA2  0E01               	movlw	high vfprintf@cfmt
  9692   005CA4  6F95               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  9693   005CA6  C1A5  F196         	movff	vfprintf@ap,vfpfcnvrt@ap
  9694   005CAA  C1A6  F197         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  9695   005CAE  EC7C  F01B         	call	_vfpfcnvrt	;wreg free
  9696   005CB2                     l7858:
  9697                           
  9698                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  9699   005CB2  0060  F69F  FFF6   	movff	vfprintf@cfmt,tblptrl
  9700   005CB8  0060  F6A3  FFF7   	movff	vfprintf@cfmt+1,tblptrh
  9701   005CBE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9702   005CBE  6AF8               	clrf	tblptru,c
  9703   005CC0                     	endif
  9704   005CC0                     	if	0	;tblptru may be non-zero
  9705   005CC0                     	endif
  9706   005CC0  0008               	tblrd		*
  9707   005CC2  50F5               	movf	tablat,w,c
  9708   005CC4  0900               	iorlw	0
  9709   005CC6  A4D8               	btfss	status,2,c
  9710   005CC8  EF68  F02E         	goto	u8581
  9711   005CCC  EF6A  F02E         	goto	u8580
  9712   005CD0                     u8581:
  9713   005CD0  EF4A  F02E         	goto	l7856
  9714   005CD4                     u8580:
  9715   005CD4                     
  9716                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  9717   005CD4  0E00               	movlw	0
  9718   005CD6  0101               	movlb	1	; () banked
  9719   005CD8  6FA2               	movwf	(?_vfprintf+1)& (0+255),b
  9720   005CDA  0E00               	movlw	0
  9721   005CDC  6FA1               	movwf	?_vfprintf& (0+255),b
  9722   005CDE                     
  9723                           ; BSR set to: 1
  9724   005CDE  0012               	return		;funcret
  9725   005CE0                     __end_of_vfprintf:
  9726                           	callstack 0
  9727                           
  9728 ;; *************** function _vfpfcnvrt *****************
  9729 ;; Defined at:
  9730 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  9731 ;; Parameters:    Size  Location     Type
  9732 ;;  fp              2  146[BANK1 ] PTR struct _IO_FILE
  9733 ;;		 -> sprintf@f(11), 
  9734 ;;  fmt             2  148[BANK1 ] PTR PTR unsigned char 
  9735 ;;		 -> vfprintf@cfmt(2), 
  9736 ;;  ap              2  150[BANK1 ] PTR PTR void 
  9737 ;;		 -> sprintf@ap(2), 
  9738 ;; Auto vars:     Size  Location     Type
  9739 ;;  convarg         4  154[BANK1 ] struct .
  9740 ;;  cp              2  159[BANK1 ] PTR unsigned char 
  9741 ;;		 -> STR_19(7), STR_17(7), 
  9742 ;;  c               1  158[BANK1 ] unsigned char 
  9743 ;;  done            1    0        _Bool 
  9744 ;; Return value:  Size  Location     Type
  9745 ;;                  1    wreg      void 
  9746 ;; Registers used:
  9747 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9748 ;; Tracked objects:
  9749 ;;		On entry : 0/0
  9750 ;;		On exit  : 0/0
  9751 ;;		Unchanged: 0/0
  9752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9753 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9754 ;;      Locals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9755 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9756 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9757 ;;Total ram usage:       15 bytes
  9758 ;; Hardware stack levels used: 1
  9759 ;; Hardware stack levels required when called: 18
  9760 ;; This function calls:
  9761 ;;		_efgtoa
  9762 ;;		_fputc
  9763 ;;		_read_prec_or_width
  9764 ;; This function is called by:
  9765 ;;		_vfprintf
  9766 ;; This function uses a non-reentrant model
  9767 ;;
  9768                           
  9769                           	psect	text17
  9770   0036F8                     __ptext17:
  9771                           	callstack 0
  9772   0036F8                     _vfpfcnvrt:
  9773                           	callstack 9
  9774   0036F8                     
  9775                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  9776   0036F8  0060  F653  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  9777   0036FE  0060  F657  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  9778   003704  006F FF7B FFF6     	movff	postinc2,tblptrl
  9779   00370A  006F FF77 FFF7     	movff	postdec2,tblptrh
  9780   003710                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9781   003710  6AF8               	clrf	tblptru,c
  9782   003712                     	endif
  9783   003712                     	if	0	;tblptru may be non-zero
  9784   003712                     	endif
  9785   003712  0008               	tblrd		*
  9786   003714  50F5               	movf	tablat,w,c
  9787   003716  0A25               	xorlw	37
  9788   003718  A4D8               	btfss	status,2,c
  9789   00371A  EF91  F01B         	goto	u8331
  9790   00371E  EF93  F01B         	goto	u8330
  9791   003722                     u8331:
  9792   003722  EFCF  F01C         	goto	l7578
  9793   003726                     u8330:
  9794   003726                     
  9795                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  9796   003726  0060  F653  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  9797   00372C  0060  F657  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  9798   003732  2ADE               	incf	postinc2,f,c
  9799   003734  0E00               	movlw	0
  9800   003736  22DD               	addwfc	postdec2,f,c
  9801   003738                     
  9802                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  9803   003738  0E00               	movlw	0
  9804   00373A  0100               	movlb	0	; () banked
  9805   00373C  6FDE               	movwf	(_width+1)& (0+255),b
  9806   00373E  0E00               	movlw	0
  9807   003740  6FDD               	movwf	_width& (0+255),b
  9808   003742  C0DD  F0E9         	movff	_width,_flags
  9809   003746                     
  9810                           ; BSR set to: 0
  9811                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  9812   003746  69DF               	setf	_prec& (0+255),b
  9813   003748  69E0               	setf	(_prec+1)& (0+255),b
  9814   00374A                     
  9815                           ; BSR set to: 0
  9816                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1265:         if 
      +                          ((*fmt)[0] == '.') {
  9817   00374A  0060  F653  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  9818   003750  0060  F657  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  9819   003756  006F FF7B FFF6     	movff	postinc2,tblptrl
  9820   00375C  006F FF77 FFF7     	movff	postdec2,tblptrh
  9821   003762                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9822   003762  6AF8               	clrf	tblptru,c
  9823   003764                     	endif
  9824   003764                     	if	0	;tblptru may be non-zero
  9825   003764                     	endif
  9826   003764  0008               	tblrd		*
  9827   003766  50F5               	movf	tablat,w,c
  9828   003768  0A2E               	xorlw	46
  9829   00376A  A4D8               	btfss	status,2,c
  9830   00376C  EFBA  F01B         	goto	u8341
  9831   003770  EFBC  F01B         	goto	u8340
  9832   003774                     u8341:
  9833   003774  EFD3  F01B         	goto	l7540
  9834   003778                     u8340:
  9835   003778                     
  9836                           ; BSR set to: 0
  9837                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1266:            
      +                           ++*fmt;
  9838   003778  0060  F653  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  9839   00377E  0060  F657  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  9840   003784  2ADE               	incf	postinc2,f,c
  9841   003786  0E00               	movlw	0
  9842   003788  22DD               	addwfc	postdec2,f,c
  9843   00378A                     
  9844                           ; BSR set to: 0
  9845                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1267:    prec = r
      +                          ead_prec_or_width(fmt, ap);
  9846   00378A  C194  F106         	movff	vfpfcnvrt@fmt,read_prec_or_width@fmt
  9847   00378E  C195  F107         	movff	vfpfcnvrt@fmt+1,read_prec_or_width@fmt+1
  9848   003792  C196  F108         	movff	vfpfcnvrt@ap,read_prec_or_width@ap
  9849   003796  C197  F109         	movff	vfpfcnvrt@ap+1,read_prec_or_width@ap+1
  9850   00379A  ECC9  F025         	call	_read_prec_or_width	;wreg free
  9851   00379E  C106  F0DF         	movff	?_read_prec_or_width,_prec
  9852   0037A2  C107  F0E0         	movff	?_read_prec_or_width+1,_prec+1
  9853   0037A6                     l7540:
  9854                           
  9855                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1689:   cp = *fmt
      +                          ;
  9856   0037A6  0060  F653  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  9857   0037AC  0060  F657  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  9858   0037B2  006F FF78  F19F    	movff	postinc2,vfpfcnvrt@cp
  9859   0037B8  006F FF74  F1A0    	movff	postdec2,vfpfcnvrt@cp+1
  9860   0037BE                     
  9861                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1690:   c = *cp;
  9862   0037BE  0060  F67F  FFF6   	movff	vfpfcnvrt@cp,tblptrl
  9863   0037C4  0060  F683  FFF7   	movff	vfpfcnvrt@cp+1,tblptrh
  9864   0037CA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9865   0037CA  6AF8               	clrf	tblptru,c
  9866   0037CC                     	endif
  9867   0037CC                     	if	0	;tblptru may be non-zero
  9868   0037CC                     	endif
  9869   0037CC  0008               	tblrd		*
  9870   0037CE  006F FFD4  F19E    	movff	tablat,vfpfcnvrt@c
  9871                           
  9872                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1691:   switch(c)
      +                           {
  9873   0037D4  EFF7  F01B         	goto	l7550
  9874   0037D8                     l7544:
  9875                           
  9876                           ; BSR set to: 1
  9877                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1695:     cp++;
  9878   0037D8  4B9F               	infsnz	vfpfcnvrt@cp& (0+255),f,b
  9879   0037DA  2BA0               	incf	(vfpfcnvrt@cp+1)& (0+255),f,b
  9880                           
  9881                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1696:     break;
  9882   0037DC  EF0B  F01C         	goto	l7552
  9883   0037E0                     l7546:
  9884                           
  9885                           ; BSR set to: 1
  9886                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1721:     c = 'l'
      +                          ;
  9887   0037E0  0E6C               	movlw	108
  9888   0037E2  6F9E               	movwf	vfpfcnvrt@c& (0+255),b
  9889                           
  9890                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1722:     break;
  9891   0037E4  EF0B  F01C         	goto	l7552
  9892   0037E8                     l1674:
  9893                           
  9894                           ; BSR set to: 1
  9895                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1724:     c = 0;
  9896   0037E8  6B9E               	clrf	vfpfcnvrt@c& (0+255),b
  9897                           
  9898                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1725:     break;
  9899   0037EA  EF0B  F01C         	goto	l7552
  9900   0037EE                     l7550:
  9901   0037EE  0101               	movlb	1	; () banked
  9902   0037F0  519E               	movf	vfpfcnvrt@c& (0+255),w,b
  9903                           
  9904                           ; Switch size 1, requested type "simple"
  9905                           ; Number of cases is 4, Range of values is 76 to 108
  9906                           ; switch strategies available:
  9907                           ; Name         Instructions Cycles
  9908                           ; simple_byte           13     7 (average)
  9909                           ;	Chosen strategy is simple_byte
  9910   0037F2  0A4C               	xorlw	76	; case 76
  9911   0037F4  B4D8               	btfsc	status,2,c
  9912   0037F6  EFEC  F01B         	goto	l7544
  9913   0037FA  0A29               	xorlw	41	; case 101
  9914   0037FC  B4D8               	btfsc	status,2,c
  9915   0037FE  EFF0  F01B         	goto	l7546
  9916   003802  0A03               	xorlw	3	; case 102
  9917   003804  B4D8               	btfsc	status,2,c
  9918   003806  EFF0  F01B         	goto	l7546
  9919   00380A  0A0A               	xorlw	10	; case 108
  9920   00380C  B4D8               	btfsc	status,2,c
  9921   00380E  EFEC  F01B         	goto	l7544
  9922   003812  EFF4  F01B         	goto	l1674
  9923   003816                     l7552:
  9924                           
  9925                           ; BSR set to: 1
  9926   003816  0060  F67F  FFF6   	movff	vfpfcnvrt@cp,tblptrl
  9927   00381C  0060  F683  FFF7   	movff	vfpfcnvrt@cp+1,tblptrh
  9928   003822                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9929   003822  6AF8               	clrf	tblptru,c
  9930   003824                     	endif
  9931   003824                     	if	0	;tblptru may be non-zero
  9932   003824                     	endif
  9933   003824  0008               	tblrd		*
  9934   003826  50F5               	movf	tablat,w,c
  9935   003828  0A65               	xorlw	101
  9936   00382A  B4D8               	btfsc	status,2,c
  9937   00382C  EF1A  F01C         	goto	u8351
  9938   003830  EF1C  F01C         	goto	u8350
  9939   003834                     u8351:
  9940   003834  EF77  F01C         	goto	l7562
  9941   003838                     u8350:
  9942   003838                     
  9943                           ; BSR set to: 1
  9944   003838  0060  F67F  FFF6   	movff	vfpfcnvrt@cp,tblptrl
  9945   00383E  0060  F683  FFF7   	movff	vfpfcnvrt@cp+1,tblptrh
  9946   003844                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9947   003844  6AF8               	clrf	tblptru,c
  9948   003846                     	endif
  9949   003846                     	if	0	;tblptru may be non-zero
  9950   003846                     	endif
  9951   003846  0008               	tblrd		*
  9952   003848  50F5               	movf	tablat,w,c
  9953   00384A  0A66               	xorlw	102
  9954   00384C  A4D8               	btfss	status,2,c
  9955   00384E  EF2B  F01C         	goto	u8361
  9956   003852  EF2D  F01C         	goto	u8360
  9957   003856                     u8361:
  9958   003856  EFC4  F01C         	goto	l7574
  9959   00385A                     u8360:
  9960   00385A  EF77  F01C         	goto	l7562
  9961   00385E                     l7556:
  9962                           
  9963                           ; BSR set to: 1
  9964                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1756:      convar
      +                          g.f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  9965   00385E  0060  F65B  FFD9   	movff	vfpfcnvrt@ap,fsr2l
  9966   003864  0060  F65F  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
  9967   00386A  006F FF7C  F198    	movff	indf2,??_vfpfcnvrt
  9968   003870  0E04               	movlw	4
  9969   003872  26DE               	addwf	postinc2,f,c
  9970   003874  006F FF7C  F199    	movff	indf2,??_vfpfcnvrt+1
  9971   00387A  0E00               	movlw	0
  9972   00387C  22DD               	addwfc	postdec2,f,c
  9973   00387E  0060  F663  FFD9   	movff	??_vfpfcnvrt,fsr2l
  9974   003884  0060  F667  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
  9975   00388A  006F FF78  F19A    	movff	postinc2,vfpfcnvrt@convarg
  9976   003890  006F FF78  F19B    	movff	postinc2,vfpfcnvrt@convarg+1
  9977   003896  006F FF78  F19C    	movff	postinc2,vfpfcnvrt@convarg+2
  9978   00389C  006F FF78  F19D    	movff	postinc2,vfpfcnvrt@convarg+3
  9979                           
  9980                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1757:      break;
  9981   0038A2  EF82  F01C         	goto	l7564
  9982   0038A6                     l7558:
  9983                           
  9984                           ; BSR set to: 1
  9985                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1759:      convar
      +                          g.f = (long double)(*(long double *)__va_arg(*(long double **)ap, (long double)0));
  9986   0038A6  0060  F65B  FFD9   	movff	vfpfcnvrt@ap,fsr2l
  9987   0038AC  0060  F65F  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
  9988   0038B2  006F FF7C  F198    	movff	indf2,??_vfpfcnvrt
  9989   0038B8  0E04               	movlw	4
  9990   0038BA  26DE               	addwf	postinc2,f,c
  9991   0038BC  006F FF7C  F199    	movff	indf2,??_vfpfcnvrt+1
  9992   0038C2  0E00               	movlw	0
  9993   0038C4  22DD               	addwfc	postdec2,f,c
  9994   0038C6  0060  F663  FFD9   	movff	??_vfpfcnvrt,fsr2l
  9995   0038CC  0060  F667  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
  9996   0038D2  006F FF78  F19A    	movff	postinc2,vfpfcnvrt@convarg
  9997   0038D8  006F FF78  F19B    	movff	postinc2,vfpfcnvrt@convarg+1
  9998   0038DE  006F FF78  F19C    	movff	postinc2,vfpfcnvrt@convarg+2
  9999   0038E4  006F FF78  F19D    	movff	postinc2,vfpfcnvrt@convarg+3
 10000                           
 10001                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1760:      break;
 10002   0038EA  EF82  F01C         	goto	l7564
 10003   0038EE                     l7562:
 10004                           
 10005                           ; BSR set to: 1
 10006   0038EE  519E               	movf	vfpfcnvrt@c& (0+255),w,b
 10007                           
 10008                           ; Switch size 1, requested type "simple"
 10009                           ; Number of cases is 2, Range of values is 76 to 108
 10010                           ; switch strategies available:
 10011                           ; Name         Instructions Cycles
 10012                           ; simple_byte            7     4 (average)
 10013                           ;	Chosen strategy is simple_byte
 10014   0038F0  0A4C               	xorlw	76	; case 76
 10015   0038F2  B4D8               	btfsc	status,2,c
 10016   0038F4  EF53  F01C         	goto	l7558
 10017   0038F8  0A20               	xorlw	32	; case 108
 10018   0038FA  B4D8               	btfsc	status,2,c
 10019   0038FC  EF2F  F01C         	goto	l7556
 10020   003900  EF82  F01C         	goto	l7564
 10021   003904                     l7564:
 10022                           
 10023                           ; BSR set to: 1
 10024                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1762:    *fmt = c
      +                          p+1;
 10025   003904  0E01               	movlw	1
 10026   003906  259F               	addwf	vfpfcnvrt@cp& (0+255),w,b
 10027   003908  6F98               	movwf	??_vfpfcnvrt& (0+255),b
 10028   00390A  0E00               	movlw	0
 10029   00390C  21A0               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
 10030   00390E  6F99               	movwf	(??_vfpfcnvrt+1)& (0+255),b
 10031   003910  0060  F653  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
 10032   003916  0060  F657  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
 10033   00391C  0060  F663  FFDE   	movff	??_vfpfcnvrt,postinc2
 10034   003922  0060  F667  FFDD   	movff	??_vfpfcnvrt+1,postdec2
 10035                           
 10036                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1763:    switch (
      +                          *cp) {
 10037   003928  EFB1  F01C         	goto	l7572
 10038   00392C                     l7566:
 10039                           
 10040                           ; BSR set to: 1
 10041                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1790:      return
      +                           (void) efgtoa(fp, convarg.f, *cp);;	Return value of _vfpfcnvrt is never used
 10042   00392C  C192  F15A         	movff	vfpfcnvrt@fp,efgtoa@fp
 10043   003930  C193  F15B         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
 10044   003934  C19A  F15C         	movff	vfpfcnvrt@convarg,efgtoa@f
 10045   003938  C19B  F15D         	movff	vfpfcnvrt@convarg+1,efgtoa@f+1
 10046   00393C  C19C  F15E         	movff	vfpfcnvrt@convarg+2,efgtoa@f+2
 10047   003940  C19D  F15F         	movff	vfpfcnvrt@convarg+3,efgtoa@f+3
 10048   003944  0060  F67F  FFF6   	movff	vfpfcnvrt@cp,tblptrl
 10049   00394A  0060  F683  FFF7   	movff	vfpfcnvrt@cp+1,tblptrh
 10050   003950                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 10051   003950  6AF8               	clrf	tblptru,c
 10052   003952                     	endif
 10053   003952                     	if	0	;tblptru may be non-zero
 10054   003952                     	endif
 10055   003952  0008               	tblrd		*
 10056   003954  006F FFD4  F160    	movff	tablat,efgtoa@c
 10057   00395A  EC0F  F000         	call	_efgtoa	;wreg free
 10058   00395E  EFE9  F01C         	goto	l1685
 10059   003962                     l7572:
 10060                           
 10061                           ; BSR set to: 1
 10062   003962  0060  F67F  FFF6   	movff	vfpfcnvrt@cp,tblptrl
 10063   003968  0060  F683  FFF7   	movff	vfpfcnvrt@cp+1,tblptrh
 10064   00396E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 10065   00396E  6AF8               	clrf	tblptru,c
 10066   003970                     	endif
 10067   003970                     	if	0	;tblptru may be non-zero
 10068   003970                     	endif
 10069   003970  0008               	tblrd		*
 10070   003972  50F5               	movf	tablat,w,c
 10071                           
 10072                           ; Switch size 1, requested type "simple"
 10073                           ; Number of cases is 2, Range of values is 101 to 102
 10074                           ; switch strategies available:
 10075                           ; Name         Instructions Cycles
 10076                           ; simple_byte            7     4 (average)
 10077                           ;	Chosen strategy is simple_byte
 10078   003974  0A65               	xorlw	101	; case 101
 10079   003976  B4D8               	btfsc	status,2,c
 10080   003978  EF96  F01C         	goto	l7566
 10081   00397C  0A03               	xorlw	3	; case 102
 10082   00397E  B4D8               	btfsc	status,2,c
 10083   003980  EF96  F01C         	goto	l7566
 10084   003984  EFC4  F01C         	goto	l7574
 10085   003988                     l7574:
 10086                           
 10087                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
 10088   003988  0060  F653  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
 10089   00398E  0060  F657  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
 10090   003994  2ADE               	incf	postinc2,f,c
 10091   003996  0E00               	movlw	0
 10092   003998  22DD               	addwfc	postdec2,f,c
 10093   00399A  EFE9  F01C         	goto	l1685
 10094   00399E                     l7578:
 10095                           
 10096                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
 10097   00399E  0060  F653  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
 10098   0039A4  0060  F657  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
 10099   0039AA  006F FF7B FFF6     	movff	postinc2,tblptrl
 10100   0039B0  006F FF77 FFF7     	movff	postdec2,tblptrh
 10101   0039B6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 10102   0039B6  6AF8               	clrf	tblptru,c
 10103   0039B8                     	endif
 10104   0039B8                     	if	0	;tblptru may be non-zero
 10105   0039B8                     	endif
 10106   0039B8  0008               	tblrd		*
 10107   0039BA  50F5               	movf	tablat,w,c
 10108   0039BC  0101               	movlb	1	; () banked
 10109   0039BE  6F06               	movwf	fputc@c& (0+255),b
 10110   0039C0  6B07               	clrf	(fputc@c+1)& (0+255),b
 10111   0039C2  C192  F108         	movff	vfpfcnvrt@fp,fputc@fp
 10112   0039C6  C193  F109         	movff	vfpfcnvrt@fp+1,fputc@fp+1
 10113   0039CA  EC2C  F027         	call	_fputc	;wreg free
 10114   0039CE  EFC4  F01C         	goto	l7574
 10115   0039D2                     l1685:
 10116   0039D2  0012               	return		;funcret
 10117   0039D4                     __end_of_vfpfcnvrt:
 10118                           	callstack 0
 10119                           
 10120 ;; *************** function _read_prec_or_width *****************
 10121 ;; Defined at:
 10122 ;;		line 1158 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
 10123 ;; Parameters:    Size  Location     Type
 10124 ;;  fmt             2    6[BANK1 ] PTR PTR const unsigned c
 10125 ;;		 -> vfprintf@cfmt(2), 
 10126 ;;  ap              2    8[BANK1 ] PTR PTR void [1]
 10127 ;;		 -> sprintf@ap(2), 
 10128 ;; Auto vars:     Size  Location     Type
 10129 ;;  c               1   12[BANK1 ] unsigned char 
 10130 ;;  n               2   13[BANK1 ] int 
 10131 ;; Return value:  Size  Location     Type
 10132 ;;                  2    6[BANK1 ] int 
 10133 ;; Registers used:
 10134 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 10135 ;; Tracked objects:
 10136 ;;		On entry : 0/0
 10137 ;;		On exit  : 0/0
 10138 ;;		Unchanged: 0/0
 10139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10140 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10141 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10142 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10143 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10144 ;;Total ram usage:        9 bytes
 10145 ;; Hardware stack levels used: 1
 10146 ;; Hardware stack levels required when called: 13
 10147 ;; This function calls:
 10148 ;;		Nothing
 10149 ;; This function is called by:
 10150 ;;		_vfpfcnvrt
 10151 ;; This function uses a non-reentrant model
 10152 ;;
 10153                           
 10154                           	psect	text18
 10155   004B92                     __ptext18:
 10156                           	callstack 0
 10157   004B92                     _read_prec_or_width:
 10158                           	callstack 13
 10159   004B92                     
 10160                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1159:     int n =
      +                           0;
 10161   004B92  0E00               	movlw	0
 10162   004B94  0101               	movlb	1	; () banked
 10163   004B96  6F0E               	movwf	(read_prec_or_width@n+1)& (0+255),b
 10164   004B98  0E00               	movlw	0
 10165   004B9A  6F0D               	movwf	read_prec_or_width@n& (0+255),b
 10166   004B9C                     
 10167                           ; BSR set to: 1
 10168                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1160:     if ((*f
      +                          mt)[0] == '*') {
 10169   004B9C  0060  F41B  FFD9   	movff	read_prec_or_width@fmt,fsr2l
 10170   004BA2  0060  F41F  FFDA   	movff	read_prec_or_width@fmt+1,fsr2h
 10171   004BA8  006F FF7B FFF6     	movff	postinc2,tblptrl
 10172   004BAE  006F FF77 FFF7     	movff	postdec2,tblptrh
 10173   004BB4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 10174   004BB4  6AF8               	clrf	tblptru,c
 10175   004BB6                     	endif
 10176   004BB6                     	if	0	;tblptru may be non-zero
 10177   004BB6                     	endif
 10178   004BB6  0008               	tblrd		*
 10179   004BB8  50F5               	movf	tablat,w,c
 10180   004BBA  0A2A               	xorlw	42
 10181   004BBC  A4D8               	btfss	status,2,c
 10182   004BBE  EFE3  F025         	goto	u8231
 10183   004BC2  EFE5  F025         	goto	u8230
 10184   004BC6                     u8231:
 10185   004BC6  EF26  F026         	goto	l7452
 10186   004BCA                     u8230:
 10187   004BCA                     
 10188                           ; BSR set to: 1
 10189                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1161:         ++*
      +                          fmt;
 10190   004BCA  0060  F41B  FFD9   	movff	read_prec_or_width@fmt,fsr2l
 10191   004BD0  0060  F41F  FFDA   	movff	read_prec_or_width@fmt+1,fsr2h
 10192   004BD6  2ADE               	incf	postinc2,f,c
 10193   004BD8  0E00               	movlw	0
 10194   004BDA  22DD               	addwfc	postdec2,f,c
 10195                           
 10196                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1162:         n =
      +                           (*(int *)__va_arg(*(int **)*ap, (int)0));
 10197   004BDC  0060  F423  FFD9   	movff	read_prec_or_width@ap,fsr2l
 10198   004BE2  0060  F427  FFDA   	movff	read_prec_or_width@ap+1,fsr2h
 10199   004BE8  006F FF7C  F10A    	movff	indf2,??_read_prec_or_width
 10200   004BEE  0E02               	movlw	2
 10201   004BF0  26DE               	addwf	postinc2,f,c
 10202   004BF2  006F FF7C  F10B    	movff	indf2,??_read_prec_or_width+1
 10203   004BF8  0E00               	movlw	0
 10204   004BFA  22DD               	addwfc	postdec2,f,c
 10205   004BFC  0060  F42B  FFD9   	movff	??_read_prec_or_width,fsr2l
 10206   004C02  0060  F42F  FFDA   	movff	??_read_prec_or_width+1,fsr2h
 10207   004C08  006F FF78  F10D    	movff	postinc2,read_prec_or_width@n
 10208   004C0E  006F FF74  F10E    	movff	postdec2,read_prec_or_width@n+1
 10209                           
 10210                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1163:     } else 
      +                          {
 10211   004C14  EF3F  F026         	goto	l1659
 10212   004C18                     l7448:
 10213                           
 10214                           ; BSR set to: 1
 10215                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1166:            
      +                           n = n * 10 + c;
 10216   004C18  0E0A               	movlw	10
 10217   004C1A  030D               	mulwf	read_prec_or_width@n& (0+255),b
 10218   004C1C  006F FFCC  F10A    	movff	prodl,??_read_prec_or_width
 10219   004C22  006F FFD0  F10B    	movff	prodh,??_read_prec_or_width+1
 10220   004C28  030E               	mulwf	(read_prec_or_width@n+1)& (0+255),b
 10221   004C2A  50F3               	movf	prodl,w,c
 10222   004C2C  270B               	addwf	(??_read_prec_or_width+1)& (0+255),f,b
 10223   004C2E  510C               	movf	read_prec_or_width@c& (0+255),w,b
 10224   004C30  250A               	addwf	??_read_prec_or_width& (0+255),w,b
 10225   004C32  6F0D               	movwf	read_prec_or_width@n& (0+255),b
 10226   004C34  0E00               	movlw	0
 10227   004C36  210B               	addwfc	(??_read_prec_or_width+1)& (0+255),w,b
 10228   004C38  6F0E               	movwf	(read_prec_or_width@n+1)& (0+255),b
 10229   004C3A                     
 10230                           ; BSR set to: 1
 10231                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1167:            
      +                           ++*fmt;
 10232   004C3A  0060  F41B  FFD9   	movff	read_prec_or_width@fmt,fsr2l
 10233   004C40  0060  F41F  FFDA   	movff	read_prec_or_width@fmt+1,fsr2h
 10234   004C46  2ADE               	incf	postinc2,f,c
 10235   004C48  0E00               	movlw	0
 10236   004C4A  22DD               	addwfc	postdec2,f,c
 10237   004C4C                     l7452:
 10238                           
 10239                           ; BSR set to: 1
 10240                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1165:         whi
      +                          le ((c = ((unsigned)(*fmt)[0]) - '0') < 10) {
 10241   004C4C  0060  F41B  FFD9   	movff	read_prec_or_width@fmt,fsr2l
 10242   004C52  0060  F41F  FFDA   	movff	read_prec_or_width@fmt+1,fsr2h
 10243   004C58  006F FF7B FFF6     	movff	postinc2,tblptrl
 10244   004C5E  006F FF77 FFF7     	movff	postdec2,tblptrh
 10245   004C64                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 10246   004C64  6AF8               	clrf	tblptru,c
 10247   004C66                     	endif
 10248   004C66                     	if	0	;tblptru may be non-zero
 10249   004C66                     	endif
 10250   004C66  0008               	tblrd		*
 10251   004C68  50F5               	movf	tablat,w,c
 10252   004C6A  0FD0               	addlw	208
 10253   004C6C  6F0C               	movwf	read_prec_or_width@c& (0+255),b
 10254   004C6E  0E09               	movlw	9
 10255   004C70  650C               	cpfsgt	read_prec_or_width@c& (0+255),b
 10256   004C72  EF3D  F026         	goto	u8241
 10257   004C76  EF3F  F026         	goto	u8240
 10258   004C7A                     u8241:
 10259   004C7A  EF0C  F026         	goto	l7448
 10260   004C7E                     u8240:
 10261   004C7E                     l1659:
 10262                           
 10263                           ; BSR set to: 1
 10264                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1170:     return 
      +                          n;
 10265   004C7E  C10D  F106         	movff	read_prec_or_width@n,?_read_prec_or_width
 10266   004C82  C10E  F107         	movff	read_prec_or_width@n+1,?_read_prec_or_width+1
 10267   004C86                     
 10268                           ; BSR set to: 1
 10269   004C86  0012               	return		;funcret
 10270   004C88                     __end_of_read_prec_or_width:
 10271                           	callstack 0
 10272                           
 10273 ;; *************** function _efgtoa *****************
 10274 ;; Defined at:
 10275 ;;		line 587 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
 10276 ;; Parameters:    Size  Location     Type
 10277 ;;  fp              2   90[BANK1 ] PTR struct _IO_FILE
 10278 ;;		 -> sprintf@f(11), 
 10279 ;;  f               4   92[BANK1 ] PTR struct _IO_FILE
 10280 ;;  c               1   96[BANK1 ] unsigned char 
 10281 ;; Auto vars:     Size  Location     Type
 10282 ;;  u               4  142[BANK1 ] struct flui
 10283 ;;  g               4  138[BANK1 ] struct flui
 10284 ;;  l               4  127[BANK1 ] struct flui
 10285 ;;  h               4  123[BANK1 ] struct flui
 10286 ;;  ou              4  119[BANK1 ] struct flui
 10287 ;;  n               2  136[BANK1 ] int 
 10288 ;;  i               2  134[BANK1 ] int 
 10289 ;;  e               2  131[BANK1 ] int 
 10290 ;;  w               2  117[BANK1 ] int 
 10291 ;;  p               2  114[BANK1 ] int 
 10292 ;;  m               2  112[BANK1 ] int 
 10293 ;;  d               2  110[BANK1 ] int 
 10294 ;;  ne              2  105[BANK1 ] int 
 10295 ;;  t               2   99[BANK1 ] int 
 10296 ;;  sign            1  133[BANK1 ] unsigned char 
 10297 ;;  nmode           1  116[BANK1 ] unsigned char 
 10298 ;;  mode            1  109[BANK1 ] unsigned char 
 10299 ;;  esign           1  108[BANK1 ] unsigned char 
 10300 ;;  pp              1  107[BANK1 ] unsigned char 
 10301 ;; Return value:  Size  Location     Type
 10302 ;;                  1    wreg      void 
 10303 ;; Registers used:
 10304 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10305 ;; Tracked objects:
 10306 ;;		On entry : 0/0
 10307 ;;		On exit  : 0/0
 10308 ;;		Unchanged: 0/0
 10309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10310 ;;      Params:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10311 ;;      Locals:         0       0      47       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10312 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10313 ;;      Totals:         0       0      56       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10314 ;;Total ram usage:       56 bytes
 10315 ;; Hardware stack levels used: 1
 10316 ;; Hardware stack levels required when called: 17
 10317 ;; This function calls:
 10318 ;;		___awdiv
 10319 ;;		___awmod
 10320 ;;		___fladd
 10321 ;;		___fldiv
 10322 ;;		___fleq
 10323 ;;		___flge
 10324 ;;		___flmul
 10325 ;;		___flneg
 10326 ;;		___flsub
 10327 ;;		___fltol
 10328 ;;		___fpclassifyf
 10329 ;;		_floorf
 10330 ;;		_labs
 10331 ;;		_memcpy
 10332 ;;		_pad
 10333 ;;		_strcpy
 10334 ;; This function is called by:
 10335 ;;		_vfpfcnvrt
 10336 ;; This function uses a non-reentrant model
 10337 ;;
 10338                           
 10339                           	psect	text19
 10340   00001E                     __ptext19:
 10341                           	callstack 0
 10342   00001E                     _efgtoa:
 10343                           	callstack 9
 10344   00001E                     
 10345                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 587: static void 
      +                          efgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v3.00\pic\sources
      +                          \c99\common\doprnt.c: 588: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common
      +                          \doprnt.c: 589:     char mode, nmode, pp, sign, esign;;C:\Program Files\Microchip\xc8\v3
      +                          .00\pic\sources\c99\common\doprnt.c: 590:     int d, e, i, m, n, ne, p, t, w;;C:\Program
      +                           Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 591:     long double h, l;
 10346   00001E  0101               	movlb	1	; () banked
 10347   000020  6B85               	clrf	efgtoa@sign& (0+255),b
 10348                           
 10349                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 596:     g.f = f;
 10350   000022  C15C  F18A         	movff	efgtoa@f,efgtoa@g
 10351   000026  C15D  F18B         	movff	efgtoa@f+1,efgtoa@g+1
 10352   00002A  C15E  F18C         	movff	efgtoa@f+2,efgtoa@g+2
 10353   00002E  C15F  F18D         	movff	efgtoa@f+3,efgtoa@g+3
 10354   000032                     
 10355                           ; BSR set to: 1
 10356                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 597:     if (g.f 
      +                          < 0.0) {
 10357   000032  BF8D               	btfsc	(efgtoa@g+3)& (0+255),7,b
 10358   000034  EF20  F000         	goto	u7850
 10359   000038  EF1E  F000         	goto	u7851
 10360   00003C                     u7851:
 10361   00003C  EF34  F000         	goto	l7186
 10362   000040                     u7850:
 10363   000040                     
 10364                           ; BSR set to: 1
 10365                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 598:         sign
      +                           = 1;
 10366   000040  0E01               	movlw	1
 10367   000042  6F85               	movwf	efgtoa@sign& (0+255),b
 10368   000044                     
 10369                           ; BSR set to: 1
 10370                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 599:         g.f 
      +                          = -g.f;
 10371   000044  C18A  F106         	movff	efgtoa@g,___flneg@f1
 10372   000048  C18B  F107         	movff	efgtoa@g+1,___flneg@f1+1
 10373   00004C  C18C  F108         	movff	efgtoa@g+2,___flneg@f1+2
 10374   000050  C18D  F109         	movff	efgtoa@g+3,___flneg@f1+3
 10375   000054  EC50  F031         	call	___flneg	;wreg free
 10376   000058  C106  F18A         	movff	?___flneg,efgtoa@g
 10377   00005C  C107  F18B         	movff	?___flneg+1,efgtoa@g+1
 10378   000060  C108  F18C         	movff	?___flneg+2,efgtoa@g+2
 10379   000064  C109  F18D         	movff	?___flneg+3,efgtoa@g+3
 10380   000068                     l7186:
 10381                           
 10382                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 603:     n = 0;
 10383   000068  0E00               	movlw	0
 10384   00006A  0101               	movlb	1	; () banked
 10385   00006C  6F89               	movwf	(efgtoa@n+1)& (0+255),b
 10386   00006E  0E00               	movlw	0
 10387   000070  6F88               	movwf	efgtoa@n& (0+255),b
 10388   000072                     
 10389                           ; BSR set to: 1
 10390                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 604:     w = widt
      +                          h;
 10391   000072  C0DD  F175         	movff	_width,efgtoa@w
 10392   000076  C0DE  F176         	movff	_width+1,efgtoa@w+1
 10393   00007A                     
 10394                           ; BSR set to: 1
 10395                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 605:     if (sign
 10396   00007A  5185               	movf	efgtoa@sign& (0+255),w,b
 10397   00007C  B4D8               	btfsc	status,2,c
 10398   00007E  EF43  F000         	goto	u7861
 10399   000082  EF45  F000         	goto	u7860
 10400   000086                     u7861:
 10401   000086  EF59  F000         	goto	l7200
 10402   00008A                     u7860:
 10403   00008A                     
 10404                           ; BSR set to: 1
 10405                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 609:    ) {;C:\Pr
      +                          ogram Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 610:   sign = sign ? '-
      +                          ' : '+';
 10406   00008A  5185               	movf	efgtoa@sign& (0+255),w,b
 10407   00008C  A4D8               	btfss	status,2,c
 10408   00008E  EF4B  F000         	goto	u7871
 10409   000092  EF4D  F000         	goto	u7870
 10410   000096                     u7871:
 10411   000096  EF53  F000         	goto	l7196
 10412   00009A                     u7870:
 10413   00009A                     
 10414                           ; BSR set to: 1
 10415   00009A  0E00               	movlw	0
 10416   00009C  6F66               	movwf	(_efgtoa$2326+1)& (0+255),b
 10417   00009E  0E2B               	movlw	43
 10418   0000A0  6F65               	movwf	_efgtoa$2326& (0+255),b
 10419   0000A2  EF57  F000         	goto	l7198
 10420   0000A6                     l7196:
 10421                           
 10422                           ; BSR set to: 1
 10423   0000A6  0E00               	movlw	0
 10424   0000A8  6F66               	movwf	(_efgtoa$2326+1)& (0+255),b
 10425   0000AA  0E2D               	movlw	45
 10426   0000AC  6F65               	movwf	_efgtoa$2326& (0+255),b
 10427   0000AE                     l7198:
 10428                           
 10429                           ; BSR set to: 1
 10430   0000AE  C165  F185         	movff	_efgtoa$2326,efgtoa@sign
 10431   0000B2                     l7200:
 10432                           
 10433                           ; BSR set to: 1
 10434                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 619:     if (( __
      +                          fpclassifyf(g.f) == 1 )) {
 10435   0000B2  C18A  F106         	movff	efgtoa@g,___fpclassifyf@x
 10436   0000B6  C18B  F107         	movff	efgtoa@g+1,___fpclassifyf@x+1
 10437   0000BA  C18C  F108         	movff	efgtoa@g+2,___fpclassifyf@x+2
 10438   0000BE  C18D  F109         	movff	efgtoa@g+3,___fpclassifyf@x+3
 10439   0000C2  ECCA  F024         	call	___fpclassifyf	;wreg free
 10440   0000C6  0101               	movlb	1	; () banked
 10441   0000C8  0506               	decf	?___fpclassifyf& (0+255),w,b
 10442   0000CA  1107               	iorwf	(?___fpclassifyf+1)& (0+255),w,b
 10443   0000CC  A4D8               	btfss	status,2,c
 10444   0000CE  EF6B  F000         	goto	u7881
 10445   0000D2  EF6D  F000         	goto	u7880
 10446   0000D6                     u7881:
 10447   0000D6  EF9F  F000         	goto	l7218
 10448   0000DA                     u7880:
 10449   0000DA                     
 10450                           ; BSR set to: 1
 10451                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 620:   if (sign) 
      +                          {
 10452   0000DA  5185               	movf	efgtoa@sign& (0+255),w,b
 10453   0000DC  B4D8               	btfsc	status,2,c
 10454   0000DE  EF73  F000         	goto	u7891
 10455   0000E2  EF75  F000         	goto	u7890
 10456   0000E6                     u7891:
 10457   0000E6  EF7E  F000         	goto	l7210
 10458   0000EA                     u7890:
 10459   0000EA                     
 10460                           ; BSR set to: 1
 10461                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 621:    dbuf[0] =
      +                           sign;
 10462   0000EA  C185  F200         	movff	efgtoa@sign,_dbuf
 10463   0000EE                     
 10464                           ; BSR set to: 1
 10465                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 622:    w--;
 10466   0000EE  0775               	decf	efgtoa@w& (0+255),f,b
 10467   0000F0  A0D8               	btfss	status,0,c
 10468   0000F2  0776               	decf	(efgtoa@w+1)& (0+255),f,b
 10469   0000F4                     
 10470                           ; BSR set to: 1
 10471                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 623:    n = 1;
 10472   0000F4  0E00               	movlw	0
 10473   0000F6  6F89               	movwf	(efgtoa@n+1)& (0+255),b
 10474   0000F8  0E01               	movlw	1
 10475   0000FA  6F88               	movwf	efgtoa@n& (0+255),b
 10476   0000FC                     l7210:
 10477                           
 10478                           ; BSR set to: 1
 10479                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 631:   {;C:\Progr
      +                          am Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 632:             strcpy(&d
      +                          buf[n], "inf");
 10480   0000FC  0E00               	movlw	low _dbuf
 10481   0000FE  2588               	addwf	efgtoa@n& (0+255),w,b
 10482   000100  6F06               	movwf	strcpy@dest& (0+255),b
 10483   000102  0E02               	movlw	high _dbuf
 10484   000104  2189               	addwfc	(efgtoa@n+1)& (0+255),w,b
 10485   000106  6F07               	movwf	(strcpy@dest+1)& (0+255),b
 10486   000108  0EF7               	movlw	low STR_20
 10487   00010A  6F08               	movwf	strcpy@src& (0+255),b
 10488   00010C  0EFF               	movlw	high STR_20
 10489   00010E  6F09               	movwf	(strcpy@src+1)& (0+255),b
 10490   000110  EC04  F030         	call	_strcpy	;wreg free
 10491   000114                     l7212:
 10492                           
 10493                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 633:         };C:
      +                          \Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 634:         w -= ((
      +                          sizeof("inf")/sizeof("inf"[0]))-1);
 10494   000114  0101               	movlb	1	; () banked
 10495   000116  0EFD               	movlw	253
 10496   000118  2775               	addwf	efgtoa@w& (0+255),f,b
 10497   00011A  0EFF               	movlw	255
 10498   00011C  2376               	addwfc	(efgtoa@w+1)& (0+255),f,b
 10499   00011E                     
 10500                           ; BSR set to: 1
 10501                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 635:         retu
      +                          rn (void) pad(fp, &dbuf[0], w);
 10502   00011E  C15A  F116         	movff	efgtoa@fp,pad@fp
 10503   000122  C15B  F117         	movff	efgtoa@fp+1,pad@fp+1
 10504   000126  0E00               	movlw	low _dbuf
 10505   000128  6F18               	movwf	pad@buf& (0+255),b
 10506   00012A  0E02               	movlw	high _dbuf
 10507   00012C  6F19               	movwf	(pad@buf+1)& (0+255),b
 10508   00012E  C175  F11A         	movff	efgtoa@w,pad@p
 10509   000132  C176  F11B         	movff	efgtoa@w+1,pad@p+1
 10510   000136  ECB4  F02C         	call	_pad	;wreg free
 10511   00013A  EFAD  F005         	goto	l1601
 10512   00013E                     l7218:
 10513                           
 10514                           ; BSR set to: 1
 10515                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 637:     if (( __
      +                          fpclassifyf(g.f) == 0 )) {
 10516   00013E  C18A  F106         	movff	efgtoa@g,___fpclassifyf@x
 10517   000142  C18B  F107         	movff	efgtoa@g+1,___fpclassifyf@x+1
 10518   000146  C18C  F108         	movff	efgtoa@g+2,___fpclassifyf@x+2
 10519   00014A  C18D  F109         	movff	efgtoa@g+3,___fpclassifyf@x+3
 10520   00014E  ECCA  F024         	call	___fpclassifyf	;wreg free
 10521   000152  0101               	movlb	1	; () banked
 10522   000154  5106               	movf	?___fpclassifyf& (0+255),w,b
 10523   000156  1107               	iorwf	(?___fpclassifyf+1)& (0+255),w,b
 10524   000158  A4D8               	btfss	status,2,c
 10525   00015A  EFB1  F000         	goto	u7901
 10526   00015E  EFB3  F000         	goto	u7900
 10527   000162                     u7901:
 10528   000162  EFD2  F000         	goto	l7236
 10529   000166                     u7900:
 10530   000166                     
 10531                           ; BSR set to: 1
 10532                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 638:   if (sign) 
      +                          {
 10533   000166  5185               	movf	efgtoa@sign& (0+255),w,b
 10534   000168  B4D8               	btfsc	status,2,c
 10535   00016A  EFB9  F000         	goto	u7911
 10536   00016E  EFBB  F000         	goto	u7910
 10537   000172                     u7911:
 10538   000172  EFC4  F000         	goto	l7228
 10539   000176                     u7910:
 10540   000176                     
 10541                           ; BSR set to: 1
 10542                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 639:    dbuf[0] =
      +                           sign;
 10543   000176  C185  F200         	movff	efgtoa@sign,_dbuf
 10544   00017A                     
 10545                           ; BSR set to: 1
 10546                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 640:    w--;
 10547   00017A  0775               	decf	efgtoa@w& (0+255),f,b
 10548   00017C  A0D8               	btfss	status,0,c
 10549   00017E  0776               	decf	(efgtoa@w+1)& (0+255),f,b
 10550   000180                     
 10551                           ; BSR set to: 1
 10552                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 641:    n = 1;
 10553   000180  0E00               	movlw	0
 10554   000182  6F89               	movwf	(efgtoa@n+1)& (0+255),b
 10555   000184  0E01               	movlw	1
 10556   000186  6F88               	movwf	efgtoa@n& (0+255),b
 10557   000188                     l7228:
 10558                           
 10559                           ; BSR set to: 1
 10560                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 649:   {;C:\Progr
      +                          am Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 650:             strcpy(&d
      +                          buf[n], "nan");
 10561   000188  0E00               	movlw	low _dbuf
 10562   00018A  2588               	addwf	efgtoa@n& (0+255),w,b
 10563   00018C  6F06               	movwf	strcpy@dest& (0+255),b
 10564   00018E  0E02               	movlw	high _dbuf
 10565   000190  2189               	addwfc	(efgtoa@n+1)& (0+255),w,b
 10566   000192  6F07               	movwf	(strcpy@dest+1)& (0+255),b
 10567   000194  0EFB               	movlw	low STR_23
 10568   000196  6F08               	movwf	strcpy@src& (0+255),b
 10569   000198  0EFF               	movlw	high STR_23
 10570   00019A  6F09               	movwf	(strcpy@src+1)& (0+255),b
 10571   00019C  EC04  F030         	call	_strcpy	;wreg free
 10572   0001A0  EF8A  F000         	goto	l7212
 10573   0001A4                     l7236:
 10574                           
 10575                           ; BSR set to: 1
 10576                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 657:     u.f = 1.
      +                          0;
 10577   0001A4  0E00               	movlw	0
 10578   0001A6  6F8E               	movwf	efgtoa@u& (0+255),b
 10579   0001A8  0E00               	movlw	0
 10580   0001AA  6F8F               	movwf	(efgtoa@u+1)& (0+255),b
 10581   0001AC  0E80               	movlw	128
 10582   0001AE  6F90               	movwf	(efgtoa@u+2)& (0+255),b
 10583   0001B0  0E3F               	movlw	63
 10584   0001B2  6F91               	movwf	(efgtoa@u+3)& (0+255),b
 10585                           
 10586                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 658:     e = 0;
 10587   0001B4  0E00               	movlw	0
 10588   0001B6  6F84               	movwf	(efgtoa@e+1)& (0+255),b
 10589   0001B8  0E00               	movlw	0
 10590   0001BA  6F83               	movwf	efgtoa@e& (0+255),b
 10591   0001BC                     
 10592                           ; BSR set to: 1
 10593                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 659:  if (!(g.f =
      +                          = 0.0)) {
 10594   0001BC  C18A  F106         	movff	efgtoa@g,___fleq@ff1
 10595   0001C0  C18B  F107         	movff	efgtoa@g+1,___fleq@ff1+1
 10596   0001C4  C18C  F108         	movff	efgtoa@g+2,___fleq@ff1+2
 10597   0001C8  C18D  F109         	movff	efgtoa@g+3,___fleq@ff1+3
 10598   0001CC  0E00               	movlw	0
 10599   0001CE  6F0A               	movwf	___fleq@ff2& (0+255),b
 10600   0001D0  0E00               	movlw	0
 10601   0001D2  6F0B               	movwf	(___fleq@ff2+1)& (0+255),b
 10602   0001D4  0E00               	movlw	0
 10603   0001D6  6F0C               	movwf	(___fleq@ff2+2)& (0+255),b
 10604   0001D8  0E00               	movlw	0
 10605   0001DA  6F0D               	movwf	(___fleq@ff2+3)& (0+255),b
 10606   0001DC  EC99  F02A         	call	___fleq	;wreg free
 10607   0001E0  0101               	movlb	1	; () banked
 10608   0001E2  B0D8               	btfsc	status,0,c
 10609   0001E4  EFF6  F000         	goto	u7921
 10610   0001E8  EFF8  F000         	goto	u7920
 10611   0001EC                     u7921:
 10612   0001EC  EFDA  F001         	goto	l1604
 10613   0001F0                     u7920:
 10614   0001F0  EF04  F001         	goto	l7244
 10615   0001F4                     l1606:
 10616                           
 10617                           ; BSR set to: 1
 10618                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 661:    u = ou;
 10619   0001F4  C177  F18E         	movff	efgtoa@ou,efgtoa@u
 10620   0001F8  C178  F18F         	movff	efgtoa@ou+1,efgtoa@u+1
 10621   0001FC  C179  F190         	movff	efgtoa@ou+2,efgtoa@u+2
 10622   000200  C17A  F191         	movff	efgtoa@ou+3,efgtoa@u+3
 10623   000204                     
 10624                           ; BSR set to: 1
 10625                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 662:    ++e;
 10626   000204  4B83               	infsnz	efgtoa@e& (0+255),f,b
 10627   000206  2B84               	incf	(efgtoa@e+1)& (0+255),f,b
 10628   000208                     l7244:
 10629                           
 10630                           ; BSR set to: 1
 10631                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 660:   while ((la
      +                          bs((g).u-((ou.f = u.f*10.0,ou)).u) <= 1) || g.f > ou.f) {
 10632   000208  C18E  F114         	movff	efgtoa@u,___flmul@b
 10633   00020C  C18F  F115         	movff	efgtoa@u+1,___flmul@b+1
 10634   000210  C190  F116         	movff	efgtoa@u+2,___flmul@b+2
 10635   000214  C191  F117         	movff	efgtoa@u+3,___flmul@b+3
 10636   000218  0E00               	movlw	0
 10637   00021A  6F18               	movwf	___flmul@a& (0+255),b
 10638   00021C  0E00               	movlw	0
 10639   00021E  6F19               	movwf	(___flmul@a+1)& (0+255),b
 10640   000220  0E20               	movlw	32
 10641   000222  6F1A               	movwf	(___flmul@a+2)& (0+255),b
 10642   000224  0E41               	movlw	65
 10643   000226  6F1B               	movwf	(___flmul@a+3)& (0+255),b
 10644   000228  ECFC  F00F         	call	___flmul	;wreg free
 10645   00022C  C114  F177         	movff	?___flmul,efgtoa@ou
 10646   000230  C115  F178         	movff	?___flmul+1,efgtoa@ou+1
 10647   000234  C116  F179         	movff	?___flmul+2,efgtoa@ou+2
 10648   000238  C117  F17A         	movff	?___flmul+3,efgtoa@ou+3
 10649   00023C  0101               	movlb	1	; () banked
 10650   00023E  5177               	movf	efgtoa@ou& (0+255),w,b
 10651   000240  5D8A               	subwf	efgtoa@g& (0+255),w,b
 10652   000242  6F06               	movwf	labs@a& (0+255),b
 10653   000244  5178               	movf	(efgtoa@ou+1)& (0+255),w,b
 10654   000246  598B               	subwfb	(efgtoa@g+1)& (0+255),w,b
 10655   000248  6F07               	movwf	(labs@a+1)& (0+255),b
 10656   00024A  5179               	movf	(efgtoa@ou+2)& (0+255),w,b
 10657   00024C  598C               	subwfb	(efgtoa@g+2)& (0+255),w,b
 10658   00024E  6F08               	movwf	(labs@a+2)& (0+255),b
 10659   000250  517A               	movf	(efgtoa@ou+3)& (0+255),w,b
 10660   000252  598D               	subwfb	(efgtoa@g+3)& (0+255),w,b
 10661   000254  6F09               	movwf	(labs@a+3)& (0+255),b
 10662   000256  EC70  F02E         	call	_labs	;wreg free
 10663   00025A  0101               	movlb	1	; () banked
 10664   00025C  BF09               	btfsc	(?_labs+3)& (0+255),7,b
 10665   00025E  EF3C  F001         	goto	u7931
 10666   000262  5109               	movf	(?_labs+3)& (0+255),w,b
 10667   000264  1108               	iorwf	(?_labs+2)& (0+255),w,b
 10668   000266  1107               	iorwf	(?_labs+1)& (0+255),w,b
 10669   000268  E109               	bnz	u7930
 10670   00026A  0E02               	movlw	2
 10671   00026C  5D06               	subwf	?_labs& (0+255),w,b
 10672   00026E  A0D8               	btfss	status,0,c
 10673   000270  EF3C  F001         	goto	u7931
 10674   000274  EF3E  F001         	goto	u7930
 10675   000278                     u7931:
 10676   000278  EFFA  F000         	goto	l1606
 10677   00027C                     u7930:
 10678   00027C                     
 10679                           ; BSR set to: 1
 10680   00027C  C177  F12D         	movff	efgtoa@ou,___flge@ff1
 10681   000280  C178  F12E         	movff	efgtoa@ou+1,___flge@ff1+1
 10682   000284  C179  F12F         	movff	efgtoa@ou+2,___flge@ff1+2
 10683   000288  C17A  F130         	movff	efgtoa@ou+3,___flge@ff1+3
 10684   00028C  C18A  F131         	movff	efgtoa@g,___flge@ff2
 10685   000290  C18B  F132         	movff	efgtoa@g+1,___flge@ff2+1
 10686   000294  C18C  F133         	movff	efgtoa@g+2,___flge@ff2+2
 10687   000298  C18D  F134         	movff	efgtoa@g+3,___flge@ff2+3
 10688   00029C  EC42  F023         	call	___flge	;wreg free
 10689   0002A0  0101               	movlb	1	; () banked
 10690   0002A2  A0D8               	btfss	status,0,c
 10691   0002A4  EF56  F001         	goto	u7941
 10692   0002A8  EF58  F001         	goto	u7940
 10693   0002AC                     u7941:
 10694   0002AC  EFFA  F000         	goto	l1606
 10695   0002B0                     u7940:
 10696   0002B0                     
 10697                           ; BSR set to: 1
 10698                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 664:   if ((labs(
      +                          (g).u-(u).u) <= 1)) {
 10699   0002B0  518E               	movf	efgtoa@u& (0+255),w,b
 10700   0002B2  5D8A               	subwf	efgtoa@g& (0+255),w,b
 10701   0002B4  6F06               	movwf	labs@a& (0+255),b
 10702   0002B6  518F               	movf	(efgtoa@u+1)& (0+255),w,b
 10703   0002B8  598B               	subwfb	(efgtoa@g+1)& (0+255),w,b
 10704   0002BA  6F07               	movwf	(labs@a+1)& (0+255),b
 10705   0002BC  5190               	movf	(efgtoa@u+2)& (0+255),w,b
 10706   0002BE  598C               	subwfb	(efgtoa@g+2)& (0+255),w,b
 10707   0002C0  6F08               	movwf	(labs@a+2)& (0+255),b
 10708   0002C2  5191               	movf	(efgtoa@u+3)& (0+255),w,b
 10709   0002C4  598D               	subwfb	(efgtoa@g+3)& (0+255),w,b
 10710   0002C6  6F09               	movwf	(labs@a+3)& (0+255),b
 10711   0002C8  EC70  F02E         	call	_labs	;wreg free
 10712   0002CC  0101               	movlb	1	; () banked
 10713   0002CE  BF09               	btfsc	(?_labs+3)& (0+255),7,b
 10714   0002D0  EF77  F001         	goto	u7950
 10715   0002D4  5109               	movf	(?_labs+3)& (0+255),w,b
 10716   0002D6  1108               	iorwf	(?_labs+2)& (0+255),w,b
 10717   0002D8  1107               	iorwf	(?_labs+1)& (0+255),w,b
 10718   0002DA  E107               	bnz	u7951
 10719   0002DC  0E02               	movlw	2
 10720   0002DE  5D06               	subwf	?_labs& (0+255),w,b
 10721   0002E0  B0D8               	btfsc	status,0,c
 10722   0002E2  EF75  F001         	goto	u7951
 10723   0002E6  EF77  F001         	goto	u7950
 10724   0002EA                     u7951:
 10725   0002EA  EFC0  F001         	goto	l7262
 10726   0002EE                     u7950:
 10727   0002EE                     l7252:
 10728                           
 10729                           ; BSR set to: 1
 10730                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 665:    g = u;
 10731   0002EE  C18E  F18A         	movff	efgtoa@u,efgtoa@g
 10732   0002F2  C18F  F18B         	movff	efgtoa@u+1,efgtoa@g+1
 10733   0002F6  C190  F18C         	movff	efgtoa@u+2,efgtoa@g+2
 10734   0002FA  C191  F18D         	movff	efgtoa@u+3,efgtoa@g+3
 10735                           
 10736                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 666:   }
 10737   0002FE  EFDA  F001         	goto	l1604
 10738   000302                     l7254:
 10739                           
 10740                           ; BSR set to: 1
 10741                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 669:     u.f = u.
      +                          f/10.0;
 10742   000302  C18E  F12D         	movff	efgtoa@u,___fldiv@b
 10743   000306  C18F  F12E         	movff	efgtoa@u+1,___fldiv@b+1
 10744   00030A  C190  F12F         	movff	efgtoa@u+2,___fldiv@b+2
 10745   00030E  C191  F130         	movff	efgtoa@u+3,___fldiv@b+3
 10746   000312  0E00               	movlw	0
 10747   000314  6F31               	movwf	___fldiv@a& (0+255),b
 10748   000316  0E00               	movlw	0
 10749   000318  6F32               	movwf	(___fldiv@a+1)& (0+255),b
 10750   00031A  0E20               	movlw	32
 10751   00031C  6F33               	movwf	(___fldiv@a+2)& (0+255),b
 10752   00031E  0E41               	movlw	65
 10753   000320  6F34               	movwf	(___fldiv@a+3)& (0+255),b
 10754   000322  EC2D  F016         	call	___fldiv	;wreg free
 10755   000326  C12D  F18E         	movff	?___fldiv,efgtoa@u
 10756   00032A  C12E  F18F         	movff	?___fldiv+1,efgtoa@u+1
 10757   00032E  C12F  F190         	movff	?___fldiv+2,efgtoa@u+2
 10758   000332  C130  F191         	movff	?___fldiv+3,efgtoa@u+3
 10759   000336                     
 10760                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 670:     --e;
 10761   000336  0101               	movlb	1	; () banked
 10762   000338  0783               	decf	efgtoa@e& (0+255),f,b
 10763   00033A  A0D8               	btfss	status,0,c
 10764   00033C  0784               	decf	(efgtoa@e+1)& (0+255),f,b
 10765   00033E                     
 10766                           ; BSR set to: 1
 10767                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 671:     if ((lab
      +                          s((g).u-(u).u) <= 1)) {
 10768   00033E  518E               	movf	efgtoa@u& (0+255),w,b
 10769   000340  5D8A               	subwf	efgtoa@g& (0+255),w,b
 10770   000342  6F06               	movwf	labs@a& (0+255),b
 10771   000344  518F               	movf	(efgtoa@u+1)& (0+255),w,b
 10772   000346  598B               	subwfb	(efgtoa@g+1)& (0+255),w,b
 10773   000348  6F07               	movwf	(labs@a+1)& (0+255),b
 10774   00034A  5190               	movf	(efgtoa@u+2)& (0+255),w,b
 10775   00034C  598C               	subwfb	(efgtoa@g+2)& (0+255),w,b
 10776   00034E  6F08               	movwf	(labs@a+2)& (0+255),b
 10777   000350  5191               	movf	(efgtoa@u+3)& (0+255),w,b
 10778   000352  598D               	subwfb	(efgtoa@g+3)& (0+255),w,b
 10779   000354  6F09               	movwf	(labs@a+3)& (0+255),b
 10780   000356  EC70  F02E         	call	_labs	;wreg free
 10781   00035A  0101               	movlb	1	; () banked
 10782   00035C  BF09               	btfsc	(?_labs+3)& (0+255),7,b
 10783   00035E  EFBE  F001         	goto	u7960
 10784   000362  5109               	movf	(?_labs+3)& (0+255),w,b
 10785   000364  1108               	iorwf	(?_labs+2)& (0+255),w,b
 10786   000366  1107               	iorwf	(?_labs+1)& (0+255),w,b
 10787   000368  E107               	bnz	u7961
 10788   00036A  0E02               	movlw	2
 10789   00036C  5D06               	subwf	?_labs& (0+255),w,b
 10790   00036E  B0D8               	btfsc	status,0,c
 10791   000370  EFBC  F001         	goto	u7961
 10792   000374  EFBE  F001         	goto	u7960
 10793   000378                     u7961:
 10794   000378  EFC0  F001         	goto	l7262
 10795   00037C                     u7960:
 10796   00037C  EF77  F001         	goto	l7252
 10797   000380                     l7262:
 10798                           
 10799                           ; BSR set to: 1
 10800                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 668:    while (g.
      +                          f < u.f) {
 10801   000380  C18A  F12D         	movff	efgtoa@g,___flge@ff1
 10802   000384  C18B  F12E         	movff	efgtoa@g+1,___flge@ff1+1
 10803   000388  C18C  F12F         	movff	efgtoa@g+2,___flge@ff1+2
 10804   00038C  C18D  F130         	movff	efgtoa@g+3,___flge@ff1+3
 10805   000390  C18E  F131         	movff	efgtoa@u,___flge@ff2
 10806   000394  C18F  F132         	movff	efgtoa@u+1,___flge@ff2+1
 10807   000398  C190  F133         	movff	efgtoa@u+2,___flge@ff2+2
 10808   00039C  C191  F134         	movff	efgtoa@u+3,___flge@ff2+3
 10809   0003A0  EC42  F023         	call	___flge	;wreg free
 10810   0003A4  0101               	movlb	1	; () banked
 10811   0003A6  A0D8               	btfss	status,0,c
 10812   0003A8  EFD8  F001         	goto	u7971
 10813   0003AC  EFDA  F001         	goto	u7970
 10814   0003B0                     u7971:
 10815   0003B0  EF81  F001         	goto	l7254
 10816   0003B4                     u7970:
 10817   0003B4                     l1604:
 10818                           
 10819                           ; BSR set to: 1
 10820                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 683:  mode = c;
 10821   0003B4  C160  F16D         	movff	efgtoa@c,efgtoa@mode
 10822                           
 10823                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 685:     nmode = 
      +                          mode;
 10824   0003B8  C16D  F174         	movff	efgtoa@mode,efgtoa@nmode
 10825   0003BC                     
 10826                           ; BSR set to: 1
 10827                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 695:  {;C:\Progra
      +                          m Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 696:         p = (prec < 0)
      +                           ? 6 : prec;
 10828   0003BC  0100               	movlb	0	; () banked
 10829   0003BE  BFE0               	btfsc	(_prec+1)& (0+255),7,b
 10830   0003C0  EFE4  F001         	goto	u7981
 10831   0003C4  EFE6  F001         	goto	u7980
 10832   0003C8                     u7981:
 10833   0003C8  EFEC  F001         	goto	l7268
 10834   0003CC                     u7980:
 10835   0003CC                     
 10836                           ; BSR set to: 0
 10837   0003CC  C0DF  F172         	movff	_prec,efgtoa@p
 10838   0003D0  C0E0  F173         	movff	_prec+1,efgtoa@p+1
 10839   0003D4  EFF1  F001         	goto	l7270
 10840   0003D8                     l7268:
 10841                           
 10842                           ; BSR set to: 0
 10843   0003D8  0E00               	movlw	0
 10844   0003DA  0101               	movlb	1	; () banked
 10845   0003DC  6F73               	movwf	(efgtoa@p+1)& (0+255),b
 10846   0003DE  0E06               	movlw	6
 10847   0003E0  6F72               	movwf	efgtoa@p& (0+255),b
 10848   0003E2                     l7270:
 10849                           
 10850                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 697:     };C:\Pro
      +                          gram Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 711:     m = p;
 10851   0003E2  C172  F170         	movff	efgtoa@p,efgtoa@m
 10852   0003E6  C173  F171         	movff	efgtoa@p+1,efgtoa@m+1
 10853   0003EA                     
 10854                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 715:  {;C:\Progra
      +                          m Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 716:         ++m;
 10855   0003EA  0101               	movlb	1	; () banked
 10856   0003EC  4B70               	infsnz	efgtoa@m& (0+255),f,b
 10857   0003EE  2B71               	incf	(efgtoa@m+1)& (0+255),f,b
 10858   0003F0                     
 10859                           ; BSR set to: 1
 10860                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 717:     };C:\Pro
      +                          gram Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 721:     if (nmode == 'f
      +                          ') {
 10861   0003F0  0E66               	movlw	102
 10862   0003F2  1974               	xorwf	efgtoa@nmode& (0+255),w,b
 10863   0003F4  A4D8               	btfss	status,2,c
 10864   0003F6  EFFF  F001         	goto	u7991
 10865   0003FA  EF01  F002         	goto	u7990
 10866   0003FE                     u7991:
 10867   0003FE  EF21  F002         	goto	l7284
 10868   000402                     u7990:
 10869   000402                     
 10870                           ; BSR set to: 1
 10871                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 722:         if (
      +                          e < 0) {
 10872   000402  BF84               	btfsc	(efgtoa@e+1)& (0+255),7,b
 10873   000404  EF08  F002         	goto	u8000
 10874   000408  EF06  F002         	goto	u8001
 10875   00040C                     u8001:
 10876   00040C  EF14  F002         	goto	l7280
 10877   000410                     u8000:
 10878   000410                     
 10879                           ; BSR set to: 1
 10880                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 723:             
      +                          u.f = 1.0;
 10881   000410  0E00               	movlw	0
 10882   000412  6F8E               	movwf	efgtoa@u& (0+255),b
 10883   000414  0E00               	movlw	0
 10884   000416  6F8F               	movwf	(efgtoa@u+1)& (0+255),b
 10885   000418  0E80               	movlw	128
 10886   00041A  6F90               	movwf	(efgtoa@u+2)& (0+255),b
 10887   00041C  0E3F               	movlw	63
 10888   00041E  6F91               	movwf	(efgtoa@u+3)& (0+255),b
 10889                           
 10890                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 724:             
      +                          e = 0;
 10891   000420  0E00               	movlw	0
 10892   000422  6F84               	movwf	(efgtoa@e+1)& (0+255),b
 10893   000424  0E00               	movlw	0
 10894   000426  6F83               	movwf	efgtoa@e& (0+255),b
 10895   000428                     l7280:
 10896                           
 10897                           ; BSR set to: 1
 10898                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 726:         if (
      +                          !(mode == 'g')) {
 10899   000428  0E67               	movlw	103
 10900   00042A  196D               	xorwf	efgtoa@mode& (0+255),w,b
 10901   00042C  B4D8               	btfsc	status,2,c
 10902   00042E  EF1B  F002         	goto	u8011
 10903   000432  EF1D  F002         	goto	u8010
 10904   000436                     u8011:
 10905   000436  EF21  F002         	goto	l7284
 10906   00043A                     u8010:
 10907   00043A                     
 10908                           ; BSR set to: 1
 10909                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 727:             
      +                          m += e;
 10910   00043A  5183               	movf	efgtoa@e& (0+255),w,b
 10911   00043C  2770               	addwf	efgtoa@m& (0+255),f,b
 10912   00043E  5184               	movf	(efgtoa@e+1)& (0+255),w,b
 10913   000440  2371               	addwfc	(efgtoa@m+1)& (0+255),f,b
 10914   000442                     l7284:
 10915                           
 10916                           ; BSR set to: 1
 10917                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 733:     i = 0;
 10918   000442  0E00               	movlw	0
 10919   000444  6F87               	movwf	(efgtoa@i+1)& (0+255),b
 10920   000446  0E00               	movlw	0
 10921   000448  6F86               	movwf	efgtoa@i& (0+255),b
 10922   00044A                     
 10923                           ; BSR set to: 1
 10924                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 734:     h = g.f;
 10925   00044A  C18A  F17B         	movff	efgtoa@g,efgtoa@h
 10926   00044E  C18B  F17C         	movff	efgtoa@g+1,efgtoa@h+1
 10927   000452  C18C  F17D         	movff	efgtoa@g+2,efgtoa@h+2
 10928   000456  C18D  F17E         	movff	efgtoa@g+3,efgtoa@h+3
 10929   00045A                     
 10930                           ; BSR set to: 1
 10931                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 735:     ou = u;
 10932   00045A  C18E  F177         	movff	efgtoa@u,efgtoa@ou
 10933   00045E  C18F  F178         	movff	efgtoa@u+1,efgtoa@ou+1
 10934   000462  C190  F179         	movff	efgtoa@u+2,efgtoa@ou+2
 10935   000466  C191  F17A         	movff	efgtoa@u+3,efgtoa@ou+3
 10936                           
 10937                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 736:     while (i
      +                           < m) {
 10938   00046A  EFB3  F002         	goto	l7298
 10939   00046E                     l7290:
 10940                           
 10941                           ; BSR set to: 1
 10942                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 737:         l = 
      +                          floorf(h/u.f);
 10943   00046E  C17B  F12D         	movff	efgtoa@h,___fldiv@b
 10944   000472  C17C  F12E         	movff	efgtoa@h+1,___fldiv@b+1
 10945   000476  C17D  F12F         	movff	efgtoa@h+2,___fldiv@b+2
 10946   00047A  C17E  F130         	movff	efgtoa@h+3,___fldiv@b+3
 10947   00047E  C18E  F131         	movff	efgtoa@u,___fldiv@a
 10948   000482  C18F  F132         	movff	efgtoa@u+1,___fldiv@a+1
 10949   000486  C190  F133         	movff	efgtoa@u+2,___fldiv@a+2
 10950   00048A  C191  F134         	movff	efgtoa@u+3,___fldiv@a+3
 10951   00048E  EC2D  F016         	call	___fldiv	;wreg free
 10952   000492  C12D  F146         	movff	?___fldiv,floorf@x
 10953   000496  C12E  F147         	movff	?___fldiv+1,floorf@x+1
 10954   00049A  C12F  F148         	movff	?___fldiv+2,floorf@x+2
 10955   00049E  C130  F149         	movff	?___fldiv+3,floorf@x+3
 10956   0004A2  EC57  F01E         	call	_floorf	;wreg free
 10957   0004A6  C146  F17F         	movff	?_floorf,efgtoa@l
 10958   0004AA  C147  F180         	movff	?_floorf+1,efgtoa@l+1
 10959   0004AE  C148  F181         	movff	?_floorf+2,efgtoa@l+2
 10960   0004B2  C149  F182         	movff	?_floorf+3,efgtoa@l+3
 10961                           
 10962                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 738:         d = 
      +                          (int)l;
 10963   0004B6  C17F  F150         	movff	efgtoa@l,___fltol@f1
 10964   0004BA  C180  F151         	movff	efgtoa@l+1,___fltol@f1+1
 10965   0004BE  C181  F152         	movff	efgtoa@l+2,___fltol@f1+2
 10966   0004C2  C182  F153         	movff	efgtoa@l+3,___fltol@f1+3
 10967   0004C6  ECBE  F022         	call	___fltol	;wreg free
 10968   0004CA  C150  F16E         	movff	?___fltol,efgtoa@d
 10969   0004CE  C151  F16F         	movff	?___fltol+1,efgtoa@d+1
 10970   0004D2                     
 10971                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 739:         h -=
      +                           l*u.f;
 10972   0004D2  C17B  F12D         	movff	efgtoa@h,___flsub@b
 10973   0004D6  C17C  F12E         	movff	efgtoa@h+1,___flsub@b+1
 10974   0004DA  C17D  F12F         	movff	efgtoa@h+2,___flsub@b+2
 10975   0004DE  C17E  F130         	movff	efgtoa@h+3,___flsub@b+3
 10976   0004E2  C17F  F118         	movff	efgtoa@l,___flmul@a
 10977   0004E6  C180  F119         	movff	efgtoa@l+1,___flmul@a+1
 10978   0004EA  C181  F11A         	movff	efgtoa@l+2,___flmul@a+2
 10979   0004EE  C182  F11B         	movff	efgtoa@l+3,___flmul@a+3
 10980   0004F2  C18E  F114         	movff	efgtoa@u,___flmul@b
 10981   0004F6  C18F  F115         	movff	efgtoa@u+1,___flmul@b+1
 10982   0004FA  C190  F116         	movff	efgtoa@u+2,___flmul@b+2
 10983   0004FE  C191  F117         	movff	efgtoa@u+3,___flmul@b+3
 10984   000502  ECFC  F00F         	call	___flmul	;wreg free
 10985   000506  C114  F131         	movff	?___flmul,___flsub@a
 10986   00050A  C115  F132         	movff	?___flmul+1,___flsub@a+1
 10987   00050E  C116  F133         	movff	?___flmul+2,___flsub@a+2
 10988   000512  C117  F134         	movff	?___flmul+3,___flsub@a+3
 10989   000516  ECE0  F02F         	call	___flsub	;wreg free
 10990   00051A  C12D  F17B         	movff	?___flsub,efgtoa@h
 10991   00051E  C12E  F17C         	movff	?___flsub+1,efgtoa@h+1
 10992   000522  C12F  F17D         	movff	?___flsub+2,efgtoa@h+2
 10993   000526  C130  F17E         	movff	?___flsub+3,efgtoa@h+3
 10994   00052A                     
 10995                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 740:         u.f 
      +                          = u.f/10.0;
 10996   00052A  C18E  F12D         	movff	efgtoa@u,___fldiv@b
 10997   00052E  C18F  F12E         	movff	efgtoa@u+1,___fldiv@b+1
 10998   000532  C190  F12F         	movff	efgtoa@u+2,___fldiv@b+2
 10999   000536  C191  F130         	movff	efgtoa@u+3,___fldiv@b+3
 11000   00053A  0E00               	movlw	0
 11001   00053C  0101               	movlb	1	; () banked
 11002   00053E  6F31               	movwf	___fldiv@a& (0+255),b
 11003   000540  0E00               	movlw	0
 11004   000542  6F32               	movwf	(___fldiv@a+1)& (0+255),b
 11005   000544  0E20               	movlw	32
 11006   000546  6F33               	movwf	(___fldiv@a+2)& (0+255),b
 11007   000548  0E41               	movlw	65
 11008   00054A  6F34               	movwf	(___fldiv@a+3)& (0+255),b
 11009   00054C  EC2D  F016         	call	___fldiv	;wreg free
 11010   000550  C12D  F18E         	movff	?___fldiv,efgtoa@u
 11011   000554  C12E  F18F         	movff	?___fldiv+1,efgtoa@u+1
 11012   000558  C12F  F190         	movff	?___fldiv+2,efgtoa@u+2
 11013   00055C  C130  F191         	movff	?___fldiv+3,efgtoa@u+3
 11014   000560                     
 11015                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 741:         ++i;
 11016   000560  0101               	movlb	1	; () banked
 11017   000562  4B86               	infsnz	efgtoa@i& (0+255),f,b
 11018   000564  2B87               	incf	(efgtoa@i+1)& (0+255),f,b
 11019   000566                     l7298:
 11020                           
 11021                           ; BSR set to: 1
 11022                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 736:     while (i
      +                           < m) {
 11023   000566  5170               	movf	efgtoa@m& (0+255),w,b
 11024   000568  5D86               	subwf	efgtoa@i& (0+255),w,b
 11025   00056A  5187               	movf	(efgtoa@i+1)& (0+255),w,b
 11026   00056C  0A80               	xorlw	128
 11027   00056E  6F61               	movwf	??_efgtoa& (0+255),b
 11028   000570  5171               	movf	(efgtoa@m+1)& (0+255),w,b
 11029   000572  0A80               	xorlw	128
 11030   000574  5961               	subwfb	??_efgtoa& (0+255),w,b
 11031   000576  A0D8               	btfss	status,0,c
 11032   000578  EFC0  F002         	goto	u8021
 11033   00057C  EFC2  F002         	goto	u8020
 11034   000580                     u8021:
 11035   000580  EF37  F002         	goto	l7290
 11036   000584                     u8020:
 11037   000584                     
 11038                           ; BSR set to: 1
 11039                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 745:     l = u.f*
      +                          5.0;
 11040   000584  C18E  F114         	movff	efgtoa@u,___flmul@b
 11041   000588  C18F  F115         	movff	efgtoa@u+1,___flmul@b+1
 11042   00058C  C190  F116         	movff	efgtoa@u+2,___flmul@b+2
 11043   000590  C191  F117         	movff	efgtoa@u+3,___flmul@b+3
 11044   000594  0E00               	movlw	0
 11045   000596  6F18               	movwf	___flmul@a& (0+255),b
 11046   000598  0E00               	movlw	0
 11047   00059A  6F19               	movwf	(___flmul@a+1)& (0+255),b
 11048   00059C  0EA0               	movlw	160
 11049   00059E  6F1A               	movwf	(___flmul@a+2)& (0+255),b
 11050   0005A0  0E40               	movlw	64
 11051   0005A2  6F1B               	movwf	(___flmul@a+3)& (0+255),b
 11052   0005A4  ECFC  F00F         	call	___flmul	;wreg free
 11053   0005A8  C114  F17F         	movff	?___flmul,efgtoa@l
 11054   0005AC  C115  F180         	movff	?___flmul+1,efgtoa@l+1
 11055   0005B0  C116  F181         	movff	?___flmul+2,efgtoa@l+2
 11056   0005B4  C117  F182         	movff	?___flmul+3,efgtoa@l+3
 11057   0005B8                     
 11058                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 746:     if (h < 
      +                          l) {
 11059   0005B8  C17B  F12D         	movff	efgtoa@h,___flge@ff1
 11060   0005BC  C17C  F12E         	movff	efgtoa@h+1,___flge@ff1+1
 11061   0005C0  C17D  F12F         	movff	efgtoa@h+2,___flge@ff1+2
 11062   0005C4  C17E  F130         	movff	efgtoa@h+3,___flge@ff1+3
 11063   0005C8  C17F  F131         	movff	efgtoa@l,___flge@ff2
 11064   0005CC  C180  F132         	movff	efgtoa@l+1,___flge@ff2+1
 11065   0005D0  C181  F133         	movff	efgtoa@l+2,___flge@ff2+2
 11066   0005D4  C182  F134         	movff	efgtoa@l+3,___flge@ff2+3
 11067   0005D8  EC42  F023         	call	___flge	;wreg free
 11068   0005DC  0101               	movlb	1	; () banked
 11069   0005DE  B0D8               	btfsc	status,0,c
 11070   0005E0  EFF4  F002         	goto	u8031
 11071   0005E4  EFF6  F002         	goto	u8030
 11072   0005E8                     u8031:
 11073   0005E8  EF00  F003         	goto	l7306
 11074   0005EC                     u8030:
 11075   0005EC                     
 11076                           ; BSR set to: 1
 11077                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 747:         l = 
      +                          0.0;
 11078   0005EC  0E00               	movlw	0
 11079   0005EE  6F7F               	movwf	efgtoa@l& (0+255),b
 11080   0005F0  0E00               	movlw	0
 11081   0005F2  6F80               	movwf	(efgtoa@l+1)& (0+255),b
 11082   0005F4  0E00               	movlw	0
 11083   0005F6  6F81               	movwf	(efgtoa@l+2)& (0+255),b
 11084   0005F8  0E00               	movlw	0
 11085   0005FA  6F82               	movwf	(efgtoa@l+3)& (0+255),b
 11086                           
 11087                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 748:     } else {
 11088   0005FC  EF29  F003         	goto	l7312
 11089   000600                     l7306:
 11090                           
 11091                           ; BSR set to: 1
 11092                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 750:         if (
      +                          (h == l) && !(d % 2)) {
 11093   000600  C17B  F106         	movff	efgtoa@h,___fleq@ff1
 11094   000604  C17C  F107         	movff	efgtoa@h+1,___fleq@ff1+1
 11095   000608  C17D  F108         	movff	efgtoa@h+2,___fleq@ff1+2
 11096   00060C  C17E  F109         	movff	efgtoa@h+3,___fleq@ff1+3
 11097   000610  C17F  F10A         	movff	efgtoa@l,___fleq@ff2
 11098   000614  C180  F10B         	movff	efgtoa@l+1,___fleq@ff2+1
 11099   000618  C181  F10C         	movff	efgtoa@l+2,___fleq@ff2+2
 11100   00061C  C182  F10D         	movff	efgtoa@l+3,___fleq@ff2+3
 11101   000620  EC99  F02A         	call	___fleq	;wreg free
 11102   000624  0101               	movlb	1	; () banked
 11103   000626  A0D8               	btfss	status,0,c
 11104   000628  EF18  F003         	goto	u8041
 11105   00062C  EF1A  F003         	goto	u8040
 11106   000630                     u8041:
 11107   000630  EF29  F003         	goto	l7312
 11108   000634                     u8040:
 11109   000634                     
 11110                           ; BSR set to: 1
 11111   000634  B16E               	btfsc	efgtoa@d& (0+255),0,b
 11112   000636  EF1F  F003         	goto	u8051
 11113   00063A  EF21  F003         	goto	u8050
 11114   00063E                     u8051:
 11115   00063E  EF29  F003         	goto	l7312
 11116   000642                     u8050:
 11117   000642                     
 11118                           ; BSR set to: 1
 11119                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 751:             
      +                          l = 0.0;
 11120   000642  0E00               	movlw	0
 11121   000644  6F7F               	movwf	efgtoa@l& (0+255),b
 11122   000646  0E00               	movlw	0
 11123   000648  6F80               	movwf	(efgtoa@l+1)& (0+255),b
 11124   00064A  0E00               	movlw	0
 11125   00064C  6F81               	movwf	(efgtoa@l+2)& (0+255),b
 11126   00064E  0E00               	movlw	0
 11127   000650  6F82               	movwf	(efgtoa@l+3)& (0+255),b
 11128   000652                     l7312:
 11129                           
 11130                           ; BSR set to: 1
 11131                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 756:     h = g.f 
      +                          + l;
 11132   000652  C18A  F106         	movff	efgtoa@g,___fladd@b
 11133   000656  C18B  F107         	movff	efgtoa@g+1,___fladd@b+1
 11134   00065A  C18C  F108         	movff	efgtoa@g+2,___fladd@b+2
 11135   00065E  C18D  F109         	movff	efgtoa@g+3,___fladd@b+3
 11136   000662  C17F  F10A         	movff	efgtoa@l,___fladd@a
 11137   000666  C180  F10B         	movff	efgtoa@l+1,___fladd@a+1
 11138   00066A  C181  F10C         	movff	efgtoa@l+2,___fladd@a+2
 11139   00066E  C182  F10D         	movff	efgtoa@l+3,___fladd@a+3
 11140   000672  EC45  F00B         	call	___fladd	;wreg free
 11141   000676  C106  F17B         	movff	?___fladd,efgtoa@h
 11142   00067A  C107  F17C         	movff	?___fladd+1,efgtoa@h+1
 11143   00067E  C108  F17D         	movff	?___fladd+2,efgtoa@h+2
 11144   000682  C109  F17E         	movff	?___fladd+3,efgtoa@h+3
 11145   000686                     
 11146                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 758:  if (h >= (o
      +                          u.f*10.0)) {
 11147   000686  C17B  F12D         	movff	efgtoa@h,___flge@ff1
 11148   00068A  C17C  F12E         	movff	efgtoa@h+1,___flge@ff1+1
 11149   00068E  C17D  F12F         	movff	efgtoa@h+2,___flge@ff1+2
 11150   000692  C17E  F130         	movff	efgtoa@h+3,___flge@ff1+3
 11151   000696  0E00               	movlw	0
 11152   000698  0101               	movlb	1	; () banked
 11153   00069A  6F18               	movwf	___flmul@a& (0+255),b
 11154   00069C  0E00               	movlw	0
 11155   00069E  6F19               	movwf	(___flmul@a+1)& (0+255),b
 11156   0006A0  0E20               	movlw	32
 11157   0006A2  6F1A               	movwf	(___flmul@a+2)& (0+255),b
 11158   0006A4  0E41               	movlw	65
 11159   0006A6  6F1B               	movwf	(___flmul@a+3)& (0+255),b
 11160   0006A8  C177  F114         	movff	efgtoa@ou,___flmul@b
 11161   0006AC  C178  F115         	movff	efgtoa@ou+1,___flmul@b+1
 11162   0006B0  C179  F116         	movff	efgtoa@ou+2,___flmul@b+2
 11163   0006B4  C17A  F117         	movff	efgtoa@ou+3,___flmul@b+3
 11164   0006B8  ECFC  F00F         	call	___flmul	;wreg free
 11165   0006BC  C114  F131         	movff	?___flmul,___flge@ff2
 11166   0006C0  C115  F132         	movff	?___flmul+1,___flge@ff2+1
 11167   0006C4  C116  F133         	movff	?___flmul+2,___flge@ff2+2
 11168   0006C8  C117  F134         	movff	?___flmul+3,___flge@ff2+3
 11169   0006CC  EC42  F023         	call	___flge	;wreg free
 11170   0006D0  0101               	movlb	1	; () banked
 11171   0006D2  A0D8               	btfss	status,0,c
 11172   0006D4  EF6E  F003         	goto	u8061
 11173   0006D8  EF70  F003         	goto	u8060
 11174   0006DC                     u8061:
 11175   0006DC  EF98  F003         	goto	l7324
 11176   0006E0                     u8060:
 11177   0006E0                     
 11178                           ; BSR set to: 1
 11179                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 759:   e++;
 11180   0006E0  4B83               	infsnz	efgtoa@e& (0+255),f,b
 11181   0006E2  2B84               	incf	(efgtoa@e+1)& (0+255),f,b
 11182   0006E4                     
 11183                           ; BSR set to: 1
 11184                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 760:   ou.f *= 10
      +                          .0;
 11185   0006E4  C177  F114         	movff	efgtoa@ou,___flmul@b
 11186   0006E8  C178  F115         	movff	efgtoa@ou+1,___flmul@b+1
 11187   0006EC  C179  F116         	movff	efgtoa@ou+2,___flmul@b+2
 11188   0006F0  C17A  F117         	movff	efgtoa@ou+3,___flmul@b+3
 11189   0006F4  0E00               	movlw	0
 11190   0006F6  6F18               	movwf	___flmul@a& (0+255),b
 11191   0006F8  0E00               	movlw	0
 11192   0006FA  6F19               	movwf	(___flmul@a+1)& (0+255),b
 11193   0006FC  0E20               	movlw	32
 11194   0006FE  6F1A               	movwf	(___flmul@a+2)& (0+255),b
 11195   000700  0E41               	movlw	65
 11196   000702  6F1B               	movwf	(___flmul@a+3)& (0+255),b
 11197   000704  ECFC  F00F         	call	___flmul	;wreg free
 11198   000708  C114  F177         	movff	?___flmul,efgtoa@ou
 11199   00070C  C115  F178         	movff	?___flmul+1,efgtoa@ou+1
 11200   000710  C116  F179         	movff	?___flmul+2,efgtoa@ou+2
 11201   000714  C117  F17A         	movff	?___flmul+3,efgtoa@ou+3
 11202   000718                     
 11203                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 762:   if (nmode 
      +                          == 'f') {
 11204   000718  0E66               	movlw	102
 11205   00071A  0101               	movlb	1	; () banked
 11206   00071C  1974               	xorwf	efgtoa@nmode& (0+255),w,b
 11207   00071E  A4D8               	btfss	status,2,c
 11208   000720  EF94  F003         	goto	u8071
 11209   000724  EF96  F003         	goto	u8070
 11210   000728                     u8071:
 11211   000728  EF98  F003         	goto	l7324
 11212   00072C                     u8070:
 11213   00072C                     
 11214                           ; BSR set to: 1
 11215                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 764:    m++;
 11216   00072C  4B70               	infsnz	efgtoa@m& (0+255),f,b
 11217   00072E  2B71               	incf	(efgtoa@m+1)& (0+255),f,b
 11218   000730                     l7324:
 11219                           
 11220                           ; BSR set to: 1
 11221                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 770:     u = ou;
 11222   000730  C177  F18E         	movff	efgtoa@ou,efgtoa@u
 11223   000734  C178  F18F         	movff	efgtoa@ou+1,efgtoa@u+1
 11224   000738  C179  F190         	movff	efgtoa@ou+2,efgtoa@u+2
 11225   00073C  C17A  F191         	movff	efgtoa@ou+3,efgtoa@u+3
 11226   000740                     
 11227                           ; BSR set to: 1
 11228                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 772:     ne = (nm
      +                          ode == 'e') ? 0 : e;
 11229   000740  0E65               	movlw	101
 11230   000742  1974               	xorwf	efgtoa@nmode& (0+255),w,b
 11231   000744  B4D8               	btfsc	status,2,c
 11232   000746  EFA7  F003         	goto	u8081
 11233   00074A  EFA9  F003         	goto	u8080
 11234   00074E                     u8081:
 11235   00074E  EFAF  F003         	goto	l7330
 11236   000752                     u8080:
 11237   000752                     
 11238                           ; BSR set to: 1
 11239   000752  C183  F169         	movff	efgtoa@e,efgtoa@ne
 11240   000756  C184  F16A         	movff	efgtoa@e+1,efgtoa@ne+1
 11241   00075A  EFB3  F003         	goto	l7332
 11242   00075E                     l7330:
 11243                           
 11244                           ; BSR set to: 1
 11245   00075E  0E00               	movlw	0
 11246   000760  6F6A               	movwf	(efgtoa@ne+1)& (0+255),b
 11247   000762  0E00               	movlw	0
 11248   000764  6F69               	movwf	efgtoa@ne& (0+255),b
 11249   000766                     l7332:
 11250                           
 11251                           ; BSR set to: 1
 11252                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 776:     pp = 0;
 11253   000766  6B6B               	clrf	efgtoa@pp& (0+255),b
 11254                           
 11255                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 777:     t = 0;
 11256   000768  0E00               	movlw	0
 11257   00076A  6F64               	movwf	(efgtoa@t+1)& (0+255),b
 11258   00076C  0E00               	movlw	0
 11259   00076E  6F63               	movwf	efgtoa@t& (0+255),b
 11260                           
 11261                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 778:     i = 0;
 11262   000770  0E00               	movlw	0
 11263   000772  6F87               	movwf	(efgtoa@i+1)& (0+255),b
 11264   000774  0E00               	movlw	0
 11265   000776  6F86               	movwf	efgtoa@i& (0+255),b
 11266                           
 11267                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 779:     while ((
      +                          i < m) && (n < (80 - 5))) {
 11268   000778  EFA4  F004         	goto	l7374
 11269   00077C                     l7334:
 11270                           
 11271                           ; BSR set to: 1
 11272                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 780:         l = 
      +                          floorf(h/u.f);
 11273   00077C  C17B  F12D         	movff	efgtoa@h,___fldiv@b
 11274   000780  C17C  F12E         	movff	efgtoa@h+1,___fldiv@b+1
 11275   000784  C17D  F12F         	movff	efgtoa@h+2,___fldiv@b+2
 11276   000788  C17E  F130         	movff	efgtoa@h+3,___fldiv@b+3
 11277   00078C  C18E  F131         	movff	efgtoa@u,___fldiv@a
 11278   000790  C18F  F132         	movff	efgtoa@u+1,___fldiv@a+1
 11279   000794  C190  F133         	movff	efgtoa@u+2,___fldiv@a+2
 11280   000798  C191  F134         	movff	efgtoa@u+3,___fldiv@a+3
 11281   00079C  EC2D  F016         	call	___fldiv	;wreg free
 11282   0007A0  C12D  F146         	movff	?___fldiv,floorf@x
 11283   0007A4  C12E  F147         	movff	?___fldiv+1,floorf@x+1
 11284   0007A8  C12F  F148         	movff	?___fldiv+2,floorf@x+2
 11285   0007AC  C130  F149         	movff	?___fldiv+3,floorf@x+3
 11286   0007B0  EC57  F01E         	call	_floorf	;wreg free
 11287   0007B4  C146  F17F         	movff	?_floorf,efgtoa@l
 11288   0007B8  C147  F180         	movff	?_floorf+1,efgtoa@l+1
 11289   0007BC  C148  F181         	movff	?_floorf+2,efgtoa@l+2
 11290   0007C0  C149  F182         	movff	?_floorf+3,efgtoa@l+3
 11291                           
 11292                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 781:         d = 
      +                          (int)l > 9 ? 9 : (int)l;
 11293   0007C4  C17F  F150         	movff	efgtoa@l,___fltol@f1
 11294   0007C8  C180  F151         	movff	efgtoa@l+1,___fltol@f1+1
 11295   0007CC  C181  F152         	movff	efgtoa@l+2,___fltol@f1+2
 11296   0007D0  C182  F153         	movff	efgtoa@l+3,___fltol@f1+3
 11297   0007D4  ECBE  F022         	call	___fltol	;wreg free
 11298   0007D8  0101               	movlb	1	; () banked
 11299   0007DA  BF51               	btfsc	(?___fltol+1)& (0+255),7,b
 11300   0007DC  EFFB  F003         	goto	u8090
 11301   0007E0  5151               	movf	(?___fltol+1)& (0+255),w,b
 11302   0007E2  E107               	bnz	u8091
 11303   0007E4  0E0A               	movlw	10
 11304   0007E6  5D50               	subwf	?___fltol& (0+255),w,b
 11305   0007E8  B0D8               	btfsc	status,0,c
 11306   0007EA  EFF9  F003         	goto	u8091
 11307   0007EE  EFFB  F003         	goto	u8090
 11308   0007F2                     u8091:
 11309   0007F2  EF0B  F004         	goto	l7338
 11310   0007F6                     u8090:
 11311   0007F6                     
 11312                           ; BSR set to: 1
 11313   0007F6  C17F  F150         	movff	efgtoa@l,___fltol@f1
 11314   0007FA  C180  F151         	movff	efgtoa@l+1,___fltol@f1+1
 11315   0007FE  C181  F152         	movff	efgtoa@l+2,___fltol@f1+2
 11316   000802  C182  F153         	movff	efgtoa@l+3,___fltol@f1+3
 11317   000806  ECBE  F022         	call	___fltol	;wreg free
 11318   00080A  C150  F16E         	movff	?___fltol,efgtoa@d
 11319   00080E  C151  F16F         	movff	?___fltol+1,efgtoa@d+1
 11320   000812  EF0F  F004         	goto	l1638
 11321   000816                     l7338:
 11322                           
 11323                           ; BSR set to: 1
 11324   000816  0E00               	movlw	0
 11325   000818  6F6F               	movwf	(efgtoa@d+1)& (0+255),b
 11326   00081A  0E09               	movlw	9
 11327   00081C  6F6E               	movwf	efgtoa@d& (0+255),b
 11328   00081E                     l1638:
 11329                           
 11330                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 792:   {;C:\Progr
      +                          am Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 793:             if (!pp &
      +                          & (ne < 0)) {
 11331   00081E  0101               	movlb	1	; () banked
 11332   000820  516B               	movf	efgtoa@pp& (0+255),w,b
 11333   000822  A4D8               	btfss	status,2,c
 11334   000824  EF16  F004         	goto	u8101
 11335   000828  EF18  F004         	goto	u8100
 11336   00082C                     u8101:
 11337   00082C  EF40  F004         	goto	l7358
 11338   000830                     u8100:
 11339   000830                     
 11340                           ; BSR set to: 1
 11341   000830  BF6A               	btfsc	(efgtoa@ne+1)& (0+255),7,b
 11342   000832  EF1F  F004         	goto	u8110
 11343   000836  EF1D  F004         	goto	u8111
 11344   00083A                     u8111:
 11345   00083A  EF40  F004         	goto	l7358
 11346   00083E                     u8110:
 11347   00083E                     
 11348                           ; BSR set to: 1
 11349                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 794:             
      +                              dbuf[n++] = '.';
 11350   00083E  0E00               	movlw	low _dbuf
 11351   000840  2588               	addwf	efgtoa@n& (0+255),w,b
 11352   000842  6ED9               	movwf	fsr2l,c
 11353   000844  0E02               	movlw	high _dbuf
 11354   000846  2189               	addwfc	(efgtoa@n+1)& (0+255),w,b
 11355   000848  6EDA               	movwf	fsr2h,c
 11356   00084A  0E2E               	movlw	46
 11357   00084C  6EDF               	movwf	indf2,c
 11358   00084E                     
 11359                           ; BSR set to: 1
 11360   00084E  4B88               	infsnz	efgtoa@n& (0+255),f,b
 11361   000850  2B89               	incf	(efgtoa@n+1)& (0+255),f,b
 11362   000852                     
 11363                           ; BSR set to: 1
 11364                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 795:             
      +                              --w;
 11365   000852  0775               	decf	efgtoa@w& (0+255),f,b
 11366   000854  A0D8               	btfss	status,0,c
 11367   000856  0776               	decf	(efgtoa@w+1)& (0+255),f,b
 11368   000858                     
 11369                           ; BSR set to: 1
 11370                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 796:             
      +                              pp = 1;
 11371   000858  0E01               	movlw	1
 11372   00085A  6F6B               	movwf	efgtoa@pp& (0+255),b
 11373   00085C  EF40  F004         	goto	l7358
 11374   000860                     l7350:
 11375                           
 11376                           ; BSR set to: 1
 11377                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 799:             
      +                              dbuf[n++] = '0';
 11378   000860  0E00               	movlw	low _dbuf
 11379   000862  2588               	addwf	efgtoa@n& (0+255),w,b
 11380   000864  6ED9               	movwf	fsr2l,c
 11381   000866  0E02               	movlw	high _dbuf
 11382   000868  2189               	addwfc	(efgtoa@n+1)& (0+255),w,b
 11383   00086A  6EDA               	movwf	fsr2h,c
 11384   00086C  0E30               	movlw	48
 11385   00086E  6EDF               	movwf	indf2,c
 11386   000870                     
 11387                           ; BSR set to: 1
 11388   000870  4B88               	infsnz	efgtoa@n& (0+255),f,b
 11389   000872  2B89               	incf	(efgtoa@n+1)& (0+255),f,b
 11390   000874                     
 11391                           ; BSR set to: 1
 11392                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 800:             
      +                              --w;
 11393   000874  0775               	decf	efgtoa@w& (0+255),f,b
 11394   000876  A0D8               	btfss	status,0,c
 11395   000878  0776               	decf	(efgtoa@w+1)& (0+255),f,b
 11396   00087A                     
 11397                           ; BSR set to: 1
 11398                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 801:             
      +                              --t;
 11399   00087A  0763               	decf	efgtoa@t& (0+255),f,b
 11400   00087C  A0D8               	btfss	status,0,c
 11401   00087E  0764               	decf	(efgtoa@t+1)& (0+255),f,b
 11402   000880                     l7358:
 11403                           
 11404                           ; BSR set to: 1
 11405                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 798:             
      +                          while (t) {
 11406   000880  5163               	movf	efgtoa@t& (0+255),w,b
 11407   000882  1164               	iorwf	(efgtoa@t+1)& (0+255),w,b
 11408   000884  A4D8               	btfss	status,2,c
 11409   000886  EF47  F004         	goto	u8121
 11410   00088A  EF49  F004         	goto	u8120
 11411   00088E                     u8121:
 11412   00088E  EF30  F004         	goto	l7350
 11413   000892                     u8120:
 11414   000892                     
 11415                           ; BSR set to: 1
 11416                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 803:             
      +                          dbuf[n++] = (char)((int)'0' + d);
 11417   000892  0E00               	movlw	low _dbuf
 11418   000894  2588               	addwf	efgtoa@n& (0+255),w,b
 11419   000896  6ED9               	movwf	fsr2l,c
 11420   000898  0E02               	movlw	high _dbuf
 11421   00089A  2189               	addwfc	(efgtoa@n+1)& (0+255),w,b
 11422   00089C  6EDA               	movwf	fsr2h,c
 11423   00089E  516E               	movf	efgtoa@d& (0+255),w,b
 11424   0008A0  0F30               	addlw	48
 11425   0008A2  6EDF               	movwf	indf2,c
 11426   0008A4                     
 11427                           ; BSR set to: 1
 11428   0008A4  4B88               	infsnz	efgtoa@n& (0+255),f,b
 11429   0008A6  2B89               	incf	(efgtoa@n+1)& (0+255),f,b
 11430   0008A8                     
 11431                           ; BSR set to: 1
 11432                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 804:             
      +                          --w;
 11433   0008A8  0775               	decf	efgtoa@w& (0+255),f,b
 11434   0008AA  A0D8               	btfss	status,0,c
 11435   0008AC  0776               	decf	(efgtoa@w+1)& (0+255),f,b
 11436   0008AE                     
 11437                           ; BSR set to: 1
 11438                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 805:         };C:
      +                          \Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 806:         h -= l*
      +                          u.f;
 11439   0008AE  C17B  F12D         	movff	efgtoa@h,___flsub@b
 11440   0008B2  C17C  F12E         	movff	efgtoa@h+1,___flsub@b+1
 11441   0008B6  C17D  F12F         	movff	efgtoa@h+2,___flsub@b+2
 11442   0008BA  C17E  F130         	movff	efgtoa@h+3,___flsub@b+3
 11443   0008BE  C17F  F118         	movff	efgtoa@l,___flmul@a
 11444   0008C2  C180  F119         	movff	efgtoa@l+1,___flmul@a+1
 11445   0008C6  C181  F11A         	movff	efgtoa@l+2,___flmul@a+2
 11446   0008CA  C182  F11B         	movff	efgtoa@l+3,___flmul@a+3
 11447   0008CE  C18E  F114         	movff	efgtoa@u,___flmul@b
 11448   0008D2  C18F  F115         	movff	efgtoa@u+1,___flmul@b+1
 11449   0008D6  C190  F116         	movff	efgtoa@u+2,___flmul@b+2
 11450   0008DA  C191  F117         	movff	efgtoa@u+3,___flmul@b+3
 11451   0008DE  ECFC  F00F         	call	___flmul	;wreg free
 11452   0008E2  C114  F131         	movff	?___flmul,___flsub@a
 11453   0008E6  C115  F132         	movff	?___flmul+1,___flsub@a+1
 11454   0008EA  C116  F133         	movff	?___flmul+2,___flsub@a+2
 11455   0008EE  C117  F134         	movff	?___flmul+3,___flsub@a+3
 11456   0008F2  ECE0  F02F         	call	___flsub	;wreg free
 11457   0008F6  C12D  F17B         	movff	?___flsub,efgtoa@h
 11458   0008FA  C12E  F17C         	movff	?___flsub+1,efgtoa@h+1
 11459   0008FE  C12F  F17D         	movff	?___flsub+2,efgtoa@h+2
 11460   000902  C130  F17E         	movff	?___flsub+3,efgtoa@h+3
 11461   000906                     
 11462                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 807:         u.f 
      +                          = u.f/10.0;
 11463   000906  C18E  F12D         	movff	efgtoa@u,___fldiv@b
 11464   00090A  C18F  F12E         	movff	efgtoa@u+1,___fldiv@b+1
 11465   00090E  C190  F12F         	movff	efgtoa@u+2,___fldiv@b+2
 11466   000912  C191  F130         	movff	efgtoa@u+3,___fldiv@b+3
 11467   000916  0E00               	movlw	0
 11468   000918  0101               	movlb	1	; () banked
 11469   00091A  6F31               	movwf	___fldiv@a& (0+255),b
 11470   00091C  0E00               	movlw	0
 11471   00091E  6F32               	movwf	(___fldiv@a+1)& (0+255),b
 11472   000920  0E20               	movlw	32
 11473   000922  6F33               	movwf	(___fldiv@a+2)& (0+255),b
 11474   000924  0E41               	movlw	65
 11475   000926  6F34               	movwf	(___fldiv@a+3)& (0+255),b
 11476   000928  EC2D  F016         	call	___fldiv	;wreg free
 11477   00092C  C12D  F18E         	movff	?___fldiv,efgtoa@u
 11478   000930  C12E  F18F         	movff	?___fldiv+1,efgtoa@u+1
 11479   000934  C12F  F190         	movff	?___fldiv+2,efgtoa@u+2
 11480   000938  C130  F191         	movff	?___fldiv+3,efgtoa@u+3
 11481   00093C                     
 11482                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 808:         --ne
      +                          ;
 11483   00093C  0101               	movlb	1	; () banked
 11484   00093E  0769               	decf	efgtoa@ne& (0+255),f,b
 11485   000940  A0D8               	btfss	status,0,c
 11486   000942  076A               	decf	(efgtoa@ne+1)& (0+255),f,b
 11487   000944                     
 11488                           ; BSR set to: 1
 11489                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 809:         ++i;
 11490   000944  4B86               	infsnz	efgtoa@i& (0+255),f,b
 11491   000946  2B87               	incf	(efgtoa@i+1)& (0+255),f,b
 11492   000948                     l7374:
 11493                           
 11494                           ; BSR set to: 1
 11495                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 779:     while ((
      +                          i < m) && (n < (80 - 5))) {
 11496   000948  5170               	movf	efgtoa@m& (0+255),w,b
 11497   00094A  5D86               	subwf	efgtoa@i& (0+255),w,b
 11498   00094C  5187               	movf	(efgtoa@i+1)& (0+255),w,b
 11499   00094E  0A80               	xorlw	128
 11500   000950  6F61               	movwf	??_efgtoa& (0+255),b
 11501   000952  5171               	movf	(efgtoa@m+1)& (0+255),w,b
 11502   000954  0A80               	xorlw	128
 11503   000956  5961               	subwfb	??_efgtoa& (0+255),w,b
 11504   000958  B0D8               	btfsc	status,0,c
 11505   00095A  EFB1  F004         	goto	u8131
 11506   00095E  EFB3  F004         	goto	u8130
 11507   000962                     u8131:
 11508   000962  EFC1  F004         	goto	l7378
 11509   000966                     u8130:
 11510   000966                     
 11511                           ; BSR set to: 1
 11512   000966  BF89               	btfsc	(efgtoa@n+1)& (0+255),7,b
 11513   000968  EFBF  F004         	goto	u8141
 11514   00096C  5189               	movf	(efgtoa@n+1)& (0+255),w,b
 11515   00096E  E109               	bnz	u8140
 11516   000970  0E4B               	movlw	75
 11517   000972  5D88               	subwf	efgtoa@n& (0+255),w,b
 11518   000974  A0D8               	btfss	status,0,c
 11519   000976  EFBF  F004         	goto	u8141
 11520   00097A  EFC1  F004         	goto	u8140
 11521   00097E                     u8141:
 11522   00097E  EFBE  F003         	goto	l7334
 11523   000982                     u8140:
 11524   000982                     l7378:
 11525                           
 11526                           ; BSR set to: 1
 11527                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 816:  i = sizeof(
      +                          dbuf) - 1;
 11528   000982  0E00               	movlw	0
 11529   000984  6F87               	movwf	(efgtoa@i+1)& (0+255),b
 11530   000986  0E4F               	movlw	79
 11531   000988  6F86               	movwf	efgtoa@i& (0+255),b
 11532   00098A                     
 11533                           ; BSR set to: 1
 11534                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 817:     dbuf[i] 
      +                          = '\0';
 11535   00098A  0E00               	movlw	low _dbuf
 11536   00098C  2586               	addwf	efgtoa@i& (0+255),w,b
 11537   00098E  6ED9               	movwf	fsr2l,c
 11538   000990  0E02               	movlw	high _dbuf
 11539   000992  2187               	addwfc	(efgtoa@i+1)& (0+255),w,b
 11540   000994  6EDA               	movwf	fsr2h,c
 11541   000996  6ADF               	clrf	indf2,c
 11542   000998                     
 11543                           ; BSR set to: 1
 11544                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 821:     if (nmod
      +                          e == 'e') {
 11545   000998  0E65               	movlw	101
 11546   00099A  1974               	xorwf	efgtoa@nmode& (0+255),w,b
 11547   00099C  A4D8               	btfss	status,2,c
 11548   00099E  EFD3  F004         	goto	u8151
 11549   0009A2  EFD5  F004         	goto	u8150
 11550   0009A6                     u8151:
 11551   0009A6  EF5A  F005         	goto	l7426
 11552   0009AA                     u8150:
 11553   0009AA                     
 11554                           ; BSR set to: 1
 11555                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 822:         esig
      +                          n = 0;
 11556   0009AA  6B6C               	clrf	efgtoa@esign& (0+255),b
 11557   0009AC                     
 11558                           ; BSR set to: 1
 11559                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 823:         if (
      +                          e < 0) {
 11560   0009AC  BF84               	btfsc	(efgtoa@e+1)& (0+255),7,b
 11561   0009AE  EFDD  F004         	goto	u8160
 11562   0009B2  EFDB  F004         	goto	u8161
 11563   0009B6                     u8161:
 11564   0009B6  EFE3  F004         	goto	l7392
 11565   0009BA                     u8160:
 11566   0009BA                     
 11567                           ; BSR set to: 1
 11568                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 824:             
      +                          esign = 1;
 11569   0009BA  0E01               	movlw	1
 11570   0009BC  6F6C               	movwf	efgtoa@esign& (0+255),b
 11571   0009BE                     
 11572                           ; BSR set to: 1
 11573                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 825:             
      +                          e = -e;
 11574   0009BE  6D83               	negf	efgtoa@e& (0+255),b
 11575   0009C0  1F84               	comf	(efgtoa@e+1)& (0+255),f,b
 11576   0009C2  B0D8               	btfsc	status,0,c
 11577   0009C4  2B84               	incf	(efgtoa@e+1)& (0+255),f,b
 11578   0009C6                     l7392:
 11579                           
 11580                           ; BSR set to: 1
 11581                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 827:         p = 
      +                          2;
 11582   0009C6  0E00               	movlw	0
 11583   0009C8  6F73               	movwf	(efgtoa@p+1)& (0+255),b
 11584   0009CA  0E02               	movlw	2
 11585   0009CC  6F72               	movwf	efgtoa@p& (0+255),b
 11586                           
 11587                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 828:         whil
      +                          e (e || (0 < p)) {
 11588   0009CE  EF15  F005         	goto	l7404
 11589   0009D2                     l7394:
 11590                           
 11591                           ; BSR set to: 1
 11592                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 829:             
      +                          --i;
 11593   0009D2  0786               	decf	efgtoa@i& (0+255),f,b
 11594   0009D4  A0D8               	btfss	status,0,c
 11595   0009D6  0787               	decf	(efgtoa@i+1)& (0+255),f,b
 11596   0009D8                     
 11597                           ; BSR set to: 1
 11598                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 830:             
      +                          dbuf[i] = '0' + (e % 10);
 11599   0009D8  0E00               	movlw	low _dbuf
 11600   0009DA  2586               	addwf	efgtoa@i& (0+255),w,b
 11601   0009DC  6ED9               	movwf	fsr2l,c
 11602   0009DE  0E02               	movlw	high _dbuf
 11603   0009E0  2187               	addwfc	(efgtoa@i+1)& (0+255),w,b
 11604   0009E2  6EDA               	movwf	fsr2h,c
 11605   0009E4  C183  F106         	movff	efgtoa@e,___awmod@dividend
 11606   0009E8  C184  F107         	movff	efgtoa@e+1,___awmod@dividend+1
 11607   0009EC  0E00               	movlw	0
 11608   0009EE  6F09               	movwf	(___awmod@divisor+1)& (0+255),b
 11609   0009F0  0E0A               	movlw	10
 11610   0009F2  6F08               	movwf	___awmod@divisor& (0+255),b
 11611   0009F4  ECEA  F029         	call	___awmod	;wreg free
 11612   0009F8  0101               	movlb	1	; () banked
 11613   0009FA  5106               	movf	?___awmod& (0+255),w,b
 11614   0009FC  0F30               	addlw	48
 11615   0009FE  6EDF               	movwf	indf2,c
 11616   000A00                     
 11617                           ; BSR set to: 1
 11618                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 831:             
      +                          e = e / 10;
 11619   000A00  C183  F106         	movff	efgtoa@e,___awdiv@dividend
 11620   000A04  C184  F107         	movff	efgtoa@e+1,___awdiv@dividend+1
 11621   000A08  0E00               	movlw	0
 11622   000A0A  6F09               	movwf	(___awdiv@divisor+1)& (0+255),b
 11623   000A0C  0E0A               	movlw	10
 11624   000A0E  6F08               	movwf	___awdiv@divisor& (0+255),b
 11625   000A10  EC69  F028         	call	___awdiv	;wreg free
 11626   000A14  C106  F183         	movff	?___awdiv,efgtoa@e
 11627   000A18  C107  F184         	movff	?___awdiv+1,efgtoa@e+1
 11628   000A1C                     
 11629                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 832:             
      +                          --p;
 11630   000A1C  0101               	movlb	1	; () banked
 11631   000A1E  0772               	decf	efgtoa@p& (0+255),f,b
 11632   000A20  A0D8               	btfss	status,0,c
 11633   000A22  0773               	decf	(efgtoa@p+1)& (0+255),f,b
 11634   000A24                     
 11635                           ; BSR set to: 1
 11636                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 833:             
      +                          --w;
 11637   000A24  0775               	decf	efgtoa@w& (0+255),f,b
 11638   000A26  A0D8               	btfss	status,0,c
 11639   000A28  0776               	decf	(efgtoa@w+1)& (0+255),f,b
 11640   000A2A                     l7404:
 11641                           
 11642                           ; BSR set to: 1
 11643                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 828:         whil
      +                          e (e || (0 < p)) {
 11644   000A2A  5183               	movf	efgtoa@e& (0+255),w,b
 11645   000A2C  1184               	iorwf	(efgtoa@e+1)& (0+255),w,b
 11646   000A2E  A4D8               	btfss	status,2,c
 11647   000A30  EF1C  F005         	goto	u8171
 11648   000A34  EF1E  F005         	goto	u8170
 11649   000A38                     u8171:
 11650   000A38  EFE9  F004         	goto	l7394
 11651   000A3C                     u8170:
 11652   000A3C                     
 11653                           ; BSR set to: 1
 11654   000A3C  BF73               	btfsc	(efgtoa@p+1)& (0+255),7,b
 11655   000A3E  EF2B  F005         	goto	u8180
 11656   000A42  5173               	movf	(efgtoa@p+1)& (0+255),w,b
 11657   000A44  E106               	bnz	u8181
 11658   000A46  0572               	decf	efgtoa@p& (0+255),w,b
 11659   000A48  B0D8               	btfsc	status,0,c
 11660   000A4A  EF29  F005         	goto	u8181
 11661   000A4E  EF2B  F005         	goto	u8180
 11662   000A52                     u8181:
 11663   000A52  EFE9  F004         	goto	l7394
 11664   000A56                     u8180:
 11665   000A56                     
 11666                           ; BSR set to: 1
 11667                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 835:         --i;
 11668   000A56  0786               	decf	efgtoa@i& (0+255),f,b
 11669   000A58  A0D8               	btfss	status,0,c
 11670   000A5A  0787               	decf	(efgtoa@i+1)& (0+255),f,b
 11671   000A5C                     
 11672                           ; BSR set to: 1
 11673                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 836:         dbuf
      +                          [i] = esign ? '-' : '+';
 11674   000A5C  516C               	movf	efgtoa@esign& (0+255),w,b
 11675   000A5E  A4D8               	btfss	status,2,c
 11676   000A60  EF34  F005         	goto	u8191
 11677   000A64  EF36  F005         	goto	u8190
 11678   000A68                     u8191:
 11679   000A68  EF3C  F005         	goto	l7414
 11680   000A6C                     u8190:
 11681   000A6C                     
 11682                           ; BSR set to: 1
 11683   000A6C  0E00               	movlw	0
 11684   000A6E  6F68               	movwf	(_efgtoa$2332+1)& (0+255),b
 11685   000A70  0E2B               	movlw	43
 11686   000A72  6F67               	movwf	_efgtoa$2332& (0+255),b
 11687   000A74  EF40  F005         	goto	l7416
 11688   000A78                     l7414:
 11689                           
 11690                           ; BSR set to: 1
 11691   000A78  0E00               	movlw	0
 11692   000A7A  6F68               	movwf	(_efgtoa$2332+1)& (0+255),b
 11693   000A7C  0E2D               	movlw	45
 11694   000A7E  6F67               	movwf	_efgtoa$2332& (0+255),b
 11695   000A80                     l7416:
 11696                           
 11697                           ; BSR set to: 1
 11698   000A80  0E00               	movlw	low _dbuf
 11699   000A82  2586               	addwf	efgtoa@i& (0+255),w,b
 11700   000A84  6ED9               	movwf	fsr2l,c
 11701   000A86  0E02               	movlw	high _dbuf
 11702   000A88  2187               	addwfc	(efgtoa@i+1)& (0+255),w,b
 11703   000A8A  6EDA               	movwf	fsr2h,c
 11704   000A8C  0060  F59F  FFDF   	movff	_efgtoa$2332,indf2
 11705   000A92                     
 11706                           ; BSR set to: 1
 11707                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 837:         --w;
 11708   000A92  0775               	decf	efgtoa@w& (0+255),f,b
 11709   000A94  A0D8               	btfss	status,0,c
 11710   000A96  0776               	decf	(efgtoa@w+1)& (0+255),f,b
 11711   000A98                     
 11712                           ; BSR set to: 1
 11713                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 838:         --i;
 11714   000A98  0786               	decf	efgtoa@i& (0+255),f,b
 11715   000A9A  A0D8               	btfss	status,0,c
 11716   000A9C  0787               	decf	(efgtoa@i+1)& (0+255),f,b
 11717   000A9E                     
 11718                           ; BSR set to: 1
 11719                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 842:   dbuf[i] = 
      +                          'e';
 11720   000A9E  0E00               	movlw	low _dbuf
 11721   000AA0  2586               	addwf	efgtoa@i& (0+255),w,b
 11722   000AA2  6ED9               	movwf	fsr2l,c
 11723   000AA4  0E02               	movlw	high _dbuf
 11724   000AA6  2187               	addwfc	(efgtoa@i+1)& (0+255),w,b
 11725   000AA8  6EDA               	movwf	fsr2h,c
 11726   000AAA  0E65               	movlw	101
 11727   000AAC  6EDF               	movwf	indf2,c
 11728   000AAE                     
 11729                           ; BSR set to: 1
 11730                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 844:         --w;
 11731   000AAE  0775               	decf	efgtoa@w& (0+255),f,b
 11732   000AB0  A0D8               	btfss	status,0,c
 11733   000AB2  0776               	decf	(efgtoa@w+1)& (0+255),f,b
 11734   000AB4                     l7426:
 11735                           
 11736                           ; BSR set to: 1
 11737                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 848:  memcpy(&dbu
      +                          f[i-n], &dbuf[0], (size_t)n);
 11738   000AB4  0E00               	movlw	low _dbuf
 11739   000AB6  6F61               	movwf	??_efgtoa& (0+255),b
 11740   000AB8  0E02               	movlw	high _dbuf
 11741   000ABA  6F62               	movwf	(??_efgtoa+1)& (0+255),b
 11742   000ABC  5188               	movf	efgtoa@n& (0+255),w,b
 11743   000ABE  5F61               	subwf	??_efgtoa& (0+255),f,b
 11744   000AC0  5189               	movf	(efgtoa@n+1)& (0+255),w,b
 11745   000AC2  5B62               	subwfb	(??_efgtoa+1)& (0+255),f,b
 11746   000AC4  5186               	movf	efgtoa@i& (0+255),w,b
 11747   000AC6  2561               	addwf	??_efgtoa& (0+255),w,b
 11748   000AC8  6F06               	movwf	memcpy@d1& (0+255),b
 11749   000ACA  5187               	movf	(efgtoa@i+1)& (0+255),w,b
 11750   000ACC  2162               	addwfc	(??_efgtoa+1)& (0+255),w,b
 11751   000ACE  6F07               	movwf	(memcpy@d1+1)& (0+255),b
 11752   000AD0  0E00               	movlw	low _dbuf
 11753   000AD2  6F08               	movwf	memcpy@s1& (0+255),b
 11754   000AD4  0E02               	movlw	high _dbuf
 11755   000AD6  6F09               	movwf	(memcpy@s1+1)& (0+255),b
 11756   000AD8  C188  F10A         	movff	efgtoa@n,memcpy@n
 11757   000ADC  C189  F10B         	movff	efgtoa@n+1,memcpy@n+1
 11758   000AE0  ECE9  F02D         	call	_memcpy	;wreg free
 11759   000AE4                     
 11760                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 849:  n = i-n;
 11761   000AE4  0101               	movlb	1	; () banked
 11762   000AE6  5188               	movf	efgtoa@n& (0+255),w,b
 11763   000AE8  5D86               	subwf	efgtoa@i& (0+255),w,b
 11764   000AEA  6F88               	movwf	efgtoa@n& (0+255),b
 11765   000AEC  5189               	movf	(efgtoa@n+1)& (0+255),w,b
 11766   000AEE  5987               	subwfb	(efgtoa@i+1)& (0+255),w,b
 11767   000AF0  6F89               	movwf	(efgtoa@n+1)& (0+255),b
 11768   000AF2                     
 11769                           ; BSR set to: 1
 11770                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 850:  i = sign ==
      +                           0 ? 0 : 1;
 11771   000AF2  5185               	movf	efgtoa@sign& (0+255),w,b
 11772   000AF4  A4D8               	btfss	status,2,c
 11773   000AF6  EF7F  F005         	goto	u8201
 11774   000AFA  EF82  F005         	goto	u8200
 11775   000AFE                     u8201:
 11776   000AFE  0E01               	movlw	1
 11777   000B00  EF83  F005         	goto	u8210
 11778   000B04                     u8200:
 11779   000B04  0E00               	movlw	0
 11780   000B06                     u8210:
 11781   000B06  6F86               	movwf	efgtoa@i& (0+255),b
 11782   000B08  6B87               	clrf	(efgtoa@i+1)& (0+255),b
 11783   000B0A                     
 11784                           ; BSR set to: 1
 11785                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 861:  if (sign) {
 11786   000B0A  5185               	movf	efgtoa@sign& (0+255),w,b
 11787   000B0C  B4D8               	btfsc	status,2,c
 11788   000B0E  EF8B  F005         	goto	u8221
 11789   000B12  EF8D  F005         	goto	u8220
 11790   000B16                     u8221:
 11791   000B16  EF99  F005         	goto	l7436
 11792   000B1A                     u8220:
 11793   000B1A                     
 11794                           ; BSR set to: 1
 11795                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 862:   dbuf[--n] 
      +                          = sign;
 11796   000B1A  0788               	decf	efgtoa@n& (0+255),f,b
 11797   000B1C  A0D8               	btfss	status,0,c
 11798   000B1E  0789               	decf	(efgtoa@n+1)& (0+255),f,b
 11799   000B20  0E00               	movlw	low _dbuf
 11800   000B22  2588               	addwf	efgtoa@n& (0+255),w,b
 11801   000B24  6ED9               	movwf	fsr2l,c
 11802   000B26  0E02               	movlw	high _dbuf
 11803   000B28  2189               	addwfc	(efgtoa@n+1)& (0+255),w,b
 11804   000B2A  6EDA               	movwf	fsr2h,c
 11805   000B2C  0060  F617  FFDF   	movff	efgtoa@sign,indf2
 11806   000B32                     l7436:
 11807                           
 11808                           ; BSR set to: 1
 11809                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 864:  w -= i;
 11810   000B32  5186               	movf	efgtoa@i& (0+255),w,b
 11811   000B34  5F75               	subwf	efgtoa@w& (0+255),f,b
 11812   000B36  5187               	movf	(efgtoa@i+1)& (0+255),w,b
 11813   000B38  5B76               	subwfb	(efgtoa@w+1)& (0+255),f,b
 11814   000B3A                     
 11815                           ; BSR set to: 1
 11816                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 867:     return (
      +                          void) pad(fp, &dbuf[n], w);
 11817   000B3A  C15A  F116         	movff	efgtoa@fp,pad@fp
 11818   000B3E  C15B  F117         	movff	efgtoa@fp+1,pad@fp+1
 11819   000B42  0E00               	movlw	low _dbuf
 11820   000B44  2588               	addwf	efgtoa@n& (0+255),w,b
 11821   000B46  6F18               	movwf	pad@buf& (0+255),b
 11822   000B48  0E02               	movlw	high _dbuf
 11823   000B4A  2189               	addwfc	(efgtoa@n+1)& (0+255),w,b
 11824   000B4C  6F19               	movwf	(pad@buf+1)& (0+255),b
 11825   000B4E  C175  F11A         	movff	efgtoa@w,pad@p
 11826   000B52  C176  F11B         	movff	efgtoa@w+1,pad@p+1
 11827   000B56  ECB4  F02C         	call	_pad	;wreg free
 11828   000B5A                     l1601:
 11829   000B5A  0012               	return		;funcret
 11830   000B5C                     __end_of_efgtoa:
 11831                           	callstack 0
 11832                           
 11833 ;; *************** function _strcpy *****************
 11834 ;; Defined at:
 11835 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\strcpy.c"
 11836 ;; Parameters:    Size  Location     Type
 11837 ;;  dest            2    6[BANK1 ] PTR unsigned char 
 11838 ;;		 -> dbuf(80), 
 11839 ;;  src             2    8[BANK1 ] PTR const unsigned char 
 11840 ;;		 -> STR_23(4), STR_20(4), 
 11841 ;; Auto vars:     Size  Location     Type
 11842 ;;  d               2   10[BANK1 ] PTR unsigned char 
 11843 ;;		 -> dbuf(80), 
 11844 ;; Return value:  Size  Location     Type
 11845 ;;                  2    6[BANK1 ] PTR unsigned char 
 11846 ;; Registers used:
 11847 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 11848 ;; Tracked objects:
 11849 ;;		On entry : 0/0
 11850 ;;		On exit  : 0/0
 11851 ;;		Unchanged: 0/0
 11852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11853 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11854 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11855 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11856 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11857 ;;Total ram usage:        6 bytes
 11858 ;; Hardware stack levels used: 1
 11859 ;; Hardware stack levels required when called: 13
 11860 ;; This function calls:
 11861 ;;		Nothing
 11862 ;; This function is called by:
 11863 ;;		_efgtoa
 11864 ;; This function uses a non-reentrant model
 11865 ;;
 11866                           
 11867                           	psect	text20
 11868   006008                     __ptext20:
 11869                           	callstack 0
 11870   006008                     _strcpy:
 11871                           	callstack 12
 11872   006008  C106  F10A         	movff	strcpy@dest,strcpy@d
 11873   00600C  C107  F10B         	movff	strcpy@dest+1,strcpy@d+1
 11874   006010                     l7006:
 11875   006010  0060  F423  FFF6   	movff	strcpy@src,tblptrl
 11876   006016  0060  F427  FFF7   	movff	strcpy@src+1,tblptrh
 11877   00601C  0101               	movlb	1	; () banked
 11878   00601E  4B08               	infsnz	strcpy@src& (0+255),f,b
 11879   006020  2B09               	incf	(strcpy@src+1)& (0+255),f,b
 11880   006022                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 11881   006022  6AF8               	clrf	tblptru,c
 11882   006024                     	endif
 11883   006024                     	if	0	;tblptru may be non-zero
 11884   006024                     	endif
 11885   006024  0060  F42B  FFD9   	movff	strcpy@d,fsr2l
 11886   00602A  0060  F42F  FFDA   	movff	strcpy@d+1,fsr2h
 11887   006030  4B0A               	infsnz	strcpy@d& (0+255),f,b
 11888   006032  2B0B               	incf	(strcpy@d+1)& (0+255),f,b
 11889   006034  0008               	tblrd		*
 11890   006036  006F FFD7 FFDF     	movff	tablat,indf2
 11891   00603C  50DF               	movf	indf2,w,c
 11892   00603E  A4D8               	btfss	status,2,c
 11893   006040  EF24  F030         	goto	u7571
 11894   006044  EF26  F030         	goto	u7570
 11895   006048                     u7571:
 11896   006048  EF08  F030         	goto	l7006
 11897   00604C                     u7570:
 11898   00604C                     
 11899                           ; BSR set to: 1
 11900   00604C  0012               	return		;funcret
 11901   00604E                     __end_of_strcpy:
 11902                           	callstack 0
 11903                           
 11904 ;; *************** function _pad *****************
 11905 ;; Defined at:
 11906 ;;		line 193 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
 11907 ;; Parameters:    Size  Location     Type
 11908 ;;  fp              2   22[BANK1 ] PTR struct _IO_FILE
 11909 ;;		 -> sprintf@f(11), 
 11910 ;;  buf             2   24[BANK1 ] PTR unsigned char 
 11911 ;;		 -> dbuf(80), 
 11912 ;;  p               2   26[BANK1 ] int 
 11913 ;; Auto vars:     Size  Location     Type
 11914 ;;  i               2   29[BANK1 ] int 
 11915 ;; Return value:  Size  Location     Type
 11916 ;;                  1    wreg      void 
 11917 ;; Registers used:
 11918 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 11919 ;; Tracked objects:
 11920 ;;		On entry : 0/0
 11921 ;;		On exit  : 0/0
 11922 ;;		Unchanged: 0/0
 11923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11924 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11925 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11926 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11927 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11928 ;;Total ram usage:        9 bytes
 11929 ;; Hardware stack levels used: 1
 11930 ;; Hardware stack levels required when called: 16
 11931 ;; This function calls:
 11932 ;;		_fputc
 11933 ;;		_fputs
 11934 ;; This function is called by:
 11935 ;;		_efgtoa
 11936 ;; This function uses a non-reentrant model
 11937 ;;
 11938                           
 11939                           	psect	text21
 11940   005968                     __ptext21:
 11941                           	callstack 0
 11942   005968                     _pad:
 11943                           	callstack 9
 11944   005968                     
 11945                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 193: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\com
      +                          mon\doprnt.c: 194: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.
      +                          c: 195:     int i;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c:
      +                           205:  if (p < 0) {
 11946   005968  0101               	movlb	1	; () banked
 11947   00596A  BF1B               	btfsc	(pad@p+1)& (0+255),7,b
 11948   00596C  EFBC  F02C         	goto	u7480
 11949   005970  EFBA  F02C         	goto	u7481
 11950   005974                     u7481:
 11951   005974  EFC0  F02C         	goto	l1586
 11952   005978                     u7480:
 11953   005978                     
 11954                           ; BSR set to: 1
 11955                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 206:   p = 0;
 11956   005978  0E00               	movlw	0
 11957   00597A  6F1B               	movwf	(pad@p+1)& (0+255),b
 11958   00597C  0E00               	movlw	0
 11959   00597E  6F1A               	movwf	pad@p& (0+255),b
 11960   005980                     l1586:
 11961                           
 11962                           ; BSR set to: 1
 11963                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 208:     i = 0;
 11964   005980  0E00               	movlw	0
 11965   005982  6F1E               	movwf	(pad@i+1)& (0+255),b
 11966   005984  0E00               	movlw	0
 11967   005986  6F1D               	movwf	pad@i& (0+255),b
 11968                           
 11969                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
 11970   005988  EFD3  F02C         	goto	l6978
 11971   00598C                     l6974:
 11972                           
 11973                           ; BSR set to: 1
 11974                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 210:         fput
      +                          c(' ', fp);
 11975   00598C  0E00               	movlw	0
 11976   00598E  6F07               	movwf	(fputc@c+1)& (0+255),b
 11977   005990  0E20               	movlw	32
 11978   005992  6F06               	movwf	fputc@c& (0+255),b
 11979   005994  C116  F108         	movff	pad@fp,fputc@fp
 11980   005998  C117  F109         	movff	pad@fp+1,fputc@fp+1
 11981   00599C  EC2C  F027         	call	_fputc	;wreg free
 11982   0059A0                     
 11983                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 211:         ++i;
 11984   0059A0  0101               	movlb	1	; () banked
 11985   0059A2  4B1D               	infsnz	pad@i& (0+255),f,b
 11986   0059A4  2B1E               	incf	(pad@i+1)& (0+255),f,b
 11987   0059A6                     l6978:
 11988                           
 11989                           ; BSR set to: 1
 11990                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
 11991   0059A6  511A               	movf	pad@p& (0+255),w,b
 11992   0059A8  5D1D               	subwf	pad@i& (0+255),w,b
 11993   0059AA  511E               	movf	(pad@i+1)& (0+255),w,b
 11994   0059AC  0A80               	xorlw	128
 11995   0059AE  6F1C               	movwf	??_pad& (0+255),b
 11996   0059B0  511B               	movf	(pad@p+1)& (0+255),w,b
 11997   0059B2  0A80               	xorlw	128
 11998   0059B4  591C               	subwfb	??_pad& (0+255),w,b
 11999   0059B6  A0D8               	btfss	status,0,c
 12000   0059B8  EFE0  F02C         	goto	u7491
 12001   0059BC  EFE2  F02C         	goto	u7490
 12002   0059C0                     u7491:
 12003   0059C0  EFC6  F02C         	goto	l6974
 12004   0059C4                     u7490:
 12005   0059C4                     
 12006                           ; BSR set to: 1
 12007                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 218:         fput
      +                          s((const char *)buf, fp);
 12008   0059C4  C118  F10F         	movff	pad@buf,fputs@s
 12009   0059C8  C119  F110         	movff	pad@buf+1,fputs@s+1
 12010   0059CC  C116  F111         	movff	pad@fp,fputs@fp
 12011   0059D0  C117  F112         	movff	pad@fp+1,fputs@fp+1
 12012   0059D4  ECBC  F02F         	call	_fputs	;wreg free
 12013   0059D8  0012               	return		;funcret
 12014   0059DA                     __end_of_pad:
 12015                           	callstack 0
 12016                           
 12017 ;; *************** function _fputs *****************
 12018 ;; Defined at:
 12019 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\nf_fputs.c"
 12020 ;; Parameters:    Size  Location     Type
 12021 ;;  s               2   15[BANK1 ] PTR const unsigned char 
 12022 ;;		 -> dbuf(80), 
 12023 ;;  fp              2   17[BANK1 ] PTR struct _IO_FILE
 12024 ;;		 -> sprintf@f(11), 
 12025 ;; Auto vars:     Size  Location     Type
 12026 ;;  i               2   20[BANK1 ] int 
 12027 ;;  c               1   19[BANK1 ] unsigned char 
 12028 ;; Return value:  Size  Location     Type
 12029 ;;                  2   15[BANK1 ] int 
 12030 ;; Registers used:
 12031 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 12032 ;; Tracked objects:
 12033 ;;		On entry : 0/0
 12034 ;;		On exit  : 0/0
 12035 ;;		Unchanged: 0/0
 12036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12037 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12038 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12039 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12040 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12041 ;;Total ram usage:        7 bytes
 12042 ;; Hardware stack levels used: 1
 12043 ;; Hardware stack levels required when called: 15
 12044 ;; This function calls:
 12045 ;;		_fputc
 12046 ;; This function is called by:
 12047 ;;		_pad
 12048 ;; This function uses a non-reentrant model
 12049 ;;
 12050                           
 12051                           	psect	text22
 12052   005F78                     __ptext22:
 12053                           	callstack 0
 12054   005F78                     _fputs:
 12055                           	callstack 9
 12056   005F78  0E00               	movlw	0
 12057   005F7A  0101               	movlb	1	; () banked
 12058   005F7C  6F15               	movwf	(fputs@i+1)& (0+255),b
 12059   005F7E  0E00               	movlw	0
 12060   005F80  6F14               	movwf	fputs@i& (0+255),b
 12061   005F82  EFCF  F02F         	goto	l6442
 12062   005F86                     l6438:
 12063                           
 12064                           ; BSR set to: 1
 12065   005F86  C113  F106         	movff	fputs@c,fputc@c
 12066   005F8A  6B07               	clrf	(fputc@c+1)& (0+255),b
 12067   005F8C  C111  F108         	movff	fputs@fp,fputc@fp
 12068   005F90  C112  F109         	movff	fputs@fp+1,fputc@fp+1
 12069   005F94  EC2C  F027         	call	_fputc	;wreg free
 12070   005F98  0101               	movlb	1	; () banked
 12071   005F9A  4B14               	infsnz	fputs@i& (0+255),f,b
 12072   005F9C  2B15               	incf	(fputs@i+1)& (0+255),f,b
 12073   005F9E                     l6442:
 12074                           
 12075                           ; BSR set to: 1
 12076   005F9E  5114               	movf	fputs@i& (0+255),w,b
 12077   005FA0  250F               	addwf	fputs@s& (0+255),w,b
 12078   005FA2  6ED9               	movwf	fsr2l,c
 12079   005FA4  5115               	movf	(fputs@i+1)& (0+255),w,b
 12080   005FA6  2110               	addwfc	(fputs@s+1)& (0+255),w,b
 12081   005FA8  6EDA               	movwf	fsr2h,c
 12082   005FAA  50DF               	movf	indf2,w,c
 12083   005FAC  6F13               	movwf	fputs@c& (0+255),b
 12084   005FAE  5113               	movf	fputs@c& (0+255),w,b
 12085   005FB0  A4D8               	btfss	status,2,c
 12086   005FB2  EFDD  F02F         	goto	u6711
 12087   005FB6  EFDF  F02F         	goto	u6710
 12088   005FBA                     u6711:
 12089   005FBA  EFC3  F02F         	goto	l6438
 12090   005FBE                     u6710:
 12091   005FBE                     
 12092                           ; BSR set to: 1
 12093   005FBE  0012               	return		;funcret
 12094   005FC0                     __end_of_fputs:
 12095                           	callstack 0
 12096                           
 12097 ;; *************** function _fputc *****************
 12098 ;; Defined at:
 12099 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\nf_fputc.c"
 12100 ;; Parameters:    Size  Location     Type
 12101 ;;  c               2    6[BANK1 ] int 
 12102 ;;  fp              2    8[BANK1 ] PTR struct _IO_FILE
 12103 ;;		 -> sprintf@f(11), 
 12104 ;; Auto vars:     Size  Location     Type
 12105 ;;		None
 12106 ;; Return value:  Size  Location     Type
 12107 ;;                  2    6[BANK1 ] int 
 12108 ;; Registers used:
 12109 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 12110 ;; Tracked objects:
 12111 ;;		On entry : 0/0
 12112 ;;		On exit  : 0/0
 12113 ;;		Unchanged: 0/0
 12114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12115 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12116 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12117 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12118 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12119 ;;Total ram usage:        9 bytes
 12120 ;; Hardware stack levels used: 1
 12121 ;; Hardware stack levels required when called: 14
 12122 ;; This function calls:
 12123 ;;		_putch
 12124 ;; This function is called by:
 12125 ;;		_pad
 12126 ;;		_vfpfcnvrt
 12127 ;;		_fputs
 12128 ;; This function uses a non-reentrant model
 12129 ;;
 12130                           
 12131                           	psect	text23
 12132   004E58                     __ptext23:
 12133                           	callstack 0
 12134   004E58                     _fputc:
 12135                           	callstack 12
 12136   004E58  0101               	movlb	1	; () banked
 12137   004E5A  5108               	movf	fputc@fp& (0+255),w,b
 12138   004E5C  1109               	iorwf	(fputc@fp+1)& (0+255),w,b
 12139   004E5E  B4D8               	btfsc	status,2,c
 12140   004E60  EF34  F027         	goto	u5881
 12141   004E64  EF36  F027         	goto	u5880
 12142   004E68                     u5881:
 12143   004E68  EF3F  F027         	goto	l5946
 12144   004E6C                     u5880:
 12145   004E6C                     
 12146                           ; BSR set to: 1
 12147   004E6C  5108               	movf	fputc@fp& (0+255),w,b
 12148   004E6E  1109               	iorwf	(fputc@fp+1)& (0+255),w,b
 12149   004E70  A4D8               	btfss	status,2,c
 12150   004E72  EF3D  F027         	goto	u5891
 12151   004E76  EF3F  F027         	goto	u5890
 12152   004E7A                     u5891:
 12153   004E7A  EF44  F027         	goto	l5948
 12154   004E7E                     u5890:
 12155   004E7E                     l5946:
 12156                           
 12157                           ; BSR set to: 1
 12158   004E7E  5106               	movf	fputc@c& (0+255),w,b
 12159   004E80  EC3F  F033         	call	_putch
 12160   004E84  EF98  F027         	goto	l1741
 12161   004E88                     l5948:
 12162                           
 12163                           ; BSR set to: 1
 12164   004E88  EE20 F009          	lfsr	2,9
 12165   004E8C  5108               	movf	fputc@fp& (0+255),w,b
 12166   004E8E  26D9               	addwf	fsr2l,f,c
 12167   004E90  5109               	movf	(fputc@fp+1)& (0+255),w,b
 12168   004E92  22DA               	addwfc	fsr2h,f,c
 12169   004E94  50DE               	movf	postinc2,w,c
 12170   004E96  10DE               	iorwf	postinc2,w,c
 12171   004E98  B4D8               	btfsc	status,2,c
 12172   004E9A  EF51  F027         	goto	u5901
 12173   004E9E  EF53  F027         	goto	u5900
 12174   004EA2                     u5901:
 12175   004EA2  EF6E  F027         	goto	l5952
 12176   004EA6                     u5900:
 12177   004EA6                     
 12178                           ; BSR set to: 1
 12179   004EA6  EE20 F009          	lfsr	2,9
 12180   004EAA  5108               	movf	fputc@fp& (0+255),w,b
 12181   004EAC  26D9               	addwf	fsr2l,f,c
 12182   004EAE  5109               	movf	(fputc@fp+1)& (0+255),w,b
 12183   004EB0  22DA               	addwfc	fsr2h,f,c
 12184   004EB2  EE10 F002          	lfsr	1,2
 12185   004EB6  5108               	movf	fputc@fp& (0+255),w,b
 12186   004EB8  26E1               	addwf	fsr1l,f,c
 12187   004EBA  5109               	movf	(fputc@fp+1)& (0+255),w,b
 12188   004EBC  22E2               	addwfc	fsr1h,f,c
 12189   004EBE  50DE               	movf	postinc2,w,c
 12190   004EC0  5CE6               	subwf	postinc1,w,c
 12191   004EC2  50E6               	movf	postinc1,w,c
 12192   004EC4  0A80               	xorlw	128
 12193   004EC6  6F0E               	movwf	(??_fputc+4)& (0+255),b
 12194   004EC8  50DE               	movf	postinc2,w,c
 12195   004ECA  0A80               	xorlw	128
 12196   004ECC  590E               	subwfb	(??_fputc+4)& (0+255),w,b
 12197   004ECE  B0D8               	btfsc	status,0,c
 12198   004ED0  EF6C  F027         	goto	u5911
 12199   004ED4  EF6E  F027         	goto	u5910
 12200   004ED8                     u5911:
 12201   004ED8  EF98  F027         	goto	l1741
 12202   004EDC                     u5910:
 12203   004EDC                     l5952:
 12204                           
 12205                           ; BSR set to: 1
 12206   004EDC  EE20 F002          	lfsr	2,2
 12207   004EE0  5108               	movf	fputc@fp& (0+255),w,b
 12208   004EE2  26D9               	addwf	fsr2l,f,c
 12209   004EE4  5109               	movf	(fputc@fp+1)& (0+255),w,b
 12210   004EE6  22DA               	addwfc	fsr2h,f,c
 12211   004EE8  006F FF78  F10A    	movff	postinc2,??_fputc
 12212   004EEE  006F FF74  F10B    	movff	postdec2,??_fputc+1
 12213   004EF4  0060  F423  FFD9   	movff	fputc@fp,fsr2l
 12214   004EFA  0060  F427  FFDA   	movff	fputc@fp+1,fsr2h
 12215   004F00  006F FF78  F10C    	movff	postinc2,??_fputc+2
 12216   004F06  006F FF74  F10D    	movff	postdec2,??_fputc+3
 12217   004F0C  510A               	movf	??_fputc& (0+255),w,b
 12218   004F0E  250C               	addwf	(??_fputc+2)& (0+255),w,b
 12219   004F10  6ED9               	movwf	fsr2l,c
 12220   004F12  510B               	movf	(??_fputc+1)& (0+255),w,b
 12221   004F14  210D               	addwfc	(??_fputc+3)& (0+255),w,b
 12222   004F16  6EDA               	movwf	fsr2h,c
 12223   004F18  0060  F41B  FFDF   	movff	fputc@c,indf2
 12224   004F1E  EE20 F002          	lfsr	2,2
 12225   004F22  5108               	movf	fputc@fp& (0+255),w,b
 12226   004F24  26D9               	addwf	fsr2l,f,c
 12227   004F26  5109               	movf	(fputc@fp+1)& (0+255),w,b
 12228   004F28  22DA               	addwfc	fsr2h,f,c
 12229   004F2A  2ADE               	incf	postinc2,f,c
 12230   004F2C  0E00               	movlw	0
 12231   004F2E  22DD               	addwfc	postdec2,f,c
 12232   004F30                     l1741:
 12233   004F30  0012               	return		;funcret
 12234   004F32                     __end_of_fputc:
 12235                           	callstack 0
 12236                           
 12237 ;; *************** function _putch *****************
 12238 ;; Defined at:
 12239 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\putch.c"
 12240 ;; Parameters:    Size  Location     Type
 12241 ;;  c               1    wreg     unsigned char 
 12242 ;; Auto vars:     Size  Location     Type
 12243 ;;  c               1    0[COMRAM] unsigned char 
 12244 ;; Return value:  Size  Location     Type
 12245 ;;                  1    wreg      void 
 12246 ;; Registers used:
 12247 ;;		wreg
 12248 ;; Tracked objects:
 12249 ;;		On entry : 0/0
 12250 ;;		On exit  : 0/0
 12251 ;;		Unchanged: 0/0
 12252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12253 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12254 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12255 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12256 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12257 ;;Total ram usage:        0 bytes
 12258 ;; Hardware stack levels used: 1
 12259 ;; Hardware stack levels required when called: 13
 12260 ;; This function calls:
 12261 ;;		Nothing
 12262 ;; This function is called by:
 12263 ;;		_fputc
 12264 ;; This function uses a non-reentrant model
 12265 ;;
 12266                           
 12267                           	psect	text24
 12268   00667E                     __ptext24:
 12269                           	callstack 0
 12270   00667E                     _putch:
 12271                           	callstack 12
 12272   00667E  0012               	return		;funcret
 12273   006680                     __end_of_putch:
 12274                           	callstack 0
 12275                           
 12276 ;; *************** function _memcpy *****************
 12277 ;; Defined at:
 12278 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\memcpy.c"
 12279 ;; Parameters:    Size  Location     Type
 12280 ;;  d1              2    6[BANK1 ] PTR void 
 12281 ;;		 -> dbuf(80), 
 12282 ;;  s1              2    8[BANK1 ] PTR const void 
 12283 ;;		 -> dbuf(80), 
 12284 ;;  n               2   10[BANK1 ] unsigned int 
 12285 ;; Auto vars:     Size  Location     Type
 12286 ;;  s               2   14[BANK1 ] PTR const unsigned char 
 12287 ;;		 -> dbuf(80), 
 12288 ;;  d               2   12[BANK1 ] PTR unsigned char 
 12289 ;;		 -> dbuf(80), 
 12290 ;;  tmp             1   16[BANK1 ] unsigned char 
 12291 ;; Return value:  Size  Location     Type
 12292 ;;                  2    6[BANK1 ] PTR void 
 12293 ;; Registers used:
 12294 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12295 ;; Tracked objects:
 12296 ;;		On entry : 0/0
 12297 ;;		On exit  : 0/0
 12298 ;;		Unchanged: 0/0
 12299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12300 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12301 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12302 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12303 ;;      Totals:         0       0      11       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12304 ;;Total ram usage:       11 bytes
 12305 ;; Hardware stack levels used: 1
 12306 ;; Hardware stack levels required when called: 13
 12307 ;; This function calls:
 12308 ;;		Nothing
 12309 ;; This function is called by:
 12310 ;;		_efgtoa
 12311 ;; This function uses a non-reentrant model
 12312 ;;
 12313                           
 12314                           	psect	text25
 12315   005BD2                     __ptext25:
 12316                           	callstack 0
 12317   005BD2                     _memcpy:
 12318                           	callstack 12
 12319   005BD2  C108  F10E         	movff	memcpy@s1,memcpy@s
 12320   005BD6  C109  F10F         	movff	memcpy@s1+1,memcpy@s+1
 12321   005BDA  C106  F10C         	movff	memcpy@d1,memcpy@d
 12322   005BDE  C107  F10D         	movff	memcpy@d1+1,memcpy@d+1
 12323   005BE2  EF08  F02E         	goto	l7054
 12324   005BE6                     l7046:
 12325                           
 12326                           ; BSR set to: 1
 12327   005BE6  0060  F43B  FFD9   	movff	memcpy@s,fsr2l
 12328   005BEC  0060  F43F  FFDA   	movff	memcpy@s+1,fsr2h
 12329   005BF2  50DF               	movf	indf2,w,c
 12330   005BF4  6F10               	movwf	memcpy@tmp& (0+255),b
 12331   005BF6                     
 12332                           ; BSR set to: 1
 12333   005BF6  4B0E               	infsnz	memcpy@s& (0+255),f,b
 12334   005BF8  2B0F               	incf	(memcpy@s+1)& (0+255),f,b
 12335   005BFA                     
 12336                           ; BSR set to: 1
 12337   005BFA  0060  F433  FFD9   	movff	memcpy@d,fsr2l
 12338   005C00  0060  F437  FFDA   	movff	memcpy@d+1,fsr2h
 12339   005C06  0060  F443  FFDF   	movff	memcpy@tmp,indf2
 12340   005C0C                     
 12341                           ; BSR set to: 1
 12342   005C0C  4B0C               	infsnz	memcpy@d& (0+255),f,b
 12343   005C0E  2B0D               	incf	(memcpy@d+1)& (0+255),f,b
 12344   005C10                     l7054:
 12345   005C10  0101               	movlb	1	; () banked
 12346   005C12  070A               	decf	memcpy@n& (0+255),f,b
 12347   005C14  A0D8               	btfss	status,0,c
 12348   005C16  070B               	decf	(memcpy@n+1)& (0+255),f,b
 12349   005C18  290A               	incf	memcpy@n& (0+255),w,b
 12350   005C1A  E106               	bnz	u7691
 12351   005C1C  290B               	incf	(memcpy@n+1)& (0+255),w,b
 12352   005C1E  A4D8               	btfss	status,2,c
 12353   005C20  EF14  F02E         	goto	u7691
 12354   005C24  EF16  F02E         	goto	u7690
 12355   005C28                     u7691:
 12356   005C28  EFF3  F02D         	goto	l7046
 12357   005C2C                     u7690:
 12358   005C2C                     
 12359                           ; BSR set to: 1
 12360   005C2C  0012               	return		;funcret
 12361   005C2E                     __end_of_memcpy:
 12362                           	callstack 0
 12363                           
 12364 ;; *************** function _labs *****************
 12365 ;; Defined at:
 12366 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\labs.c"
 12367 ;; Parameters:    Size  Location     Type
 12368 ;;  a               4    6[BANK1 ] long 
 12369 ;; Auto vars:     Size  Location     Type
 12370 ;;		None
 12371 ;; Return value:  Size  Location     Type
 12372 ;;                  4    6[BANK1 ] long 
 12373 ;; Registers used:
 12374 ;;		wreg, status,2, status,0
 12375 ;; Tracked objects:
 12376 ;;		On entry : 0/0
 12377 ;;		On exit  : 0/0
 12378 ;;		Unchanged: 0/0
 12379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12380 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12381 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12382 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12383 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12384 ;;Total ram usage:        8 bytes
 12385 ;; Hardware stack levels used: 1
 12386 ;; Hardware stack levels required when called: 13
 12387 ;; This function calls:
 12388 ;;		Nothing
 12389 ;; This function is called by:
 12390 ;;		_efgtoa
 12391 ;; This function uses a non-reentrant model
 12392 ;;
 12393                           
 12394                           	psect	text26
 12395   005CE0                     __ptext26:
 12396                           	callstack 0
 12397   005CE0                     _labs:
 12398                           	callstack 12
 12399   005CE0  0101               	movlb	1	; () banked
 12400   005CE2  BF09               	btfsc	(labs@a+3)& (0+255),7,b
 12401   005CE4  EF76  F02E         	goto	u7581
 12402   005CE8  EF78  F02E         	goto	u7580
 12403   005CEC                     u7581:
 12404   005CEC  EF82  F02E         	goto	l7012
 12405   005CF0                     u7580:
 12406   005CF0                     
 12407                           ; BSR set to: 1
 12408   005CF0  C106  F106         	movff	labs@a,?_labs
 12409   005CF4  C107  F107         	movff	labs@a+1,?_labs+1
 12410   005CF8  C108  F108         	movff	labs@a+2,?_labs+2
 12411   005CFC  C109  F109         	movff	labs@a+3,?_labs+3
 12412   005D00  EF9B  F02E         	goto	l1723
 12413   005D04                     l7012:
 12414                           
 12415                           ; BSR set to: 1
 12416   005D04  C106  F10A         	movff	labs@a,??_labs
 12417   005D08  C107  F10B         	movff	labs@a+1,??_labs+1
 12418   005D0C  C108  F10C         	movff	labs@a+2,??_labs+2
 12419   005D10  C109  F10D         	movff	labs@a+3,??_labs+3
 12420   005D14  1F0A               	comf	??_labs& (0+255),f,b
 12421   005D16  1F0B               	comf	(??_labs+1)& (0+255),f,b
 12422   005D18  1F0C               	comf	(??_labs+2)& (0+255),f,b
 12423   005D1A  1F0D               	comf	(??_labs+3)& (0+255),f,b
 12424   005D1C  2B0A               	incf	??_labs& (0+255),f,b
 12425   005D1E  0E00               	movlw	0
 12426   005D20  230B               	addwfc	(??_labs+1)& (0+255),f,b
 12427   005D22  230C               	addwfc	(??_labs+2)& (0+255),f,b
 12428   005D24  230D               	addwfc	(??_labs+3)& (0+255),f,b
 12429   005D26  C10A  F106         	movff	??_labs,?_labs
 12430   005D2A  C10B  F107         	movff	??_labs+1,?_labs+1
 12431   005D2E  C10C  F108         	movff	??_labs+2,?_labs+2
 12432   005D32  C10D  F109         	movff	??_labs+3,?_labs+3
 12433   005D36                     l1723:
 12434                           
 12435                           ; BSR set to: 1
 12436   005D36  0012               	return		;funcret
 12437   005D38                     __end_of_labs:
 12438                           	callstack 0
 12439                           
 12440 ;; *************** function _floorf *****************
 12441 ;; Defined at:
 12442 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\floorf.c"
 12443 ;; Parameters:    Size  Location     Type
 12444 ;;  x               4   70[BANK1 ] float 
 12445 ;; Auto vars:     Size  Location     Type
 12446 ;;  u               4   86[BANK1 ] struct .
 12447 ;;  m               4   80[BANK1 ] unsigned long 
 12448 ;;  e               2   84[BANK1 ] int 
 12449 ;; Return value:  Size  Location     Type
 12450 ;;                  4   70[BANK1 ] float 
 12451 ;; Registers used:
 12452 ;;		wreg, status,2, status,0
 12453 ;; Tracked objects:
 12454 ;;		On entry : 0/0
 12455 ;;		On exit  : 0/0
 12456 ;;		Unchanged: 0/0
 12457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12458 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12459 ;;      Locals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12460 ;;      Temps:          0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12461 ;;      Totals:         0       0      20       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12462 ;;Total ram usage:       20 bytes
 12463 ;; Hardware stack levels used: 1
 12464 ;; Hardware stack levels required when called: 13
 12465 ;; This function calls:
 12466 ;;		Nothing
 12467 ;; This function is called by:
 12468 ;;		_efgtoa
 12469 ;; This function uses a non-reentrant model
 12470 ;;
 12471                           
 12472                           	psect	text27
 12473   003CAE                     __ptext27:
 12474                           	callstack 0
 12475   003CAE                     _floorf:
 12476                           	callstack 12
 12477   003CAE  C0D5  F156         	movff	floorf@F521,floorf@u
 12478   003CB2  C0D6  F157         	movff	floorf@F521+1,floorf@u+1
 12479   003CB6  C0D7  F158         	movff	floorf@F521+2,floorf@u+2
 12480   003CBA  C0D8  F159         	movff	floorf@F521+3,floorf@u+3
 12481   003CBE  C146  F156         	movff	floorf@x,floorf@u
 12482   003CC2  C147  F157         	movff	floorf@x+1,floorf@u+1
 12483   003CC6  C148  F158         	movff	floorf@x+2,floorf@u+2
 12484   003CCA  C149  F159         	movff	floorf@x+3,floorf@u+3
 12485   003CCE  0E81               	movlw	129
 12486   003CD0  0101               	movlb	1	; () banked
 12487   003CD2  6F4A               	movwf	??_floorf& (0+255),b
 12488   003CD4  0EFF               	movlw	255
 12489   003CD6  6F4B               	movwf	(??_floorf+1)& (0+255),b
 12490   003CD8  C156  F14C         	movff	floorf@u,??_floorf+2
 12491   003CDC  C157  F14D         	movff	floorf@u+1,??_floorf+3
 12492   003CE0  C158  F14E         	movff	floorf@u+2,??_floorf+4
 12493   003CE4  C159  F14F         	movff	floorf@u+3,??_floorf+5
 12494   003CE8  0E18               	movlw	24
 12495   003CEA  EF7C  F01E         	goto	u7590
 12496   003CEE                     u7595:
 12497   003CEE  90D8               	bcf	status,0,c
 12498   003CF0  334F               	rrcf	(??_floorf+5)& (0+255),f,b
 12499   003CF2  334E               	rrcf	(??_floorf+4)& (0+255),f,b
 12500   003CF4  334D               	rrcf	(??_floorf+3)& (0+255),f,b
 12501   003CF6  334C               	rrcf	(??_floorf+2)& (0+255),f,b
 12502   003CF8                     u7590:
 12503   003CF8  2EE8               	decfsz	wreg,f,c
 12504   003CFA  EF77  F01E         	goto	u7595
 12505   003CFE  514C               	movf	(??_floorf+2)& (0+255),w,b
 12506   003D00  254A               	addwf	??_floorf& (0+255),w,b
 12507   003D02  6F54               	movwf	floorf@e& (0+255),b
 12508   003D04  0E00               	movlw	0
 12509   003D06  214B               	addwfc	(??_floorf+1)& (0+255),w,b
 12510   003D08  6F55               	movwf	(floorf@e+1)& (0+255),b
 12511   003D0A  BF55               	btfsc	(floorf@e+1)& (0+255),7,b
 12512   003D0C  EF91  F01E         	goto	u7601
 12513   003D10  5155               	movf	(floorf@e+1)& (0+255),w,b
 12514   003D12  E109               	bnz	u7600
 12515   003D14  0E17               	movlw	23
 12516   003D16  5D54               	subwf	floorf@e& (0+255),w,b
 12517   003D18  A0D8               	btfss	status,0,c
 12518   003D1A  EF91  F01E         	goto	u7601
 12519   003D1E  EF93  F01E         	goto	u7600
 12520   003D22                     u7601:
 12521   003D22  EF9D  F01E         	goto	l7022
 12522   003D26                     u7600:
 12523   003D26                     l7020:
 12524                           
 12525                           ; BSR set to: 1
 12526   003D26  C146  F146         	movff	floorf@x,?_floorf
 12527   003D2A  C147  F147         	movff	floorf@x+1,?_floorf+1
 12528   003D2E  C148  F148         	movff	floorf@x+2,?_floorf+2
 12529   003D32  C149  F149         	movff	floorf@x+3,?_floorf+3
 12530   003D36  EF61  F01F         	goto	l1709
 12531   003D3A                     l7022:
 12532                           
 12533                           ; BSR set to: 1
 12534   003D3A  BF55               	btfsc	(floorf@e+1)& (0+255),7,b
 12535   003D3C  EFA2  F01E         	goto	u7611
 12536   003D40  EFA4  F01E         	goto	u7610
 12537   003D44                     u7611:
 12538   003D44  EF15  F01F         	goto	l7032
 12539   003D48                     u7610:
 12540   003D48                     
 12541                           ; BSR set to: 1
 12542   003D48  C154  F14A         	movff	floorf@e,??_floorf
 12543   003D4C  0EFF               	movlw	255
 12544   003D4E  6F4B               	movwf	(??_floorf+1)& (0+255),b
 12545   003D50  0EFF               	movlw	255
 12546   003D52  6F4C               	movwf	(??_floorf+2)& (0+255),b
 12547   003D54  0E7F               	movlw	127
 12548   003D56  6F4D               	movwf	(??_floorf+3)& (0+255),b
 12549   003D58  0E00               	movlw	0
 12550   003D5A  6F4E               	movwf	(??_floorf+4)& (0+255),b
 12551   003D5C                     u7625:
 12552   003D5C  674A               	tstfsz	??_floorf& (0+255),b
 12553   003D5E  EFB3  F01E         	goto	u7626
 12554   003D62  EFBB  F01E         	goto	u7627
 12555   003D66                     u7626:
 12556   003D66  354E               	rlcf	(??_floorf+4)& (0+255),w,b
 12557   003D68  334E               	rrcf	(??_floorf+4)& (0+255),f,b
 12558   003D6A  334D               	rrcf	(??_floorf+3)& (0+255),f,b
 12559   003D6C  334C               	rrcf	(??_floorf+2)& (0+255),f,b
 12560   003D6E  334B               	rrcf	(??_floorf+1)& (0+255),f,b
 12561   003D70  2F4A               	decfsz	??_floorf& (0+255),f,b
 12562   003D72  EFAE  F01E         	goto	u7625
 12563   003D76                     u7627:
 12564   003D76  C14B  F150         	movff	??_floorf+1,floorf@m
 12565   003D7A  C14C  F151         	movff	??_floorf+2,floorf@m+1
 12566   003D7E  C14D  F152         	movff	??_floorf+3,floorf@m+2
 12567   003D82  C14E  F153         	movff	??_floorf+4,floorf@m+3
 12568   003D86  0101               	movlb	1	; () banked
 12569   003D88  5150               	movf	floorf@m& (0+255),w,b
 12570   003D8A  1556               	andwf	floorf@u& (0+255),w,b
 12571   003D8C  6F4A               	movwf	??_floorf& (0+255),b
 12572   003D8E  5151               	movf	(floorf@m+1)& (0+255),w,b
 12573   003D90  1557               	andwf	(floorf@u+1)& (0+255),w,b
 12574   003D92  6F4B               	movwf	(??_floorf+1)& (0+255),b
 12575   003D94  5152               	movf	(floorf@m+2)& (0+255),w,b
 12576   003D96  1558               	andwf	(floorf@u+2)& (0+255),w,b
 12577   003D98  6F4C               	movwf	(??_floorf+2)& (0+255),b
 12578   003D9A  5153               	movf	(floorf@m+3)& (0+255),w,b
 12579   003D9C  1559               	andwf	(floorf@u+3)& (0+255),w,b
 12580   003D9E  6F4D               	movwf	(??_floorf+3)& (0+255),b
 12581   003DA0  514A               	movf	??_floorf& (0+255),w,b
 12582   003DA2  114B               	iorwf	(??_floorf+1)& (0+255),w,b
 12583   003DA4  114C               	iorwf	(??_floorf+2)& (0+255),w,b
 12584   003DA6  114D               	iorwf	(??_floorf+3)& (0+255),w,b
 12585   003DA8  A4D8               	btfss	status,2,c
 12586   003DAA  EFD9  F01E         	goto	u7631
 12587   003DAE  EFDB  F01E         	goto	u7630
 12588   003DB2                     u7631:
 12589   003DB2  EFDD  F01E         	goto	l7028
 12590   003DB6                     u7630:
 12591   003DB6  EF93  F01E         	goto	l7020
 12592   003DBA                     l7028:
 12593                           
 12594                           ; BSR set to: 1
 12595   003DBA  C156  F14A         	movff	floorf@u,??_floorf
 12596   003DBE  C157  F14B         	movff	floorf@u+1,??_floorf+1
 12597   003DC2  C158  F14C         	movff	floorf@u+2,??_floorf+2
 12598   003DC6  C159  F14D         	movff	floorf@u+3,??_floorf+3
 12599   003DCA  0E20               	movlw	32
 12600   003DCC  EFED  F01E         	goto	u7640
 12601   003DD0                     u7645:
 12602   003DD0  90D8               	bcf	status,0,c
 12603   003DD2  334D               	rrcf	(??_floorf+3)& (0+255),f,b
 12604   003DD4  334C               	rrcf	(??_floorf+2)& (0+255),f,b
 12605   003DD6  334B               	rrcf	(??_floorf+1)& (0+255),f,b
 12606   003DD8  334A               	rrcf	??_floorf& (0+255),f,b
 12607   003DDA                     u7640:
 12608   003DDA  2EE8               	decfsz	wreg,f,c
 12609   003DDC  EFE8  F01E         	goto	u7645
 12610   003DE0  514A               	movf	??_floorf& (0+255),w,b
 12611   003DE2  114B               	iorwf	(??_floorf+1)& (0+255),w,b
 12612   003DE4  114C               	iorwf	(??_floorf+2)& (0+255),w,b
 12613   003DE6  114D               	iorwf	(??_floorf+3)& (0+255),w,b
 12614   003DE8  B4D8               	btfsc	status,2,c
 12615   003DEA  EFF9  F01E         	goto	u7651
 12616   003DEE  EFFB  F01E         	goto	u7650
 12617   003DF2                     u7651:
 12618   003DF2  EF03  F01F         	goto	l1712
 12619   003DF6                     u7650:
 12620   003DF6                     
 12621                           ; BSR set to: 1
 12622   003DF6  5150               	movf	floorf@m& (0+255),w,b
 12623   003DF8  2756               	addwf	floorf@u& (0+255),f,b
 12624   003DFA  5151               	movf	(floorf@m+1)& (0+255),w,b
 12625   003DFC  2357               	addwfc	(floorf@u+1)& (0+255),f,b
 12626   003DFE  5152               	movf	(floorf@m+2)& (0+255),w,b
 12627   003E00  2358               	addwfc	(floorf@u+2)& (0+255),f,b
 12628   003E02  5153               	movf	(floorf@m+3)& (0+255),w,b
 12629   003E04  2359               	addwfc	(floorf@u+3)& (0+255),f,b
 12630   003E06                     l1712:
 12631                           
 12632                           ; BSR set to: 1
 12633   003E06  1D50               	comf	floorf@m& (0+255),w,b
 12634   003E08  6F4A               	movwf	??_floorf& (0+255),b
 12635   003E0A  1D51               	comf	(floorf@m+1)& (0+255),w,b
 12636   003E0C  6F4B               	movwf	(??_floorf+1)& (0+255),b
 12637   003E0E  1D52               	comf	(floorf@m+2)& (0+255),w,b
 12638   003E10  6F4C               	movwf	(??_floorf+2)& (0+255),b
 12639   003E12  1D53               	comf	(floorf@m+3)& (0+255),w,b
 12640   003E14  6F4D               	movwf	(??_floorf+3)& (0+255),b
 12641   003E16  514A               	movf	??_floorf& (0+255),w,b
 12642   003E18  1756               	andwf	floorf@u& (0+255),f,b
 12643   003E1A  514B               	movf	(??_floorf+1)& (0+255),w,b
 12644   003E1C  1757               	andwf	(floorf@u+1)& (0+255),f,b
 12645   003E1E  514C               	movf	(??_floorf+2)& (0+255),w,b
 12646   003E20  1758               	andwf	(floorf@u+2)& (0+255),f,b
 12647   003E22  514D               	movf	(??_floorf+3)& (0+255),w,b
 12648   003E24  1759               	andwf	(floorf@u+3)& (0+255),f,b
 12649   003E26  EF59  F01F         	goto	l7040
 12650   003E2A                     l7032:
 12651                           
 12652                           ; BSR set to: 1
 12653   003E2A  C156  F14A         	movff	floorf@u,??_floorf
 12654   003E2E  C157  F14B         	movff	floorf@u+1,??_floorf+1
 12655   003E32  C158  F14C         	movff	floorf@u+2,??_floorf+2
 12656   003E36  C159  F14D         	movff	floorf@u+3,??_floorf+3
 12657   003E3A  0E20               	movlw	32
 12658   003E3C  EF25  F01F         	goto	u7660
 12659   003E40                     u7665:
 12660   003E40  90D8               	bcf	status,0,c
 12661   003E42  334D               	rrcf	(??_floorf+3)& (0+255),f,b
 12662   003E44  334C               	rrcf	(??_floorf+2)& (0+255),f,b
 12663   003E46  334B               	rrcf	(??_floorf+1)& (0+255),f,b
 12664   003E48  334A               	rrcf	??_floorf& (0+255),f,b
 12665   003E4A                     u7660:
 12666   003E4A  2EE8               	decfsz	wreg,f,c
 12667   003E4C  EF20  F01F         	goto	u7665
 12668   003E50  514A               	movf	??_floorf& (0+255),w,b
 12669   003E52  114B               	iorwf	(??_floorf+1)& (0+255),w,b
 12670   003E54  114C               	iorwf	(??_floorf+2)& (0+255),w,b
 12671   003E56  114D               	iorwf	(??_floorf+3)& (0+255),w,b
 12672   003E58  A4D8               	btfss	status,2,c
 12673   003E5A  EF31  F01F         	goto	u7671
 12674   003E5E  EF33  F01F         	goto	u7670
 12675   003E62                     u7671:
 12676   003E62  EF3D  F01F         	goto	l7036
 12677   003E66                     u7670:
 12678   003E66                     
 12679                           ; BSR set to: 1
 12680   003E66  0E00               	movlw	0
 12681   003E68  6F56               	movwf	floorf@u& (0+255),b
 12682   003E6A  0E00               	movlw	0
 12683   003E6C  6F57               	movwf	(floorf@u+1)& (0+255),b
 12684   003E6E  0E00               	movlw	0
 12685   003E70  6F58               	movwf	(floorf@u+2)& (0+255),b
 12686   003E72  0E00               	movlw	0
 12687   003E74  6F59               	movwf	(floorf@u+3)& (0+255),b
 12688   003E76  EF59  F01F         	goto	l7040
 12689   003E7A                     l7036:
 12690                           
 12691                           ; BSR set to: 1
 12692   003E7A  90D8               	bcf	status,0,c
 12693   003E7C  3556               	rlcf	floorf@u& (0+255),w,b
 12694   003E7E  6F4A               	movwf	??_floorf& (0+255),b
 12695   003E80  3557               	rlcf	(floorf@u+1)& (0+255),w,b
 12696   003E82  6F4B               	movwf	(??_floorf+1)& (0+255),b
 12697   003E84  3558               	rlcf	(floorf@u+2)& (0+255),w,b
 12698   003E86  6F4C               	movwf	(??_floorf+2)& (0+255),b
 12699   003E88  3559               	rlcf	(floorf@u+3)& (0+255),w,b
 12700   003E8A  6F4D               	movwf	(??_floorf+3)& (0+255),b
 12701   003E8C  514A               	movf	??_floorf& (0+255),w,b
 12702   003E8E  114B               	iorwf	(??_floorf+1)& (0+255),w,b
 12703   003E90  114C               	iorwf	(??_floorf+2)& (0+255),w,b
 12704   003E92  114D               	iorwf	(??_floorf+3)& (0+255),w,b
 12705   003E94  B4D8               	btfsc	status,2,c
 12706   003E96  EF4F  F01F         	goto	u7681
 12707   003E9A  EF51  F01F         	goto	u7680
 12708   003E9E                     u7681:
 12709   003E9E  EF59  F01F         	goto	l7040
 12710   003EA2                     u7680:
 12711   003EA2                     
 12712                           ; BSR set to: 1
 12713   003EA2  0E00               	movlw	0
 12714   003EA4  6F56               	movwf	floorf@u& (0+255),b
 12715   003EA6  0E00               	movlw	0
 12716   003EA8  6F57               	movwf	(floorf@u+1)& (0+255),b
 12717   003EAA  0E80               	movlw	128
 12718   003EAC  6F58               	movwf	(floorf@u+2)& (0+255),b
 12719   003EAE  0EBF               	movlw	191
 12720   003EB0  6F59               	movwf	(floorf@u+3)& (0+255),b
 12721   003EB2                     l7040:
 12722                           
 12723                           ; BSR set to: 1
 12724   003EB2  C156  F146         	movff	floorf@u,?_floorf
 12725   003EB6  C157  F147         	movff	floorf@u+1,?_floorf+1
 12726   003EBA  C158  F148         	movff	floorf@u+2,?_floorf+2
 12727   003EBE  C159  F149         	movff	floorf@u+3,?_floorf+3
 12728   003EC2                     l1709:
 12729                           
 12730                           ; BSR set to: 1
 12731   003EC2  0012               	return		;funcret
 12732   003EC4                     __end_of_floorf:
 12733                           	callstack 0
 12734                           
 12735 ;; *************** function ___fpclassifyf *****************
 12736 ;; Defined at:
 12737 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\__fpclassifyf.c"
 12738 ;; Parameters:    Size  Location     Type
 12739 ;;  x               4    6[BANK1 ] float 
 12740 ;; Auto vars:     Size  Location     Type
 12741 ;;  u               4   16[BANK1 ] struct .
 12742 ;;  e               2   14[BANK1 ] int 
 12743 ;; Return value:  Size  Location     Type
 12744 ;;                  2    6[BANK1 ] int 
 12745 ;; Registers used:
 12746 ;;		wreg, status,2, status,0
 12747 ;; Tracked objects:
 12748 ;;		On entry : 0/0
 12749 ;;		On exit  : 0/0
 12750 ;;		Unchanged: 0/0
 12751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12752 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12753 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12754 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12755 ;;      Totals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12756 ;;Total ram usage:       14 bytes
 12757 ;; Hardware stack levels used: 1
 12758 ;; Hardware stack levels required when called: 13
 12759 ;; This function calls:
 12760 ;;		Nothing
 12761 ;; This function is called by:
 12762 ;;		_efgtoa
 12763 ;; This function uses a non-reentrant model
 12764 ;;
 12765                           
 12766                           	psect	text28
 12767   004994                     __ptext28:
 12768                           	callstack 0
 12769   004994                     ___fpclassifyf:
 12770                           	callstack 12
 12771   004994  C0D9  F110         	movff	___fpclassifyf@F465,___fpclassifyf@u
 12772   004998  C0DA  F111         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
 12773   00499C  C0DB  F112         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
 12774   0049A0  C0DC  F113         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
 12775   0049A4  C106  F110         	movff	___fpclassifyf@x,___fpclassifyf@u
 12776   0049A8  C107  F111         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
 12777   0049AC  C108  F112         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
 12778   0049B0  C109  F113         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
 12779   0049B4  C110  F10A         	movff	___fpclassifyf@u,??___fpclassifyf
 12780   0049B8  C111  F10B         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
 12781   0049BC  C112  F10C         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
 12782   0049C0  C113  F10D         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
 12783   0049C4  0E18               	movlw	24
 12784   0049C6  EFEB  F024         	goto	u7500
 12785   0049CA                     u7505:
 12786   0049CA  0101               	movlb	1	; () banked
 12787   0049CC  90D8               	bcf	status,0,c
 12788   0049CE  330D               	rrcf	(??___fpclassifyf+3)& (0+255),f,b
 12789   0049D0  330C               	rrcf	(??___fpclassifyf+2)& (0+255),f,b
 12790   0049D2  330B               	rrcf	(??___fpclassifyf+1)& (0+255),f,b
 12791   0049D4  330A               	rrcf	??___fpclassifyf& (0+255),f,b
 12792   0049D6                     u7500:
 12793   0049D6  2EE8               	decfsz	wreg,f,c
 12794   0049D8  EFE5  F024         	goto	u7505
 12795   0049DC  510A               	movf	??___fpclassifyf& (0+255),w,b
 12796   0049DE  6F0E               	movwf	___fpclassifyf@e& (0+255),b
 12797   0049E0  6B0F               	clrf	(___fpclassifyf@e+1)& (0+255),b
 12798   0049E2  510E               	movf	___fpclassifyf@e& (0+255),w,b
 12799   0049E4  110F               	iorwf	(___fpclassifyf@e+1)& (0+255),w,b
 12800   0049E6  A4D8               	btfss	status,2,c
 12801   0049E8  EFF8  F024         	goto	u7511
 12802   0049EC  EFFA  F024         	goto	u7510
 12803   0049F0                     u7511:
 12804   0049F0  EF1A  F025         	goto	l6994
 12805   0049F4                     u7510:
 12806   0049F4                     
 12807                           ; BSR set to: 1
 12808   0049F4  90D8               	bcf	status,0,c
 12809   0049F6  3510               	rlcf	___fpclassifyf@u& (0+255),w,b
 12810   0049F8  6F0A               	movwf	??___fpclassifyf& (0+255),b
 12811   0049FA  3511               	rlcf	(___fpclassifyf@u+1)& (0+255),w,b
 12812   0049FC  6F0B               	movwf	(??___fpclassifyf+1)& (0+255),b
 12813   0049FE  3512               	rlcf	(___fpclassifyf@u+2)& (0+255),w,b
 12814   004A00  6F0C               	movwf	(??___fpclassifyf+2)& (0+255),b
 12815   004A02  3513               	rlcf	(___fpclassifyf@u+3)& (0+255),w,b
 12816   004A04  6F0D               	movwf	(??___fpclassifyf+3)& (0+255),b
 12817   004A06  510A               	movf	??___fpclassifyf& (0+255),w,b
 12818   004A08  110B               	iorwf	(??___fpclassifyf+1)& (0+255),w,b
 12819   004A0A  110C               	iorwf	(??___fpclassifyf+2)& (0+255),w,b
 12820   004A0C  110D               	iorwf	(??___fpclassifyf+3)& (0+255),w,b
 12821   004A0E  A4D8               	btfss	status,2,c
 12822   004A10  EF0C  F025         	goto	u7521
 12823   004A14  EF0E  F025         	goto	u7520
 12824   004A18                     u7521:
 12825   004A18  EF14  F025         	goto	l6990
 12826   004A1C                     u7520:
 12827   004A1C                     
 12828                           ; BSR set to: 1
 12829   004A1C  0E00               	movlw	0
 12830   004A1E  6F07               	movwf	(?___fpclassifyf+1)& (0+255),b
 12831   004A20  0E02               	movlw	2
 12832   004A22  6F06               	movwf	?___fpclassifyf& (0+255),b
 12833   004A24  EF49  F025         	goto	l1702
 12834   004A28                     l6990:
 12835                           
 12836                           ; BSR set to: 1
 12837   004A28  0E00               	movlw	0
 12838   004A2A  6F07               	movwf	(?___fpclassifyf+1)& (0+255),b
 12839   004A2C  0E03               	movlw	3
 12840   004A2E  6F06               	movwf	?___fpclassifyf& (0+255),b
 12841   004A30  EF49  F025         	goto	l1702
 12842   004A34                     l6994:
 12843                           
 12844                           ; BSR set to: 1
 12845   004A34  290E               	incf	___fpclassifyf@e& (0+255),w,b
 12846   004A36  110F               	iorwf	(___fpclassifyf@e+1)& (0+255),w,b
 12847   004A38  A4D8               	btfss	status,2,c
 12848   004A3A  EF21  F025         	goto	u7531
 12849   004A3E  EF23  F025         	goto	u7530
 12850   004A42                     u7531:
 12851   004A42  EF45  F025         	goto	l7000
 12852   004A46                     u7530:
 12853   004A46                     
 12854                           ; BSR set to: 1
 12855   004A46  C110  F10A         	movff	___fpclassifyf@u,??___fpclassifyf
 12856   004A4A  C111  F10B         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
 12857   004A4E  C112  F10C         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
 12858   004A52  C113  F10D         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
 12859   004A56  0E09               	movlw	9
 12860   004A58                     u7545:
 12861   004A58  90D8               	bcf	status,0,c
 12862   004A5A  370A               	rlcf	??___fpclassifyf& (0+255),f,b
 12863   004A5C  370B               	rlcf	(??___fpclassifyf+1)& (0+255),f,b
 12864   004A5E  370C               	rlcf	(??___fpclassifyf+2)& (0+255),f,b
 12865   004A60  370D               	rlcf	(??___fpclassifyf+3)& (0+255),f,b
 12866   004A62  2EE8               	decfsz	wreg,f,c
 12867   004A64  EF2C  F025         	goto	u7545
 12868   004A68  510A               	movf	??___fpclassifyf& (0+255),w,b
 12869   004A6A  110B               	iorwf	(??___fpclassifyf+1)& (0+255),w,b
 12870   004A6C  110C               	iorwf	(??___fpclassifyf+2)& (0+255),w,b
 12871   004A6E  110D               	iorwf	(??___fpclassifyf+3)& (0+255),w,b
 12872   004A70  B4D8               	btfsc	status,2,c
 12873   004A72  EF3D  F025         	goto	u7551
 12874   004A76  EF40  F025         	goto	u7550
 12875   004A7A                     u7551:
 12876   004A7A  0E01               	movlw	1
 12877   004A7C  EF41  F025         	goto	u7560
 12878   004A80                     u7550:
 12879   004A80  0E00               	movlw	0
 12880   004A82                     u7560:
 12881   004A82  6F06               	movwf	?___fpclassifyf& (0+255),b
 12882   004A84  6B07               	clrf	(?___fpclassifyf+1)& (0+255),b
 12883   004A86  EF49  F025         	goto	l1702
 12884   004A8A                     l7000:
 12885                           
 12886                           ; BSR set to: 1
 12887   004A8A  0E00               	movlw	0
 12888   004A8C  6F07               	movwf	(?___fpclassifyf+1)& (0+255),b
 12889   004A8E  0E04               	movlw	4
 12890   004A90  6F06               	movwf	?___fpclassifyf& (0+255),b
 12891   004A92                     l1702:
 12892                           
 12893                           ; BSR set to: 1
 12894   004A92  0012               	return		;funcret
 12895   004A94                     __end_of___fpclassifyf:
 12896                           	callstack 0
 12897                           
 12898 ;; *************** function ___fltol *****************
 12899 ;; Defined at:
 12900 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\fltol.c"
 12901 ;; Parameters:    Size  Location     Type
 12902 ;;  f1              4   80[BANK1 ] int 
 12903 ;; Auto vars:     Size  Location     Type
 12904 ;;  exp1            1   89[BANK1 ] unsigned char 
 12905 ;;  sign1           1   88[BANK1 ] unsigned char 
 12906 ;; Return value:  Size  Location     Type
 12907 ;;                  4   80[BANK1 ] long 
 12908 ;; Registers used:
 12909 ;;		wreg, status,2, status,0
 12910 ;; Tracked objects:
 12911 ;;		On entry : 0/0
 12912 ;;		On exit  : 0/0
 12913 ;;		Unchanged: 0/0
 12914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12915 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12916 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12917 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12918 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12919 ;;Total ram usage:       10 bytes
 12920 ;; Hardware stack levels used: 1
 12921 ;; Hardware stack levels required when called: 13
 12922 ;; This function calls:
 12923 ;;		Nothing
 12924 ;; This function is called by:
 12925 ;;		_LCD_UpdateMenu
 12926 ;;		_efgtoa
 12927 ;;		_lire_courant
 12928 ;; This function uses a non-reentrant model
 12929 ;;
 12930                           
 12931                           	psect	text29
 12932   00457C                     __ptext29:
 12933                           	callstack 0
 12934   00457C                     ___fltol:
 12935                           	callstack 12
 12936   00457C  0101               	movlb	1	; () banked
 12937   00457E  3552               	rlcf	(___fltol@f1+2)& (0+255),w,b
 12938   004580  3553               	rlcf	(___fltol@f1+3)& (0+255),w,b
 12939   004582  6F59               	movwf	___fltol@exp1& (0+255),b
 12940   004584  5159               	movf	___fltol@exp1& (0+255),w,b
 12941   004586  A4D8               	btfss	status,2,c
 12942   004588  EFC8  F022         	goto	u7411
 12943   00458C  EFCA  F022         	goto	u7410
 12944   004590                     u7411:
 12945   004590  EFD4  F022         	goto	l6932
 12946   004594                     u7410:
 12947   004594                     l6928:
 12948                           
 12949                           ; BSR set to: 1
 12950   004594  0E00               	movlw	0
 12951   004596  6F50               	movwf	?___fltol& (0+255),b
 12952   004598  0E00               	movlw	0
 12953   00459A  6F51               	movwf	(?___fltol+1)& (0+255),b
 12954   00459C  0E00               	movlw	0
 12955   00459E  6F52               	movwf	(?___fltol+2)& (0+255),b
 12956   0045A0  0E00               	movlw	0
 12957   0045A2  6F53               	movwf	(?___fltol+3)& (0+255),b
 12958   0045A4  EF41  F023         	goto	l1178
 12959   0045A8                     l6932:
 12960                           
 12961                           ; BSR set to: 1
 12962   0045A8  C150  F154         	movff	___fltol@f1,??___fltol
 12963   0045AC  C151  F155         	movff	___fltol@f1+1,??___fltol+1
 12964   0045B0  C152  F156         	movff	___fltol@f1+2,??___fltol+2
 12965   0045B4  C153  F157         	movff	___fltol@f1+3,??___fltol+3
 12966   0045B8  0E20               	movlw	32
 12967   0045BA  EFE4  F022         	goto	u7420
 12968   0045BE                     u7425:
 12969   0045BE  90D8               	bcf	status,0,c
 12970   0045C0  3357               	rrcf	(??___fltol+3)& (0+255),f,b
 12971   0045C2  3356               	rrcf	(??___fltol+2)& (0+255),f,b
 12972   0045C4  3355               	rrcf	(??___fltol+1)& (0+255),f,b
 12973   0045C6  3354               	rrcf	??___fltol& (0+255),f,b
 12974   0045C8                     u7420:
 12975   0045C8  2EE8               	decfsz	wreg,f,c
 12976   0045CA  EFDF  F022         	goto	u7425
 12977   0045CE  5154               	movf	??___fltol& (0+255),w,b
 12978   0045D0  6F58               	movwf	___fltol@sign1& (0+255),b
 12979   0045D2                     
 12980                           ; BSR set to: 1
 12981   0045D2  8F52               	bsf	(___fltol@f1+2)& (0+255),7,b
 12982   0045D4                     
 12983                           ; BSR set to: 1
 12984   0045D4  0EFF               	movlw	255
 12985   0045D6  1750               	andwf	___fltol@f1& (0+255),f,b
 12986   0045D8  0EFF               	movlw	255
 12987   0045DA  1751               	andwf	(___fltol@f1+1)& (0+255),f,b
 12988   0045DC  0EFF               	movlw	255
 12989   0045DE  1752               	andwf	(___fltol@f1+2)& (0+255),f,b
 12990   0045E0  0E00               	movlw	0
 12991   0045E2  1753               	andwf	(___fltol@f1+3)& (0+255),f,b
 12992   0045E4                     
 12993                           ; BSR set to: 1
 12994   0045E4  0E96               	movlw	150
 12995   0045E6  5F59               	subwf	___fltol@exp1& (0+255),f,b
 12996   0045E8                     
 12997                           ; BSR set to: 1
 12998   0045E8  BF59               	btfsc	___fltol@exp1& (0+255),7,b
 12999   0045EA  EFFB  F022         	goto	u7430
 13000   0045EE  EFF9  F022         	goto	u7431
 13001   0045F2                     u7431:
 13002   0045F2  EF11  F023         	goto	l6952
 13003   0045F6                     u7430:
 13004   0045F6                     
 13005                           ; BSR set to: 1
 13006   0045F6  5159               	movf	___fltol@exp1& (0+255),w,b
 13007   0045F8  0A80               	xorlw	128
 13008   0045FA  0F97               	addlw	151
 13009   0045FC  B0D8               	btfsc	status,0,c
 13010   0045FE  EF03  F023         	goto	u7441
 13011   004602  EF05  F023         	goto	u7440
 13012   004606                     u7441:
 13013   004606  EF07  F023         	goto	l6948
 13014   00460A                     u7440:
 13015   00460A  EFCA  F022         	goto	l6928
 13016   00460E                     l6948:
 13017                           
 13018                           ; BSR set to: 1
 13019   00460E  90D8               	bcf	status,0,c
 13020   004610  3353               	rrcf	(___fltol@f1+3)& (0+255),f,b
 13021   004612  3352               	rrcf	(___fltol@f1+2)& (0+255),f,b
 13022   004614  3351               	rrcf	(___fltol@f1+1)& (0+255),f,b
 13023   004616  3350               	rrcf	___fltol@f1& (0+255),f,b
 13024   004618                     
 13025                           ; BSR set to: 1
 13026   004618  3F59               	incfsz	___fltol@exp1& (0+255),f,b
 13027   00461A  EF07  F023         	goto	l6948
 13028   00461E  EF29  F023         	goto	l6962
 13029   004622                     l6952:
 13030                           
 13031                           ; BSR set to: 1
 13032   004622  0E1F               	movlw	31
 13033   004624  6559               	cpfsgt	___fltol@exp1& (0+255),b
 13034   004626  EF17  F023         	goto	u7451
 13035   00462A  EF19  F023         	goto	u7450
 13036   00462E                     u7451:
 13037   00462E  EF21  F023         	goto	l6960
 13038   004632                     u7450:
 13039   004632  EFCA  F022         	goto	l6928
 13040   004636                     l6958:
 13041                           
 13042                           ; BSR set to: 1
 13043   004636  90D8               	bcf	status,0,c
 13044   004638  3750               	rlcf	___fltol@f1& (0+255),f,b
 13045   00463A  3751               	rlcf	(___fltol@f1+1)& (0+255),f,b
 13046   00463C  3752               	rlcf	(___fltol@f1+2)& (0+255),f,b
 13047   00463E  3753               	rlcf	(___fltol@f1+3)& (0+255),f,b
 13048   004640  0759               	decf	___fltol@exp1& (0+255),f,b
 13049   004642                     l6960:
 13050                           
 13051                           ; BSR set to: 1
 13052   004642  5159               	movf	___fltol@exp1& (0+255),w,b
 13053   004644  A4D8               	btfss	status,2,c
 13054   004646  EF27  F023         	goto	u7461
 13055   00464A  EF29  F023         	goto	u7460
 13056   00464E                     u7461:
 13057   00464E  EF1B  F023         	goto	l6958
 13058   004652                     u7460:
 13059   004652                     l6962:
 13060                           
 13061                           ; BSR set to: 1
 13062   004652  5158               	movf	___fltol@sign1& (0+255),w,b
 13063   004654  B4D8               	btfsc	status,2,c
 13064   004656  EF2F  F023         	goto	u7471
 13065   00465A  EF31  F023         	goto	u7470
 13066   00465E                     u7471:
 13067   00465E  EF39  F023         	goto	l6966
 13068   004662                     u7470:
 13069   004662                     
 13070                           ; BSR set to: 1
 13071   004662  1F53               	comf	(___fltol@f1+3)& (0+255),f,b
 13072   004664  1F52               	comf	(___fltol@f1+2)& (0+255),f,b
 13073   004666  1F51               	comf	(___fltol@f1+1)& (0+255),f,b
 13074   004668  6D50               	negf	___fltol@f1& (0+255),b
 13075   00466A  0E00               	movlw	0
 13076   00466C  2351               	addwfc	(___fltol@f1+1)& (0+255),f,b
 13077   00466E  2352               	addwfc	(___fltol@f1+2)& (0+255),f,b
 13078   004670  2353               	addwfc	(___fltol@f1+3)& (0+255),f,b
 13079   004672                     l6966:
 13080                           
 13081                           ; BSR set to: 1
 13082   004672  C150  F150         	movff	___fltol@f1,?___fltol
 13083   004676  C151  F151         	movff	___fltol@f1+1,?___fltol+1
 13084   00467A  C152  F152         	movff	___fltol@f1+2,?___fltol+2
 13085   00467E  C153  F153         	movff	___fltol@f1+3,?___fltol+3
 13086   004682                     l1178:
 13087                           
 13088                           ; BSR set to: 1
 13089   004682  0012               	return		;funcret
 13090   004684                     __end_of___fltol:
 13091                           	callstack 0
 13092                           
 13093 ;; *************** function ___flsub *****************
 13094 ;; Defined at:
 13095 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\sprcadd.c"
 13096 ;; Parameters:    Size  Location     Type
 13097 ;;  b               4   45[BANK1 ] long 
 13098 ;;  a               4   49[BANK1 ] long 
 13099 ;; Auto vars:     Size  Location     Type
 13100 ;;		None
 13101 ;; Return value:  Size  Location     Type
 13102 ;;                  4   45[BANK1 ] long 
 13103 ;; Registers used:
 13104 ;;		wreg, status,2, status,0, cstack
 13105 ;; Tracked objects:
 13106 ;;		On entry : 0/0
 13107 ;;		On exit  : 0/0
 13108 ;;		Unchanged: 0/0
 13109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13110 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13111 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13112 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13113 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13114 ;;Total ram usage:        8 bytes
 13115 ;; Hardware stack levels used: 1
 13116 ;; Hardware stack levels required when called: 14
 13117 ;; This function calls:
 13118 ;;		___fladd
 13119 ;; This function is called by:
 13120 ;;		_efgtoa
 13121 ;; This function uses a non-reentrant model
 13122 ;;
 13123                           
 13124                           	psect	text30
 13125   005FC0                     __ptext30:
 13126                           	callstack 0
 13127   005FC0                     ___flsub:
 13128                           	callstack 11
 13129   005FC0  0E00               	movlw	0
 13130   005FC2  0101               	movlb	1	; () banked
 13131   005FC4  1B31               	xorwf	___flsub@a& (0+255),f,b
 13132   005FC6  0E00               	movlw	0
 13133   005FC8  1B32               	xorwf	(___flsub@a+1)& (0+255),f,b
 13134   005FCA  0E00               	movlw	0
 13135   005FCC  1B33               	xorwf	(___flsub@a+2)& (0+255),f,b
 13136   005FCE  0E80               	movlw	128
 13137   005FD0  1B34               	xorwf	(___flsub@a+3)& (0+255),f,b
 13138   005FD2                     
 13139                           ; BSR set to: 1
 13140   005FD2  C12D  F106         	movff	___flsub@b,___fladd@b
 13141   005FD6  C12E  F107         	movff	___flsub@b+1,___fladd@b+1
 13142   005FDA  C12F  F108         	movff	___flsub@b+2,___fladd@b+2
 13143   005FDE  C130  F109         	movff	___flsub@b+3,___fladd@b+3
 13144   005FE2  C131  F10A         	movff	___flsub@a,___fladd@a
 13145   005FE6  C132  F10B         	movff	___flsub@a+1,___fladd@a+1
 13146   005FEA  C133  F10C         	movff	___flsub@a+2,___fladd@a+2
 13147   005FEE  C134  F10D         	movff	___flsub@a+3,___fladd@a+3
 13148   005FF2  EC45  F00B         	call	___fladd	;wreg free
 13149   005FF6  C106  F12D         	movff	?___fladd,?___flsub
 13150   005FFA  C107  F12E         	movff	?___fladd+1,?___flsub+1
 13151   005FFE  C108  F12F         	movff	?___fladd+2,?___flsub+2
 13152   006002  C109  F130         	movff	?___fladd+3,?___flsub+3
 13153   006006  0012               	return		;funcret
 13154   006008                     __end_of___flsub:
 13155                           	callstack 0
 13156                           
 13157 ;; *************** function ___fladd *****************
 13158 ;; Defined at:
 13159 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\sprcadd.c"
 13160 ;; Parameters:    Size  Location     Type
 13161 ;;  b               4    6[BANK1 ] long 
 13162 ;;  a               4   10[BANK1 ] long 
 13163 ;; Auto vars:     Size  Location     Type
 13164 ;;  grs             1   21[BANK1 ] unsigned char 
 13165 ;;  bexp            1   20[BANK1 ] unsigned char 
 13166 ;;  aexp            1   19[BANK1 ] unsigned char 
 13167 ;;  signs           1   18[BANK1 ] unsigned char 
 13168 ;; Return value:  Size  Location     Type
 13169 ;;                  4    6[BANK1 ] unsigned char 
 13170 ;; Registers used:
 13171 ;;		wreg, status,2, status,0
 13172 ;; Tracked objects:
 13173 ;;		On entry : 0/0
 13174 ;;		On exit  : 0/0
 13175 ;;		Unchanged: 0/0
 13176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13177 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13178 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13179 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13180 ;;      Totals:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13181 ;;Total ram usage:       16 bytes
 13182 ;; Hardware stack levels used: 1
 13183 ;; Hardware stack levels required when called: 13
 13184 ;; This function calls:
 13185 ;;		Nothing
 13186 ;; This function is called by:
 13187 ;;		___flsub
 13188 ;;		_efgtoa
 13189 ;; This function uses a non-reentrant model
 13190 ;;
 13191                           
 13192                           	psect	text31
 13193   00168A                     __ptext31:
 13194                           	callstack 0
 13195   00168A                     ___fladd:
 13196                           	callstack 11
 13197   00168A  0101               	movlb	1	; () banked
 13198   00168C  5109               	movf	(___fladd@b+3)& (0+255),w,b
 13199   00168E  0B80               	andlw	128
 13200   001690  6F12               	movwf	___fladd@signs& (0+255),b
 13201   001692  5109               	movf	(___fladd@b+3)& (0+255),w,b
 13202   001694  2509               	addwf	(___fladd@b+3)& (0+255),w,b
 13203   001696  6F14               	movwf	___fladd@bexp& (0+255),b
 13204   001698                     
 13205                           ; BSR set to: 1
 13206   001698  AF08               	btfss	(___fladd@b+2)& (0+255),7,b
 13207   00169A  EF51  F00B         	goto	u6321
 13208   00169E  EF53  F00B         	goto	u6320
 13209   0016A2                     u6321:
 13210   0016A2  EF54  F00B         	goto	l6248
 13211   0016A6                     u6320:
 13212   0016A6                     
 13213                           ; BSR set to: 1
 13214   0016A6  8114               	bsf	___fladd@bexp& (0+255),0,b
 13215   0016A8                     l6248:
 13216                           
 13217                           ; BSR set to: 1
 13218   0016A8  5114               	movf	___fladd@bexp& (0+255),w,b
 13219   0016AA  B4D8               	btfsc	status,2,c
 13220   0016AC  EF5A  F00B         	goto	u6331
 13221   0016B0  EF5C  F00B         	goto	u6330
 13222   0016B4                     u6331:
 13223   0016B4  EF70  F00B         	goto	l6258
 13224   0016B8                     u6330:
 13225   0016B8                     
 13226                           ; BSR set to: 1
 13227   0016B8  2914               	incf	___fladd@bexp& (0+255),w,b
 13228   0016BA  A4D8               	btfss	status,2,c
 13229   0016BC  EF62  F00B         	goto	u6341
 13230   0016C0  EF64  F00B         	goto	u6340
 13231   0016C4                     u6341:
 13232   0016C4  EF6C  F00B         	goto	l6254
 13233   0016C8                     u6340:
 13234   0016C8                     
 13235                           ; BSR set to: 1
 13236   0016C8  0E00               	movlw	0
 13237   0016CA  6F06               	movwf	___fladd@b& (0+255),b
 13238   0016CC  0E00               	movlw	0
 13239   0016CE  6F07               	movwf	(___fladd@b+1)& (0+255),b
 13240   0016D0  0E00               	movlw	0
 13241   0016D2  6F08               	movwf	(___fladd@b+2)& (0+255),b
 13242   0016D4  0E00               	movlw	0
 13243   0016D6  6F09               	movwf	(___fladd@b+3)& (0+255),b
 13244   0016D8                     l6254:
 13245                           
 13246                           ; BSR set to: 1
 13247   0016D8  8F08               	bsf	(___fladd@b+2)& (0+255),7,b
 13248   0016DA                     
 13249                           ; BSR set to: 1
 13250   0016DA  6B09               	clrf	(___fladd@b+3)& (0+255),b
 13251   0016DC  EF78  F00B         	goto	l6260
 13252   0016E0                     l6258:
 13253                           
 13254                           ; BSR set to: 1
 13255   0016E0  0E00               	movlw	0
 13256   0016E2  6F06               	movwf	___fladd@b& (0+255),b
 13257   0016E4  0E00               	movlw	0
 13258   0016E6  6F07               	movwf	(___fladd@b+1)& (0+255),b
 13259   0016E8  0E00               	movlw	0
 13260   0016EA  6F08               	movwf	(___fladd@b+2)& (0+255),b
 13261   0016EC  0E00               	movlw	0
 13262   0016EE  6F09               	movwf	(___fladd@b+3)& (0+255),b
 13263   0016F0                     l6260:
 13264                           
 13265                           ; BSR set to: 1
 13266   0016F0  510D               	movf	(___fladd@a+3)& (0+255),w,b
 13267   0016F2  0B80               	andlw	128
 13268   0016F4  6F13               	movwf	___fladd@aexp& (0+255),b
 13269   0016F6                     
 13270                           ; BSR set to: 1
 13271   0016F6  5112               	movf	___fladd@signs& (0+255),w,b
 13272   0016F8  1913               	xorwf	___fladd@aexp& (0+255),w,b
 13273   0016FA  B4D8               	btfsc	status,2,c
 13274   0016FC  EF82  F00B         	goto	u6351
 13275   001700  EF84  F00B         	goto	u6350
 13276   001704                     u6351:
 13277   001704  EF85  F00B         	goto	l6266
 13278   001708                     u6350:
 13279   001708                     
 13280                           ; BSR set to: 1
 13281   001708  8D12               	bsf	___fladd@signs& (0+255),6,b
 13282   00170A                     l6266:
 13283                           
 13284                           ; BSR set to: 1
 13285   00170A  510D               	movf	(___fladd@a+3)& (0+255),w,b
 13286   00170C  250D               	addwf	(___fladd@a+3)& (0+255),w,b
 13287   00170E  6F13               	movwf	___fladd@aexp& (0+255),b
 13288   001710                     
 13289                           ; BSR set to: 1
 13290   001710  AF0C               	btfss	(___fladd@a+2)& (0+255),7,b
 13291   001712  EF8D  F00B         	goto	u6361
 13292   001716  EF8F  F00B         	goto	u6360
 13293   00171A                     u6361:
 13294   00171A  EF90  F00B         	goto	l6272
 13295   00171E                     u6360:
 13296   00171E                     
 13297                           ; BSR set to: 1
 13298   00171E  8113               	bsf	___fladd@aexp& (0+255),0,b
 13299   001720                     l6272:
 13300                           
 13301                           ; BSR set to: 1
 13302   001720  5113               	movf	___fladd@aexp& (0+255),w,b
 13303   001722  B4D8               	btfsc	status,2,c
 13304   001724  EF96  F00B         	goto	u6371
 13305   001728  EF98  F00B         	goto	u6370
 13306   00172C                     u6371:
 13307   00172C  EFAC  F00B         	goto	l6282
 13308   001730                     u6370:
 13309   001730                     
 13310                           ; BSR set to: 1
 13311   001730  2913               	incf	___fladd@aexp& (0+255),w,b
 13312   001732  A4D8               	btfss	status,2,c
 13313   001734  EF9E  F00B         	goto	u6381
 13314   001738  EFA0  F00B         	goto	u6380
 13315   00173C                     u6381:
 13316   00173C  EFA8  F00B         	goto	l6278
 13317   001740                     u6380:
 13318   001740                     
 13319                           ; BSR set to: 1
 13320   001740  0E00               	movlw	0
 13321   001742  6F0A               	movwf	___fladd@a& (0+255),b
 13322   001744  0E00               	movlw	0
 13323   001746  6F0B               	movwf	(___fladd@a+1)& (0+255),b
 13324   001748  0E00               	movlw	0
 13325   00174A  6F0C               	movwf	(___fladd@a+2)& (0+255),b
 13326   00174C  0E00               	movlw	0
 13327   00174E  6F0D               	movwf	(___fladd@a+3)& (0+255),b
 13328   001750                     l6278:
 13329                           
 13330                           ; BSR set to: 1
 13331   001750  8F0C               	bsf	(___fladd@a+2)& (0+255),7,b
 13332   001752                     
 13333                           ; BSR set to: 1
 13334   001752  6B0D               	clrf	(___fladd@a+3)& (0+255),b
 13335   001754  EFB4  F00B         	goto	l6284
 13336   001758                     l6282:
 13337                           
 13338                           ; BSR set to: 1
 13339   001758  0E00               	movlw	0
 13340   00175A  6F0A               	movwf	___fladd@a& (0+255),b
 13341   00175C  0E00               	movlw	0
 13342   00175E  6F0B               	movwf	(___fladd@a+1)& (0+255),b
 13343   001760  0E00               	movlw	0
 13344   001762  6F0C               	movwf	(___fladd@a+2)& (0+255),b
 13345   001764  0E00               	movlw	0
 13346   001766  6F0D               	movwf	(___fladd@a+3)& (0+255),b
 13347   001768                     l6284:
 13348                           
 13349                           ; BSR set to: 1
 13350   001768  5114               	movf	___fladd@bexp& (0+255),w,b
 13351   00176A  5D13               	subwf	___fladd@aexp& (0+255),w,b
 13352   00176C  B0D8               	btfsc	status,0,c
 13353   00176E  EFBB  F00B         	goto	u6391
 13354   001772  EFBD  F00B         	goto	u6390
 13355   001776                     u6391:
 13356   001776  EFE4  F00B         	goto	l6320
 13357   00177A                     u6390:
 13358   00177A                     
 13359                           ; BSR set to: 1
 13360   00177A  AD12               	btfss	___fladd@signs& (0+255),6,b
 13361   00177C  EFC2  F00B         	goto	u6401
 13362   001780  EFC4  F00B         	goto	u6400
 13363   001784                     u6401:
 13364   001784  EFC6  F00B         	goto	l6290
 13365   001788                     u6400:
 13366   001788                     
 13367                           ; BSR set to: 1
 13368   001788  0E80               	movlw	128
 13369   00178A  1B12               	xorwf	___fladd@signs& (0+255),f,b
 13370   00178C                     l6290:
 13371                           
 13372                           ; BSR set to: 1
 13373   00178C  C114  F115         	movff	___fladd@bexp,___fladd@grs
 13374   001790                     
 13375                           ; BSR set to: 1
 13376   001790  C113  F114         	movff	___fladd@aexp,___fladd@bexp
 13377   001794                     
 13378                           ; BSR set to: 1
 13379   001794  C115  F113         	movff	___fladd@grs,___fladd@aexp
 13380   001798                     
 13381                           ; BSR set to: 1
 13382   001798  C106  F115         	movff	___fladd@b,___fladd@grs
 13383   00179C                     
 13384                           ; BSR set to: 1
 13385   00179C  C10A  F106         	movff	___fladd@a,___fladd@b
 13386   0017A0                     
 13387                           ; BSR set to: 1
 13388   0017A0  C115  F10A         	movff	___fladd@grs,___fladd@a
 13389   0017A4                     
 13390                           ; BSR set to: 1
 13391   0017A4  C107  F115         	movff	___fladd@b+1,___fladd@grs
 13392   0017A8                     
 13393                           ; BSR set to: 1
 13394   0017A8  C10B  F107         	movff	___fladd@a+1,___fladd@b+1
 13395   0017AC                     
 13396                           ; BSR set to: 1
 13397   0017AC  C115  F10B         	movff	___fladd@grs,___fladd@a+1
 13398   0017B0                     
 13399                           ; BSR set to: 1
 13400   0017B0  C108  F115         	movff	___fladd@b+2,___fladd@grs
 13401   0017B4                     
 13402                           ; BSR set to: 1
 13403   0017B4  C10C  F108         	movff	___fladd@a+2,___fladd@b+2
 13404   0017B8                     
 13405                           ; BSR set to: 1
 13406   0017B8  C115  F10C         	movff	___fladd@grs,___fladd@a+2
 13407   0017BC                     
 13408                           ; BSR set to: 1
 13409   0017BC  C109  F115         	movff	___fladd@b+3,___fladd@grs
 13410   0017C0                     
 13411                           ; BSR set to: 1
 13412   0017C0  C10D  F109         	movff	___fladd@a+3,___fladd@b+3
 13413   0017C4                     
 13414                           ; BSR set to: 1
 13415   0017C4  C115  F10D         	movff	___fladd@grs,___fladd@a+3
 13416   0017C8                     l6320:
 13417                           
 13418                           ; BSR set to: 1
 13419   0017C8  6B15               	clrf	___fladd@grs& (0+255),b
 13420   0017CA  5114               	movf	___fladd@bexp& (0+255),w,b
 13421   0017CC  C113  F10E         	movff	___fladd@aexp,??___fladd
 13422   0017D0  6B0F               	clrf	(??___fladd+1)& (0+255),b
 13423   0017D2  5F0E               	subwf	??___fladd& (0+255),f,b
 13424   0017D4  0E00               	movlw	0
 13425   0017D6  5B0F               	subwfb	(??___fladd+1)& (0+255),f,b
 13426   0017D8  BF0F               	btfsc	(??___fladd+1)& (0+255),7,b
 13427   0017DA  EFF8  F00B         	goto	u6411
 13428   0017DE  510F               	movf	(??___fladd+1)& (0+255),w,b
 13429   0017E0  E109               	bnz	u6410
 13430   0017E2  0E1A               	movlw	26
 13431   0017E4  5D0E               	subwf	??___fladd& (0+255),w,b
 13432   0017E6  A0D8               	btfss	status,0,c
 13433   0017E8  EFF8  F00B         	goto	u6411
 13434   0017EC  EFFA  F00B         	goto	u6410
 13435   0017F0                     u6411:
 13436   0017F0  EF31  F00C         	goto	l1410
 13437   0017F4                     u6410:
 13438   0017F4                     
 13439                           ; BSR set to: 1
 13440   0017F4  5106               	movf	___fladd@b& (0+255),w,b
 13441   0017F6  1107               	iorwf	(___fladd@b+1)& (0+255),w,b
 13442   0017F8  1108               	iorwf	(___fladd@b+2)& (0+255),w,b
 13443   0017FA  1109               	iorwf	(___fladd@b+3)& (0+255),w,b
 13444   0017FC  A4D8               	btfss	status,2,c
 13445   0017FE  EF03  F00C         	goto	u6421
 13446   001802  EF06  F00C         	goto	u6420
 13447   001806                     u6421:
 13448   001806  0E01               	movlw	1
 13449   001808  EF07  F00C         	goto	u6430
 13450   00180C                     u6420:
 13451   00180C  0E00               	movlw	0
 13452   00180E                     u6430:
 13453   00180E  6F15               	movwf	___fladd@grs& (0+255),b
 13454   001810                     
 13455                           ; BSR set to: 1
 13456   001810  0E00               	movlw	0
 13457   001812  6F06               	movwf	___fladd@b& (0+255),b
 13458   001814  0E00               	movlw	0
 13459   001816  6F07               	movwf	(___fladd@b+1)& (0+255),b
 13460   001818  0E00               	movlw	0
 13461   00181A  6F08               	movwf	(___fladd@b+2)& (0+255),b
 13462   00181C  0E00               	movlw	0
 13463   00181E  6F09               	movwf	(___fladd@b+3)& (0+255),b
 13464   001820                     
 13465                           ; BSR set to: 1
 13466   001820  C113  F114         	movff	___fladd@aexp,___fladd@bexp
 13467   001824  EF3A  F00C         	goto	l1409
 13468   001828                     l1411:
 13469                           
 13470                           ; BSR set to: 1
 13471   001828  A115               	btfss	___fladd@grs& (0+255),0,b
 13472   00182A  EF19  F00C         	goto	u6441
 13473   00182E  EF1B  F00C         	goto	u6440
 13474   001832                     u6441:
 13475   001832  EF21  F00C         	goto	l6330
 13476   001836                     u6440:
 13477   001836                     
 13478                           ; BSR set to: 1
 13479   001836  90D8               	bcf	status,0,c
 13480   001838  3115               	rrcf	___fladd@grs& (0+255),w,b
 13481   00183A  0901               	iorlw	1
 13482   00183C  6F15               	movwf	___fladd@grs& (0+255),b
 13483   00183E  EF23  F00C         	goto	l6332
 13484   001842                     l6330:
 13485                           
 13486                           ; BSR set to: 1
 13487   001842  90D8               	bcf	status,0,c
 13488   001844  3315               	rrcf	___fladd@grs& (0+255),f,b
 13489   001846                     l6332:
 13490                           
 13491                           ; BSR set to: 1
 13492   001846  A106               	btfss	___fladd@b& (0+255),0,b
 13493   001848  EF28  F00C         	goto	u6451
 13494   00184C  EF2A  F00C         	goto	u6450
 13495   001850                     u6451:
 13496   001850  EF2B  F00C         	goto	l6336
 13497   001854                     u6450:
 13498   001854                     
 13499                           ; BSR set to: 1
 13500   001854  8F15               	bsf	___fladd@grs& (0+255),7,b
 13501   001856                     l6336:
 13502                           
 13503                           ; BSR set to: 1
 13504   001856  3509               	rlcf	(___fladd@b+3)& (0+255),w,b
 13505   001858  3309               	rrcf	(___fladd@b+3)& (0+255),f,b
 13506   00185A  3308               	rrcf	(___fladd@b+2)& (0+255),f,b
 13507   00185C  3307               	rrcf	(___fladd@b+1)& (0+255),f,b
 13508   00185E  3306               	rrcf	___fladd@b& (0+255),f,b
 13509   001860                     
 13510                           ; BSR set to: 1
 13511   001860  2B14               	incf	___fladd@bexp& (0+255),f,b
 13512   001862                     l1410:
 13513                           
 13514                           ; BSR set to: 1
 13515   001862  5113               	movf	___fladd@aexp& (0+255),w,b
 13516   001864  5D14               	subwf	___fladd@bexp& (0+255),w,b
 13517   001866  A0D8               	btfss	status,0,c
 13518   001868  EF38  F00C         	goto	u6461
 13519   00186C  EF3A  F00C         	goto	u6460
 13520   001870                     u6461:
 13521   001870  EF14  F00C         	goto	l1411
 13522   001874                     u6460:
 13523   001874                     l1409:
 13524                           
 13525                           ; BSR set to: 1
 13526   001874  BD12               	btfsc	___fladd@signs& (0+255),6,b
 13527   001876  EF3F  F00C         	goto	u6471
 13528   00187A  EF41  F00C         	goto	u6470
 13529   00187E                     u6471:
 13530   00187E  EF81  F00C         	goto	l6364
 13531   001882                     u6470:
 13532   001882                     
 13533                           ; BSR set to: 1
 13534   001882  5114               	movf	___fladd@bexp& (0+255),w,b
 13535   001884  A4D8               	btfss	status,2,c
 13536   001886  EF47  F00C         	goto	u6481
 13537   00188A  EF49  F00C         	goto	u6480
 13538   00188E                     u6481:
 13539   00188E  EF53  F00C         	goto	l6346
 13540   001892                     u6480:
 13541   001892                     
 13542                           ; BSR set to: 1
 13543   001892  0E00               	movlw	0
 13544   001894  6F06               	movwf	?___fladd& (0+255),b
 13545   001896  0E00               	movlw	0
 13546   001898  6F07               	movwf	(?___fladd+1)& (0+255),b
 13547   00189A  0E00               	movlw	0
 13548   00189C  6F08               	movwf	(?___fladd+2)& (0+255),b
 13549   00189E  0E00               	movlw	0
 13550   0018A0  6F09               	movwf	(?___fladd+3)& (0+255),b
 13551   0018A2  EFA0  F00D         	goto	l1418
 13552   0018A6                     l6346:
 13553                           
 13554                           ; BSR set to: 1
 13555   0018A6  510A               	movf	___fladd@a& (0+255),w,b
 13556   0018A8  2706               	addwf	___fladd@b& (0+255),f,b
 13557   0018AA  510B               	movf	(___fladd@a+1)& (0+255),w,b
 13558   0018AC  2307               	addwfc	(___fladd@b+1)& (0+255),f,b
 13559   0018AE  510C               	movf	(___fladd@a+2)& (0+255),w,b
 13560   0018B0  2308               	addwfc	(___fladd@b+2)& (0+255),f,b
 13561   0018B2  510D               	movf	(___fladd@a+3)& (0+255),w,b
 13562   0018B4  2309               	addwfc	(___fladd@b+3)& (0+255),f,b
 13563   0018B6                     
 13564                           ; BSR set to: 1
 13565   0018B6  A109               	btfss	(___fladd@b+3)& (0+255),0,b
 13566   0018B8  EF60  F00C         	goto	u6491
 13567   0018BC  EF62  F00C         	goto	u6490
 13568   0018C0                     u6491:
 13569   0018C0  EF0E  F00D         	goto	l1423
 13570   0018C4                     u6490:
 13571   0018C4                     
 13572                           ; BSR set to: 1
 13573   0018C4  A115               	btfss	___fladd@grs& (0+255),0,b
 13574   0018C6  EF67  F00C         	goto	u6501
 13575   0018CA  EF69  F00C         	goto	u6500
 13576   0018CE                     u6501:
 13577   0018CE  EF6F  F00C         	goto	l6354
 13578   0018D2                     u6500:
 13579   0018D2                     
 13580                           ; BSR set to: 1
 13581   0018D2  90D8               	bcf	status,0,c
 13582   0018D4  3115               	rrcf	___fladd@grs& (0+255),w,b
 13583   0018D6  0901               	iorlw	1
 13584   0018D8  6F15               	movwf	___fladd@grs& (0+255),b
 13585   0018DA  EF71  F00C         	goto	l6356
 13586   0018DE                     l6354:
 13587                           
 13588                           ; BSR set to: 1
 13589   0018DE  90D8               	bcf	status,0,c
 13590   0018E0  3315               	rrcf	___fladd@grs& (0+255),f,b
 13591   0018E2                     l6356:
 13592                           
 13593                           ; BSR set to: 1
 13594   0018E2  A106               	btfss	___fladd@b& (0+255),0,b
 13595   0018E4  EF76  F00C         	goto	u6511
 13596   0018E8  EF78  F00C         	goto	u6510
 13597   0018EC                     u6511:
 13598   0018EC  EF79  F00C         	goto	l6360
 13599   0018F0                     u6510:
 13600   0018F0                     
 13601                           ; BSR set to: 1
 13602   0018F0  8F15               	bsf	___fladd@grs& (0+255),7,b
 13603   0018F2                     l6360:
 13604                           
 13605                           ; BSR set to: 1
 13606   0018F2  3509               	rlcf	(___fladd@b+3)& (0+255),w,b
 13607   0018F4  3309               	rrcf	(___fladd@b+3)& (0+255),f,b
 13608   0018F6  3308               	rrcf	(___fladd@b+2)& (0+255),f,b
 13609   0018F8  3307               	rrcf	(___fladd@b+1)& (0+255),f,b
 13610   0018FA  3306               	rrcf	___fladd@b& (0+255),f,b
 13611   0018FC                     
 13612                           ; BSR set to: 1
 13613   0018FC  2B14               	incf	___fladd@bexp& (0+255),f,b
 13614   0018FE  EF0E  F00D         	goto	l1423
 13615   001902                     l6364:
 13616                           
 13617                           ; BSR set to: 1
 13618   001902  510A               	movf	___fladd@a& (0+255),w,b
 13619   001904  5D06               	subwf	___fladd@b& (0+255),w,b
 13620   001906  510B               	movf	(___fladd@a+1)& (0+255),w,b
 13621   001908  5907               	subwfb	(___fladd@b+1)& (0+255),w,b
 13622   00190A  510C               	movf	(___fladd@a+2)& (0+255),w,b
 13623   00190C  5908               	subwfb	(___fladd@b+2)& (0+255),w,b
 13624   00190E  5109               	movf	(___fladd@b+3)& (0+255),w,b
 13625   001910  0A80               	xorlw	128
 13626   001912  6F0E               	movwf	??___fladd& (0+255),b
 13627   001914  510D               	movf	(___fladd@a+3)& (0+255),w,b
 13628   001916  0A80               	xorlw	128
 13629   001918  590E               	subwfb	??___fladd& (0+255),w,b
 13630   00191A  B0D8               	btfsc	status,0,c
 13631   00191C  EF92  F00C         	goto	u6521
 13632   001920  EF94  F00C         	goto	u6520
 13633   001924                     u6521:
 13634   001924  EFBF  F00C         	goto	l6374
 13635   001928                     u6520:
 13636   001928                     
 13637                           ; BSR set to: 1
 13638   001928  5106               	movf	___fladd@b& (0+255),w,b
 13639   00192A  5D0A               	subwf	___fladd@a& (0+255),w,b
 13640   00192C  6F0E               	movwf	??___fladd& (0+255),b
 13641   00192E  5107               	movf	(___fladd@b+1)& (0+255),w,b
 13642   001930  590B               	subwfb	(___fladd@a+1)& (0+255),w,b
 13643   001932  6F0F               	movwf	(??___fladd+1)& (0+255),b
 13644   001934  5108               	movf	(___fladd@b+2)& (0+255),w,b
 13645   001936  590C               	subwfb	(___fladd@a+2)& (0+255),w,b
 13646   001938  6F10               	movwf	(??___fladd+2)& (0+255),b
 13647   00193A  5109               	movf	(___fladd@b+3)& (0+255),w,b
 13648   00193C  590D               	subwfb	(___fladd@a+3)& (0+255),w,b
 13649   00193E  6F11               	movwf	(??___fladd+3)& (0+255),b
 13650   001940  0EFF               	movlw	255
 13651   001942  250E               	addwf	??___fladd& (0+255),w,b
 13652   001944  6F06               	movwf	___fladd@b& (0+255),b
 13653   001946  0EFF               	movlw	255
 13654   001948  210F               	addwfc	(??___fladd+1)& (0+255),w,b
 13655   00194A  6F07               	movwf	(___fladd@b+1)& (0+255),b
 13656   00194C  0EFF               	movlw	255
 13657   00194E  2110               	addwfc	(??___fladd+2)& (0+255),w,b
 13658   001950  6F08               	movwf	(___fladd@b+2)& (0+255),b
 13659   001952  0EFF               	movlw	255
 13660   001954  2111               	addwfc	(??___fladd+3)& (0+255),w,b
 13661   001956  6F09               	movwf	(___fladd@b+3)& (0+255),b
 13662   001958  0E80               	movlw	128
 13663   00195A  1B12               	xorwf	___fladd@signs& (0+255),f,b
 13664   00195C                     
 13665                           ; BSR set to: 1
 13666   00195C  6D15               	negf	___fladd@grs& (0+255),b
 13667   00195E                     
 13668                           ; BSR set to: 1
 13669   00195E  5115               	movf	___fladd@grs& (0+255),w,b
 13670   001960  A4D8               	btfss	status,2,c
 13671   001962  EFB5  F00C         	goto	u6531
 13672   001966  EFB7  F00C         	goto	u6530
 13673   00196A                     u6531:
 13674   00196A  EFC7  F00C         	goto	l1426
 13675   00196E                     u6530:
 13676   00196E                     
 13677                           ; BSR set to: 1
 13678   00196E  0E01               	movlw	1
 13679   001970  2706               	addwf	___fladd@b& (0+255),f,b
 13680   001972  0E00               	movlw	0
 13681   001974  2307               	addwfc	(___fladd@b+1)& (0+255),f,b
 13682   001976  2308               	addwfc	(___fladd@b+2)& (0+255),f,b
 13683   001978  2309               	addwfc	(___fladd@b+3)& (0+255),f,b
 13684   00197A  EFC7  F00C         	goto	l1426
 13685   00197E                     l6374:
 13686                           
 13687                           ; BSR set to: 1
 13688   00197E  510A               	movf	___fladd@a& (0+255),w,b
 13689   001980  5F06               	subwf	___fladd@b& (0+255),f,b
 13690   001982  510B               	movf	(___fladd@a+1)& (0+255),w,b
 13691   001984  5B07               	subwfb	(___fladd@b+1)& (0+255),f,b
 13692   001986  510C               	movf	(___fladd@a+2)& (0+255),w,b
 13693   001988  5B08               	subwfb	(___fladd@b+2)& (0+255),f,b
 13694   00198A  510D               	movf	(___fladd@a+3)& (0+255),w,b
 13695   00198C  5B09               	subwfb	(___fladd@b+3)& (0+255),f,b
 13696   00198E                     l1426:
 13697                           
 13698                           ; BSR set to: 1
 13699   00198E  5106               	movf	___fladd@b& (0+255),w,b
 13700   001990  1107               	iorwf	(___fladd@b+1)& (0+255),w,b
 13701   001992  1108               	iorwf	(___fladd@b+2)& (0+255),w,b
 13702   001994  1109               	iorwf	(___fladd@b+3)& (0+255),w,b
 13703   001996  A4D8               	btfss	status,2,c
 13704   001998  EFD0  F00C         	goto	u6541
 13705   00199C  EFD2  F00C         	goto	u6540
 13706   0019A0                     u6541:
 13707   0019A0  EF07  F00D         	goto	l6398
 13708   0019A4                     u6540:
 13709   0019A4                     
 13710                           ; BSR set to: 1
 13711   0019A4  5115               	movf	___fladd@grs& (0+255),w,b
 13712   0019A6  A4D8               	btfss	status,2,c
 13713   0019A8  EFD8  F00C         	goto	u6551
 13714   0019AC  EFDA  F00C         	goto	u6550
 13715   0019B0                     u6551:
 13716   0019B0  EF07  F00D         	goto	l6398
 13717   0019B4                     u6550:
 13718   0019B4                     
 13719                           ; BSR set to: 1
 13720   0019B4  0E00               	movlw	0
 13721   0019B6  6F06               	movwf	?___fladd& (0+255),b
 13722   0019B8  0E00               	movlw	0
 13723   0019BA  6F07               	movwf	(?___fladd+1)& (0+255),b
 13724   0019BC  0E00               	movlw	0
 13725   0019BE  6F08               	movwf	(?___fladd+2)& (0+255),b
 13726   0019C0  0E00               	movlw	0
 13727   0019C2  6F09               	movwf	(?___fladd+3)& (0+255),b
 13728   0019C4  EFA0  F00D         	goto	l1418
 13729   0019C8                     l6382:
 13730                           
 13731                           ; BSR set to: 1
 13732   0019C8  90D8               	bcf	status,0,c
 13733   0019CA  3706               	rlcf	___fladd@b& (0+255),f,b
 13734   0019CC  3707               	rlcf	(___fladd@b+1)& (0+255),f,b
 13735   0019CE  3708               	rlcf	(___fladd@b+2)& (0+255),f,b
 13736   0019D0  3709               	rlcf	(___fladd@b+3)& (0+255),f,b
 13737   0019D2                     
 13738                           ; BSR set to: 1
 13739   0019D2  AF15               	btfss	___fladd@grs& (0+255),7,b
 13740   0019D4  EFEE  F00C         	goto	u6561
 13741   0019D8  EFF0  F00C         	goto	u6560
 13742   0019DC                     u6561:
 13743   0019DC  EFF1  F00C         	goto	l6388
 13744   0019E0                     u6560:
 13745   0019E0                     
 13746                           ; BSR set to: 1
 13747   0019E0  8106               	bsf	___fladd@b& (0+255),0,b
 13748   0019E2                     l6388:
 13749                           
 13750                           ; BSR set to: 1
 13751   0019E2  A115               	btfss	___fladd@grs& (0+255),0,b
 13752   0019E4  EFF6  F00C         	goto	u6571
 13753   0019E8  EFF8  F00C         	goto	u6570
 13754   0019EC                     u6571:
 13755   0019EC  EFFC  F00C         	goto	l6392
 13756   0019F0                     u6570:
 13757   0019F0                     
 13758                           ; BSR set to: 1
 13759   0019F0  80D8               	bsf	status,0,c
 13760   0019F2  3715               	rlcf	___fladd@grs& (0+255),f,b
 13761   0019F4  EFFE  F00C         	goto	l6394
 13762   0019F8                     l6392:
 13763                           
 13764                           ; BSR set to: 1
 13765   0019F8  90D8               	bcf	status,0,c
 13766   0019FA  3715               	rlcf	___fladd@grs& (0+255),f,b
 13767   0019FC                     l6394:
 13768                           
 13769                           ; BSR set to: 1
 13770   0019FC  5114               	movf	___fladd@bexp& (0+255),w,b
 13771   0019FE  B4D8               	btfsc	status,2,c
 13772   001A00  EF04  F00D         	goto	u6581
 13773   001A04  EF06  F00D         	goto	u6580
 13774   001A08                     u6581:
 13775   001A08  EF07  F00D         	goto	l6398
 13776   001A0C                     u6580:
 13777   001A0C                     
 13778                           ; BSR set to: 1
 13779   001A0C  0714               	decf	___fladd@bexp& (0+255),f,b
 13780   001A0E                     l6398:
 13781                           
 13782                           ; BSR set to: 1
 13783   001A0E  AF08               	btfss	(___fladd@b+2)& (0+255),7,b
 13784   001A10  EF0C  F00D         	goto	u6591
 13785   001A14  EF0E  F00D         	goto	u6590
 13786   001A18                     u6591:
 13787   001A18  EFE4  F00C         	goto	l6382
 13788   001A1C                     u6590:
 13789   001A1C                     l1423:
 13790                           
 13791                           ; BSR set to: 1
 13792   001A1C  6B13               	clrf	___fladd@aexp& (0+255),b
 13793   001A1E  AF15               	btfss	___fladd@grs& (0+255),7,b
 13794   001A20  EF14  F00D         	goto	u6601
 13795   001A24  EF16  F00D         	goto	u6600
 13796   001A28                     u6601:
 13797   001A28  EF2E  F00D         	goto	l1435
 13798   001A2C                     u6600:
 13799   001A2C                     
 13800                           ; BSR set to: 1
 13801   001A2C  C115  F10E         	movff	___fladd@grs,??___fladd
 13802   001A30  0E7F               	movlw	127
 13803   001A32  170E               	andwf	??___fladd& (0+255),f,b
 13804   001A34  B4D8               	btfsc	status,2,c
 13805   001A36  EF1F  F00D         	goto	u6611
 13806   001A3A  EF21  F00D         	goto	u6610
 13807   001A3E                     u6611:
 13808   001A3E  EF25  F00D         	goto	l1436
 13809   001A42                     u6610:
 13810   001A42                     l6402:
 13811                           
 13812                           ; BSR set to: 1
 13813   001A42  0E01               	movlw	1
 13814   001A44  6F13               	movwf	___fladd@aexp& (0+255),b
 13815   001A46  EF2E  F00D         	goto	l1435
 13816   001A4A                     l1436:
 13817                           
 13818                           ; BSR set to: 1
 13819   001A4A  A106               	btfss	___fladd@b& (0+255),0,b
 13820   001A4C  EF2A  F00D         	goto	u6621
 13821   001A50  EF2C  F00D         	goto	u6620
 13822   001A54                     u6621:
 13823   001A54  EF2E  F00D         	goto	l1435
 13824   001A58                     u6620:
 13825   001A58  EF21  F00D         	goto	l6402
 13826   001A5C                     l1435:
 13827                           
 13828                           ; BSR set to: 1
 13829   001A5C  5113               	movf	___fladd@aexp& (0+255),w,b
 13830   001A5E  B4D8               	btfsc	status,2,c
 13831   001A60  EF34  F00D         	goto	u6631
 13832   001A64  EF36  F00D         	goto	u6630
 13833   001A68                     u6631:
 13834   001A68  EF61  F00D         	goto	l6414
 13835   001A6C                     u6630:
 13836   001A6C                     
 13837                           ; BSR set to: 1
 13838   001A6C  0E01               	movlw	1
 13839   001A6E  2706               	addwf	___fladd@b& (0+255),f,b
 13840   001A70  0E00               	movlw	0
 13841   001A72  2307               	addwfc	(___fladd@b+1)& (0+255),f,b
 13842   001A74  2308               	addwfc	(___fladd@b+2)& (0+255),f,b
 13843   001A76  2309               	addwfc	(___fladd@b+3)& (0+255),f,b
 13844   001A78                     
 13845                           ; BSR set to: 1
 13846   001A78  A109               	btfss	(___fladd@b+3)& (0+255),0,b
 13847   001A7A  EF41  F00D         	goto	u6641
 13848   001A7E  EF43  F00D         	goto	u6640
 13849   001A82                     u6641:
 13850   001A82  EF61  F00D         	goto	l6414
 13851   001A86                     u6640:
 13852   001A86                     
 13853                           ; BSR set to: 1
 13854   001A86  C106  F10E         	movff	___fladd@b,??___fladd
 13855   001A8A  C107  F10F         	movff	___fladd@b+1,??___fladd+1
 13856   001A8E  C108  F110         	movff	___fladd@b+2,??___fladd+2
 13857   001A92  C109  F111         	movff	___fladd@b+3,??___fladd+3
 13858   001A96  3511               	rlcf	(??___fladd+3)& (0+255),w,b
 13859   001A98  3311               	rrcf	(??___fladd+3)& (0+255),f,b
 13860   001A9A  3310               	rrcf	(??___fladd+2)& (0+255),f,b
 13861   001A9C  330F               	rrcf	(??___fladd+1)& (0+255),f,b
 13862   001A9E  330E               	rrcf	??___fladd& (0+255),f,b
 13863   001AA0  C10E  F106         	movff	??___fladd,___fladd@b
 13864   001AA4  C10F  F107         	movff	??___fladd+1,___fladd@b+1
 13865   001AA8  C110  F108         	movff	??___fladd+2,___fladd@b+2
 13866   001AAC  C111  F109         	movff	??___fladd+3,___fladd@b+3
 13867   001AB0  2914               	incf	___fladd@bexp& (0+255),w,b
 13868   001AB2  B4D8               	btfsc	status,2,c
 13869   001AB4  EF5E  F00D         	goto	u6651
 13870   001AB8  EF60  F00D         	goto	u6650
 13871   001ABC                     u6651:
 13872   001ABC  EF61  F00D         	goto	l6414
 13873   001AC0                     u6650:
 13874   001AC0                     
 13875                           ; BSR set to: 1
 13876   001AC0  2B14               	incf	___fladd@bexp& (0+255),f,b
 13877   001AC2                     l6414:
 13878                           
 13879                           ; BSR set to: 1
 13880   001AC2  2914               	incf	___fladd@bexp& (0+255),w,b
 13881   001AC4  B4D8               	btfsc	status,2,c
 13882   001AC6  EF67  F00D         	goto	u6661
 13883   001ACA  EF69  F00D         	goto	u6660
 13884   001ACE                     u6661:
 13885   001ACE  EF71  F00D         	goto	l6418
 13886   001AD2                     u6660:
 13887   001AD2                     
 13888                           ; BSR set to: 1
 13889   001AD2  5114               	movf	___fladd@bexp& (0+255),w,b
 13890   001AD4  A4D8               	btfss	status,2,c
 13891   001AD6  EF6F  F00D         	goto	u6671
 13892   001ADA  EF71  F00D         	goto	u6670
 13893   001ADE                     u6671:
 13894   001ADE  EF82  F00D         	goto	l1442
 13895   001AE2                     u6670:
 13896   001AE2                     l6418:
 13897                           
 13898                           ; BSR set to: 1
 13899   001AE2  0E00               	movlw	0
 13900   001AE4  6F06               	movwf	___fladd@b& (0+255),b
 13901   001AE6  0E00               	movlw	0
 13902   001AE8  6F07               	movwf	(___fladd@b+1)& (0+255),b
 13903   001AEA  0E00               	movlw	0
 13904   001AEC  6F08               	movwf	(___fladd@b+2)& (0+255),b
 13905   001AEE  0E00               	movlw	0
 13906   001AF0  6F09               	movwf	(___fladd@b+3)& (0+255),b
 13907   001AF2  5114               	movf	___fladd@bexp& (0+255),w,b
 13908   001AF4  A4D8               	btfss	status,2,c
 13909   001AF6  EF7F  F00D         	goto	u6681
 13910   001AFA  EF81  F00D         	goto	u6680
 13911   001AFE                     u6681:
 13912   001AFE  EF82  F00D         	goto	l1442
 13913   001B02                     u6680:
 13914   001B02                     
 13915                           ; BSR set to: 1
 13916   001B02  6B12               	clrf	___fladd@signs& (0+255),b
 13917   001B04                     l1442:
 13918                           
 13919                           ; BSR set to: 1
 13920   001B04  A114               	btfss	___fladd@bexp& (0+255),0,b
 13921   001B06  EF87  F00D         	goto	u6691
 13922   001B0A  EF89  F00D         	goto	u6690
 13923   001B0E                     u6691:
 13924   001B0E  EF8C  F00D         	goto	l6424
 13925   001B12                     u6690:
 13926   001B12                     
 13927                           ; BSR set to: 1
 13928   001B12  8F08               	bsf	(___fladd@b+2)& (0+255),7,b
 13929   001B14  EF8D  F00D         	goto	l6426
 13930   001B18                     l6424:
 13931                           
 13932                           ; BSR set to: 1
 13933   001B18  9F08               	bcf	(___fladd@b+2)& (0+255),7,b
 13934   001B1A                     l6426:
 13935                           
 13936                           ; BSR set to: 1
 13937   001B1A  90D8               	bcf	status,0,c
 13938   001B1C  3114               	rrcf	___fladd@bexp& (0+255),w,b
 13939   001B1E  6F09               	movwf	(___fladd@b+3)& (0+255),b
 13940   001B20                     
 13941                           ; BSR set to: 1
 13942   001B20  AF12               	btfss	___fladd@signs& (0+255),7,b
 13943   001B22  EF95  F00D         	goto	u6701
 13944   001B26  EF97  F00D         	goto	u6700
 13945   001B2A                     u6701:
 13946   001B2A  EF98  F00D         	goto	l6432
 13947   001B2E                     u6700:
 13948   001B2E                     
 13949                           ; BSR set to: 1
 13950   001B2E  8F09               	bsf	(___fladd@b+3)& (0+255),7,b
 13951   001B30                     l6432:
 13952                           
 13953                           ; BSR set to: 1
 13954   001B30  C106  F106         	movff	___fladd@b,?___fladd
 13955   001B34  C107  F107         	movff	___fladd@b+1,?___fladd+1
 13956   001B38  C108  F108         	movff	___fladd@b+2,?___fladd+2
 13957   001B3C  C109  F109         	movff	___fladd@b+3,?___fladd+3
 13958   001B40                     l1418:
 13959                           
 13960                           ; BSR set to: 1
 13961   001B40  0012               	return		;funcret
 13962   001B42                     __end_of___fladd:
 13963                           	callstack 0
 13964                           
 13965 ;; *************** function ___flneg *****************
 13966 ;; Defined at:
 13967 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\flneg.c"
 13968 ;; Parameters:    Size  Location     Type
 13969 ;;  f1              4    6[BANK1 ] unsigned char 
 13970 ;; Auto vars:     Size  Location     Type
 13971 ;;		None
 13972 ;; Return value:  Size  Location     Type
 13973 ;;                  4    6[BANK1 ] unsigned char 
 13974 ;; Registers used:
 13975 ;;		wreg, status,2, status,0
 13976 ;; Tracked objects:
 13977 ;;		On entry : 0/0
 13978 ;;		On exit  : 0/0
 13979 ;;		Unchanged: 0/0
 13980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13981 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13982 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13983 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13984 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13985 ;;Total ram usage:        4 bytes
 13986 ;; Hardware stack levels used: 1
 13987 ;; Hardware stack levels required when called: 13
 13988 ;; This function calls:
 13989 ;;		Nothing
 13990 ;; This function is called by:
 13991 ;;		_efgtoa
 13992 ;; This function uses a non-reentrant model
 13993 ;;
 13994                           
 13995                           	psect	text32
 13996   0062A0                     __ptext32:
 13997                           	callstack 0
 13998   0062A0                     ___flneg:
 13999                           	callstack 12
 14000   0062A0  0101               	movlb	1	; () banked
 14001   0062A2  5106               	movf	___flneg@f1& (0+255),w,b
 14002   0062A4  1107               	iorwf	(___flneg@f1+1)& (0+255),w,b
 14003   0062A6  1108               	iorwf	(___flneg@f1+2)& (0+255),w,b
 14004   0062A8  1109               	iorwf	(___flneg@f1+3)& (0+255),w,b
 14005   0062AA  B4D8               	btfsc	status,2,c
 14006   0062AC  EF5A  F031         	goto	u7401
 14007   0062B0  EF5C  F031         	goto	u7400
 14008   0062B4                     u7401:
 14009   0062B4  EF64  F031         	goto	l6922
 14010   0062B8                     u7400:
 14011   0062B8                     
 14012                           ; BSR set to: 1
 14013   0062B8  0E00               	movlw	0
 14014   0062BA  1B06               	xorwf	___flneg@f1& (0+255),f,b
 14015   0062BC  0E00               	movlw	0
 14016   0062BE  1B07               	xorwf	(___flneg@f1+1)& (0+255),f,b
 14017   0062C0  0E00               	movlw	0
 14018   0062C2  1B08               	xorwf	(___flneg@f1+2)& (0+255),f,b
 14019   0062C4  0E80               	movlw	128
 14020   0062C6  1B09               	xorwf	(___flneg@f1+3)& (0+255),f,b
 14021   0062C8                     l6922:
 14022                           
 14023                           ; BSR set to: 1
 14024   0062C8  C106  F106         	movff	___flneg@f1,?___flneg
 14025   0062CC  C107  F107         	movff	___flneg@f1+1,?___flneg+1
 14026   0062D0  C108  F108         	movff	___flneg@f1+2,?___flneg+2
 14027   0062D4  C109  F109         	movff	___flneg@f1+3,?___flneg+3
 14028   0062D8                     
 14029                           ; BSR set to: 1
 14030   0062D8  0012               	return		;funcret
 14031   0062DA                     __end_of___flneg:
 14032                           	callstack 0
 14033                           
 14034 ;; *************** function ___flge *****************
 14035 ;; Defined at:
 14036 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\flge.c"
 14037 ;; Parameters:    Size  Location     Type
 14038 ;;  ff1             4   45[BANK1 ] unsigned char 
 14039 ;;  ff2             4   49[BANK1 ] unsigned char 
 14040 ;; Auto vars:     Size  Location     Type
 14041 ;;		None
 14042 ;; Return value:  Size  Location     Type
 14043 ;;		None               void
 14044 ;; Registers used:
 14045 ;;		wreg, status,2, status,0
 14046 ;; Tracked objects:
 14047 ;;		On entry : 0/0
 14048 ;;		On exit  : 0/0
 14049 ;;		Unchanged: 0/0
 14050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14051 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14052 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14053 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14054 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14055 ;;Total ram usage:       12 bytes
 14056 ;; Hardware stack levels used: 1
 14057 ;; Hardware stack levels required when called: 13
 14058 ;; This function calls:
 14059 ;;		Nothing
 14060 ;; This function is called by:
 14061 ;;		_efgtoa
 14062 ;; This function uses a non-reentrant model
 14063 ;;
 14064                           
 14065                           	psect	text33
 14066   004684                     __ptext33:
 14067                           	callstack 0
 14068   004684                     ___flge:
 14069                           	callstack 12
 14070   004684  0E00               	movlw	0
 14071   004686  0101               	movlb	1	; () banked
 14072   004688  152D               	andwf	___flge@ff1& (0+255),w,b
 14073   00468A  6F35               	movwf	??___flge& (0+255),b
 14074   00468C  0E00               	movlw	0
 14075   00468E  152E               	andwf	(___flge@ff1+1)& (0+255),w,b
 14076   004690  6F36               	movwf	(??___flge+1)& (0+255),b
 14077   004692  0E80               	movlw	128
 14078   004694  152F               	andwf	(___flge@ff1+2)& (0+255),w,b
 14079   004696  6F37               	movwf	(??___flge+2)& (0+255),b
 14080   004698  0E7F               	movlw	127
 14081   00469A  1530               	andwf	(___flge@ff1+3)& (0+255),w,b
 14082   00469C  6F38               	movwf	(??___flge+3)& (0+255),b
 14083   00469E  5135               	movf	??___flge& (0+255),w,b
 14084   0046A0  1136               	iorwf	(??___flge+1)& (0+255),w,b
 14085   0046A2  1137               	iorwf	(??___flge+2)& (0+255),w,b
 14086   0046A4  1138               	iorwf	(??___flge+3)& (0+255),w,b
 14087   0046A6  A4D8               	btfss	status,2,c
 14088   0046A8  EF58  F023         	goto	u7351
 14089   0046AC  EF5A  F023         	goto	u7350
 14090   0046B0                     u7351:
 14091   0046B0  EF62  F023         	goto	l6900
 14092   0046B4                     u7350:
 14093   0046B4                     
 14094                           ; BSR set to: 1
 14095   0046B4  0E00               	movlw	0
 14096   0046B6  6F2D               	movwf	___flge@ff1& (0+255),b
 14097   0046B8  0E00               	movlw	0
 14098   0046BA  6F2E               	movwf	(___flge@ff1+1)& (0+255),b
 14099   0046BC  0E00               	movlw	0
 14100   0046BE  6F2F               	movwf	(___flge@ff1+2)& (0+255),b
 14101   0046C0  0E00               	movlw	0
 14102   0046C2  6F30               	movwf	(___flge@ff1+3)& (0+255),b
 14103   0046C4                     l6900:
 14104                           
 14105                           ; BSR set to: 1
 14106   0046C4  0E00               	movlw	0
 14107   0046C6  1531               	andwf	___flge@ff2& (0+255),w,b
 14108   0046C8  6F35               	movwf	??___flge& (0+255),b
 14109   0046CA  0E00               	movlw	0
 14110   0046CC  1532               	andwf	(___flge@ff2+1)& (0+255),w,b
 14111   0046CE  6F36               	movwf	(??___flge+1)& (0+255),b
 14112   0046D0  0E80               	movlw	128
 14113   0046D2  1533               	andwf	(___flge@ff2+2)& (0+255),w,b
 14114   0046D4  6F37               	movwf	(??___flge+2)& (0+255),b
 14115   0046D6  0E7F               	movlw	127
 14116   0046D8  1534               	andwf	(___flge@ff2+3)& (0+255),w,b
 14117   0046DA  6F38               	movwf	(??___flge+3)& (0+255),b
 14118   0046DC  5135               	movf	??___flge& (0+255),w,b
 14119   0046DE  1136               	iorwf	(??___flge+1)& (0+255),w,b
 14120   0046E0  1137               	iorwf	(??___flge+2)& (0+255),w,b
 14121   0046E2  1138               	iorwf	(??___flge+3)& (0+255),w,b
 14122   0046E4  A4D8               	btfss	status,2,c
 14123   0046E6  EF77  F023         	goto	u7361
 14124   0046EA  EF79  F023         	goto	u7360
 14125   0046EE                     u7361:
 14126   0046EE  EF81  F023         	goto	l6904
 14127   0046F2                     u7360:
 14128   0046F2                     
 14129                           ; BSR set to: 1
 14130   0046F2  0E00               	movlw	0
 14131   0046F4  6F31               	movwf	___flge@ff2& (0+255),b
 14132   0046F6  0E00               	movlw	0
 14133   0046F8  6F32               	movwf	(___flge@ff2+1)& (0+255),b
 14134   0046FA  0E00               	movlw	0
 14135   0046FC  6F33               	movwf	(___flge@ff2+2)& (0+255),b
 14136   0046FE  0E00               	movlw	0
 14137   004700  6F34               	movwf	(___flge@ff2+3)& (0+255),b
 14138   004702                     l6904:
 14139                           
 14140                           ; BSR set to: 1
 14141   004702  AF30               	btfss	(___flge@ff1+3)& (0+255),7,b
 14142   004704  EF86  F023         	goto	u7371
 14143   004708  EF88  F023         	goto	u7370
 14144   00470C                     u7371:
 14145   00470C  EF91  F023         	goto	l6908
 14146   004710                     u7370:
 14147   004710                     
 14148                           ; BSR set to: 1
 14149   004710  6D2D               	negf	___flge@ff1& (0+255),b
 14150   004712  1F2E               	comf	(___flge@ff1+1)& (0+255),f,b
 14151   004714  B0D8               	btfsc	status,0,c
 14152   004716  2B2E               	incf	(___flge@ff1+1)& (0+255),f,b
 14153   004718  1F2F               	comf	(___flge@ff1+2)& (0+255),f,b
 14154   00471A  B0D8               	btfsc	status,0,c
 14155   00471C  2B2F               	incf	(___flge@ff1+2)& (0+255),f,b
 14156   00471E  0E80               	movlw	128
 14157   004720  5730               	subfwb	(___flge@ff1+3)& (0+255),f,b
 14158   004722                     l6908:
 14159                           
 14160                           ; BSR set to: 1
 14161   004722  AF34               	btfss	(___flge@ff2+3)& (0+255),7,b
 14162   004724  EF96  F023         	goto	u7381
 14163   004728  EF98  F023         	goto	u7380
 14164   00472C                     u7381:
 14165   00472C  EFA1  F023         	goto	l1146
 14166   004730                     u7380:
 14167   004730                     
 14168                           ; BSR set to: 1
 14169   004730  6D31               	negf	___flge@ff2& (0+255),b
 14170   004732  1F32               	comf	(___flge@ff2+1)& (0+255),f,b
 14171   004734  B0D8               	btfsc	status,0,c
 14172   004736  2B32               	incf	(___flge@ff2+1)& (0+255),f,b
 14173   004738  1F33               	comf	(___flge@ff2+2)& (0+255),f,b
 14174   00473A  B0D8               	btfsc	status,0,c
 14175   00473C  2B33               	incf	(___flge@ff2+2)& (0+255),f,b
 14176   00473E  0E80               	movlw	128
 14177   004740  5734               	subfwb	(___flge@ff2+3)& (0+255),f,b
 14178   004742                     l1146:
 14179                           
 14180                           ; BSR set to: 1
 14181   004742  0E00               	movlw	0
 14182   004744  1B2D               	xorwf	___flge@ff1& (0+255),f,b
 14183   004746  0E00               	movlw	0
 14184   004748  1B2E               	xorwf	(___flge@ff1+1)& (0+255),f,b
 14185   00474A  0E00               	movlw	0
 14186   00474C  1B2F               	xorwf	(___flge@ff1+2)& (0+255),f,b
 14187   00474E  0E80               	movlw	128
 14188   004750  1B30               	xorwf	(___flge@ff1+3)& (0+255),f,b
 14189   004752  0E00               	movlw	0
 14190   004754  1B31               	xorwf	___flge@ff2& (0+255),f,b
 14191   004756  0E00               	movlw	0
 14192   004758  1B32               	xorwf	(___flge@ff2+1)& (0+255),f,b
 14193   00475A  0E00               	movlw	0
 14194   00475C  1B33               	xorwf	(___flge@ff2+2)& (0+255),f,b
 14195   00475E  0E80               	movlw	128
 14196   004760  1B34               	xorwf	(___flge@ff2+3)& (0+255),f,b
 14197   004762  5131               	movf	___flge@ff2& (0+255),w,b
 14198   004764  5D2D               	subwf	___flge@ff1& (0+255),w,b
 14199   004766  5132               	movf	(___flge@ff2+1)& (0+255),w,b
 14200   004768  592E               	subwfb	(___flge@ff1+1)& (0+255),w,b
 14201   00476A  5133               	movf	(___flge@ff2+2)& (0+255),w,b
 14202   00476C  592F               	subwfb	(___flge@ff1+2)& (0+255),w,b
 14203   00476E  5134               	movf	(___flge@ff2+3)& (0+255),w,b
 14204   004770  5930               	subwfb	(___flge@ff1+3)& (0+255),w,b
 14205   004772  B0D8               	btfsc	status,0,c
 14206   004774  EFBE  F023         	goto	u7391
 14207   004778  EFC0  F023         	goto	u7390
 14208   00477C                     u7391:
 14209   00477C  EFC3  F023         	goto	l6914
 14210   004780                     u7390:
 14211   004780                     
 14212                           ; BSR set to: 1
 14213   004780  90D8               	bcf	status,0,c
 14214   004782  EFC4  F023         	goto	l1151
 14215   004786                     l6914:
 14216                           
 14217                           ; BSR set to: 1
 14218   004786  80D8               	bsf	status,0,c
 14219   004788                     l1151:
 14220                           
 14221                           ; BSR set to: 1
 14222   004788  0012               	return		;funcret
 14223   00478A                     __end_of___flge:
 14224                           	callstack 0
 14225                           
 14226 ;; *************** function ___fleq *****************
 14227 ;; Defined at:
 14228 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\fleq.c"
 14229 ;; Parameters:    Size  Location     Type
 14230 ;;  ff1             4    6[BANK1 ] unsigned char 
 14231 ;;  ff2             4   10[BANK1 ] unsigned char 
 14232 ;; Auto vars:     Size  Location     Type
 14233 ;;		None
 14234 ;; Return value:  Size  Location     Type
 14235 ;;		None               void
 14236 ;; Registers used:
 14237 ;;		wreg, status,2, status,0
 14238 ;; Tracked objects:
 14239 ;;		On entry : 0/0
 14240 ;;		On exit  : 0/0
 14241 ;;		Unchanged: 0/0
 14242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14243 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14244 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14245 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14246 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14247 ;;Total ram usage:       12 bytes
 14248 ;; Hardware stack levels used: 1
 14249 ;; Hardware stack levels required when called: 13
 14250 ;; This function calls:
 14251 ;;		Nothing
 14252 ;; This function is called by:
 14253 ;;		_efgtoa
 14254 ;; This function uses a non-reentrant model
 14255 ;;
 14256                           
 14257                           	psect	text34
 14258   005532                     __ptext34:
 14259                           	callstack 0
 14260   005532                     ___fleq:
 14261                           	callstack 12
 14262   005532  0E00               	movlw	0
 14263   005534  0101               	movlb	1	; () banked
 14264   005536  1506               	andwf	___fleq@ff1& (0+255),w,b
 14265   005538  6F0E               	movwf	??___fleq& (0+255),b
 14266   00553A  0E00               	movlw	0
 14267   00553C  1507               	andwf	(___fleq@ff1+1)& (0+255),w,b
 14268   00553E  6F0F               	movwf	(??___fleq+1)& (0+255),b
 14269   005540  0E80               	movlw	128
 14270   005542  1508               	andwf	(___fleq@ff1+2)& (0+255),w,b
 14271   005544  6F10               	movwf	(??___fleq+2)& (0+255),b
 14272   005546  0E7F               	movlw	127
 14273   005548  1509               	andwf	(___fleq@ff1+3)& (0+255),w,b
 14274   00554A  6F11               	movwf	(??___fleq+3)& (0+255),b
 14275   00554C  510E               	movf	??___fleq& (0+255),w,b
 14276   00554E  110F               	iorwf	(??___fleq+1)& (0+255),w,b
 14277   005550  1110               	iorwf	(??___fleq+2)& (0+255),w,b
 14278   005552  1111               	iorwf	(??___fleq+3)& (0+255),w,b
 14279   005554  A4D8               	btfss	status,2,c
 14280   005556  EFAF  F02A         	goto	u7321
 14281   00555A  EFB1  F02A         	goto	u7320
 14282   00555E                     u7321:
 14283   00555E  EFB9  F02A         	goto	l6884
 14284   005562                     u7320:
 14285   005562                     
 14286                           ; BSR set to: 1
 14287   005562  0E00               	movlw	0
 14288   005564  6F06               	movwf	___fleq@ff1& (0+255),b
 14289   005566  0E00               	movlw	0
 14290   005568  6F07               	movwf	(___fleq@ff1+1)& (0+255),b
 14291   00556A  0E00               	movlw	0
 14292   00556C  6F08               	movwf	(___fleq@ff1+2)& (0+255),b
 14293   00556E  0E00               	movlw	0
 14294   005570  6F09               	movwf	(___fleq@ff1+3)& (0+255),b
 14295   005572                     l6884:
 14296                           
 14297                           ; BSR set to: 1
 14298   005572  0E00               	movlw	0
 14299   005574  150A               	andwf	___fleq@ff2& (0+255),w,b
 14300   005576  6F0E               	movwf	??___fleq& (0+255),b
 14301   005578  0E00               	movlw	0
 14302   00557A  150B               	andwf	(___fleq@ff2+1)& (0+255),w,b
 14303   00557C  6F0F               	movwf	(??___fleq+1)& (0+255),b
 14304   00557E  0E80               	movlw	128
 14305   005580  150C               	andwf	(___fleq@ff2+2)& (0+255),w,b
 14306   005582  6F10               	movwf	(??___fleq+2)& (0+255),b
 14307   005584  0E7F               	movlw	127
 14308   005586  150D               	andwf	(___fleq@ff2+3)& (0+255),w,b
 14309   005588  6F11               	movwf	(??___fleq+3)& (0+255),b
 14310   00558A  510E               	movf	??___fleq& (0+255),w,b
 14311   00558C  110F               	iorwf	(??___fleq+1)& (0+255),w,b
 14312   00558E  1110               	iorwf	(??___fleq+2)& (0+255),w,b
 14313   005590  1111               	iorwf	(??___fleq+3)& (0+255),w,b
 14314   005592  A4D8               	btfss	status,2,c
 14315   005594  EFCE  F02A         	goto	u7331
 14316   005598  EFD0  F02A         	goto	u7330
 14317   00559C                     u7331:
 14318   00559C  EFD8  F02A         	goto	l6888
 14319   0055A0                     u7330:
 14320   0055A0                     
 14321                           ; BSR set to: 1
 14322   0055A0  0E00               	movlw	0
 14323   0055A2  6F0A               	movwf	___fleq@ff2& (0+255),b
 14324   0055A4  0E00               	movlw	0
 14325   0055A6  6F0B               	movwf	(___fleq@ff2+1)& (0+255),b
 14326   0055A8  0E00               	movlw	0
 14327   0055AA  6F0C               	movwf	(___fleq@ff2+2)& (0+255),b
 14328   0055AC  0E00               	movlw	0
 14329   0055AE  6F0D               	movwf	(___fleq@ff2+3)& (0+255),b
 14330   0055B0                     l6888:
 14331                           
 14332                           ; BSR set to: 1
 14333   0055B0  510A               	movf	___fleq@ff2& (0+255),w,b
 14334   0055B2  1906               	xorwf	___fleq@ff1& (0+255),w,b
 14335   0055B4  E10F               	bnz	u7340
 14336   0055B6  510B               	movf	(___fleq@ff2+1)& (0+255),w,b
 14337   0055B8  1907               	xorwf	(___fleq@ff1+1)& (0+255),w,b
 14338   0055BA  E10C               	bnz	u7340
 14339   0055BC  510C               	movf	(___fleq@ff2+2)& (0+255),w,b
 14340   0055BE  1908               	xorwf	(___fleq@ff1+2)& (0+255),w,b
 14341   0055C0  E109               	bnz	u7340
 14342   0055C2  510D               	movf	(___fleq@ff2+3)& (0+255),w,b
 14343   0055C4  1909               	xorwf	(___fleq@ff1+3)& (0+255),w,b
 14344   0055C6  B4D8               	btfsc	status,2,c
 14345   0055C8  EFE8  F02A         	goto	u7341
 14346   0055CC  EFEA  F02A         	goto	u7340
 14347   0055D0                     u7341:
 14348   0055D0  EFED  F02A         	goto	l6892
 14349   0055D4                     u7340:
 14350   0055D4                     
 14351                           ; BSR set to: 1
 14352   0055D4  90D8               	bcf	status,0,c
 14353   0055D6  EFEE  F02A         	goto	l1140
 14354   0055DA                     l6892:
 14355                           
 14356                           ; BSR set to: 1
 14357   0055DA  80D8               	bsf	status,0,c
 14358   0055DC                     l1140:
 14359                           
 14360                           ; BSR set to: 1
 14361   0055DC  0012               	return		;funcret
 14362   0055DE                     __end_of___fleq:
 14363                           	callstack 0
 14364                           
 14365 ;; *************** function ___awmod *****************
 14366 ;; Defined at:
 14367 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\awmod.c"
 14368 ;; Parameters:    Size  Location     Type
 14369 ;;  dividend        2    6[BANK1 ] int 
 14370 ;;  divisor         2    8[BANK1 ] int 
 14371 ;; Auto vars:     Size  Location     Type
 14372 ;;  sign            1   11[BANK1 ] unsigned char 
 14373 ;;  counter         1   10[BANK1 ] unsigned char 
 14374 ;; Return value:  Size  Location     Type
 14375 ;;                  2    6[BANK1 ] int 
 14376 ;; Registers used:
 14377 ;;		wreg, status,2, status,0
 14378 ;; Tracked objects:
 14379 ;;		On entry : 0/0
 14380 ;;		On exit  : 0/0
 14381 ;;		Unchanged: 0/0
 14382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14383 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14384 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14385 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14386 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14387 ;;Total ram usage:        6 bytes
 14388 ;; Hardware stack levels used: 1
 14389 ;; Hardware stack levels required when called: 13
 14390 ;; This function calls:
 14391 ;;		Nothing
 14392 ;; This function is called by:
 14393 ;;		_efgtoa
 14394 ;; This function uses a non-reentrant model
 14395 ;;
 14396                           
 14397                           	psect	text35
 14398   0053D4                     __ptext35:
 14399                           	callstack 0
 14400   0053D4                     ___awmod:
 14401                           	callstack 12
 14402   0053D4  0101               	movlb	1	; () banked
 14403   0053D6  6B0B               	clrf	___awmod@sign& (0+255),b
 14404   0053D8                     
 14405                           ; BSR set to: 1
 14406   0053D8  BF07               	btfsc	(___awmod@dividend+1)& (0+255),7,b
 14407   0053DA  EFF3  F029         	goto	u7260
 14408   0053DE  EFF1  F029         	goto	u7261
 14409   0053E2                     u7261:
 14410   0053E2  EFF9  F029         	goto	l6852
 14411   0053E6                     u7260:
 14412   0053E6                     
 14413                           ; BSR set to: 1
 14414   0053E6  6D06               	negf	___awmod@dividend& (0+255),b
 14415   0053E8  1F07               	comf	(___awmod@dividend+1)& (0+255),f,b
 14416   0053EA  B0D8               	btfsc	status,0,c
 14417   0053EC  2B07               	incf	(___awmod@dividend+1)& (0+255),f,b
 14418   0053EE                     
 14419                           ; BSR set to: 1
 14420   0053EE  0E01               	movlw	1
 14421   0053F0  6F0B               	movwf	___awmod@sign& (0+255),b
 14422   0053F2                     l6852:
 14423                           
 14424                           ; BSR set to: 1
 14425   0053F2  BF09               	btfsc	(___awmod@divisor+1)& (0+255),7,b
 14426   0053F4  EF00  F02A         	goto	u7270
 14427   0053F8  EFFE  F029         	goto	u7271
 14428   0053FC                     u7271:
 14429   0053FC  EF04  F02A         	goto	l6856
 14430   005400                     u7270:
 14431   005400                     
 14432                           ; BSR set to: 1
 14433   005400  6D08               	negf	___awmod@divisor& (0+255),b
 14434   005402  1F09               	comf	(___awmod@divisor+1)& (0+255),f,b
 14435   005404  B0D8               	btfsc	status,0,c
 14436   005406  2B09               	incf	(___awmod@divisor+1)& (0+255),f,b
 14437   005408                     l6856:
 14438                           
 14439                           ; BSR set to: 1
 14440   005408  5108               	movf	___awmod@divisor& (0+255),w,b
 14441   00540A  1109               	iorwf	(___awmod@divisor+1)& (0+255),w,b
 14442   00540C  B4D8               	btfsc	status,2,c
 14443   00540E  EF0B  F02A         	goto	u7281
 14444   005412  EF0D  F02A         	goto	u7280
 14445   005416                     u7281:
 14446   005416  EF31  F02A         	goto	l6872
 14447   00541A                     u7280:
 14448   00541A                     
 14449                           ; BSR set to: 1
 14450   00541A  0E01               	movlw	1
 14451   00541C  6F0A               	movwf	___awmod@counter& (0+255),b
 14452   00541E  EF15  F02A         	goto	l6862
 14453   005422                     l6860:
 14454                           
 14455                           ; BSR set to: 1
 14456   005422  90D8               	bcf	status,0,c
 14457   005424  3708               	rlcf	___awmod@divisor& (0+255),f,b
 14458   005426  3709               	rlcf	(___awmod@divisor+1)& (0+255),f,b
 14459   005428  2B0A               	incf	___awmod@counter& (0+255),f,b
 14460   00542A                     l6862:
 14461                           
 14462                           ; BSR set to: 1
 14463   00542A  AF09               	btfss	(___awmod@divisor+1)& (0+255),7,b
 14464   00542C  EF1A  F02A         	goto	u7291
 14465   005430  EF1C  F02A         	goto	u7290
 14466   005434                     u7291:
 14467   005434  EF11  F02A         	goto	l6860
 14468   005438                     u7290:
 14469   005438                     l6864:
 14470                           
 14471                           ; BSR set to: 1
 14472   005438  5108               	movf	___awmod@divisor& (0+255),w,b
 14473   00543A  5D06               	subwf	___awmod@dividend& (0+255),w,b
 14474   00543C  5109               	movf	(___awmod@divisor+1)& (0+255),w,b
 14475   00543E  5907               	subwfb	(___awmod@dividend+1)& (0+255),w,b
 14476   005440  A0D8               	btfss	status,0,c
 14477   005442  EF25  F02A         	goto	u7301
 14478   005446  EF27  F02A         	goto	u7300
 14479   00544A                     u7301:
 14480   00544A  EF2B  F02A         	goto	l6868
 14481   00544E                     u7300:
 14482   00544E                     
 14483                           ; BSR set to: 1
 14484   00544E  5108               	movf	___awmod@divisor& (0+255),w,b
 14485   005450  5F06               	subwf	___awmod@dividend& (0+255),f,b
 14486   005452  5109               	movf	(___awmod@divisor+1)& (0+255),w,b
 14487   005454  5B07               	subwfb	(___awmod@dividend+1)& (0+255),f,b
 14488   005456                     l6868:
 14489                           
 14490                           ; BSR set to: 1
 14491   005456  90D8               	bcf	status,0,c
 14492   005458  3309               	rrcf	(___awmod@divisor+1)& (0+255),f,b
 14493   00545A  3308               	rrcf	___awmod@divisor& (0+255),f,b
 14494   00545C                     
 14495                           ; BSR set to: 1
 14496   00545C  2F0A               	decfsz	___awmod@counter& (0+255),f,b
 14497   00545E  EF1C  F02A         	goto	l6864
 14498   005462                     l6872:
 14499                           
 14500                           ; BSR set to: 1
 14501   005462  510B               	movf	___awmod@sign& (0+255),w,b
 14502   005464  B4D8               	btfsc	status,2,c
 14503   005466  EF37  F02A         	goto	u7311
 14504   00546A  EF39  F02A         	goto	u7310
 14505   00546E                     u7311:
 14506   00546E  EF3D  F02A         	goto	l6876
 14507   005472                     u7310:
 14508   005472                     
 14509                           ; BSR set to: 1
 14510   005472  6D06               	negf	___awmod@dividend& (0+255),b
 14511   005474  1F07               	comf	(___awmod@dividend+1)& (0+255),f,b
 14512   005476  B0D8               	btfsc	status,0,c
 14513   005478  2B07               	incf	(___awmod@dividend+1)& (0+255),f,b
 14514   00547A                     l6876:
 14515                           
 14516                           ; BSR set to: 1
 14517   00547A  C106  F106         	movff	___awmod@dividend,?___awmod
 14518   00547E  C107  F107         	movff	___awmod@dividend+1,?___awmod+1
 14519   005482                     
 14520                           ; BSR set to: 1
 14521   005482  0012               	return		;funcret
 14522   005484                     __end_of___awmod:
 14523                           	callstack 0
 14524                           
 14525 ;; *************** function ___awdiv *****************
 14526 ;; Defined at:
 14527 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\awdiv.c"
 14528 ;; Parameters:    Size  Location     Type
 14529 ;;  dividend        2    6[BANK1 ] int 
 14530 ;;  divisor         2    8[BANK1 ] int 
 14531 ;; Auto vars:     Size  Location     Type
 14532 ;;  quotient        2   12[BANK1 ] int 
 14533 ;;  sign            1   11[BANK1 ] unsigned char 
 14534 ;;  counter         1   10[BANK1 ] unsigned char 
 14535 ;; Return value:  Size  Location     Type
 14536 ;;                  2    6[BANK1 ] int 
 14537 ;; Registers used:
 14538 ;;		wreg, status,2, status,0
 14539 ;; Tracked objects:
 14540 ;;		On entry : 0/0
 14541 ;;		On exit  : 0/0
 14542 ;;		Unchanged: 0/0
 14543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14544 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14545 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14546 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14547 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14548 ;;Total ram usage:        8 bytes
 14549 ;; Hardware stack levels used: 1
 14550 ;; Hardware stack levels required when called: 13
 14551 ;; This function calls:
 14552 ;;		Nothing
 14553 ;; This function is called by:
 14554 ;;		_efgtoa
 14555 ;; This function uses a non-reentrant model
 14556 ;;
 14557                           
 14558                           	psect	text36
 14559   0050D2                     __ptext36:
 14560                           	callstack 0
 14561   0050D2                     ___awdiv:
 14562                           	callstack 12
 14563   0050D2  0101               	movlb	1	; () banked
 14564   0050D4  6B0B               	clrf	___awdiv@sign& (0+255),b
 14565   0050D6                     
 14566                           ; BSR set to: 1
 14567   0050D6  BF09               	btfsc	(___awdiv@divisor+1)& (0+255),7,b
 14568   0050D8  EF72  F028         	goto	u7200
 14569   0050DC  EF70  F028         	goto	u7201
 14570   0050E0                     u7201:
 14571   0050E0  EF78  F028         	goto	l6808
 14572   0050E4                     u7200:
 14573   0050E4                     
 14574                           ; BSR set to: 1
 14575   0050E4  6D08               	negf	___awdiv@divisor& (0+255),b
 14576   0050E6  1F09               	comf	(___awdiv@divisor+1)& (0+255),f,b
 14577   0050E8  B0D8               	btfsc	status,0,c
 14578   0050EA  2B09               	incf	(___awdiv@divisor+1)& (0+255),f,b
 14579   0050EC                     
 14580                           ; BSR set to: 1
 14581   0050EC  0E01               	movlw	1
 14582   0050EE  6F0B               	movwf	___awdiv@sign& (0+255),b
 14583   0050F0                     l6808:
 14584                           
 14585                           ; BSR set to: 1
 14586   0050F0  BF07               	btfsc	(___awdiv@dividend+1)& (0+255),7,b
 14587   0050F2  EF7F  F028         	goto	u7210
 14588   0050F6  EF7D  F028         	goto	u7211
 14589   0050FA                     u7211:
 14590   0050FA  EF85  F028         	goto	l6814
 14591   0050FE                     u7210:
 14592   0050FE                     
 14593                           ; BSR set to: 1
 14594   0050FE  6D06               	negf	___awdiv@dividend& (0+255),b
 14595   005100  1F07               	comf	(___awdiv@dividend+1)& (0+255),f,b
 14596   005102  B0D8               	btfsc	status,0,c
 14597   005104  2B07               	incf	(___awdiv@dividend+1)& (0+255),f,b
 14598   005106                     
 14599                           ; BSR set to: 1
 14600   005106  0E01               	movlw	1
 14601   005108  1B0B               	xorwf	___awdiv@sign& (0+255),f,b
 14602   00510A                     l6814:
 14603                           
 14604                           ; BSR set to: 1
 14605   00510A  0E00               	movlw	0
 14606   00510C  6F0D               	movwf	(___awdiv@quotient+1)& (0+255),b
 14607   00510E  0E00               	movlw	0
 14608   005110  6F0C               	movwf	___awdiv@quotient& (0+255),b
 14609   005112                     
 14610                           ; BSR set to: 1
 14611   005112  5108               	movf	___awdiv@divisor& (0+255),w,b
 14612   005114  1109               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 14613   005116  B4D8               	btfsc	status,2,c
 14614   005118  EF90  F028         	goto	u7221
 14615   00511C  EF92  F028         	goto	u7220
 14616   005120                     u7221:
 14617   005120  EFBA  F028         	goto	l6836
 14618   005124                     u7220:
 14619   005124                     
 14620                           ; BSR set to: 1
 14621   005124  0E01               	movlw	1
 14622   005126  6F0A               	movwf	___awdiv@counter& (0+255),b
 14623   005128  EF9A  F028         	goto	l6822
 14624   00512C                     l6820:
 14625                           
 14626                           ; BSR set to: 1
 14627   00512C  90D8               	bcf	status,0,c
 14628   00512E  3708               	rlcf	___awdiv@divisor& (0+255),f,b
 14629   005130  3709               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 14630   005132  2B0A               	incf	___awdiv@counter& (0+255),f,b
 14631   005134                     l6822:
 14632                           
 14633                           ; BSR set to: 1
 14634   005134  AF09               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 14635   005136  EF9F  F028         	goto	u7231
 14636   00513A  EFA1  F028         	goto	u7230
 14637   00513E                     u7231:
 14638   00513E  EF96  F028         	goto	l6820
 14639   005142                     u7230:
 14640   005142                     l6824:
 14641                           
 14642                           ; BSR set to: 1
 14643   005142  90D8               	bcf	status,0,c
 14644   005144  370C               	rlcf	___awdiv@quotient& (0+255),f,b
 14645   005146  370D               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 14646   005148                     
 14647                           ; BSR set to: 1
 14648   005148  5108               	movf	___awdiv@divisor& (0+255),w,b
 14649   00514A  5D06               	subwf	___awdiv@dividend& (0+255),w,b
 14650   00514C  5109               	movf	(___awdiv@divisor+1)& (0+255),w,b
 14651   00514E  5907               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 14652   005150  A0D8               	btfss	status,0,c
 14653   005152  EFAD  F028         	goto	u7241
 14654   005156  EFAF  F028         	goto	u7240
 14655   00515A                     u7241:
 14656   00515A  EFB4  F028         	goto	l6832
 14657   00515E                     u7240:
 14658   00515E                     
 14659                           ; BSR set to: 1
 14660   00515E  5108               	movf	___awdiv@divisor& (0+255),w,b
 14661   005160  5F06               	subwf	___awdiv@dividend& (0+255),f,b
 14662   005162  5109               	movf	(___awdiv@divisor+1)& (0+255),w,b
 14663   005164  5B07               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 14664   005166                     
 14665                           ; BSR set to: 1
 14666   005166  810C               	bsf	___awdiv@quotient& (0+255),0,b
 14667   005168                     l6832:
 14668                           
 14669                           ; BSR set to: 1
 14670   005168  90D8               	bcf	status,0,c
 14671   00516A  3309               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 14672   00516C  3308               	rrcf	___awdiv@divisor& (0+255),f,b
 14673   00516E                     
 14674                           ; BSR set to: 1
 14675   00516E  2F0A               	decfsz	___awdiv@counter& (0+255),f,b
 14676   005170  EFA1  F028         	goto	l6824
 14677   005174                     l6836:
 14678                           
 14679                           ; BSR set to: 1
 14680   005174  510B               	movf	___awdiv@sign& (0+255),w,b
 14681   005176  B4D8               	btfsc	status,2,c
 14682   005178  EFC0  F028         	goto	u7251
 14683   00517C  EFC2  F028         	goto	u7250
 14684   005180                     u7251:
 14685   005180  EFC6  F028         	goto	l6840
 14686   005184                     u7250:
 14687   005184                     
 14688                           ; BSR set to: 1
 14689   005184  6D0C               	negf	___awdiv@quotient& (0+255),b
 14690   005186  1F0D               	comf	(___awdiv@quotient+1)& (0+255),f,b
 14691   005188  B0D8               	btfsc	status,0,c
 14692   00518A  2B0D               	incf	(___awdiv@quotient+1)& (0+255),f,b
 14693   00518C                     l6840:
 14694                           
 14695                           ; BSR set to: 1
 14696   00518C  C10C  F106         	movff	___awdiv@quotient,?___awdiv
 14697   005190  C10D  F107         	movff	___awdiv@quotient+1,?___awdiv+1
 14698   005194                     
 14699                           ; BSR set to: 1
 14700   005194  0012               	return		;funcret
 14701   005196                     __end_of___awdiv:
 14702                           	callstack 0
 14703                           
 14704 ;; *************** function _lire_tension *****************
 14705 ;; Defined at:
 14706 ;;		line 316 in file "main.c"
 14707 ;; Parameters:    Size  Location     Type
 14708 ;;		None
 14709 ;; Auto vars:     Size  Location     Type
 14710 ;;  tension         4   74[BANK1 ] float 
 14711 ;;  adc_val         2   78[BANK1 ] short 
 14712 ;; Return value:  Size  Location     Type
 14713 ;;                  4   70[BANK1 ] float 
 14714 ;; Registers used:
 14715 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 14716 ;; Tracked objects:
 14717 ;;		On entry : 0/0
 14718 ;;		On exit  : 0/0
 14719 ;;		Unchanged: 0/0
 14720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14721 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14722 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14723 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14724 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14725 ;;Total ram usage:       10 bytes
 14726 ;; Hardware stack levels used: 1
 14727 ;; Hardware stack levels required when called: 14
 14728 ;; This function calls:
 14729 ;;		_ADC_ChannelSelect
 14730 ;;		_ADC_ConversionResultGet
 14731 ;;		_ADC_ConversionStart
 14732 ;;		___fldiv
 14733 ;;		___flmul
 14734 ;;		___xxtofl
 14735 ;; This function is called by:
 14736 ;;		_LCD_UpdateMenu
 14737 ;;		_lire_courant
 14738 ;; This function uses a non-reentrant model
 14739 ;;
 14740                           
 14741                           	psect	text37
 14742   005734                     __ptext37:
 14743                           	callstack 0
 14744   005734                     _lire_tension:
 14745                           	callstack 15
 14746   005734                     
 14747                           ;main.c: 318:     ADC_ChannelSelect(ADC_CHANNEL_ANA4);
 14748   005734  0E04               	movlw	4
 14749   005736  EC05  F033         	call	_ADC_ChannelSelect
 14750   00573A                     
 14751                           ;main.c: 319:     ADC_ConversionStart();
 14752   00573A  EC33  F033         	call	_ADC_ConversionStart	;wreg free
 14753   00573E                     
 14754                           ;main.c: 320:     adc_result_t adc_val = ADC_ConversionResultGet();
 14755   00573E  EC6E  F032         	call	_ADC_ConversionResultGet	;wreg free
 14756   005742  C106  F14E         	movff	?_ADC_ConversionResultGet,lire_tension@adc_val
 14757   005746  C107  F14F         	movff	?_ADC_ConversionResultGet+1,lire_tension@adc_val+1
 14758   00574A                     
 14759                           ;main.c: 322:    float tension = (adc_val * 5.f) / 4095.0f;
 14760   00574A  0E00               	movlw	0
 14761   00574C  0101               	movlb	1	; () banked
 14762   00574E  6F18               	movwf	___flmul@a& (0+255),b
 14763   005750  0E00               	movlw	0
 14764   005752  6F19               	movwf	(___flmul@a+1)& (0+255),b
 14765   005754  0EA0               	movlw	160
 14766   005756  6F1A               	movwf	(___flmul@a+2)& (0+255),b
 14767   005758  0E40               	movlw	64
 14768   00575A  6F1B               	movwf	(___flmul@a+3)& (0+255),b
 14769   00575C  C14E  F106         	movff	lire_tension@adc_val,___xxtofl@val
 14770   005760  C14F  F107         	movff	lire_tension@adc_val+1,___xxtofl@val+1
 14771   005764  0E00               	movlw	0
 14772   005766  BF07               	btfsc	(___xxtofl@val+1)& (0+255),7,b
 14773   005768  0EFF               	movlw	-1
 14774   00576A  6F08               	movwf	(___xxtofl@val+2)& (0+255),b
 14775   00576C  6F09               	movwf	(___xxtofl@val+3)& (0+255),b
 14776   00576E  0E01               	movlw	1
 14777   005770  EC6B  F020         	call	___xxtofl
 14778   005774  C106  F114         	movff	?___xxtofl,___flmul@b
 14779   005778  C107  F115         	movff	?___xxtofl+1,___flmul@b+1
 14780   00577C  C108  F116         	movff	?___xxtofl+2,___flmul@b+2
 14781   005780  C109  F117         	movff	?___xxtofl+3,___flmul@b+3
 14782   005784  ECFC  F00F         	call	___flmul	;wreg free
 14783   005788  C114  F12D         	movff	?___flmul,___fldiv@b
 14784   00578C  C115  F12E         	movff	?___flmul+1,___fldiv@b+1
 14785   005790  C116  F12F         	movff	?___flmul+2,___fldiv@b+2
 14786   005794  C117  F130         	movff	?___flmul+3,___fldiv@b+3
 14787   005798  0E00               	movlw	0
 14788   00579A  0101               	movlb	1	; () banked
 14789   00579C  6F31               	movwf	___fldiv@a& (0+255),b
 14790   00579E  0EF0               	movlw	240
 14791   0057A0  6F32               	movwf	(___fldiv@a+1)& (0+255),b
 14792   0057A2  0E7F               	movlw	127
 14793   0057A4  6F33               	movwf	(___fldiv@a+2)& (0+255),b
 14794   0057A6  0E45               	movlw	69
 14795   0057A8  6F34               	movwf	(___fldiv@a+3)& (0+255),b
 14796   0057AA  EC2D  F016         	call	___fldiv	;wreg free
 14797   0057AE  C12D  F14A         	movff	?___fldiv,lire_tension@tension
 14798   0057B2  C12E  F14B         	movff	?___fldiv+1,lire_tension@tension+1
 14799   0057B6  C12F  F14C         	movff	?___fldiv+2,lire_tension@tension+2
 14800   0057BA  C130  F14D         	movff	?___fldiv+3,lire_tension@tension+3
 14801   0057BE                     
 14802                           ;main.c: 323:     return tension;
 14803   0057BE  C14A  F146         	movff	lire_tension@tension,?_lire_tension
 14804   0057C2  C14B  F147         	movff	lire_tension@tension+1,?_lire_tension+1
 14805   0057C6  C14C  F148         	movff	lire_tension@tension+2,?_lire_tension+2
 14806   0057CA  C14D  F149         	movff	lire_tension@tension+3,?_lire_tension+3
 14807   0057CE  0012               	return		;funcret
 14808   0057D0                     __end_of_lire_tension:
 14809                           	callstack 0
 14810                           
 14811 ;; *************** function ___xxtofl *****************
 14812 ;; Defined at:
 14813 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\xxtofl.c"
 14814 ;; Parameters:    Size  Location     Type
 14815 ;;  sign            1    wreg     unsigned char 
 14816 ;;  val             4    6[BANK1 ] long 
 14817 ;; Auto vars:     Size  Location     Type
 14818 ;;  sign            1   14[BANK1 ] unsigned char 
 14819 ;;  arg             4   16[BANK1 ] unsigned long 
 14820 ;;  exp             1   15[BANK1 ] unsigned char 
 14821 ;; Return value:  Size  Location     Type
 14822 ;;                  4    6[BANK1 ] unsigned char 
 14823 ;; Registers used:
 14824 ;;		wreg, status,2, status,0
 14825 ;; Tracked objects:
 14826 ;;		On entry : 0/0
 14827 ;;		On exit  : 0/0
 14828 ;;		Unchanged: 0/0
 14829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14830 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14831 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14832 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14833 ;;      Totals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14834 ;;Total ram usage:       14 bytes
 14835 ;; Hardware stack levels used: 1
 14836 ;; Hardware stack levels required when called: 13
 14837 ;; This function calls:
 14838 ;;		Nothing
 14839 ;; This function is called by:
 14840 ;;		_lire_tension
 14841 ;;		_lire_courant
 14842 ;; This function uses a non-reentrant model
 14843 ;;
 14844                           
 14845                           	psect	text38
 14846   0040D6                     __ptext38:
 14847                           	callstack 0
 14848   0040D6                     ___xxtofl:
 14849                           	callstack 15
 14850                           
 14851                           ;incstack = 0
 14852                           ;___xxtofl@sign stored from wreg
 14853   0040D6  0101               	movlb	1	; () banked
 14854   0040D8  6F0E               	movwf	___xxtofl@sign& (0+255),b
 14855   0040DA  0101               	movlb	1	; () banked
 14856   0040DC  510E               	movf	___xxtofl@sign& (0+255),w,b
 14857   0040DE  B4D8               	btfsc	status,2,c
 14858   0040E0  EF74  F020         	goto	u8481
 14859   0040E4  EF76  F020         	goto	u8480
 14860   0040E8                     u8481:
 14861   0040E8  EF98  F020         	goto	l1536
 14862   0040EC                     u8480:
 14863   0040EC                     
 14864                           ; BSR set to: 1
 14865   0040EC  BF09               	btfsc	(___xxtofl@val+3)& (0+255),7,b
 14866   0040EE  EF7D  F020         	goto	u8490
 14867   0040F2  EF7B  F020         	goto	u8491
 14868   0040F6                     u8491:
 14869   0040F6  EF98  F020         	goto	l1536
 14870   0040FA                     u8490:
 14871   0040FA                     
 14872                           ; BSR set to: 1
 14873   0040FA  C106  F10A         	movff	___xxtofl@val,??___xxtofl
 14874   0040FE  C107  F10B         	movff	___xxtofl@val+1,??___xxtofl+1
 14875   004102  C108  F10C         	movff	___xxtofl@val+2,??___xxtofl+2
 14876   004106  C109  F10D         	movff	___xxtofl@val+3,??___xxtofl+3
 14877   00410A  1F0A               	comf	??___xxtofl& (0+255),f,b
 14878   00410C  1F0B               	comf	(??___xxtofl+1)& (0+255),f,b
 14879   00410E  1F0C               	comf	(??___xxtofl+2)& (0+255),f,b
 14880   004110  1F0D               	comf	(??___xxtofl+3)& (0+255),f,b
 14881   004112  2B0A               	incf	??___xxtofl& (0+255),f,b
 14882   004114  0E00               	movlw	0
 14883   004116  230B               	addwfc	(??___xxtofl+1)& (0+255),f,b
 14884   004118  230C               	addwfc	(??___xxtofl+2)& (0+255),f,b
 14885   00411A  230D               	addwfc	(??___xxtofl+3)& (0+255),f,b
 14886   00411C  C10A  F110         	movff	??___xxtofl,___xxtofl@arg
 14887   004120  C10B  F111         	movff	??___xxtofl+1,___xxtofl@arg+1
 14888   004124  C10C  F112         	movff	??___xxtofl+2,___xxtofl@arg+2
 14889   004128  C10D  F113         	movff	??___xxtofl+3,___xxtofl@arg+3
 14890   00412C  EFA0  F020         	goto	l7814
 14891   004130                     l1536:
 14892                           
 14893                           ; BSR set to: 1
 14894   004130  C106  F110         	movff	___xxtofl@val,___xxtofl@arg
 14895   004134  C107  F111         	movff	___xxtofl@val+1,___xxtofl@arg+1
 14896   004138  C108  F112         	movff	___xxtofl@val+2,___xxtofl@arg+2
 14897   00413C  C109  F113         	movff	___xxtofl@val+3,___xxtofl@arg+3
 14898   004140                     l7814:
 14899                           
 14900                           ; BSR set to: 1
 14901   004140  5106               	movf	___xxtofl@val& (0+255),w,b
 14902   004142  1107               	iorwf	(___xxtofl@val+1)& (0+255),w,b
 14903   004144  1108               	iorwf	(___xxtofl@val+2)& (0+255),w,b
 14904   004146  1109               	iorwf	(___xxtofl@val+3)& (0+255),w,b
 14905   004148  A4D8               	btfss	status,2,c
 14906   00414A  EFA9  F020         	goto	u8501
 14907   00414E  EFAB  F020         	goto	u8500
 14908   004152                     u8501:
 14909   004152  EFB5  F020         	goto	l7820
 14910   004156                     u8500:
 14911   004156                     
 14912                           ; BSR set to: 1
 14913   004156  0E00               	movlw	0
 14914   004158  6F06               	movwf	?___xxtofl& (0+255),b
 14915   00415A  0E00               	movlw	0
 14916   00415C  6F07               	movwf	(?___xxtofl+1)& (0+255),b
 14917   00415E  0E00               	movlw	0
 14918   004160  6F08               	movwf	(?___xxtofl+2)& (0+255),b
 14919   004162  0E00               	movlw	0
 14920   004164  6F09               	movwf	(?___xxtofl+3)& (0+255),b
 14921   004166  EF46  F021         	goto	l1539
 14922   00416A                     l7820:
 14923                           
 14924                           ; BSR set to: 1
 14925   00416A  0E96               	movlw	150
 14926   00416C  6F0F               	movwf	___xxtofl@exp& (0+255),b
 14927   00416E  EFBF  F020         	goto	l7824
 14928   004172                     l7822:
 14929                           
 14930                           ; BSR set to: 1
 14931   004172  2B0F               	incf	___xxtofl@exp& (0+255),f,b
 14932   004174  90D8               	bcf	status,0,c
 14933   004176  3313               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 14934   004178  3312               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 14935   00417A  3311               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 14936   00417C  3310               	rrcf	___xxtofl@arg& (0+255),f,b
 14937   00417E                     l7824:
 14938                           
 14939                           ; BSR set to: 1
 14940   00417E  0E00               	movlw	0
 14941   004180  1510               	andwf	___xxtofl@arg& (0+255),w,b
 14942   004182  6F0A               	movwf	??___xxtofl& (0+255),b
 14943   004184  0E00               	movlw	0
 14944   004186  1511               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 14945   004188  6F0B               	movwf	(??___xxtofl+1)& (0+255),b
 14946   00418A  0E00               	movlw	0
 14947   00418C  1512               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 14948   00418E  6F0C               	movwf	(??___xxtofl+2)& (0+255),b
 14949   004190  0EFE               	movlw	254
 14950   004192  1513               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 14951   004194  6F0D               	movwf	(??___xxtofl+3)& (0+255),b
 14952   004196  510A               	movf	??___xxtofl& (0+255),w,b
 14953   004198  110B               	iorwf	(??___xxtofl+1)& (0+255),w,b
 14954   00419A  110C               	iorwf	(??___xxtofl+2)& (0+255),w,b
 14955   00419C  110D               	iorwf	(??___xxtofl+3)& (0+255),w,b
 14956   00419E  A4D8               	btfss	status,2,c
 14957   0041A0  EFD4  F020         	goto	u8511
 14958   0041A4  EFD6  F020         	goto	u8510
 14959   0041A8                     u8511:
 14960   0041A8  EFB9  F020         	goto	l7822
 14961   0041AC                     u8510:
 14962   0041AC  EFE4  F020         	goto	l1543
 14963   0041B0                     l7826:
 14964                           
 14965                           ; BSR set to: 1
 14966   0041B0  2B0F               	incf	___xxtofl@exp& (0+255),f,b
 14967   0041B2                     
 14968                           ; BSR set to: 1
 14969   0041B2  0E01               	movlw	1
 14970   0041B4  2710               	addwf	___xxtofl@arg& (0+255),f,b
 14971   0041B6  0E00               	movlw	0
 14972   0041B8  2311               	addwfc	(___xxtofl@arg+1)& (0+255),f,b
 14973   0041BA  2312               	addwfc	(___xxtofl@arg+2)& (0+255),f,b
 14974   0041BC  2313               	addwfc	(___xxtofl@arg+3)& (0+255),f,b
 14975   0041BE                     
 14976                           ; BSR set to: 1
 14977   0041BE  90D8               	bcf	status,0,c
 14978   0041C0  3313               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 14979   0041C2  3312               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 14980   0041C4  3311               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 14981   0041C6  3310               	rrcf	___xxtofl@arg& (0+255),f,b
 14982   0041C8                     l1543:
 14983                           
 14984                           ; BSR set to: 1
 14985   0041C8  0E00               	movlw	0
 14986   0041CA  1510               	andwf	___xxtofl@arg& (0+255),w,b
 14987   0041CC  6F0A               	movwf	??___xxtofl& (0+255),b
 14988   0041CE  0E00               	movlw	0
 14989   0041D0  1511               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 14990   0041D2  6F0B               	movwf	(??___xxtofl+1)& (0+255),b
 14991   0041D4  0E00               	movlw	0
 14992   0041D6  1512               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 14993   0041D8  6F0C               	movwf	(??___xxtofl+2)& (0+255),b
 14994   0041DA  0EFF               	movlw	255
 14995   0041DC  1513               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 14996   0041DE  6F0D               	movwf	(??___xxtofl+3)& (0+255),b
 14997   0041E0  510A               	movf	??___xxtofl& (0+255),w,b
 14998   0041E2  110B               	iorwf	(??___xxtofl+1)& (0+255),w,b
 14999   0041E4  110C               	iorwf	(??___xxtofl+2)& (0+255),w,b
 15000   0041E6  110D               	iorwf	(??___xxtofl+3)& (0+255),w,b
 15001   0041E8  A4D8               	btfss	status,2,c
 15002   0041EA  EFF9  F020         	goto	u8521
 15003   0041EE  EFFB  F020         	goto	u8520
 15004   0041F2                     u8521:
 15005   0041F2  EFD8  F020         	goto	l7826
 15006   0041F6                     u8520:
 15007   0041F6  EF03  F021         	goto	l7834
 15008   0041FA                     l7832:
 15009                           
 15010                           ; BSR set to: 1
 15011   0041FA  070F               	decf	___xxtofl@exp& (0+255),f,b
 15012   0041FC  90D8               	bcf	status,0,c
 15013   0041FE  3710               	rlcf	___xxtofl@arg& (0+255),f,b
 15014   004200  3711               	rlcf	(___xxtofl@arg+1)& (0+255),f,b
 15015   004202  3712               	rlcf	(___xxtofl@arg+2)& (0+255),f,b
 15016   004204  3713               	rlcf	(___xxtofl@arg+3)& (0+255),f,b
 15017   004206                     l7834:
 15018                           
 15019                           ; BSR set to: 1
 15020   004206  BF12               	btfsc	(___xxtofl@arg+2)& (0+255),7,b
 15021   004208  EF08  F021         	goto	u8531
 15022   00420C  EF0A  F021         	goto	u8530
 15023   004210                     u8531:
 15024   004210  EF12  F021         	goto	l1550
 15025   004214                     u8530:
 15026   004214                     
 15027                           ; BSR set to: 1
 15028   004214  0E02               	movlw	2
 15029   004216  610F               	cpfslt	___xxtofl@exp& (0+255),b
 15030   004218  EF10  F021         	goto	u8541
 15031   00421C  EF12  F021         	goto	u8540
 15032   004220                     u8541:
 15033   004220  EFFD  F020         	goto	l7832
 15034   004224                     u8540:
 15035   004224                     l1550:
 15036                           
 15037                           ; BSR set to: 1
 15038   004224  B10F               	btfsc	___xxtofl@exp& (0+255),0,b
 15039   004226  EF17  F021         	goto	u8551
 15040   00422A  EF19  F021         	goto	u8550
 15041   00422E                     u8551:
 15042   00422E  EF1A  F021         	goto	l7840
 15043   004232                     u8550:
 15044   004232                     
 15045                           ; BSR set to: 1
 15046   004232  9F12               	bcf	(___xxtofl@arg+2)& (0+255),7,b
 15047   004234                     l7840:
 15048                           
 15049                           ; BSR set to: 1
 15050   004234  90D8               	bcf	status,0,c
 15051   004236  330F               	rrcf	___xxtofl@exp& (0+255),f,b
 15052   004238                     
 15053                           ; BSR set to: 1
 15054   004238  C10F  F10A         	movff	___xxtofl@exp,??___xxtofl
 15055   00423C  6B0B               	clrf	(??___xxtofl+1)& (0+255),b
 15056   00423E  6B0C               	clrf	(??___xxtofl+2)& (0+255),b
 15057   004240  6B0D               	clrf	(??___xxtofl+3)& (0+255),b
 15058   004242  C10A  F10D         	movff	??___xxtofl,??___xxtofl+3
 15059   004246  6B0C               	clrf	(??___xxtofl+2)& (0+255),b
 15060   004248  6B0B               	clrf	(??___xxtofl+1)& (0+255),b
 15061   00424A  6B0A               	clrf	??___xxtofl& (0+255),b
 15062   00424C  510A               	movf	??___xxtofl& (0+255),w,b
 15063   00424E  1310               	iorwf	___xxtofl@arg& (0+255),f,b
 15064   004250  510B               	movf	(??___xxtofl+1)& (0+255),w,b
 15065   004252  1311               	iorwf	(___xxtofl@arg+1)& (0+255),f,b
 15066   004254  510C               	movf	(??___xxtofl+2)& (0+255),w,b
 15067   004256  1312               	iorwf	(___xxtofl@arg+2)& (0+255),f,b
 15068   004258  510D               	movf	(??___xxtofl+3)& (0+255),w,b
 15069   00425A  1313               	iorwf	(___xxtofl@arg+3)& (0+255),f,b
 15070   00425C                     
 15071                           ; BSR set to: 1
 15072   00425C  510E               	movf	___xxtofl@sign& (0+255),w,b
 15073   00425E  B4D8               	btfsc	status,2,c
 15074   004260  EF34  F021         	goto	u8561
 15075   004264  EF36  F021         	goto	u8560
 15076   004268                     u8561:
 15077   004268  EF3E  F021         	goto	l7850
 15078   00426C                     u8560:
 15079   00426C                     
 15080                           ; BSR set to: 1
 15081   00426C  BF09               	btfsc	(___xxtofl@val+3)& (0+255),7,b
 15082   00426E  EF3D  F021         	goto	u8570
 15083   004272  EF3B  F021         	goto	u8571
 15084   004276                     u8571:
 15085   004276  EF3E  F021         	goto	l7850
 15086   00427A                     u8570:
 15087   00427A                     
 15088                           ; BSR set to: 1
 15089   00427A  8F13               	bsf	(___xxtofl@arg+3)& (0+255),7,b
 15090   00427C                     l7850:
 15091                           
 15092                           ; BSR set to: 1
 15093   00427C  C110  F106         	movff	___xxtofl@arg,?___xxtofl
 15094   004280  C111  F107         	movff	___xxtofl@arg+1,?___xxtofl+1
 15095   004284  C112  F108         	movff	___xxtofl@arg+2,?___xxtofl+2
 15096   004288  C113  F109         	movff	___xxtofl@arg+3,?___xxtofl+3
 15097   00428C                     l1539:
 15098                           
 15099                           ; BSR set to: 1
 15100   00428C  0012               	return		;funcret
 15101   00428E                     __end_of___xxtofl:
 15102                           	callstack 0
 15103                           
 15104 ;; *************** function ___flmul *****************
 15105 ;; Defined at:
 15106 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\sprcmul.c"
 15107 ;; Parameters:    Size  Location     Type
 15108 ;;  b               4   20[BANK1 ] unsigned char 
 15109 ;;  a               4   24[BANK1 ] unsigned char 
 15110 ;; Auto vars:     Size  Location     Type
 15111 ;;  prod            4   39[BANK1 ] struct .
 15112 ;;  grs             4   33[BANK1 ] unsigned long 
 15113 ;;  temp            2   43[BANK1 ] struct .
 15114 ;;  bexp            1   38[BANK1 ] unsigned char 
 15115 ;;  aexp            1   37[BANK1 ] unsigned char 
 15116 ;;  sign            1   32[BANK1 ] unsigned char 
 15117 ;; Return value:  Size  Location     Type
 15118 ;;                  4   20[BANK1 ] unsigned char 
 15119 ;; Registers used:
 15120 ;;		wreg, status,2, status,0, prodl, prodh
 15121 ;; Tracked objects:
 15122 ;;		On entry : 0/0
 15123 ;;		On exit  : 0/0
 15124 ;;		Unchanged: 0/0
 15125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15126 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15127 ;;      Locals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15128 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15129 ;;      Totals:         0       0      25       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15130 ;;Total ram usage:       25 bytes
 15131 ;; Hardware stack levels used: 1
 15132 ;; Hardware stack levels required when called: 13
 15133 ;; This function calls:
 15134 ;;		Nothing
 15135 ;; This function is called by:
 15136 ;;		_lire_tension
 15137 ;;		_efgtoa
 15138 ;; This function uses a non-reentrant model
 15139 ;;
 15140                           
 15141                           	psect	text39
 15142   001FF8                     __ptext39:
 15143                           	callstack 0
 15144   001FF8                     ___flmul:
 15145                           	callstack 12
 15146   001FF8  0101               	movlb	1	; () banked
 15147   001FFA  5117               	movf	(___flmul@b+3)& (0+255),w,b
 15148   001FFC  0B80               	andlw	128
 15149   001FFE  6F20               	movwf	___flmul@sign& (0+255),b
 15150   002000  5117               	movf	(___flmul@b+3)& (0+255),w,b
 15151   002002  2517               	addwf	(___flmul@b+3)& (0+255),w,b
 15152   002004  6F26               	movwf	___flmul@bexp& (0+255),b
 15153   002006                     
 15154                           ; BSR set to: 1
 15155   002006  AF16               	btfss	(___flmul@b+2)& (0+255),7,b
 15156   002008  EF08  F010         	goto	u7011
 15157   00200C  EF0A  F010         	goto	u7010
 15158   002010                     u7011:
 15159   002010  EF0B  F010         	goto	l6672
 15160   002014                     u7010:
 15161   002014                     
 15162                           ; BSR set to: 1
 15163   002014  8126               	bsf	___flmul@bexp& (0+255),0,b
 15164   002016                     l6672:
 15165                           
 15166                           ; BSR set to: 1
 15167   002016  5126               	movf	___flmul@bexp& (0+255),w,b
 15168   002018  B4D8               	btfsc	status,2,c
 15169   00201A  EF11  F010         	goto	u7021
 15170   00201E  EF13  F010         	goto	u7020
 15171   002022                     u7021:
 15172   002022  EF26  F010         	goto	l6680
 15173   002026                     u7020:
 15174   002026                     
 15175                           ; BSR set to: 1
 15176   002026  2926               	incf	___flmul@bexp& (0+255),w,b
 15177   002028  A4D8               	btfss	status,2,c
 15178   00202A  EF19  F010         	goto	u7031
 15179   00202E  EF1B  F010         	goto	u7030
 15180   002032                     u7031:
 15181   002032  EF23  F010         	goto	l6678
 15182   002036                     u7030:
 15183   002036                     
 15184                           ; BSR set to: 1
 15185   002036  0E00               	movlw	0
 15186   002038  6F14               	movwf	___flmul@b& (0+255),b
 15187   00203A  0E00               	movlw	0
 15188   00203C  6F15               	movwf	(___flmul@b+1)& (0+255),b
 15189   00203E  0E00               	movlw	0
 15190   002040  6F16               	movwf	(___flmul@b+2)& (0+255),b
 15191   002042  0E00               	movlw	0
 15192   002044  6F17               	movwf	(___flmul@b+3)& (0+255),b
 15193   002046                     l6678:
 15194                           
 15195                           ; BSR set to: 1
 15196   002046  8F16               	bsf	(___flmul@b+2)& (0+255),7,b
 15197   002048  EF2E  F010         	goto	l6682
 15198   00204C                     l6680:
 15199                           
 15200                           ; BSR set to: 1
 15201   00204C  0E00               	movlw	0
 15202   00204E  6F14               	movwf	___flmul@b& (0+255),b
 15203   002050  0E00               	movlw	0
 15204   002052  6F15               	movwf	(___flmul@b+1)& (0+255),b
 15205   002054  0E00               	movlw	0
 15206   002056  6F16               	movwf	(___flmul@b+2)& (0+255),b
 15207   002058  0E00               	movlw	0
 15208   00205A  6F17               	movwf	(___flmul@b+3)& (0+255),b
 15209   00205C                     l6682:
 15210                           
 15211                           ; BSR set to: 1
 15212   00205C  511B               	movf	(___flmul@a+3)& (0+255),w,b
 15213   00205E  0B80               	andlw	128
 15214   002060  1B20               	xorwf	___flmul@sign& (0+255),f,b
 15215   002062                     
 15216                           ; BSR set to: 1
 15217   002062  511B               	movf	(___flmul@a+3)& (0+255),w,b
 15218   002064  251B               	addwf	(___flmul@a+3)& (0+255),w,b
 15219   002066  6F25               	movwf	___flmul@aexp& (0+255),b
 15220   002068                     
 15221                           ; BSR set to: 1
 15222   002068  AF1A               	btfss	(___flmul@a+2)& (0+255),7,b
 15223   00206A  EF39  F010         	goto	u7041
 15224   00206E  EF3B  F010         	goto	u7040
 15225   002072                     u7041:
 15226   002072  EF3C  F010         	goto	l6690
 15227   002076                     u7040:
 15228   002076                     
 15229                           ; BSR set to: 1
 15230   002076  8125               	bsf	___flmul@aexp& (0+255),0,b
 15231   002078                     l6690:
 15232                           
 15233                           ; BSR set to: 1
 15234   002078  5125               	movf	___flmul@aexp& (0+255),w,b
 15235   00207A  B4D8               	btfsc	status,2,c
 15236   00207C  EF42  F010         	goto	u7051
 15237   002080  EF44  F010         	goto	u7050
 15238   002084                     u7051:
 15239   002084  EF57  F010         	goto	l6698
 15240   002088                     u7050:
 15241   002088                     
 15242                           ; BSR set to: 1
 15243   002088  2925               	incf	___flmul@aexp& (0+255),w,b
 15244   00208A  A4D8               	btfss	status,2,c
 15245   00208C  EF4A  F010         	goto	u7061
 15246   002090  EF4C  F010         	goto	u7060
 15247   002094                     u7061:
 15248   002094  EF54  F010         	goto	l6696
 15249   002098                     u7060:
 15250   002098                     
 15251                           ; BSR set to: 1
 15252   002098  0E00               	movlw	0
 15253   00209A  6F18               	movwf	___flmul@a& (0+255),b
 15254   00209C  0E00               	movlw	0
 15255   00209E  6F19               	movwf	(___flmul@a+1)& (0+255),b
 15256   0020A0  0E00               	movlw	0
 15257   0020A2  6F1A               	movwf	(___flmul@a+2)& (0+255),b
 15258   0020A4  0E00               	movlw	0
 15259   0020A6  6F1B               	movwf	(___flmul@a+3)& (0+255),b
 15260   0020A8                     l6696:
 15261                           
 15262                           ; BSR set to: 1
 15263   0020A8  8F1A               	bsf	(___flmul@a+2)& (0+255),7,b
 15264   0020AA  EF5F  F010         	goto	l1495
 15265   0020AE                     l6698:
 15266                           
 15267                           ; BSR set to: 1
 15268   0020AE  0E00               	movlw	0
 15269   0020B0  6F18               	movwf	___flmul@a& (0+255),b
 15270   0020B2  0E00               	movlw	0
 15271   0020B4  6F19               	movwf	(___flmul@a+1)& (0+255),b
 15272   0020B6  0E00               	movlw	0
 15273   0020B8  6F1A               	movwf	(___flmul@a+2)& (0+255),b
 15274   0020BA  0E00               	movlw	0
 15275   0020BC  6F1B               	movwf	(___flmul@a+3)& (0+255),b
 15276   0020BE                     l1495:
 15277                           
 15278                           ; BSR set to: 1
 15279   0020BE  5125               	movf	___flmul@aexp& (0+255),w,b
 15280   0020C0  B4D8               	btfsc	status,2,c
 15281   0020C2  EF65  F010         	goto	u7071
 15282   0020C6  EF67  F010         	goto	u7070
 15283   0020CA                     u7071:
 15284   0020CA  EF6F  F010         	goto	l6702
 15285   0020CE                     u7070:
 15286   0020CE                     
 15287                           ; BSR set to: 1
 15288   0020CE  5126               	movf	___flmul@bexp& (0+255),w,b
 15289   0020D0  A4D8               	btfss	status,2,c
 15290   0020D2  EF6D  F010         	goto	u7081
 15291   0020D6  EF6F  F010         	goto	u7080
 15292   0020DA                     u7081:
 15293   0020DA  EF79  F010         	goto	l6706
 15294   0020DE                     u7080:
 15295   0020DE                     l6702:
 15296                           
 15297                           ; BSR set to: 1
 15298   0020DE  0E00               	movlw	0
 15299   0020E0  6F14               	movwf	?___flmul& (0+255),b
 15300   0020E2  0E00               	movlw	0
 15301   0020E4  6F15               	movwf	(?___flmul+1)& (0+255),b
 15302   0020E6  0E00               	movlw	0
 15303   0020E8  6F16               	movwf	(?___flmul+2)& (0+255),b
 15304   0020EA  0E00               	movlw	0
 15305   0020EC  6F17               	movwf	(?___flmul+3)& (0+255),b
 15306   0020EE  EF21  F012         	goto	l1499
 15307   0020F2                     l6706:
 15308                           
 15309                           ; BSR set to: 1
 15310   0020F2  511A               	movf	(___flmul@a+2)& (0+255),w,b
 15311   0020F4  0314               	mulwf	___flmul@b& (0+255),b
 15312   0020F6  006F FFCC  F12B    	movff	prodl,___flmul@temp
 15313   0020FC  006F FFD0  F12C    	movff	prodh,___flmul@temp+1
 15314   002102                     
 15315                           ; BSR set to: 1
 15316   002102  512B               	movf	___flmul@temp& (0+255),w,b
 15317   002104  6F21               	movwf	___flmul@grs& (0+255),b
 15318   002106  6B22               	clrf	(___flmul@grs+1)& (0+255),b
 15319   002108  6B23               	clrf	(___flmul@grs+2)& (0+255),b
 15320   00210A  6B24               	clrf	(___flmul@grs+3)& (0+255),b
 15321   00210C                     
 15322                           ; BSR set to: 1
 15323   00210C  512C               	movf	(___flmul@temp+1)& (0+255),w,b
 15324   00210E  6F27               	movwf	___flmul@prod& (0+255),b
 15325   002110  6B28               	clrf	(___flmul@prod+1)& (0+255),b
 15326   002112  6B29               	clrf	(___flmul@prod+2)& (0+255),b
 15327   002114  6B2A               	clrf	(___flmul@prod+3)& (0+255),b
 15328   002116  5119               	movf	(___flmul@a+1)& (0+255),w,b
 15329   002118  0315               	mulwf	(___flmul@b+1)& (0+255),b
 15330   00211A  006F FFCC  F12B    	movff	prodl,___flmul@temp
 15331   002120  006F FFD0  F12C    	movff	prodh,___flmul@temp+1
 15332   002126                     
 15333                           ; BSR set to: 1
 15334   002126  512B               	movf	___flmul@temp& (0+255),w,b
 15335   002128  2721               	addwf	___flmul@grs& (0+255),f,b
 15336   00212A  0E00               	movlw	0
 15337   00212C  2322               	addwfc	(___flmul@grs+1)& (0+255),f,b
 15338   00212E  2323               	addwfc	(___flmul@grs+2)& (0+255),f,b
 15339   002130  2324               	addwfc	(___flmul@grs+3)& (0+255),f,b
 15340   002132                     
 15341                           ; BSR set to: 1
 15342   002132  512C               	movf	(___flmul@temp+1)& (0+255),w,b
 15343   002134  2727               	addwf	___flmul@prod& (0+255),f,b
 15344   002136  0E00               	movlw	0
 15345   002138  2328               	addwfc	(___flmul@prod+1)& (0+255),f,b
 15346   00213A  2329               	addwfc	(___flmul@prod+2)& (0+255),f,b
 15347   00213C  232A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 15348   00213E  5118               	movf	___flmul@a& (0+255),w,b
 15349   002140  0316               	mulwf	(___flmul@b+2)& (0+255),b
 15350   002142  006F FFCC  F12B    	movff	prodl,___flmul@temp
 15351   002148  006F FFD0  F12C    	movff	prodh,___flmul@temp+1
 15352   00214E                     
 15353                           ; BSR set to: 1
 15354   00214E  512B               	movf	___flmul@temp& (0+255),w,b
 15355   002150  2721               	addwf	___flmul@grs& (0+255),f,b
 15356   002152  0E00               	movlw	0
 15357   002154  2322               	addwfc	(___flmul@grs+1)& (0+255),f,b
 15358   002156  2323               	addwfc	(___flmul@grs+2)& (0+255),f,b
 15359   002158  2324               	addwfc	(___flmul@grs+3)& (0+255),f,b
 15360   00215A                     
 15361                           ; BSR set to: 1
 15362   00215A  512C               	movf	(___flmul@temp+1)& (0+255),w,b
 15363   00215C  2727               	addwf	___flmul@prod& (0+255),f,b
 15364   00215E  0E00               	movlw	0
 15365   002160  2328               	addwfc	(___flmul@prod+1)& (0+255),f,b
 15366   002162  2329               	addwfc	(___flmul@prod+2)& (0+255),f,b
 15367   002164  232A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 15368   002166                     
 15369                           ; BSR set to: 1
 15370   002166  C123  F124         	movff	___flmul@grs+2,___flmul@grs+3
 15371   00216A  C122  F123         	movff	___flmul@grs+1,___flmul@grs+2
 15372   00216E  C121  F122         	movff	___flmul@grs,___flmul@grs+1
 15373   002172  6B21               	clrf	___flmul@grs& (0+255),b
 15374   002174                     
 15375                           ; BSR set to: 1
 15376   002174  5118               	movf	___flmul@a& (0+255),w,b
 15377   002176  0315               	mulwf	(___flmul@b+1)& (0+255),b
 15378   002178  006F FFCC  F12B    	movff	prodl,___flmul@temp
 15379   00217E  006F FFD0  F12C    	movff	prodh,___flmul@temp+1
 15380   002184                     
 15381                           ; BSR set to: 1
 15382   002184  512B               	movf	___flmul@temp& (0+255),w,b
 15383   002186  2721               	addwf	___flmul@grs& (0+255),f,b
 15384   002188  512C               	movf	(___flmul@temp+1)& (0+255),w,b
 15385   00218A  2322               	addwfc	(___flmul@grs+1)& (0+255),f,b
 15386   00218C  0E00               	movlw	0
 15387   00218E  2323               	addwfc	(___flmul@grs+2)& (0+255),f,b
 15388   002190  0E00               	movlw	0
 15389   002192  2324               	addwfc	(___flmul@grs+3)& (0+255),f,b
 15390   002194                     
 15391                           ; BSR set to: 1
 15392   002194  5119               	movf	(___flmul@a+1)& (0+255),w,b
 15393   002196  0314               	mulwf	___flmul@b& (0+255),b
 15394   002198  006F FFCC  F12B    	movff	prodl,___flmul@temp
 15395   00219E  006F FFD0  F12C    	movff	prodh,___flmul@temp+1
 15396   0021A4                     
 15397                           ; BSR set to: 1
 15398   0021A4  512B               	movf	___flmul@temp& (0+255),w,b
 15399   0021A6  2721               	addwf	___flmul@grs& (0+255),f,b
 15400   0021A8  512C               	movf	(___flmul@temp+1)& (0+255),w,b
 15401   0021AA  2322               	addwfc	(___flmul@grs+1)& (0+255),f,b
 15402   0021AC  0E00               	movlw	0
 15403   0021AE  2323               	addwfc	(___flmul@grs+2)& (0+255),f,b
 15404   0021B0  0E00               	movlw	0
 15405   0021B2  2324               	addwfc	(___flmul@grs+3)& (0+255),f,b
 15406   0021B4                     
 15407                           ; BSR set to: 1
 15408   0021B4  C123  F124         	movff	___flmul@grs+2,___flmul@grs+3
 15409   0021B8  C122  F123         	movff	___flmul@grs+1,___flmul@grs+2
 15410   0021BC  C121  F122         	movff	___flmul@grs,___flmul@grs+1
 15411   0021C0  6B21               	clrf	___flmul@grs& (0+255),b
 15412   0021C2  5118               	movf	___flmul@a& (0+255),w,b
 15413   0021C4  0314               	mulwf	___flmul@b& (0+255),b
 15414   0021C6  006F FFCC  F12B    	movff	prodl,___flmul@temp
 15415   0021CC  006F FFD0  F12C    	movff	prodh,___flmul@temp+1
 15416   0021D2                     
 15417                           ; BSR set to: 1
 15418   0021D2  512B               	movf	___flmul@temp& (0+255),w,b
 15419   0021D4  2721               	addwf	___flmul@grs& (0+255),f,b
 15420   0021D6  512C               	movf	(___flmul@temp+1)& (0+255),w,b
 15421   0021D8  2322               	addwfc	(___flmul@grs+1)& (0+255),f,b
 15422   0021DA  0E00               	movlw	0
 15423   0021DC  2323               	addwfc	(___flmul@grs+2)& (0+255),f,b
 15424   0021DE  0E00               	movlw	0
 15425   0021E0  2324               	addwfc	(___flmul@grs+3)& (0+255),f,b
 15426   0021E2                     
 15427                           ; BSR set to: 1
 15428   0021E2  511A               	movf	(___flmul@a+2)& (0+255),w,b
 15429   0021E4  0315               	mulwf	(___flmul@b+1)& (0+255),b
 15430   0021E6  006F FFCC  F12B    	movff	prodl,___flmul@temp
 15431   0021EC  006F FFD0  F12C    	movff	prodh,___flmul@temp+1
 15432   0021F2  512B               	movf	___flmul@temp& (0+255),w,b
 15433   0021F4  2727               	addwf	___flmul@prod& (0+255),f,b
 15434   0021F6  512C               	movf	(___flmul@temp+1)& (0+255),w,b
 15435   0021F8  2328               	addwfc	(___flmul@prod+1)& (0+255),f,b
 15436   0021FA  0E00               	movlw	0
 15437   0021FC  2329               	addwfc	(___flmul@prod+2)& (0+255),f,b
 15438   0021FE  0E00               	movlw	0
 15439   002200  232A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 15440   002202                     
 15441                           ; BSR set to: 1
 15442   002202  5119               	movf	(___flmul@a+1)& (0+255),w,b
 15443   002204  0316               	mulwf	(___flmul@b+2)& (0+255),b
 15444   002206  006F FFCC  F12B    	movff	prodl,___flmul@temp
 15445   00220C  006F FFD0  F12C    	movff	prodh,___flmul@temp+1
 15446   002212                     
 15447                           ; BSR set to: 1
 15448   002212  512B               	movf	___flmul@temp& (0+255),w,b
 15449   002214  2727               	addwf	___flmul@prod& (0+255),f,b
 15450   002216  512C               	movf	(___flmul@temp+1)& (0+255),w,b
 15451   002218  2328               	addwfc	(___flmul@prod+1)& (0+255),f,b
 15452   00221A  0E00               	movlw	0
 15453   00221C  2329               	addwfc	(___flmul@prod+2)& (0+255),f,b
 15454   00221E  0E00               	movlw	0
 15455   002220  232A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 15456   002222  511A               	movf	(___flmul@a+2)& (0+255),w,b
 15457   002224  0316               	mulwf	(___flmul@b+2)& (0+255),b
 15458   002226  006F FFCC  F12B    	movff	prodl,___flmul@temp
 15459   00222C  006F FFD0  F12C    	movff	prodh,___flmul@temp+1
 15460   002232                     
 15461                           ; BSR set to: 1
 15462   002232  512B               	movf	___flmul@temp& (0+255),w,b
 15463   002234  6F1C               	movwf	??___flmul& (0+255),b
 15464   002236  512C               	movf	(___flmul@temp+1)& (0+255),w,b
 15465   002238  6F1D               	movwf	(??___flmul+1)& (0+255),b
 15466   00223A  6B1E               	clrf	(??___flmul+2)& (0+255),b
 15467   00223C  6B1F               	clrf	(??___flmul+3)& (0+255),b
 15468   00223E  C11E  F11F         	movff	??___flmul+2,??___flmul+3
 15469   002242  C11D  F11E         	movff	??___flmul+1,??___flmul+2
 15470   002246  C11C  F11D         	movff	??___flmul,??___flmul+1
 15471   00224A  6B1C               	clrf	??___flmul& (0+255),b
 15472   00224C  511C               	movf	??___flmul& (0+255),w,b
 15473   00224E  2727               	addwf	___flmul@prod& (0+255),f,b
 15474   002250  511D               	movf	(??___flmul+1)& (0+255),w,b
 15475   002252  2328               	addwfc	(___flmul@prod+1)& (0+255),f,b
 15476   002254  511E               	movf	(??___flmul+2)& (0+255),w,b
 15477   002256  2329               	addwfc	(___flmul@prod+2)& (0+255),f,b
 15478   002258  511F               	movf	(??___flmul+3)& (0+255),w,b
 15479   00225A  232A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 15480   00225C                     
 15481                           ; BSR set to: 1
 15482   00225C  C121  F11C         	movff	___flmul@grs,??___flmul
 15483   002260  C122  F11D         	movff	___flmul@grs+1,??___flmul+1
 15484   002264  C123  F11E         	movff	___flmul@grs+2,??___flmul+2
 15485   002268  C124  F11F         	movff	___flmul@grs+3,??___flmul+3
 15486   00226C  0E19               	movlw	25
 15487   00226E  EF3E  F011         	goto	u7090
 15488   002272                     u7095:
 15489   002272  90D8               	bcf	status,0,c
 15490   002274  331F               	rrcf	(??___flmul+3)& (0+255),f,b
 15491   002276  331E               	rrcf	(??___flmul+2)& (0+255),f,b
 15492   002278  331D               	rrcf	(??___flmul+1)& (0+255),f,b
 15493   00227A  331C               	rrcf	??___flmul& (0+255),f,b
 15494   00227C                     u7090:
 15495   00227C  2EE8               	decfsz	wreg,f,c
 15496   00227E  EF39  F011         	goto	u7095
 15497   002282  511C               	movf	??___flmul& (0+255),w,b
 15498   002284  2727               	addwf	___flmul@prod& (0+255),f,b
 15499   002286  511D               	movf	(??___flmul+1)& (0+255),w,b
 15500   002288  2328               	addwfc	(___flmul@prod+1)& (0+255),f,b
 15501   00228A  511E               	movf	(??___flmul+2)& (0+255),w,b
 15502   00228C  2329               	addwfc	(___flmul@prod+2)& (0+255),f,b
 15503   00228E  511F               	movf	(??___flmul+3)& (0+255),w,b
 15504   002290  232A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 15505   002292                     
 15506                           ; BSR set to: 1
 15507   002292  C123  F124         	movff	___flmul@grs+2,___flmul@grs+3
 15508   002296  C122  F123         	movff	___flmul@grs+1,___flmul@grs+2
 15509   00229A  C121  F122         	movff	___flmul@grs,___flmul@grs+1
 15510   00229E  6B21               	clrf	___flmul@grs& (0+255),b
 15511   0022A0                     
 15512                           ; BSR set to: 1
 15513   0022A0  5125               	movf	___flmul@aexp& (0+255),w,b
 15514   0022A2  C126  F11C         	movff	___flmul@bexp,??___flmul
 15515   0022A6  6B1D               	clrf	(??___flmul+1)& (0+255),b
 15516   0022A8  271C               	addwf	??___flmul& (0+255),f,b
 15517   0022AA  0E00               	movlw	0
 15518   0022AC  231D               	addwfc	(??___flmul+1)& (0+255),f,b
 15519   0022AE  0E82               	movlw	130
 15520   0022B0  251C               	addwf	??___flmul& (0+255),w,b
 15521   0022B2  6F2B               	movwf	___flmul@temp& (0+255),b
 15522   0022B4  0EFF               	movlw	255
 15523   0022B6  211D               	addwfc	(??___flmul+1)& (0+255),w,b
 15524   0022B8  6F2C               	movwf	(___flmul@temp+1)& (0+255),b
 15525   0022BA  EF74  F011         	goto	l6754
 15526   0022BE                     l6748:
 15527                           
 15528                           ; BSR set to: 1
 15529   0022BE  90D8               	bcf	status,0,c
 15530   0022C0  3727               	rlcf	___flmul@prod& (0+255),f,b
 15531   0022C2  3728               	rlcf	(___flmul@prod+1)& (0+255),f,b
 15532   0022C4  3729               	rlcf	(___flmul@prod+2)& (0+255),f,b
 15533   0022C6  372A               	rlcf	(___flmul@prod+3)& (0+255),f,b
 15534   0022C8                     
 15535                           ; BSR set to: 1
 15536   0022C8  AF24               	btfss	(___flmul@grs+3)& (0+255),7,b
 15537   0022CA  EF69  F011         	goto	u7101
 15538   0022CE  EF6B  F011         	goto	u7100
 15539   0022D2                     u7101:
 15540   0022D2  EF6C  F011         	goto	l1502
 15541   0022D6                     u7100:
 15542   0022D6                     
 15543                           ; BSR set to: 1
 15544   0022D6  8127               	bsf	___flmul@prod& (0+255),0,b
 15545   0022D8                     l1502:
 15546                           
 15547                           ; BSR set to: 1
 15548   0022D8  90D8               	bcf	status,0,c
 15549   0022DA  3721               	rlcf	___flmul@grs& (0+255),f,b
 15550   0022DC  3722               	rlcf	(___flmul@grs+1)& (0+255),f,b
 15551   0022DE  3723               	rlcf	(___flmul@grs+2)& (0+255),f,b
 15552   0022E0  3724               	rlcf	(___flmul@grs+3)& (0+255),f,b
 15553   0022E2  072B               	decf	___flmul@temp& (0+255),f,b
 15554   0022E4  A0D8               	btfss	status,0,c
 15555   0022E6  072C               	decf	(___flmul@temp+1)& (0+255),f,b
 15556   0022E8                     l6754:
 15557                           
 15558                           ; BSR set to: 1
 15559   0022E8  AF29               	btfss	(___flmul@prod+2)& (0+255),7,b
 15560   0022EA  EF79  F011         	goto	u7111
 15561   0022EE  EF7B  F011         	goto	u7110
 15562   0022F2                     u7111:
 15563   0022F2  EF5F  F011         	goto	l6748
 15564   0022F6                     u7110:
 15565   0022F6                     
 15566                           ; BSR set to: 1
 15567   0022F6  6B25               	clrf	___flmul@aexp& (0+255),b
 15568   0022F8  AF24               	btfss	(___flmul@grs+3)& (0+255),7,b
 15569   0022FA  EF81  F011         	goto	u7121
 15570   0022FE  EF83  F011         	goto	u7120
 15571   002302                     u7121:
 15572   002302  EFA7  F011         	goto	l1504
 15573   002306                     u7120:
 15574   002306                     
 15575                           ; BSR set to: 1
 15576   002306  0EFF               	movlw	255
 15577   002308  1521               	andwf	___flmul@grs& (0+255),w,b
 15578   00230A  6F1C               	movwf	??___flmul& (0+255),b
 15579   00230C  0EFF               	movlw	255
 15580   00230E  1522               	andwf	(___flmul@grs+1)& (0+255),w,b
 15581   002310  6F1D               	movwf	(??___flmul+1)& (0+255),b
 15582   002312  0EFF               	movlw	255
 15583   002314  1523               	andwf	(___flmul@grs+2)& (0+255),w,b
 15584   002316  6F1E               	movwf	(??___flmul+2)& (0+255),b
 15585   002318  0E7F               	movlw	127
 15586   00231A  1524               	andwf	(___flmul@grs+3)& (0+255),w,b
 15587   00231C  6F1F               	movwf	(??___flmul+3)& (0+255),b
 15588   00231E  511C               	movf	??___flmul& (0+255),w,b
 15589   002320  111D               	iorwf	(??___flmul+1)& (0+255),w,b
 15590   002322  111E               	iorwf	(??___flmul+2)& (0+255),w,b
 15591   002324  111F               	iorwf	(??___flmul+3)& (0+255),w,b
 15592   002326  B4D8               	btfsc	status,2,c
 15593   002328  EF98  F011         	goto	u7131
 15594   00232C  EF9A  F011         	goto	u7130
 15595   002330                     u7131:
 15596   002330  EF9E  F011         	goto	l1505
 15597   002334                     u7130:
 15598   002334                     l6758:
 15599                           
 15600                           ; BSR set to: 1
 15601   002334  0E01               	movlw	1
 15602   002336  6F25               	movwf	___flmul@aexp& (0+255),b
 15603   002338  EFA7  F011         	goto	l1504
 15604   00233C                     l1505:
 15605                           
 15606                           ; BSR set to: 1
 15607   00233C  A127               	btfss	___flmul@prod& (0+255),0,b
 15608   00233E  EFA3  F011         	goto	u7141
 15609   002342  EFA5  F011         	goto	u7140
 15610   002346                     u7141:
 15611   002346  EFA7  F011         	goto	l1504
 15612   00234A                     u7140:
 15613   00234A  EF9A  F011         	goto	l6758
 15614   00234E                     l1504:
 15615                           
 15616                           ; BSR set to: 1
 15617   00234E  5125               	movf	___flmul@aexp& (0+255),w,b
 15618   002350  B4D8               	btfsc	status,2,c
 15619   002352  EFAD  F011         	goto	u7151
 15620   002356  EFAF  F011         	goto	u7150
 15621   00235A                     u7151:
 15622   00235A  EFD3  F011         	goto	l6770
 15623   00235E                     u7150:
 15624   00235E                     
 15625                           ; BSR set to: 1
 15626   00235E  0E01               	movlw	1
 15627   002360  2727               	addwf	___flmul@prod& (0+255),f,b
 15628   002362  0E00               	movlw	0
 15629   002364  2328               	addwfc	(___flmul@prod+1)& (0+255),f,b
 15630   002366  2329               	addwfc	(___flmul@prod+2)& (0+255),f,b
 15631   002368  232A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 15632   00236A                     
 15633                           ; BSR set to: 1
 15634   00236A  A12A               	btfss	(___flmul@prod+3)& (0+255),0,b
 15635   00236C  EFBA  F011         	goto	u7161
 15636   002370  EFBC  F011         	goto	u7160
 15637   002374                     u7161:
 15638   002374  EFD3  F011         	goto	l6770
 15639   002378                     u7160:
 15640   002378                     
 15641                           ; BSR set to: 1
 15642   002378  C127  F11C         	movff	___flmul@prod,??___flmul
 15643   00237C  C128  F11D         	movff	___flmul@prod+1,??___flmul+1
 15644   002380  C129  F11E         	movff	___flmul@prod+2,??___flmul+2
 15645   002384  C12A  F11F         	movff	___flmul@prod+3,??___flmul+3
 15646   002388  351F               	rlcf	(??___flmul+3)& (0+255),w,b
 15647   00238A  331F               	rrcf	(??___flmul+3)& (0+255),f,b
 15648   00238C  331E               	rrcf	(??___flmul+2)& (0+255),f,b
 15649   00238E  331D               	rrcf	(??___flmul+1)& (0+255),f,b
 15650   002390  331C               	rrcf	??___flmul& (0+255),f,b
 15651   002392  C11C  F127         	movff	??___flmul,___flmul@prod
 15652   002396  C11D  F128         	movff	??___flmul+1,___flmul@prod+1
 15653   00239A  C11E  F129         	movff	??___flmul+2,___flmul@prod+2
 15654   00239E  C11F  F12A         	movff	??___flmul+3,___flmul@prod+3
 15655   0023A2                     
 15656                           ; BSR set to: 1
 15657   0023A2  4B2B               	infsnz	___flmul@temp& (0+255),f,b
 15658   0023A4  2B2C               	incf	(___flmul@temp+1)& (0+255),f,b
 15659   0023A6                     l6770:
 15660                           
 15661                           ; BSR set to: 1
 15662   0023A6  BF2C               	btfsc	(___flmul@temp+1)& (0+255),7,b
 15663   0023A8  EFDE  F011         	goto	u7171
 15664   0023AC  512C               	movf	(___flmul@temp+1)& (0+255),w,b
 15665   0023AE  E108               	bnz	u7170
 15666   0023B0  292B               	incf	___flmul@temp& (0+255),w,b
 15667   0023B2  A0D8               	btfss	status,0,c
 15668   0023B4  EFDE  F011         	goto	u7171
 15669   0023B8  EFE0  F011         	goto	u7170
 15670   0023BC                     u7171:
 15671   0023BC  EFEA  F011         	goto	l6774
 15672   0023C0                     u7170:
 15673   0023C0                     
 15674                           ; BSR set to: 1
 15675   0023C0  0E00               	movlw	0
 15676   0023C2  6F27               	movwf	___flmul@prod& (0+255),b
 15677   0023C4  0E00               	movlw	0
 15678   0023C6  6F28               	movwf	(___flmul@prod+1)& (0+255),b
 15679   0023C8  0E80               	movlw	128
 15680   0023CA  6F29               	movwf	(___flmul@prod+2)& (0+255),b
 15681   0023CC  0E7F               	movlw	127
 15682   0023CE  6F2A               	movwf	(___flmul@prod+3)& (0+255),b
 15683   0023D0  EF17  F012         	goto	l6788
 15684   0023D4                     l6774:
 15685                           
 15686                           ; BSR set to: 1
 15687   0023D4  BF2C               	btfsc	(___flmul@temp+1)& (0+255),7,b
 15688   0023D6  EFF7  F011         	goto	u7180
 15689   0023DA  512C               	movf	(___flmul@temp+1)& (0+255),w,b
 15690   0023DC  E106               	bnz	u7181
 15691   0023DE  052B               	decf	___flmul@temp& (0+255),w,b
 15692   0023E0  B0D8               	btfsc	status,0,c
 15693   0023E2  EFF5  F011         	goto	u7181
 15694   0023E6  EFF7  F011         	goto	u7180
 15695   0023EA                     u7181:
 15696   0023EA  EF02  F012         	goto	l1512
 15697   0023EE                     u7180:
 15698   0023EE                     
 15699                           ; BSR set to: 1
 15700   0023EE  0E00               	movlw	0
 15701   0023F0  6F27               	movwf	___flmul@prod& (0+255),b
 15702   0023F2  0E00               	movlw	0
 15703   0023F4  6F28               	movwf	(___flmul@prod+1)& (0+255),b
 15704   0023F6  0E00               	movlw	0
 15705   0023F8  6F29               	movwf	(___flmul@prod+2)& (0+255),b
 15706   0023FA  0E00               	movlw	0
 15707   0023FC  6F2A               	movwf	(___flmul@prod+3)& (0+255),b
 15708   0023FE                     
 15709                           ; BSR set to: 1
 15710   0023FE  6B20               	clrf	___flmul@sign& (0+255),b
 15711   002400  EF17  F012         	goto	l6788
 15712   002404                     l1512:
 15713                           
 15714                           ; BSR set to: 1
 15715   002404  C12B  F126         	movff	___flmul@temp,___flmul@bexp
 15716   002408                     
 15717                           ; BSR set to: 1
 15718   002408  0EFF               	movlw	255
 15719   00240A  1727               	andwf	___flmul@prod& (0+255),f,b
 15720   00240C  0EFF               	movlw	255
 15721   00240E  1728               	andwf	(___flmul@prod+1)& (0+255),f,b
 15722   002410  0E7F               	movlw	127
 15723   002412  1729               	andwf	(___flmul@prod+2)& (0+255),f,b
 15724   002414  0E00               	movlw	0
 15725   002416  172A               	andwf	(___flmul@prod+3)& (0+255),f,b
 15726   002418                     
 15727                           ; BSR set to: 1
 15728   002418  A126               	btfss	___flmul@bexp& (0+255),0,b
 15729   00241A  EF11  F012         	goto	u7191
 15730   00241E  EF13  F012         	goto	u7190
 15731   002422                     u7191:
 15732   002422  EF14  F012         	goto	l6786
 15733   002426                     u7190:
 15734   002426                     
 15735                           ; BSR set to: 1
 15736   002426  8F29               	bsf	(___flmul@prod+2)& (0+255),7,b
 15737   002428                     l6786:
 15738                           
 15739                           ; BSR set to: 1
 15740   002428  90D8               	bcf	status,0,c
 15741   00242A  3126               	rrcf	___flmul@bexp& (0+255),w,b
 15742   00242C  6F2A               	movwf	(___flmul@prod+3)& (0+255),b
 15743   00242E                     l6788:
 15744                           
 15745                           ; BSR set to: 1
 15746   00242E  5120               	movf	___flmul@sign& (0+255),w,b
 15747   002430  132A               	iorwf	(___flmul@prod+3)& (0+255),f,b
 15748   002432                     
 15749                           ; BSR set to: 1
 15750   002432  C127  F114         	movff	___flmul@prod,?___flmul
 15751   002436  C128  F115         	movff	___flmul@prod+1,?___flmul+1
 15752   00243A  C129  F116         	movff	___flmul@prod+2,?___flmul+2
 15753   00243E  C12A  F117         	movff	___flmul@prod+3,?___flmul+3
 15754   002442                     l1499:
 15755                           
 15756                           ; BSR set to: 1
 15757   002442  0012               	return		;funcret
 15758   002444                     __end_of___flmul:
 15759                           	callstack 0
 15760                           
 15761 ;; *************** function ___fldiv *****************
 15762 ;; Defined at:
 15763 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\sprcdiv.c"
 15764 ;; Parameters:    Size  Location     Type
 15765 ;;  b               4   45[BANK1 ] unsigned char 
 15766 ;;  a               4   49[BANK1 ] unsigned char 
 15767 ;; Auto vars:     Size  Location     Type
 15768 ;;  grs             4   64[BANK1 ] unsigned long 
 15769 ;;  rem             4   57[BANK1 ] unsigned long 
 15770 ;;  new_exp         2   62[BANK1 ] short 
 15771 ;;  aexp            1   69[BANK1 ] unsigned char 
 15772 ;;  bexp            1   68[BANK1 ] unsigned char 
 15773 ;;  sign            1   61[BANK1 ] unsigned char 
 15774 ;; Return value:  Size  Location     Type
 15775 ;;                  4   45[BANK1 ] unsigned char 
 15776 ;; Registers used:
 15777 ;;		wreg, status,2, status,0
 15778 ;; Tracked objects:
 15779 ;;		On entry : 0/0
 15780 ;;		On exit  : 0/0
 15781 ;;		Unchanged: 0/0
 15782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15783 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15784 ;;      Locals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15785 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15786 ;;      Totals:         0       0      25       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15787 ;;Total ram usage:       25 bytes
 15788 ;; Hardware stack levels used: 1
 15789 ;; Hardware stack levels required when called: 13
 15790 ;; This function calls:
 15791 ;;		Nothing
 15792 ;; This function is called by:
 15793 ;;		_lire_tension
 15794 ;;		_efgtoa
 15795 ;; This function uses a non-reentrant model
 15796 ;;
 15797                           
 15798                           	psect	text40
 15799   002C5A                     __ptext40:
 15800                           	callstack 0
 15801   002C5A                     ___fldiv:
 15802                           	callstack 12
 15803   002C5A  0101               	movlb	1	; () banked
 15804   002C5C  5130               	movf	(___fldiv@b+3)& (0+255),w,b
 15805   002C5E  0B80               	andlw	128
 15806   002C60  6F3D               	movwf	___fldiv@sign& (0+255),b
 15807   002C62  5130               	movf	(___fldiv@b+3)& (0+255),w,b
 15808   002C64  2530               	addwf	(___fldiv@b+3)& (0+255),w,b
 15809   002C66  6F44               	movwf	___fldiv@bexp& (0+255),b
 15810   002C68                     
 15811                           ; BSR set to: 1
 15812   002C68  AF2F               	btfss	(___fldiv@b+2)& (0+255),7,b
 15813   002C6A  EF39  F016         	goto	u6781
 15814   002C6E  EF3B  F016         	goto	u6780
 15815   002C72                     u6781:
 15816   002C72  EF3C  F016         	goto	l6536
 15817   002C76                     u6780:
 15818   002C76                     
 15819                           ; BSR set to: 1
 15820   002C76  8144               	bsf	___fldiv@bexp& (0+255),0,b
 15821   002C78                     l6536:
 15822                           
 15823                           ; BSR set to: 1
 15824   002C78  5144               	movf	___fldiv@bexp& (0+255),w,b
 15825   002C7A  B4D8               	btfsc	status,2,c
 15826   002C7C  EF42  F016         	goto	u6791
 15827   002C80  EF44  F016         	goto	u6790
 15828   002C84                     u6791:
 15829   002C84  EF58  F016         	goto	l6546
 15830   002C88                     u6790:
 15831   002C88                     
 15832                           ; BSR set to: 1
 15833   002C88  2944               	incf	___fldiv@bexp& (0+255),w,b
 15834   002C8A  A4D8               	btfss	status,2,c
 15835   002C8C  EF4A  F016         	goto	u6801
 15836   002C90  EF4C  F016         	goto	u6800
 15837   002C94                     u6801:
 15838   002C94  EF54  F016         	goto	l6542
 15839   002C98                     u6800:
 15840   002C98                     
 15841                           ; BSR set to: 1
 15842   002C98  0E00               	movlw	0
 15843   002C9A  6F2D               	movwf	___fldiv@b& (0+255),b
 15844   002C9C  0E00               	movlw	0
 15845   002C9E  6F2E               	movwf	(___fldiv@b+1)& (0+255),b
 15846   002CA0  0E00               	movlw	0
 15847   002CA2  6F2F               	movwf	(___fldiv@b+2)& (0+255),b
 15848   002CA4  0E00               	movlw	0
 15849   002CA6  6F30               	movwf	(___fldiv@b+3)& (0+255),b
 15850   002CA8                     l6542:
 15851                           
 15852                           ; BSR set to: 1
 15853   002CA8  8F2F               	bsf	(___fldiv@b+2)& (0+255),7,b
 15854   002CAA                     
 15855                           ; BSR set to: 1
 15856   002CAA  6B30               	clrf	(___fldiv@b+3)& (0+255),b
 15857   002CAC  EF60  F016         	goto	l6548
 15858   002CB0                     l6546:
 15859                           
 15860                           ; BSR set to: 1
 15861   002CB0  0E00               	movlw	0
 15862   002CB2  6F2D               	movwf	___fldiv@b& (0+255),b
 15863   002CB4  0E00               	movlw	0
 15864   002CB6  6F2E               	movwf	(___fldiv@b+1)& (0+255),b
 15865   002CB8  0E00               	movlw	0
 15866   002CBA  6F2F               	movwf	(___fldiv@b+2)& (0+255),b
 15867   002CBC  0E00               	movlw	0
 15868   002CBE  6F30               	movwf	(___fldiv@b+3)& (0+255),b
 15869   002CC0                     l6548:
 15870                           
 15871                           ; BSR set to: 1
 15872   002CC0  5134               	movf	(___fldiv@a+3)& (0+255),w,b
 15873   002CC2  0B80               	andlw	128
 15874   002CC4  1B3D               	xorwf	___fldiv@sign& (0+255),f,b
 15875   002CC6                     
 15876                           ; BSR set to: 1
 15877   002CC6  5134               	movf	(___fldiv@a+3)& (0+255),w,b
 15878   002CC8  2534               	addwf	(___fldiv@a+3)& (0+255),w,b
 15879   002CCA  6F45               	movwf	___fldiv@aexp& (0+255),b
 15880   002CCC                     
 15881                           ; BSR set to: 1
 15882   002CCC  AF33               	btfss	(___fldiv@a+2)& (0+255),7,b
 15883   002CCE  EF6B  F016         	goto	u6811
 15884   002CD2  EF6D  F016         	goto	u6810
 15885   002CD6                     u6811:
 15886   002CD6  EF6E  F016         	goto	l6556
 15887   002CDA                     u6810:
 15888   002CDA                     
 15889                           ; BSR set to: 1
 15890   002CDA  8145               	bsf	___fldiv@aexp& (0+255),0,b
 15891   002CDC                     l6556:
 15892                           
 15893                           ; BSR set to: 1
 15894   002CDC  5145               	movf	___fldiv@aexp& (0+255),w,b
 15895   002CDE  B4D8               	btfsc	status,2,c
 15896   002CE0  EF74  F016         	goto	u6821
 15897   002CE4  EF76  F016         	goto	u6820
 15898   002CE8                     u6821:
 15899   002CE8  EF8A  F016         	goto	l6566
 15900   002CEC                     u6820:
 15901   002CEC                     
 15902                           ; BSR set to: 1
 15903   002CEC  2945               	incf	___fldiv@aexp& (0+255),w,b
 15904   002CEE  A4D8               	btfss	status,2,c
 15905   002CF0  EF7C  F016         	goto	u6831
 15906   002CF4  EF7E  F016         	goto	u6830
 15907   002CF8                     u6831:
 15908   002CF8  EF86  F016         	goto	l6562
 15909   002CFC                     u6830:
 15910   002CFC                     
 15911                           ; BSR set to: 1
 15912   002CFC  0E00               	movlw	0
 15913   002CFE  6F31               	movwf	___fldiv@a& (0+255),b
 15914   002D00  0E00               	movlw	0
 15915   002D02  6F32               	movwf	(___fldiv@a+1)& (0+255),b
 15916   002D04  0E00               	movlw	0
 15917   002D06  6F33               	movwf	(___fldiv@a+2)& (0+255),b
 15918   002D08  0E00               	movlw	0
 15919   002D0A  6F34               	movwf	(___fldiv@a+3)& (0+255),b
 15920   002D0C                     l6562:
 15921                           
 15922                           ; BSR set to: 1
 15923   002D0C  8F33               	bsf	(___fldiv@a+2)& (0+255),7,b
 15924   002D0E                     
 15925                           ; BSR set to: 1
 15926   002D0E  6B34               	clrf	(___fldiv@a+3)& (0+255),b
 15927   002D10  EF92  F016         	goto	l6568
 15928   002D14                     l6566:
 15929                           
 15930                           ; BSR set to: 1
 15931   002D14  0E00               	movlw	0
 15932   002D16  6F31               	movwf	___fldiv@a& (0+255),b
 15933   002D18  0E00               	movlw	0
 15934   002D1A  6F32               	movwf	(___fldiv@a+1)& (0+255),b
 15935   002D1C  0E00               	movlw	0
 15936   002D1E  6F33               	movwf	(___fldiv@a+2)& (0+255),b
 15937   002D20  0E00               	movlw	0
 15938   002D22  6F34               	movwf	(___fldiv@a+3)& (0+255),b
 15939   002D24                     l6568:
 15940                           
 15941                           ; BSR set to: 1
 15942   002D24  5131               	movf	___fldiv@a& (0+255),w,b
 15943   002D26  1132               	iorwf	(___fldiv@a+1)& (0+255),w,b
 15944   002D28  1133               	iorwf	(___fldiv@a+2)& (0+255),w,b
 15945   002D2A  1134               	iorwf	(___fldiv@a+3)& (0+255),w,b
 15946   002D2C  A4D8               	btfss	status,2,c
 15947   002D2E  EF9B  F016         	goto	u6841
 15948   002D32  EF9D  F016         	goto	u6840
 15949   002D36                     u6841:
 15950   002D36  EFB5  F016         	goto	l6580
 15951   002D3A                     u6840:
 15952   002D3A                     
 15953                           ; BSR set to: 1
 15954   002D3A  0E00               	movlw	0
 15955   002D3C  6F2D               	movwf	___fldiv@b& (0+255),b
 15956   002D3E  0E00               	movlw	0
 15957   002D40  6F2E               	movwf	(___fldiv@b+1)& (0+255),b
 15958   002D42  0E00               	movlw	0
 15959   002D44  6F2F               	movwf	(___fldiv@b+2)& (0+255),b
 15960   002D46  0E00               	movlw	0
 15961   002D48  6F30               	movwf	(___fldiv@b+3)& (0+255),b
 15962   002D4A                     
 15963                           ; BSR set to: 1
 15964   002D4A  0E80               	movlw	128
 15965   002D4C  132F               	iorwf	(___fldiv@b+2)& (0+255),f,b
 15966   002D4E  0E7F               	movlw	127
 15967   002D50  1330               	iorwf	(___fldiv@b+3)& (0+255),f,b
 15968   002D52                     l6574:
 15969                           
 15970                           ; BSR set to: 1
 15971   002D52  513D               	movf	___fldiv@sign& (0+255),w,b
 15972   002D54  1330               	iorwf	(___fldiv@b+3)& (0+255),f,b
 15973   002D56                     
 15974                           ; BSR set to: 1
 15975   002D56  C12D  F12D         	movff	___fldiv@b,?___fldiv
 15976   002D5A  C12E  F12E         	movff	___fldiv@b+1,?___fldiv+1
 15977   002D5E  C12F  F12F         	movff	___fldiv@b+2,?___fldiv+2
 15978   002D62  C130  F130         	movff	___fldiv@b+3,?___fldiv+3
 15979   002D66  EFF5  F017         	goto	l1463
 15980   002D6A                     l6580:
 15981                           
 15982                           ; BSR set to: 1
 15983   002D6A  5144               	movf	___fldiv@bexp& (0+255),w,b
 15984   002D6C  A4D8               	btfss	status,2,c
 15985   002D6E  EFBB  F016         	goto	u6851
 15986   002D72  EFBD  F016         	goto	u6850
 15987   002D76                     u6851:
 15988   002D76  EFC7  F016         	goto	l6588
 15989   002D7A                     u6850:
 15990   002D7A                     
 15991                           ; BSR set to: 1
 15992   002D7A  0E00               	movlw	0
 15993   002D7C  6F2D               	movwf	?___fldiv& (0+255),b
 15994   002D7E  0E00               	movlw	0
 15995   002D80  6F2E               	movwf	(?___fldiv+1)& (0+255),b
 15996   002D82  0E00               	movlw	0
 15997   002D84  6F2F               	movwf	(?___fldiv+2)& (0+255),b
 15998   002D86  0E00               	movlw	0
 15999   002D88  6F30               	movwf	(?___fldiv+3)& (0+255),b
 16000   002D8A  EFF5  F017         	goto	l1463
 16001   002D8E                     l6588:
 16002                           
 16003                           ; BSR set to: 1
 16004   002D8E  5145               	movf	___fldiv@aexp& (0+255),w,b
 16005   002D90  C144  F135         	movff	___fldiv@bexp,??___fldiv
 16006   002D94  6B36               	clrf	(??___fldiv+1)& (0+255),b
 16007   002D96  5F35               	subwf	??___fldiv& (0+255),f,b
 16008   002D98  0E00               	movlw	0
 16009   002D9A  5B36               	subwfb	(??___fldiv+1)& (0+255),f,b
 16010   002D9C  0E7F               	movlw	127
 16011   002D9E  2535               	addwf	??___fldiv& (0+255),w,b
 16012   002DA0  6F3E               	movwf	___fldiv@new_exp& (0+255),b
 16013   002DA2  0E00               	movlw	0
 16014   002DA4  2136               	addwfc	(??___fldiv+1)& (0+255),w,b
 16015   002DA6  6F3F               	movwf	(___fldiv@new_exp+1)& (0+255),b
 16016   002DA8                     
 16017                           ; BSR set to: 1
 16018   002DA8  C12D  F139         	movff	___fldiv@b,___fldiv@rem
 16019   002DAC  C12E  F13A         	movff	___fldiv@b+1,___fldiv@rem+1
 16020   002DB0  C12F  F13B         	movff	___fldiv@b+2,___fldiv@rem+2
 16021   002DB4  C130  F13C         	movff	___fldiv@b+3,___fldiv@rem+3
 16022   002DB8                     
 16023                           ; BSR set to: 1
 16024   002DB8  0E00               	movlw	0
 16025   002DBA  6F2D               	movwf	___fldiv@b& (0+255),b
 16026   002DBC  0E00               	movlw	0
 16027   002DBE  6F2E               	movwf	(___fldiv@b+1)& (0+255),b
 16028   002DC0  0E00               	movlw	0
 16029   002DC2  6F2F               	movwf	(___fldiv@b+2)& (0+255),b
 16030   002DC4  0E00               	movlw	0
 16031   002DC6  6F30               	movwf	(___fldiv@b+3)& (0+255),b
 16032   002DC8                     
 16033                           ; BSR set to: 1
 16034   002DC8  0E00               	movlw	0
 16035   002DCA  6F40               	movwf	___fldiv@grs& (0+255),b
 16036   002DCC  0E00               	movlw	0
 16037   002DCE  6F41               	movwf	(___fldiv@grs+1)& (0+255),b
 16038   002DD0  0E00               	movlw	0
 16039   002DD2  6F42               	movwf	(___fldiv@grs+2)& (0+255),b
 16040   002DD4  0E00               	movlw	0
 16041   002DD6  6F43               	movwf	(___fldiv@grs+3)& (0+255),b
 16042   002DD8                     
 16043                           ; BSR set to: 1
 16044   002DD8  6B45               	clrf	___fldiv@aexp& (0+255),b
 16045   002DDA  EF27  F017         	goto	l1465
 16046   002DDE                     l6598:
 16047                           
 16048                           ; BSR set to: 1
 16049   002DDE  5145               	movf	___fldiv@aexp& (0+255),w,b
 16050   002DE0  B4D8               	btfsc	status,2,c
 16051   002DE2  EFF5  F016         	goto	u6861
 16052   002DE6  EFF7  F016         	goto	u6860
 16053   002DEA                     u6861:
 16054   002DEA  EF0E  F017         	goto	l6606
 16055   002DEE                     u6860:
 16056   002DEE                     
 16057                           ; BSR set to: 1
 16058   002DEE  90D8               	bcf	status,0,c
 16059   002DF0  3739               	rlcf	___fldiv@rem& (0+255),f,b
 16060   002DF2  373A               	rlcf	(___fldiv@rem+1)& (0+255),f,b
 16061   002DF4  373B               	rlcf	(___fldiv@rem+2)& (0+255),f,b
 16062   002DF6  373C               	rlcf	(___fldiv@rem+3)& (0+255),f,b
 16063   002DF8  90D8               	bcf	status,0,c
 16064   002DFA  372D               	rlcf	___fldiv@b& (0+255),f,b
 16065   002DFC  372E               	rlcf	(___fldiv@b+1)& (0+255),f,b
 16066   002DFE  372F               	rlcf	(___fldiv@b+2)& (0+255),f,b
 16067   002E00  3730               	rlcf	(___fldiv@b+3)& (0+255),f,b
 16068   002E02                     
 16069                           ; BSR set to: 1
 16070   002E02  AF43               	btfss	(___fldiv@grs+3)& (0+255),7,b
 16071   002E04  EF06  F017         	goto	u6871
 16072   002E08  EF08  F017         	goto	u6870
 16073   002E0C                     u6871:
 16074   002E0C  EF09  F017         	goto	l1468
 16075   002E10                     u6870:
 16076   002E10                     
 16077                           ; BSR set to: 1
 16078   002E10  812D               	bsf	___fldiv@b& (0+255),0,b
 16079   002E12                     l1468:
 16080                           
 16081                           ; BSR set to: 1
 16082   002E12  90D8               	bcf	status,0,c
 16083   002E14  3740               	rlcf	___fldiv@grs& (0+255),f,b
 16084   002E16  3741               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 16085   002E18  3742               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 16086   002E1A  3743               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 16087   002E1C                     l6606:
 16088                           
 16089                           ; BSR set to: 1
 16090   002E1C  5131               	movf	___fldiv@a& (0+255),w,b
 16091   002E1E  5D39               	subwf	___fldiv@rem& (0+255),w,b
 16092   002E20  5132               	movf	(___fldiv@a+1)& (0+255),w,b
 16093   002E22  593A               	subwfb	(___fldiv@rem+1)& (0+255),w,b
 16094   002E24  5133               	movf	(___fldiv@a+2)& (0+255),w,b
 16095   002E26  593B               	subwfb	(___fldiv@rem+2)& (0+255),w,b
 16096   002E28  5134               	movf	(___fldiv@a+3)& (0+255),w,b
 16097   002E2A  593C               	subwfb	(___fldiv@rem+3)& (0+255),w,b
 16098   002E2C  A0D8               	btfss	status,0,c
 16099   002E2E  EF1B  F017         	goto	u6881
 16100   002E32  EF1D  F017         	goto	u6880
 16101   002E36                     u6881:
 16102   002E36  EF26  F017         	goto	l6612
 16103   002E3A                     u6880:
 16104   002E3A                     
 16105                           ; BSR set to: 1
 16106   002E3A  8D43               	bsf	(___fldiv@grs+3)& (0+255),6,b
 16107   002E3C                     
 16108                           ; BSR set to: 1
 16109   002E3C  5131               	movf	___fldiv@a& (0+255),w,b
 16110   002E3E  5F39               	subwf	___fldiv@rem& (0+255),f,b
 16111   002E40  5132               	movf	(___fldiv@a+1)& (0+255),w,b
 16112   002E42  5B3A               	subwfb	(___fldiv@rem+1)& (0+255),f,b
 16113   002E44  5133               	movf	(___fldiv@a+2)& (0+255),w,b
 16114   002E46  5B3B               	subwfb	(___fldiv@rem+2)& (0+255),f,b
 16115   002E48  5134               	movf	(___fldiv@a+3)& (0+255),w,b
 16116   002E4A  5B3C               	subwfb	(___fldiv@rem+3)& (0+255),f,b
 16117   002E4C                     l6612:
 16118                           
 16119                           ; BSR set to: 1
 16120   002E4C  2B45               	incf	___fldiv@aexp& (0+255),f,b
 16121   002E4E                     l1465:
 16122                           
 16123                           ; BSR set to: 1
 16124   002E4E  0E19               	movlw	25
 16125   002E50  6545               	cpfsgt	___fldiv@aexp& (0+255),b
 16126   002E52  EF2D  F017         	goto	u6891
 16127   002E56  EF2F  F017         	goto	u6890
 16128   002E5A                     u6891:
 16129   002E5A  EFEF  F016         	goto	l6598
 16130   002E5E                     u6890:
 16131   002E5E                     
 16132                           ; BSR set to: 1
 16133   002E5E  5139               	movf	___fldiv@rem& (0+255),w,b
 16134   002E60  113A               	iorwf	(___fldiv@rem+1)& (0+255),w,b
 16135   002E62  113B               	iorwf	(___fldiv@rem+2)& (0+255),w,b
 16136   002E64  113C               	iorwf	(___fldiv@rem+3)& (0+255),w,b
 16137   002E66  B4D8               	btfsc	status,2,c
 16138   002E68  EF38  F017         	goto	u6901
 16139   002E6C  EF3A  F017         	goto	u6900
 16140   002E70                     u6901:
 16141   002E70  EF52  F017         	goto	l6624
 16142   002E74                     u6900:
 16143   002E74                     
 16144                           ; BSR set to: 1
 16145   002E74  8140               	bsf	___fldiv@grs& (0+255),0,b
 16146   002E76  EF52  F017         	goto	l6624
 16147   002E7A                     l6618:
 16148                           
 16149                           ; BSR set to: 1
 16150   002E7A  90D8               	bcf	status,0,c
 16151   002E7C  372D               	rlcf	___fldiv@b& (0+255),f,b
 16152   002E7E  372E               	rlcf	(___fldiv@b+1)& (0+255),f,b
 16153   002E80  372F               	rlcf	(___fldiv@b+2)& (0+255),f,b
 16154   002E82  3730               	rlcf	(___fldiv@b+3)& (0+255),f,b
 16155   002E84                     
 16156                           ; BSR set to: 1
 16157   002E84  AF43               	btfss	(___fldiv@grs+3)& (0+255),7,b
 16158   002E86  EF47  F017         	goto	u6911
 16159   002E8A  EF49  F017         	goto	u6910
 16160   002E8E                     u6911:
 16161   002E8E  EF4A  F017         	goto	l1474
 16162   002E92                     u6910:
 16163   002E92                     
 16164                           ; BSR set to: 1
 16165   002E92  812D               	bsf	___fldiv@b& (0+255),0,b
 16166   002E94                     l1474:
 16167                           
 16168                           ; BSR set to: 1
 16169   002E94  90D8               	bcf	status,0,c
 16170   002E96  3740               	rlcf	___fldiv@grs& (0+255),f,b
 16171   002E98  3741               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 16172   002E9A  3742               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 16173   002E9C  3743               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 16174   002E9E  073E               	decf	___fldiv@new_exp& (0+255),f,b
 16175   002EA0  A0D8               	btfss	status,0,c
 16176   002EA2  073F               	decf	(___fldiv@new_exp+1)& (0+255),f,b
 16177   002EA4                     l6624:
 16178                           
 16179                           ; BSR set to: 1
 16180   002EA4  AF2F               	btfss	(___fldiv@b+2)& (0+255),7,b
 16181   002EA6  EF57  F017         	goto	u6921
 16182   002EAA  EF59  F017         	goto	u6920
 16183   002EAE                     u6921:
 16184   002EAE  EF3D  F017         	goto	l6618
 16185   002EB2                     u6920:
 16186   002EB2                     
 16187                           ; BSR set to: 1
 16188   002EB2  6B45               	clrf	___fldiv@aexp& (0+255),b
 16189   002EB4  AF43               	btfss	(___fldiv@grs+3)& (0+255),7,b
 16190   002EB6  EF5F  F017         	goto	u6931
 16191   002EBA  EF61  F017         	goto	u6930
 16192   002EBE                     u6931:
 16193   002EBE  EF85  F017         	goto	l1476
 16194   002EC2                     u6930:
 16195   002EC2                     
 16196                           ; BSR set to: 1
 16197   002EC2  0EFF               	movlw	255
 16198   002EC4  1540               	andwf	___fldiv@grs& (0+255),w,b
 16199   002EC6  6F35               	movwf	??___fldiv& (0+255),b
 16200   002EC8  0EFF               	movlw	255
 16201   002ECA  1541               	andwf	(___fldiv@grs+1)& (0+255),w,b
 16202   002ECC  6F36               	movwf	(??___fldiv+1)& (0+255),b
 16203   002ECE  0EFF               	movlw	255
 16204   002ED0  1542               	andwf	(___fldiv@grs+2)& (0+255),w,b
 16205   002ED2  6F37               	movwf	(??___fldiv+2)& (0+255),b
 16206   002ED4  0E7F               	movlw	127
 16207   002ED6  1543               	andwf	(___fldiv@grs+3)& (0+255),w,b
 16208   002ED8  6F38               	movwf	(??___fldiv+3)& (0+255),b
 16209   002EDA  5135               	movf	??___fldiv& (0+255),w,b
 16210   002EDC  1136               	iorwf	(??___fldiv+1)& (0+255),w,b
 16211   002EDE  1137               	iorwf	(??___fldiv+2)& (0+255),w,b
 16212   002EE0  1138               	iorwf	(??___fldiv+3)& (0+255),w,b
 16213   002EE2  B4D8               	btfsc	status,2,c
 16214   002EE4  EF76  F017         	goto	u6941
 16215   002EE8  EF78  F017         	goto	u6940
 16216   002EEC                     u6941:
 16217   002EEC  EF7C  F017         	goto	l1477
 16218   002EF0                     u6940:
 16219   002EF0                     l6628:
 16220                           
 16221                           ; BSR set to: 1
 16222   002EF0  0E01               	movlw	1
 16223   002EF2  6F45               	movwf	___fldiv@aexp& (0+255),b
 16224   002EF4  EF85  F017         	goto	l1476
 16225   002EF8                     l1477:
 16226                           
 16227                           ; BSR set to: 1
 16228   002EF8  A12D               	btfss	___fldiv@b& (0+255),0,b
 16229   002EFA  EF81  F017         	goto	u6951
 16230   002EFE  EF83  F017         	goto	u6950
 16231   002F02                     u6951:
 16232   002F02  EF85  F017         	goto	l1476
 16233   002F06                     u6950:
 16234   002F06  EF78  F017         	goto	l6628
 16235   002F0A                     l1476:
 16236                           
 16237                           ; BSR set to: 1
 16238   002F0A  5145               	movf	___fldiv@aexp& (0+255),w,b
 16239   002F0C  B4D8               	btfsc	status,2,c
 16240   002F0E  EF8B  F017         	goto	u6961
 16241   002F12  EF8D  F017         	goto	u6960
 16242   002F16                     u6961:
 16243   002F16  EFB1  F017         	goto	l6640
 16244   002F1A                     u6960:
 16245   002F1A                     
 16246                           ; BSR set to: 1
 16247   002F1A  0E01               	movlw	1
 16248   002F1C  272D               	addwf	___fldiv@b& (0+255),f,b
 16249   002F1E  0E00               	movlw	0
 16250   002F20  232E               	addwfc	(___fldiv@b+1)& (0+255),f,b
 16251   002F22  232F               	addwfc	(___fldiv@b+2)& (0+255),f,b
 16252   002F24  2330               	addwfc	(___fldiv@b+3)& (0+255),f,b
 16253   002F26                     
 16254                           ; BSR set to: 1
 16255   002F26  A130               	btfss	(___fldiv@b+3)& (0+255),0,b
 16256   002F28  EF98  F017         	goto	u6971
 16257   002F2C  EF9A  F017         	goto	u6970
 16258   002F30                     u6971:
 16259   002F30  EFB1  F017         	goto	l6640
 16260   002F34                     u6970:
 16261   002F34                     
 16262                           ; BSR set to: 1
 16263   002F34  C12D  F135         	movff	___fldiv@b,??___fldiv
 16264   002F38  C12E  F136         	movff	___fldiv@b+1,??___fldiv+1
 16265   002F3C  C12F  F137         	movff	___fldiv@b+2,??___fldiv+2
 16266   002F40  C130  F138         	movff	___fldiv@b+3,??___fldiv+3
 16267   002F44  3538               	rlcf	(??___fldiv+3)& (0+255),w,b
 16268   002F46  3338               	rrcf	(??___fldiv+3)& (0+255),f,b
 16269   002F48  3337               	rrcf	(??___fldiv+2)& (0+255),f,b
 16270   002F4A  3336               	rrcf	(??___fldiv+1)& (0+255),f,b
 16271   002F4C  3335               	rrcf	??___fldiv& (0+255),f,b
 16272   002F4E  C135  F12D         	movff	??___fldiv,___fldiv@b
 16273   002F52  C136  F12E         	movff	??___fldiv+1,___fldiv@b+1
 16274   002F56  C137  F12F         	movff	??___fldiv+2,___fldiv@b+2
 16275   002F5A  C138  F130         	movff	??___fldiv+3,___fldiv@b+3
 16276   002F5E                     
 16277                           ; BSR set to: 1
 16278   002F5E  4B3E               	infsnz	___fldiv@new_exp& (0+255),f,b
 16279   002F60  2B3F               	incf	(___fldiv@new_exp+1)& (0+255),f,b
 16280   002F62                     l6640:
 16281                           
 16282                           ; BSR set to: 1
 16283   002F62  BF3F               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 16284   002F64  EFBC  F017         	goto	u6981
 16285   002F68  513F               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 16286   002F6A  E108               	bnz	u6980
 16287   002F6C  293E               	incf	___fldiv@new_exp& (0+255),w,b
 16288   002F6E  A0D8               	btfss	status,0,c
 16289   002F70  EFBC  F017         	goto	u6981
 16290   002F74  EFBE  F017         	goto	u6980
 16291   002F78                     u6981:
 16292   002F78  EFC9  F017         	goto	l6644
 16293   002F7C                     u6980:
 16294   002F7C                     
 16295                           ; BSR set to: 1
 16296   002F7C  0E00               	movlw	0
 16297   002F7E  6F3F               	movwf	(___fldiv@new_exp+1)& (0+255),b
 16298   002F80  693E               	setf	___fldiv@new_exp& (0+255),b
 16299   002F82  0E00               	movlw	0
 16300   002F84  6F2D               	movwf	___fldiv@b& (0+255),b
 16301   002F86  0E00               	movlw	0
 16302   002F88  6F2E               	movwf	(___fldiv@b+1)& (0+255),b
 16303   002F8A  0E00               	movlw	0
 16304   002F8C  6F2F               	movwf	(___fldiv@b+2)& (0+255),b
 16305   002F8E  0E00               	movlw	0
 16306   002F90  6F30               	movwf	(___fldiv@b+3)& (0+255),b
 16307   002F92                     l6644:
 16308                           
 16309                           ; BSR set to: 1
 16310   002F92  BF3F               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 16311   002F94  EFD6  F017         	goto	u6990
 16312   002F98  513F               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 16313   002F9A  E106               	bnz	u6991
 16314   002F9C  053E               	decf	___fldiv@new_exp& (0+255),w,b
 16315   002F9E  B0D8               	btfsc	status,0,c
 16316   002FA0  EFD4  F017         	goto	u6991
 16317   002FA4  EFD6  F017         	goto	u6990
 16318   002FA8                     u6991:
 16319   002FA8  EFE3  F017         	goto	l6650
 16320   002FAC                     u6990:
 16321   002FAC                     
 16322                           ; BSR set to: 1
 16323   002FAC  0E00               	movlw	0
 16324   002FAE  6F3F               	movwf	(___fldiv@new_exp+1)& (0+255),b
 16325   002FB0  0E00               	movlw	0
 16326   002FB2  6F3E               	movwf	___fldiv@new_exp& (0+255),b
 16327   002FB4  0E00               	movlw	0
 16328   002FB6  6F2D               	movwf	___fldiv@b& (0+255),b
 16329   002FB8  0E00               	movlw	0
 16330   002FBA  6F2E               	movwf	(___fldiv@b+1)& (0+255),b
 16331   002FBC  0E00               	movlw	0
 16332   002FBE  6F2F               	movwf	(___fldiv@b+2)& (0+255),b
 16333   002FC0  0E00               	movlw	0
 16334   002FC2  6F30               	movwf	(___fldiv@b+3)& (0+255),b
 16335   002FC4                     
 16336                           ; BSR set to: 1
 16337   002FC4  6B3D               	clrf	___fldiv@sign& (0+255),b
 16338   002FC6                     l6650:
 16339                           
 16340                           ; BSR set to: 1
 16341   002FC6  C13E  F144         	movff	___fldiv@new_exp,___fldiv@bexp
 16342   002FCA                     
 16343                           ; BSR set to: 1
 16344   002FCA  A144               	btfss	___fldiv@bexp& (0+255),0,b
 16345   002FCC  EFEA  F017         	goto	u7001
 16346   002FD0  EFEC  F017         	goto	u7000
 16347   002FD4                     u7001:
 16348   002FD4  EFEF  F017         	goto	l6656
 16349   002FD8                     u7000:
 16350   002FD8                     
 16351                           ; BSR set to: 1
 16352   002FD8  8F2F               	bsf	(___fldiv@b+2)& (0+255),7,b
 16353   002FDA  EFF0  F017         	goto	l6658
 16354   002FDE                     l6656:
 16355                           
 16356                           ; BSR set to: 1
 16357   002FDE  9F2F               	bcf	(___fldiv@b+2)& (0+255),7,b
 16358   002FE0                     l6658:
 16359                           
 16360                           ; BSR set to: 1
 16361   002FE0  90D8               	bcf	status,0,c
 16362   002FE2  3144               	rrcf	___fldiv@bexp& (0+255),w,b
 16363   002FE4  6F30               	movwf	(___fldiv@b+3)& (0+255),b
 16364   002FE6  EFA9  F016         	goto	l6574
 16365   002FEA                     l1463:
 16366                           
 16367                           ; BSR set to: 1
 16368   002FEA  0012               	return		;funcret
 16369   002FEC                     __end_of___fldiv:
 16370                           	callstack 0
 16371                           
 16372 ;; *************** function _ADC_ConversionStart *****************
 16373 ;; Defined at:
 16374 ;;		line 144 in file "mcc_generated_files/adc/src/adc.c"
 16375 ;; Parameters:    Size  Location     Type
 16376 ;;		None
 16377 ;; Auto vars:     Size  Location     Type
 16378 ;;		None
 16379 ;; Return value:  Size  Location     Type
 16380 ;;                  1    wreg      void 
 16381 ;; Registers used:
 16382 ;;		None
 16383 ;; Tracked objects:
 16384 ;;		On entry : 0/0
 16385 ;;		On exit  : 0/0
 16386 ;;		Unchanged: 0/0
 16387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16388 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16389 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16390 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16391 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16392 ;;Total ram usage:        0 bytes
 16393 ;; Hardware stack levels used: 1
 16394 ;; Hardware stack levels required when called: 13
 16395 ;; This function calls:
 16396 ;;		Nothing
 16397 ;; This function is called by:
 16398 ;;		_lire_tension
 16399 ;; This function uses a non-reentrant model
 16400 ;;
 16401                           
 16402                           	psect	text41
 16403   006666                     __ptext41:
 16404                           	callstack 0
 16405   006666                     _ADC_ConversionStart:
 16406                           	callstack 15
 16407   006666                     
 16408                           ;mcc_generated_files/adc/src/adc.c: 146:     ADCON0bits.ADGO = 1;
 16409   006666  013E               	movlb	62	; () banked
 16410   006668  81F8               	bsf	248,0,b	;volatile
 16411   00666A                     
 16412                           ; BSR set to: 62
 16413   00666A  0012               	return		;funcret
 16414   00666C                     __end_of_ADC_ConversionStart:
 16415                           	callstack 0
 16416                           
 16417 ;; *************** function _ADC_ConversionResultGet *****************
 16418 ;; Defined at:
 16419 ;;		line 159 in file "mcc_generated_files/adc/src/adc.c"
 16420 ;; Parameters:    Size  Location     Type
 16421 ;;		None
 16422 ;; Auto vars:     Size  Location     Type
 16423 ;;		None
 16424 ;; Return value:  Size  Location     Type
 16425 ;;                  2    6[BANK1 ] short 
 16426 ;; Registers used:
 16427 ;;		wreg, status,2, status,0
 16428 ;; Tracked objects:
 16429 ;;		On entry : 0/0
 16430 ;;		On exit  : 0/0
 16431 ;;		Unchanged: 0/0
 16432 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16433 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16434 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16435 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16436 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16437 ;;Total ram usage:        4 bytes
 16438 ;; Hardware stack levels used: 1
 16439 ;; Hardware stack levels required when called: 13
 16440 ;; This function calls:
 16441 ;;		Nothing
 16442 ;; This function is called by:
 16443 ;;		_lire_tension
 16444 ;; This function uses a non-reentrant model
 16445 ;;
 16446                           
 16447                           	psect	text42
 16448   0064DC                     __ptext42:
 16449                           	callstack 0
 16450   0064DC                     _ADC_ConversionResultGet:
 16451                           	callstack 15
 16452   0064DC                     
 16453                           ;mcc_generated_files/adc/src/adc.c: 161:     return ((adc_result_t)((ADRESH << 8) + ADRE
      +                          SL));
 16454   0064DC  013E               	movlb	62	; () banked
 16455   0064DE  51F0               	movf	240,w,b	;volatile
 16456   0064E0  0101               	movlb	1	; () banked
 16457   0064E2  6F09               	movwf	(??_ADC_ConversionResultGet+1)& (0+255),b
 16458   0064E4  6B08               	clrf	??_ADC_ConversionResultGet& (0+255),b
 16459   0064E6  013E               	movlb	62	; () banked
 16460   0064E8  51EF               	movf	239,w,b	;volatile
 16461   0064EA  0101               	movlb	1	; () banked
 16462   0064EC  2508               	addwf	??_ADC_ConversionResultGet& (0+255),w,b
 16463   0064EE  6F06               	movwf	?_ADC_ConversionResultGet& (0+255),b
 16464   0064F0  013E               	movlb	62	; () banked
 16465   0064F2  0E00               	movlw	0
 16466   0064F4  0101               	movlb	1	; () banked
 16467   0064F6  2109               	addwfc	(??_ADC_ConversionResultGet+1)& (0+255),w,b
 16468   0064F8  6F07               	movwf	(?_ADC_ConversionResultGet+1)& (0+255),b
 16469   0064FA                     
 16470                           ; BSR set to: 1
 16471   0064FA  0012               	return		;funcret
 16472   0064FC                     __end_of_ADC_ConversionResultGet:
 16473                           	callstack 0
 16474                           
 16475 ;; *************** function _ADC_ChannelSelect *****************
 16476 ;; Defined at:
 16477 ;;		line 139 in file "mcc_generated_files/adc/src/adc.c"
 16478 ;; Parameters:    Size  Location     Type
 16479 ;;  channel         1    wreg     enum E15638
 16480 ;; Auto vars:     Size  Location     Type
 16481 ;;  channel         1    6[BANK1 ] enum E15638
 16482 ;; Return value:  Size  Location     Type
 16483 ;;                  1    wreg      void 
 16484 ;; Registers used:
 16485 ;;		wreg
 16486 ;; Tracked objects:
 16487 ;;		On entry : 0/0
 16488 ;;		On exit  : 0/0
 16489 ;;		Unchanged: 0/0
 16490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16491 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16492 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16493 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16494 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16495 ;;Total ram usage:        1 bytes
 16496 ;; Hardware stack levels used: 1
 16497 ;; Hardware stack levels required when called: 13
 16498 ;; This function calls:
 16499 ;;		Nothing
 16500 ;; This function is called by:
 16501 ;;		_lire_tension
 16502 ;; This function uses a non-reentrant model
 16503 ;;
 16504                           
 16505                           	psect	text43
 16506   00660A                     __ptext43:
 16507                           	callstack 0
 16508   00660A                     _ADC_ChannelSelect:
 16509                           	callstack 15
 16510                           
 16511                           ; BSR set to: 1
 16512                           ;incstack = 0
 16513                           ;ADC_ChannelSelect@channel stored from wreg
 16514   00660A  0101               	movlb	1	; () banked
 16515   00660C  6F06               	movwf	ADC_ChannelSelect@channel& (0+255),b
 16516   00660E                     
 16517                           ;mcc_generated_files/adc/src/adc.c: 139: void ADC_ChannelSelect(adc_channel_t channel);m
      +                          cc_generated_files/adc/src/adc.c: 140: {;mcc_generated_files/adc/src/adc.c: 141:    ADPC
      +                          H = channel;
 16518   00660E  0060  F41B  FEF1   	movff	ADC_ChannelSelect@channel,16113	;volatile
 16519   006614  0012               	return		;funcret
 16520   006616                     __end_of_ADC_ChannelSelect:
 16521                           	callstack 0
 16522                           
 16523 ;; *************** function _LCD_String *****************
 16524 ;; Defined at:
 16525 ;;		line 35 in file "LCM_S01604DSF.c"
 16526 ;; Parameters:    Size  Location     Type
 16527 ;;  str             2    8[BANK1 ] PTR const unsigned char 
 16528 ;;		 -> STR_18(14), LCD_UpdateMenu@buffer(16), STR_16(8), STR_15(9), 
 16529 ;;		 -> STR_14(15), STR_13(14), STR_12(16), STR_11(15), 
 16530 ;;		 -> STR_10(16), STR_9(14), STR_8(14), STR_7(15), 
 16531 ;;		 -> STR_6(15), STR_5(16), STR_4(5), STR_3(16), 
 16532 ;;		 -> STR_2(17), STR_1(5), 
 16533 ;; Auto vars:     Size  Location     Type
 16534 ;;		None
 16535 ;; Return value:  Size  Location     Type
 16536 ;;                  1    wreg      void 
 16537 ;; Registers used:
 16538 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 16539 ;; Tracked objects:
 16540 ;;		On entry : 0/0
 16541 ;;		On exit  : 0/0
 16542 ;;		Unchanged: 0/0
 16543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16544 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16545 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16546 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16547 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16548 ;;Total ram usage:        2 bytes
 16549 ;; Hardware stack levels used: 1
 16550 ;; Hardware stack levels required when called: 15
 16551 ;; This function calls:
 16552 ;;		_LCD_Char
 16553 ;; This function is called by:
 16554 ;;		_LCD_UpdateMenu
 16555 ;; This function uses a non-reentrant model
 16556 ;;
 16557                           
 16558                           	psect	text44
 16559   0058F4                     __ptext44:
 16560                           	callstack 0
 16561   0058F4                     _LCD_String:
 16562                           	callstack 14
 16563   0058F4                     
 16564                           ;LCM_S01604DSF.c: 36:     while (*str) {
 16565   0058F4  EF96  F02C         	goto	l7870
 16566   0058F8                     l7866:
 16567                           
 16568                           ;LCM_S01604DSF.c: 37:         LCD_Char(*str++);
 16569   0058F8  0060  F423  FFF6   	movff	LCD_String@str,tblptrl
 16570   0058FE  0060  F427  FFF7   	movff	LCD_String@str+1,tblptrh
 16571   005904  0E00               	movlw	low (__mediumconst shr (0+16))
 16572   005906  6EF8               	movwf	tblptru,c
 16573   005908  0E0F               	movlw	(high __ramtop+-1)
 16574   00590A  64F7               	cpfsgt	tblptrh,c
 16575   00590C  D003               	bra	u8597
 16576   00590E  0008               	tblrd		*
 16577   005910  50F5               	movf	tablat,w,c
 16578   005912  D007               	bra	u8590
 16579   005914                     u8597:
 16580   005914  006F FFDB FFE9     	movff	tblptrl,fsr0l
 16581   00591A  006F FFDF FFEA     	movff	tblptrh,fsr0h
 16582   005920  50EF               	movf	indf0,w,c
 16583   005922                     u8590:
 16584   005922  EC26  F032         	call	_LCD_Char
 16585   005926  0101               	movlb	1	; () banked
 16586   005928  4B08               	infsnz	LCD_String@str& (0+255),f,b
 16587   00592A  2B09               	incf	(LCD_String@str+1)& (0+255),f,b
 16588   00592C                     l7870:
 16589                           
 16590                           ;LCM_S01604DSF.c: 36:     while (*str) {
 16591   00592C  0060  F423  FFF6   	movff	LCD_String@str,tblptrl
 16592   005932  0060  F427  FFF7   	movff	LCD_String@str+1,tblptrh
 16593   005938  0E00               	movlw	low (__mediumconst shr (0+16))
 16594   00593A  6EF8               	movwf	tblptru,c
 16595   00593C  0E0F               	movlw	(high __ramtop+-1)
 16596   00593E  64F7               	cpfsgt	tblptrh,c
 16597   005940  D003               	bra	u8607
 16598   005942  0008               	tblrd		*
 16599   005944  50F5               	movf	tablat,w,c
 16600   005946  D007               	bra	u8600
 16601   005948                     u8607:
 16602   005948  006F FFDB FFE9     	movff	tblptrl,fsr0l
 16603   00594E  006F FFDF FFEA     	movff	tblptrh,fsr0h
 16604   005954  50EF               	movf	indf0,w,c
 16605   005956                     u8600:
 16606   005956  0900               	iorlw	0
 16607   005958  A4D8               	btfss	status,2,c
 16608   00595A  EFB1  F02C         	goto	u8611
 16609   00595E  EFB3  F02C         	goto	u8610
 16610   005962                     u8611:
 16611   005962  EF7C  F02C         	goto	l7866
 16612   005966                     u8610:
 16613   005966  0012               	return		;funcret
 16614   005968                     __end_of_LCD_String:
 16615                           	callstack 0
 16616                           
 16617 ;; *************** function _LCD_Char *****************
 16618 ;; Defined at:
 16619 ;;		line 28 in file "LCM_S01604DSF.c"
 16620 ;; Parameters:    Size  Location     Type
 16621 ;;  data            1    wreg     unsigned char 
 16622 ;; Auto vars:     Size  Location     Type
 16623 ;;  data            1    7[BANK1 ] unsigned char 
 16624 ;; Return value:  Size  Location     Type
 16625 ;;                  1    wreg      void 
 16626 ;; Registers used:
 16627 ;;		wreg, cstack
 16628 ;; Tracked objects:
 16629 ;;		On entry : 0/0
 16630 ;;		On exit  : 0/0
 16631 ;;		Unchanged: 0/0
 16632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16633 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16634 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16635 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16636 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16637 ;;Total ram usage:        2 bytes
 16638 ;; Hardware stack levels used: 1
 16639 ;; Hardware stack levels required when called: 14
 16640 ;; This function calls:
 16641 ;;		_LCD_EnablePulse
 16642 ;; This function is called by:
 16643 ;;		_LCD_String
 16644 ;;		_LCD_UpdateMenu
 16645 ;; This function uses a non-reentrant model
 16646 ;;
 16647                           
 16648                           	psect	text45
 16649   00644C                     __ptext45:
 16650                           	callstack 0
 16651   00644C                     _LCD_Char:
 16652                           	callstack 14
 16653                           
 16654                           ;incstack = 0
 16655                           ;LCD_Char@data stored from wreg
 16656   00644C  0101               	movlb	1	; () banked
 16657   00644E  6F07               	movwf	LCD_Char@data& (0+255),b
 16658   006450  82BB               	bsf	187,1,c	;volatile
 16659   006452                     
 16660                           ;LCM_S01604DSF.c: 30:     LATC = data;
 16661   006452  0060  F41F  FFBC   	movff	LCD_Char@data,16316	;volatile
 16662   006458                     
 16663                           ;LCM_S01604DSF.c: 31:     LCD_EnablePulse();
 16664   006458  EC9D  F032         	call	_LCD_EnablePulse	;wreg free
 16665   00645C                     
 16666                           ;LCM_S01604DSF.c: 32:     _delay((unsigned long)((1)*(64000000UL/4000.0)));
 16667   00645C  0E15               	movlw	21
 16668   00645E  0101               	movlb	1	; () banked
 16669   006460  6F06               	movwf	??_LCD_Char& (0+255),b
 16670   006462  0EC6               	movlw	198
 16671   006464                     u9317:
 16672   006464  2EE8               	decfsz	wreg,f,c
 16673   006466  D7FE               	bra	u9317
 16674   006468  2F06               	decfsz	??_LCD_Char& (0+255),f,b
 16675   00646A  D7FC               	bra	u9317
 16676   00646C  0000               	nop	
 16677   00646E  0012               	return		;funcret
 16678   006470                     __end_of_LCD_Char:
 16679                           	callstack 0
 16680                           
 16681 ;; *************** function _LCD_SetCursor *****************
 16682 ;; Defined at:
 16683 ;;		line 41 in file "LCM_S01604DSF.c"
 16684 ;; Parameters:    Size  Location     Type
 16685 ;;  row             1    wreg     unsigned char 
 16686 ;;  column          1    8[BANK1 ] unsigned char 
 16687 ;; Auto vars:     Size  Location     Type
 16688 ;;  row             1   13[BANK1 ] unsigned char 
 16689 ;;  row_offsets     4    9[BANK1 ] const unsigned char [4]
 16690 ;; Return value:  Size  Location     Type
 16691 ;;                  1    wreg      void 
 16692 ;; Registers used:
 16693 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 16694 ;; Tracked objects:
 16695 ;;		On entry : 0/0
 16696 ;;		On exit  : 0/0
 16697 ;;		Unchanged: 0/0
 16698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16699 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16700 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16701 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16702 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16703 ;;Total ram usage:        6 bytes
 16704 ;; Hardware stack levels used: 1
 16705 ;; Hardware stack levels required when called: 15
 16706 ;; This function calls:
 16707 ;;		_LCD_Command
 16708 ;; This function is called by:
 16709 ;;		_LCD_UpdateMenu
 16710 ;; This function uses a non-reentrant model
 16711 ;;
 16712                           
 16713                           	psect	text46
 16714   005ABA                     __ptext46:
 16715                           	callstack 0
 16716   005ABA                     _LCD_SetCursor:
 16717                           	callstack 14
 16718                           
 16719                           ;incstack = 0
 16720                           ;LCD_SetCursor@row stored from wreg
 16721   005ABA  0101               	movlb	1	; () banked
 16722   005ABC  6F0D               	movwf	LCD_SetCursor@row& (0+255),b
 16723   005ABE                     
 16724                           ;LCM_S01604DSF.c: 42:     const uint8_t row_offsets[] = {0x00, 0x40, 0x10, 0x50};
 16725   005ABE  0E05               	movlw	low LCD_SetCursor@F16382
 16726   005AC0  6EF6               	movwf	tblptrl,c
 16727   005AC2                     	if	1	;There is more than 1 active tblptr byte
 16728   005AC2  0EFF               	movlw	high LCD_SetCursor@F16382
 16729   005AC4  6EF7               	movwf	tblptrh,c
 16730   005AC6                     	endif
 16731   005AC6                     	if	1	;There are 3 active tblptr bytes
 16732   005AC6  0E00               	movlw	low (LCD_SetCursor@F16382 shr (0+16))
 16733   005AC8  6EF8               	movwf	tblptru,c
 16734   005ACA                     	endif
 16735   005ACA  0009               	tblrd		*+
 16736   005ACC  006F FFD4  F109    	movff	tablat,LCD_SetCursor@row_offsets
 16737   005AD2  0009               	tblrd		*+
 16738   005AD4  006F FFD4  F10A    	movff	tablat,LCD_SetCursor@row_offsets+1
 16739   005ADA  0009               	tblrd		*+
 16740   005ADC  006F FFD4  F10B    	movff	tablat,LCD_SetCursor@row_offsets+2
 16741   005AE2  000A               	tblrd		*-
 16742   005AE4  006F FFD4  F10C    	movff	tablat,LCD_SetCursor@row_offsets+3
 16743   005AEA                     
 16744                           ;LCM_S01604DSF.c: 43:     if (row > 3) row = 3;
 16745   005AEA  0E03               	movlw	3
 16746   005AEC  0101               	movlb	1	; () banked
 16747   005AEE  650D               	cpfsgt	LCD_SetCursor@row& (0+255),b
 16748   005AF0  EF7C  F02D         	goto	u8621
 16749   005AF4  EF7E  F02D         	goto	u8620
 16750   005AF8                     u8621:
 16751   005AF8  EF80  F02D         	goto	l7878
 16752   005AFC                     u8620:
 16753   005AFC                     
 16754                           ; BSR set to: 1
 16755   005AFC  0E03               	movlw	3
 16756   005AFE  6F0D               	movwf	LCD_SetCursor@row& (0+255),b
 16757   005B00                     l7878:
 16758                           
 16759                           ; BSR set to: 1
 16760                           ;LCM_S01604DSF.c: 44:     LCD_Command(0x80 | (row_offsets[row] + column));
 16761   005B00  0E09               	movlw	low LCD_SetCursor@row_offsets
 16762   005B02  250D               	addwf	LCD_SetCursor@row& (0+255),w,b
 16763   005B04  6ED9               	movwf	fsr2l,c
 16764   005B06  6ADA               	clrf	fsr2h,c
 16765   005B08  0E01               	movlw	high LCD_SetCursor@row_offsets
 16766   005B0A  22DA               	addwfc	fsr2h,f,c
 16767   005B0C  50DF               	movf	indf2,w,c
 16768   005B0E  2508               	addwf	LCD_SetCursor@column& (0+255),w,b
 16769   005B10  0980               	iorlw	128
 16770   005B12  EC38  F032         	call	_LCD_Command
 16771   005B16  0012               	return		;funcret
 16772   005B18                     __end_of_LCD_SetCursor:
 16773                           	callstack 0
 16774                           
 16775 ;; *************** function _LCD_Init *****************
 16776 ;; Defined at:
 16777 ;;		line 52 in file "LCM_S01604DSF.c"
 16778 ;; Parameters:    Size  Location     Type
 16779 ;;		None
 16780 ;; Auto vars:     Size  Location     Type
 16781 ;;		None
 16782 ;; Return value:  Size  Location     Type
 16783 ;;                  1    wreg      void 
 16784 ;; Registers used:
 16785 ;;		wreg, cstack
 16786 ;; Tracked objects:
 16787 ;;		On entry : 0/0
 16788 ;;		On exit  : 0/0
 16789 ;;		Unchanged: 0/0
 16790 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16791 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16792 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16793 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16794 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16795 ;;Total ram usage:        2 bytes
 16796 ;; Hardware stack levels used: 1
 16797 ;; Hardware stack levels required when called: 16
 16798 ;; This function calls:
 16799 ;;		_LCD_Clear
 16800 ;;		_LCD_Command
 16801 ;; This function is called by:
 16802 ;;		_LCD_UpdateMenu
 16803 ;; This function uses a non-reentrant model
 16804 ;;
 16805                           
 16806                           	psect	text47
 16807   00634C                     __ptext47:
 16808                           	callstack 0
 16809   00634C                     _LCD_Init:
 16810                           	callstack 13
 16811   00634C  92BB               	bcf	187,1,c	;volatile
 16812   00634E  90BB               	bcf	187,0,c	;volatile
 16813   006350                     
 16814                           ;LCM_S01604DSF.c: 56:     _delay((unsigned long)((20)*(64000000UL/4000.0)));
 16815   006350  0E02               	movlw	2
 16816   006352  0101               	movlb	1	; () banked
 16817   006354  6F0A               	movwf	(??_LCD_Init+1)& (0+255),b
 16818   006356  0EA0               	movlw	160
 16819   006358  6F09               	movwf	??_LCD_Init& (0+255),b
 16820   00635A  0E92               	movlw	146
 16821   00635C                     u9327:
 16822   00635C  2EE8               	decfsz	wreg,f,c
 16823   00635E  D7FE               	bra	u9327
 16824   006360  2F09               	decfsz	??_LCD_Init& (0+255),f,b
 16825   006362  D7FC               	bra	u9327
 16826   006364  2F0A               	decfsz	(??_LCD_Init+1)& (0+255),f,b
 16827   006366  D7FA               	bra	u9327
 16828   006368  0000               	nop	
 16829   00636A                     
 16830                           ;LCM_S01604DSF.c: 58:     LCD_Command(0x38);
 16831   00636A  0E38               	movlw	56
 16832   00636C  EC38  F032         	call	_LCD_Command
 16833   006370                     
 16834                           ;LCM_S01604DSF.c: 59:     LCD_Command(0x0C);
 16835   006370  0E0C               	movlw	12
 16836   006372  EC38  F032         	call	_LCD_Command
 16837   006376                     
 16838                           ;LCM_S01604DSF.c: 60:     LCD_Command(0x06);
 16839   006376  0E06               	movlw	6
 16840   006378  EC38  F032         	call	_LCD_Command
 16841   00637C                     
 16842                           ;LCM_S01604DSF.c: 61:     LCD_Clear();
 16843   00637C  ECB9  F032         	call	_LCD_Clear	;wreg free
 16844   006380  0012               	return		;funcret
 16845   006382                     __end_of_LCD_Init:
 16846                           	callstack 0
 16847                           
 16848 ;; *************** function _LCD_Clear *****************
 16849 ;; Defined at:
 16850 ;;		line 47 in file "LCM_S01604DSF.c"
 16851 ;; Parameters:    Size  Location     Type
 16852 ;;		None
 16853 ;; Auto vars:     Size  Location     Type
 16854 ;;		None
 16855 ;; Return value:  Size  Location     Type
 16856 ;;                  1    wreg      void 
 16857 ;; Registers used:
 16858 ;;		wreg, cstack
 16859 ;; Tracked objects:
 16860 ;;		On entry : 0/0
 16861 ;;		On exit  : 0/0
 16862 ;;		Unchanged: 0/0
 16863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16864 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16865 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16866 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16867 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16868 ;;Total ram usage:        1 bytes
 16869 ;; Hardware stack levels used: 1
 16870 ;; Hardware stack levels required when called: 15
 16871 ;; This function calls:
 16872 ;;		_LCD_Command
 16873 ;; This function is called by:
 16874 ;;		_LCD_Init
 16875 ;; This function uses a non-reentrant model
 16876 ;;
 16877                           
 16878                           	psect	text48
 16879   006572                     __ptext48:
 16880                           	callstack 0
 16881   006572                     _LCD_Clear:
 16882                           	callstack 13
 16883   006572                     
 16884                           ;LCM_S01604DSF.c: 48:     LCD_Command(0x01);
 16885   006572  0E01               	movlw	1
 16886   006574  EC38  F032         	call	_LCD_Command
 16887   006578                     
 16888                           ;LCM_S01604DSF.c: 49:     _delay((unsigned long)((2)*(64000000UL/4000.0)));
 16889   006578  0E2A               	movlw	42
 16890   00657A  0101               	movlb	1	; () banked
 16891   00657C  6F08               	movwf	??_LCD_Clear& (0+255),b
 16892   00657E  0E8D               	movlw	141
 16893   006580                     u9337:
 16894   006580  2EE8               	decfsz	wreg,f,c
 16895   006582  D7FE               	bra	u9337
 16896   006584  2F08               	decfsz	??_LCD_Clear& (0+255),f,b
 16897   006586  D7FC               	bra	u9337
 16898   006588  D000               	nop2	
 16899   00658A  0012               	return		;funcret
 16900   00658C                     __end_of_LCD_Clear:
 16901                           	callstack 0
 16902                           
 16903 ;; *************** function _LCD_Command *****************
 16904 ;; Defined at:
 16905 ;;		line 21 in file "LCM_S01604DSF.c"
 16906 ;; Parameters:    Size  Location     Type
 16907 ;;  cmd             1    wreg     unsigned char 
 16908 ;; Auto vars:     Size  Location     Type
 16909 ;;  cmd             1    7[BANK1 ] unsigned char 
 16910 ;; Return value:  Size  Location     Type
 16911 ;;                  1    wreg      void 
 16912 ;; Registers used:
 16913 ;;		wreg, cstack
 16914 ;; Tracked objects:
 16915 ;;		On entry : 0/0
 16916 ;;		On exit  : 0/0
 16917 ;;		Unchanged: 0/0
 16918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16919 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16920 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16921 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16922 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16923 ;;Total ram usage:        2 bytes
 16924 ;; Hardware stack levels used: 1
 16925 ;; Hardware stack levels required when called: 14
 16926 ;; This function calls:
 16927 ;;		_LCD_EnablePulse
 16928 ;; This function is called by:
 16929 ;;		_LCD_SetCursor
 16930 ;;		_LCD_Clear
 16931 ;;		_LCD_Init
 16932 ;; This function uses a non-reentrant model
 16933 ;;
 16934                           
 16935                           	psect	text49
 16936   006470                     __ptext49:
 16937                           	callstack 0
 16938   006470                     _LCD_Command:
 16939                           	callstack 14
 16940                           
 16941                           ;incstack = 0
 16942                           ;LCD_Command@cmd stored from wreg
 16943   006470  0101               	movlb	1	; () banked
 16944   006472  6F07               	movwf	LCD_Command@cmd& (0+255),b
 16945   006474  92BB               	bcf	187,1,c	;volatile
 16946   006476                     
 16947                           ;LCM_S01604DSF.c: 23:     LATC = cmd;
 16948   006476  0060  F41F  FFBC   	movff	LCD_Command@cmd,16316	;volatile
 16949   00647C                     
 16950                           ;LCM_S01604DSF.c: 24:     LCD_EnablePulse();
 16951   00647C  EC9D  F032         	call	_LCD_EnablePulse	;wreg free
 16952   006480                     
 16953                           ;LCM_S01604DSF.c: 25:     _delay((unsigned long)((2)*(64000000UL/4000.0)));
 16954   006480  0E2A               	movlw	42
 16955   006482  0101               	movlb	1	; () banked
 16956   006484  6F06               	movwf	??_LCD_Command& (0+255),b
 16957   006486  0E8D               	movlw	141
 16958   006488                     u9347:
 16959   006488  2EE8               	decfsz	wreg,f,c
 16960   00648A  D7FE               	bra	u9347
 16961   00648C  2F06               	decfsz	??_LCD_Command& (0+255),f,b
 16962   00648E  D7FC               	bra	u9347
 16963   006490  D000               	nop2	
 16964   006492  0012               	return		;funcret
 16965   006494                     __end_of_LCD_Command:
 16966                           	callstack 0
 16967                           
 16968 ;; *************** function _LCD_EnablePulse *****************
 16969 ;; Defined at:
 16970 ;;		line 14 in file "LCM_S01604DSF.c"
 16971 ;; Parameters:    Size  Location     Type
 16972 ;;		None
 16973 ;; Auto vars:     Size  Location     Type
 16974 ;;		None
 16975 ;; Return value:  Size  Location     Type
 16976 ;;                  1    wreg      void 
 16977 ;; Registers used:
 16978 ;;		wreg
 16979 ;; Tracked objects:
 16980 ;;		On entry : 0/0
 16981 ;;		On exit  : 0/0
 16982 ;;		Unchanged: 0/0
 16983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16984 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16985 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16986 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16987 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16988 ;;Total ram usage:        0 bytes
 16989 ;; Hardware stack levels used: 1
 16990 ;; Hardware stack levels required when called: 13
 16991 ;; This function calls:
 16992 ;;		Nothing
 16993 ;; This function is called by:
 16994 ;;		_LCD_Command
 16995 ;;		_LCD_Char
 16996 ;; This function uses a non-reentrant model
 16997 ;;
 16998                           
 16999                           	psect	text50
 17000   00653A                     __ptext50:
 17001                           	callstack 0
 17002   00653A                     _LCD_EnablePulse:
 17003                           	callstack 14
 17004   00653A  80BB               	bsf	187,0,c	;volatile
 17005   00653C                     
 17006                           ;LCM_S01604DSF.c: 16:     _delay((unsigned long)((1)*(64000000UL/4000000.0)));
 17007   00653C  0E05               	movlw	5
 17008   00653E                     u9357:
 17009   00653E  2EE8               	decfsz	wreg,f,c
 17010   006540  D7FE               	bra	u9357
 17011   006542  0000               	nop	
 17012   006544  90BB               	bcf	187,0,c	;volatile
 17013   006546                     
 17014                           ;LCM_S01604DSF.c: 18:     _delay((unsigned long)((100)*(64000000UL/4000000.0)));
 17015   006546  0EE4               	movlw	228
 17016   006548                     u9367:
 17017   006548  D000               	nop2	
 17018   00654A  D000               	nop2	
 17019   00654C  2EE8               	decfsz	wreg,f,c
 17020   00654E  D7FC               	bra	u9367
 17021   006550  D000               	nop2	
 17022   006552  D000               	nop2	
 17023   006554  0012               	return		;funcret
 17024   006556                     __end_of_LCD_EnablePulse:
 17025                           	callstack 0
 17026                           
 17027 ;; *************** function _INTERRUPT_InterruptManager *****************
 17028 ;; Defined at:
 17029 ;;		line 80 in file "mcc_generated_files/system/src/interrupt.c"
 17030 ;; Parameters:    Size  Location     Type
 17031 ;;		None
 17032 ;; Auto vars:     Size  Location     Type
 17033 ;;		None
 17034 ;; Return value:  Size  Location     Type
 17035 ;;                  1    wreg      void 
 17036 ;; Registers used:
 17037 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
 17038 ;; Tracked objects:
 17039 ;;		On entry : 0/0
 17040 ;;		On exit  : 0/0
 17041 ;;		Unchanged: 0/0
 17042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17043 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17044 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17045 ;;      Temps:          0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17046 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17047 ;;Total ram usage:        6 bytes
 17048 ;; Hardware stack levels used: 1
 17049 ;; Hardware stack levels required when called: 12
 17050 ;; This function calls:
 17051 ;;		_ADC_ISR
 17052 ;;		_ADC_ThresholdISR
 17053 ;;		_PIN_MANAGER_IOC
 17054 ;;		_TMR1_OverflowISR
 17055 ;; This function is called by:
 17056 ;;		Interrupt level 2
 17057 ;; This function uses a non-reentrant model
 17058 ;;
 17059                           
 17060                           	psect	text51
 17061   004D7C                     __ptext51:
 17062                           	callstack 0
 17063   004D7C                     _INTERRUPT_InterruptManager:
 17064                           	callstack 9
 17065                           
 17066                           ;incstack = 0
 17067   004D7C  006F FFE8  F100    	movff	pclath,??_INTERRUPT_InterruptManager
 17068   004D82  006F FFEC  F101    	movff	pclatu,??_INTERRUPT_InterruptManager+1
 17069   004D88  006F FFD8  F102    	movff	tblptrl,??_INTERRUPT_InterruptManager+2
 17070   004D8E  006F FFDC  F103    	movff	tblptrh,??_INTERRUPT_InterruptManager+3
 17071   004D94  006F FFE0  F104    	movff	tblptru,??_INTERRUPT_InterruptManager+4
 17072   004D9A  006F FFD4  F105    	movff	tablat,??_INTERRUPT_InterruptManager+5
 17073   004DA0                     
 17074                           ;mcc_generated_files/system/src/interrupt.c: 83:     if(PIE0bits.IOCIE == 1 && PIR0bits.
      +                          IOCIF == 1)
 17075   004DA0  0139               	movlb	57	; () banked
 17076   004DA2  AF90               	btfss	144,7,b	;volatile
 17077   004DA4  EFD6  F026         	goto	i2u923_41
 17078   004DA8  EFD8  F026         	goto	i2u923_40
 17079   004DAC                     i2u923_41:
 17080   004DAC  EFE3  F026         	goto	i2l542
 17081   004DB0                     i2u923_40:
 17082   004DB0                     
 17083                           ; BSR set to: 57
 17084   004DB0  AFA0               	btfss	160,7,b	;volatile
 17085   004DB2  EFDD  F026         	goto	i2u924_41
 17086   004DB6  EFDF  F026         	goto	i2u924_40
 17087   004DBA                     i2u924_41:
 17088   004DBA  EFE3  F026         	goto	i2l542
 17089   004DBE                     i2u924_40:
 17090   004DBE                     
 17091                           ; BSR set to: 57
 17092                           ;mcc_generated_files/system/src/interrupt.c: 84:     {;mcc_generated_files/system/src/in
      +                          terrupt.c: 85:         PIN_MANAGER_IOC();
 17093   004DBE  EC31  F031         	call	_PIN_MANAGER_IOC	;wreg free
 17094                           
 17095                           ;mcc_generated_files/system/src/interrupt.c: 86:     }
 17096   004DC2  EF19  F027         	goto	i2l550
 17097   004DC6                     i2l542:
 17098                           
 17099                           ; BSR set to: 57
 17100   004DC6  A591               	btfss	145,2,b	;volatile
 17101   004DC8  EFE8  F026         	goto	i2u925_41
 17102   004DCC  EFEA  F026         	goto	i2u925_40
 17103   004DD0                     i2u925_41:
 17104   004DD0  EFF5  F026         	goto	i2l544
 17105   004DD4                     i2u925_40:
 17106   004DD4                     
 17107                           ; BSR set to: 57
 17108   004DD4  A5A1               	btfss	161,2,b	;volatile
 17109   004DD6  EFEF  F026         	goto	i2u926_41
 17110   004DDA  EFF1  F026         	goto	i2u926_40
 17111   004DDE                     i2u926_41:
 17112   004DDE  EFF5  F026         	goto	i2l544
 17113   004DE2                     i2u926_40:
 17114   004DE2                     
 17115                           ; BSR set to: 57
 17116                           ;mcc_generated_files/system/src/interrupt.c: 88:     {;mcc_generated_files/system/src/in
      +                          terrupt.c: 89:         ADC_ISR();
 17117   004DE2  EC3C  F033         	call	_ADC_ISR	;wreg free
 17118                           
 17119                           ;mcc_generated_files/system/src/interrupt.c: 90:     }
 17120   004DE6  EF19  F027         	goto	i2l550
 17121   004DEA                     i2l544:
 17122                           
 17123                           ; BSR set to: 57
 17124   004DEA  A791               	btfss	145,3,b	;volatile
 17125   004DEC  EFFA  F026         	goto	i2u927_41
 17126   004DF0  EFFC  F026         	goto	i2u927_40
 17127   004DF4                     i2u927_41:
 17128   004DF4  EF07  F027         	goto	i2l546
 17129   004DF8                     i2u927_40:
 17130   004DF8                     
 17131                           ; BSR set to: 57
 17132   004DF8  A7A1               	btfss	161,3,b	;volatile
 17133   004DFA  EF01  F027         	goto	i2u928_41
 17134   004DFE  EF03  F027         	goto	i2u928_40
 17135   004E02                     i2u928_41:
 17136   004E02  EF07  F027         	goto	i2l546
 17137   004E06                     i2u928_40:
 17138   004E06                     
 17139                           ; BSR set to: 57
 17140                           ;mcc_generated_files/system/src/interrupt.c: 92:     {;mcc_generated_files/system/src/in
      +                          terrupt.c: 93:         ADC_ThresholdISR();
 17141   004E06  EC39  F033         	call	_ADC_ThresholdISR	;wreg free
 17142                           
 17143                           ;mcc_generated_files/system/src/interrupt.c: 94:     }
 17144   004E0A  EF19  F027         	goto	i2l550
 17145   004E0E                     i2l546:
 17146                           
 17147                           ; BSR set to: 57
 17148   004E0E  A194               	btfss	148,0,b	;volatile
 17149   004E10  EF0C  F027         	goto	i2u929_41
 17150   004E14  EF0E  F027         	goto	i2u929_40
 17151   004E18                     i2u929_41:
 17152   004E18  EF19  F027         	goto	i2l545
 17153   004E1C                     i2u929_40:
 17154   004E1C                     
 17155                           ; BSR set to: 57
 17156   004E1C  A1A4               	btfss	164,0,b	;volatile
 17157   004E1E  EF13  F027         	goto	i2u930_41
 17158   004E22  EF15  F027         	goto	i2u930_40
 17159   004E26                     i2u930_41:
 17160   004E26  EF19  F027         	goto	i2l545
 17161   004E2A                     i2u930_40:
 17162   004E2A                     
 17163                           ; BSR set to: 57
 17164                           ;mcc_generated_files/system/src/interrupt.c: 96:     {;mcc_generated_files/system/src/in
      +                          terrupt.c: 97:         TMR1_OverflowISR();
 17165   004E2A  EC12  F031         	call	_TMR1_OverflowISR	;wreg free
 17166                           
 17167                           ;mcc_generated_files/system/src/interrupt.c: 98:     }
 17168   004E2E  EF19  F027         	goto	i2l550
 17169   004E32                     i2l545:
 17170   004E32                     i2l550:
 17171   004E32  0060  F417  FFF5   	movff	??_INTERRUPT_InterruptManager+5,tablat
 17172   004E38  0060  F413  FFF8   	movff	??_INTERRUPT_InterruptManager+4,tblptru
 17173   004E3E  0060  F40F  FFF7   	movff	??_INTERRUPT_InterruptManager+3,tblptrh
 17174   004E44  0060  F40B  FFF6   	movff	??_INTERRUPT_InterruptManager+2,tblptrl
 17175   004E4A  0060  F407  FFFB   	movff	??_INTERRUPT_InterruptManager+1,pclatu
 17176   004E50  0060  F403  FFFA   	movff	??_INTERRUPT_InterruptManager,pclath
 17177   004E56  0011               	retfie		f
 17178   004E58                     __end_of_INTERRUPT_InterruptManager:
 17179                           	callstack 0
 17180                           
 17181 ;; *************** function _TMR1_OverflowISR *****************
 17182 ;; Defined at:
 17183 ;;		line 191 in file "mcc_generated_files/timer/src/tmr1.c"
 17184 ;; Parameters:    Size  Location     Type
 17185 ;;		None
 17186 ;; Auto vars:     Size  Location     Type
 17187 ;;		None
 17188 ;; Return value:  Size  Location     Type
 17189 ;;                  1    wreg      void 
 17190 ;; Registers used:
 17191 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 17192 ;; Tracked objects:
 17193 ;;		On entry : 0/0
 17194 ;;		On exit  : 0/0
 17195 ;;		Unchanged: 0/0
 17196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17197 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17198 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17199 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17200 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17201 ;;Total ram usage:        0 bytes
 17202 ;; Hardware stack levels used: 1
 17203 ;; Hardware stack levels required when called: 1
 17204 ;; This function calls:
 17205 ;;		NULL
 17206 ;;		_TMR1_CounterSet
 17207 ;;		_TMR1_DefaultOverflowCallback
 17208 ;;		_TMR1_handler
 17209 ;; This function is called by:
 17210 ;;		_INTERRUPT_InterruptManager
 17211 ;; This function uses a non-reentrant model
 17212 ;;
 17213                           
 17214                           	psect	text52
 17215   006224                     __ptext52:
 17216                           	callstack 0
 17217   006224                     _TMR1_OverflowISR:
 17218                           	callstack 19
 17219   006224                     
 17220                           ;mcc_generated_files/timer/src/tmr1.c: 194:     TMR1_CounterSet(timer1ReloadVal);
 17221   006224  C0E3  F001         	movff	_timer1ReloadVal,TMR1_CounterSet@timerVal	;volatile
 17222   006228  C0E4  F002         	movff	_timer1ReloadVal+1,TMR1_CounterSet@timerVal+1	;volatile
 17223   00622C  EC27  F030         	call	_TMR1_CounterSet	;wreg free
 17224   006230                     
 17225                           ;mcc_generated_files/timer/src/tmr1.c: 197:     if(((void*)0) != TMR1_OverflowCallback)
 17226   006230  0100               	movlb	0	; () banked
 17227   006232  51ED               	movf	_TMR1_OverflowCallback& (0+255),w,b
 17228   006234  11EE               	iorwf	(_TMR1_OverflowCallback+1)& (0+255),w,b
 17229   006236  B4D8               	btfsc	status,2,c
 17230   006238  EF20  F031         	goto	i2u877_41
 17231   00623C  EF22  F031         	goto	i2u877_40
 17232   006240                     i2u877_41:
 17233   006240  EF2E  F031         	goto	i2l8114
 17234   006244                     i2u877_40:
 17235   006244                     
 17236                           ; BSR set to: 0
 17237                           ;mcc_generated_files/timer/src/tmr1.c: 198:     {;mcc_generated_files/timer/src/tmr1.c: 
      +                          199:         TMR1_OverflowCallback();
 17238   006244  D802               	call	i2u878_48
 17239   006246  EF2E  F031         	goto	i2u878_49
 17240   00624A                     i2u878_48:
 17241   00624A  0005               	push	
 17242   00624C  6EFA               	movwf	pclath,c
 17243   00624E  51ED               	movf	_TMR1_OverflowCallback& (0+255),w,b
 17244   006250  6EFD               	movwf	tosl,c
 17245   006252  51EE               	movf	(_TMR1_OverflowCallback+1)& (0+255),w,b
 17246   006254  6EFE               	movwf	tosh,c
 17247   006256  6AFF               	clrf	tosu,c
 17248   006258  50FA               	movf	pclath,w,c
 17249   00625A  0012               	return		;indir
 17250   00625C                     i2u878_49:
 17251   00625C                     i2l8114:
 17252                           
 17253                           ;mcc_generated_files/timer/src/tmr1.c: 201:     PIR4bits.TMR1IF = 0U;
 17254   00625C  0139               	movlb	57	; () banked
 17255   00625E  91A4               	bcf	164,0,b	;volatile
 17256   006260                     
 17257                           ; BSR set to: 57
 17258   006260  0012               	return		;funcret
 17259   006262                     __end_of_TMR1_OverflowISR:
 17260                           	callstack 0
 17261                           
 17262 ;; *************** function _TMR1_DefaultOverflowCallback *****************
 17263 ;; Defined at:
 17264 ;;		line 226 in file "mcc_generated_files/timer/src/tmr1.c"
 17265 ;; Parameters:    Size  Location     Type
 17266 ;;		None
 17267 ;; Auto vars:     Size  Location     Type
 17268 ;;		None
 17269 ;; Return value:  Size  Location     Type
 17270 ;;                  1    wreg      void 
 17271 ;; Registers used:
 17272 ;;		None
 17273 ;; Tracked objects:
 17274 ;;		On entry : 0/0
 17275 ;;		On exit  : 0/0
 17276 ;;		Unchanged: 0/0
 17277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17278 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17279 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17280 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17281 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17282 ;;Total ram usage:        0 bytes
 17283 ;; Hardware stack levels used: 1
 17284 ;; This function calls:
 17285 ;;		Nothing
 17286 ;; This function is called by:
 17287 ;;		_TMR1_Initialize
 17288 ;;		_TMR1_OverflowISR
 17289 ;; This function uses a non-reentrant model
 17290 ;;
 17291                           
 17292                           	psect	text53
 17293   006680                     __ptext53:
 17294                           	callstack 0
 17295   006680                     _TMR1_DefaultOverflowCallback:
 17296                           	callstack 19
 17297   006680  0012               	return		;funcret
 17298   006682                     __end_of_TMR1_DefaultOverflowCallback:
 17299                           	callstack 0
 17300                           
 17301 ;; *************** function _TMR1_handler *****************
 17302 ;; Defined at:
 17303 ;;		line 409 in file "main.c"
 17304 ;; Parameters:    Size  Location     Type
 17305 ;;		None
 17306 ;; Auto vars:     Size  Location     Type
 17307 ;;		None
 17308 ;; Return value:  Size  Location     Type
 17309 ;;                  1    wreg      void 
 17310 ;; Registers used:
 17311 ;;		wreg, status,2, status,0
 17312 ;; Tracked objects:
 17313 ;;		On entry : 0/0
 17314 ;;		On exit  : 0/0
 17315 ;;		Unchanged: 0/0
 17316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17317 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17318 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17319 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17320 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17321 ;;Total ram usage:        2 bytes
 17322 ;; Hardware stack levels used: 1
 17323 ;; This function calls:
 17324 ;;		Nothing
 17325 ;; This function is called by:
 17326 ;;		_main
 17327 ;;		_TMR1_OverflowISR
 17328 ;; This function uses a non-reentrant model
 17329 ;;
 17330                           
 17331                           	psect	text54
 17332   005EE0                     __ptext54:
 17333                           	callstack 0
 17334   005EE0                     _TMR1_handler:
 17335                           	callstack 19
 17336   005EE0                     
 17337                           ;main.c: 411:     static uint16_t timer_1s = 0;;main.c: 413:     if( timer_1s ++ > 10){
 17338   005EE0  0100               	movlb	0	; () banked
 17339   005EE2  51E1               	movf	TMR1_handler@timer_1s& (0+255),w,b
 17340   005EE4  6E01               	movwf	??_TMR1_handler^0,c
 17341   005EE6  51E2               	movf	(TMR1_handler@timer_1s+1)& (0+255),w,b
 17342   005EE8  6E02               	movwf	(??_TMR1_handler+1)^0,c
 17343   005EEA  4BE1               	infsnz	TMR1_handler@timer_1s& (0+255),f,b
 17344   005EEC  2BE2               	incf	(TMR1_handler@timer_1s+1)& (0+255),f,b
 17345   005EEE  5002               	movf	(??_TMR1_handler+1)^0,w,c
 17346   005EF0  E109               	bnz	i2u872_40
 17347   005EF2  0E0B               	movlw	11
 17348   005EF4  5C01               	subwf	??_TMR1_handler^0,w,c
 17349   005EF6  A0D8               	btfss	status,0,c
 17350   005EF8  EF80  F02F         	goto	i2u872_41
 17351   005EFC  EF82  F02F         	goto	i2u872_40
 17352   005F00                     i2u872_41:
 17353   005F00  EF96  F02F         	goto	i2l870
 17354   005F04                     i2u872_40:
 17355   005F04                     
 17356                           ; BSR set to: 0
 17357                           ;main.c: 414:         timer_1s = 0;
 17358   005F04  0E00               	movlw	0
 17359   005F06  6FE2               	movwf	(TMR1_handler@timer_1s+1)& (0+255),b
 17360   005F08  0E00               	movlw	0
 17361   005F0A  6FE1               	movwf	TMR1_handler@timer_1s& (0+255),b
 17362   005F0C                     
 17363                           ; BSR set to: 0
 17364   005F0C  B0BA               	btfsc	186,0,c	;volatile
 17365   005F0E  EF8B  F02F         	goto	i2u873_41
 17366   005F12  EF8E  F02F         	goto	i2u873_40
 17367   005F16                     i2u873_41:
 17368   005F16  0E01               	movlw	1
 17369   005F18  EF8F  F02F         	goto	i2u873_46
 17370   005F1C                     i2u873_40:
 17371   005F1C  0E00               	movlw	0
 17372   005F1E                     i2u873_46:
 17373   005F1E  0AFF               	xorlw	255
 17374   005F20  6E01               	movwf	??_TMR1_handler^0,c
 17375   005F22  50BA               	movf	186,w,c	;volatile
 17376   005F24  1801               	xorwf	??_TMR1_handler^0,w,c
 17377   005F26  0BFE               	andlw	-2
 17378   005F28  1801               	xorwf	??_TMR1_handler^0,w,c
 17379   005F2A  6EBA               	movwf	186,c	;volatile
 17380   005F2C                     i2l870:
 17381                           
 17382                           ; BSR set to: 0
 17383   005F2C  0012               	return		;funcret
 17384   005F2E                     __end_of_TMR1_handler:
 17385                           	callstack 0
 17386                           
 17387 ;; *************** function _TMR1_CounterSet *****************
 17388 ;; Defined at:
 17389 ;;		line 122 in file "mcc_generated_files/timer/src/tmr1.c"
 17390 ;; Parameters:    Size  Location     Type
 17391 ;;  timerVal        2    0[COMRAM] unsigned short 
 17392 ;; Auto vars:     Size  Location     Type
 17393 ;;  onState         1    2[COMRAM] _Bool 
 17394 ;; Return value:  Size  Location     Type
 17395 ;;                  1    wreg      void 
 17396 ;; Registers used:
 17397 ;;		wreg, status,2
 17398 ;; Tracked objects:
 17399 ;;		On entry : 0/0
 17400 ;;		On exit  : 0/0
 17401 ;;		Unchanged: 0/0
 17402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17403 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17404 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17405 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17406 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17407 ;;Total ram usage:        3 bytes
 17408 ;; Hardware stack levels used: 1
 17409 ;; This function calls:
 17410 ;;		Nothing
 17411 ;; This function is called by:
 17412 ;;		_TMR1_OverflowISR
 17413 ;;		_TMR1_Reload
 17414 ;; This function uses a non-reentrant model
 17415 ;;
 17416                           
 17417                           	psect	text55
 17418   00604E                     __ptext55:
 17419                           	callstack 0
 17420   00604E                     _TMR1_CounterSet:
 17421                           	callstack 19
 17422   00604E                     
 17423                           ;mcc_generated_files/timer/src/tmr1.c: 122: void TMR1_CounterSet(uint16_t timerVal);mcc_
      +                          generated_files/timer/src/tmr1.c: 123: {;mcc_generated_files/timer/src/tmr1.c: 124:     
      +                          if (1U == T1CONbits.nT1SYNC)
 17424   00604E  A4B2               	btfss	178,2,c	;volatile
 17425   006050  EF2C  F030         	goto	i2u869_41
 17426   006054  EF2E  F030         	goto	i2u869_40
 17427   006058                     i2u869_41:
 17428   006058  EF44  F030         	goto	i2l8040
 17429   00605C                     i2u869_40:
 17430   00605C                     
 17431                           ;mcc_generated_files/timer/src/tmr1.c: 125:     {;mcc_generated_files/timer/src/tmr1.c: 
      +                          126:         _Bool onState = T1CONbits.TMR1ON;
 17432   00605C  B0B2               	btfsc	178,0,c	;volatile
 17433   00605E  EF33  F030         	goto	i2u870_41
 17434   006062  EF36  F030         	goto	i2u870_40
 17435   006066                     i2u870_41:
 17436   006066  0E01               	movlw	1
 17437   006068  EF37  F030         	goto	i2u870_46
 17438   00606C                     i2u870_40:
 17439   00606C  0E00               	movlw	0
 17440   00606E                     i2u870_46:
 17441   00606E  6E03               	movwf	TMR1_CounterSet@onState^0,c
 17442                           
 17443                           ;mcc_generated_files/timer/src/tmr1.c: 128:         TMR1H = (uint8_t)(timerVal >> 8U);
 17444   006070  5002               	movf	(TMR1_CounterSet@timerVal+1)^0,w,c
 17445   006072  6EB1               	movwf	177,c	;volatile
 17446   006074                     
 17447                           ;mcc_generated_files/timer/src/tmr1.c: 129:         TMR1L = (uint8_t)timerVal;
 17448   006074  0060  F007  FFB0   	movff	TMR1_CounterSet@timerVal,16304	;volatile
 17449   00607A                     
 17450                           ;mcc_generated_files/timer/src/tmr1.c: 131:         T1CONbits.TMR1ON = onState;
 17451   00607A  B003               	btfsc	TMR1_CounterSet@onState^0,0,c
 17452   00607C  D002               	bra	i2u871_45
 17453   00607E  90B2               	bcf	178,0,c	;volatile
 17454   006080  D001               	bra	i2u871_46
 17455   006082                     i2u871_45:
 17456   006082  80B2               	bsf	178,0,c	;volatile
 17457   006084                     i2u871_46:
 17458                           
 17459                           ;mcc_generated_files/timer/src/tmr1.c: 132:     }
 17460   006084  EF49  F030         	goto	i2l639
 17461   006088                     i2l8040:
 17462                           
 17463                           ;mcc_generated_files/timer/src/tmr1.c: 134:     {;mcc_generated_files/timer/src/tmr1.c: 
      +                          135:         TMR1H = (uint8_t)(timerVal >> 8U);
 17464   006088  5002               	movf	(TMR1_CounterSet@timerVal+1)^0,w,c
 17465   00608A  6EB1               	movwf	177,c	;volatile
 17466   00608C                     
 17467                           ;mcc_generated_files/timer/src/tmr1.c: 136:         TMR1L = (uint8_t)timerVal;
 17468   00608C  0060  F007  FFB0   	movff	TMR1_CounterSet@timerVal,16304	;volatile
 17469   006092                     i2l639:
 17470   006092  0012               	return		;funcret
 17471   006094                     __end_of_TMR1_CounterSet:
 17472                           	callstack 0
 17473                           
 17474 ;; *************** function _PIN_MANAGER_IOC *****************
 17475 ;; Defined at:
 17476 ;;		line 129 in file "mcc_generated_files/system/src/pins.c"
 17477 ;; Parameters:    Size  Location     Type
 17478 ;;		None
 17479 ;; Auto vars:     Size  Location     Type
 17480 ;;		None
 17481 ;; Return value:  Size  Location     Type
 17482 ;;                  1    wreg      void 
 17483 ;; Registers used:
 17484 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
 17485 ;; Tracked objects:
 17486 ;;		On entry : 0/0
 17487 ;;		On exit  : 0/0
 17488 ;;		Unchanged: 0/0
 17489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17490 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17491 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17492 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17493 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17494 ;;Total ram usage:        0 bytes
 17495 ;; Hardware stack levels used: 1
 17496 ;; Hardware stack levels required when called: 11
 17497 ;; This function calls:
 17498 ;;		_BP1_ISR
 17499 ;;		_BP2_ISR
 17500 ;;		_BP3_ISR
 17501 ;; This function is called by:
 17502 ;;		_INTERRUPT_InterruptManager
 17503 ;; This function uses a non-reentrant model
 17504 ;;
 17505                           
 17506                           	psect	text56
 17507   006262                     __ptext56:
 17508                           	callstack 0
 17509   006262                     _PIN_MANAGER_IOC:
 17510                           	callstack 9
 17511   006262                     
 17512                           ;mcc_generated_files/system/src/pins.c: 132:     if(IOCAFbits.IOCAF1 == 1)
 17513   006262  013A               	movlb	58	; () banked
 17514   006264  A347               	btfss	71,1,b	;volatile
 17515   006266  EF37  F031         	goto	i2u920_41
 17516   00626A  EF39  F031         	goto	i2u920_40
 17517   00626E                     i2u920_41:
 17518   00626E  EF3B  F031         	goto	i2l8722
 17519   006272                     i2u920_40:
 17520   006272                     
 17521                           ; BSR set to: 58
 17522                           ;mcc_generated_files/system/src/pins.c: 133:     {;mcc_generated_files/system/src/pins.c
      +                          : 134:         BP1_ISR();
 17523   006272  EC0D  F032         	call	_BP1_ISR	;wreg free
 17524   006276                     i2l8722:
 17525                           
 17526                           ;mcc_generated_files/system/src/pins.c: 137:     if(IOCAFbits.IOCAF2 == 1)
 17527   006276  013A               	movlb	58	; () banked
 17528   006278  A547               	btfss	71,2,b	;volatile
 17529   00627A  EF41  F031         	goto	i2u921_41
 17530   00627E  EF43  F031         	goto	i2u921_40
 17531   006282                     i2u921_41:
 17532   006282  EF45  F031         	goto	i2l8726
 17533   006286                     i2u921_40:
 17534   006286                     
 17535                           ; BSR set to: 58
 17536                           ;mcc_generated_files/system/src/pins.c: 138:     {;mcc_generated_files/system/src/pins.c
      +                          : 139:         BP2_ISR();
 17537   006286  ECF4  F031         	call	_BP2_ISR	;wreg free
 17538   00628A                     i2l8726:
 17539                           
 17540                           ;mcc_generated_files/system/src/pins.c: 142:     if(IOCAFbits.IOCAF3 == 1)
 17541   00628A  013A               	movlb	58	; () banked
 17542   00628C  A747               	btfss	71,3,b	;volatile
 17543   00628E  EF4B  F031         	goto	i2u922_41
 17544   006292  EF4D  F031         	goto	i2u922_40
 17545   006296                     i2u922_41:
 17546   006296  EF4F  F031         	goto	i2l454
 17547   00629A                     i2u922_40:
 17548   00629A                     
 17549                           ; BSR set to: 58
 17550                           ;mcc_generated_files/system/src/pins.c: 143:     {;mcc_generated_files/system/src/pins.c
      +                          : 144:         BP3_ISR();
 17551   00629A  ECDB  F031         	call	_BP3_ISR	;wreg free
 17552   00629E                     i2l454:
 17553   00629E  0012               	return		;funcret
 17554   0062A0                     __end_of_PIN_MANAGER_IOC:
 17555                           	callstack 0
 17556                           
 17557 ;; *************** function _BP3_ISR *****************
 17558 ;; Defined at:
 17559 ;;		line 211 in file "mcc_generated_files/system/src/pins.c"
 17560 ;; Parameters:    Size  Location     Type
 17561 ;;		None
 17562 ;; Auto vars:     Size  Location     Type
 17563 ;;		None
 17564 ;; Return value:  Size  Location     Type
 17565 ;;                  1    wreg      void 
 17566 ;; Registers used:
 17567 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
 17568 ;; Tracked objects:
 17569 ;;		On entry : 0/0
 17570 ;;		On exit  : 0/0
 17571 ;;		Unchanged: 0/0
 17572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17573 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17574 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17575 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17576 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17577 ;;Total ram usage:        0 bytes
 17578 ;; Hardware stack levels used: 1
 17579 ;; Hardware stack levels required when called: 10
 17580 ;; This function calls:
 17581 ;;		NULL
 17582 ;;		_BP3_DefaultInterruptHandler
 17583 ;;		_int_BP3
 17584 ;; This function is called by:
 17585 ;;		_PIN_MANAGER_IOC
 17586 ;; This function uses a non-reentrant model
 17587 ;;
 17588                           
 17589                           	psect	text57
 17590   0063B6                     __ptext57:
 17591                           	callstack 0
 17592   0063B6                     _BP3_ISR:
 17593                           	callstack 9
 17594   0063B6                     
 17595                           ;mcc_generated_files/system/src/pins.c: 216:     if(BP3_InterruptHandler)
 17596   0063B6  0100               	movlb	0	; () banked
 17597   0063B8  51F5               	movf	_BP3_InterruptHandler& (0+255),w,b
 17598   0063BA  11F6               	iorwf	(_BP3_InterruptHandler+1)& (0+255),w,b
 17599   0063BC  B4D8               	btfsc	status,2,c
 17600   0063BE  EFE3  F031         	goto	i2u918_41
 17601   0063C2  EFE5  F031         	goto	i2u918_40
 17602   0063C6                     i2u918_41:
 17603   0063C6  EFF1  F031         	goto	i2l8716
 17604   0063CA                     i2u918_40:
 17605   0063CA                     
 17606                           ; BSR set to: 0
 17607                           ;mcc_generated_files/system/src/pins.c: 217:     {;mcc_generated_files/system/src/pins.c
      +                          : 218:         BP3_InterruptHandler();
 17608   0063CA  D802               	call	i2u919_48
 17609   0063CC  EFF1  F031         	goto	i2u919_49
 17610   0063D0                     i2u919_48:
 17611   0063D0  0005               	push	
 17612   0063D2  6EFA               	movwf	pclath,c
 17613   0063D4  51F5               	movf	_BP3_InterruptHandler& (0+255),w,b
 17614   0063D6  6EFD               	movwf	tosl,c
 17615   0063D8  51F6               	movf	(_BP3_InterruptHandler+1)& (0+255),w,b
 17616   0063DA  6EFE               	movwf	tosh,c
 17617   0063DC  6AFF               	clrf	tosu,c
 17618   0063DE  50FA               	movf	pclath,w,c
 17619   0063E0  0012               	return		;indir
 17620   0063E2                     i2u919_49:
 17621   0063E2                     i2l8716:
 17622                           
 17623                           ;mcc_generated_files/system/src/pins.c: 220:     IOCAFbits.IOCAF3 = 0;
 17624   0063E2  013A               	movlb	58	; () banked
 17625   0063E4  9747               	bcf	71,3,b	;volatile
 17626   0063E6                     
 17627                           ; BSR set to: 58
 17628   0063E6  0012               	return		;funcret
 17629   0063E8                     __end_of_BP3_ISR:
 17630                           	callstack 0
 17631                           
 17632 ;; *************** function _BP3_DefaultInterruptHandler *****************
 17633 ;; Defined at:
 17634 ;;		line 233 in file "mcc_generated_files/system/src/pins.c"
 17635 ;; Parameters:    Size  Location     Type
 17636 ;;		None
 17637 ;; Auto vars:     Size  Location     Type
 17638 ;;		None
 17639 ;; Return value:  Size  Location     Type
 17640 ;;                  1    wreg      void 
 17641 ;; Registers used:
 17642 ;;		None
 17643 ;; Tracked objects:
 17644 ;;		On entry : 0/0
 17645 ;;		On exit  : 0/0
 17646 ;;		Unchanged: 0/0
 17647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17648 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17649 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17650 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17651 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17652 ;;Total ram usage:        0 bytes
 17653 ;; Hardware stack levels used: 1
 17654 ;; This function calls:
 17655 ;;		Nothing
 17656 ;; This function is called by:
 17657 ;;		_PIN_MANAGER_Initialize
 17658 ;;		_BP3_ISR
 17659 ;; This function uses a non-reentrant model
 17660 ;;
 17661                           
 17662                           	psect	text58
 17663   006682                     __ptext58:
 17664                           	callstack 0
 17665   006682                     _BP3_DefaultInterruptHandler:
 17666                           	callstack 18
 17667   006682  0012               	return		;funcret
 17668   006684                     __end_of_BP3_DefaultInterruptHandler:
 17669                           	callstack 0
 17670                           
 17671 ;; *************** function _int_BP3 *****************
 17672 ;; Defined at:
 17673 ;;		line 385 in file "main.c"
 17674 ;; Parameters:    Size  Location     Type
 17675 ;;		None
 17676 ;; Auto vars:     Size  Location     Type
 17677 ;;		None
 17678 ;; Return value:  Size  Location     Type
 17679 ;;                  1    wreg      void 
 17680 ;; Registers used:
 17681 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 17682 ;; Tracked objects:
 17683 ;;		On entry : 0/0
 17684 ;;		On exit  : 0/0
 17685 ;;		Unchanged: 0/0
 17686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17687 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17688 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17689 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17690 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17691 ;;Total ram usage:        2 bytes
 17692 ;; Hardware stack levels used: 1
 17693 ;; Hardware stack levels required when called: 9
 17694 ;; This function calls:
 17695 ;;		_appliquer_action
 17696 ;;		i2_LCD_UpdateMenu
 17697 ;; This function is called by:
 17698 ;;		_main
 17699 ;;		_BP3_ISR
 17700 ;; This function uses a non-reentrant model
 17701 ;;
 17702                           
 17703                           	psect	text59
 17704   006494                     __ptext59:
 17705                           	callstack 0
 17706   006494                     _int_BP3:
 17707                           	callstack 9
 17708   006494                     
 17709                           ;main.c: 386:     _delay((unsigned long)((40)*(64000000U/4000.0)));
 17710   006494  0E04               	movlw	4
 17711   006496  0100               	movlb	0	; () banked
 17712   006498  6FD4               	movwf	(??_int_BP3+1)& (0+255),b
 17713   00649A  0E40               	movlw	64
 17714   00649C  6FD3               	movwf	??_int_BP3& (0+255),b
 17715   00649E  0E26               	movlw	38
 17716   0064A0                     i2u937_47:
 17717   0064A0  2EE8               	decfsz	wreg,f,c
 17718   0064A2  D7FE               	bra	i2u937_47
 17719   0064A4  2FD3               	decfsz	??_int_BP3& (0+255),f,b
 17720   0064A6  D7FC               	bra	i2u937_47
 17721   0064A8  2FD4               	decfsz	(??_int_BP3+1)& (0+255),f,b
 17722   0064AA  D7FA               	bra	i2u937_47
 17723   0064AC  0000               	nop	
 17724   0064AE                     
 17725                           ;main.c: 387:     appliquer_action();
 17726   0064AE  ECEF  F02A         	call	_appliquer_action	;wreg free
 17727   0064B2                     
 17728                           ;main.c: 388:     LCD_UpdateMenu();
 17729   0064B2  ECBE  F019         	call	i2_LCD_UpdateMenu	;wreg free
 17730   0064B6  0012               	return		;funcret
 17731   0064B8                     __end_of_int_BP3:
 17732                           	callstack 0
 17733                           
 17734 ;; *************** function _appliquer_action *****************
 17735 ;; Defined at:
 17736 ;;		line 394 in file "main.c"
 17737 ;; Parameters:    Size  Location     Type
 17738 ;;		None
 17739 ;; Auto vars:     Size  Location     Type
 17740 ;;  color           3   33[COMRAM] struct GRB
 17741 ;; Return value:  Size  Location     Type
 17742 ;;                  1    wreg      void 
 17743 ;; Registers used:
 17744 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 17745 ;; Tracked objects:
 17746 ;;		On entry : 0/0
 17747 ;;		On exit  : 0/0
 17748 ;;		Unchanged: 0/0
 17749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17750 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17751 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17752 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17753 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17754 ;;Total ram usage:        7 bytes
 17755 ;; Hardware stack levels used: 1
 17756 ;; Hardware stack levels required when called: 5
 17757 ;; This function calls:
 17758 ;;		_off_leds
 17759 ;;		_on_leds
 17760 ;; This function is called by:
 17761 ;;		_int_BP3
 17762 ;; This function uses a non-reentrant model
 17763 ;;
 17764                           
 17765                           	psect	text60
 17766   0055DE                     __ptext60:
 17767                           	callstack 0
 17768   0055DE                     _appliquer_action:
 17769                           	callstack 12
 17770   0055DE                     
 17771                           ;main.c: 395:     if (etat_courant >= ICLED_COULEUR1 && etat_courant <= ICLED_COULEUR8) 
      +                          {
 17772   0055DE  0E03               	movlw	3
 17773   0055E0  0100               	movlb	0	; () banked
 17774   0055E2  65EB               	cpfsgt	_etat_courant& (0+255),b
 17775   0055E4  EFF6  F02A         	goto	i2u829_41
 17776   0055E8  EFF8  F02A         	goto	i2u829_40
 17777   0055EC                     i2u829_41:
 17778   0055EC  EF2C  F02B         	goto	i2l7518
 17779   0055F0                     i2u829_40:
 17780   0055F0                     
 17781                           ; BSR set to: 0
 17782   0055F0  0E0C               	movlw	12
 17783   0055F2  61EB               	cpfslt	_etat_courant& (0+255),b
 17784   0055F4  EFFE  F02A         	goto	i2u830_41
 17785   0055F8  EF00  F02B         	goto	i2u830_40
 17786   0055FC                     i2u830_41:
 17787   0055FC  EF2C  F02B         	goto	i2l7518
 17788   005600                     i2u830_40:
 17789   005600                     
 17790                           ; BSR set to: 0
 17791                           ;main.c: 396:         GRB color = COLORS_TAB[etat_courant - ICLED_COULEUR1];
 17792   005600  51EB               	movf	_etat_courant& (0+255),w,b
 17793   005602  0D03               	mullw	3
 17794   005604  006F FFCC  F01E    	movff	prodl,??_appliquer_action
 17795   00560A  006F FFD0  F01F    	movff	prodh,??_appliquer_action+1
 17796   005610  0EF4               	movlw	244
 17797   005612  241E               	addwf	??_appliquer_action^0,w,c
 17798   005614  6E20               	movwf	(??_appliquer_action+2)^0,c
 17799   005616  0EFF               	movlw	255
 17800   005618  201F               	addwfc	(??_appliquer_action+1)^0,w,c
 17801   00561A  6E21               	movwf	(??_appliquer_action+3)^0,c
 17802   00561C  0EED               	movlw	low _COLORS_TAB
 17803   00561E  2420               	addwf	(??_appliquer_action+2)^0,w,c
 17804   005620  6EF6               	movwf	tblptrl,c
 17805   005622  0EFE               	movlw	high _COLORS_TAB
 17806   005624  2021               	addwfc	(??_appliquer_action+3)^0,w,c
 17807   005626  6EF7               	movwf	tblptrh,c
 17808   005628                     	if	1	;There are 3 active tblptr bytes
 17809   005628  6AF8               	clrf	tblptru,c
 17810   00562A  0E00               	movlw	low (__mediumconst shr (0+16))
 17811   00562C  22F8               	addwfc	tblptru,f,c
 17812   00562E                     	endif
 17813   00562E  0009               	tblrd		*+
 17814   005630  006F FFD4  F022    	movff	tablat,appliquer_action@color
 17815   005636  0009               	tblrd		*+
 17816   005638  006F FFD4  F023    	movff	tablat,appliquer_action@color+1
 17817   00563E  000A               	tblrd		*-
 17818   005640  006F FFD4  F024    	movff	tablat,appliquer_action@color+2
 17819   005646                     
 17820                           ; BSR set to: 0
 17821                           ;main.c: 397:         on_leds(color.red, color.green, color.blue);
 17822   005646  C022  F015         	movff	appliquer_action@color,on_leds@g
 17823   00564A  C024  F016         	movff	appliquer_action@color+2,on_leds@b
 17824   00564E  5023               	movf	(appliquer_action@color+1)^0,w,c
 17825   005650  EC05  F028         	call	_on_leds
 17826                           
 17827                           ;main.c: 398:     } else if (etat_courant == Eteindre) {
 17828   005654  EF44  F02B         	goto	i2l862
 17829   005658                     i2l7518:
 17830                           
 17831                           ; BSR set to: 0
 17832   005658  0E0C               	movlw	12
 17833   00565A  19EB               	xorwf	_etat_courant& (0+255),w,b
 17834   00565C  A4D8               	btfss	status,2,c
 17835   00565E  EF33  F02B         	goto	i2u831_41
 17836   005662  EF35  F02B         	goto	i2u831_40
 17837   005666                     i2u831_41:
 17838   005666  EF39  F02B         	goto	i2l7522
 17839   00566A                     i2u831_40:
 17840   00566A                     
 17841                           ; BSR set to: 0
 17842                           ;main.c: 399:         off_leds();
 17843   00566A  EC8D  F029         	call	_off_leds	;wreg free
 17844                           
 17845                           ;main.c: 400:     } else if (etat_courant == MENU_COURANT) {
 17846   00566E  EF44  F02B         	goto	i2l862
 17847   005672                     i2l7522:
 17848                           
 17849                           ; BSR set to: 0
 17850   005672  0E02               	movlw	2
 17851   005674  19EB               	xorwf	_etat_courant& (0+255),w,b
 17852   005676  A4D8               	btfss	status,2,c
 17853   005678  EF40  F02B         	goto	i2u832_41
 17854   00567C  EF42  F02B         	goto	i2u832_40
 17855   005680                     i2u832_41:
 17856   005680  EF44  F02B         	goto	i2l862
 17857   005684                     i2u832_40:
 17858   005684                     
 17859                           ; BSR set to: 0
 17860                           ;main.c: 401:         etat_courant = MESURE_COURANT;
 17861   005684  0E0D               	movlw	13
 17862   005686  6FEB               	movwf	_etat_courant& (0+255),b
 17863   005688                     i2l862:
 17864   005688  0012               	return		;funcret
 17865   00568A                     __end_of_appliquer_action:
 17866                           	callstack 0
 17867                           
 17868 ;; *************** function _on_leds *****************
 17869 ;; Defined at:
 17870 ;;		line 231 in file "main.c"
 17871 ;; Parameters:    Size  Location     Type
 17872 ;;  r               1    wreg     unsigned char 
 17873 ;;  g               1   20[COMRAM] unsigned char 
 17874 ;;  b               1   21[COMRAM] unsigned char 
 17875 ;; Auto vars:     Size  Location     Type
 17876 ;;  r               1   26[COMRAM] unsigned char 
 17877 ;;  j               1   28[COMRAM] unsigned char 
 17878 ;;  i               1   27[COMRAM] unsigned char 
 17879 ;; Return value:  Size  Location     Type
 17880 ;;                  1    wreg      void 
 17881 ;; Registers used:
 17882 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17883 ;; Tracked objects:
 17884 ;;		On entry : 0/0
 17885 ;;		On exit  : 0/0
 17886 ;;		Unchanged: 0/0
 17887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17888 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17889 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17890 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17891 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17892 ;;Total ram usage:        9 bytes
 17893 ;; Hardware stack levels used: 1
 17894 ;; Hardware stack levels required when called: 4
 17895 ;; This function calls:
 17896 ;;		_send_leds
 17897 ;; This function is called by:
 17898 ;;		_appliquer_action
 17899 ;; This function uses a non-reentrant model
 17900 ;;
 17901                           
 17902                           	psect	text61
 17903   00500A                     __ptext61:
 17904                           	callstack 0
 17905   00500A                     _on_leds:
 17906                           	callstack 12
 17907                           
 17908                           ;incstack = 0
 17909                           ;on_leds@r stored from wreg
 17910   00500A  6E1B               	movwf	on_leds@r^0,c
 17911   00500C                     
 17912                           ;main.c: 232:     uint8_t i = 0;
 17913   00500C  6A1C               	clrf	on_leds@i^0,c
 17914                           
 17915                           ;main.c: 234:     for(i = 0 ; i< 12 ; i++ ){
 17916   00500E  6A1C               	clrf	on_leds@i^0,c
 17917   005010                     i2l777:
 17918                           
 17919                           ;main.c: 235:         for(j= 0 ; j< 12 ; j++ ){
 17920   005010  6A1D               	clrf	on_leds@j^0,c
 17921   005012                     i2l7166:
 17922                           
 17923                           ;main.c: 236:             matrix_tab[i][j].red = r;
 17924   005012  501D               	movf	on_leds@j^0,w,c
 17925   005014  0D03               	mullw	3
 17926   005016  006F FFCC  F017    	movff	prodl,??_on_leds
 17927   00501C  006F FFD0  F018    	movff	prodh,??_on_leds+1
 17928   005022  501C               	movf	on_leds@i^0,w,c
 17929   005024  0D24               	mullw	36
 17930   005026  0E51               	movlw	low (_matrix_tab+1)
 17931   005028  24F3               	addwf	243,w,c
 17932   00502A  6E19               	movwf	(??_on_leds+2)^0,c
 17933   00502C  0E02               	movlw	high (_matrix_tab+1)
 17934   00502E  20F4               	addwfc	prodh,w,c
 17935   005030  6E1A               	movwf	(??_on_leds+3)^0,c
 17936   005032  5017               	movf	??_on_leds^0,w,c
 17937   005034  2419               	addwf	(??_on_leds+2)^0,w,c
 17938   005036  6ED9               	movwf	fsr2l,c
 17939   005038  5018               	movf	(??_on_leds+1)^0,w,c
 17940   00503A  201A               	addwfc	(??_on_leds+3)^0,w,c
 17941   00503C  6EDA               	movwf	fsr2h,c
 17942   00503E  0060  F06F  FFDF   	movff	on_leds@r,indf2
 17943                           
 17944                           ;main.c: 237:             matrix_tab[i][j].green = g;
 17945   005044  501D               	movf	on_leds@j^0,w,c
 17946   005046  0D03               	mullw	3
 17947   005048  006F FFCC  F017    	movff	prodl,??_on_leds
 17948   00504E  006F FFD0  F018    	movff	prodh,??_on_leds+1
 17949   005054  501C               	movf	on_leds@i^0,w,c
 17950   005056  0D24               	mullw	36
 17951   005058  0E50               	movlw	low _matrix_tab
 17952   00505A  24F3               	addwf	243,w,c
 17953   00505C  6E19               	movwf	(??_on_leds+2)^0,c
 17954   00505E  0E02               	movlw	high _matrix_tab
 17955   005060  20F4               	addwfc	prodh,w,c
 17956   005062  6E1A               	movwf	(??_on_leds+3)^0,c
 17957   005064  5017               	movf	??_on_leds^0,w,c
 17958   005066  2419               	addwf	(??_on_leds+2)^0,w,c
 17959   005068  6ED9               	movwf	fsr2l,c
 17960   00506A  5018               	movf	(??_on_leds+1)^0,w,c
 17961   00506C  201A               	addwfc	(??_on_leds+3)^0,w,c
 17962   00506E  6EDA               	movwf	fsr2h,c
 17963   005070  0060  F057  FFDF   	movff	on_leds@g,indf2
 17964                           
 17965                           ;main.c: 238:             matrix_tab[i][j].blue = b;
 17966   005076  501D               	movf	on_leds@j^0,w,c
 17967   005078  0D03               	mullw	3
 17968   00507A  006F FFCC  F017    	movff	prodl,??_on_leds
 17969   005080  006F FFD0  F018    	movff	prodh,??_on_leds+1
 17970   005086  501C               	movf	on_leds@i^0,w,c
 17971   005088  0D24               	mullw	36
 17972   00508A  0E52               	movlw	low (_matrix_tab+2)
 17973   00508C  24F3               	addwf	243,w,c
 17974   00508E  6E19               	movwf	(??_on_leds+2)^0,c
 17975   005090  0E02               	movlw	high (_matrix_tab+2)
 17976   005092  20F4               	addwfc	prodh,w,c
 17977   005094  6E1A               	movwf	(??_on_leds+3)^0,c
 17978   005096  5017               	movf	??_on_leds^0,w,c
 17979   005098  2419               	addwf	(??_on_leds+2)^0,w,c
 17980   00509A  6ED9               	movwf	fsr2l,c
 17981   00509C  5018               	movf	(??_on_leds+1)^0,w,c
 17982   00509E  201A               	addwfc	(??_on_leds+3)^0,w,c
 17983   0050A0  6EDA               	movwf	fsr2h,c
 17984   0050A2  0060  F05B  FFDF   	movff	on_leds@b,indf2
 17985   0050A8                     
 17986                           ;main.c: 239:         }
 17987   0050A8  2A1D               	incf	on_leds@j^0,f,c
 17988   0050AA  0E0B               	movlw	11
 17989   0050AC  641D               	cpfsgt	on_leds@j^0,c
 17990   0050AE  EF5B  F028         	goto	i2u783_41
 17991   0050B2  EF5D  F028         	goto	i2u783_40
 17992   0050B6                     i2u783_41:
 17993   0050B6  EF09  F028         	goto	i2l7166
 17994   0050BA                     i2u783_40:
 17995   0050BA                     
 17996                           ;main.c: 240:     }
 17997   0050BA  2A1C               	incf	on_leds@i^0,f,c
 17998   0050BC  0E0B               	movlw	11
 17999   0050BE  641C               	cpfsgt	on_leds@i^0,c
 18000   0050C0  EF64  F028         	goto	i2u784_41
 18001   0050C4  EF66  F028         	goto	i2u784_40
 18002   0050C8                     i2u784_41:
 18003   0050C8  EF08  F028         	goto	i2l777
 18004   0050CC                     i2u784_40:
 18005   0050CC                     
 18006                           ;main.c: 241:      send_leds();
 18007   0050CC  ECCB  F028         	call	_send_leds	;wreg free
 18008   0050D0  0012               	return		;funcret
 18009   0050D2                     __end_of_on_leds:
 18010                           	callstack 0
 18011                           
 18012 ;; *************** function _off_leds *****************
 18013 ;; Defined at:
 18014 ;;		line 216 in file "main.c"
 18015 ;; Parameters:    Size  Location     Type
 18016 ;;		None
 18017 ;; Auto vars:     Size  Location     Type
 18018 ;;  j               1   25[COMRAM] unsigned char 
 18019 ;;  i               1   24[COMRAM] unsigned char 
 18020 ;; Return value:  Size  Location     Type
 18021 ;;                  1    wreg      void 
 18022 ;; Registers used:
 18023 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18024 ;; Tracked objects:
 18025 ;;		On entry : 0/0
 18026 ;;		On exit  : 0/0
 18027 ;;		Unchanged: 0/0
 18028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18029 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18030 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18031 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18032 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18033 ;;Total ram usage:        6 bytes
 18034 ;; Hardware stack levels used: 1
 18035 ;; Hardware stack levels required when called: 4
 18036 ;; This function calls:
 18037 ;;		_send_leds
 18038 ;; This function is called by:
 18039 ;;		_appliquer_action
 18040 ;; This function uses a non-reentrant model
 18041 ;;
 18042                           
 18043                           	psect	text62
 18044   00531A                     __ptext62:
 18045                           	callstack 0
 18046   00531A                     _off_leds:
 18047                           	callstack 12
 18048   00531A                     
 18049                           ;main.c: 217:     uint8_t i = 0;
 18050   00531A  6A19               	clrf	off_leds@i^0,c
 18051                           
 18052                           ;main.c: 220:     for(i = 0 ; i< 12 ; i++ ){
 18053   00531C  6A19               	clrf	off_leds@i^0,c
 18054   00531E                     i2l770:
 18055                           
 18056                           ;main.c: 221:         for(j= 0 ; j< 12 ; j++ ){
 18057   00531E  6A1A               	clrf	off_leds@j^0,c
 18058   005320                     i2l7144:
 18059                           
 18060                           ;main.c: 222:             matrix_tab[i][j].red = 0;
 18061   005320  501A               	movf	off_leds@j^0,w,c
 18062   005322  0D03               	mullw	3
 18063   005324  006F FFCC  F015    	movff	prodl,??_off_leds
 18064   00532A  006F FFD0  F016    	movff	prodh,??_off_leds+1
 18065   005330  5019               	movf	off_leds@i^0,w,c
 18066   005332  0D24               	mullw	36
 18067   005334  0E51               	movlw	low (_matrix_tab+1)
 18068   005336  24F3               	addwf	243,w,c
 18069   005338  6E17               	movwf	(??_off_leds+2)^0,c
 18070   00533A  0E02               	movlw	high (_matrix_tab+1)
 18071   00533C  20F4               	addwfc	prodh,w,c
 18072   00533E  6E18               	movwf	(??_off_leds+3)^0,c
 18073   005340  5015               	movf	??_off_leds^0,w,c
 18074   005342  2417               	addwf	(??_off_leds+2)^0,w,c
 18075   005344  6ED9               	movwf	fsr2l,c
 18076   005346  5016               	movf	(??_off_leds+1)^0,w,c
 18077   005348  2018               	addwfc	(??_off_leds+3)^0,w,c
 18078   00534A  6EDA               	movwf	fsr2h,c
 18079   00534C  6ADF               	clrf	indf2,c
 18080                           
 18081                           ;main.c: 223:             matrix_tab[i][j].green = 0;
 18082   00534E  501A               	movf	off_leds@j^0,w,c
 18083   005350  0D03               	mullw	3
 18084   005352  006F FFCC  F015    	movff	prodl,??_off_leds
 18085   005358  006F FFD0  F016    	movff	prodh,??_off_leds+1
 18086   00535E  5019               	movf	off_leds@i^0,w,c
 18087   005360  0D24               	mullw	36
 18088   005362  0E50               	movlw	low _matrix_tab
 18089   005364  24F3               	addwf	243,w,c
 18090   005366  6E17               	movwf	(??_off_leds+2)^0,c
 18091   005368  0E02               	movlw	high _matrix_tab
 18092   00536A  20F4               	addwfc	prodh,w,c
 18093   00536C  6E18               	movwf	(??_off_leds+3)^0,c
 18094   00536E  5015               	movf	??_off_leds^0,w,c
 18095   005370  2417               	addwf	(??_off_leds+2)^0,w,c
 18096   005372  6ED9               	movwf	fsr2l,c
 18097   005374  5016               	movf	(??_off_leds+1)^0,w,c
 18098   005376  2018               	addwfc	(??_off_leds+3)^0,w,c
 18099   005378  6EDA               	movwf	fsr2h,c
 18100   00537A  6ADF               	clrf	indf2,c
 18101                           
 18102                           ;main.c: 224:             matrix_tab[i][j].blue = 0;
 18103   00537C  501A               	movf	off_leds@j^0,w,c
 18104   00537E  0D03               	mullw	3
 18105   005380  006F FFCC  F015    	movff	prodl,??_off_leds
 18106   005386  006F FFD0  F016    	movff	prodh,??_off_leds+1
 18107   00538C  5019               	movf	off_leds@i^0,w,c
 18108   00538E  0D24               	mullw	36
 18109   005390  0E52               	movlw	low (_matrix_tab+2)
 18110   005392  24F3               	addwf	243,w,c
 18111   005394  6E17               	movwf	(??_off_leds+2)^0,c
 18112   005396  0E02               	movlw	high (_matrix_tab+2)
 18113   005398  20F4               	addwfc	prodh,w,c
 18114   00539A  6E18               	movwf	(??_off_leds+3)^0,c
 18115   00539C  5015               	movf	??_off_leds^0,w,c
 18116   00539E  2417               	addwf	(??_off_leds+2)^0,w,c
 18117   0053A0  6ED9               	movwf	fsr2l,c
 18118   0053A2  5016               	movf	(??_off_leds+1)^0,w,c
 18119   0053A4  2018               	addwfc	(??_off_leds+3)^0,w,c
 18120   0053A6  6EDA               	movwf	fsr2h,c
 18121   0053A8  6ADF               	clrf	indf2,c
 18122   0053AA                     
 18123                           ;main.c: 225:         }
 18124   0053AA  2A1A               	incf	off_leds@j^0,f,c
 18125   0053AC  0E0B               	movlw	11
 18126   0053AE  641A               	cpfsgt	off_leds@j^0,c
 18127   0053B0  EFDC  F029         	goto	i2u781_41
 18128   0053B4  EFDE  F029         	goto	i2u781_40
 18129   0053B8                     i2u781_41:
 18130   0053B8  EF90  F029         	goto	i2l7144
 18131   0053BC                     i2u781_40:
 18132   0053BC                     
 18133                           ;main.c: 226:     }
 18134   0053BC  2A19               	incf	off_leds@i^0,f,c
 18135   0053BE  0E0B               	movlw	11
 18136   0053C0  6419               	cpfsgt	off_leds@i^0,c
 18137   0053C2  EFE5  F029         	goto	i2u782_41
 18138   0053C6  EFE7  F029         	goto	i2u782_40
 18139   0053CA                     i2u782_41:
 18140   0053CA  EF8F  F029         	goto	i2l770
 18141   0053CE                     i2u782_40:
 18142   0053CE                     
 18143                           ;main.c: 227:      send_leds();
 18144   0053CE  ECCB  F028         	call	_send_leds	;wreg free
 18145   0053D2  0012               	return		;funcret
 18146   0053D4                     __end_of_off_leds:
 18147                           	callstack 0
 18148                           
 18149 ;; *************** function _send_leds *****************
 18150 ;; Defined at:
 18151 ;;		line 245 in file "main.c"
 18152 ;; Parameters:    Size  Location     Type
 18153 ;;		None
 18154 ;; Auto vars:     Size  Location     Type
 18155 ;;  j               1   19[COMRAM] unsigned char 
 18156 ;;  i               1   18[COMRAM] unsigned char 
 18157 ;; Return value:  Size  Location     Type
 18158 ;;                  1    wreg      void 
 18159 ;; Registers used:
 18160 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18161 ;; Tracked objects:
 18162 ;;		On entry : 0/0
 18163 ;;		On exit  : 0/0
 18164 ;;		Unchanged: 0/0
 18165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18166 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18167 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18168 ;;      Temps:         12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18169 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18170 ;;Total ram usage:       14 bytes
 18171 ;; Hardware stack levels used: 1
 18172 ;; Hardware stack levels required when called: 3
 18173 ;; This function calls:
 18174 ;;		_send_color
 18175 ;;		_ws2812_reset
 18176 ;; This function is called by:
 18177 ;;		_off_leds
 18178 ;;		_on_leds
 18179 ;;		_rainbow_scroll_vertical
 18180 ;; This function uses a non-reentrant model
 18181 ;;
 18182                           
 18183                           	psect	text63
 18184   005196                     __ptext63:
 18185                           	callstack 0
 18186   005196                     _send_leds:
 18187                           	callstack 12
 18188   005196                     
 18189                           ;main.c: 246:     uint8_t i = 0;
 18190   005196  6A13               	clrf	send_leds@i^0,c
 18191                           
 18192                           ;main.c: 249:     for(i = 0 ; i< 12 ; i++ ){
 18193   005198  6A13               	clrf	send_leds@i^0,c
 18194   00519A                     i2l784:
 18195                           
 18196                           ;main.c: 250:         for(j= 0 ; j< 12 ; j++ ){
 18197   00519A  6A14               	clrf	send_leds@j^0,c
 18198   00519C                     i2l6518:
 18199                           
 18200                           ;main.c: 251:             send_color(matrix_tab[i][j].red,matrix_tab[i][j].green, matrix
      +                          _tab[i][j].blue);
 18201   00519C  5014               	movf	send_leds@j^0,w,c
 18202   00519E  0D03               	mullw	3
 18203   0051A0  006F FFCC  F007    	movff	prodl,??_send_leds
 18204   0051A6  006F FFD0  F008    	movff	prodh,??_send_leds+1
 18205   0051AC  5013               	movf	send_leds@i^0,w,c
 18206   0051AE  0D24               	mullw	36
 18207   0051B0  0E50               	movlw	low _matrix_tab
 18208   0051B2  24F3               	addwf	243,w,c
 18209   0051B4  6E09               	movwf	(??_send_leds+2)^0,c
 18210   0051B6  0E02               	movlw	high _matrix_tab
 18211   0051B8  20F4               	addwfc	prodh,w,c
 18212   0051BA  6E0A               	movwf	(??_send_leds+3)^0,c
 18213   0051BC  5007               	movf	??_send_leds^0,w,c
 18214   0051BE  2409               	addwf	(??_send_leds+2)^0,w,c
 18215   0051C0  6ED9               	movwf	fsr2l,c
 18216   0051C2  5008               	movf	(??_send_leds+1)^0,w,c
 18217   0051C4  200A               	addwfc	(??_send_leds+3)^0,w,c
 18218   0051C6  6EDA               	movwf	fsr2h,c
 18219   0051C8  50DF               	movf	indf2,w,c
 18220   0051CA  6E04               	movwf	send_color@g^0,c
 18221   0051CC  5014               	movf	send_leds@j^0,w,c
 18222   0051CE  0D03               	mullw	3
 18223   0051D0  006F FFCC  F00B    	movff	prodl,??_send_leds+4
 18224   0051D6  006F FFD0  F00C    	movff	prodh,??_send_leds+5
 18225   0051DC  5013               	movf	send_leds@i^0,w,c
 18226   0051DE  0D24               	mullw	36
 18227   0051E0  0E52               	movlw	low (_matrix_tab+2)
 18228   0051E2  24F3               	addwf	243,w,c
 18229   0051E4  6E0D               	movwf	(??_send_leds+6)^0,c
 18230   0051E6  0E02               	movlw	high (_matrix_tab+2)
 18231   0051E8  20F4               	addwfc	prodh,w,c
 18232   0051EA  6E0E               	movwf	(??_send_leds+7)^0,c
 18233   0051EC  500B               	movf	(??_send_leds+4)^0,w,c
 18234   0051EE  240D               	addwf	(??_send_leds+6)^0,w,c
 18235   0051F0  6ED9               	movwf	fsr2l,c
 18236   0051F2  500C               	movf	(??_send_leds+5)^0,w,c
 18237   0051F4  200E               	addwfc	(??_send_leds+7)^0,w,c
 18238   0051F6  6EDA               	movwf	fsr2h,c
 18239   0051F8  50DF               	movf	indf2,w,c
 18240   0051FA  6E05               	movwf	send_color@b^0,c
 18241   0051FC  5014               	movf	send_leds@j^0,w,c
 18242   0051FE  0D03               	mullw	3
 18243   005200  006F FFCC  F00F    	movff	prodl,??_send_leds+8
 18244   005206  006F FFD0  F010    	movff	prodh,??_send_leds+9
 18245   00520C  5013               	movf	send_leds@i^0,w,c
 18246   00520E  0D24               	mullw	36
 18247   005210  0E51               	movlw	low (_matrix_tab+1)
 18248   005212  24F3               	addwf	243,w,c
 18249   005214  6E11               	movwf	(??_send_leds+10)^0,c
 18250   005216  0E02               	movlw	high (_matrix_tab+1)
 18251   005218  20F4               	addwfc	prodh,w,c
 18252   00521A  6E12               	movwf	(??_send_leds+11)^0,c
 18253   00521C  500F               	movf	(??_send_leds+8)^0,w,c
 18254   00521E  2411               	addwf	(??_send_leds+10)^0,w,c
 18255   005220  6ED9               	movwf	fsr2l,c
 18256   005222  5010               	movf	(??_send_leds+9)^0,w,c
 18257   005224  2012               	addwfc	(??_send_leds+11)^0,w,c
 18258   005226  6EDA               	movwf	fsr2h,c
 18259   005228  50DF               	movf	indf2,w,c
 18260   00522A  ECD1  F032         	call	_send_color
 18261   00522E                     
 18262                           ;main.c: 252:         }
 18263   00522E  2A14               	incf	send_leds@j^0,f,c
 18264   005230  0E0B               	movlw	11
 18265   005232  6414               	cpfsgt	send_leds@j^0,c
 18266   005234  EF1E  F029         	goto	i2u676_41
 18267   005238  EF20  F029         	goto	i2u676_40
 18268   00523C                     i2u676_41:
 18269   00523C  EFCE  F028         	goto	i2l6518
 18270   005240                     i2u676_40:
 18271   005240                     
 18272                           ;main.c: 253:     }
 18273   005240  2A13               	incf	send_leds@i^0,f,c
 18274   005242  0E0B               	movlw	11
 18275   005244  6413               	cpfsgt	send_leds@i^0,c
 18276   005246  EF27  F029         	goto	i2u677_41
 18277   00524A  EF29  F029         	goto	i2u677_40
 18278   00524E                     i2u677_41:
 18279   00524E  EFCD  F028         	goto	i2l784
 18280   005252                     i2u677_40:
 18281   005252                     
 18282                           ;main.c: 254:      ws2812_reset();
 18283   005252  ECF2  F032         	call	_ws2812_reset	;wreg free
 18284   005256  0012               	return		;funcret
 18285   005258                     __end_of_send_leds:
 18286                           	callstack 0
 18287                           
 18288 ;; *************** function _ws2812_reset *****************
 18289 ;; Defined at:
 18290 ;;		line 308 in file "main.c"
 18291 ;; Parameters:    Size  Location     Type
 18292 ;;		None
 18293 ;; Auto vars:     Size  Location     Type
 18294 ;;		None
 18295 ;; Return value:  Size  Location     Type
 18296 ;;                  1    wreg      void 
 18297 ;; Registers used:
 18298 ;;		wreg
 18299 ;; Tracked objects:
 18300 ;;		On entry : 0/0
 18301 ;;		On exit  : 0/0
 18302 ;;		Unchanged: 0/0
 18303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18304 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18305 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18306 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18307 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18308 ;;Total ram usage:        0 bytes
 18309 ;; Hardware stack levels used: 1
 18310 ;; This function calls:
 18311 ;;		Nothing
 18312 ;; This function is called by:
 18313 ;;		_send_leds
 18314 ;; This function uses a non-reentrant model
 18315 ;;
 18316                           
 18317                           	psect	text64
 18318   0065E4                     __ptext64:
 18319                           	callstack 0
 18320   0065E4                     _ws2812_reset:
 18321                           	callstack 14
 18322   0065E4                     
 18323                           ;main.c: 309:     LATBbits.LATB5 = 0;
 18324   0065E4  9ABB               	bcf	187,5,c	;volatile
 18325   0065E6                     
 18326                           ;main.c: 310:     _delay((unsigned long)((80)*(64000000U/4000000.0)));
 18327   0065E6  0EB6               	movlw	182
 18328   0065E8                     i2u938_47:
 18329   0065E8  D000               	nop2	
 18330   0065EA  D000               	nop2	
 18331   0065EC  2EE8               	decfsz	wreg,f,c
 18332   0065EE  D7FC               	bra	i2u938_47
 18333   0065F0  D000               	nop2	
 18334   0065F2  D000               	nop2	
 18335   0065F4  D000               	nop2	
 18336   0065F6  0012               	return		;funcret
 18337   0065F8                     __end_of_ws2812_reset:
 18338                           	callstack 0
 18339                           
 18340 ;; *************** function _send_color *****************
 18341 ;; Defined at:
 18342 ;;		line 302 in file "main.c"
 18343 ;; Parameters:    Size  Location     Type
 18344 ;;  r               1    wreg     unsigned char 
 18345 ;;  g               1    3[COMRAM] unsigned char 
 18346 ;;  b               1    4[COMRAM] unsigned char 
 18347 ;; Auto vars:     Size  Location     Type
 18348 ;;  r               1    5[COMRAM] unsigned char 
 18349 ;; Return value:  Size  Location     Type
 18350 ;;                  1    wreg      void 
 18351 ;; Registers used:
 18352 ;;		wreg, status,2, status,0, cstack
 18353 ;; Tracked objects:
 18354 ;;		On entry : 0/0
 18355 ;;		On exit  : 0/0
 18356 ;;		Unchanged: 0/0
 18357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18358 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18359 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18360 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18361 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18362 ;;Total ram usage:        3 bytes
 18363 ;; Hardware stack levels used: 1
 18364 ;; Hardware stack levels required when called: 2
 18365 ;; This function calls:
 18366 ;;		_send_byte
 18367 ;; This function is called by:
 18368 ;;		_send_leds
 18369 ;; This function uses a non-reentrant model
 18370 ;;
 18371                           
 18372                           	psect	text65
 18373   0065A2                     __ptext65:
 18374                           	callstack 0
 18375   0065A2                     _send_color:
 18376                           	callstack 12
 18377                           
 18378                           ;incstack = 0
 18379                           ;send_color@r stored from wreg
 18380   0065A2  6E06               	movwf	send_color@r^0,c
 18381   0065A4                     
 18382                           ;main.c: 303:     send_byte(g);
 18383   0065A4  5004               	movf	send_color@g^0,w,c
 18384   0065A6  EC5C  F032         	call	_send_byte
 18385                           
 18386                           ;main.c: 304:     send_byte(r);
 18387   0065AA  5006               	movf	send_color@r^0,w,c
 18388   0065AC  EC5C  F032         	call	_send_byte
 18389                           
 18390                           ;main.c: 305:     send_byte(b);
 18391   0065B0  5005               	movf	send_color@b^0,w,c
 18392   0065B2  EC5C  F032         	call	_send_byte
 18393   0065B6  0012               	return		;funcret
 18394   0065B8                     __end_of_send_color:
 18395                           	callstack 0
 18396                           
 18397 ;; *************** function _send_byte *****************
 18398 ;; Defined at:
 18399 ;;		line 293 in file "main.c"
 18400 ;; Parameters:    Size  Location     Type
 18401 ;;  byte            1    wreg     unsigned char 
 18402 ;; Auto vars:     Size  Location     Type
 18403 ;;  byte            1    1[COMRAM] unsigned char 
 18404 ;;  i               1    2[COMRAM] unsigned char 
 18405 ;; Return value:  Size  Location     Type
 18406 ;;                  1    wreg      void 
 18407 ;; Registers used:
 18408 ;;		wreg, status,2, status,0, cstack
 18409 ;; Tracked objects:
 18410 ;;		On entry : 0/0
 18411 ;;		On exit  : 0/0
 18412 ;;		Unchanged: 0/0
 18413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18414 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18415 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18416 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18417 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18418 ;;Total ram usage:        2 bytes
 18419 ;; Hardware stack levels used: 1
 18420 ;; Hardware stack levels required when called: 1
 18421 ;; This function calls:
 18422 ;;		_send_bit
 18423 ;; This function is called by:
 18424 ;;		_send_color
 18425 ;; This function uses a non-reentrant model
 18426 ;;
 18427                           
 18428                           	psect	text66
 18429   0064B8                     __ptext66:
 18430                           	callstack 0
 18431   0064B8                     _send_byte:
 18432                           	callstack 12
 18433                           
 18434                           ;incstack = 0
 18435                           ;send_byte@byte stored from wreg
 18436   0064B8  6E02               	movwf	send_byte@byte^0,c
 18437   0064BA                     
 18438                           ;main.c: 294:     for (uint8_t i = 0; i < 8; i++) {
 18439   0064BA  6A03               	clrf	send_byte@i^0,c
 18440   0064BC                     i2l5934:
 18441                           
 18442                           ;main.c: 295:         send_bit(byte & 0x80);
 18443   0064BC  5002               	movf	send_byte@byte^0,w,c
 18444   0064BE  0B80               	andlw	128
 18445   0064C0  EC6D  F031         	call	_send_bit
 18446   0064C4                     
 18447                           ;main.c: 296:         byte <<= 1;
 18448   0064C4  90D8               	bcf	status,0,c
 18449   0064C6  3602               	rlcf	send_byte@byte^0,f,c
 18450   0064C8                     
 18451                           ;main.c: 297:     }
 18452   0064C8  2A03               	incf	send_byte@i^0,f,c
 18453   0064CA  0E07               	movlw	7
 18454   0064CC  6403               	cpfsgt	send_byte@i^0,c
 18455   0064CE  EF6B  F032         	goto	i2u587_41
 18456   0064D2  EF6D  F032         	goto	i2u587_40
 18457   0064D6                     i2u587_41:
 18458   0064D6  EF5E  F032         	goto	i2l5934
 18459   0064DA                     i2u587_40:
 18460   0064DA  0012               	return		;funcret
 18461   0064DC                     __end_of_send_byte:
 18462                           	callstack 0
 18463                           
 18464 ;; *************** function _send_bit *****************
 18465 ;; Defined at:
 18466 ;;		line 279 in file "main.c"
 18467 ;; Parameters:    Size  Location     Type
 18468 ;;  bit             1    wreg     unsigned char 
 18469 ;; Auto vars:     Size  Location     Type
 18470 ;;  bit             1    0[COMRAM] unsigned char 
 18471 ;; Return value:  Size  Location     Type
 18472 ;;                  1    wreg      void 
 18473 ;; Registers used:
 18474 ;;		wreg, status,2, cstack
 18475 ;; Tracked objects:
 18476 ;;		On entry : 0/0
 18477 ;;		On exit  : 0/0
 18478 ;;		Unchanged: 0/0
 18479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18480 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18481 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18482 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18483 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18484 ;;Total ram usage:        1 bytes
 18485 ;; Hardware stack levels used: 1
 18486 ;; This function calls:
 18487 ;;		Nothing
 18488 ;; This function is called by:
 18489 ;;		_send_byte
 18490 ;; This function uses a non-reentrant model
 18491 ;;
 18492                           
 18493                           	psect	text67
 18494   0062DA                     __ptext67:
 18495                           	callstack 0
 18496   0062DA                     _send_bit:
 18497                           	callstack 12
 18498                           
 18499                           ;incstack = 0
 18500                           ;send_bit@bit stored from wreg
 18501   0062DA  6E01               	movwf	send_bit@bit^0,c
 18502   0062DC                     
 18503                           ;main.c: 280:     if (bit) {
 18504   0062DC  5001               	movf	send_bit@bit^0,w,c
 18505   0062DE  B4D8               	btfsc	status,2,c
 18506   0062E0  EF74  F031         	goto	i2u494_41
 18507   0062E4  EF76  F031         	goto	i2u494_40
 18508   0062E8                     i2u494_41:
 18509   0062E8  EF81  F031         	goto	i2l800
 18510   0062EC                     i2u494_40:
 18511   0062EC                     
 18512                           ;main.c: 281:         LATBbits.LATB5 = 1;
 18513   0062EC  8ABB               	bsf	187,5,c	;volatile
 18514   0062EE                     
 18515                           ;main.c: 282:         _delay((unsigned long)((0.7)*(64000000U/4000000.0)));
 18516   0062EE  0E03               	movlw	3
 18517   0062F0                     i2u939_47:
 18518   0062F0  2EE8               	decfsz	wreg,f,c
 18519   0062F2  D7FE               	bra	i2u939_47
 18520   0062F4  D000               	nop2	
 18521   0062F6                     
 18522                           ;main.c: 283:         LATBbits.LATB5 = 0;
 18523   0062F6  9ABB               	bcf	187,5,c	;volatile
 18524                           
 18525                           ;main.c: 284:         _delay((unsigned long)((0.6)*(64000000U/4000000.0)));
 18526   0062F8  0E03               	movlw	3
 18527   0062FA                     i2u940_47:
 18528   0062FA  2EE8               	decfsz	wreg,f,c
 18529   0062FC  D7FE               	bra	i2u940_47
 18530                           
 18531                           ;main.c: 285:     } else {
 18532   0062FE  EF89  F031         	goto	i2l802
 18533   006302                     i2l800:
 18534                           
 18535                           ;main.c: 286:         LATBbits.LATB5 = 1;
 18536   006302  8ABB               	bsf	187,5,c	;volatile
 18537                           
 18538                           ;main.c: 287:         _delay((unsigned long)((0.35)*(64000000U/4000000.0)));
 18539   006304  D000               	nop2		;2 cycle nop
 18540   006306  D000               	nop2		;2 cycle nop
 18541   006308  0000               	nop	
 18542                           
 18543                           ;main.c: 288:         LATBbits.LATB5 = 0;
 18544   00630A  9ABB               	bcf	187,5,c	;volatile
 18545   00630C                     
 18546                           ;main.c: 289:         _delay((unsigned long)((0.8)*(64000000U/4000000.0)));
 18547   00630C  0E04               	movlw	4
 18548   00630E                     i2u941_47:
 18549   00630E  2EE8               	decfsz	wreg,f,c
 18550   006310  D7FE               	bra	i2u941_47
 18551   006312                     i2l802:
 18552   006312  0012               	return		;funcret
 18553   006314                     __end_of_send_bit:
 18554                           	callstack 0
 18555                           
 18556 ;; *************** function _BP2_ISR *****************
 18557 ;; Defined at:
 18558 ;;		line 181 in file "mcc_generated_files/system/src/pins.c"
 18559 ;; Parameters:    Size  Location     Type
 18560 ;;		None
 18561 ;; Auto vars:     Size  Location     Type
 18562 ;;		None
 18563 ;; Return value:  Size  Location     Type
 18564 ;;                  1    wreg      void 
 18565 ;; Registers used:
 18566 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
 18567 ;; Tracked objects:
 18568 ;;		On entry : 0/0
 18569 ;;		On exit  : 0/0
 18570 ;;		Unchanged: 0/0
 18571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18572 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18573 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18574 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18575 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18576 ;;Total ram usage:        0 bytes
 18577 ;; Hardware stack levels used: 1
 18578 ;; Hardware stack levels required when called: 10
 18579 ;; This function calls:
 18580 ;;		NULL
 18581 ;;		_BP2_DefaultInterruptHandler
 18582 ;;		_int_BP2
 18583 ;; This function is called by:
 18584 ;;		_PIN_MANAGER_IOC
 18585 ;; This function uses a non-reentrant model
 18586 ;;
 18587                           
 18588                           	psect	text68
 18589   0063E8                     __ptext68:
 18590                           	callstack 0
 18591   0063E8                     _BP2_ISR:
 18592                           	callstack 9
 18593   0063E8                     
 18594                           ;mcc_generated_files/system/src/pins.c: 186:     if(BP2_InterruptHandler)
 18595   0063E8  0100               	movlb	0	; () banked
 18596   0063EA  51F7               	movf	_BP2_InterruptHandler& (0+255),w,b
 18597   0063EC  11F8               	iorwf	(_BP2_InterruptHandler+1)& (0+255),w,b
 18598   0063EE  B4D8               	btfsc	status,2,c
 18599   0063F0  EFFC  F031         	goto	i2u916_41
 18600   0063F4  EFFE  F031         	goto	i2u916_40
 18601   0063F8                     i2u916_41:
 18602   0063F8  EF0A  F032         	goto	i2l8710
 18603   0063FC                     i2u916_40:
 18604   0063FC                     
 18605                           ; BSR set to: 0
 18606                           ;mcc_generated_files/system/src/pins.c: 187:     {;mcc_generated_files/system/src/pins.c
      +                          : 188:         BP2_InterruptHandler();
 18607   0063FC  D802               	call	i2u917_48
 18608   0063FE  EF0A  F032         	goto	i2u917_49
 18609   006402                     i2u917_48:
 18610   006402  0005               	push	
 18611   006404  6EFA               	movwf	pclath,c
 18612   006406  51F7               	movf	_BP2_InterruptHandler& (0+255),w,b
 18613   006408  6EFD               	movwf	tosl,c
 18614   00640A  51F8               	movf	(_BP2_InterruptHandler+1)& (0+255),w,b
 18615   00640C  6EFE               	movwf	tosh,c
 18616   00640E  6AFF               	clrf	tosu,c
 18617   006410  50FA               	movf	pclath,w,c
 18618   006412  0012               	return		;indir
 18619   006414                     i2u917_49:
 18620   006414                     i2l8710:
 18621                           
 18622                           ;mcc_generated_files/system/src/pins.c: 190:     IOCAFbits.IOCAF2 = 0;
 18623   006414  013A               	movlb	58	; () banked
 18624   006416  9547               	bcf	71,2,b	;volatile
 18625   006418                     
 18626                           ; BSR set to: 58
 18627   006418  0012               	return		;funcret
 18628   00641A                     __end_of_BP2_ISR:
 18629                           	callstack 0
 18630                           
 18631 ;; *************** function _BP2_DefaultInterruptHandler *****************
 18632 ;; Defined at:
 18633 ;;		line 203 in file "mcc_generated_files/system/src/pins.c"
 18634 ;; Parameters:    Size  Location     Type
 18635 ;;		None
 18636 ;; Auto vars:     Size  Location     Type
 18637 ;;		None
 18638 ;; Return value:  Size  Location     Type
 18639 ;;                  1    wreg      void 
 18640 ;; Registers used:
 18641 ;;		None
 18642 ;; Tracked objects:
 18643 ;;		On entry : 0/0
 18644 ;;		On exit  : 0/0
 18645 ;;		Unchanged: 0/0
 18646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18647 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18648 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18649 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18650 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18651 ;;Total ram usage:        0 bytes
 18652 ;; Hardware stack levels used: 1
 18653 ;; This function calls:
 18654 ;;		Nothing
 18655 ;; This function is called by:
 18656 ;;		_PIN_MANAGER_Initialize
 18657 ;;		_BP2_ISR
 18658 ;; This function uses a non-reentrant model
 18659 ;;
 18660                           
 18661                           	psect	text69
 18662   006684                     __ptext69:
 18663                           	callstack 0
 18664   006684                     _BP2_DefaultInterruptHandler:
 18665                           	callstack 18
 18666   006684  0012               	return		;funcret
 18667   006686                     __end_of_BP2_DefaultInterruptHandler:
 18668                           	callstack 0
 18669                           
 18670 ;; *************** function _int_BP2 *****************
 18671 ;; Defined at:
 18672 ;;		line 355 in file "main.c"
 18673 ;; Parameters:    Size  Location     Type
 18674 ;;		None
 18675 ;; Auto vars:     Size  Location     Type
 18676 ;;		None
 18677 ;; Return value:  Size  Location     Type
 18678 ;;                  1    wreg      void 
 18679 ;; Registers used:
 18680 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18681 ;; Tracked objects:
 18682 ;;		On entry : 0/0
 18683 ;;		On exit  : 0/0
 18684 ;;		Unchanged: 0/0
 18685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18686 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18687 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18688 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18689 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18690 ;;Total ram usage:        2 bytes
 18691 ;; Hardware stack levels used: 1
 18692 ;; Hardware stack levels required when called: 9
 18693 ;; This function calls:
 18694 ;;		i2_LCD_UpdateMenu
 18695 ;; This function is called by:
 18696 ;;		_main
 18697 ;;		_BP2_ISR
 18698 ;; This function uses a non-reentrant model
 18699 ;;
 18700                           
 18701                           	psect	text70
 18702   004442                     __ptext70:
 18703                           	callstack 0
 18704   004442                     _int_BP2:
 18705                           	callstack 9
 18706   004442                     
 18707                           ;main.c: 356:     _delay((unsigned long)((40)*(64000000U/4000.0)));
 18708   004442  0E04               	movlw	4
 18709   004444  0100               	movlb	0	; () banked
 18710   004446  6FD4               	movwf	(??_int_BP2+1)& (0+255),b
 18711   004448  0E40               	movlw	64
 18712   00444A  6FD3               	movwf	??_int_BP2& (0+255),b
 18713   00444C  0E26               	movlw	38
 18714   00444E                     i2u942_47:
 18715   00444E  2EE8               	decfsz	wreg,f,c
 18716   004450  D7FE               	bra	i2u942_47
 18717   004452  2FD3               	decfsz	??_int_BP2& (0+255),f,b
 18718   004454  D7FC               	bra	i2u942_47
 18719   004456  2FD4               	decfsz	(??_int_BP2+1)& (0+255),f,b
 18720   004458  D7FA               	bra	i2u942_47
 18721   00445A  0000               	nop	
 18722   00445C                     
 18723                           ;main.c: 358:      if (etat_courant == MENU_ICLED) {
 18724   00445C  0100               	movlb	0	; () banked
 18725   00445E  05EB               	decf	_etat_courant& (0+255),w,b
 18726   004460  A4D8               	btfss	status,2,c
 18727   004462  EF35  F022         	goto	i2u903_41
 18728   004466  EF37  F022         	goto	i2u903_40
 18729   00446A                     i2u903_41:
 18730   00446A  EF3B  F022         	goto	i2l8652
 18731   00446E                     i2u903_40:
 18732   00446E                     
 18733                           ; BSR set to: 0
 18734                           ;main.c: 359:         etat_courant = ICLED_COULEUR1;
 18735   00446E  0E04               	movlw	4
 18736   004470  6FEB               	movwf	_etat_courant& (0+255),b
 18737                           
 18738                           ;main.c: 360:     } else if (etat_courant == ICLED_COULEUR1) {
 18739   004472  EFBB  F022         	goto	i2l8692
 18740   004476                     i2l8652:
 18741                           
 18742                           ; BSR set to: 0
 18743   004476  0E04               	movlw	4
 18744   004478  19EB               	xorwf	_etat_courant& (0+255),w,b
 18745   00447A  A4D8               	btfss	status,2,c
 18746   00447C  EF42  F022         	goto	i2u904_41
 18747   004480  EF44  F022         	goto	i2u904_40
 18748   004484                     i2u904_41:
 18749   004484  EF48  F022         	goto	i2l8656
 18750   004488                     i2u904_40:
 18751   004488                     
 18752                           ; BSR set to: 0
 18753                           ;main.c: 361:         etat_courant = ICLED_COULEUR2;
 18754   004488  0E05               	movlw	5
 18755   00448A  6FEB               	movwf	_etat_courant& (0+255),b
 18756                           
 18757                           ;main.c: 362:     } else if (etat_courant == ICLED_COULEUR2) {
 18758   00448C  EFBB  F022         	goto	i2l8692
 18759   004490                     i2l8656:
 18760                           
 18761                           ; BSR set to: 0
 18762   004490  0E05               	movlw	5
 18763   004492  19EB               	xorwf	_etat_courant& (0+255),w,b
 18764   004494  A4D8               	btfss	status,2,c
 18765   004496  EF4F  F022         	goto	i2u905_41
 18766   00449A  EF51  F022         	goto	i2u905_40
 18767   00449E                     i2u905_41:
 18768   00449E  EF55  F022         	goto	i2l8660
 18769   0044A2                     i2u905_40:
 18770   0044A2                     
 18771                           ; BSR set to: 0
 18772                           ;main.c: 363:         etat_courant = ICLED_COULEUR3;
 18773   0044A2  0E06               	movlw	6
 18774   0044A4  6FEB               	movwf	_etat_courant& (0+255),b
 18775                           
 18776                           ;main.c: 364:     } else if (etat_courant == ICLED_COULEUR3) {
 18777   0044A6  EFBB  F022         	goto	i2l8692
 18778   0044AA                     i2l8660:
 18779                           
 18780                           ; BSR set to: 0
 18781   0044AA  0E06               	movlw	6
 18782   0044AC  19EB               	xorwf	_etat_courant& (0+255),w,b
 18783   0044AE  A4D8               	btfss	status,2,c
 18784   0044B0  EF5C  F022         	goto	i2u906_41
 18785   0044B4  EF5E  F022         	goto	i2u906_40
 18786   0044B8                     i2u906_41:
 18787   0044B8  EF62  F022         	goto	i2l8664
 18788   0044BC                     i2u906_40:
 18789   0044BC                     
 18790                           ; BSR set to: 0
 18791                           ;main.c: 365:         etat_courant = ICLED_COULEUR4;
 18792   0044BC  0E07               	movlw	7
 18793   0044BE  6FEB               	movwf	_etat_courant& (0+255),b
 18794                           
 18795                           ;main.c: 366:     } else if (etat_courant == ICLED_COULEUR4) {
 18796   0044C0  EFBB  F022         	goto	i2l8692
 18797   0044C4                     i2l8664:
 18798                           
 18799                           ; BSR set to: 0
 18800   0044C4  0E07               	movlw	7
 18801   0044C6  19EB               	xorwf	_etat_courant& (0+255),w,b
 18802   0044C8  A4D8               	btfss	status,2,c
 18803   0044CA  EF69  F022         	goto	i2u907_41
 18804   0044CE  EF6B  F022         	goto	i2u907_40
 18805   0044D2                     i2u907_41:
 18806   0044D2  EF6F  F022         	goto	i2l8668
 18807   0044D6                     i2u907_40:
 18808   0044D6                     
 18809                           ; BSR set to: 0
 18810                           ;main.c: 367:         etat_courant = ICLED_COULEUR5;
 18811   0044D6  0E08               	movlw	8
 18812   0044D8  6FEB               	movwf	_etat_courant& (0+255),b
 18813                           
 18814                           ;main.c: 368:     } else if (etat_courant == ICLED_COULEUR5) {
 18815   0044DA  EFBB  F022         	goto	i2l8692
 18816   0044DE                     i2l8668:
 18817                           
 18818                           ; BSR set to: 0
 18819   0044DE  0E08               	movlw	8
 18820   0044E0  19EB               	xorwf	_etat_courant& (0+255),w,b
 18821   0044E2  A4D8               	btfss	status,2,c
 18822   0044E4  EF76  F022         	goto	i2u908_41
 18823   0044E8  EF78  F022         	goto	i2u908_40
 18824   0044EC                     i2u908_41:
 18825   0044EC  EF7C  F022         	goto	i2l8672
 18826   0044F0                     i2u908_40:
 18827   0044F0                     
 18828                           ; BSR set to: 0
 18829                           ;main.c: 369:         etat_courant = ICLED_COULEUR6;
 18830   0044F0  0E09               	movlw	9
 18831   0044F2  6FEB               	movwf	_etat_courant& (0+255),b
 18832                           
 18833                           ;main.c: 370:     } else if (etat_courant == ICLED_COULEUR6) {
 18834   0044F4  EFBB  F022         	goto	i2l8692
 18835   0044F8                     i2l8672:
 18836                           
 18837                           ; BSR set to: 0
 18838   0044F8  0E09               	movlw	9
 18839   0044FA  19EB               	xorwf	_etat_courant& (0+255),w,b
 18840   0044FC  A4D8               	btfss	status,2,c
 18841   0044FE  EF83  F022         	goto	i2u909_41
 18842   004502  EF85  F022         	goto	i2u909_40
 18843   004506                     i2u909_41:
 18844   004506  EF89  F022         	goto	i2l8676
 18845   00450A                     i2u909_40:
 18846   00450A                     
 18847                           ; BSR set to: 0
 18848                           ;main.c: 371:         etat_courant = ICLED_COULEUR7;
 18849   00450A  0E0A               	movlw	10
 18850   00450C  6FEB               	movwf	_etat_courant& (0+255),b
 18851                           
 18852                           ;main.c: 372:     } else if (etat_courant == ICLED_COULEUR7) {
 18853   00450E  EFBB  F022         	goto	i2l8692
 18854   004512                     i2l8676:
 18855                           
 18856                           ; BSR set to: 0
 18857   004512  0E0A               	movlw	10
 18858   004514  19EB               	xorwf	_etat_courant& (0+255),w,b
 18859   004516  A4D8               	btfss	status,2,c
 18860   004518  EF90  F022         	goto	i2u910_41
 18861   00451C  EF92  F022         	goto	i2u910_40
 18862   004520                     i2u910_41:
 18863   004520  EF96  F022         	goto	i2l8680
 18864   004524                     i2u910_40:
 18865   004524                     
 18866                           ; BSR set to: 0
 18867                           ;main.c: 373:         etat_courant = ICLED_COULEUR8;
 18868   004524  0E0B               	movlw	11
 18869   004526  6FEB               	movwf	_etat_courant& (0+255),b
 18870                           
 18871                           ;main.c: 374:     } else if (etat_courant == ICLED_COULEUR8) {
 18872   004528  EFBB  F022         	goto	i2l8692
 18873   00452C                     i2l8680:
 18874                           
 18875                           ; BSR set to: 0
 18876   00452C  0E0B               	movlw	11
 18877   00452E  19EB               	xorwf	_etat_courant& (0+255),w,b
 18878   004530  A4D8               	btfss	status,2,c
 18879   004532  EF9D  F022         	goto	i2u911_41
 18880   004536  EF9F  F022         	goto	i2u911_40
 18881   00453A                     i2u911_41:
 18882   00453A  EFA3  F022         	goto	i2l8684
 18883   00453E                     i2u911_40:
 18884   00453E                     
 18885                           ; BSR set to: 0
 18886                           ;main.c: 375:         etat_courant = Eteindre;
 18887   00453E  0E0C               	movlw	12
 18888   004540  6FEB               	movwf	_etat_courant& (0+255),b
 18889                           
 18890                           ;main.c: 376:     } else if (etat_courant == Eteindre) {
 18891   004542  EFBB  F022         	goto	i2l8692
 18892   004546                     i2l8684:
 18893                           
 18894                           ; BSR set to: 0
 18895   004546  0E0C               	movlw	12
 18896   004548  19EB               	xorwf	_etat_courant& (0+255),w,b
 18897   00454A  A4D8               	btfss	status,2,c
 18898   00454C  EFAA  F022         	goto	i2u912_41
 18899   004550  EFAC  F022         	goto	i2u912_40
 18900   004554                     i2u912_41:
 18901   004554  EFAF  F022         	goto	i2l8688
 18902   004558                     i2u912_40:
 18903   004558                     
 18904                           ; BSR set to: 0
 18905                           ;main.c: 377:         etat_courant = MENU_PRINCIPAL;
 18906   004558  6BEB               	clrf	_etat_courant& (0+255),b
 18907                           
 18908                           ;main.c: 378:     } else if (etat_courant == MENU_PRINCIPAL) {
 18909   00455A  EFBB  F022         	goto	i2l8692
 18910   00455E                     i2l8688:
 18911                           
 18912                           ; BSR set to: 0
 18913   00455E  51EB               	movf	_etat_courant& (0+255),w,b
 18914   004560  A4D8               	btfss	status,2,c
 18915   004562  EFB5  F022         	goto	i2u913_41
 18916   004566  EFB7  F022         	goto	i2u913_40
 18917   00456A                     i2u913_41:
 18918   00456A  EFBB  F022         	goto	i2l845
 18919   00456E                     i2u913_40:
 18920   00456E                     
 18921                           ; BSR set to: 0
 18922                           ;main.c: 379:         etat_courant = MENU_COURANT;
 18923   00456E  0E02               	movlw	2
 18924   004570  6FEB               	movwf	_etat_courant& (0+255),b
 18925   004572  EFBB  F022         	goto	i2l8692
 18926   004576                     i2l845:
 18927   004576                     i2l8692:
 18928                           
 18929                           ; BSR set to: 0
 18930                           ;main.c: 382:     LCD_UpdateMenu();
 18931   004576  ECBE  F019         	call	i2_LCD_UpdateMenu	;wreg free
 18932   00457A  0012               	return		;funcret
 18933   00457C                     __end_of_int_BP2:
 18934                           	callstack 0
 18935                           
 18936 ;; *************** function _BP1_ISR *****************
 18937 ;; Defined at:
 18938 ;;		line 151 in file "mcc_generated_files/system/src/pins.c"
 18939 ;; Parameters:    Size  Location     Type
 18940 ;;		None
 18941 ;; Auto vars:     Size  Location     Type
 18942 ;;		None
 18943 ;; Return value:  Size  Location     Type
 18944 ;;                  1    wreg      void 
 18945 ;; Registers used:
 18946 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
 18947 ;; Tracked objects:
 18948 ;;		On entry : 0/0
 18949 ;;		On exit  : 0/0
 18950 ;;		Unchanged: 0/0
 18951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18952 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18953 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18954 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18955 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18956 ;;Total ram usage:        0 bytes
 18957 ;; Hardware stack levels used: 1
 18958 ;; Hardware stack levels required when called: 10
 18959 ;; This function calls:
 18960 ;;		NULL
 18961 ;;		_BP1_DefaultInterruptHandler
 18962 ;;		_int_BP1
 18963 ;; This function is called by:
 18964 ;;		_PIN_MANAGER_IOC
 18965 ;; This function uses a non-reentrant model
 18966 ;;
 18967                           
 18968                           	psect	text71
 18969   00641A                     __ptext71:
 18970                           	callstack 0
 18971   00641A                     _BP1_ISR:
 18972                           	callstack 9
 18973   00641A                     
 18974                           ;mcc_generated_files/system/src/pins.c: 156:     if(BP1_InterruptHandler)
 18975   00641A  0100               	movlb	0	; () banked
 18976   00641C  51F9               	movf	_BP1_InterruptHandler& (0+255),w,b
 18977   00641E  11FA               	iorwf	(_BP1_InterruptHandler+1)& (0+255),w,b
 18978   006420  B4D8               	btfsc	status,2,c
 18979   006422  EF15  F032         	goto	i2u914_41
 18980   006426  EF17  F032         	goto	i2u914_40
 18981   00642A                     i2u914_41:
 18982   00642A  EF23  F032         	goto	i2l8704
 18983   00642E                     i2u914_40:
 18984   00642E                     
 18985                           ; BSR set to: 0
 18986                           ;mcc_generated_files/system/src/pins.c: 157:     {;mcc_generated_files/system/src/pins.c
      +                          : 158:         BP1_InterruptHandler();
 18987   00642E  D802               	call	i2u915_48
 18988   006430  EF23  F032         	goto	i2u915_49
 18989   006434                     i2u915_48:
 18990   006434  0005               	push	
 18991   006436  6EFA               	movwf	pclath,c
 18992   006438  51F9               	movf	_BP1_InterruptHandler& (0+255),w,b
 18993   00643A  6EFD               	movwf	tosl,c
 18994   00643C  51FA               	movf	(_BP1_InterruptHandler+1)& (0+255),w,b
 18995   00643E  6EFE               	movwf	tosh,c
 18996   006440  6AFF               	clrf	tosu,c
 18997   006442  50FA               	movf	pclath,w,c
 18998   006444  0012               	return		;indir
 18999   006446                     i2u915_49:
 19000   006446                     i2l8704:
 19001                           
 19002                           ;mcc_generated_files/system/src/pins.c: 160:     IOCAFbits.IOCAF1 = 0;
 19003   006446  013A               	movlb	58	; () banked
 19004   006448  9347               	bcf	71,1,b	;volatile
 19005   00644A                     
 19006                           ; BSR set to: 58
 19007   00644A  0012               	return		;funcret
 19008   00644C                     __end_of_BP1_ISR:
 19009                           	callstack 0
 19010                           
 19011 ;; *************** function _BP1_DefaultInterruptHandler *****************
 19012 ;; Defined at:
 19013 ;;		line 173 in file "mcc_generated_files/system/src/pins.c"
 19014 ;; Parameters:    Size  Location     Type
 19015 ;;		None
 19016 ;; Auto vars:     Size  Location     Type
 19017 ;;		None
 19018 ;; Return value:  Size  Location     Type
 19019 ;;                  1    wreg      void 
 19020 ;; Registers used:
 19021 ;;		None
 19022 ;; Tracked objects:
 19023 ;;		On entry : 0/0
 19024 ;;		On exit  : 0/0
 19025 ;;		Unchanged: 0/0
 19026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19027 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19028 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19029 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19030 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19031 ;;Total ram usage:        0 bytes
 19032 ;; Hardware stack levels used: 1
 19033 ;; This function calls:
 19034 ;;		Nothing
 19035 ;; This function is called by:
 19036 ;;		_PIN_MANAGER_Initialize
 19037 ;;		_BP1_ISR
 19038 ;; This function uses a non-reentrant model
 19039 ;;
 19040                           
 19041                           	psect	text72
 19042   006686                     __ptext72:
 19043                           	callstack 0
 19044   006686                     _BP1_DefaultInterruptHandler:
 19045                           	callstack 18
 19046   006686  0012               	return		;funcret
 19047   006688                     __end_of_BP1_DefaultInterruptHandler:
 19048                           	callstack 0
 19049                           
 19050 ;; *************** function _int_BP1 *****************
 19051 ;; Defined at:
 19052 ;;		line 335 in file "main.c"
 19053 ;; Parameters:    Size  Location     Type
 19054 ;;		None
 19055 ;; Auto vars:     Size  Location     Type
 19056 ;;		None
 19057 ;; Return value:  Size  Location     Type
 19058 ;;                  1    wreg      void 
 19059 ;; Registers used:
 19060 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19061 ;; Tracked objects:
 19062 ;;		On entry : 0/0
 19063 ;;		On exit  : 0/0
 19064 ;;		Unchanged: 0/0
 19065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19066 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19067 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19068 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19069 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19070 ;;Total ram usage:        2 bytes
 19071 ;; Hardware stack levels used: 1
 19072 ;; Hardware stack levels required when called: 9
 19073 ;; This function calls:
 19074 ;;		i2_LCD_UpdateMenu
 19075 ;; This function is called by:
 19076 ;;		_main
 19077 ;;		_BP1_ISR
 19078 ;; This function uses a non-reentrant model
 19079 ;;
 19080                           
 19081                           	psect	text73
 19082   005B18                     __ptext73:
 19083                           	callstack 0
 19084   005B18                     _int_BP1:
 19085                           	callstack 9
 19086   005B18                     
 19087                           ;main.c: 336:     _delay((unsigned long)((40)*(64000000U/4000.0)));
 19088   005B18  0E04               	movlw	4
 19089   005B1A  0100               	movlb	0	; () banked
 19090   005B1C  6FD4               	movwf	(??_int_BP1+1)& (0+255),b
 19091   005B1E  0E40               	movlw	64
 19092   005B20  6FD3               	movwf	??_int_BP1& (0+255),b
 19093   005B22  0E26               	movlw	38
 19094   005B24                     i2u943_47:
 19095   005B24  2EE8               	decfsz	wreg,f,c
 19096   005B26  D7FE               	bra	i2u943_47
 19097   005B28  2FD3               	decfsz	??_int_BP1& (0+255),f,b
 19098   005B2A  D7FC               	bra	i2u943_47
 19099   005B2C  2FD4               	decfsz	(??_int_BP1+1)& (0+255),f,b
 19100   005B2E  D7FA               	bra	i2u943_47
 19101   005B30  0000               	nop	
 19102                           
 19103                           ;main.c: 338:     switch (etat_courant) {
 19104   005B32  EFA2  F02D         	goto	i2l8638
 19105   005B36                     i2l8634:
 19106                           
 19107                           ; BSR set to: 0
 19108                           ;main.c: 340:             etat_courant = MENU_ICLED;
 19109   005B36  0E01               	movlw	1
 19110   005B38  6FEB               	movwf	_etat_courant& (0+255),b
 19111                           
 19112                           ;main.c: 341:             break;
 19113   005B3A  EFB8  F02D         	goto	i2l8640
 19114   005B3E                     i2l825:
 19115                           
 19116                           ; BSR set to: 0
 19117                           ;main.c: 344:             etat_courant = MENU_PRINCIPAL;
 19118   005B3E  6BEB               	clrf	_etat_courant& (0+255),b
 19119                           
 19120                           ;main.c: 345:             break;
 19121   005B40  EFB8  F02D         	goto	i2l8640
 19122   005B44                     i2l8638:
 19123   005B44  0100               	movlb	0	; () banked
 19124   005B46  51EB               	movf	_etat_courant& (0+255),w,b
 19125   005B48  6FD3               	movwf	??_int_BP1& (0+255),b
 19126   005B4A  6BD4               	clrf	(??_int_BP1+1)& (0+255),b
 19127                           
 19128                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 19129                           ; Switch size 1, requested type "simple"
 19130                           ; Number of cases is 1, Range of values is 0 to 0
 19131                           ; switch strategies available:
 19132                           ; Name         Instructions Cycles
 19133                           ; simple_byte            4     3 (average)
 19134                           ;	Chosen strategy is simple_byte
 19135   005B4C  51D4               	movf	(??_int_BP1+1)& (0+255),w,b
 19136   005B4E  0A00               	xorlw	0	; case 0
 19137   005B50  B4D8               	btfsc	status,2,c
 19138   005B52  EFAD  F02D         	goto	i2l8836
 19139   005B56  EF9F  F02D         	goto	i2l825
 19140   005B5A                     i2l8836:
 19141                           
 19142                           ; BSR set to: 0
 19143                           ; Switch size 1, requested type "simple"
 19144                           ; Number of cases is 2, Range of values is 0 to 12
 19145                           ; switch strategies available:
 19146                           ; Name         Instructions Cycles
 19147                           ; simple_byte            7     4 (average)
 19148                           ;	Chosen strategy is simple_byte
 19149   005B5A  51D3               	movf	??_int_BP1& (0+255),w,b
 19150   005B5C  0A00               	xorlw	0	; case 0
 19151   005B5E  B4D8               	btfsc	status,2,c
 19152   005B60  EF9B  F02D         	goto	i2l8634
 19153   005B64  0A0C               	xorlw	12	; case 12
 19154   005B66  B4D8               	btfsc	status,2,c
 19155   005B68  EF9F  F02D         	goto	i2l825
 19156   005B6C  EF9F  F02D         	goto	i2l825
 19157   005B70                     i2l8640:
 19158                           
 19159                           ; BSR set to: 0
 19160                           ;main.c: 352:     LCD_UpdateMenu();
 19161   005B70  ECBE  F019         	call	i2_LCD_UpdateMenu	;wreg free
 19162   005B74  0012               	return		;funcret
 19163   005B76                     __end_of_int_BP1:
 19164                           	callstack 0
 19165                           
 19166 ;; *************** function i2_LCD_UpdateMenu *****************
 19167 ;; Defined at:
 19168 ;;		line 104 in file "main.c"
 19169 ;; Parameters:    Size  Location     Type
 19170 ;;		None
 19171 ;; Auto vars:     Size  Location     Type
 19172 ;;  buffer         16   93[BANK0 ] unsigned char [16]
 19173 ;;  tension         4  109[BANK0 ] float 
 19174 ;;  courant         2  113[BANK0 ] int 
 19175 ;; Return value:  Size  Location     Type
 19176 ;;                  1    wreg      void 
 19177 ;; Registers used:
 19178 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19179 ;; Tracked objects:
 19180 ;;		On entry : 0/0
 19181 ;;		On exit  : 0/0
 19182 ;;		Unchanged: 0/0
 19183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19184 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19185 ;;      Locals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19186 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19187 ;;      Totals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19188 ;;Total ram usage:       24 bytes
 19189 ;; Hardware stack levels used: 1
 19190 ;; Hardware stack levels required when called: 8
 19191 ;; This function calls:
 19192 ;;		i2_LCD_Char
 19193 ;;		i2_LCD_Init
 19194 ;;		i2_LCD_SetCursor
 19195 ;;		i2_LCD_String
 19196 ;;		i2___fltol
 19197 ;;		i2_lire_tension
 19198 ;;		i2_sprintf
 19199 ;; This function is called by:
 19200 ;;		_int_BP1
 19201 ;;		_int_BP2
 19202 ;;		_int_BP3
 19203 ;; This function uses a non-reentrant model
 19204 ;;
 19205                           
 19206                           	psect	text74
 19207   00337C                     __ptext74:
 19208                           	callstack 0
 19209   00337C                     i2_LCD_UpdateMenu:
 19210                           	callstack 9
 19211   00337C                     
 19212                           ;main.c: 106:     char buffer[16];;main.c: 108:     LCD_Init();
 19213   00337C  ECC1  F031         	call	i2_LCD_Init	;wreg free
 19214                           
 19215                           ;main.c: 109:     switch (etat_courant) {
 19216   003380  EF35  F01B         	goto	i2l8626
 19217   003384                     i2l8508:
 19218                           
 19219                           ; BSR set to: 0
 19220                           ;main.c: 111:             LCD_SetCursor(0,6); LCD_String("Menu");
 19221   003384  0E06               	movlw	6
 19222   003386  6E03               	movwf	i2LCD_SetCursor@column^0,c
 19223   003388  0E00               	movlw	0
 19224   00338A  EC1D  F02F         	call	i2_LCD_SetCursor
 19225   00338E  0EF2               	movlw	low STR_1
 19226   003390  6E03               	movwf	i2LCD_String@str^0,c
 19227   003392  0EFF               	movlw	high STR_1
 19228   003394  6E04               	movwf	(i2LCD_String@str+1)^0,c
 19229   003396  ECED  F02C         	call	i2_LCD_String	;wreg free
 19230   00339A                     
 19231                           ;main.c: 112:             LCD_SetCursor(1,0); LCD_String("1.ICLED 2.MESURE");
 19232   00339A  0E00               	movlw	0
 19233   00339C  6E03               	movwf	i2LCD_SetCursor@column^0,c
 19234   00339E  0E01               	movlw	1
 19235   0033A0  EC1D  F02F         	call	i2_LCD_SetCursor
 19236   0033A4  0E09               	movlw	low STR_2
 19237   0033A6  6E03               	movwf	i2LCD_String@str^0,c
 19238   0033A8  0EFF               	movlw	high STR_2
 19239   0033AA  6E04               	movwf	(i2LCD_String@str+1)^0,c
 19240   0033AC  ECED  F02C         	call	i2_LCD_String	;wreg free
 19241   0033B0                     
 19242                           ;main.c: 113:             LCD_SetCursor(2,0); LCD_String("3.INTEN 4.ANIMA");
 19243   0033B0  0E00               	movlw	0
 19244   0033B2  6E03               	movwf	i2LCD_SetCursor@column^0,c
 19245   0033B4  0E02               	movlw	2
 19246   0033B6  EC1D  F02F         	call	i2_LCD_SetCursor
 19247   0033BA  0E1A               	movlw	low STR_3
 19248   0033BC  6E03               	movwf	i2LCD_String@str^0,c
 19249   0033BE  0EFF               	movlw	high STR_3
 19250   0033C0  6E04               	movwf	(i2LCD_String@str+1)^0,c
 19251   0033C2  ECED  F02C         	call	i2_LCD_String	;wreg free
 19252                           
 19253                           ;main.c: 114:             LCD_SetCursor(2,15); LCD_Char(0b11011111);
 19254   0033C6  0E0F               	movlw	15
 19255   0033C8  6E03               	movwf	i2LCD_SetCursor@column^0,c
 19256   0033CA  0E02               	movlw	2
 19257   0033CC  EC1D  F02F         	call	i2_LCD_SetCursor
 19258   0033D0  0EDF               	movlw	223
 19259   0033D2  EC7E  F032         	call	i2_LCD_Char
 19260                           
 19261                           ;main.c: 115:             break;
 19262   0033D6  EF7B  F01B         	goto	i2l761
 19263   0033DA                     i2l8520:
 19264                           
 19265                           ; BSR set to: 0
 19266                           ;main.c: 118:             LCD_SetCursor(0,0); LCD_String("LED:");
 19267   0033DA  0E00               	movlw	0
 19268   0033DC  6E03               	movwf	i2LCD_SetCursor@column^0,c
 19269   0033DE  0E00               	movlw	0
 19270   0033E0  EC1D  F02F         	call	i2_LCD_SetCursor
 19271   0033E4  0EED               	movlw	low STR_4
 19272   0033E6  6E03               	movwf	i2LCD_String@str^0,c
 19273   0033E8  0EFF               	movlw	high STR_4
 19274   0033EA  6E04               	movwf	(i2LCD_String@str+1)^0,c
 19275   0033EC  ECED  F02C         	call	i2_LCD_String	;wreg free
 19276   0033F0                     
 19277                           ;main.c: 119:             LCD_SetCursor(1,0); LCD_String("1.R 2.G 3.B 4.O");
 19278   0033F0  0E00               	movlw	0
 19279   0033F2  6E03               	movwf	i2LCD_SetCursor@column^0,c
 19280   0033F4  0E01               	movlw	1
 19281   0033F6  EC1D  F02F         	call	i2_LCD_SetCursor
 19282   0033FA  0E3A               	movlw	low STR_5
 19283   0033FC  6E03               	movwf	i2LCD_String@str^0,c
 19284   0033FE  0EFF               	movlw	high STR_5
 19285   003400  6E04               	movwf	(i2LCD_String@str+1)^0,c
 19286   003402  ECED  F02C         	call	i2_LCD_String	;wreg free
 19287                           
 19288                           ;main.c: 120:             break;
 19289   003406  EF7B  F01B         	goto	i2l761
 19290   00340A                     i2l8526:
 19291                           
 19292                           ; BSR set to: 0
 19293                           ;main.c: 123:             LCD_SetCursor(0,0); LCD_String("Mesure courant");
 19294   00340A  0E00               	movlw	0
 19295   00340C  6E03               	movwf	i2LCD_SetCursor@column^0,c
 19296   00340E  0E00               	movlw	0
 19297   003410  EC1D  F02F         	call	i2_LCD_SetCursor
 19298   003414  0E87               	movlw	low STR_6
 19299   003416  6E03               	movwf	i2LCD_String@str^0,c
 19300   003418  0EFF               	movlw	high STR_6
 19301   00341A  6E04               	movwf	(i2LCD_String@str+1)^0,c
 19302   00341C  ECED  F02C         	call	i2_LCD_String	;wreg free
 19303                           
 19304                           ;main.c: 124:             break;
 19305   003420  EF7B  F01B         	goto	i2l761
 19306   003424                     i2l8530:
 19307                           
 19308                           ; BSR set to: 0
 19309                           ;main.c: 127:             LCD_SetCursor(0,0); LCD_String("Couleur: ROUGE");
 19310   003424  0E00               	movlw	0
 19311   003426  6E03               	movwf	i2LCD_SetCursor@column^0,c
 19312   003428  0E00               	movlw	0
 19313   00342A  EC1D  F02F         	call	i2_LCD_SetCursor
 19314   00342E  0E69               	movlw	low STR_7
 19315   003430  6E03               	movwf	i2LCD_String@str^0,c
 19316   003432  0EFF               	movlw	high STR_7
 19317   003434  6E04               	movwf	(i2LCD_String@str+1)^0,c
 19318   003436  ECED  F02C         	call	i2_LCD_String	;wreg free
 19319   00343A                     
 19320                           ;main.c: 128:             LCD_SetCursor(1,15); LCD_Char(0b01111110);
 19321   00343A  0E0F               	movlw	15
 19322   00343C  6E03               	movwf	i2LCD_SetCursor@column^0,c
 19323   00343E  0E01               	movlw	1
 19324   003440  EC1D  F02F         	call	i2_LCD_SetCursor
 19325   003444  0E7E               	movlw	126
 19326   003446  EC7E  F032         	call	i2_LCD_Char
 19327                           
 19328                           ;main.c: 129:             break;
 19329   00344A  EF7B  F01B         	goto	i2l761
 19330   00344E                     i2l8538:
 19331                           
 19332                           ; BSR set to: 0
 19333                           ;main.c: 132:             LCD_SetCursor(0,0); LCD_String("Couleur: VERT");
 19334   00344E  0E00               	movlw	0
 19335   003450  6E03               	movwf	i2LCD_SetCursor@column^0,c
 19336   003452  0E00               	movlw	0
 19337   003454  EC1D  F02F         	call	i2_LCD_SetCursor
 19338   003458  0EB2               	movlw	low STR_8
 19339   00345A  6E03               	movwf	i2LCD_String@str^0,c
 19340   00345C  0EFF               	movlw	high STR_8
 19341   00345E  6E04               	movwf	(i2LCD_String@str+1)^0,c
 19342   003460  ECED  F02C         	call	i2_LCD_String	;wreg free
 19343   003464                     
 19344                           ;main.c: 133:             LCD_SetCursor(1,15); LCD_Char(0b01111110);
 19345   003464  0E0F               	movlw	15
 19346   003466  6E03               	movwf	i2LCD_SetCursor@column^0,c
 19347   003468  0E01               	movlw	1
 19348   00346A  EC1D  F02F         	call	i2_LCD_SetCursor
 19349   00346E  0E7E               	movlw	126
 19350   003470  EC7E  F032         	call	i2_LCD_Char
 19351                           
 19352                           ;main.c: 134:             break;
 19353   003474  EF7B  F01B         	goto	i2l761
 19354   003478                     i2l8546:
 19355                           
 19356                           ; BSR set to: 0
 19357                           ;main.c: 137:             LCD_SetCursor(0,0); LCD_String("Couleur: BLEU");
 19358   003478  0E00               	movlw	0
 19359   00347A  6E03               	movwf	i2LCD_SetCursor@column^0,c
 19360   00347C  0E00               	movlw	0
 19361   00347E  EC1D  F02F         	call	i2_LCD_SetCursor
 19362   003482  0EC0               	movlw	low STR_9
 19363   003484  6E03               	movwf	i2LCD_String@str^0,c
 19364   003486  0EFF               	movlw	high STR_9
 19365   003488  6E04               	movwf	(i2LCD_String@str+1)^0,c
 19366   00348A  ECED  F02C         	call	i2_LCD_String	;wreg free
 19367   00348E                     
 19368                           ;main.c: 138:             LCD_SetCursor(1,15); LCD_Char(0b01111110);
 19369   00348E  0E0F               	movlw	15
 19370   003490  6E03               	movwf	i2LCD_SetCursor@column^0,c
 19371   003492  0E01               	movlw	1
 19372   003494  EC1D  F02F         	call	i2_LCD_SetCursor
 19373   003498  0E7E               	movlw	126
 19374   00349A  EC7E  F032         	call	i2_LCD_Char
 19375                           
 19376                           ;main.c: 139:             break;
 19377   00349E  EF7B  F01B         	goto	i2l761
 19378   0034A2                     i2l8554:
 19379                           
 19380                           ; BSR set to: 0
 19381                           ;main.c: 142:             LCD_SetCursor(0,0); LCD_String("Couleur: ORANGE");
 19382   0034A2  0E00               	movlw	0
 19383   0034A4  6E03               	movwf	i2LCD_SetCursor@column^0,c
 19384   0034A6  0E00               	movlw	0
 19385   0034A8  EC1D  F02F         	call	i2_LCD_SetCursor
 19386   0034AC  0E2A               	movlw	low STR_10
 19387   0034AE  6E03               	movwf	i2LCD_String@str^0,c
 19388   0034B0  0EFF               	movlw	high STR_10
 19389   0034B2  6E04               	movwf	(i2LCD_String@str+1)^0,c
 19390   0034B4  ECED  F02C         	call	i2_LCD_String	;wreg free
 19391   0034B8                     
 19392                           ;main.c: 143:             LCD_SetCursor(1,15); LCD_Char(0b01111110);
 19393   0034B8  0E0F               	movlw	15
 19394   0034BA  6E03               	movwf	i2LCD_SetCursor@column^0,c
 19395   0034BC  0E01               	movlw	1
 19396   0034BE  EC1D  F02F         	call	i2_LCD_SetCursor
 19397   0034C2  0E7E               	movlw	126
 19398   0034C4  EC7E  F032         	call	i2_LCD_Char
 19399                           
 19400                           ;main.c: 144:             break;
 19401   0034C8  EF7B  F01B         	goto	i2l761
 19402   0034CC                     i2l8562:
 19403                           
 19404                           ; BSR set to: 0
 19405                           ;main.c: 147:             LCD_SetCursor(0,0); LCD_String("Couleur: JAUNE");
 19406   0034CC  0E00               	movlw	0
 19407   0034CE  6E03               	movwf	i2LCD_SetCursor@column^0,c
 19408   0034D0  0E00               	movlw	0
 19409   0034D2  EC1D  F02F         	call	i2_LCD_SetCursor
 19410   0034D6  0E78               	movlw	low STR_11
 19411   0034D8  6E03               	movwf	i2LCD_String@str^0,c
 19412   0034DA  0EFF               	movlw	high STR_11
 19413   0034DC  6E04               	movwf	(i2LCD_String@str+1)^0,c
 19414   0034DE  ECED  F02C         	call	i2_LCD_String	;wreg free
 19415   0034E2                     
 19416                           ;main.c: 148:             LCD_SetCursor(1,15); LCD_Char(0b01111110);
 19417   0034E2  0E0F               	movlw	15
 19418   0034E4  6E03               	movwf	i2LCD_SetCursor@column^0,c
 19419   0034E6  0E01               	movlw	1
 19420   0034E8  EC1D  F02F         	call	i2_LCD_SetCursor
 19421   0034EC  0E7E               	movlw	126
 19422   0034EE  EC7E  F032         	call	i2_LCD_Char
 19423                           
 19424                           ;main.c: 149:             break;
 19425   0034F2  EF7B  F01B         	goto	i2l761
 19426   0034F6                     i2l8570:
 19427                           
 19428                           ; BSR set to: 0
 19429                           ;main.c: 152:             LCD_SetCursor(0,0); LCD_String("Couleur: VIOLET");
 19430   0034F6  0E00               	movlw	0
 19431   0034F8  6E03               	movwf	i2LCD_SetCursor@column^0,c
 19432   0034FA  0E00               	movlw	0
 19433   0034FC  EC1D  F02F         	call	i2_LCD_SetCursor
 19434   003500  0E4A               	movlw	low STR_12
 19435   003502  6E03               	movwf	i2LCD_String@str^0,c
 19436   003504  0EFF               	movlw	high STR_12
 19437   003506  6E04               	movwf	(i2LCD_String@str+1)^0,c
 19438   003508  ECED  F02C         	call	i2_LCD_String	;wreg free
 19439   00350C                     
 19440                           ;main.c: 153:             LCD_SetCursor(1,15); LCD_Char(0b01111110);
 19441   00350C  0E0F               	movlw	15
 19442   00350E  6E03               	movwf	i2LCD_SetCursor@column^0,c
 19443   003510  0E01               	movlw	1
 19444   003512  EC1D  F02F         	call	i2_LCD_SetCursor
 19445   003516  0E7E               	movlw	126
 19446   003518  EC7E  F032         	call	i2_LCD_Char
 19447                           
 19448                           ;main.c: 154:             break;
 19449   00351C  EF7B  F01B         	goto	i2l761
 19450   003520                     i2l8578:
 19451                           
 19452                           ; BSR set to: 0
 19453                           ;main.c: 157:             LCD_SetCursor(0,0); LCD_String("Couleur: ROSE");
 19454   003520  0E00               	movlw	0
 19455   003522  6E03               	movwf	i2LCD_SetCursor@column^0,c
 19456   003524  0E00               	movlw	0
 19457   003526  EC1D  F02F         	call	i2_LCD_SetCursor
 19458   00352A  0EA4               	movlw	low STR_13
 19459   00352C  6E03               	movwf	i2LCD_String@str^0,c
 19460   00352E  0EFF               	movlw	high STR_13
 19461   003530  6E04               	movwf	(i2LCD_String@str+1)^0,c
 19462   003532  ECED  F02C         	call	i2_LCD_String	;wreg free
 19463   003536                     
 19464                           ;main.c: 158:             LCD_SetCursor(1,15); LCD_Char(0b01111110);
 19465   003536  0E0F               	movlw	15
 19466   003538  6E03               	movwf	i2LCD_SetCursor@column^0,c
 19467   00353A  0E01               	movlw	1
 19468   00353C  EC1D  F02F         	call	i2_LCD_SetCursor
 19469   003540  0E7E               	movlw	126
 19470   003542  EC7E  F032         	call	i2_LCD_Char
 19471                           
 19472                           ;main.c: 159:             break;
 19473   003546  EF7B  F01B         	goto	i2l761
 19474   00354A                     i2l8586:
 19475                           
 19476                           ; BSR set to: 0
 19477                           ;main.c: 162:             LCD_SetCursor(0,0); LCD_String("Couleur: BLANC");
 19478   00354A  0E00               	movlw	0
 19479   00354C  6E03               	movwf	i2LCD_SetCursor@column^0,c
 19480   00354E  0E00               	movlw	0
 19481   003550  EC1D  F02F         	call	i2_LCD_SetCursor
 19482   003554  0E5A               	movlw	low STR_14
 19483   003556  6E03               	movwf	i2LCD_String@str^0,c
 19484   003558  0EFF               	movlw	high STR_14
 19485   00355A  6E04               	movwf	(i2LCD_String@str+1)^0,c
 19486   00355C  ECED  F02C         	call	i2_LCD_String	;wreg free
 19487   003560                     
 19488                           ;main.c: 163:             LCD_SetCursor(1,15); LCD_Char(0b01111110);
 19489   003560  0E0F               	movlw	15
 19490   003562  6E03               	movwf	i2LCD_SetCursor@column^0,c
 19491   003564  0E01               	movlw	1
 19492   003566  EC1D  F02F         	call	i2_LCD_SetCursor
 19493   00356A  0E7E               	movlw	126
 19494   00356C  EC7E  F032         	call	i2_LCD_Char
 19495                           
 19496                           ;main.c: 164:             break;
 19497   003570  EF7B  F01B         	goto	i2l761
 19498   003574                     i2l8594:
 19499                           
 19500                           ; BSR set to: 0
 19501                           ;main.c: 171:             LCD_SetCursor(0,0); LCD_String("ETEINDRE");
 19502   003574  0E00               	movlw	0
 19503   003576  6E03               	movwf	i2LCD_SetCursor@column^0,c
 19504   003578  0E00               	movlw	0
 19505   00357A  EC1D  F02F         	call	i2_LCD_SetCursor
 19506   00357E  0ECE               	movlw	low STR_15
 19507   003580  6E03               	movwf	i2LCD_String@str^0,c
 19508   003582  0EFF               	movlw	high STR_15
 19509   003584  6E04               	movwf	(i2LCD_String@str+1)^0,c
 19510   003586  ECED  F02C         	call	i2_LCD_String	;wreg free
 19511   00358A                     
 19512                           ;main.c: 172:             LCD_SetCursor(1,15); LCD_Char(0b01111111);
 19513   00358A  0E0F               	movlw	15
 19514   00358C  6E03               	movwf	i2LCD_SetCursor@column^0,c
 19515   00358E  0E01               	movlw	1
 19516   003590  EC1D  F02F         	call	i2_LCD_SetCursor
 19517   003594  0E7F               	movlw	127
 19518   003596  EC7E  F032         	call	i2_LCD_Char
 19519                           
 19520                           ;main.c: 173:             break;
 19521   00359A  EF7B  F01B         	goto	i2l761
 19522   00359E                     i2l8602:
 19523                           
 19524                           ; BSR set to: 0
 19525                           ;main.c: 176:             LCD_SetCursor(0,0);
 19526   00359E  0E00               	movlw	0
 19527   0035A0  6E03               	movwf	i2LCD_SetCursor@column^0,c
 19528   0035A2  0E00               	movlw	0
 19529   0035A4  EC1D  F02F         	call	i2_LCD_SetCursor
 19530   0035A8                     
 19531                           ;main.c: 177:             LCD_String("V_Iled:");
 19532   0035A8  0ED7               	movlw	low STR_16
 19533   0035AA  6E03               	movwf	i2LCD_String@str^0,c
 19534   0035AC  0EFF               	movlw	high STR_16
 19535   0035AE  6E04               	movwf	(i2LCD_String@str+1)^0,c
 19536   0035B0  ECED  F02C         	call	i2_LCD_String	;wreg free
 19537   0035B4                     
 19538                           ;main.c: 178:             LCD_SetCursor(1, 0);
 19539   0035B4  0E00               	movlw	0
 19540   0035B6  6E03               	movwf	i2LCD_SetCursor@column^0,c
 19541   0035B8  0E01               	movlw	1
 19542   0035BA  EC1D  F02F         	call	i2_LCD_SetCursor
 19543   0035BE                     
 19544                           ;main.c: 179:             float tension = lire_tension();
 19545   0035BE  ECE8  F02B         	call	i2_lire_tension	;wreg free
 19546   0035C2  C041  F0CD         	movff	?i2_lire_tension,i2LCD_UpdateMenu@tension
 19547   0035C6  C042  F0CE         	movff	?i2_lire_tension+1,i2LCD_UpdateMenu@tension+1
 19548   0035CA  C043  F0CF         	movff	?i2_lire_tension+2,i2LCD_UpdateMenu@tension+2
 19549   0035CE  C044  F0D0         	movff	?i2_lire_tension+3,i2LCD_UpdateMenu@tension+3
 19550   0035D2                     
 19551                           ;main.c: 180:             sprintf(buffer, "%.2f V", tension);
 19552   0035D2  0EBD               	movlw	low i2LCD_UpdateMenu@buffer
 19553   0035D4  0100               	movlb	0	; () banked
 19554   0035D6  6FA6               	movwf	i2sprintf@s& (0+255),b
 19555   0035D8  6BA7               	clrf	(i2sprintf@s+1)& (0+255),b
 19556   0035DA  0EE6               	movlw	low STR_17
 19557   0035DC  6FA8               	movwf	i2sprintf@fmt& (0+255),b
 19558   0035DE  0EFF               	movlw	high STR_17
 19559   0035E0  6FA9               	movwf	(i2sprintf@fmt+1)& (0+255),b
 19560   0035E2  C0CD  F0AA         	movff	i2LCD_UpdateMenu@tension,?i2_sprintf+4
 19561   0035E6  C0CE  F0AB         	movff	i2LCD_UpdateMenu@tension+1,?i2_sprintf+5
 19562   0035EA  C0CF  F0AC         	movff	i2LCD_UpdateMenu@tension+2,?i2_sprintf+6
 19563   0035EE  C0D0  F0AD         	movff	i2LCD_UpdateMenu@tension+3,?i2_sprintf+7
 19564   0035F2  EC97  F02F         	call	i2_sprintf	;wreg free
 19565   0035F6                     
 19566                           ;main.c: 181:             LCD_String(buffer);
 19567   0035F6  0EBD               	movlw	low i2LCD_UpdateMenu@buffer
 19568   0035F8  6E03               	movwf	i2LCD_String@str^0,c
 19569   0035FA  6A04               	clrf	(i2LCD_String@str+1)^0,c
 19570   0035FC  ECED  F02C         	call	i2_LCD_String	;wreg free
 19571   003600                     
 19572                           ;main.c: 182:             LCD_SetCursor(2,0);
 19573   003600  0E00               	movlw	0
 19574   003602  6E03               	movwf	i2LCD_SetCursor@column^0,c
 19575   003604  0E02               	movlw	2
 19576   003606  EC1D  F02F         	call	i2_LCD_SetCursor
 19577   00360A                     
 19578                           ;main.c: 183:             LCD_String("Courent leds:");
 19579   00360A  0E96               	movlw	low STR_18
 19580   00360C  6E03               	movwf	i2LCD_String@str^0,c
 19581   00360E  0EFF               	movlw	high STR_18
 19582   003610  6E04               	movwf	(i2LCD_String@str+1)^0,c
 19583   003612  ECED  F02C         	call	i2_LCD_String	;wreg free
 19584   003616                     
 19585                           ;main.c: 184:             LCD_SetCursor(3,0);
 19586   003616  0E00               	movlw	0
 19587   003618  6E03               	movwf	i2LCD_SetCursor@column^0,c
 19588   00361A  0E03               	movlw	3
 19589   00361C  EC1D  F02F         	call	i2_LCD_SetCursor
 19590   003620                     
 19591                           ;main.c: 185:             int courant = lire_tension() ;
 19592   003620  ECE8  F02B         	call	i2_lire_tension	;wreg free
 19593   003624  C041  F04B         	movff	?i2_lire_tension,i2___fltol@f1
 19594   003628  C042  F04C         	movff	?i2_lire_tension+1,i2___fltol@f1+1
 19595   00362C  C043  F04D         	movff	?i2_lire_tension+2,i2___fltol@f1+2
 19596   003630  C044  F04E         	movff	?i2_lire_tension+3,i2___fltol@f1+3
 19597   003634  ECC5  F023         	call	i2___fltol	;wreg free
 19598   003638  C04B  F0D1         	movff	?i2___fltol,i2LCD_UpdateMenu@courant
 19599   00363C  C04C  F0D2         	movff	?i2___fltol+1,i2LCD_UpdateMenu@courant+1
 19600   003640                     
 19601                           ;main.c: 186:             sprintf(buffer, "%.3e A", courant);
 19602   003640  0EBD               	movlw	low i2LCD_UpdateMenu@buffer
 19603   003642  0100               	movlb	0	; () banked
 19604   003644  6FA6               	movwf	i2sprintf@s& (0+255),b
 19605   003646  6BA7               	clrf	(i2sprintf@s+1)& (0+255),b
 19606   003648  0EDF               	movlw	low STR_19
 19607   00364A  6FA8               	movwf	i2sprintf@fmt& (0+255),b
 19608   00364C  0EFF               	movlw	high STR_19
 19609   00364E  6FA9               	movwf	(i2sprintf@fmt+1)& (0+255),b
 19610   003650  C0D1  F0AA         	movff	i2LCD_UpdateMenu@courant,?i2_sprintf+4
 19611   003654  C0D2  F0AB         	movff	i2LCD_UpdateMenu@courant+1,?i2_sprintf+5
 19612   003658  EC97  F02F         	call	i2_sprintf	;wreg free
 19613                           
 19614                           ;main.c: 187:             LCD_String(buffer);
 19615   00365C  0EBD               	movlw	low i2LCD_UpdateMenu@buffer
 19616   00365E  6E03               	movwf	i2LCD_String@str^0,c
 19617   003660  6A04               	clrf	(i2LCD_String@str+1)^0,c
 19618   003662  ECED  F02C         	call	i2_LCD_String	;wreg free
 19619                           
 19620                           ;main.c: 189:             break;
 19621   003666  EF7B  F01B         	goto	i2l761
 19622   00366A                     i2l8626:
 19623   00366A  0100               	movlb	0	; () banked
 19624   00366C  51EB               	movf	_etat_courant& (0+255),w,b
 19625   00366E  6FBB               	movwf	??i2_LCD_UpdateMenu& (0+255),b
 19626   003670  6BBC               	clrf	(??i2_LCD_UpdateMenu+1)& (0+255),b
 19627                           
 19628                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 19629                           ; Switch size 1, requested type "simple"
 19630                           ; Number of cases is 1, Range of values is 0 to 0
 19631                           ; switch strategies available:
 19632                           ; Name         Instructions Cycles
 19633                           ; simple_byte            4     3 (average)
 19634                           ;	Chosen strategy is simple_byte
 19635   003672  51BC               	movf	(??i2_LCD_UpdateMenu+1)& (0+255),w,b
 19636   003674  0A00               	xorlw	0	; case 0
 19637   003676  B4D8               	btfsc	status,2,c
 19638   003678  EF40  F01B         	goto	i2l8838
 19639   00367C  EF7B  F01B         	goto	i2l761
 19640   003680                     i2l8838:
 19641                           
 19642                           ; BSR set to: 0
 19643                           ; Switch size 1, requested type "simple"
 19644                           ; Number of cases is 14, Range of values is 0 to 13
 19645                           ; switch strategies available:
 19646                           ; Name         Instructions Cycles
 19647                           ; simple_byte           43    22 (average)
 19648                           ;	Chosen strategy is simple_byte
 19649   003680  51BB               	movf	??i2_LCD_UpdateMenu& (0+255),w,b
 19650   003682  0A00               	xorlw	0	; case 0
 19651   003684  B4D8               	btfsc	status,2,c
 19652   003686  EFC2  F019         	goto	i2l8508
 19653   00368A  0A01               	xorlw	1	; case 1
 19654   00368C  B4D8               	btfsc	status,2,c
 19655   00368E  EFED  F019         	goto	i2l8520
 19656   003692  0A03               	xorlw	3	; case 2
 19657   003694  B4D8               	btfsc	status,2,c
 19658   003696  EF05  F01A         	goto	i2l8526
 19659   00369A  0A01               	xorlw	1	; case 3
 19660   00369C  B4D8               	btfsc	status,2,c
 19661   00369E  EF7B  F01B         	goto	i2l761
 19662   0036A2  0A07               	xorlw	7	; case 4
 19663   0036A4  B4D8               	btfsc	status,2,c
 19664   0036A6  EF12  F01A         	goto	i2l8530
 19665   0036AA  0A01               	xorlw	1	; case 5
 19666   0036AC  B4D8               	btfsc	status,2,c
 19667   0036AE  EF27  F01A         	goto	i2l8538
 19668   0036B2  0A03               	xorlw	3	; case 6
 19669   0036B4  B4D8               	btfsc	status,2,c
 19670   0036B6  EF3C  F01A         	goto	i2l8546
 19671   0036BA  0A01               	xorlw	1	; case 7
 19672   0036BC  B4D8               	btfsc	status,2,c
 19673   0036BE  EF51  F01A         	goto	i2l8554
 19674   0036C2  0A0F               	xorlw	15	; case 8
 19675   0036C4  B4D8               	btfsc	status,2,c
 19676   0036C6  EF66  F01A         	goto	i2l8562
 19677   0036CA  0A01               	xorlw	1	; case 9
 19678   0036CC  B4D8               	btfsc	status,2,c
 19679   0036CE  EF7B  F01A         	goto	i2l8570
 19680   0036D2  0A03               	xorlw	3	; case 10
 19681   0036D4  B4D8               	btfsc	status,2,c
 19682   0036D6  EF90  F01A         	goto	i2l8578
 19683   0036DA  0A01               	xorlw	1	; case 11
 19684   0036DC  B4D8               	btfsc	status,2,c
 19685   0036DE  EFA5  F01A         	goto	i2l8586
 19686   0036E2  0A07               	xorlw	7	; case 12
 19687   0036E4  B4D8               	btfsc	status,2,c
 19688   0036E6  EFBA  F01A         	goto	i2l8594
 19689   0036EA  0A01               	xorlw	1	; case 13
 19690   0036EC  B4D8               	btfsc	status,2,c
 19691   0036EE  EFCF  F01A         	goto	i2l8602
 19692   0036F2  EF7B  F01B         	goto	i2l761
 19693   0036F6                     i2l761:
 19694   0036F6  0012               	return		;funcret
 19695   0036F8                     __end_ofi2_LCD_UpdateMenu:
 19696                           	callstack 0
 19697                           
 19698 ;; *************** function i2_sprintf *****************
 19699 ;; Defined at:
 19700 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\nf_sprintf.c"
 19701 ;; Parameters:    Size  Location     Type
 19702 ;;  s               2   70[BANK0 ] PTR unsigned char 
 19703 ;;		 -> i2LCD_UpdateMenu@buffer(16), LCD_UpdateMenu@buffer(16), 
 19704 ;;  fmt             2   72[BANK0 ] PTR const unsigned char 
 19705 ;;		 -> STR_19(7), STR_17(7), 
 19706 ;; Auto vars:     Size  Location     Type
 19707 ;;  f              11   80[BANK0 ] struct _IO_FILE
 19708 ;;  ap              2   78[BANK0 ] PTR void [1]
 19709 ;;		 -> ?i2_sprintf(2), ?_sprintf(2), 
 19710 ;;  ret             2    0        int 
 19711 ;; Return value:  Size  Location     Type
 19712 ;;                  2   70[BANK0 ] int 
 19713 ;; Registers used:
 19714 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19715 ;; Tracked objects:
 19716 ;;		On entry : 0/0
 19717 ;;		On exit  : 0/0
 19718 ;;		Unchanged: 0/0
 19719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19720 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19721 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19722 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19723 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19724 ;;Total ram usage:       21 bytes
 19725 ;; Hardware stack levels used: 1
 19726 ;; Hardware stack levels required when called: 7
 19727 ;; This function calls:
 19728 ;;		i2_vfprintf
 19729 ;; This function is called by:
 19730 ;;		i2_LCD_UpdateMenu
 19731 ;; This function uses a non-reentrant model
 19732 ;;
 19733                           
 19734                           	psect	text75
 19735   005F2E                     __ptext75:
 19736                           	callstack 0
 19737   005F2E                     i2_sprintf:
 19738                           	callstack 9
 19739   005F2E  0EAA               	movlw	low (?i2_sprintf+4)
 19740   005F30  0100               	movlb	0	; () banked
 19741   005F32  6FAE               	movwf	i2sprintf@ap& (0+255),b
 19742   005F34  6BAF               	clrf	(i2sprintf@ap+1)& (0+255),b
 19743   005F36  C0A6  F0B0         	movff	i2sprintf@s,i2sprintf@f
 19744   005F3A  C0A7  F0B1         	movff	i2sprintf@s+1,i2sprintf@f+1
 19745   005F3E                     
 19746                           ; BSR set to: 0
 19747   005F3E  0E00               	movlw	0
 19748   005F40  6FB3               	movwf	(i2sprintf@f+3)& (0+255),b
 19749   005F42  0E00               	movlw	0
 19750   005F44  6FB2               	movwf	(i2sprintf@f+2)& (0+255),b
 19751   005F46                     
 19752                           ; BSR set to: 0
 19753   005F46  0E00               	movlw	0
 19754   005F48  6FBA               	movwf	(i2sprintf@f+10)& (0+255),b
 19755   005F4A  0E00               	movlw	0
 19756   005F4C  6FB9               	movwf	(i2sprintf@f+9)& (0+255),b
 19757   005F4E                     
 19758                           ; BSR set to: 0
 19759   005F4E  0EB0               	movlw	low i2sprintf@f
 19760   005F50  6F9E               	movwf	i2vfprintf@fp& (0+255),b
 19761   005F52  6B9F               	clrf	(i2vfprintf@fp+1)& (0+255),b
 19762   005F54  C0A8  F0A0         	movff	i2sprintf@fmt,i2vfprintf@fmt
 19763   005F58  C0A9  F0A1         	movff	i2sprintf@fmt+1,i2vfprintf@fmt+1
 19764   005F5C  0EAE               	movlw	low i2sprintf@ap
 19765   005F5E  6FA2               	movwf	i2vfprintf@ap& (0+255),b
 19766   005F60  6BA3               	clrf	(i2vfprintf@ap+1)& (0+255),b
 19767   005F62  ECC7  F02E         	call	i2_vfprintf	;wreg free
 19768   005F66  0100               	movlb	0	; () banked
 19769   005F68  51B2               	movf	(i2sprintf@f+2)& (0+255),w,b
 19770   005F6A  25A6               	addwf	i2sprintf@s& (0+255),w,b
 19771   005F6C  6ED9               	movwf	fsr2l,c
 19772   005F6E  51B3               	movf	(i2sprintf@f+3)& (0+255),w,b
 19773   005F70  21A7               	addwfc	(i2sprintf@s+1)& (0+255),w,b
 19774   005F72  6EDA               	movwf	fsr2h,c
 19775   005F74  6ADF               	clrf	indf2,c
 19776   005F76                     
 19777                           ; BSR set to: 0
 19778   005F76  0012               	return		;funcret
 19779   005F78                     __end_ofi2_sprintf:
 19780                           	callstack 0
 19781                           
 19782 ;; *************** function i2_vfprintf *****************
 19783 ;; Defined at:
 19784 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
 19785 ;; Parameters:    Size  Location     Type
 19786 ;;  fp              2   62[BANK0 ] PTR struct _IO_FILE
 19787 ;;		 -> i2sprintf@f(11), sprintf@f(11), 
 19788 ;;  fmt             2   64[BANK0 ] PTR const unsigned char 
 19789 ;;		 -> STR_19(7), STR_17(7), 
 19790 ;;  ap              2   66[BANK0 ] PTR PTR void 
 19791 ;;		 -> i2sprintf@ap(2), sprintf@ap(2), 
 19792 ;; Auto vars:     Size  Location     Type
 19793 ;;  cfmt            2   68[BANK0 ] PTR unsigned char 
 19794 ;;		 -> STR_19(7), STR_17(7), 
 19795 ;; Return value:  Size  Location     Type
 19796 ;;                  2   62[BANK0 ] int 
 19797 ;; Registers used:
 19798 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19799 ;; Tracked objects:
 19800 ;;		On entry : 0/0
 19801 ;;		On exit  : 0/0
 19802 ;;		Unchanged: 0/0
 19803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19804 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19805 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19806 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19807 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19808 ;;Total ram usage:        8 bytes
 19809 ;; Hardware stack levels used: 1
 19810 ;; Hardware stack levels required when called: 6
 19811 ;; This function calls:
 19812 ;;		i2_vfpfcnvrt
 19813 ;; This function is called by:
 19814 ;;		i2_sprintf
 19815 ;; This function uses a non-reentrant model
 19816 ;;
 19817                           
 19818                           	psect	text76
 19819   005D8E                     __ptext76:
 19820                           	callstack 0
 19821   005D8E                     i2_vfprintf:
 19822                           	callstack 9
 19823   005D8E                     
 19824                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v3.00\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
 19825   005D8E  C0A0  F0A4         	movff	i2vfprintf@fmt,i2vfprintf@cfmt
 19826   005D92  C0A1  F0A5         	movff	i2vfprintf@fmt+1,i2vfprintf@cfmt+1
 19827                           
 19828                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
 19829   005D96  EFDB  F02E         	goto	i2l8488
 19830   005D9A                     i2l8486:
 19831                           
 19832                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
 19833   005D9A  C09E  F08F         	movff	i2vfprintf@fp,i2vfpfcnvrt@fp
 19834   005D9E  C09F  F090         	movff	i2vfprintf@fp+1,i2vfpfcnvrt@fp+1
 19835   005DA2  0EA4               	movlw	low i2vfprintf@cfmt
 19836   005DA4  0100               	movlb	0	; () banked
 19837   005DA6  6F91               	movwf	i2vfpfcnvrt@fmt& (0+255),b
 19838   005DA8  6B92               	clrf	(i2vfpfcnvrt@fmt+1)& (0+255),b
 19839   005DAA  C0A2  F093         	movff	i2vfprintf@ap,i2vfpfcnvrt@ap
 19840   005DAE  C0A3  F094         	movff	i2vfprintf@ap+1,i2vfpfcnvrt@ap+1
 19841   005DB2  ECEA  F01C         	call	i2_vfpfcnvrt	;wreg free
 19842   005DB6                     i2l8488:
 19843                           
 19844                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
 19845   005DB6  0060  F293  FFF6   	movff	i2vfprintf@cfmt,tblptrl
 19846   005DBC  0060  F297  FFF7   	movff	i2vfprintf@cfmt+1,tblptrh
 19847   005DC2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 19848   005DC2  6AF8               	clrf	tblptru,c
 19849   005DC4                     	endif
 19850   005DC4                     	if	0	;tblptru may be non-zero
 19851   005DC4                     	endif
 19852   005DC4  0008               	tblrd		*
 19853   005DC6  50F5               	movf	tablat,w,c
 19854   005DC8  0900               	iorlw	0
 19855   005DCA  A4D8               	btfss	status,2,c
 19856   005DCC  EFEA  F02E         	goto	i2u902_41
 19857   005DD0  EFEC  F02E         	goto	i2u902_40
 19858   005DD4                     i2u902_41:
 19859   005DD4  EFCD  F02E         	goto	i2l8486
 19860   005DD8                     i2u902_40:
 19861   005DD8                     
 19862                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1835:  return 0;
 19863   005DD8  0E00               	movlw	0
 19864   005DDA  0100               	movlb	0	; () banked
 19865   005DDC  6F9F               	movwf	(?i2_vfprintf+1)& (0+255),b
 19866   005DDE  0E00               	movlw	0
 19867   005DE0  6F9E               	movwf	?i2_vfprintf& (0+255),b
 19868   005DE2                     
 19869                           ; BSR set to: 0
 19870   005DE2  0012               	return		;funcret
 19871   005DE4                     __end_ofi2_vfprintf:
 19872                           	callstack 0
 19873                           
 19874 ;; *************** function i2_vfpfcnvrt *****************
 19875 ;; Defined at:
 19876 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
 19877 ;; Parameters:    Size  Location     Type
 19878 ;;  fp              2   47[BANK0 ] PTR struct _IO_FILE
 19879 ;;		 -> i2sprintf@f(11), sprintf@f(11), 
 19880 ;;  fmt             2   49[BANK0 ] PTR PTR unsigned char 
 19881 ;;		 -> i2vfprintf@cfmt(2), vfprintf@cfmt(2), 
 19882 ;;  ap              2   51[BANK0 ] PTR PTR void 
 19883 ;;		 -> i2sprintf@ap(2), sprintf@ap(2), 
 19884 ;; Auto vars:     Size  Location     Type
 19885 ;;  convarg         4   55[BANK0 ] struct .
 19886 ;;  cp              2   60[BANK0 ] PTR unsigned char 
 19887 ;;		 -> STR_19(7), STR_17(7), 
 19888 ;;  c               1   59[BANK0 ] unsigned char 
 19889 ;;  done            1    0        _Bool 
 19890 ;; Return value:  Size  Location     Type
 19891 ;;                  1    wreg      void 
 19892 ;; Registers used:
 19893 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19894 ;; Tracked objects:
 19895 ;;		On entry : 0/0
 19896 ;;		On exit  : 0/0
 19897 ;;		Unchanged: 0/0
 19898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19899 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19900 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19901 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19902 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19903 ;;Total ram usage:       15 bytes
 19904 ;; Hardware stack levels used: 1
 19905 ;; Hardware stack levels required when called: 5
 19906 ;; This function calls:
 19907 ;;		i2_efgtoa
 19908 ;;		i2_fputc
 19909 ;;		i2_read_prec_or_width
 19910 ;; This function is called by:
 19911 ;;		i2_vfprintf
 19912 ;; This function uses a non-reentrant model
 19913 ;;
 19914                           
 19915                           	psect	text77
 19916   0039D4                     __ptext77:
 19917                           	callstack 0
 19918   0039D4                     i2_vfpfcnvrt:
 19919                           	callstack 9
 19920   0039D4                     
 19921                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
 19922   0039D4  0060  F247  FFD9   	movff	i2vfpfcnvrt@fmt,fsr2l
 19923   0039DA  0060  F24B  FFDA   	movff	i2vfpfcnvrt@fmt+1,fsr2h
 19924   0039E0  006F FF7B FFF6     	movff	postinc2,tblptrl
 19925   0039E6  006F FF77 FFF7     	movff	postdec2,tblptrh
 19926   0039EC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 19927   0039EC  6AF8               	clrf	tblptru,c
 19928   0039EE                     	endif
 19929   0039EE                     	if	0	;tblptru may be non-zero
 19930   0039EE                     	endif
 19931   0039EE  0008               	tblrd		*
 19932   0039F0  50F5               	movf	tablat,w,c
 19933   0039F2  0A25               	xorlw	37
 19934   0039F4  A4D8               	btfss	status,2,c
 19935   0039F6  EFFF  F01C         	goto	i2u898_41
 19936   0039FA  EF01  F01D         	goto	i2u898_40
 19937   0039FE                     i2u898_41:
 19938   0039FE  EF3D  F01E         	goto	i2l8478
 19939   003A02                     i2u898_40:
 19940   003A02                     
 19941                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
 19942   003A02  0060  F247  FFD9   	movff	i2vfpfcnvrt@fmt,fsr2l
 19943   003A08  0060  F24B  FFDA   	movff	i2vfpfcnvrt@fmt+1,fsr2h
 19944   003A0E  2ADE               	incf	postinc2,f,c
 19945   003A10  0E00               	movlw	0
 19946   003A12  22DD               	addwfc	postdec2,f,c
 19947   003A14                     
 19948                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
 19949   003A14  0E00               	movlw	0
 19950   003A16  0100               	movlb	0	; () banked
 19951   003A18  6FDE               	movwf	(_width+1)& (0+255),b
 19952   003A1A  0E00               	movlw	0
 19953   003A1C  6FDD               	movwf	_width& (0+255),b
 19954   003A1E  C0DD  F0E9         	movff	_width,_flags
 19955   003A22                     
 19956                           ; BSR set to: 0
 19957                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
 19958   003A22  69DF               	setf	_prec& (0+255),b
 19959   003A24  69E0               	setf	(_prec+1)& (0+255),b
 19960   003A26                     
 19961                           ; BSR set to: 0
 19962                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1265:         if 
      +                          ((*fmt)[0] == '.') {
 19963   003A26  0060  F247  FFD9   	movff	i2vfpfcnvrt@fmt,fsr2l
 19964   003A2C  0060  F24B  FFDA   	movff	i2vfpfcnvrt@fmt+1,fsr2h
 19965   003A32  006F FF7B FFF6     	movff	postinc2,tblptrl
 19966   003A38  006F FF77 FFF7     	movff	postdec2,tblptrh
 19967   003A3E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 19968   003A3E  6AF8               	clrf	tblptru,c
 19969   003A40                     	endif
 19970   003A40                     	if	0	;tblptru may be non-zero
 19971   003A40                     	endif
 19972   003A40  0008               	tblrd		*
 19973   003A42  50F5               	movf	tablat,w,c
 19974   003A44  0A2E               	xorlw	46
 19975   003A46  A4D8               	btfss	status,2,c
 19976   003A48  EF28  F01D         	goto	i2u899_41
 19977   003A4C  EF2A  F01D         	goto	i2u899_40
 19978   003A50                     i2u899_41:
 19979   003A50  EF41  F01D         	goto	i2l8440
 19980   003A54                     i2u899_40:
 19981   003A54                     
 19982                           ; BSR set to: 0
 19983                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1266:            
      +                           ++*fmt;
 19984   003A54  0060  F247  FFD9   	movff	i2vfpfcnvrt@fmt,fsr2l
 19985   003A5A  0060  F24B  FFDA   	movff	i2vfpfcnvrt@fmt+1,fsr2h
 19986   003A60  2ADE               	incf	postinc2,f,c
 19987   003A62  0E00               	movlw	0
 19988   003A64  22DD               	addwfc	postdec2,f,c
 19989   003A66                     
 19990                           ; BSR set to: 0
 19991                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1267:    prec = r
      +                          ead_prec_or_width(fmt, ap);
 19992   003A66  C091  F001         	movff	i2vfpfcnvrt@fmt,i2read_prec_or_width@fmt
 19993   003A6A  C092  F002         	movff	i2vfpfcnvrt@fmt+1,i2read_prec_or_width@fmt+1
 19994   003A6E  C093  F003         	movff	i2vfpfcnvrt@ap,i2read_prec_or_width@ap
 19995   003A72  C094  F004         	movff	i2vfpfcnvrt@ap+1,i2read_prec_or_width@ap+1
 19996   003A76  EC44  F026         	call	i2_read_prec_or_width	;wreg free
 19997   003A7A  C001  F0DF         	movff	?i2_read_prec_or_width,_prec
 19998   003A7E  C002  F0E0         	movff	?i2_read_prec_or_width+1,_prec+1
 19999   003A82                     i2l8440:
 20000                           
 20001                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1689:   cp = *fmt
      +                          ;
 20002   003A82  0060  F247  FFD9   	movff	i2vfpfcnvrt@fmt,fsr2l
 20003   003A88  0060  F24B  FFDA   	movff	i2vfpfcnvrt@fmt+1,fsr2h
 20004   003A8E  006F FF78  F09C    	movff	postinc2,i2vfpfcnvrt@cp
 20005   003A94  006F FF74  F09D    	movff	postdec2,i2vfpfcnvrt@cp+1
 20006   003A9A                     
 20007                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1690:   c = *cp;
 20008   003A9A  0060  F273  FFF6   	movff	i2vfpfcnvrt@cp,tblptrl
 20009   003AA0  0060  F277  FFF7   	movff	i2vfpfcnvrt@cp+1,tblptrh
 20010   003AA6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 20011   003AA6  6AF8               	clrf	tblptru,c
 20012   003AA8                     	endif
 20013   003AA8                     	if	0	;tblptru may be non-zero
 20014   003AA8                     	endif
 20015   003AA8  0008               	tblrd		*
 20016   003AAA  006F FFD4  F09B    	movff	tablat,i2vfpfcnvrt@c
 20017                           
 20018                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1691:   switch(c)
      +                           {
 20019   003AB0  EF65  F01D         	goto	i2l8450
 20020   003AB4                     i2l8444:
 20021                           
 20022                           ; BSR set to: 0
 20023                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1695:     cp++;
 20024   003AB4  4B9C               	infsnz	i2vfpfcnvrt@cp& (0+255),f,b
 20025   003AB6  2B9D               	incf	(i2vfpfcnvrt@cp+1)& (0+255),f,b
 20026                           
 20027                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1696:     break;
 20028   003AB8  EF79  F01D         	goto	i2l8452
 20029   003ABC                     i2l8446:
 20030                           
 20031                           ; BSR set to: 0
 20032                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1721:     c = 'l'
      +                          ;
 20033   003ABC  0E6C               	movlw	108
 20034   003ABE  6F9B               	movwf	i2vfpfcnvrt@c& (0+255),b
 20035                           
 20036                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1722:     break;
 20037   003AC0  EF79  F01D         	goto	i2l8452
 20038   003AC4                     i2l1674:
 20039                           
 20040                           ; BSR set to: 0
 20041                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1724:     c = 0;
 20042   003AC4  6B9B               	clrf	i2vfpfcnvrt@c& (0+255),b
 20043                           
 20044                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1725:     break;
 20045   003AC6  EF79  F01D         	goto	i2l8452
 20046   003ACA                     i2l8450:
 20047   003ACA  0100               	movlb	0	; () banked
 20048   003ACC  519B               	movf	i2vfpfcnvrt@c& (0+255),w,b
 20049                           
 20050                           ; Switch size 1, requested type "simple"
 20051                           ; Number of cases is 4, Range of values is 76 to 108
 20052                           ; switch strategies available:
 20053                           ; Name         Instructions Cycles
 20054                           ; simple_byte           13     7 (average)
 20055                           ;	Chosen strategy is simple_byte
 20056   003ACE  0A4C               	xorlw	76	; case 76
 20057   003AD0  B4D8               	btfsc	status,2,c
 20058   003AD2  EF5A  F01D         	goto	i2l8444
 20059   003AD6  0A29               	xorlw	41	; case 101
 20060   003AD8  B4D8               	btfsc	status,2,c
 20061   003ADA  EF5E  F01D         	goto	i2l8446
 20062   003ADE  0A03               	xorlw	3	; case 102
 20063   003AE0  B4D8               	btfsc	status,2,c
 20064   003AE2  EF5E  F01D         	goto	i2l8446
 20065   003AE6  0A0A               	xorlw	10	; case 108
 20066   003AE8  B4D8               	btfsc	status,2,c
 20067   003AEA  EF5A  F01D         	goto	i2l8444
 20068   003AEE  EF62  F01D         	goto	i2l1674
 20069   003AF2                     i2l8452:
 20070                           
 20071                           ; BSR set to: 0
 20072   003AF2  0060  F273  FFF6   	movff	i2vfpfcnvrt@cp,tblptrl
 20073   003AF8  0060  F277  FFF7   	movff	i2vfpfcnvrt@cp+1,tblptrh
 20074   003AFE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 20075   003AFE  6AF8               	clrf	tblptru,c
 20076   003B00                     	endif
 20077   003B00                     	if	0	;tblptru may be non-zero
 20078   003B00                     	endif
 20079   003B00  0008               	tblrd		*
 20080   003B02  50F5               	movf	tablat,w,c
 20081   003B04  0A65               	xorlw	101
 20082   003B06  B4D8               	btfsc	status,2,c
 20083   003B08  EF88  F01D         	goto	i2u900_41
 20084   003B0C  EF8A  F01D         	goto	i2u900_40
 20085   003B10                     i2u900_41:
 20086   003B10  EFE5  F01D         	goto	i2l8462
 20087   003B14                     i2u900_40:
 20088   003B14                     
 20089                           ; BSR set to: 0
 20090   003B14  0060  F273  FFF6   	movff	i2vfpfcnvrt@cp,tblptrl
 20091   003B1A  0060  F277  FFF7   	movff	i2vfpfcnvrt@cp+1,tblptrh
 20092   003B20                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 20093   003B20  6AF8               	clrf	tblptru,c
 20094   003B22                     	endif
 20095   003B22                     	if	0	;tblptru may be non-zero
 20096   003B22                     	endif
 20097   003B22  0008               	tblrd		*
 20098   003B24  50F5               	movf	tablat,w,c
 20099   003B26  0A66               	xorlw	102
 20100   003B28  A4D8               	btfss	status,2,c
 20101   003B2A  EF99  F01D         	goto	i2u901_41
 20102   003B2E  EF9B  F01D         	goto	i2u901_40
 20103   003B32                     i2u901_41:
 20104   003B32  EF32  F01E         	goto	i2l8474
 20105   003B36                     i2u901_40:
 20106   003B36  EFE5  F01D         	goto	i2l8462
 20107   003B3A                     i2l8456:
 20108                           
 20109                           ; BSR set to: 0
 20110                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1756:      convar
      +                          g.f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
 20111   003B3A  0060  F24F  FFD9   	movff	i2vfpfcnvrt@ap,fsr2l
 20112   003B40  0060  F253  FFDA   	movff	i2vfpfcnvrt@ap+1,fsr2h
 20113   003B46  006F FF7C  F095    	movff	indf2,??i2_vfpfcnvrt
 20114   003B4C  0E04               	movlw	4
 20115   003B4E  26DE               	addwf	postinc2,f,c
 20116   003B50  006F FF7C  F096    	movff	indf2,??i2_vfpfcnvrt+1
 20117   003B56  0E00               	movlw	0
 20118   003B58  22DD               	addwfc	postdec2,f,c
 20119   003B5A  0060  F257  FFD9   	movff	??i2_vfpfcnvrt,fsr2l
 20120   003B60  0060  F25B  FFDA   	movff	??i2_vfpfcnvrt+1,fsr2h
 20121   003B66  006F FF78  F097    	movff	postinc2,i2vfpfcnvrt@convarg
 20122   003B6C  006F FF78  F098    	movff	postinc2,i2vfpfcnvrt@convarg+1
 20123   003B72  006F FF78  F099    	movff	postinc2,i2vfpfcnvrt@convarg+2
 20124   003B78  006F FF78  F09A    	movff	postinc2,i2vfpfcnvrt@convarg+3
 20125                           
 20126                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1757:      break;
 20127   003B7E  EFF0  F01D         	goto	i2l8464
 20128   003B82                     i2l8458:
 20129                           
 20130                           ; BSR set to: 0
 20131                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1759:      convar
      +                          g.f = (long double)(*(long double *)__va_arg(*(long double **)ap, (long double)0));
 20132   003B82  0060  F24F  FFD9   	movff	i2vfpfcnvrt@ap,fsr2l
 20133   003B88  0060  F253  FFDA   	movff	i2vfpfcnvrt@ap+1,fsr2h
 20134   003B8E  006F FF7C  F095    	movff	indf2,??i2_vfpfcnvrt
 20135   003B94  0E04               	movlw	4
 20136   003B96  26DE               	addwf	postinc2,f,c
 20137   003B98  006F FF7C  F096    	movff	indf2,??i2_vfpfcnvrt+1
 20138   003B9E  0E00               	movlw	0
 20139   003BA0  22DD               	addwfc	postdec2,f,c
 20140   003BA2  0060  F257  FFD9   	movff	??i2_vfpfcnvrt,fsr2l
 20141   003BA8  0060  F25B  FFDA   	movff	??i2_vfpfcnvrt+1,fsr2h
 20142   003BAE  006F FF78  F097    	movff	postinc2,i2vfpfcnvrt@convarg
 20143   003BB4  006F FF78  F098    	movff	postinc2,i2vfpfcnvrt@convarg+1
 20144   003BBA  006F FF78  F099    	movff	postinc2,i2vfpfcnvrt@convarg+2
 20145   003BC0  006F FF78  F09A    	movff	postinc2,i2vfpfcnvrt@convarg+3
 20146                           
 20147                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1760:      break;
 20148   003BC6  EFF0  F01D         	goto	i2l8464
 20149   003BCA                     i2l8462:
 20150                           
 20151                           ; BSR set to: 0
 20152   003BCA  519B               	movf	i2vfpfcnvrt@c& (0+255),w,b
 20153                           
 20154                           ; Switch size 1, requested type "simple"
 20155                           ; Number of cases is 2, Range of values is 76 to 108
 20156                           ; switch strategies available:
 20157                           ; Name         Instructions Cycles
 20158                           ; simple_byte            7     4 (average)
 20159                           ;	Chosen strategy is simple_byte
 20160   003BCC  0A4C               	xorlw	76	; case 76
 20161   003BCE  B4D8               	btfsc	status,2,c
 20162   003BD0  EFC1  F01D         	goto	i2l8458
 20163   003BD4  0A20               	xorlw	32	; case 108
 20164   003BD6  B4D8               	btfsc	status,2,c
 20165   003BD8  EF9D  F01D         	goto	i2l8456
 20166   003BDC  EFF0  F01D         	goto	i2l8464
 20167   003BE0                     i2l8464:
 20168                           
 20169                           ; BSR set to: 0
 20170                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1762:    *fmt = c
      +                          p+1;
 20171   003BE0  0E01               	movlw	1
 20172   003BE2  259C               	addwf	i2vfpfcnvrt@cp& (0+255),w,b
 20173   003BE4  6F95               	movwf	??i2_vfpfcnvrt& (0+255),b
 20174   003BE6  0E00               	movlw	0
 20175   003BE8  219D               	addwfc	(i2vfpfcnvrt@cp+1)& (0+255),w,b
 20176   003BEA  6F96               	movwf	(??i2_vfpfcnvrt+1)& (0+255),b
 20177   003BEC  0060  F247  FFD9   	movff	i2vfpfcnvrt@fmt,fsr2l
 20178   003BF2  0060  F24B  FFDA   	movff	i2vfpfcnvrt@fmt+1,fsr2h
 20179   003BF8  0060  F257  FFDE   	movff	??i2_vfpfcnvrt,postinc2
 20180   003BFE  0060  F25B  FFDD   	movff	??i2_vfpfcnvrt+1,postdec2
 20181                           
 20182                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1763:    switch (
      +                          *cp) {
 20183   003C04  EF1F  F01E         	goto	i2l8472
 20184   003C08                     i2l8466:
 20185                           
 20186                           ; BSR set to: 0
 20187                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1790:      return
      +                           (void) efgtoa(fp, convarg.f, *cp);;	Return value of i2_vfpfcnvrt is never used
 20188   003C08  C08F  F055         	movff	i2vfpfcnvrt@fp,i2efgtoa@fp
 20189   003C0C  C090  F056         	movff	i2vfpfcnvrt@fp+1,i2efgtoa@fp+1
 20190   003C10  C097  F057         	movff	i2vfpfcnvrt@convarg,i2efgtoa@f
 20191   003C14  C098  F058         	movff	i2vfpfcnvrt@convarg+1,i2efgtoa@f+1
 20192   003C18  C099  F059         	movff	i2vfpfcnvrt@convarg+2,i2efgtoa@f+2
 20193   003C1C  C09A  F05A         	movff	i2vfpfcnvrt@convarg+3,i2efgtoa@f+3
 20194   003C20  0060  F273  FFF6   	movff	i2vfpfcnvrt@cp,tblptrl
 20195   003C26  0060  F277  FFF7   	movff	i2vfpfcnvrt@cp+1,tblptrh
 20196   003C2C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 20197   003C2C  6AF8               	clrf	tblptru,c
 20198   003C2E                     	endif
 20199   003C2E                     	if	0	;tblptru may be non-zero
 20200   003C2E                     	endif
 20201   003C2E  0008               	tblrd		*
 20202   003C30  006F FFD4  F05B    	movff	tablat,i2efgtoa@c
 20203   003C36  ECAE  F005         	call	i2_efgtoa	;wreg free
 20204   003C3A  EF56  F01E         	goto	i2l1685
 20205   003C3E                     i2l8472:
 20206                           
 20207                           ; BSR set to: 0
 20208   003C3E  0060  F273  FFF6   	movff	i2vfpfcnvrt@cp,tblptrl
 20209   003C44  0060  F277  FFF7   	movff	i2vfpfcnvrt@cp+1,tblptrh
 20210   003C4A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 20211   003C4A  6AF8               	clrf	tblptru,c
 20212   003C4C                     	endif
 20213   003C4C                     	if	0	;tblptru may be non-zero
 20214   003C4C                     	endif
 20215   003C4C  0008               	tblrd		*
 20216   003C4E  50F5               	movf	tablat,w,c
 20217                           
 20218                           ; Switch size 1, requested type "simple"
 20219                           ; Number of cases is 2, Range of values is 101 to 102
 20220                           ; switch strategies available:
 20221                           ; Name         Instructions Cycles
 20222                           ; simple_byte            7     4 (average)
 20223                           ;	Chosen strategy is simple_byte
 20224   003C50  0A65               	xorlw	101	; case 101
 20225   003C52  B4D8               	btfsc	status,2,c
 20226   003C54  EF04  F01E         	goto	i2l8466
 20227   003C58  0A03               	xorlw	3	; case 102
 20228   003C5A  B4D8               	btfsc	status,2,c
 20229   003C5C  EF04  F01E         	goto	i2l8466
 20230   003C60  EF32  F01E         	goto	i2l8474
 20231   003C64                     i2l8474:
 20232                           
 20233                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
 20234   003C64  0060  F247  FFD9   	movff	i2vfpfcnvrt@fmt,fsr2l
 20235   003C6A  0060  F24B  FFDA   	movff	i2vfpfcnvrt@fmt+1,fsr2h
 20236   003C70  2ADE               	incf	postinc2,f,c
 20237   003C72  0E00               	movlw	0
 20238   003C74  22DD               	addwfc	postdec2,f,c
 20239   003C76  EF56  F01E         	goto	i2l1685
 20240   003C7A                     i2l8478:
 20241                           
 20242                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
 20243   003C7A  0060  F247  FFD9   	movff	i2vfpfcnvrt@fmt,fsr2l
 20244   003C80  0060  F24B  FFDA   	movff	i2vfpfcnvrt@fmt+1,fsr2h
 20245   003C86  006F FF7B FFF6     	movff	postinc2,tblptrl
 20246   003C8C  006F FF77 FFF7     	movff	postdec2,tblptrh
 20247   003C92                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 20248   003C92  6AF8               	clrf	tblptru,c
 20249   003C94                     	endif
 20250   003C94                     	if	0	;tblptru may be non-zero
 20251   003C94                     	endif
 20252   003C94  0008               	tblrd		*
 20253   003C96  50F5               	movf	tablat,w,c
 20254   003C98  6E01               	movwf	i2fputc@c^0,c
 20255   003C9A  6A02               	clrf	(i2fputc@c+1)^0,c
 20256   003C9C  C08F  F003         	movff	i2vfpfcnvrt@fp,i2fputc@fp
 20257   003CA0  C090  F004         	movff	i2vfpfcnvrt@fp+1,i2fputc@fp+1
 20258   003CA4  EC99  F027         	call	i2_fputc	;wreg free
 20259   003CA8  EF32  F01E         	goto	i2l8474
 20260   003CAC                     i2l1685:
 20261   003CAC  0012               	return		;funcret
 20262   003CAE                     __end_ofi2_vfpfcnvrt:
 20263                           	callstack 0
 20264                           
 20265 ;; *************** function i2_read_prec_or_width *****************
 20266 ;; Defined at:
 20267 ;;		line 1158 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
 20268 ;; Parameters:    Size  Location     Type
 20269 ;;  fmt             2    0[COMRAM] PTR PTR const unsigned c
 20270 ;;		 -> i2vfprintf@cfmt(2), vfprintf@cfmt(2), 
 20271 ;;  ap              2    2[COMRAM] PTR PTR void [1]
 20272 ;;		 -> i2sprintf@ap(2), sprintf@ap(2), 
 20273 ;; Auto vars:     Size  Location     Type
 20274 ;;  n               2    7[COMRAM] int 
 20275 ;;  c               1    6[COMRAM] unsigned char 
 20276 ;; Return value:  Size  Location     Type
 20277 ;;                  2    0[COMRAM] int 
 20278 ;; Registers used:
 20279 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 20280 ;; Tracked objects:
 20281 ;;		On entry : 0/0
 20282 ;;		On exit  : 0/0
 20283 ;;		Unchanged: 0/0
 20284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20285 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20286 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20287 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20288 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20289 ;;Total ram usage:        9 bytes
 20290 ;; Hardware stack levels used: 1
 20291 ;; This function calls:
 20292 ;;		Nothing
 20293 ;; This function is called by:
 20294 ;;		i2_vfpfcnvrt
 20295 ;; This function uses a non-reentrant model
 20296 ;;
 20297                           
 20298                           	psect	text78
 20299   004C88                     __ptext78:
 20300                           	callstack 0
 20301   004C88                     i2_read_prec_or_width:
 20302                           	callstack 13
 20303   004C88                     
 20304                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1159:     int n =
      +                           0;
 20305   004C88  0E00               	movlw	0
 20306   004C8A  6E09               	movwf	(i2read_prec_or_width@n+1)^0,c
 20307   004C8C  0E00               	movlw	0
 20308   004C8E  6E08               	movwf	i2read_prec_or_width@n^0,c
 20309   004C90                     
 20310                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1160:     if ((*f
      +                          mt)[0] == '*') {
 20311   004C90  0060  F007  FFD9   	movff	i2read_prec_or_width@fmt,fsr2l
 20312   004C96  0060  F00B  FFDA   	movff	i2read_prec_or_width@fmt+1,fsr2h
 20313   004C9C  006F FF7B FFF6     	movff	postinc2,tblptrl
 20314   004CA2  006F FF77 FFF7     	movff	postdec2,tblptrh
 20315   004CA8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 20316   004CA8  6AF8               	clrf	tblptru,c
 20317   004CAA                     	endif
 20318   004CAA                     	if	0	;tblptru may be non-zero
 20319   004CAA                     	endif
 20320   004CAA  0008               	tblrd		*
 20321   004CAC  50F5               	movf	tablat,w,c
 20322   004CAE  0A2A               	xorlw	42
 20323   004CB0  A4D8               	btfss	status,2,c
 20324   004CB2  EF5D  F026         	goto	i2u630_41
 20325   004CB6  EF5F  F026         	goto	i2u630_40
 20326   004CBA                     i2u630_41:
 20327   004CBA  EFA0  F026         	goto	i2l6234
 20328   004CBE                     i2u630_40:
 20329   004CBE                     
 20330                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1161:         ++*
      +                          fmt;
 20331   004CBE  0060  F007  FFD9   	movff	i2read_prec_or_width@fmt,fsr2l
 20332   004CC4  0060  F00B  FFDA   	movff	i2read_prec_or_width@fmt+1,fsr2h
 20333   004CCA  2ADE               	incf	postinc2,f,c
 20334   004CCC  0E00               	movlw	0
 20335   004CCE  22DD               	addwfc	postdec2,f,c
 20336                           
 20337                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1162:         n =
      +                           (*(int *)__va_arg(*(int **)*ap, (int)0));
 20338   004CD0  0060  F00F  FFD9   	movff	i2read_prec_or_width@ap,fsr2l
 20339   004CD6  0060  F013  FFDA   	movff	i2read_prec_or_width@ap+1,fsr2h
 20340   004CDC  006F FF7C  F005    	movff	indf2,??i2_read_prec_or_width
 20341   004CE2  0E02               	movlw	2
 20342   004CE4  26DE               	addwf	postinc2,f,c
 20343   004CE6  006F FF7C  F006    	movff	indf2,??i2_read_prec_or_width+1
 20344   004CEC  0E00               	movlw	0
 20345   004CEE  22DD               	addwfc	postdec2,f,c
 20346   004CF0  0060  F017  FFD9   	movff	??i2_read_prec_or_width,fsr2l
 20347   004CF6  0060  F01B  FFDA   	movff	??i2_read_prec_or_width+1,fsr2h
 20348   004CFC  006F FF78  F008    	movff	postinc2,i2read_prec_or_width@n
 20349   004D02  006F FF74  F009    	movff	postdec2,i2read_prec_or_width@n+1
 20350                           
 20351                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1163:     } else 
      +                          {
 20352   004D08  EFB9  F026         	goto	i2l1659
 20353   004D0C                     i2l6230:
 20354                           
 20355                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1166:            
      +                           n = n * 10 + c;
 20356   004D0C  0E0A               	movlw	10
 20357   004D0E  0208               	mulwf	i2read_prec_or_width@n^0,c
 20358   004D10  006F FFCC  F005    	movff	prodl,??i2_read_prec_or_width
 20359   004D16  006F FFD0  F006    	movff	prodh,??i2_read_prec_or_width+1
 20360   004D1C  0209               	mulwf	(i2read_prec_or_width@n+1)^0,c
 20361   004D1E  50F3               	movf	prodl,w,c
 20362   004D20  2606               	addwf	(??i2_read_prec_or_width+1)^0,f,c
 20363   004D22  5007               	movf	i2read_prec_or_width@c^0,w,c
 20364   004D24  2405               	addwf	??i2_read_prec_or_width^0,w,c
 20365   004D26  6E08               	movwf	i2read_prec_or_width@n^0,c
 20366   004D28  0E00               	movlw	0
 20367   004D2A  2006               	addwfc	(??i2_read_prec_or_width+1)^0,w,c
 20368   004D2C  6E09               	movwf	(i2read_prec_or_width@n+1)^0,c
 20369   004D2E                     
 20370                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1167:            
      +                           ++*fmt;
 20371   004D2E  0060  F007  FFD9   	movff	i2read_prec_or_width@fmt,fsr2l
 20372   004D34  0060  F00B  FFDA   	movff	i2read_prec_or_width@fmt+1,fsr2h
 20373   004D3A  2ADE               	incf	postinc2,f,c
 20374   004D3C  0E00               	movlw	0
 20375   004D3E  22DD               	addwfc	postdec2,f,c
 20376   004D40                     i2l6234:
 20377                           
 20378                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1165:         whi
      +                          le ((c = ((unsigned)(*fmt)[0]) - '0') < 10) {
 20379   004D40  0060  F007  FFD9   	movff	i2read_prec_or_width@fmt,fsr2l
 20380   004D46  0060  F00B  FFDA   	movff	i2read_prec_or_width@fmt+1,fsr2h
 20381   004D4C  006F FF7B FFF6     	movff	postinc2,tblptrl
 20382   004D52  006F FF77 FFF7     	movff	postdec2,tblptrh
 20383   004D58                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 20384   004D58  6AF8               	clrf	tblptru,c
 20385   004D5A                     	endif
 20386   004D5A                     	if	0	;tblptru may be non-zero
 20387   004D5A                     	endif
 20388   004D5A  0008               	tblrd		*
 20389   004D5C  50F5               	movf	tablat,w,c
 20390   004D5E  0FD0               	addlw	208
 20391   004D60  6E07               	movwf	i2read_prec_or_width@c^0,c
 20392   004D62  0E09               	movlw	9
 20393   004D64  6407               	cpfsgt	i2read_prec_or_width@c^0,c
 20394   004D66  EFB7  F026         	goto	i2u631_41
 20395   004D6A  EFB9  F026         	goto	i2u631_40
 20396   004D6E                     i2u631_41:
 20397   004D6E  EF86  F026         	goto	i2l6230
 20398   004D72                     i2u631_40:
 20399   004D72                     i2l1659:
 20400                           
 20401                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1170:     return 
      +                          n;
 20402   004D72  C008  F001         	movff	i2read_prec_or_width@n,?i2_read_prec_or_width
 20403   004D76  C009  F002         	movff	i2read_prec_or_width@n+1,?i2_read_prec_or_width+1
 20404   004D7A  0012               	return		;funcret
 20405   004D7C                     __end_ofi2_read_prec_or_width:
 20406                           	callstack 0
 20407                           
 20408 ;; *************** function i2_efgtoa *****************
 20409 ;; Defined at:
 20410 ;;		line 587 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
 20411 ;; Parameters:    Size  Location     Type
 20412 ;;  fp              2   84[COMRAM] PTR struct _IO_FILE
 20413 ;;		 -> i2sprintf@f(11), sprintf@f(11), 
 20414 ;;  f               4   86[COMRAM] PTR struct _IO_FILE
 20415 ;;  c               1   90[COMRAM] unsigned char 
 20416 ;; Auto vars:     Size  Location     Type
 20417 ;;  u               4   43[BANK0 ] struct flui
 20418 ;;  g               4   39[BANK0 ] struct flui
 20419 ;;  l               4   28[BANK0 ] struct flui
 20420 ;;  h               4   24[BANK0 ] struct flui
 20421 ;;  ou              4   20[BANK0 ] struct flui
 20422 ;;  n               2   37[BANK0 ] int 
 20423 ;;  i               2   35[BANK0 ] int 
 20424 ;;  e               2   32[BANK0 ] int 
 20425 ;;  w               2   18[BANK0 ] int 
 20426 ;;  p               2   15[BANK0 ] int 
 20427 ;;  m               2   13[BANK0 ] int 
 20428 ;;  d               2   11[BANK0 ] int 
 20429 ;;  ne              2    6[BANK0 ] int 
 20430 ;;  t               2    0[BANK0 ] int 
 20431 ;;  sign            1   34[BANK0 ] unsigned char 
 20432 ;;  nmode           1   17[BANK0 ] unsigned char 
 20433 ;;  mode            1   10[BANK0 ] unsigned char 
 20434 ;;  esign           1    9[BANK0 ] unsigned char 
 20435 ;;  pp              1    8[BANK0 ] unsigned char 
 20436 ;; Return value:  Size  Location     Type
 20437 ;;                  1    wreg      void 
 20438 ;; Registers used:
 20439 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20440 ;; Tracked objects:
 20441 ;;		On entry : 0/0
 20442 ;;		On exit  : 0/0
 20443 ;;		Unchanged: 0/0
 20444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20445 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20446 ;;      Locals:         0      47       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20447 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20448 ;;      Totals:         9      47       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20449 ;;Total ram usage:       56 bytes
 20450 ;; Hardware stack levels used: 1
 20451 ;; Hardware stack levels required when called: 4
 20452 ;; This function calls:
 20453 ;;		i2___awdiv
 20454 ;;		i2___awmod
 20455 ;;		i2___fladd
 20456 ;;		i2___fldiv
 20457 ;;		i2___fleq
 20458 ;;		i2___flge
 20459 ;;		i2___flmul
 20460 ;;		i2___flneg
 20461 ;;		i2___flsub
 20462 ;;		i2___fltol
 20463 ;;		i2___fpclassifyf
 20464 ;;		i2_floorf
 20465 ;;		i2_labs
 20466 ;;		i2_memcpy
 20467 ;;		i2_pad
 20468 ;;		i2_strcpy
 20469 ;; This function is called by:
 20470 ;;		i2_vfpfcnvrt
 20471 ;; This function uses a non-reentrant model
 20472 ;;
 20473                           
 20474                           	psect	text79
 20475   000B5C                     __ptext79:
 20476                           	callstack 0
 20477   000B5C                     i2_efgtoa:
 20478                           	callstack 9
 20479   000B5C                     
 20480                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 587: static void 
      +                          efgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v3.00\pic\sources
      +                          \c99\common\doprnt.c: 588: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common
      +                          \doprnt.c: 589:     char mode, nmode, pp, sign, esign;;C:\Program Files\Microchip\xc8\v3
      +                          .00\pic\sources\c99\common\doprnt.c: 590:     int d, e, i, m, n, ne, p, t, w;;C:\Program
      +                           Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 591:     long double h, l;
 20481   000B5C  0100               	movlb	0	; () banked
 20482   000B5E  6B82               	clrf	i2efgtoa@sign& (0+255),b
 20483                           
 20484                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 596:     g.f = f;
 20485   000B60  C057  F087         	movff	i2efgtoa@f,i2efgtoa@g
 20486   000B64  C058  F088         	movff	i2efgtoa@f+1,i2efgtoa@g+1
 20487   000B68  C059  F089         	movff	i2efgtoa@f+2,i2efgtoa@g+2
 20488   000B6C  C05A  F08A         	movff	i2efgtoa@f+3,i2efgtoa@g+3
 20489   000B70                     
 20490                           ; BSR set to: 0
 20491                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 597:     if (g.f 
      +                          < 0.0) {
 20492   000B70  BF8A               	btfsc	(i2efgtoa@g+3)& (0+255),7,b
 20493   000B72  EFBF  F005         	goto	i2u592_40
 20494   000B76  EFBD  F005         	goto	i2u592_41
 20495   000B7A                     i2u592_41:
 20496   000B7A  EFD3  F005         	goto	i2l5968
 20497   000B7E                     i2u592_40:
 20498   000B7E                     
 20499                           ; BSR set to: 0
 20500                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 598:         sign
      +                           = 1;
 20501   000B7E  0E01               	movlw	1
 20502   000B80  6F82               	movwf	i2efgtoa@sign& (0+255),b
 20503   000B82                     
 20504                           ; BSR set to: 0
 20505                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 599:         g.f 
      +                          = -g.f;
 20506   000B82  C087  F001         	movff	i2efgtoa@g,i2___flneg@f1
 20507   000B86  C088  F002         	movff	i2efgtoa@g+1,i2___flneg@f1+1
 20508   000B8A  C089  F003         	movff	i2efgtoa@g+2,i2___flneg@f1+2
 20509   000B8E  C08A  F004         	movff	i2efgtoa@g+3,i2___flneg@f1+3
 20510   000B92  EC8A  F031         	call	i2___flneg	;wreg free
 20511   000B96  C001  F087         	movff	?i2___flneg,i2efgtoa@g
 20512   000B9A  C002  F088         	movff	?i2___flneg+1,i2efgtoa@g+1
 20513   000B9E  C003  F089         	movff	?i2___flneg+2,i2efgtoa@g+2
 20514   000BA2  C004  F08A         	movff	?i2___flneg+3,i2efgtoa@g+3
 20515   000BA6                     i2l5968:
 20516                           
 20517                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 603:     n = 0;
 20518   000BA6  0E00               	movlw	0
 20519   000BA8  0100               	movlb	0	; () banked
 20520   000BAA  6F86               	movwf	(i2efgtoa@n+1)& (0+255),b
 20521   000BAC  0E00               	movlw	0
 20522   000BAE  6F85               	movwf	i2efgtoa@n& (0+255),b
 20523   000BB0                     
 20524                           ; BSR set to: 0
 20525                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 604:     w = widt
      +                          h;
 20526   000BB0  C0DD  F072         	movff	_width,i2efgtoa@w
 20527   000BB4  C0DE  F073         	movff	_width+1,i2efgtoa@w+1
 20528   000BB8                     
 20529                           ; BSR set to: 0
 20530                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 605:     if (sign
 20531   000BB8  5182               	movf	i2efgtoa@sign& (0+255),w,b
 20532   000BBA  B4D8               	btfsc	status,2,c
 20533   000BBC  EFE2  F005         	goto	i2u593_41
 20534   000BC0  EFE4  F005         	goto	i2u593_40
 20535   000BC4                     i2u593_41:
 20536   000BC4  EFF8  F005         	goto	i2l5982
 20537   000BC8                     i2u593_40:
 20538   000BC8                     
 20539                           ; BSR set to: 0
 20540                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 609:    ) {;C:\Pr
      +                          ogram Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 610:   sign = sign ? '-
      +                          ' : '+';
 20541   000BC8  5182               	movf	i2efgtoa@sign& (0+255),w,b
 20542   000BCA  A4D8               	btfss	status,2,c
 20543   000BCC  EFEA  F005         	goto	i2u594_41
 20544   000BD0  EFEC  F005         	goto	i2u594_40
 20545   000BD4                     i2u594_41:
 20546   000BD4  EFF2  F005         	goto	i2l5978
 20547   000BD8                     i2u594_40:
 20548   000BD8                     
 20549                           ; BSR set to: 0
 20550   000BD8  0E00               	movlw	0
 20551   000BDA  6F63               	movwf	(i2_efgtoa$2326+1)& (0+255),b
 20552   000BDC  0E2B               	movlw	43
 20553   000BDE  6F62               	movwf	i2_efgtoa$2326& (0+255),b
 20554   000BE0  EFF6  F005         	goto	i2l5980
 20555   000BE4                     i2l5978:
 20556                           
 20557                           ; BSR set to: 0
 20558   000BE4  0E00               	movlw	0
 20559   000BE6  6F63               	movwf	(i2_efgtoa$2326+1)& (0+255),b
 20560   000BE8  0E2D               	movlw	45
 20561   000BEA  6F62               	movwf	i2_efgtoa$2326& (0+255),b
 20562   000BEC                     i2l5980:
 20563                           
 20564                           ; BSR set to: 0
 20565   000BEC  C062  F082         	movff	i2_efgtoa$2326,i2efgtoa@sign
 20566   000BF0                     i2l5982:
 20567                           
 20568                           ; BSR set to: 0
 20569                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 619:     if (( __
      +                          fpclassifyf(g.f) == 1 )) {
 20570   000BF0  C087  F001         	movff	i2efgtoa@g,i2___fpclassifyf@x
 20571   000BF4  C088  F002         	movff	i2efgtoa@g+1,i2___fpclassifyf@x+1
 20572   000BF8  C089  F003         	movff	i2efgtoa@g+2,i2___fpclassifyf@x+2
 20573   000BFC  C08A  F004         	movff	i2efgtoa@g+3,i2___fpclassifyf@x+3
 20574   000C00  EC4A  F025         	call	i2___fpclassifyf	;wreg free
 20575   000C04  0401               	decf	?i2___fpclassifyf^0,w,c
 20576   000C06  1002               	iorwf	(?i2___fpclassifyf+1)^0,w,c
 20577   000C08  A4D8               	btfss	status,2,c
 20578   000C0A  EF09  F006         	goto	i2u595_41
 20579   000C0E  EF0B  F006         	goto	i2u595_40
 20580   000C12                     i2u595_41:
 20581   000C12  EF3E  F006         	goto	i2l6000
 20582   000C16                     i2u595_40:
 20583   000C16                     
 20584                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 620:   if (sign) 
      +                          {
 20585   000C16  0100               	movlb	0	; () banked
 20586   000C18  5182               	movf	i2efgtoa@sign& (0+255),w,b
 20587   000C1A  B4D8               	btfsc	status,2,c
 20588   000C1C  EF12  F006         	goto	i2u596_41
 20589   000C20  EF14  F006         	goto	i2u596_40
 20590   000C24                     i2u596_41:
 20591   000C24  EF1D  F006         	goto	i2l5992
 20592   000C28                     i2u596_40:
 20593   000C28                     
 20594                           ; BSR set to: 0
 20595                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 621:    dbuf[0] =
      +                           sign;
 20596   000C28  C082  F200         	movff	i2efgtoa@sign,_dbuf
 20597   000C2C                     
 20598                           ; BSR set to: 0
 20599                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 622:    w--;
 20600   000C2C  0772               	decf	i2efgtoa@w& (0+255),f,b
 20601   000C2E  A0D8               	btfss	status,0,c
 20602   000C30  0773               	decf	(i2efgtoa@w+1)& (0+255),f,b
 20603   000C32                     
 20604                           ; BSR set to: 0
 20605                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 623:    n = 1;
 20606   000C32  0E00               	movlw	0
 20607   000C34  6F86               	movwf	(i2efgtoa@n+1)& (0+255),b
 20608   000C36  0E01               	movlw	1
 20609   000C38  6F85               	movwf	i2efgtoa@n& (0+255),b
 20610   000C3A                     i2l5992:
 20611                           
 20612                           ; BSR set to: 0
 20613                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 631:   {;C:\Progr
      +                          am Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 632:             strcpy(&d
      +                          buf[n], "inf");
 20614   000C3A  0E00               	movlw	low _dbuf
 20615   000C3C  2585               	addwf	i2efgtoa@n& (0+255),w,b
 20616   000C3E  6E01               	movwf	i2strcpy@dest^0,c
 20617   000C40  0E02               	movlw	high _dbuf
 20618   000C42  2186               	addwfc	(i2efgtoa@n+1)& (0+255),w,b
 20619   000C44  6E02               	movwf	(i2strcpy@dest+1)^0,c
 20620   000C46  0EF7               	movlw	low STR_20
 20621   000C48  6E03               	movwf	i2strcpy@src^0,c
 20622   000C4A  0EFF               	movlw	high STR_20
 20623   000C4C  6E04               	movwf	(i2strcpy@src+1)^0,c
 20624   000C4E  EC6D  F030         	call	i2_strcpy	;wreg free
 20625   000C52                     i2l5994:
 20626                           
 20627                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 633:         };C:
      +                          \Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 634:         w -= ((
      +                          sizeof("inf")/sizeof("inf"[0]))-1);
 20628   000C52  0100               	movlb	0	; () banked
 20629   000C54  0EFD               	movlw	253
 20630   000C56  2772               	addwf	i2efgtoa@w& (0+255),f,b
 20631   000C58  0EFF               	movlw	255
 20632   000C5A  2373               	addwfc	(i2efgtoa@w+1)& (0+255),f,b
 20633   000C5C                     
 20634                           ; BSR set to: 0
 20635                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 635:         retu
      +                          rn (void) pad(fp, &dbuf[0], w);
 20636   000C5C  C055  F011         	movff	i2efgtoa@fp,i2pad@fp
 20637   000C60  C056  F012         	movff	i2efgtoa@fp+1,i2pad@fp+1
 20638   000C64  0E00               	movlw	low _dbuf
 20639   000C66  6E13               	movwf	i2pad@buf^0,c
 20640   000C68  0E02               	movlw	high _dbuf
 20641   000C6A  6E14               	movwf	(i2pad@buf+1)^0,c
 20642   000C6C  C072  F015         	movff	i2efgtoa@w,i2pad@p
 20643   000C70  C073  F016         	movff	i2efgtoa@w+1,i2pad@p+1
 20644   000C74  EC26  F02D         	call	i2_pad	;wreg free
 20645   000C78  EF44  F00B         	goto	i2l1601
 20646   000C7C                     i2l6000:
 20647                           
 20648                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 637:     if (( __
      +                          fpclassifyf(g.f) == 0 )) {
 20649   000C7C  C087  F001         	movff	i2efgtoa@g,i2___fpclassifyf@x
 20650   000C80  C088  F002         	movff	i2efgtoa@g+1,i2___fpclassifyf@x+1
 20651   000C84  C089  F003         	movff	i2efgtoa@g+2,i2___fpclassifyf@x+2
 20652   000C88  C08A  F004         	movff	i2efgtoa@g+3,i2___fpclassifyf@x+3
 20653   000C8C  EC4A  F025         	call	i2___fpclassifyf	;wreg free
 20654   000C90  5001               	movf	?i2___fpclassifyf^0,w,c
 20655   000C92  1002               	iorwf	(?i2___fpclassifyf+1)^0,w,c
 20656   000C94  A4D8               	btfss	status,2,c
 20657   000C96  EF4F  F006         	goto	i2u597_41
 20658   000C9A  EF51  F006         	goto	i2u597_40
 20659   000C9E                     i2u597_41:
 20660   000C9E  EF71  F006         	goto	i2l6018
 20661   000CA2                     i2u597_40:
 20662   000CA2                     
 20663                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 638:   if (sign) 
      +                          {
 20664   000CA2  0100               	movlb	0	; () banked
 20665   000CA4  5182               	movf	i2efgtoa@sign& (0+255),w,b
 20666   000CA6  B4D8               	btfsc	status,2,c
 20667   000CA8  EF58  F006         	goto	i2u598_41
 20668   000CAC  EF5A  F006         	goto	i2u598_40
 20669   000CB0                     i2u598_41:
 20670   000CB0  EF63  F006         	goto	i2l6010
 20671   000CB4                     i2u598_40:
 20672   000CB4                     
 20673                           ; BSR set to: 0
 20674                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 639:    dbuf[0] =
      +                           sign;
 20675   000CB4  C082  F200         	movff	i2efgtoa@sign,_dbuf
 20676   000CB8                     
 20677                           ; BSR set to: 0
 20678                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 640:    w--;
 20679   000CB8  0772               	decf	i2efgtoa@w& (0+255),f,b
 20680   000CBA  A0D8               	btfss	status,0,c
 20681   000CBC  0773               	decf	(i2efgtoa@w+1)& (0+255),f,b
 20682   000CBE                     
 20683                           ; BSR set to: 0
 20684                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 641:    n = 1;
 20685   000CBE  0E00               	movlw	0
 20686   000CC0  6F86               	movwf	(i2efgtoa@n+1)& (0+255),b
 20687   000CC2  0E01               	movlw	1
 20688   000CC4  6F85               	movwf	i2efgtoa@n& (0+255),b
 20689   000CC6                     i2l6010:
 20690                           
 20691                           ; BSR set to: 0
 20692                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 649:   {;C:\Progr
      +                          am Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 650:             strcpy(&d
      +                          buf[n], "nan");
 20693   000CC6  0E00               	movlw	low _dbuf
 20694   000CC8  2585               	addwf	i2efgtoa@n& (0+255),w,b
 20695   000CCA  6E01               	movwf	i2strcpy@dest^0,c
 20696   000CCC  0E02               	movlw	high _dbuf
 20697   000CCE  2186               	addwfc	(i2efgtoa@n+1)& (0+255),w,b
 20698   000CD0  6E02               	movwf	(i2strcpy@dest+1)^0,c
 20699   000CD2  0EFB               	movlw	low STR_23
 20700   000CD4  6E03               	movwf	i2strcpy@src^0,c
 20701   000CD6  0EFF               	movlw	high STR_23
 20702   000CD8  6E04               	movwf	(i2strcpy@src+1)^0,c
 20703   000CDA  EC6D  F030         	call	i2_strcpy	;wreg free
 20704   000CDE  EF29  F006         	goto	i2l5994
 20705   000CE2                     i2l6018:
 20706                           
 20707                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 657:     u.f = 1.
      +                          0;
 20708   000CE2  0E00               	movlw	0
 20709   000CE4  0100               	movlb	0	; () banked
 20710   000CE6  6F8B               	movwf	i2efgtoa@u& (0+255),b
 20711   000CE8  0E00               	movlw	0
 20712   000CEA  6F8C               	movwf	(i2efgtoa@u+1)& (0+255),b
 20713   000CEC  0E80               	movlw	128
 20714   000CEE  6F8D               	movwf	(i2efgtoa@u+2)& (0+255),b
 20715   000CF0  0E3F               	movlw	63
 20716   000CF2  6F8E               	movwf	(i2efgtoa@u+3)& (0+255),b
 20717                           
 20718                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 658:     e = 0;
 20719   000CF4  0E00               	movlw	0
 20720   000CF6  6F81               	movwf	(i2efgtoa@e+1)& (0+255),b
 20721   000CF8  0E00               	movlw	0
 20722   000CFA  6F80               	movwf	i2efgtoa@e& (0+255),b
 20723   000CFC                     
 20724                           ; BSR set to: 0
 20725                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 659:  if (!(g.f =
      +                          = 0.0)) {
 20726   000CFC  C087  F001         	movff	i2efgtoa@g,i2___fleq@ff1
 20727   000D00  C088  F002         	movff	i2efgtoa@g+1,i2___fleq@ff1+1
 20728   000D04  C089  F003         	movff	i2efgtoa@g+2,i2___fleq@ff1+2
 20729   000D08  C08A  F004         	movff	i2efgtoa@g+3,i2___fleq@ff1+3
 20730   000D0C  0E00               	movlw	0
 20731   000D0E  6E05               	movwf	i2___fleq@ff2^0,c
 20732   000D10  0E00               	movlw	0
 20733   000D12  6E06               	movwf	(i2___fleq@ff2+1)^0,c
 20734   000D14  0E00               	movlw	0
 20735   000D16  6E07               	movwf	(i2___fleq@ff2+2)^0,c
 20736   000D18  0E00               	movlw	0
 20737   000D1A  6E08               	movwf	(i2___fleq@ff2+3)^0,c
 20738   000D1C  EC45  F02B         	call	i2___fleq	;wreg free
 20739   000D20  B0D8               	btfsc	status,0,c
 20740   000D22  EF95  F006         	goto	i2u599_41
 20741   000D26  EF97  F006         	goto	i2u599_40
 20742   000D2A                     i2u599_41:
 20743   000D2A  EF76  F007         	goto	i2l1604
 20744   000D2E                     i2u599_40:
 20745   000D2E  EFA4  F006         	goto	i2l6026
 20746   000D32                     i2l1606:
 20747                           
 20748                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 661:    u = ou;
 20749   000D32  C074  F08B         	movff	i2efgtoa@ou,i2efgtoa@u
 20750   000D36  C075  F08C         	movff	i2efgtoa@ou+1,i2efgtoa@u+1
 20751   000D3A  C076  F08D         	movff	i2efgtoa@ou+2,i2efgtoa@u+2
 20752   000D3E  C077  F08E         	movff	i2efgtoa@ou+3,i2efgtoa@u+3
 20753   000D42                     
 20754                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 662:    ++e;
 20755   000D42  0100               	movlb	0	; () banked
 20756   000D44  4B80               	infsnz	i2efgtoa@e& (0+255),f,b
 20757   000D46  2B81               	incf	(i2efgtoa@e+1)& (0+255),f,b
 20758   000D48                     i2l6026:
 20759                           
 20760                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 660:   while ((la
      +                          bs((g).u-((ou.f = u.f*10.0,ou)).u) <= 1) || g.f > ou.f) {
 20761   000D48  C08B  F00F         	movff	i2efgtoa@u,i2___flmul@b
 20762   000D4C  C08C  F010         	movff	i2efgtoa@u+1,i2___flmul@b+1
 20763   000D50  C08D  F011         	movff	i2efgtoa@u+2,i2___flmul@b+2
 20764   000D54  C08E  F012         	movff	i2efgtoa@u+3,i2___flmul@b+3
 20765   000D58  0E00               	movlw	0
 20766   000D5A  6E13               	movwf	i2___flmul@a^0,c
 20767   000D5C  0E00               	movlw	0
 20768   000D5E  6E14               	movwf	(i2___flmul@a+1)^0,c
 20769   000D60  0E20               	movlw	32
 20770   000D62  6E15               	movwf	(i2___flmul@a+2)^0,c
 20771   000D64  0E41               	movlw	65
 20772   000D66  6E16               	movwf	(i2___flmul@a+3)^0,c
 20773   000D68  EC22  F012         	call	i2___flmul	;wreg free
 20774   000D6C  C00F  F074         	movff	?i2___flmul,i2efgtoa@ou
 20775   000D70  C010  F075         	movff	?i2___flmul+1,i2efgtoa@ou+1
 20776   000D74  C011  F076         	movff	?i2___flmul+2,i2efgtoa@ou+2
 20777   000D78  C012  F077         	movff	?i2___flmul+3,i2efgtoa@ou+3
 20778   000D7C  0100               	movlb	0	; () banked
 20779   000D7E  5174               	movf	i2efgtoa@ou& (0+255),w,b
 20780   000D80  5D87               	subwf	i2efgtoa@g& (0+255),w,b
 20781   000D82  6E01               	movwf	i2labs@a^0,c
 20782   000D84  5175               	movf	(i2efgtoa@ou+1)& (0+255),w,b
 20783   000D86  5988               	subwfb	(i2efgtoa@g+1)& (0+255),w,b
 20784   000D88  6E02               	movwf	(i2labs@a+1)^0,c
 20785   000D8A  5176               	movf	(i2efgtoa@ou+2)& (0+255),w,b
 20786   000D8C  5989               	subwfb	(i2efgtoa@g+2)& (0+255),w,b
 20787   000D8E  6E03               	movwf	(i2labs@a+2)^0,c
 20788   000D90  5177               	movf	(i2efgtoa@ou+3)& (0+255),w,b
 20789   000D92  598A               	subwfb	(i2efgtoa@g+3)& (0+255),w,b
 20790   000D94  6E04               	movwf	(i2labs@a+3)^0,c
 20791   000D96  ECF2  F02E         	call	i2_labs	;wreg free
 20792   000D9A  BE04               	btfsc	(?i2_labs+3)^0,7,c
 20793   000D9C  EFDB  F006         	goto	i2u600_41
 20794   000DA0  5004               	movf	(?i2_labs+3)^0,w,c
 20795   000DA2  1003               	iorwf	(?i2_labs+2)^0,w,c
 20796   000DA4  1002               	iorwf	(?i2_labs+1)^0,w,c
 20797   000DA6  E109               	bnz	i2u600_40
 20798   000DA8  0E02               	movlw	2
 20799   000DAA  5C01               	subwf	?i2_labs^0,w,c
 20800   000DAC  A0D8               	btfss	status,0,c
 20801   000DAE  EFDB  F006         	goto	i2u600_41
 20802   000DB2  EFDD  F006         	goto	i2u600_40
 20803   000DB6                     i2u600_41:
 20804   000DB6  EF99  F006         	goto	i2l1606
 20805   000DBA                     i2u600_40:
 20806   000DBA  C074  F028         	movff	i2efgtoa@ou,i2___flge@ff1
 20807   000DBE  C075  F029         	movff	i2efgtoa@ou+1,i2___flge@ff1+1
 20808   000DC2  C076  F02A         	movff	i2efgtoa@ou+2,i2___flge@ff1+2
 20809   000DC6  C077  F02B         	movff	i2efgtoa@ou+3,i2___flge@ff1+3
 20810   000DCA  C087  F02C         	movff	i2efgtoa@g,i2___flge@ff2
 20811   000DCE  C088  F02D         	movff	i2efgtoa@g+1,i2___flge@ff2+1
 20812   000DD2  C089  F02E         	movff	i2efgtoa@g+2,i2___flge@ff2+2
 20813   000DD6  C08A  F02F         	movff	i2efgtoa@g+3,i2___flge@ff2+3
 20814   000DDA  EC48  F024         	call	i2___flge	;wreg free
 20815   000DDE  A0D8               	btfss	status,0,c
 20816   000DE0  EFF4  F006         	goto	i2u601_41
 20817   000DE4  EFF6  F006         	goto	i2u601_40
 20818   000DE8                     i2u601_41:
 20819   000DE8  EF99  F006         	goto	i2l1606
 20820   000DEC                     i2u601_40:
 20821   000DEC                     
 20822                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 664:   if ((labs(
      +                          (g).u-(u).u) <= 1)) {
 20823   000DEC  0100               	movlb	0	; () banked
 20824   000DEE  518B               	movf	i2efgtoa@u& (0+255),w,b
 20825   000DF0  5D87               	subwf	i2efgtoa@g& (0+255),w,b
 20826   000DF2  6E01               	movwf	i2labs@a^0,c
 20827   000DF4  518C               	movf	(i2efgtoa@u+1)& (0+255),w,b
 20828   000DF6  5988               	subwfb	(i2efgtoa@g+1)& (0+255),w,b
 20829   000DF8  6E02               	movwf	(i2labs@a+1)^0,c
 20830   000DFA  518D               	movf	(i2efgtoa@u+2)& (0+255),w,b
 20831   000DFC  5989               	subwfb	(i2efgtoa@g+2)& (0+255),w,b
 20832   000DFE  6E03               	movwf	(i2labs@a+2)^0,c
 20833   000E00  518E               	movf	(i2efgtoa@u+3)& (0+255),w,b
 20834   000E02  598A               	subwfb	(i2efgtoa@g+3)& (0+255),w,b
 20835   000E04  6E04               	movwf	(i2labs@a+3)^0,c
 20836   000E06  ECF2  F02E         	call	i2_labs	;wreg free
 20837   000E0A  BE04               	btfsc	(?i2_labs+3)^0,7,c
 20838   000E0C  EF15  F007         	goto	i2u602_40
 20839   000E10  5004               	movf	(?i2_labs+3)^0,w,c
 20840   000E12  1003               	iorwf	(?i2_labs+2)^0,w,c
 20841   000E14  1002               	iorwf	(?i2_labs+1)^0,w,c
 20842   000E16  E107               	bnz	i2u602_41
 20843   000E18  0E02               	movlw	2
 20844   000E1A  5C01               	subwf	?i2_labs^0,w,c
 20845   000E1C  B0D8               	btfsc	status,0,c
 20846   000E1E  EF13  F007         	goto	i2u602_41
 20847   000E22  EF15  F007         	goto	i2u602_40
 20848   000E26                     i2u602_41:
 20849   000E26  EF5D  F007         	goto	i2l6044
 20850   000E2A                     i2u602_40:
 20851   000E2A                     i2l6034:
 20852                           
 20853                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 665:    g = u;
 20854   000E2A  C08B  F087         	movff	i2efgtoa@u,i2efgtoa@g
 20855   000E2E  C08C  F088         	movff	i2efgtoa@u+1,i2efgtoa@g+1
 20856   000E32  C08D  F089         	movff	i2efgtoa@u+2,i2efgtoa@g+2
 20857   000E36  C08E  F08A         	movff	i2efgtoa@u+3,i2efgtoa@g+3
 20858                           
 20859                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 666:   }
 20860   000E3A  EF76  F007         	goto	i2l1604
 20861   000E3E                     i2l6036:
 20862                           
 20863                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 669:     u.f = u.
      +                          f/10.0;
 20864   000E3E  C08B  F028         	movff	i2efgtoa@u,i2___fldiv@b
 20865   000E42  C08C  F029         	movff	i2efgtoa@u+1,i2___fldiv@b+1
 20866   000E46  C08D  F02A         	movff	i2efgtoa@u+2,i2___fldiv@b+2
 20867   000E4A  C08E  F02B         	movff	i2efgtoa@u+3,i2___fldiv@b+3
 20868   000E4E  0E00               	movlw	0
 20869   000E50  6E2C               	movwf	i2___fldiv@a^0,c
 20870   000E52  0E00               	movlw	0
 20871   000E54  6E2D               	movwf	(i2___fldiv@a+1)^0,c
 20872   000E56  0E20               	movlw	32
 20873   000E58  6E2E               	movwf	(i2___fldiv@a+2)^0,c
 20874   000E5A  0E41               	movlw	65
 20875   000E5C  6E2F               	movwf	(i2___fldiv@a+3)^0,c
 20876   000E5E  ECF6  F017         	call	i2___fldiv	;wreg free
 20877   000E62  C028  F08B         	movff	?i2___fldiv,i2efgtoa@u
 20878   000E66  C029  F08C         	movff	?i2___fldiv+1,i2efgtoa@u+1
 20879   000E6A  C02A  F08D         	movff	?i2___fldiv+2,i2efgtoa@u+2
 20880   000E6E  C02B  F08E         	movff	?i2___fldiv+3,i2efgtoa@u+3
 20881   000E72                     
 20882                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 670:     --e;
 20883   000E72  0100               	movlb	0	; () banked
 20884   000E74  0780               	decf	i2efgtoa@e& (0+255),f,b
 20885   000E76  A0D8               	btfss	status,0,c
 20886   000E78  0781               	decf	(i2efgtoa@e+1)& (0+255),f,b
 20887   000E7A                     
 20888                           ; BSR set to: 0
 20889                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 671:     if ((lab
      +                          s((g).u-(u).u) <= 1)) {
 20890   000E7A  518B               	movf	i2efgtoa@u& (0+255),w,b
 20891   000E7C  5D87               	subwf	i2efgtoa@g& (0+255),w,b
 20892   000E7E  6E01               	movwf	i2labs@a^0,c
 20893   000E80  518C               	movf	(i2efgtoa@u+1)& (0+255),w,b
 20894   000E82  5988               	subwfb	(i2efgtoa@g+1)& (0+255),w,b
 20895   000E84  6E02               	movwf	(i2labs@a+1)^0,c
 20896   000E86  518D               	movf	(i2efgtoa@u+2)& (0+255),w,b
 20897   000E88  5989               	subwfb	(i2efgtoa@g+2)& (0+255),w,b
 20898   000E8A  6E03               	movwf	(i2labs@a+2)^0,c
 20899   000E8C  518E               	movf	(i2efgtoa@u+3)& (0+255),w,b
 20900   000E8E  598A               	subwfb	(i2efgtoa@g+3)& (0+255),w,b
 20901   000E90  6E04               	movwf	(i2labs@a+3)^0,c
 20902   000E92  ECF2  F02E         	call	i2_labs	;wreg free
 20903   000E96  BE04               	btfsc	(?i2_labs+3)^0,7,c
 20904   000E98  EF5B  F007         	goto	i2u603_40
 20905   000E9C  5004               	movf	(?i2_labs+3)^0,w,c
 20906   000E9E  1003               	iorwf	(?i2_labs+2)^0,w,c
 20907   000EA0  1002               	iorwf	(?i2_labs+1)^0,w,c
 20908   000EA2  E107               	bnz	i2u603_41
 20909   000EA4  0E02               	movlw	2
 20910   000EA6  5C01               	subwf	?i2_labs^0,w,c
 20911   000EA8  B0D8               	btfsc	status,0,c
 20912   000EAA  EF59  F007         	goto	i2u603_41
 20913   000EAE  EF5B  F007         	goto	i2u603_40
 20914   000EB2                     i2u603_41:
 20915   000EB2  EF5D  F007         	goto	i2l6044
 20916   000EB6                     i2u603_40:
 20917   000EB6  EF15  F007         	goto	i2l6034
 20918   000EBA                     i2l6044:
 20919                           
 20920                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 668:    while (g.
      +                          f < u.f) {
 20921   000EBA  C087  F028         	movff	i2efgtoa@g,i2___flge@ff1
 20922   000EBE  C088  F029         	movff	i2efgtoa@g+1,i2___flge@ff1+1
 20923   000EC2  C089  F02A         	movff	i2efgtoa@g+2,i2___flge@ff1+2
 20924   000EC6  C08A  F02B         	movff	i2efgtoa@g+3,i2___flge@ff1+3
 20925   000ECA  C08B  F02C         	movff	i2efgtoa@u,i2___flge@ff2
 20926   000ECE  C08C  F02D         	movff	i2efgtoa@u+1,i2___flge@ff2+1
 20927   000ED2  C08D  F02E         	movff	i2efgtoa@u+2,i2___flge@ff2+2
 20928   000ED6  C08E  F02F         	movff	i2efgtoa@u+3,i2___flge@ff2+3
 20929   000EDA  EC48  F024         	call	i2___flge	;wreg free
 20930   000EDE  A0D8               	btfss	status,0,c
 20931   000EE0  EF74  F007         	goto	i2u604_41
 20932   000EE4  EF76  F007         	goto	i2u604_40
 20933   000EE8                     i2u604_41:
 20934   000EE8  EF1F  F007         	goto	i2l6036
 20935   000EEC                     i2u604_40:
 20936   000EEC                     i2l1604:
 20937                           
 20938                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 683:  mode = c;
 20939   000EEC  C05B  F06A         	movff	i2efgtoa@c,i2efgtoa@mode
 20940                           
 20941                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 685:     nmode = 
      +                          mode;
 20942   000EF0  C06A  F071         	movff	i2efgtoa@mode,i2efgtoa@nmode
 20943   000EF4                     
 20944                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 695:  {;C:\Progra
      +                          m Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 696:         p = (prec < 0)
      +                           ? 6 : prec;
 20945   000EF4  0100               	movlb	0	; () banked
 20946   000EF6  BFE0               	btfsc	(_prec+1)& (0+255),7,b
 20947   000EF8  EF80  F007         	goto	i2u605_41
 20948   000EFC  EF82  F007         	goto	i2u605_40
 20949   000F00                     i2u605_41:
 20950   000F00  EF88  F007         	goto	i2l6050
 20951   000F04                     i2u605_40:
 20952   000F04                     
 20953                           ; BSR set to: 0
 20954   000F04  C0DF  F06F         	movff	_prec,i2efgtoa@p
 20955   000F08  C0E0  F070         	movff	_prec+1,i2efgtoa@p+1
 20956   000F0C  EF8C  F007         	goto	i2l6052
 20957   000F10                     i2l6050:
 20958                           
 20959                           ; BSR set to: 0
 20960   000F10  0E00               	movlw	0
 20961   000F12  6F70               	movwf	(i2efgtoa@p+1)& (0+255),b
 20962   000F14  0E06               	movlw	6
 20963   000F16  6F6F               	movwf	i2efgtoa@p& (0+255),b
 20964   000F18                     i2l6052:
 20965                           
 20966                           ; BSR set to: 0
 20967                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 697:     };C:\Pro
      +                          gram Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 711:     m = p;
 20968   000F18  C06F  F06D         	movff	i2efgtoa@p,i2efgtoa@m
 20969   000F1C  C070  F06E         	movff	i2efgtoa@p+1,i2efgtoa@m+1
 20970   000F20                     
 20971                           ; BSR set to: 0
 20972                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 715:  {;C:\Progra
      +                          m Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 716:         ++m;
 20973   000F20  4B6D               	infsnz	i2efgtoa@m& (0+255),f,b
 20974   000F22  2B6E               	incf	(i2efgtoa@m+1)& (0+255),f,b
 20975   000F24                     
 20976                           ; BSR set to: 0
 20977                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 717:     };C:\Pro
      +                          gram Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 721:     if (nmode == 'f
      +                          ') {
 20978   000F24  0E66               	movlw	102
 20979   000F26  1971               	xorwf	i2efgtoa@nmode& (0+255),w,b
 20980   000F28  A4D8               	btfss	status,2,c
 20981   000F2A  EF99  F007         	goto	i2u606_41
 20982   000F2E  EF9B  F007         	goto	i2u606_40
 20983   000F32                     i2u606_41:
 20984   000F32  EFBB  F007         	goto	i2l6066
 20985   000F36                     i2u606_40:
 20986   000F36                     
 20987                           ; BSR set to: 0
 20988                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 722:         if (
      +                          e < 0) {
 20989   000F36  BF81               	btfsc	(i2efgtoa@e+1)& (0+255),7,b
 20990   000F38  EFA2  F007         	goto	i2u607_40
 20991   000F3C  EFA0  F007         	goto	i2u607_41
 20992   000F40                     i2u607_41:
 20993   000F40  EFAE  F007         	goto	i2l6062
 20994   000F44                     i2u607_40:
 20995   000F44                     
 20996                           ; BSR set to: 0
 20997                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 723:             
      +                          u.f = 1.0;
 20998   000F44  0E00               	movlw	0
 20999   000F46  6F8B               	movwf	i2efgtoa@u& (0+255),b
 21000   000F48  0E00               	movlw	0
 21001   000F4A  6F8C               	movwf	(i2efgtoa@u+1)& (0+255),b
 21002   000F4C  0E80               	movlw	128
 21003   000F4E  6F8D               	movwf	(i2efgtoa@u+2)& (0+255),b
 21004   000F50  0E3F               	movlw	63
 21005   000F52  6F8E               	movwf	(i2efgtoa@u+3)& (0+255),b
 21006                           
 21007                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 724:             
      +                          e = 0;
 21008   000F54  0E00               	movlw	0
 21009   000F56  6F81               	movwf	(i2efgtoa@e+1)& (0+255),b
 21010   000F58  0E00               	movlw	0
 21011   000F5A  6F80               	movwf	i2efgtoa@e& (0+255),b
 21012   000F5C                     i2l6062:
 21013                           
 21014                           ; BSR set to: 0
 21015                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 726:         if (
      +                          !(mode == 'g')) {
 21016   000F5C  0E67               	movlw	103
 21017   000F5E  196A               	xorwf	i2efgtoa@mode& (0+255),w,b
 21018   000F60  B4D8               	btfsc	status,2,c
 21019   000F62  EFB5  F007         	goto	i2u608_41
 21020   000F66  EFB7  F007         	goto	i2u608_40
 21021   000F6A                     i2u608_41:
 21022   000F6A  EFBB  F007         	goto	i2l6066
 21023   000F6E                     i2u608_40:
 21024   000F6E                     
 21025                           ; BSR set to: 0
 21026                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 727:             
      +                          m += e;
 21027   000F6E  5180               	movf	i2efgtoa@e& (0+255),w,b
 21028   000F70  276D               	addwf	i2efgtoa@m& (0+255),f,b
 21029   000F72  5181               	movf	(i2efgtoa@e+1)& (0+255),w,b
 21030   000F74  236E               	addwfc	(i2efgtoa@m+1)& (0+255),f,b
 21031   000F76                     i2l6066:
 21032                           
 21033                           ; BSR set to: 0
 21034                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 733:     i = 0;
 21035   000F76  0E00               	movlw	0
 21036   000F78  6F84               	movwf	(i2efgtoa@i+1)& (0+255),b
 21037   000F7A  0E00               	movlw	0
 21038   000F7C  6F83               	movwf	i2efgtoa@i& (0+255),b
 21039   000F7E                     
 21040                           ; BSR set to: 0
 21041                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 734:     h = g.f;
 21042   000F7E  C087  F078         	movff	i2efgtoa@g,i2efgtoa@h
 21043   000F82  C088  F079         	movff	i2efgtoa@g+1,i2efgtoa@h+1
 21044   000F86  C089  F07A         	movff	i2efgtoa@g+2,i2efgtoa@h+2
 21045   000F8A  C08A  F07B         	movff	i2efgtoa@g+3,i2efgtoa@h+3
 21046   000F8E                     
 21047                           ; BSR set to: 0
 21048                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 735:     ou = u;
 21049   000F8E  C08B  F074         	movff	i2efgtoa@u,i2efgtoa@ou
 21050   000F92  C08C  F075         	movff	i2efgtoa@u+1,i2efgtoa@ou+1
 21051   000F96  C08D  F076         	movff	i2efgtoa@u+2,i2efgtoa@ou+2
 21052   000F9A  C08E  F077         	movff	i2efgtoa@u+3,i2efgtoa@ou+3
 21053                           
 21054                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 736:     while (i
      +                           < m) {
 21055   000F9E  EF4C  F008         	goto	i2l6080
 21056   000FA2                     i2l6072:
 21057                           
 21058                           ; BSR set to: 0
 21059                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 737:         l = 
      +                          floorf(h/u.f);
 21060   000FA2  C078  F028         	movff	i2efgtoa@h,i2___fldiv@b
 21061   000FA6  C079  F029         	movff	i2efgtoa@h+1,i2___fldiv@b+1
 21062   000FAA  C07A  F02A         	movff	i2efgtoa@h+2,i2___fldiv@b+2
 21063   000FAE  C07B  F02B         	movff	i2efgtoa@h+3,i2___fldiv@b+3
 21064   000FB2  C08B  F02C         	movff	i2efgtoa@u,i2___fldiv@a
 21065   000FB6  C08C  F02D         	movff	i2efgtoa@u+1,i2___fldiv@a+1
 21066   000FBA  C08D  F02E         	movff	i2efgtoa@u+2,i2___fldiv@a+2
 21067   000FBE  C08E  F02F         	movff	i2efgtoa@u+3,i2___fldiv@a+3
 21068   000FC2  ECF6  F017         	call	i2___fldiv	;wreg free
 21069   000FC6  C028  F041         	movff	?i2___fldiv,i2floorf@x
 21070   000FCA  C029  F042         	movff	?i2___fldiv+1,i2floorf@x+1
 21071   000FCE  C02A  F043         	movff	?i2___fldiv+2,i2floorf@x+2
 21072   000FD2  C02B  F044         	movff	?i2___fldiv+3,i2floorf@x+3
 21073   000FD6  EC62  F01F         	call	i2_floorf	;wreg free
 21074   000FDA  C041  F07C         	movff	?i2_floorf,i2efgtoa@l
 21075   000FDE  C042  F07D         	movff	?i2_floorf+1,i2efgtoa@l+1
 21076   000FE2  C043  F07E         	movff	?i2_floorf+2,i2efgtoa@l+2
 21077   000FE6  C044  F07F         	movff	?i2_floorf+3,i2efgtoa@l+3
 21078                           
 21079                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 738:         d = 
      +                          (int)l;
 21080   000FEA  C07C  F04B         	movff	i2efgtoa@l,i2___fltol@f1
 21081   000FEE  C07D  F04C         	movff	i2efgtoa@l+1,i2___fltol@f1+1
 21082   000FF2  C07E  F04D         	movff	i2efgtoa@l+2,i2___fltol@f1+2
 21083   000FF6  C07F  F04E         	movff	i2efgtoa@l+3,i2___fltol@f1+3
 21084   000FFA  ECC5  F023         	call	i2___fltol	;wreg free
 21085   000FFE  C04B  F06B         	movff	?i2___fltol,i2efgtoa@d
 21086   001002  C04C  F06C         	movff	?i2___fltol+1,i2efgtoa@d+1
 21087   001006                     
 21088                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 739:         h -=
      +                           l*u.f;
 21089   001006  C078  F028         	movff	i2efgtoa@h,i2___flsub@b
 21090   00100A  C079  F029         	movff	i2efgtoa@h+1,i2___flsub@b+1
 21091   00100E  C07A  F02A         	movff	i2efgtoa@h+2,i2___flsub@b+2
 21092   001012  C07B  F02B         	movff	i2efgtoa@h+3,i2___flsub@b+3
 21093   001016  C07C  F013         	movff	i2efgtoa@l,i2___flmul@a
 21094   00101A  C07D  F014         	movff	i2efgtoa@l+1,i2___flmul@a+1
 21095   00101E  C07E  F015         	movff	i2efgtoa@l+2,i2___flmul@a+2
 21096   001022  C07F  F016         	movff	i2efgtoa@l+3,i2___flmul@a+3
 21097   001026  C08B  F00F         	movff	i2efgtoa@u,i2___flmul@b
 21098   00102A  C08C  F010         	movff	i2efgtoa@u+1,i2___flmul@b+1
 21099   00102E  C08D  F011         	movff	i2efgtoa@u+2,i2___flmul@b+2
 21100   001032  C08E  F012         	movff	i2efgtoa@u+3,i2___flmul@b+3
 21101   001036  EC22  F012         	call	i2___flmul	;wreg free
 21102   00103A  C00F  F02C         	movff	?i2___flmul,i2___flsub@a
 21103   00103E  C010  F02D         	movff	?i2___flmul+1,i2___flsub@a+1
 21104   001042  C011  F02E         	movff	?i2___flmul+2,i2___flsub@a+2
 21105   001046  C012  F02F         	movff	?i2___flmul+3,i2___flsub@a+3
 21106   00104A  EC4A  F030         	call	i2___flsub	;wreg free
 21107   00104E  C028  F078         	movff	?i2___flsub,i2efgtoa@h
 21108   001052  C029  F079         	movff	?i2___flsub+1,i2efgtoa@h+1
 21109   001056  C02A  F07A         	movff	?i2___flsub+2,i2efgtoa@h+2
 21110   00105A  C02B  F07B         	movff	?i2___flsub+3,i2efgtoa@h+3
 21111   00105E                     
 21112                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 740:         u.f 
      +                          = u.f/10.0;
 21113   00105E  C08B  F028         	movff	i2efgtoa@u,i2___fldiv@b
 21114   001062  C08C  F029         	movff	i2efgtoa@u+1,i2___fldiv@b+1
 21115   001066  C08D  F02A         	movff	i2efgtoa@u+2,i2___fldiv@b+2
 21116   00106A  C08E  F02B         	movff	i2efgtoa@u+3,i2___fldiv@b+3
 21117   00106E  0E00               	movlw	0
 21118   001070  6E2C               	movwf	i2___fldiv@a^0,c
 21119   001072  0E00               	movlw	0
 21120   001074  6E2D               	movwf	(i2___fldiv@a+1)^0,c
 21121   001076  0E20               	movlw	32
 21122   001078  6E2E               	movwf	(i2___fldiv@a+2)^0,c
 21123   00107A  0E41               	movlw	65
 21124   00107C  6E2F               	movwf	(i2___fldiv@a+3)^0,c
 21125   00107E  ECF6  F017         	call	i2___fldiv	;wreg free
 21126   001082  C028  F08B         	movff	?i2___fldiv,i2efgtoa@u
 21127   001086  C029  F08C         	movff	?i2___fldiv+1,i2efgtoa@u+1
 21128   00108A  C02A  F08D         	movff	?i2___fldiv+2,i2efgtoa@u+2
 21129   00108E  C02B  F08E         	movff	?i2___fldiv+3,i2efgtoa@u+3
 21130   001092                     
 21131                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 741:         ++i;
 21132   001092  0100               	movlb	0	; () banked
 21133   001094  4B83               	infsnz	i2efgtoa@i& (0+255),f,b
 21134   001096  2B84               	incf	(i2efgtoa@i+1)& (0+255),f,b
 21135   001098                     i2l6080:
 21136                           
 21137                           ; BSR set to: 0
 21138                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 736:     while (i
      +                           < m) {
 21139   001098  516D               	movf	i2efgtoa@m& (0+255),w,b
 21140   00109A  5D83               	subwf	i2efgtoa@i& (0+255),w,b
 21141   00109C  5184               	movf	(i2efgtoa@i+1)& (0+255),w,b
 21142   00109E  0A80               	xorlw	128
 21143   0010A0  6E5C               	movwf	??i2_efgtoa^0,c
 21144   0010A2  516E               	movf	(i2efgtoa@m+1)& (0+255),w,b
 21145   0010A4  0A80               	xorlw	128
 21146   0010A6  585C               	subwfb	??i2_efgtoa^0,w,c
 21147   0010A8  A0D8               	btfss	status,0,c
 21148   0010AA  EF59  F008         	goto	i2u609_41
 21149   0010AE  EF5B  F008         	goto	i2u609_40
 21150   0010B2                     i2u609_41:
 21151   0010B2  EFD1  F007         	goto	i2l6072
 21152   0010B6                     i2u609_40:
 21153   0010B6                     
 21154                           ; BSR set to: 0
 21155                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 745:     l = u.f*
      +                          5.0;
 21156   0010B6  C08B  F00F         	movff	i2efgtoa@u,i2___flmul@b
 21157   0010BA  C08C  F010         	movff	i2efgtoa@u+1,i2___flmul@b+1
 21158   0010BE  C08D  F011         	movff	i2efgtoa@u+2,i2___flmul@b+2
 21159   0010C2  C08E  F012         	movff	i2efgtoa@u+3,i2___flmul@b+3
 21160   0010C6  0E00               	movlw	0
 21161   0010C8  6E13               	movwf	i2___flmul@a^0,c
 21162   0010CA  0E00               	movlw	0
 21163   0010CC  6E14               	movwf	(i2___flmul@a+1)^0,c
 21164   0010CE  0EA0               	movlw	160
 21165   0010D0  6E15               	movwf	(i2___flmul@a+2)^0,c
 21166   0010D2  0E40               	movlw	64
 21167   0010D4  6E16               	movwf	(i2___flmul@a+3)^0,c
 21168   0010D6  EC22  F012         	call	i2___flmul	;wreg free
 21169   0010DA  C00F  F07C         	movff	?i2___flmul,i2efgtoa@l
 21170   0010DE  C010  F07D         	movff	?i2___flmul+1,i2efgtoa@l+1
 21171   0010E2  C011  F07E         	movff	?i2___flmul+2,i2efgtoa@l+2
 21172   0010E6  C012  F07F         	movff	?i2___flmul+3,i2efgtoa@l+3
 21173   0010EA                     
 21174                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 746:     if (h < 
      +                          l) {
 21175   0010EA  C078  F028         	movff	i2efgtoa@h,i2___flge@ff1
 21176   0010EE  C079  F029         	movff	i2efgtoa@h+1,i2___flge@ff1+1
 21177   0010F2  C07A  F02A         	movff	i2efgtoa@h+2,i2___flge@ff1+2
 21178   0010F6  C07B  F02B         	movff	i2efgtoa@h+3,i2___flge@ff1+3
 21179   0010FA  C07C  F02C         	movff	i2efgtoa@l,i2___flge@ff2
 21180   0010FE  C07D  F02D         	movff	i2efgtoa@l+1,i2___flge@ff2+1
 21181   001102  C07E  F02E         	movff	i2efgtoa@l+2,i2___flge@ff2+2
 21182   001106  C07F  F02F         	movff	i2efgtoa@l+3,i2___flge@ff2+3
 21183   00110A  EC48  F024         	call	i2___flge	;wreg free
 21184   00110E  B0D8               	btfsc	status,0,c
 21185   001110  EF8C  F008         	goto	i2u610_41
 21186   001114  EF8E  F008         	goto	i2u610_40
 21187   001118                     i2u610_41:
 21188   001118  EF99  F008         	goto	i2l6088
 21189   00111C                     i2u610_40:
 21190   00111C                     
 21191                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 747:         l = 
      +                          0.0;
 21192   00111C  0E00               	movlw	0
 21193   00111E  0100               	movlb	0	; () banked
 21194   001120  6F7C               	movwf	i2efgtoa@l& (0+255),b
 21195   001122  0E00               	movlw	0
 21196   001124  6F7D               	movwf	(i2efgtoa@l+1)& (0+255),b
 21197   001126  0E00               	movlw	0
 21198   001128  6F7E               	movwf	(i2efgtoa@l+2)& (0+255),b
 21199   00112A  0E00               	movlw	0
 21200   00112C  6F7F               	movwf	(i2efgtoa@l+3)& (0+255),b
 21201                           
 21202                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 748:     } else {
 21203   00112E  EFC2  F008         	goto	i2l6094
 21204   001132                     i2l6088:
 21205                           
 21206                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 750:         if (
      +                          (h == l) && !(d % 2)) {
 21207   001132  C078  F001         	movff	i2efgtoa@h,i2___fleq@ff1
 21208   001136  C079  F002         	movff	i2efgtoa@h+1,i2___fleq@ff1+1
 21209   00113A  C07A  F003         	movff	i2efgtoa@h+2,i2___fleq@ff1+2
 21210   00113E  C07B  F004         	movff	i2efgtoa@h+3,i2___fleq@ff1+3
 21211   001142  C07C  F005         	movff	i2efgtoa@l,i2___fleq@ff2
 21212   001146  C07D  F006         	movff	i2efgtoa@l+1,i2___fleq@ff2+1
 21213   00114A  C07E  F007         	movff	i2efgtoa@l+2,i2___fleq@ff2+2
 21214   00114E  C07F  F008         	movff	i2efgtoa@l+3,i2___fleq@ff2+3
 21215   001152  EC45  F02B         	call	i2___fleq	;wreg free
 21216   001156  A0D8               	btfss	status,0,c
 21217   001158  EFB0  F008         	goto	i2u611_41
 21218   00115C  EFB2  F008         	goto	i2u611_40
 21219   001160                     i2u611_41:
 21220   001160  EFC2  F008         	goto	i2l6094
 21221   001164                     i2u611_40:
 21222   001164  0100               	movlb	0	; () banked
 21223   001166  B16B               	btfsc	i2efgtoa@d& (0+255),0,b
 21224   001168  EFB8  F008         	goto	i2u612_41
 21225   00116C  EFBA  F008         	goto	i2u612_40
 21226   001170                     i2u612_41:
 21227   001170  EFC2  F008         	goto	i2l6094
 21228   001174                     i2u612_40:
 21229   001174                     
 21230                           ; BSR set to: 0
 21231                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 751:             
      +                          l = 0.0;
 21232   001174  0E00               	movlw	0
 21233   001176  6F7C               	movwf	i2efgtoa@l& (0+255),b
 21234   001178  0E00               	movlw	0
 21235   00117A  6F7D               	movwf	(i2efgtoa@l+1)& (0+255),b
 21236   00117C  0E00               	movlw	0
 21237   00117E  6F7E               	movwf	(i2efgtoa@l+2)& (0+255),b
 21238   001180  0E00               	movlw	0
 21239   001182  6F7F               	movwf	(i2efgtoa@l+3)& (0+255),b
 21240   001184                     i2l6094:
 21241                           
 21242                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 756:     h = g.f 
      +                          + l;
 21243   001184  C087  F001         	movff	i2efgtoa@g,i2___fladd@b
 21244   001188  C088  F002         	movff	i2efgtoa@g+1,i2___fladd@b+1
 21245   00118C  C089  F003         	movff	i2efgtoa@g+2,i2___fladd@b+2
 21246   001190  C08A  F004         	movff	i2efgtoa@g+3,i2___fladd@b+3
 21247   001194  C07C  F005         	movff	i2efgtoa@l,i2___fladd@a
 21248   001198  C07D  F006         	movff	i2efgtoa@l+1,i2___fladd@a+1
 21249   00119C  C07E  F007         	movff	i2efgtoa@l+2,i2___fladd@a+2
 21250   0011A0  C07F  F008         	movff	i2efgtoa@l+3,i2___fladd@a+3
 21251   0011A4  ECA1  F00D         	call	i2___fladd	;wreg free
 21252   0011A8  C001  F078         	movff	?i2___fladd,i2efgtoa@h
 21253   0011AC  C002  F079         	movff	?i2___fladd+1,i2efgtoa@h+1
 21254   0011B0  C003  F07A         	movff	?i2___fladd+2,i2efgtoa@h+2
 21255   0011B4  C004  F07B         	movff	?i2___fladd+3,i2efgtoa@h+3
 21256   0011B8                     
 21257                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 758:  if (h >= (o
      +                          u.f*10.0)) {
 21258   0011B8  C078  F028         	movff	i2efgtoa@h,i2___flge@ff1
 21259   0011BC  C079  F029         	movff	i2efgtoa@h+1,i2___flge@ff1+1
 21260   0011C0  C07A  F02A         	movff	i2efgtoa@h+2,i2___flge@ff1+2
 21261   0011C4  C07B  F02B         	movff	i2efgtoa@h+3,i2___flge@ff1+3
 21262   0011C8  0E00               	movlw	0
 21263   0011CA  6E13               	movwf	i2___flmul@a^0,c
 21264   0011CC  0E00               	movlw	0
 21265   0011CE  6E14               	movwf	(i2___flmul@a+1)^0,c
 21266   0011D0  0E20               	movlw	32
 21267   0011D2  6E15               	movwf	(i2___flmul@a+2)^0,c
 21268   0011D4  0E41               	movlw	65
 21269   0011D6  6E16               	movwf	(i2___flmul@a+3)^0,c
 21270   0011D8  C074  F00F         	movff	i2efgtoa@ou,i2___flmul@b
 21271   0011DC  C075  F010         	movff	i2efgtoa@ou+1,i2___flmul@b+1
 21272   0011E0  C076  F011         	movff	i2efgtoa@ou+2,i2___flmul@b+2
 21273   0011E4  C077  F012         	movff	i2efgtoa@ou+3,i2___flmul@b+3
 21274   0011E8  EC22  F012         	call	i2___flmul	;wreg free
 21275   0011EC  C00F  F02C         	movff	?i2___flmul,i2___flge@ff2
 21276   0011F0  C010  F02D         	movff	?i2___flmul+1,i2___flge@ff2+1
 21277   0011F4  C011  F02E         	movff	?i2___flmul+2,i2___flge@ff2+2
 21278   0011F8  C012  F02F         	movff	?i2___flmul+3,i2___flge@ff2+3
 21279   0011FC  EC48  F024         	call	i2___flge	;wreg free
 21280   001200  A0D8               	btfss	status,0,c
 21281   001202  EF05  F009         	goto	i2u613_41
 21282   001206  EF07  F009         	goto	i2u613_40
 21283   00120A                     i2u613_41:
 21284   00120A  EF30  F009         	goto	i2l6106
 21285   00120E                     i2u613_40:
 21286   00120E                     
 21287                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 759:   e++;
 21288   00120E  0100               	movlb	0	; () banked
 21289   001210  4B80               	infsnz	i2efgtoa@e& (0+255),f,b
 21290   001212  2B81               	incf	(i2efgtoa@e+1)& (0+255),f,b
 21291   001214                     
 21292                           ; BSR set to: 0
 21293                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 760:   ou.f *= 10
      +                          .0;
 21294   001214  C074  F00F         	movff	i2efgtoa@ou,i2___flmul@b
 21295   001218  C075  F010         	movff	i2efgtoa@ou+1,i2___flmul@b+1
 21296   00121C  C076  F011         	movff	i2efgtoa@ou+2,i2___flmul@b+2
 21297   001220  C077  F012         	movff	i2efgtoa@ou+3,i2___flmul@b+3
 21298   001224  0E00               	movlw	0
 21299   001226  6E13               	movwf	i2___flmul@a^0,c
 21300   001228  0E00               	movlw	0
 21301   00122A  6E14               	movwf	(i2___flmul@a+1)^0,c
 21302   00122C  0E20               	movlw	32
 21303   00122E  6E15               	movwf	(i2___flmul@a+2)^0,c
 21304   001230  0E41               	movlw	65
 21305   001232  6E16               	movwf	(i2___flmul@a+3)^0,c
 21306   001234  EC22  F012         	call	i2___flmul	;wreg free
 21307   001238  C00F  F074         	movff	?i2___flmul,i2efgtoa@ou
 21308   00123C  C010  F075         	movff	?i2___flmul+1,i2efgtoa@ou+1
 21309   001240  C011  F076         	movff	?i2___flmul+2,i2efgtoa@ou+2
 21310   001244  C012  F077         	movff	?i2___flmul+3,i2efgtoa@ou+3
 21311   001248                     
 21312                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 762:   if (nmode 
      +                          == 'f') {
 21313   001248  0E66               	movlw	102
 21314   00124A  0100               	movlb	0	; () banked
 21315   00124C  1971               	xorwf	i2efgtoa@nmode& (0+255),w,b
 21316   00124E  A4D8               	btfss	status,2,c
 21317   001250  EF2C  F009         	goto	i2u614_41
 21318   001254  EF2E  F009         	goto	i2u614_40
 21319   001258                     i2u614_41:
 21320   001258  EF30  F009         	goto	i2l6106
 21321   00125C                     i2u614_40:
 21322   00125C                     
 21323                           ; BSR set to: 0
 21324                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 764:    m++;
 21325   00125C  4B6D               	infsnz	i2efgtoa@m& (0+255),f,b
 21326   00125E  2B6E               	incf	(i2efgtoa@m+1)& (0+255),f,b
 21327   001260                     i2l6106:
 21328                           
 21329                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 770:     u = ou;
 21330   001260  C074  F08B         	movff	i2efgtoa@ou,i2efgtoa@u
 21331   001264  C075  F08C         	movff	i2efgtoa@ou+1,i2efgtoa@u+1
 21332   001268  C076  F08D         	movff	i2efgtoa@ou+2,i2efgtoa@u+2
 21333   00126C  C077  F08E         	movff	i2efgtoa@ou+3,i2efgtoa@u+3
 21334   001270                     
 21335                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 772:     ne = (nm
      +                          ode == 'e') ? 0 : e;
 21336   001270  0E65               	movlw	101
 21337   001272  0100               	movlb	0	; () banked
 21338   001274  1971               	xorwf	i2efgtoa@nmode& (0+255),w,b
 21339   001276  B4D8               	btfsc	status,2,c
 21340   001278  EF40  F009         	goto	i2u615_41
 21341   00127C  EF42  F009         	goto	i2u615_40
 21342   001280                     i2u615_41:
 21343   001280  EF48  F009         	goto	i2l6112
 21344   001284                     i2u615_40:
 21345   001284                     
 21346                           ; BSR set to: 0
 21347   001284  C080  F066         	movff	i2efgtoa@e,i2efgtoa@ne
 21348   001288  C081  F067         	movff	i2efgtoa@e+1,i2efgtoa@ne+1
 21349   00128C  EF4C  F009         	goto	i2l6114
 21350   001290                     i2l6112:
 21351                           
 21352                           ; BSR set to: 0
 21353   001290  0E00               	movlw	0
 21354   001292  6F67               	movwf	(i2efgtoa@ne+1)& (0+255),b
 21355   001294  0E00               	movlw	0
 21356   001296  6F66               	movwf	i2efgtoa@ne& (0+255),b
 21357   001298                     i2l6114:
 21358                           
 21359                           ; BSR set to: 0
 21360                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 776:     pp = 0;
 21361   001298  6B68               	clrf	i2efgtoa@pp& (0+255),b
 21362                           
 21363                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 777:     t = 0;
 21364   00129A  0E00               	movlw	0
 21365   00129C  6F61               	movwf	(i2efgtoa@t+1)& (0+255),b
 21366   00129E  0E00               	movlw	0
 21367   0012A0  6F60               	movwf	i2efgtoa@t& (0+255),b
 21368                           
 21369                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 778:     i = 0;
 21370   0012A2  0E00               	movlw	0
 21371   0012A4  6F84               	movwf	(i2efgtoa@i+1)& (0+255),b
 21372   0012A6  0E00               	movlw	0
 21373   0012A8  6F83               	movwf	i2efgtoa@i& (0+255),b
 21374                           
 21375                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 779:     while ((
      +                          i < m) && (n < (80 - 5))) {
 21376   0012AA  EF3C  F00A         	goto	i2l6156
 21377   0012AE                     i2l6116:
 21378                           
 21379                           ; BSR set to: 0
 21380                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 780:         l = 
      +                          floorf(h/u.f);
 21381   0012AE  C078  F028         	movff	i2efgtoa@h,i2___fldiv@b
 21382   0012B2  C079  F029         	movff	i2efgtoa@h+1,i2___fldiv@b+1
 21383   0012B6  C07A  F02A         	movff	i2efgtoa@h+2,i2___fldiv@b+2
 21384   0012BA  C07B  F02B         	movff	i2efgtoa@h+3,i2___fldiv@b+3
 21385   0012BE  C08B  F02C         	movff	i2efgtoa@u,i2___fldiv@a
 21386   0012C2  C08C  F02D         	movff	i2efgtoa@u+1,i2___fldiv@a+1
 21387   0012C6  C08D  F02E         	movff	i2efgtoa@u+2,i2___fldiv@a+2
 21388   0012CA  C08E  F02F         	movff	i2efgtoa@u+3,i2___fldiv@a+3
 21389   0012CE  ECF6  F017         	call	i2___fldiv	;wreg free
 21390   0012D2  C028  F041         	movff	?i2___fldiv,i2floorf@x
 21391   0012D6  C029  F042         	movff	?i2___fldiv+1,i2floorf@x+1
 21392   0012DA  C02A  F043         	movff	?i2___fldiv+2,i2floorf@x+2
 21393   0012DE  C02B  F044         	movff	?i2___fldiv+3,i2floorf@x+3
 21394   0012E2  EC62  F01F         	call	i2_floorf	;wreg free
 21395   0012E6  C041  F07C         	movff	?i2_floorf,i2efgtoa@l
 21396   0012EA  C042  F07D         	movff	?i2_floorf+1,i2efgtoa@l+1
 21397   0012EE  C043  F07E         	movff	?i2_floorf+2,i2efgtoa@l+2
 21398   0012F2  C044  F07F         	movff	?i2_floorf+3,i2efgtoa@l+3
 21399                           
 21400                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 781:         d = 
      +                          (int)l > 9 ? 9 : (int)l;
 21401   0012F6  C07C  F04B         	movff	i2efgtoa@l,i2___fltol@f1
 21402   0012FA  C07D  F04C         	movff	i2efgtoa@l+1,i2___fltol@f1+1
 21403   0012FE  C07E  F04D         	movff	i2efgtoa@l+2,i2___fltol@f1+2
 21404   001302  C07F  F04E         	movff	i2efgtoa@l+3,i2___fltol@f1+3
 21405   001306  ECC5  F023         	call	i2___fltol	;wreg free
 21406   00130A  BE4C               	btfsc	(?i2___fltol+1)^0,7,c
 21407   00130C  EF93  F009         	goto	i2u616_40
 21408   001310  504C               	movf	(?i2___fltol+1)^0,w,c
 21409   001312  E107               	bnz	i2u616_41
 21410   001314  0E0A               	movlw	10
 21411   001316  5C4B               	subwf	?i2___fltol^0,w,c
 21412   001318  B0D8               	btfsc	status,0,c
 21413   00131A  EF91  F009         	goto	i2u616_41
 21414   00131E  EF93  F009         	goto	i2u616_40
 21415   001322                     i2u616_41:
 21416   001322  EFA3  F009         	goto	i2l6120
 21417   001326                     i2u616_40:
 21418   001326  C07C  F04B         	movff	i2efgtoa@l,i2___fltol@f1
 21419   00132A  C07D  F04C         	movff	i2efgtoa@l+1,i2___fltol@f1+1
 21420   00132E  C07E  F04D         	movff	i2efgtoa@l+2,i2___fltol@f1+2
 21421   001332  C07F  F04E         	movff	i2efgtoa@l+3,i2___fltol@f1+3
 21422   001336  ECC5  F023         	call	i2___fltol	;wreg free
 21423   00133A  C04B  F06B         	movff	?i2___fltol,i2efgtoa@d
 21424   00133E  C04C  F06C         	movff	?i2___fltol+1,i2efgtoa@d+1
 21425   001342  EFA8  F009         	goto	i2l1638
 21426   001346                     i2l6120:
 21427   001346  0E00               	movlw	0
 21428   001348  0100               	movlb	0	; () banked
 21429   00134A  6F6C               	movwf	(i2efgtoa@d+1)& (0+255),b
 21430   00134C  0E09               	movlw	9
 21431   00134E  6F6B               	movwf	i2efgtoa@d& (0+255),b
 21432   001350                     i2l1638:
 21433                           
 21434                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 792:   {;C:\Progr
      +                          am Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 793:             if (!pp &
      +                          & (ne < 0)) {
 21435   001350  0100               	movlb	0	; () banked
 21436   001352  5168               	movf	i2efgtoa@pp& (0+255),w,b
 21437   001354  A4D8               	btfss	status,2,c
 21438   001356  EFAF  F009         	goto	i2u617_41
 21439   00135A  EFB1  F009         	goto	i2u617_40
 21440   00135E                     i2u617_41:
 21441   00135E  EFD9  F009         	goto	i2l6140
 21442   001362                     i2u617_40:
 21443   001362                     
 21444                           ; BSR set to: 0
 21445   001362  BF67               	btfsc	(i2efgtoa@ne+1)& (0+255),7,b
 21446   001364  EFB8  F009         	goto	i2u618_40
 21447   001368  EFB6  F009         	goto	i2u618_41
 21448   00136C                     i2u618_41:
 21449   00136C  EFD9  F009         	goto	i2l6140
 21450   001370                     i2u618_40:
 21451   001370                     
 21452                           ; BSR set to: 0
 21453                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 794:             
      +                              dbuf[n++] = '.';
 21454   001370  0E00               	movlw	low _dbuf
 21455   001372  2585               	addwf	i2efgtoa@n& (0+255),w,b
 21456   001374  6ED9               	movwf	fsr2l,c
 21457   001376  0E02               	movlw	high _dbuf
 21458   001378  2186               	addwfc	(i2efgtoa@n+1)& (0+255),w,b
 21459   00137A  6EDA               	movwf	fsr2h,c
 21460   00137C  0E2E               	movlw	46
 21461   00137E  6EDF               	movwf	indf2,c
 21462   001380                     
 21463                           ; BSR set to: 0
 21464   001380  4B85               	infsnz	i2efgtoa@n& (0+255),f,b
 21465   001382  2B86               	incf	(i2efgtoa@n+1)& (0+255),f,b
 21466   001384                     
 21467                           ; BSR set to: 0
 21468                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 795:             
      +                              --w;
 21469   001384  0772               	decf	i2efgtoa@w& (0+255),f,b
 21470   001386  A0D8               	btfss	status,0,c
 21471   001388  0773               	decf	(i2efgtoa@w+1)& (0+255),f,b
 21472   00138A                     
 21473                           ; BSR set to: 0
 21474                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 796:             
      +                              pp = 1;
 21475   00138A  0E01               	movlw	1
 21476   00138C  6F68               	movwf	i2efgtoa@pp& (0+255),b
 21477   00138E  EFD9  F009         	goto	i2l6140
 21478   001392                     i2l6132:
 21479                           
 21480                           ; BSR set to: 0
 21481                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 799:             
      +                              dbuf[n++] = '0';
 21482   001392  0E00               	movlw	low _dbuf
 21483   001394  2585               	addwf	i2efgtoa@n& (0+255),w,b
 21484   001396  6ED9               	movwf	fsr2l,c
 21485   001398  0E02               	movlw	high _dbuf
 21486   00139A  2186               	addwfc	(i2efgtoa@n+1)& (0+255),w,b
 21487   00139C  6EDA               	movwf	fsr2h,c
 21488   00139E  0E30               	movlw	48
 21489   0013A0  6EDF               	movwf	indf2,c
 21490   0013A2                     
 21491                           ; BSR set to: 0
 21492   0013A2  4B85               	infsnz	i2efgtoa@n& (0+255),f,b
 21493   0013A4  2B86               	incf	(i2efgtoa@n+1)& (0+255),f,b
 21494   0013A6                     
 21495                           ; BSR set to: 0
 21496                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 800:             
      +                              --w;
 21497   0013A6  0772               	decf	i2efgtoa@w& (0+255),f,b
 21498   0013A8  A0D8               	btfss	status,0,c
 21499   0013AA  0773               	decf	(i2efgtoa@w+1)& (0+255),f,b
 21500   0013AC                     
 21501                           ; BSR set to: 0
 21502                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 801:             
      +                              --t;
 21503   0013AC  0760               	decf	i2efgtoa@t& (0+255),f,b
 21504   0013AE  A0D8               	btfss	status,0,c
 21505   0013B0  0761               	decf	(i2efgtoa@t+1)& (0+255),f,b
 21506   0013B2                     i2l6140:
 21507                           
 21508                           ; BSR set to: 0
 21509                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 798:             
      +                          while (t) {
 21510   0013B2  5160               	movf	i2efgtoa@t& (0+255),w,b
 21511   0013B4  1161               	iorwf	(i2efgtoa@t+1)& (0+255),w,b
 21512   0013B6  A4D8               	btfss	status,2,c
 21513   0013B8  EFE0  F009         	goto	i2u619_41
 21514   0013BC  EFE2  F009         	goto	i2u619_40
 21515   0013C0                     i2u619_41:
 21516   0013C0  EFC9  F009         	goto	i2l6132
 21517   0013C4                     i2u619_40:
 21518   0013C4                     
 21519                           ; BSR set to: 0
 21520                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 803:             
      +                          dbuf[n++] = (char)((int)'0' + d);
 21521   0013C4  0E00               	movlw	low _dbuf
 21522   0013C6  2585               	addwf	i2efgtoa@n& (0+255),w,b
 21523   0013C8  6ED9               	movwf	fsr2l,c
 21524   0013CA  0E02               	movlw	high _dbuf
 21525   0013CC  2186               	addwfc	(i2efgtoa@n+1)& (0+255),w,b
 21526   0013CE  6EDA               	movwf	fsr2h,c
 21527   0013D0  516B               	movf	i2efgtoa@d& (0+255),w,b
 21528   0013D2  0F30               	addlw	48
 21529   0013D4  6EDF               	movwf	indf2,c
 21530   0013D6                     
 21531                           ; BSR set to: 0
 21532   0013D6  4B85               	infsnz	i2efgtoa@n& (0+255),f,b
 21533   0013D8  2B86               	incf	(i2efgtoa@n+1)& (0+255),f,b
 21534   0013DA                     
 21535                           ; BSR set to: 0
 21536                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 804:             
      +                          --w;
 21537   0013DA  0772               	decf	i2efgtoa@w& (0+255),f,b
 21538   0013DC  A0D8               	btfss	status,0,c
 21539   0013DE  0773               	decf	(i2efgtoa@w+1)& (0+255),f,b
 21540   0013E0                     
 21541                           ; BSR set to: 0
 21542                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 805:         };C:
      +                          \Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 806:         h -= l*
      +                          u.f;
 21543   0013E0  C078  F028         	movff	i2efgtoa@h,i2___flsub@b
 21544   0013E4  C079  F029         	movff	i2efgtoa@h+1,i2___flsub@b+1
 21545   0013E8  C07A  F02A         	movff	i2efgtoa@h+2,i2___flsub@b+2
 21546   0013EC  C07B  F02B         	movff	i2efgtoa@h+3,i2___flsub@b+3
 21547   0013F0  C07C  F013         	movff	i2efgtoa@l,i2___flmul@a
 21548   0013F4  C07D  F014         	movff	i2efgtoa@l+1,i2___flmul@a+1
 21549   0013F8  C07E  F015         	movff	i2efgtoa@l+2,i2___flmul@a+2
 21550   0013FC  C07F  F016         	movff	i2efgtoa@l+3,i2___flmul@a+3
 21551   001400  C08B  F00F         	movff	i2efgtoa@u,i2___flmul@b
 21552   001404  C08C  F010         	movff	i2efgtoa@u+1,i2___flmul@b+1
 21553   001408  C08D  F011         	movff	i2efgtoa@u+2,i2___flmul@b+2
 21554   00140C  C08E  F012         	movff	i2efgtoa@u+3,i2___flmul@b+3
 21555   001410  EC22  F012         	call	i2___flmul	;wreg free
 21556   001414  C00F  F02C         	movff	?i2___flmul,i2___flsub@a
 21557   001418  C010  F02D         	movff	?i2___flmul+1,i2___flsub@a+1
 21558   00141C  C011  F02E         	movff	?i2___flmul+2,i2___flsub@a+2
 21559   001420  C012  F02F         	movff	?i2___flmul+3,i2___flsub@a+3
 21560   001424  EC4A  F030         	call	i2___flsub	;wreg free
 21561   001428  C028  F078         	movff	?i2___flsub,i2efgtoa@h
 21562   00142C  C029  F079         	movff	?i2___flsub+1,i2efgtoa@h+1
 21563   001430  C02A  F07A         	movff	?i2___flsub+2,i2efgtoa@h+2
 21564   001434  C02B  F07B         	movff	?i2___flsub+3,i2efgtoa@h+3
 21565   001438                     
 21566                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 807:         u.f 
      +                          = u.f/10.0;
 21567   001438  C08B  F028         	movff	i2efgtoa@u,i2___fldiv@b
 21568   00143C  C08C  F029         	movff	i2efgtoa@u+1,i2___fldiv@b+1
 21569   001440  C08D  F02A         	movff	i2efgtoa@u+2,i2___fldiv@b+2
 21570   001444  C08E  F02B         	movff	i2efgtoa@u+3,i2___fldiv@b+3
 21571   001448  0E00               	movlw	0
 21572   00144A  6E2C               	movwf	i2___fldiv@a^0,c
 21573   00144C  0E00               	movlw	0
 21574   00144E  6E2D               	movwf	(i2___fldiv@a+1)^0,c
 21575   001450  0E20               	movlw	32
 21576   001452  6E2E               	movwf	(i2___fldiv@a+2)^0,c
 21577   001454  0E41               	movlw	65
 21578   001456  6E2F               	movwf	(i2___fldiv@a+3)^0,c
 21579   001458  ECF6  F017         	call	i2___fldiv	;wreg free
 21580   00145C  C028  F08B         	movff	?i2___fldiv,i2efgtoa@u
 21581   001460  C029  F08C         	movff	?i2___fldiv+1,i2efgtoa@u+1
 21582   001464  C02A  F08D         	movff	?i2___fldiv+2,i2efgtoa@u+2
 21583   001468  C02B  F08E         	movff	?i2___fldiv+3,i2efgtoa@u+3
 21584   00146C                     
 21585                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 808:         --ne
      +                          ;
 21586   00146C  0100               	movlb	0	; () banked
 21587   00146E  0766               	decf	i2efgtoa@ne& (0+255),f,b
 21588   001470  A0D8               	btfss	status,0,c
 21589   001472  0767               	decf	(i2efgtoa@ne+1)& (0+255),f,b
 21590   001474                     
 21591                           ; BSR set to: 0
 21592                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 809:         ++i;
 21593   001474  4B83               	infsnz	i2efgtoa@i& (0+255),f,b
 21594   001476  2B84               	incf	(i2efgtoa@i+1)& (0+255),f,b
 21595   001478                     i2l6156:
 21596                           
 21597                           ; BSR set to: 0
 21598                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 779:     while ((
      +                          i < m) && (n < (80 - 5))) {
 21599   001478  516D               	movf	i2efgtoa@m& (0+255),w,b
 21600   00147A  5D83               	subwf	i2efgtoa@i& (0+255),w,b
 21601   00147C  5184               	movf	(i2efgtoa@i+1)& (0+255),w,b
 21602   00147E  0A80               	xorlw	128
 21603   001480  6E5C               	movwf	??i2_efgtoa^0,c
 21604   001482  516E               	movf	(i2efgtoa@m+1)& (0+255),w,b
 21605   001484  0A80               	xorlw	128
 21606   001486  585C               	subwfb	??i2_efgtoa^0,w,c
 21607   001488  B0D8               	btfsc	status,0,c
 21608   00148A  EF49  F00A         	goto	i2u620_41
 21609   00148E  EF4B  F00A         	goto	i2u620_40
 21610   001492                     i2u620_41:
 21611   001492  EF59  F00A         	goto	i2l6160
 21612   001496                     i2u620_40:
 21613   001496                     
 21614                           ; BSR set to: 0
 21615   001496  BF86               	btfsc	(i2efgtoa@n+1)& (0+255),7,b
 21616   001498  EF57  F00A         	goto	i2u621_41
 21617   00149C  5186               	movf	(i2efgtoa@n+1)& (0+255),w,b
 21618   00149E  E109               	bnz	i2u621_40
 21619   0014A0  0E4B               	movlw	75
 21620   0014A2  5D85               	subwf	i2efgtoa@n& (0+255),w,b
 21621   0014A4  A0D8               	btfss	status,0,c
 21622   0014A6  EF57  F00A         	goto	i2u621_41
 21623   0014AA  EF59  F00A         	goto	i2u621_40
 21624   0014AE                     i2u621_41:
 21625   0014AE  EF57  F009         	goto	i2l6116
 21626   0014B2                     i2u621_40:
 21627   0014B2                     i2l6160:
 21628                           
 21629                           ; BSR set to: 0
 21630                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 816:  i = sizeof(
      +                          dbuf) - 1;
 21631   0014B2  0E00               	movlw	0
 21632   0014B4  6F84               	movwf	(i2efgtoa@i+1)& (0+255),b
 21633   0014B6  0E4F               	movlw	79
 21634   0014B8  6F83               	movwf	i2efgtoa@i& (0+255),b
 21635   0014BA                     
 21636                           ; BSR set to: 0
 21637                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 817:     dbuf[i] 
      +                          = '\0';
 21638   0014BA  0E00               	movlw	low _dbuf
 21639   0014BC  2583               	addwf	i2efgtoa@i& (0+255),w,b
 21640   0014BE  6ED9               	movwf	fsr2l,c
 21641   0014C0  0E02               	movlw	high _dbuf
 21642   0014C2  2184               	addwfc	(i2efgtoa@i+1)& (0+255),w,b
 21643   0014C4  6EDA               	movwf	fsr2h,c
 21644   0014C6  6ADF               	clrf	indf2,c
 21645   0014C8                     
 21646                           ; BSR set to: 0
 21647                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 821:     if (nmod
      +                          e == 'e') {
 21648   0014C8  0E65               	movlw	101
 21649   0014CA  1971               	xorwf	i2efgtoa@nmode& (0+255),w,b
 21650   0014CC  A4D8               	btfss	status,2,c
 21651   0014CE  EF6B  F00A         	goto	i2u622_41
 21652   0014D2  EF6D  F00A         	goto	i2u622_40
 21653   0014D6                     i2u622_41:
 21654   0014D6  EFF1  F00A         	goto	i2l6208
 21655   0014DA                     i2u622_40:
 21656   0014DA                     
 21657                           ; BSR set to: 0
 21658                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 822:         esig
      +                          n = 0;
 21659   0014DA  6B69               	clrf	i2efgtoa@esign& (0+255),b
 21660   0014DC                     
 21661                           ; BSR set to: 0
 21662                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 823:         if (
      +                          e < 0) {
 21663   0014DC  BF81               	btfsc	(i2efgtoa@e+1)& (0+255),7,b
 21664   0014DE  EF75  F00A         	goto	i2u623_40
 21665   0014E2  EF73  F00A         	goto	i2u623_41
 21666   0014E6                     i2u623_41:
 21667   0014E6  EF7B  F00A         	goto	i2l6174
 21668   0014EA                     i2u623_40:
 21669   0014EA                     
 21670                           ; BSR set to: 0
 21671                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 824:             
      +                          esign = 1;
 21672   0014EA  0E01               	movlw	1
 21673   0014EC  6F69               	movwf	i2efgtoa@esign& (0+255),b
 21674   0014EE                     
 21675                           ; BSR set to: 0
 21676                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 825:             
      +                          e = -e;
 21677   0014EE  6D80               	negf	i2efgtoa@e& (0+255),b
 21678   0014F0  1F81               	comf	(i2efgtoa@e+1)& (0+255),f,b
 21679   0014F2  B0D8               	btfsc	status,0,c
 21680   0014F4  2B81               	incf	(i2efgtoa@e+1)& (0+255),f,b
 21681   0014F6                     i2l6174:
 21682                           
 21683                           ; BSR set to: 0
 21684                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 827:         p = 
      +                          2;
 21685   0014F6  0E00               	movlw	0
 21686   0014F8  6F70               	movwf	(i2efgtoa@p+1)& (0+255),b
 21687   0014FA  0E02               	movlw	2
 21688   0014FC  6F6F               	movwf	i2efgtoa@p& (0+255),b
 21689                           
 21690                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 828:         whil
      +                          e (e || (0 < p)) {
 21691   0014FE  EFAC  F00A         	goto	i2l6186
 21692   001502                     i2l6176:
 21693                           
 21694                           ; BSR set to: 0
 21695                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 829:             
      +                          --i;
 21696   001502  0783               	decf	i2efgtoa@i& (0+255),f,b
 21697   001504  A0D8               	btfss	status,0,c
 21698   001506  0784               	decf	(i2efgtoa@i+1)& (0+255),f,b
 21699   001508                     
 21700                           ; BSR set to: 0
 21701                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 830:             
      +                          dbuf[i] = '0' + (e % 10);
 21702   001508  0E00               	movlw	low _dbuf
 21703   00150A  2583               	addwf	i2efgtoa@i& (0+255),w,b
 21704   00150C  6ED9               	movwf	fsr2l,c
 21705   00150E  0E02               	movlw	high _dbuf
 21706   001510  2184               	addwfc	(i2efgtoa@i+1)& (0+255),w,b
 21707   001512  6EDA               	movwf	fsr2h,c
 21708   001514  C080  F001         	movff	i2efgtoa@e,i2___awmod@dividend
 21709   001518  C081  F002         	movff	i2efgtoa@e+1,i2___awmod@dividend+1
 21710   00151C  0E00               	movlw	0
 21711   00151E  6E04               	movwf	(i2___awmod@divisor+1)^0,c
 21712   001520  0E0A               	movlw	10
 21713   001522  6E03               	movwf	i2___awmod@divisor^0,c
 21714   001524  EC42  F02A         	call	i2___awmod	;wreg free
 21715   001528  5001               	movf	?i2___awmod^0,w,c
 21716   00152A  0F30               	addlw	48
 21717   00152C  6EDF               	movwf	indf2,c
 21718   00152E                     
 21719                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 831:             
      +                          e = e / 10;
 21720   00152E  C080  F001         	movff	i2efgtoa@e,i2___awdiv@dividend
 21721   001532  C081  F002         	movff	i2efgtoa@e+1,i2___awdiv@dividend+1
 21722   001536  0E00               	movlw	0
 21723   001538  6E04               	movwf	(i2___awdiv@divisor+1)^0,c
 21724   00153A  0E0A               	movlw	10
 21725   00153C  6E03               	movwf	i2___awdiv@divisor^0,c
 21726   00153E  EC2C  F029         	call	i2___awdiv	;wreg free
 21727   001542  C001  F080         	movff	?i2___awdiv,i2efgtoa@e
 21728   001546  C002  F081         	movff	?i2___awdiv+1,i2efgtoa@e+1
 21729   00154A                     
 21730                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 832:             
      +                          --p;
 21731   00154A  0100               	movlb	0	; () banked
 21732   00154C  076F               	decf	i2efgtoa@p& (0+255),f,b
 21733   00154E  A0D8               	btfss	status,0,c
 21734   001550  0770               	decf	(i2efgtoa@p+1)& (0+255),f,b
 21735   001552                     
 21736                           ; BSR set to: 0
 21737                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 833:             
      +                          --w;
 21738   001552  0772               	decf	i2efgtoa@w& (0+255),f,b
 21739   001554  A0D8               	btfss	status,0,c
 21740   001556  0773               	decf	(i2efgtoa@w+1)& (0+255),f,b
 21741   001558                     i2l6186:
 21742                           
 21743                           ; BSR set to: 0
 21744                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 828:         whil
      +                          e (e || (0 < p)) {
 21745   001558  5180               	movf	i2efgtoa@e& (0+255),w,b
 21746   00155A  1181               	iorwf	(i2efgtoa@e+1)& (0+255),w,b
 21747   00155C  A4D8               	btfss	status,2,c
 21748   00155E  EFB3  F00A         	goto	i2u624_41
 21749   001562  EFB5  F00A         	goto	i2u624_40
 21750   001566                     i2u624_41:
 21751   001566  EF81  F00A         	goto	i2l6176
 21752   00156A                     i2u624_40:
 21753   00156A                     
 21754                           ; BSR set to: 0
 21755   00156A  BF70               	btfsc	(i2efgtoa@p+1)& (0+255),7,b
 21756   00156C  EFC2  F00A         	goto	i2u625_40
 21757   001570  5170               	movf	(i2efgtoa@p+1)& (0+255),w,b
 21758   001572  E106               	bnz	i2u625_41
 21759   001574  056F               	decf	i2efgtoa@p& (0+255),w,b
 21760   001576  B0D8               	btfsc	status,0,c
 21761   001578  EFC0  F00A         	goto	i2u625_41
 21762   00157C  EFC2  F00A         	goto	i2u625_40
 21763   001580                     i2u625_41:
 21764   001580  EF81  F00A         	goto	i2l6176
 21765   001584                     i2u625_40:
 21766   001584                     
 21767                           ; BSR set to: 0
 21768                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 835:         --i;
 21769   001584  0783               	decf	i2efgtoa@i& (0+255),f,b
 21770   001586  A0D8               	btfss	status,0,c
 21771   001588  0784               	decf	(i2efgtoa@i+1)& (0+255),f,b
 21772   00158A                     
 21773                           ; BSR set to: 0
 21774                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 836:         dbuf
      +                          [i] = esign ? '-' : '+';
 21775   00158A  5169               	movf	i2efgtoa@esign& (0+255),w,b
 21776   00158C  A4D8               	btfss	status,2,c
 21777   00158E  EFCB  F00A         	goto	i2u626_41
 21778   001592  EFCD  F00A         	goto	i2u626_40
 21779   001596                     i2u626_41:
 21780   001596  EFD3  F00A         	goto	i2l6196
 21781   00159A                     i2u626_40:
 21782   00159A                     
 21783                           ; BSR set to: 0
 21784   00159A  0E00               	movlw	0
 21785   00159C  6F65               	movwf	(i2_efgtoa$2332+1)& (0+255),b
 21786   00159E  0E2B               	movlw	43
 21787   0015A0  6F64               	movwf	i2_efgtoa$2332& (0+255),b
 21788   0015A2  EFD7  F00A         	goto	i2l6198
 21789   0015A6                     i2l6196:
 21790                           
 21791                           ; BSR set to: 0
 21792   0015A6  0E00               	movlw	0
 21793   0015A8  6F65               	movwf	(i2_efgtoa$2332+1)& (0+255),b
 21794   0015AA  0E2D               	movlw	45
 21795   0015AC  6F64               	movwf	i2_efgtoa$2332& (0+255),b
 21796   0015AE                     i2l6198:
 21797                           
 21798                           ; BSR set to: 0
 21799   0015AE  0E00               	movlw	low _dbuf
 21800   0015B0  2583               	addwf	i2efgtoa@i& (0+255),w,b
 21801   0015B2  6ED9               	movwf	fsr2l,c
 21802   0015B4  0E02               	movlw	high _dbuf
 21803   0015B6  2184               	addwfc	(i2efgtoa@i+1)& (0+255),w,b
 21804   0015B8  6EDA               	movwf	fsr2h,c
 21805   0015BA  0060  F193  FFDF   	movff	i2_efgtoa$2332,indf2
 21806   0015C0                     
 21807                           ; BSR set to: 0
 21808                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 837:         --w;
 21809   0015C0  0772               	decf	i2efgtoa@w& (0+255),f,b
 21810   0015C2  A0D8               	btfss	status,0,c
 21811   0015C4  0773               	decf	(i2efgtoa@w+1)& (0+255),f,b
 21812   0015C6                     
 21813                           ; BSR set to: 0
 21814                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 838:         --i;
 21815   0015C6  0783               	decf	i2efgtoa@i& (0+255),f,b
 21816   0015C8  A0D8               	btfss	status,0,c
 21817   0015CA  0784               	decf	(i2efgtoa@i+1)& (0+255),f,b
 21818   0015CC                     
 21819                           ; BSR set to: 0
 21820                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 842:   dbuf[i] = 
      +                          'e';
 21821   0015CC  0E00               	movlw	low _dbuf
 21822   0015CE  2583               	addwf	i2efgtoa@i& (0+255),w,b
 21823   0015D0  6ED9               	movwf	fsr2l,c
 21824   0015D2  0E02               	movlw	high _dbuf
 21825   0015D4  2184               	addwfc	(i2efgtoa@i+1)& (0+255),w,b
 21826   0015D6  6EDA               	movwf	fsr2h,c
 21827   0015D8  0E65               	movlw	101
 21828   0015DA  6EDF               	movwf	indf2,c
 21829   0015DC                     
 21830                           ; BSR set to: 0
 21831                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 844:         --w;
 21832   0015DC  0772               	decf	i2efgtoa@w& (0+255),f,b
 21833   0015DE  A0D8               	btfss	status,0,c
 21834   0015E0  0773               	decf	(i2efgtoa@w+1)& (0+255),f,b
 21835   0015E2                     i2l6208:
 21836                           
 21837                           ; BSR set to: 0
 21838                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 848:  memcpy(&dbu
      +                          f[i-n], &dbuf[0], (size_t)n);
 21839   0015E2  0E00               	movlw	low _dbuf
 21840   0015E4  6E5C               	movwf	??i2_efgtoa^0,c
 21841   0015E6  0E02               	movlw	high _dbuf
 21842   0015E8  6E5D               	movwf	(??i2_efgtoa+1)^0,c
 21843   0015EA  5185               	movf	i2efgtoa@n& (0+255),w,b
 21844   0015EC  5E5C               	subwf	??i2_efgtoa^0,f,c
 21845   0015EE  5186               	movf	(i2efgtoa@n+1)& (0+255),w,b
 21846   0015F0  5A5D               	subwfb	(??i2_efgtoa+1)^0,f,c
 21847   0015F2  5183               	movf	i2efgtoa@i& (0+255),w,b
 21848   0015F4  245C               	addwf	??i2_efgtoa^0,w,c
 21849   0015F6  6E01               	movwf	i2memcpy@d1^0,c
 21850   0015F8  5184               	movf	(i2efgtoa@i+1)& (0+255),w,b
 21851   0015FA  205D               	addwfc	(??i2_efgtoa+1)^0,w,c
 21852   0015FC  6E02               	movwf	(i2memcpy@d1+1)^0,c
 21853   0015FE  0E00               	movlw	low _dbuf
 21854   001600  6E03               	movwf	i2memcpy@s1^0,c
 21855   001602  0E02               	movlw	high _dbuf
 21856   001604  6E04               	movwf	(i2memcpy@s1+1)^0,c
 21857   001606  C085  F005         	movff	i2efgtoa@n,i2memcpy@n
 21858   00160A  C086  F006         	movff	i2efgtoa@n+1,i2memcpy@n+1
 21859   00160E  EC17  F02E         	call	i2_memcpy	;wreg free
 21860   001612                     
 21861                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 849:  n = i-n;
 21862   001612  0100               	movlb	0	; () banked
 21863   001614  5185               	movf	i2efgtoa@n& (0+255),w,b
 21864   001616  5D83               	subwf	i2efgtoa@i& (0+255),w,b
 21865   001618  6F85               	movwf	i2efgtoa@n& (0+255),b
 21866   00161A  5186               	movf	(i2efgtoa@n+1)& (0+255),w,b
 21867   00161C  5984               	subwfb	(i2efgtoa@i+1)& (0+255),w,b
 21868   00161E  6F86               	movwf	(i2efgtoa@n+1)& (0+255),b
 21869   001620                     
 21870                           ; BSR set to: 0
 21871                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 850:  i = sign ==
      +                           0 ? 0 : 1;
 21872   001620  5182               	movf	i2efgtoa@sign& (0+255),w,b
 21873   001622  A4D8               	btfss	status,2,c
 21874   001624  EF16  F00B         	goto	i2u627_41
 21875   001628  EF19  F00B         	goto	i2u627_40
 21876   00162C                     i2u627_41:
 21877   00162C  0E01               	movlw	1
 21878   00162E  EF1A  F00B         	goto	i2u628_40
 21879   001632                     i2u627_40:
 21880   001632  0E00               	movlw	0
 21881   001634                     i2u628_40:
 21882   001634  6F83               	movwf	i2efgtoa@i& (0+255),b
 21883   001636  6B84               	clrf	(i2efgtoa@i+1)& (0+255),b
 21884   001638                     
 21885                           ; BSR set to: 0
 21886                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 861:  if (sign) {
 21887   001638  5182               	movf	i2efgtoa@sign& (0+255),w,b
 21888   00163A  B4D8               	btfsc	status,2,c
 21889   00163C  EF22  F00B         	goto	i2u629_41
 21890   001640  EF24  F00B         	goto	i2u629_40
 21891   001644                     i2u629_41:
 21892   001644  EF30  F00B         	goto	i2l6218
 21893   001648                     i2u629_40:
 21894   001648                     
 21895                           ; BSR set to: 0
 21896                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 862:   dbuf[--n] 
      +                          = sign;
 21897   001648  0785               	decf	i2efgtoa@n& (0+255),f,b
 21898   00164A  A0D8               	btfss	status,0,c
 21899   00164C  0786               	decf	(i2efgtoa@n+1)& (0+255),f,b
 21900   00164E  0E00               	movlw	low _dbuf
 21901   001650  2585               	addwf	i2efgtoa@n& (0+255),w,b
 21902   001652  6ED9               	movwf	fsr2l,c
 21903   001654  0E02               	movlw	high _dbuf
 21904   001656  2186               	addwfc	(i2efgtoa@n+1)& (0+255),w,b
 21905   001658  6EDA               	movwf	fsr2h,c
 21906   00165A  0060  F20B  FFDF   	movff	i2efgtoa@sign,indf2
 21907   001660                     i2l6218:
 21908                           
 21909                           ; BSR set to: 0
 21910                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 864:  w -= i;
 21911   001660  5183               	movf	i2efgtoa@i& (0+255),w,b
 21912   001662  5F72               	subwf	i2efgtoa@w& (0+255),f,b
 21913   001664  5184               	movf	(i2efgtoa@i+1)& (0+255),w,b
 21914   001666  5B73               	subwfb	(i2efgtoa@w+1)& (0+255),f,b
 21915   001668                     
 21916                           ; BSR set to: 0
 21917                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 867:     return (
      +                          void) pad(fp, &dbuf[n], w);
 21918   001668  C055  F011         	movff	i2efgtoa@fp,i2pad@fp
 21919   00166C  C056  F012         	movff	i2efgtoa@fp+1,i2pad@fp+1
 21920   001670  0E00               	movlw	low _dbuf
 21921   001672  2585               	addwf	i2efgtoa@n& (0+255),w,b
 21922   001674  6E13               	movwf	i2pad@buf^0,c
 21923   001676  0E02               	movlw	high _dbuf
 21924   001678  2186               	addwfc	(i2efgtoa@n+1)& (0+255),w,b
 21925   00167A  6E14               	movwf	(i2pad@buf+1)^0,c
 21926   00167C  C072  F015         	movff	i2efgtoa@w,i2pad@p
 21927   001680  C073  F016         	movff	i2efgtoa@w+1,i2pad@p+1
 21928   001684  EC26  F02D         	call	i2_pad	;wreg free
 21929   001688                     i2l1601:
 21930   001688  0012               	return		;funcret
 21931   00168A                     __end_ofi2_efgtoa:
 21932                           	callstack 0
 21933                           
 21934 ;; *************** function i2_strcpy *****************
 21935 ;; Defined at:
 21936 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\strcpy.c"
 21937 ;; Parameters:    Size  Location     Type
 21938 ;;  dest            2    0[COMRAM] PTR unsigned char 
 21939 ;;		 -> dbuf(80), 
 21940 ;;  src             2    2[COMRAM] PTR const unsigned char 
 21941 ;;		 -> STR_23(4), STR_20(4), 
 21942 ;; Auto vars:     Size  Location     Type
 21943 ;;  d               2    4[COMRAM] PTR unsigned char 
 21944 ;;		 -> dbuf(80), 
 21945 ;; Return value:  Size  Location     Type
 21946 ;;                  2    0[COMRAM] PTR unsigned char 
 21947 ;; Registers used:
 21948 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 21949 ;; Tracked objects:
 21950 ;;		On entry : 0/0
 21951 ;;		On exit  : 0/0
 21952 ;;		Unchanged: 0/0
 21953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21954 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21955 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21956 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21957 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21958 ;;Total ram usage:        6 bytes
 21959 ;; Hardware stack levels used: 1
 21960 ;; This function calls:
 21961 ;;		Nothing
 21962 ;; This function is called by:
 21963 ;;		i2_efgtoa
 21964 ;; This function uses a non-reentrant model
 21965 ;;
 21966                           
 21967                           	psect	text80
 21968   0060DA                     __ptext80:
 21969                           	callstack 0
 21970   0060DA                     i2_strcpy:
 21971                           	callstack 12
 21972   0060DA  C001  F005         	movff	i2strcpy@dest,i2strcpy@d
 21973   0060DE  C002  F006         	movff	i2strcpy@dest+1,i2strcpy@d+1
 21974   0060E2                     i2l5926:
 21975   0060E2  0060  F00F  FFF6   	movff	i2strcpy@src,tblptrl
 21976   0060E8  0060  F013  FFF7   	movff	i2strcpy@src+1,tblptrh
 21977   0060EE  4A03               	infsnz	i2strcpy@src^0,f,c
 21978   0060F0  2A04               	incf	(i2strcpy@src+1)^0,f,c
 21979   0060F2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 21980   0060F2  6AF8               	clrf	tblptru,c
 21981   0060F4                     	endif
 21982   0060F4                     	if	0	;tblptru may be non-zero
 21983   0060F4                     	endif
 21984   0060F4  0060  F017  FFD9   	movff	i2strcpy@d,fsr2l
 21985   0060FA  0060  F01B  FFDA   	movff	i2strcpy@d+1,fsr2h
 21986   006100  4A05               	infsnz	i2strcpy@d^0,f,c
 21987   006102  2A06               	incf	(i2strcpy@d+1)^0,f,c
 21988   006104  0008               	tblrd		*
 21989   006106  006F FFD7 FFDF     	movff	tablat,indf2
 21990   00610C  50DF               	movf	indf2,w,c
 21991   00610E  A4D8               	btfss	status,2,c
 21992   006110  EF8C  F030         	goto	i2u586_41
 21993   006114  EF8E  F030         	goto	i2u586_40
 21994   006118                     i2u586_41:
 21995   006118  EF71  F030         	goto	i2l5926
 21996   00611C                     i2u586_40:
 21997   00611C  0012               	return		;funcret
 21998   00611E                     __end_ofi2_strcpy:
 21999                           	callstack 0
 22000                           
 22001 ;; *************** function i2_pad *****************
 22002 ;; Defined at:
 22003 ;;		line 193 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
 22004 ;; Parameters:    Size  Location     Type
 22005 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
 22006 ;;		 -> i2sprintf@f(11), sprintf@f(11), 
 22007 ;;  buf             2   18[COMRAM] PTR unsigned char 
 22008 ;;		 -> dbuf(80), 
 22009 ;;  p               2   20[COMRAM] int 
 22010 ;; Auto vars:     Size  Location     Type
 22011 ;;  i               2   23[COMRAM] int 
 22012 ;; Return value:  Size  Location     Type
 22013 ;;                  1    wreg      void 
 22014 ;; Registers used:
 22015 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 22016 ;; Tracked objects:
 22017 ;;		On entry : 0/0
 22018 ;;		On exit  : 0/0
 22019 ;;		Unchanged: 0/0
 22020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22021 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22022 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22023 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22024 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22025 ;;Total ram usage:        9 bytes
 22026 ;; Hardware stack levels used: 1
 22027 ;; Hardware stack levels required when called: 3
 22028 ;; This function calls:
 22029 ;;		i2_fputc
 22030 ;;		i2_fputs
 22031 ;; This function is called by:
 22032 ;;		i2_efgtoa
 22033 ;; This function uses a non-reentrant model
 22034 ;;
 22035                           
 22036                           	psect	text81
 22037   005A4C                     __ptext81:
 22038                           	callstack 0
 22039   005A4C                     i2_pad:
 22040                           	callstack 9
 22041   005A4C                     
 22042                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 193: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\com
      +                          mon\doprnt.c: 194: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.
      +                          c: 195:     int i;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c:
      +                           205:  if (p < 0) {
 22043   005A4C  BE16               	btfsc	(i2pad@p+1)^0,7,c
 22044   005A4E  EF2D  F02D         	goto	i2u565_40
 22045   005A52  EF2B  F02D         	goto	i2u565_41
 22046   005A56                     i2u565_41:
 22047   005A56  EF31  F02D         	goto	i2l1586
 22048   005A5A                     i2u565_40:
 22049   005A5A                     
 22050                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 206:   p = 0;
 22051   005A5A  0E00               	movlw	0
 22052   005A5C  6E16               	movwf	(i2pad@p+1)^0,c
 22053   005A5E  0E00               	movlw	0
 22054   005A60  6E15               	movwf	i2pad@p^0,c
 22055   005A62                     i2l1586:
 22056                           
 22057                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 208:     i = 0;
 22058   005A62  0E00               	movlw	0
 22059   005A64  6E19               	movwf	(i2pad@i+1)^0,c
 22060   005A66  0E00               	movlw	0
 22061   005A68  6E18               	movwf	i2pad@i^0,c
 22062                           
 22063                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
 22064   005A6A  EF43  F02D         	goto	i2l5850
 22065   005A6E                     i2l5846:
 22066                           
 22067                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 210:         fput
      +                          c(' ', fp);
 22068   005A6E  0E00               	movlw	0
 22069   005A70  6E02               	movwf	(i2fputc@c+1)^0,c
 22070   005A72  0E20               	movlw	32
 22071   005A74  6E01               	movwf	i2fputc@c^0,c
 22072   005A76  C011  F003         	movff	i2pad@fp,i2fputc@fp
 22073   005A7A  C012  F004         	movff	i2pad@fp+1,i2fputc@fp+1
 22074   005A7E  EC99  F027         	call	i2_fputc	;wreg free
 22075   005A82                     
 22076                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 211:         ++i;
 22077   005A82  4A18               	infsnz	i2pad@i^0,f,c
 22078   005A84  2A19               	incf	(i2pad@i+1)^0,f,c
 22079   005A86                     i2l5850:
 22080                           
 22081                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
 22082   005A86  5015               	movf	i2pad@p^0,w,c
 22083   005A88  5C18               	subwf	i2pad@i^0,w,c
 22084   005A8A  5019               	movf	(i2pad@i+1)^0,w,c
 22085   005A8C  0A80               	xorlw	128
 22086   005A8E  6E17               	movwf	??i2_pad^0,c
 22087   005A90  5016               	movf	(i2pad@p+1)^0,w,c
 22088   005A92  0A80               	xorlw	128
 22089   005A94  5817               	subwfb	??i2_pad^0,w,c
 22090   005A96  A0D8               	btfss	status,0,c
 22091   005A98  EF50  F02D         	goto	i2u566_41
 22092   005A9C  EF52  F02D         	goto	i2u566_40
 22093   005AA0                     i2u566_41:
 22094   005AA0  EF37  F02D         	goto	i2l5846
 22095   005AA4                     i2u566_40:
 22096   005AA4                     
 22097                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 218:         fput
      +                          s((const char *)buf, fp);
 22098   005AA4  C013  F00A         	movff	i2pad@buf,i2fputs@s
 22099   005AA8  C014  F00B         	movff	i2pad@buf+1,i2fputs@s+1
 22100   005AAC  C011  F00C         	movff	i2pad@fp,i2fputs@fp
 22101   005AB0  C012  F00D         	movff	i2pad@fp+1,i2fputs@fp+1
 22102   005AB4  EC8F  F030         	call	i2_fputs	;wreg free
 22103   005AB8  0012               	return		;funcret
 22104   005ABA                     __end_ofi2_pad:
 22105                           	callstack 0
 22106                           
 22107 ;; *************** function i2_fputs *****************
 22108 ;; Defined at:
 22109 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\nf_fputs.c"
 22110 ;; Parameters:    Size  Location     Type
 22111 ;;  s               2    9[COMRAM] PTR const unsigned char 
 22112 ;;		 -> dbuf(80), 
 22113 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
 22114 ;;		 -> i2sprintf@f(11), sprintf@f(11), 
 22115 ;; Auto vars:     Size  Location     Type
 22116 ;;  i               2   14[COMRAM] int 
 22117 ;;  c               1   13[COMRAM] unsigned char 
 22118 ;; Return value:  Size  Location     Type
 22119 ;;                  2    9[COMRAM] int 
 22120 ;; Registers used:
 22121 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 22122 ;; Tracked objects:
 22123 ;;		On entry : 0/0
 22124 ;;		On exit  : 0/0
 22125 ;;		Unchanged: 0/0
 22126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22127 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22128 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22129 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22130 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22131 ;;Total ram usage:        7 bytes
 22132 ;; Hardware stack levels used: 1
 22133 ;; Hardware stack levels required when called: 2
 22134 ;; This function calls:
 22135 ;;		i2_fputc
 22136 ;; This function is called by:
 22137 ;;		i2_pad
 22138 ;; This function uses a non-reentrant model
 22139 ;;
 22140                           
 22141                           	psect	text82
 22142   00611E                     __ptext82:
 22143                           	callstack 0
 22144   00611E                     i2_fputs:
 22145                           	callstack 9
 22146   00611E  0E00               	movlw	0
 22147   006120  6E10               	movwf	(i2fputs@i+1)^0,c
 22148   006122  0E00               	movlw	0
 22149   006124  6E0F               	movwf	i2fputs@i^0,c
 22150   006126  EFA0  F030         	goto	i2l5390
 22151   00612A                     i2l5386:
 22152   00612A  C00E  F001         	movff	i2fputs@c,i2fputc@c
 22153   00612E  6A02               	clrf	(i2fputc@c+1)^0,c
 22154   006130  C00C  F003         	movff	i2fputs@fp,i2fputc@fp
 22155   006134  C00D  F004         	movff	i2fputs@fp+1,i2fputc@fp+1
 22156   006138  EC99  F027         	call	i2_fputc	;wreg free
 22157   00613C  4A0F               	infsnz	i2fputs@i^0,f,c
 22158   00613E  2A10               	incf	(i2fputs@i+1)^0,f,c
 22159   006140                     i2l5390:
 22160   006140  500F               	movf	i2fputs@i^0,w,c
 22161   006142  240A               	addwf	i2fputs@s^0,w,c
 22162   006144  6ED9               	movwf	fsr2l,c
 22163   006146  5010               	movf	(i2fputs@i+1)^0,w,c
 22164   006148  200B               	addwfc	(i2fputs@s+1)^0,w,c
 22165   00614A  6EDA               	movwf	fsr2h,c
 22166   00614C  50DF               	movf	indf2,w,c
 22167   00614E  6E0E               	movwf	i2fputs@c^0,c
 22168   006150  500E               	movf	i2fputs@c^0,w,c
 22169   006152  A4D8               	btfss	status,2,c
 22170   006154  EFAE  F030         	goto	i2u493_41
 22171   006158  EFB0  F030         	goto	i2u493_40
 22172   00615C                     i2u493_41:
 22173   00615C  EF95  F030         	goto	i2l5386
 22174   006160                     i2u493_40:
 22175   006160  0012               	return		;funcret
 22176   006162                     __end_ofi2_fputs:
 22177                           	callstack 0
 22178                           
 22179 ;; *************** function i2_fputc *****************
 22180 ;; Defined at:
 22181 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\nf_fputc.c"
 22182 ;; Parameters:    Size  Location     Type
 22183 ;;  c               2    0[COMRAM] int 
 22184 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
 22185 ;;		 -> i2sprintf@f(11), sprintf@f(11), 
 22186 ;; Auto vars:     Size  Location     Type
 22187 ;;		None
 22188 ;; Return value:  Size  Location     Type
 22189 ;;                  2    0[COMRAM] int 
 22190 ;; Registers used:
 22191 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 22192 ;; Tracked objects:
 22193 ;;		On entry : 0/0
 22194 ;;		On exit  : 0/0
 22195 ;;		Unchanged: 0/0
 22196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22197 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22198 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22199 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22200 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22201 ;;Total ram usage:        9 bytes
 22202 ;; Hardware stack levels used: 1
 22203 ;; Hardware stack levels required when called: 1
 22204 ;; This function calls:
 22205 ;;		i2_putch
 22206 ;; This function is called by:
 22207 ;;		i2_pad
 22208 ;;		i2_vfpfcnvrt
 22209 ;;		i2_fputs
 22210 ;; This function uses a non-reentrant model
 22211 ;;
 22212                           
 22213                           	psect	text83
 22214   004F32                     __ptext83:
 22215                           	callstack 0
 22216   004F32                     i2_fputc:
 22217                           	callstack 12
 22218   004F32  5003               	movf	i2fputc@fp^0,w,c
 22219   004F34  1004               	iorwf	(i2fputc@fp+1)^0,w,c
 22220   004F36  B4D8               	btfsc	status,2,c
 22221   004F38  EFA0  F027         	goto	i2u450_41
 22222   004F3C  EFA2  F027         	goto	i2u450_40
 22223   004F40                     i2u450_41:
 22224   004F40  EFAB  F027         	goto	i2l5180
 22225   004F44                     i2u450_40:
 22226   004F44  5003               	movf	i2fputc@fp^0,w,c
 22227   004F46  1004               	iorwf	(i2fputc@fp+1)^0,w,c
 22228   004F48  A4D8               	btfss	status,2,c
 22229   004F4A  EFA9  F027         	goto	i2u451_41
 22230   004F4E  EFAB  F027         	goto	i2u451_40
 22231   004F52                     i2u451_41:
 22232   004F52  EFB0  F027         	goto	i2l5182
 22233   004F56                     i2u451_40:
 22234   004F56                     i2l5180:
 22235   004F56  5001               	movf	i2fputc@c^0,w,c
 22236   004F58  EC44  F033         	call	i2_putch
 22237   004F5C  EF04  F028         	goto	i2l1741
 22238   004F60                     i2l5182:
 22239   004F60  EE20 F009          	lfsr	2,9
 22240   004F64  5003               	movf	i2fputc@fp^0,w,c
 22241   004F66  26D9               	addwf	fsr2l,f,c
 22242   004F68  5004               	movf	(i2fputc@fp+1)^0,w,c
 22243   004F6A  22DA               	addwfc	fsr2h,f,c
 22244   004F6C  50DE               	movf	postinc2,w,c
 22245   004F6E  10DE               	iorwf	postinc2,w,c
 22246   004F70  B4D8               	btfsc	status,2,c
 22247   004F72  EFBD  F027         	goto	i2u452_41
 22248   004F76  EFBF  F027         	goto	i2u452_40
 22249   004F7A                     i2u452_41:
 22250   004F7A  EFDA  F027         	goto	i2l5186
 22251   004F7E                     i2u452_40:
 22252   004F7E  EE20 F009          	lfsr	2,9
 22253   004F82  5003               	movf	i2fputc@fp^0,w,c
 22254   004F84  26D9               	addwf	fsr2l,f,c
 22255   004F86  5004               	movf	(i2fputc@fp+1)^0,w,c
 22256   004F88  22DA               	addwfc	fsr2h,f,c
 22257   004F8A  EE10 F002          	lfsr	1,2
 22258   004F8E  5003               	movf	i2fputc@fp^0,w,c
 22259   004F90  26E1               	addwf	fsr1l,f,c
 22260   004F92  5004               	movf	(i2fputc@fp+1)^0,w,c
 22261   004F94  22E2               	addwfc	fsr1h,f,c
 22262   004F96  50DE               	movf	postinc2,w,c
 22263   004F98  5CE6               	subwf	postinc1,w,c
 22264   004F9A  50E6               	movf	postinc1,w,c
 22265   004F9C  0A80               	xorlw	128
 22266   004F9E  6E09               	movwf	(??i2_fputc+4)^0,c
 22267   004FA0  50DE               	movf	postinc2,w,c
 22268   004FA2  0A80               	xorlw	128
 22269   004FA4  5809               	subwfb	(??i2_fputc+4)^0,w,c
 22270   004FA6  B0D8               	btfsc	status,0,c
 22271   004FA8  EFD8  F027         	goto	i2u453_41
 22272   004FAC  EFDA  F027         	goto	i2u453_40
 22273   004FB0                     i2u453_41:
 22274   004FB0  EF04  F028         	goto	i2l1741
 22275   004FB4                     i2u453_40:
 22276   004FB4                     i2l5186:
 22277   004FB4  EE20 F002          	lfsr	2,2
 22278   004FB8  5003               	movf	i2fputc@fp^0,w,c
 22279   004FBA  26D9               	addwf	fsr2l,f,c
 22280   004FBC  5004               	movf	(i2fputc@fp+1)^0,w,c
 22281   004FBE  22DA               	addwfc	fsr2h,f,c
 22282   004FC0  006F FF78  F005    	movff	postinc2,??i2_fputc
 22283   004FC6  006F FF74  F006    	movff	postdec2,??i2_fputc+1
 22284   004FCC  0060  F00F  FFD9   	movff	i2fputc@fp,fsr2l
 22285   004FD2  0060  F013  FFDA   	movff	i2fputc@fp+1,fsr2h
 22286   004FD8  006F FF78  F007    	movff	postinc2,??i2_fputc+2
 22287   004FDE  006F FF74  F008    	movff	postdec2,??i2_fputc+3
 22288   004FE4  5005               	movf	??i2_fputc^0,w,c
 22289   004FE6  2407               	addwf	(??i2_fputc+2)^0,w,c
 22290   004FE8  6ED9               	movwf	fsr2l,c
 22291   004FEA  5006               	movf	(??i2_fputc+1)^0,w,c
 22292   004FEC  2008               	addwfc	(??i2_fputc+3)^0,w,c
 22293   004FEE  6EDA               	movwf	fsr2h,c
 22294   004FF0  0060  F007  FFDF   	movff	i2fputc@c,indf2
 22295   004FF6  EE20 F002          	lfsr	2,2
 22296   004FFA  5003               	movf	i2fputc@fp^0,w,c
 22297   004FFC  26D9               	addwf	fsr2l,f,c
 22298   004FFE  5004               	movf	(i2fputc@fp+1)^0,w,c
 22299   005000  22DA               	addwfc	fsr2h,f,c
 22300   005002  2ADE               	incf	postinc2,f,c
 22301   005004  0E00               	movlw	0
 22302   005006  22DD               	addwfc	postdec2,f,c
 22303   005008                     i2l1741:
 22304   005008  0012               	return		;funcret
 22305   00500A                     __end_ofi2_fputc:
 22306                           	callstack 0
 22307                           
 22308 ;; *************** function i2_putch *****************
 22309 ;; Defined at:
 22310 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\putch.c"
 22311 ;; Parameters:    Size  Location     Type
 22312 ;;  c               1    wreg     unsigned char 
 22313 ;; Auto vars:     Size  Location     Type
 22314 ;;  c               1  (no storage) unsigned char 
 22315 ;; Return value:  Size  Location     Type
 22316 ;;                  1    wreg      void 
 22317 ;; Registers used:
 22318 ;;		wreg
 22319 ;; Tracked objects:
 22320 ;;		On entry : 0/0
 22321 ;;		On exit  : 0/0
 22322 ;;		Unchanged: 0/0
 22323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22324 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22325 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22326 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22327 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22328 ;;Total ram usage:        0 bytes
 22329 ;; Hardware stack levels used: 1
 22330 ;; This function calls:
 22331 ;;		Nothing
 22332 ;; This function is called by:
 22333 ;;		i2_fputc
 22334 ;; This function uses a non-reentrant model
 22335 ;;
 22336                           
 22337                           	psect	text84
 22338   006688                     __ptext84:
 22339                           	callstack 0
 22340   006688                     i2_putch:
 22341                           	callstack 12
 22342   006688  0012               	return		;funcret
 22343   00668A                     __end_ofi2_putch:
 22344                           	callstack 0
 22345                           
 22346 ;; *************** function i2_memcpy *****************
 22347 ;; Defined at:
 22348 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\memcpy.c"
 22349 ;; Parameters:    Size  Location     Type
 22350 ;;  d1              2    0[COMRAM] PTR void 
 22351 ;;		 -> dbuf(80), 
 22352 ;;  s1              2    2[COMRAM] PTR const void 
 22353 ;;		 -> dbuf(80), 
 22354 ;;  n               2    4[COMRAM] unsigned int 
 22355 ;; Auto vars:     Size  Location     Type
 22356 ;;  s               2    8[COMRAM] PTR const unsigned char 
 22357 ;;		 -> dbuf(80), 
 22358 ;;  d               2    6[COMRAM] PTR unsigned char 
 22359 ;;		 -> dbuf(80), 
 22360 ;;  tmp             1   10[COMRAM] unsigned char 
 22361 ;; Return value:  Size  Location     Type
 22362 ;;                  2    0[COMRAM] PTR void 
 22363 ;; Registers used:
 22364 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 22365 ;; Tracked objects:
 22366 ;;		On entry : 0/0
 22367 ;;		On exit  : 0/0
 22368 ;;		Unchanged: 0/0
 22369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22370 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22371 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22372 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22373 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22374 ;;Total ram usage:       11 bytes
 22375 ;; Hardware stack levels used: 1
 22376 ;; This function calls:
 22377 ;;		Nothing
 22378 ;; This function is called by:
 22379 ;;		i2_efgtoa
 22380 ;; This function uses a non-reentrant model
 22381 ;;
 22382                           
 22383                           	psect	text85
 22384   005C2E                     __ptext85:
 22385                           	callstack 0
 22386   005C2E                     i2_memcpy:
 22387                           	callstack 12
 22388   005C2E  C003  F009         	movff	i2memcpy@s1,i2memcpy@s
 22389   005C32  C004  F00A         	movff	i2memcpy@s1+1,i2memcpy@s+1
 22390   005C36  C001  F007         	movff	i2memcpy@d1,i2memcpy@d
 22391   005C3A  C002  F008         	movff	i2memcpy@d1+1,i2memcpy@d+1
 22392   005C3E  EF36  F02E         	goto	i2l5922
 22393   005C42                     i2l5914:
 22394   005C42  0060  F027  FFD9   	movff	i2memcpy@s,fsr2l
 22395   005C48  0060  F02B  FFDA   	movff	i2memcpy@s+1,fsr2h
 22396   005C4E  50DF               	movf	indf2,w,c
 22397   005C50  6E0B               	movwf	i2memcpy@tmp^0,c
 22398   005C52  4A09               	infsnz	i2memcpy@s^0,f,c
 22399   005C54  2A0A               	incf	(i2memcpy@s+1)^0,f,c
 22400   005C56  0060  F01F  FFD9   	movff	i2memcpy@d,fsr2l
 22401   005C5C  0060  F023  FFDA   	movff	i2memcpy@d+1,fsr2h
 22402   005C62  0060  F02F  FFDF   	movff	i2memcpy@tmp,indf2
 22403   005C68  4A07               	infsnz	i2memcpy@d^0,f,c
 22404   005C6A  2A08               	incf	(i2memcpy@d+1)^0,f,c
 22405   005C6C                     i2l5922:
 22406   005C6C  0605               	decf	i2memcpy@n^0,f,c
 22407   005C6E  A0D8               	btfss	status,0,c
 22408   005C70  0606               	decf	(i2memcpy@n+1)^0,f,c
 22409   005C72  2805               	incf	i2memcpy@n^0,w,c
 22410   005C74  E106               	bnz	i2u585_41
 22411   005C76  2806               	incf	(i2memcpy@n+1)^0,w,c
 22412   005C78  A4D8               	btfss	status,2,c
 22413   005C7A  EF41  F02E         	goto	i2u585_41
 22414   005C7E  EF43  F02E         	goto	i2u585_40
 22415   005C82                     i2u585_41:
 22416   005C82  EF21  F02E         	goto	i2l5914
 22417   005C86                     i2u585_40:
 22418   005C86  0012               	return		;funcret
 22419   005C88                     __end_ofi2_memcpy:
 22420                           	callstack 0
 22421                           
 22422 ;; *************** function i2_labs *****************
 22423 ;; Defined at:
 22424 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\labs.c"
 22425 ;; Parameters:    Size  Location     Type
 22426 ;;  a               4    0[COMRAM] long 
 22427 ;; Auto vars:     Size  Location     Type
 22428 ;;		None
 22429 ;; Return value:  Size  Location     Type
 22430 ;;                  4    0[COMRAM] long 
 22431 ;; Registers used:
 22432 ;;		wreg, status,2, status,0
 22433 ;; Tracked objects:
 22434 ;;		On entry : 0/0
 22435 ;;		On exit  : 0/0
 22436 ;;		Unchanged: 0/0
 22437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22438 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22439 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22440 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22441 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22442 ;;Total ram usage:        8 bytes
 22443 ;; Hardware stack levels used: 1
 22444 ;; This function calls:
 22445 ;;		Nothing
 22446 ;; This function is called by:
 22447 ;;		i2_efgtoa
 22448 ;; This function uses a non-reentrant model
 22449 ;;
 22450                           
 22451                           	psect	text86
 22452   005DE4                     __ptext86:
 22453                           	callstack 0
 22454   005DE4                     i2_labs:
 22455                           	callstack 12
 22456   005DE4  BE04               	btfsc	(i2labs@a+3)^0,7,c
 22457   005DE6  EFF7  F02E         	goto	i2u584_41
 22458   005DEA  EFF9  F02E         	goto	i2u584_40
 22459   005DEE                     i2u584_41:
 22460   005DEE  EF03  F02F         	goto	i2l5908
 22461   005DF2                     i2u584_40:
 22462   005DF2  C001  F001         	movff	i2labs@a,?i2_labs
 22463   005DF6  C002  F002         	movff	i2labs@a+1,?i2_labs+1
 22464   005DFA  C003  F003         	movff	i2labs@a+2,?i2_labs+2
 22465   005DFE  C004  F004         	movff	i2labs@a+3,?i2_labs+3
 22466   005E02  EF1C  F02F         	goto	i2l1723
 22467   005E06                     i2l5908:
 22468   005E06  C001  F005         	movff	i2labs@a,??i2_labs
 22469   005E0A  C002  F006         	movff	i2labs@a+1,??i2_labs+1
 22470   005E0E  C003  F007         	movff	i2labs@a+2,??i2_labs+2
 22471   005E12  C004  F008         	movff	i2labs@a+3,??i2_labs+3
 22472   005E16  1E05               	comf	??i2_labs^0,f,c
 22473   005E18  1E06               	comf	(??i2_labs+1)^0,f,c
 22474   005E1A  1E07               	comf	(??i2_labs+2)^0,f,c
 22475   005E1C  1E08               	comf	(??i2_labs+3)^0,f,c
 22476   005E1E  2A05               	incf	??i2_labs^0,f,c
 22477   005E20  0E00               	movlw	0
 22478   005E22  2206               	addwfc	(??i2_labs+1)^0,f,c
 22479   005E24  2207               	addwfc	(??i2_labs+2)^0,f,c
 22480   005E26  2208               	addwfc	(??i2_labs+3)^0,f,c
 22481   005E28  C005  F001         	movff	??i2_labs,?i2_labs
 22482   005E2C  C006  F002         	movff	??i2_labs+1,?i2_labs+1
 22483   005E30  C007  F003         	movff	??i2_labs+2,?i2_labs+2
 22484   005E34  C008  F004         	movff	??i2_labs+3,?i2_labs+3
 22485   005E38                     i2l1723:
 22486   005E38  0012               	return		;funcret
 22487   005E3A                     __end_ofi2_labs:
 22488                           	callstack 0
 22489                           
 22490 ;; *************** function i2_floorf *****************
 22491 ;; Defined at:
 22492 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\floorf.c"
 22493 ;; Parameters:    Size  Location     Type
 22494 ;;  x               4   64[COMRAM] float 
 22495 ;; Auto vars:     Size  Location     Type
 22496 ;;  u               4   80[COMRAM] struct .
 22497 ;;  m               4   74[COMRAM] unsigned long 
 22498 ;;  e               2   78[COMRAM] int 
 22499 ;; Return value:  Size  Location     Type
 22500 ;;                  4   64[COMRAM] float 
 22501 ;; Registers used:
 22502 ;;		wreg, status,2, status,0
 22503 ;; Tracked objects:
 22504 ;;		On entry : 0/0
 22505 ;;		On exit  : 0/0
 22506 ;;		Unchanged: 0/0
 22507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22508 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22509 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22510 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22511 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22512 ;;Total ram usage:       20 bytes
 22513 ;; Hardware stack levels used: 1
 22514 ;; This function calls:
 22515 ;;		Nothing
 22516 ;; This function is called by:
 22517 ;;		i2_efgtoa
 22518 ;; This function uses a non-reentrant model
 22519 ;;
 22520                           
 22521                           	psect	text87
 22522   003EC4                     __ptext87:
 22523                           	callstack 0
 22524   003EC4                     i2_floorf:
 22525                           	callstack 12
 22526   003EC4  C0D5  F051         	movff	floorf@F521,i2floorf@u
 22527   003EC8  C0D6  F052         	movff	floorf@F521+1,i2floorf@u+1
 22528   003ECC  C0D7  F053         	movff	floorf@F521+2,i2floorf@u+2
 22529   003ED0  C0D8  F054         	movff	floorf@F521+3,i2floorf@u+3
 22530   003ED4  C041  F051         	movff	i2floorf@x,i2floorf@u
 22531   003ED8  C042  F052         	movff	i2floorf@x+1,i2floorf@u+1
 22532   003EDC  C043  F053         	movff	i2floorf@x+2,i2floorf@u+2
 22533   003EE0  C044  F054         	movff	i2floorf@x+3,i2floorf@u+3
 22534   003EE4  0E81               	movlw	129
 22535   003EE6  6E45               	movwf	??i2_floorf^0,c
 22536   003EE8  0EFF               	movlw	255
 22537   003EEA  6E46               	movwf	(??i2_floorf+1)^0,c
 22538   003EEC  C051  F047         	movff	i2floorf@u,??i2_floorf+2
 22539   003EF0  C052  F048         	movff	i2floorf@u+1,??i2_floorf+3
 22540   003EF4  C053  F049         	movff	i2floorf@u+2,??i2_floorf+4
 22541   003EF8  C054  F04A         	movff	i2floorf@u+3,??i2_floorf+5
 22542   003EFC  0E18               	movlw	24
 22543   003EFE  EF86  F01F         	goto	i2u574_40
 22544   003F02                     i2u574_45:
 22545   003F02  90D8               	bcf	status,0,c
 22546   003F04  324A               	rrcf	(??i2_floorf+5)^0,f,c
 22547   003F06  3249               	rrcf	(??i2_floorf+4)^0,f,c
 22548   003F08  3248               	rrcf	(??i2_floorf+3)^0,f,c
 22549   003F0A  3247               	rrcf	(??i2_floorf+2)^0,f,c
 22550   003F0C                     i2u574_40:
 22551   003F0C  2EE8               	decfsz	wreg,f,c
 22552   003F0E  EF81  F01F         	goto	i2u574_45
 22553   003F12  5047               	movf	(??i2_floorf+2)^0,w,c
 22554   003F14  2445               	addwf	??i2_floorf^0,w,c
 22555   003F16  6E4F               	movwf	i2floorf@e^0,c
 22556   003F18  0E00               	movlw	0
 22557   003F1A  2046               	addwfc	(??i2_floorf+1)^0,w,c
 22558   003F1C  6E50               	movwf	(i2floorf@e+1)^0,c
 22559   003F1E  BE50               	btfsc	(i2floorf@e+1)^0,7,c
 22560   003F20  EF9B  F01F         	goto	i2u575_41
 22561   003F24  5050               	movf	(i2floorf@e+1)^0,w,c
 22562   003F26  E109               	bnz	i2u575_40
 22563   003F28  0E17               	movlw	23
 22564   003F2A  5C4F               	subwf	i2floorf@e^0,w,c
 22565   003F2C  A0D8               	btfss	status,0,c
 22566   003F2E  EF9B  F01F         	goto	i2u575_41
 22567   003F32  EF9D  F01F         	goto	i2u575_40
 22568   003F36                     i2u575_41:
 22569   003F36  EFA7  F01F         	goto	i2l5882
 22570   003F3A                     i2u575_40:
 22571   003F3A                     i2l5880:
 22572   003F3A  C041  F041         	movff	i2floorf@x,?i2_floorf
 22573   003F3E  C042  F042         	movff	i2floorf@x+1,?i2_floorf+1
 22574   003F42  C043  F043         	movff	i2floorf@x+2,?i2_floorf+2
 22575   003F46  C044  F044         	movff	i2floorf@x+3,?i2_floorf+3
 22576   003F4A  EF6A  F020         	goto	i2l1709
 22577   003F4E                     i2l5882:
 22578   003F4E  BE50               	btfsc	(i2floorf@e+1)^0,7,c
 22579   003F50  EFAC  F01F         	goto	i2u576_41
 22580   003F54  EFAE  F01F         	goto	i2u576_40
 22581   003F58                     i2u576_41:
 22582   003F58  EF1E  F020         	goto	i2l5892
 22583   003F5C                     i2u576_40:
 22584   003F5C  C04F  F045         	movff	i2floorf@e,??i2_floorf
 22585   003F60  0EFF               	movlw	255
 22586   003F62  6E46               	movwf	(??i2_floorf+1)^0,c
 22587   003F64  0EFF               	movlw	255
 22588   003F66  6E47               	movwf	(??i2_floorf+2)^0,c
 22589   003F68  0E7F               	movlw	127
 22590   003F6A  6E48               	movwf	(??i2_floorf+3)^0,c
 22591   003F6C  0E00               	movlw	0
 22592   003F6E  6E49               	movwf	(??i2_floorf+4)^0,c
 22593   003F70                     i2u577_45:
 22594   003F70  6645               	tstfsz	??i2_floorf^0,c
 22595   003F72  EFBD  F01F         	goto	i2u577_46
 22596   003F76  EFC5  F01F         	goto	i2u577_47
 22597   003F7A                     i2u577_46:
 22598   003F7A  3449               	rlcf	(??i2_floorf+4)^0,w,c
 22599   003F7C  3249               	rrcf	(??i2_floorf+4)^0,f,c
 22600   003F7E  3248               	rrcf	(??i2_floorf+3)^0,f,c
 22601   003F80  3247               	rrcf	(??i2_floorf+2)^0,f,c
 22602   003F82  3246               	rrcf	(??i2_floorf+1)^0,f,c
 22603   003F84  2E45               	decfsz	??i2_floorf^0,f,c
 22604   003F86  EFB8  F01F         	goto	i2u577_45
 22605   003F8A                     i2u577_47:
 22606   003F8A  C046  F04B         	movff	??i2_floorf+1,i2floorf@m
 22607   003F8E  C047  F04C         	movff	??i2_floorf+2,i2floorf@m+1
 22608   003F92  C048  F04D         	movff	??i2_floorf+3,i2floorf@m+2
 22609   003F96  C049  F04E         	movff	??i2_floorf+4,i2floorf@m+3
 22610   003F9A  504B               	movf	i2floorf@m^0,w,c
 22611   003F9C  1451               	andwf	i2floorf@u^0,w,c
 22612   003F9E  6E45               	movwf	??i2_floorf^0,c
 22613   003FA0  504C               	movf	(i2floorf@m+1)^0,w,c
 22614   003FA2  1452               	andwf	(i2floorf@u+1)^0,w,c
 22615   003FA4  6E46               	movwf	(??i2_floorf+1)^0,c
 22616   003FA6  504D               	movf	(i2floorf@m+2)^0,w,c
 22617   003FA8  1453               	andwf	(i2floorf@u+2)^0,w,c
 22618   003FAA  6E47               	movwf	(??i2_floorf+2)^0,c
 22619   003FAC  504E               	movf	(i2floorf@m+3)^0,w,c
 22620   003FAE  1454               	andwf	(i2floorf@u+3)^0,w,c
 22621   003FB0  6E48               	movwf	(??i2_floorf+3)^0,c
 22622   003FB2  5045               	movf	??i2_floorf^0,w,c
 22623   003FB4  1046               	iorwf	(??i2_floorf+1)^0,w,c
 22624   003FB6  1047               	iorwf	(??i2_floorf+2)^0,w,c
 22625   003FB8  1048               	iorwf	(??i2_floorf+3)^0,w,c
 22626   003FBA  A4D8               	btfss	status,2,c
 22627   003FBC  EFE2  F01F         	goto	i2u578_41
 22628   003FC0  EFE4  F01F         	goto	i2u578_40
 22629   003FC4                     i2u578_41:
 22630   003FC4  EFE6  F01F         	goto	i2l5888
 22631   003FC8                     i2u578_40:
 22632   003FC8  EF9D  F01F         	goto	i2l5880
 22633   003FCC                     i2l5888:
 22634   003FCC  C051  F045         	movff	i2floorf@u,??i2_floorf
 22635   003FD0  C052  F046         	movff	i2floorf@u+1,??i2_floorf+1
 22636   003FD4  C053  F047         	movff	i2floorf@u+2,??i2_floorf+2
 22637   003FD8  C054  F048         	movff	i2floorf@u+3,??i2_floorf+3
 22638   003FDC  0E20               	movlw	32
 22639   003FDE  EFF6  F01F         	goto	i2u579_40
 22640   003FE2                     i2u579_45:
 22641   003FE2  90D8               	bcf	status,0,c
 22642   003FE4  3248               	rrcf	(??i2_floorf+3)^0,f,c
 22643   003FE6  3247               	rrcf	(??i2_floorf+2)^0,f,c
 22644   003FE8  3246               	rrcf	(??i2_floorf+1)^0,f,c
 22645   003FEA  3245               	rrcf	??i2_floorf^0,f,c
 22646   003FEC                     i2u579_40:
 22647   003FEC  2EE8               	decfsz	wreg,f,c
 22648   003FEE  EFF1  F01F         	goto	i2u579_45
 22649   003FF2  5045               	movf	??i2_floorf^0,w,c
 22650   003FF4  1046               	iorwf	(??i2_floorf+1)^0,w,c
 22651   003FF6  1047               	iorwf	(??i2_floorf+2)^0,w,c
 22652   003FF8  1048               	iorwf	(??i2_floorf+3)^0,w,c
 22653   003FFA  B4D8               	btfsc	status,2,c
 22654   003FFC  EF02  F020         	goto	i2u580_41
 22655   004000  EF04  F020         	goto	i2u580_40
 22656   004004                     i2u580_41:
 22657   004004  EF0C  F020         	goto	i2l1712
 22658   004008                     i2u580_40:
 22659   004008  504B               	movf	i2floorf@m^0,w,c
 22660   00400A  2651               	addwf	i2floorf@u^0,f,c
 22661   00400C  504C               	movf	(i2floorf@m+1)^0,w,c
 22662   00400E  2252               	addwfc	(i2floorf@u+1)^0,f,c
 22663   004010  504D               	movf	(i2floorf@m+2)^0,w,c
 22664   004012  2253               	addwfc	(i2floorf@u+2)^0,f,c
 22665   004014  504E               	movf	(i2floorf@m+3)^0,w,c
 22666   004016  2254               	addwfc	(i2floorf@u+3)^0,f,c
 22667   004018                     i2l1712:
 22668   004018  1C4B               	comf	i2floorf@m^0,w,c
 22669   00401A  6E45               	movwf	??i2_floorf^0,c
 22670   00401C  1C4C               	comf	(i2floorf@m+1)^0,w,c
 22671   00401E  6E46               	movwf	(??i2_floorf+1)^0,c
 22672   004020  1C4D               	comf	(i2floorf@m+2)^0,w,c
 22673   004022  6E47               	movwf	(??i2_floorf+2)^0,c
 22674   004024  1C4E               	comf	(i2floorf@m+3)^0,w,c
 22675   004026  6E48               	movwf	(??i2_floorf+3)^0,c
 22676   004028  5045               	movf	??i2_floorf^0,w,c
 22677   00402A  1651               	andwf	i2floorf@u^0,f,c
 22678   00402C  5046               	movf	(??i2_floorf+1)^0,w,c
 22679   00402E  1652               	andwf	(i2floorf@u+1)^0,f,c
 22680   004030  5047               	movf	(??i2_floorf+2)^0,w,c
 22681   004032  1653               	andwf	(i2floorf@u+2)^0,f,c
 22682   004034  5048               	movf	(??i2_floorf+3)^0,w,c
 22683   004036  1654               	andwf	(i2floorf@u+3)^0,f,c
 22684   004038  EF62  F020         	goto	i2l5900
 22685   00403C                     i2l5892:
 22686   00403C  C051  F045         	movff	i2floorf@u,??i2_floorf
 22687   004040  C052  F046         	movff	i2floorf@u+1,??i2_floorf+1
 22688   004044  C053  F047         	movff	i2floorf@u+2,??i2_floorf+2
 22689   004048  C054  F048         	movff	i2floorf@u+3,??i2_floorf+3
 22690   00404C  0E20               	movlw	32
 22691   00404E  EF2E  F020         	goto	i2u581_40
 22692   004052                     i2u581_45:
 22693   004052  90D8               	bcf	status,0,c
 22694   004054  3248               	rrcf	(??i2_floorf+3)^0,f,c
 22695   004056  3247               	rrcf	(??i2_floorf+2)^0,f,c
 22696   004058  3246               	rrcf	(??i2_floorf+1)^0,f,c
 22697   00405A  3245               	rrcf	??i2_floorf^0,f,c
 22698   00405C                     i2u581_40:
 22699   00405C  2EE8               	decfsz	wreg,f,c
 22700   00405E  EF29  F020         	goto	i2u581_45
 22701   004062  5045               	movf	??i2_floorf^0,w,c
 22702   004064  1046               	iorwf	(??i2_floorf+1)^0,w,c
 22703   004066  1047               	iorwf	(??i2_floorf+2)^0,w,c
 22704   004068  1048               	iorwf	(??i2_floorf+3)^0,w,c
 22705   00406A  A4D8               	btfss	status,2,c
 22706   00406C  EF3A  F020         	goto	i2u582_41
 22707   004070  EF3C  F020         	goto	i2u582_40
 22708   004074                     i2u582_41:
 22709   004074  EF46  F020         	goto	i2l5896
 22710   004078                     i2u582_40:
 22711   004078  0E00               	movlw	0
 22712   00407A  6E51               	movwf	i2floorf@u^0,c
 22713   00407C  0E00               	movlw	0
 22714   00407E  6E52               	movwf	(i2floorf@u+1)^0,c
 22715   004080  0E00               	movlw	0
 22716   004082  6E53               	movwf	(i2floorf@u+2)^0,c
 22717   004084  0E00               	movlw	0
 22718   004086  6E54               	movwf	(i2floorf@u+3)^0,c
 22719   004088  EF62  F020         	goto	i2l5900
 22720   00408C                     i2l5896:
 22721   00408C  90D8               	bcf	status,0,c
 22722   00408E  3451               	rlcf	i2floorf@u^0,w,c
 22723   004090  6E45               	movwf	??i2_floorf^0,c
 22724   004092  3452               	rlcf	(i2floorf@u+1)^0,w,c
 22725   004094  6E46               	movwf	(??i2_floorf+1)^0,c
 22726   004096  3453               	rlcf	(i2floorf@u+2)^0,w,c
 22727   004098  6E47               	movwf	(??i2_floorf+2)^0,c
 22728   00409A  3454               	rlcf	(i2floorf@u+3)^0,w,c
 22729   00409C  6E48               	movwf	(??i2_floorf+3)^0,c
 22730   00409E  5045               	movf	??i2_floorf^0,w,c
 22731   0040A0  1046               	iorwf	(??i2_floorf+1)^0,w,c
 22732   0040A2  1047               	iorwf	(??i2_floorf+2)^0,w,c
 22733   0040A4  1048               	iorwf	(??i2_floorf+3)^0,w,c
 22734   0040A6  B4D8               	btfsc	status,2,c
 22735   0040A8  EF58  F020         	goto	i2u583_41
 22736   0040AC  EF5A  F020         	goto	i2u583_40
 22737   0040B0                     i2u583_41:
 22738   0040B0  EF62  F020         	goto	i2l5900
 22739   0040B4                     i2u583_40:
 22740   0040B4  0E00               	movlw	0
 22741   0040B6  6E51               	movwf	i2floorf@u^0,c
 22742   0040B8  0E00               	movlw	0
 22743   0040BA  6E52               	movwf	(i2floorf@u+1)^0,c
 22744   0040BC  0E80               	movlw	128
 22745   0040BE  6E53               	movwf	(i2floorf@u+2)^0,c
 22746   0040C0  0EBF               	movlw	191
 22747   0040C2  6E54               	movwf	(i2floorf@u+3)^0,c
 22748   0040C4                     i2l5900:
 22749   0040C4  C051  F041         	movff	i2floorf@u,?i2_floorf
 22750   0040C8  C052  F042         	movff	i2floorf@u+1,?i2_floorf+1
 22751   0040CC  C053  F043         	movff	i2floorf@u+2,?i2_floorf+2
 22752   0040D0  C054  F044         	movff	i2floorf@u+3,?i2_floorf+3
 22753   0040D4                     i2l1709:
 22754   0040D4  0012               	return		;funcret
 22755   0040D6                     __end_ofi2_floorf:
 22756                           	callstack 0
 22757                           
 22758 ;; *************** function i2___fpclassifyf *****************
 22759 ;; Defined at:
 22760 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\__fpclassifyf.c"
 22761 ;; Parameters:    Size  Location     Type
 22762 ;;  x               4    0[COMRAM] float 
 22763 ;; Auto vars:     Size  Location     Type
 22764 ;;  u               4   10[COMRAM] struct .
 22765 ;;  e               2    8[COMRAM] int 
 22766 ;; Return value:  Size  Location     Type
 22767 ;;                  2    0[COMRAM] int 
 22768 ;; Registers used:
 22769 ;;		wreg, status,2, status,0
 22770 ;; Tracked objects:
 22771 ;;		On entry : 0/0
 22772 ;;		On exit  : 0/0
 22773 ;;		Unchanged: 0/0
 22774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22775 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22776 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22777 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22778 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22779 ;;Total ram usage:       14 bytes
 22780 ;; Hardware stack levels used: 1
 22781 ;; This function calls:
 22782 ;;		Nothing
 22783 ;; This function is called by:
 22784 ;;		i2_efgtoa
 22785 ;; This function uses a non-reentrant model
 22786 ;;
 22787                           
 22788                           	psect	text88
 22789   004A94                     __ptext88:
 22790                           	callstack 0
 22791   004A94                     i2___fpclassifyf:
 22792                           	callstack 12
 22793   004A94  C0D9  F00B         	movff	___fpclassifyf@F465,i2___fpclassifyf@u
 22794   004A98  C0DA  F00C         	movff	___fpclassifyf@F465+1,i2___fpclassifyf@u+1
 22795   004A9C  C0DB  F00D         	movff	___fpclassifyf@F465+2,i2___fpclassifyf@u+2
 22796   004AA0  C0DC  F00E         	movff	___fpclassifyf@F465+3,i2___fpclassifyf@u+3
 22797   004AA4  C001  F00B         	movff	i2___fpclassifyf@x,i2___fpclassifyf@u
 22798   004AA8  C002  F00C         	movff	i2___fpclassifyf@x+1,i2___fpclassifyf@u+1
 22799   004AAC  C003  F00D         	movff	i2___fpclassifyf@x+2,i2___fpclassifyf@u+2
 22800   004AB0  C004  F00E         	movff	i2___fpclassifyf@x+3,i2___fpclassifyf@u+3
 22801   004AB4  C00B  F005         	movff	i2___fpclassifyf@u,??i2___fpclassifyf
 22802   004AB8  C00C  F006         	movff	i2___fpclassifyf@u+1,??i2___fpclassifyf+1
 22803   004ABC  C00D  F007         	movff	i2___fpclassifyf@u+2,??i2___fpclassifyf+2
 22804   004AC0  C00E  F008         	movff	i2___fpclassifyf@u+3,??i2___fpclassifyf+3
 22805   004AC4  0E18               	movlw	24
 22806   004AC6  EF6A  F025         	goto	i2u567_40
 22807   004ACA                     i2u567_45:
 22808   004ACA  90D8               	bcf	status,0,c
 22809   004ACC  3208               	rrcf	(??i2___fpclassifyf+3)^0,f,c
 22810   004ACE  3207               	rrcf	(??i2___fpclassifyf+2)^0,f,c
 22811   004AD0  3206               	rrcf	(??i2___fpclassifyf+1)^0,f,c
 22812   004AD2  3205               	rrcf	??i2___fpclassifyf^0,f,c
 22813   004AD4                     i2u567_40:
 22814   004AD4  2EE8               	decfsz	wreg,f,c
 22815   004AD6  EF65  F025         	goto	i2u567_45
 22816   004ADA  5005               	movf	??i2___fpclassifyf^0,w,c
 22817   004ADC  6E09               	movwf	i2___fpclassifyf@e^0,c
 22818   004ADE  6A0A               	clrf	(i2___fpclassifyf@e+1)^0,c
 22819   004AE0  5009               	movf	i2___fpclassifyf@e^0,w,c
 22820   004AE2  100A               	iorwf	(i2___fpclassifyf@e+1)^0,w,c
 22821   004AE4  A4D8               	btfss	status,2,c
 22822   004AE6  EF77  F025         	goto	i2u568_41
 22823   004AEA  EF79  F025         	goto	i2u568_40
 22824   004AEE                     i2u568_41:
 22825   004AEE  EF99  F025         	goto	i2l5866
 22826   004AF2                     i2u568_40:
 22827   004AF2  90D8               	bcf	status,0,c
 22828   004AF4  340B               	rlcf	i2___fpclassifyf@u^0,w,c
 22829   004AF6  6E05               	movwf	??i2___fpclassifyf^0,c
 22830   004AF8  340C               	rlcf	(i2___fpclassifyf@u+1)^0,w,c
 22831   004AFA  6E06               	movwf	(??i2___fpclassifyf+1)^0,c
 22832   004AFC  340D               	rlcf	(i2___fpclassifyf@u+2)^0,w,c
 22833   004AFE  6E07               	movwf	(??i2___fpclassifyf+2)^0,c
 22834   004B00  340E               	rlcf	(i2___fpclassifyf@u+3)^0,w,c
 22835   004B02  6E08               	movwf	(??i2___fpclassifyf+3)^0,c
 22836   004B04  5005               	movf	??i2___fpclassifyf^0,w,c
 22837   004B06  1006               	iorwf	(??i2___fpclassifyf+1)^0,w,c
 22838   004B08  1007               	iorwf	(??i2___fpclassifyf+2)^0,w,c
 22839   004B0A  1008               	iorwf	(??i2___fpclassifyf+3)^0,w,c
 22840   004B0C  A4D8               	btfss	status,2,c
 22841   004B0E  EF8B  F025         	goto	i2u569_41
 22842   004B12  EF8D  F025         	goto	i2u569_40
 22843   004B16                     i2u569_41:
 22844   004B16  EF93  F025         	goto	i2l5862
 22845   004B1A                     i2u569_40:
 22846   004B1A  0E00               	movlw	0
 22847   004B1C  6E02               	movwf	(?i2___fpclassifyf+1)^0,c
 22848   004B1E  0E02               	movlw	2
 22849   004B20  6E01               	movwf	?i2___fpclassifyf^0,c
 22850   004B22  EFC8  F025         	goto	i2l1702
 22851   004B26                     i2l5862:
 22852   004B26  0E00               	movlw	0
 22853   004B28  6E02               	movwf	(?i2___fpclassifyf+1)^0,c
 22854   004B2A  0E03               	movlw	3
 22855   004B2C  6E01               	movwf	?i2___fpclassifyf^0,c
 22856   004B2E  EFC8  F025         	goto	i2l1702
 22857   004B32                     i2l5866:
 22858   004B32  2809               	incf	i2___fpclassifyf@e^0,w,c
 22859   004B34  100A               	iorwf	(i2___fpclassifyf@e+1)^0,w,c
 22860   004B36  A4D8               	btfss	status,2,c
 22861   004B38  EFA0  F025         	goto	i2u570_41
 22862   004B3C  EFA2  F025         	goto	i2u570_40
 22863   004B40                     i2u570_41:
 22864   004B40  EFC4  F025         	goto	i2l5872
 22865   004B44                     i2u570_40:
 22866   004B44  C00B  F005         	movff	i2___fpclassifyf@u,??i2___fpclassifyf
 22867   004B48  C00C  F006         	movff	i2___fpclassifyf@u+1,??i2___fpclassifyf+1
 22868   004B4C  C00D  F007         	movff	i2___fpclassifyf@u+2,??i2___fpclassifyf+2
 22869   004B50  C00E  F008         	movff	i2___fpclassifyf@u+3,??i2___fpclassifyf+3
 22870   004B54  0E09               	movlw	9
 22871   004B56                     i2u571_45:
 22872   004B56  90D8               	bcf	status,0,c
 22873   004B58  3605               	rlcf	??i2___fpclassifyf^0,f,c
 22874   004B5A  3606               	rlcf	(??i2___fpclassifyf+1)^0,f,c
 22875   004B5C  3607               	rlcf	(??i2___fpclassifyf+2)^0,f,c
 22876   004B5E  3608               	rlcf	(??i2___fpclassifyf+3)^0,f,c
 22877   004B60  2EE8               	decfsz	wreg,f,c
 22878   004B62  EFAB  F025         	goto	i2u571_45
 22879   004B66  5005               	movf	??i2___fpclassifyf^0,w,c
 22880   004B68  1006               	iorwf	(??i2___fpclassifyf+1)^0,w,c
 22881   004B6A  1007               	iorwf	(??i2___fpclassifyf+2)^0,w,c
 22882   004B6C  1008               	iorwf	(??i2___fpclassifyf+3)^0,w,c
 22883   004B6E  B4D8               	btfsc	status,2,c
 22884   004B70  EFBC  F025         	goto	i2u572_41
 22885   004B74  EFBF  F025         	goto	i2u572_40
 22886   004B78                     i2u572_41:
 22887   004B78  0E01               	movlw	1
 22888   004B7A  EFC0  F025         	goto	i2u573_40
 22889   004B7E                     i2u572_40:
 22890   004B7E  0E00               	movlw	0
 22891   004B80                     i2u573_40:
 22892   004B80  6E01               	movwf	?i2___fpclassifyf^0,c
 22893   004B82  6A02               	clrf	(?i2___fpclassifyf+1)^0,c
 22894   004B84  EFC8  F025         	goto	i2l1702
 22895   004B88                     i2l5872:
 22896   004B88  0E00               	movlw	0
 22897   004B8A  6E02               	movwf	(?i2___fpclassifyf+1)^0,c
 22898   004B8C  0E04               	movlw	4
 22899   004B8E  6E01               	movwf	?i2___fpclassifyf^0,c
 22900   004B90                     i2l1702:
 22901   004B90  0012               	return		;funcret
 22902   004B92                     __end_ofi2___fpclassifyf:
 22903                           	callstack 0
 22904                           
 22905 ;; *************** function i2___fltol *****************
 22906 ;; Defined at:
 22907 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\fltol.c"
 22908 ;; Parameters:    Size  Location     Type
 22909 ;;  f1              4   74[COMRAM] int 
 22910 ;; Auto vars:     Size  Location     Type
 22911 ;;  exp1            1   83[COMRAM] unsigned char 
 22912 ;;  sign1           1   82[COMRAM] unsigned char 
 22913 ;; Return value:  Size  Location     Type
 22914 ;;                  4   74[COMRAM] long 
 22915 ;; Registers used:
 22916 ;;		wreg, status,2, status,0
 22917 ;; Tracked objects:
 22918 ;;		On entry : 0/0
 22919 ;;		On exit  : 0/0
 22920 ;;		Unchanged: 0/0
 22921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22922 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22923 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22924 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22925 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22926 ;;Total ram usage:       10 bytes
 22927 ;; Hardware stack levels used: 1
 22928 ;; This function calls:
 22929 ;;		Nothing
 22930 ;; This function is called by:
 22931 ;;		i2_LCD_UpdateMenu
 22932 ;;		i2_efgtoa
 22933 ;; This function uses a non-reentrant model
 22934 ;;
 22935                           
 22936                           	psect	text89
 22937   00478A                     __ptext89:
 22938                           	callstack 0
 22939   00478A                     i2___fltol:
 22940                           	callstack 12
 22941   00478A  344D               	rlcf	(i2___fltol@f1+2)^0,w,c
 22942   00478C  344E               	rlcf	(i2___fltol@f1+3)^0,w,c
 22943   00478E  6E54               	movwf	i2___fltol@exp1^0,c
 22944   004790  5054               	movf	i2___fltol@exp1^0,w,c
 22945   004792  A4D8               	btfss	status,2,c
 22946   004794  EFCE  F023         	goto	i2u516_41
 22947   004798  EFD0  F023         	goto	i2u516_40
 22948   00479C                     i2u516_41:
 22949   00479C  EFDA  F023         	goto	i2l5534
 22950   0047A0                     i2u516_40:
 22951   0047A0                     i2l5530:
 22952   0047A0  0E00               	movlw	0
 22953   0047A2  6E4B               	movwf	?i2___fltol^0,c
 22954   0047A4  0E00               	movlw	0
 22955   0047A6  6E4C               	movwf	(?i2___fltol+1)^0,c
 22956   0047A8  0E00               	movlw	0
 22957   0047AA  6E4D               	movwf	(?i2___fltol+2)^0,c
 22958   0047AC  0E00               	movlw	0
 22959   0047AE  6E4E               	movwf	(?i2___fltol+3)^0,c
 22960   0047B0  EF47  F024         	goto	i2l1178
 22961   0047B4                     i2l5534:
 22962   0047B4  C04B  F04F         	movff	i2___fltol@f1,??i2___fltol
 22963   0047B8  C04C  F050         	movff	i2___fltol@f1+1,??i2___fltol+1
 22964   0047BC  C04D  F051         	movff	i2___fltol@f1+2,??i2___fltol+2
 22965   0047C0  C04E  F052         	movff	i2___fltol@f1+3,??i2___fltol+3
 22966   0047C4  0E20               	movlw	32
 22967   0047C6  EFEA  F023         	goto	i2u517_40
 22968   0047CA                     i2u517_45:
 22969   0047CA  90D8               	bcf	status,0,c
 22970   0047CC  3252               	rrcf	(??i2___fltol+3)^0,f,c
 22971   0047CE  3251               	rrcf	(??i2___fltol+2)^0,f,c
 22972   0047D0  3250               	rrcf	(??i2___fltol+1)^0,f,c
 22973   0047D2  324F               	rrcf	??i2___fltol^0,f,c
 22974   0047D4                     i2u517_40:
 22975   0047D4  2EE8               	decfsz	wreg,f,c
 22976   0047D6  EFE5  F023         	goto	i2u517_45
 22977   0047DA  504F               	movf	??i2___fltol^0,w,c
 22978   0047DC  6E53               	movwf	i2___fltol@sign1^0,c
 22979   0047DE  8E4D               	bsf	(i2___fltol@f1+2)^0,7,c
 22980   0047E0  0EFF               	movlw	255
 22981   0047E2  164B               	andwf	i2___fltol@f1^0,f,c
 22982   0047E4  0EFF               	movlw	255
 22983   0047E6  164C               	andwf	(i2___fltol@f1+1)^0,f,c
 22984   0047E8  0EFF               	movlw	255
 22985   0047EA  164D               	andwf	(i2___fltol@f1+2)^0,f,c
 22986   0047EC  0E00               	movlw	0
 22987   0047EE  164E               	andwf	(i2___fltol@f1+3)^0,f,c
 22988   0047F0  0E96               	movlw	150
 22989   0047F2  5E54               	subwf	i2___fltol@exp1^0,f,c
 22990   0047F4  BE54               	btfsc	i2___fltol@exp1^0,7,c
 22991   0047F6  EF01  F024         	goto	i2u518_40
 22992   0047FA  EFFF  F023         	goto	i2u518_41
 22993   0047FE                     i2u518_41:
 22994   0047FE  EF17  F024         	goto	i2l5554
 22995   004802                     i2u518_40:
 22996   004802  5054               	movf	i2___fltol@exp1^0,w,c
 22997   004804  0A80               	xorlw	128
 22998   004806  0F97               	addlw	151
 22999   004808  B0D8               	btfsc	status,0,c
 23000   00480A  EF09  F024         	goto	i2u519_41
 23001   00480E  EF0B  F024         	goto	i2u519_40
 23002   004812                     i2u519_41:
 23003   004812  EF0D  F024         	goto	i2l5550
 23004   004816                     i2u519_40:
 23005   004816  EFD0  F023         	goto	i2l5530
 23006   00481A                     i2l5550:
 23007   00481A  90D8               	bcf	status,0,c
 23008   00481C  324E               	rrcf	(i2___fltol@f1+3)^0,f,c
 23009   00481E  324D               	rrcf	(i2___fltol@f1+2)^0,f,c
 23010   004820  324C               	rrcf	(i2___fltol@f1+1)^0,f,c
 23011   004822  324B               	rrcf	i2___fltol@f1^0,f,c
 23012   004824  3E54               	incfsz	i2___fltol@exp1^0,f,c
 23013   004826  EF0D  F024         	goto	i2l5550
 23014   00482A  EF2F  F024         	goto	i2l5564
 23015   00482E                     i2l5554:
 23016   00482E  0E1F               	movlw	31
 23017   004830  6454               	cpfsgt	i2___fltol@exp1^0,c
 23018   004832  EF1D  F024         	goto	i2u520_41
 23019   004836  EF1F  F024         	goto	i2u520_40
 23020   00483A                     i2u520_41:
 23021   00483A  EF27  F024         	goto	i2l5562
 23022   00483E                     i2u520_40:
 23023   00483E  EFD0  F023         	goto	i2l5530
 23024   004842                     i2l5560:
 23025   004842  90D8               	bcf	status,0,c
 23026   004844  364B               	rlcf	i2___fltol@f1^0,f,c
 23027   004846  364C               	rlcf	(i2___fltol@f1+1)^0,f,c
 23028   004848  364D               	rlcf	(i2___fltol@f1+2)^0,f,c
 23029   00484A  364E               	rlcf	(i2___fltol@f1+3)^0,f,c
 23030   00484C  0654               	decf	i2___fltol@exp1^0,f,c
 23031   00484E                     i2l5562:
 23032   00484E  5054               	movf	i2___fltol@exp1^0,w,c
 23033   004850  A4D8               	btfss	status,2,c
 23034   004852  EF2D  F024         	goto	i2u521_41
 23035   004856  EF2F  F024         	goto	i2u521_40
 23036   00485A                     i2u521_41:
 23037   00485A  EF21  F024         	goto	i2l5560
 23038   00485E                     i2u521_40:
 23039   00485E                     i2l5564:
 23040   00485E  5053               	movf	i2___fltol@sign1^0,w,c
 23041   004860  B4D8               	btfsc	status,2,c
 23042   004862  EF35  F024         	goto	i2u522_41
 23043   004866  EF37  F024         	goto	i2u522_40
 23044   00486A                     i2u522_41:
 23045   00486A  EF3F  F024         	goto	i2l5568
 23046   00486E                     i2u522_40:
 23047   00486E  1E4E               	comf	(i2___fltol@f1+3)^0,f,c
 23048   004870  1E4D               	comf	(i2___fltol@f1+2)^0,f,c
 23049   004872  1E4C               	comf	(i2___fltol@f1+1)^0,f,c
 23050   004874  6C4B               	negf	i2___fltol@f1^0,c
 23051   004876  0E00               	movlw	0
 23052   004878  224C               	addwfc	(i2___fltol@f1+1)^0,f,c
 23053   00487A  224D               	addwfc	(i2___fltol@f1+2)^0,f,c
 23054   00487C  224E               	addwfc	(i2___fltol@f1+3)^0,f,c
 23055   00487E                     i2l5568:
 23056   00487E  C04B  F04B         	movff	i2___fltol@f1,?i2___fltol
 23057   004882  C04C  F04C         	movff	i2___fltol@f1+1,?i2___fltol+1
 23058   004886  C04D  F04D         	movff	i2___fltol@f1+2,?i2___fltol+2
 23059   00488A  C04E  F04E         	movff	i2___fltol@f1+3,?i2___fltol+3
 23060   00488E                     i2l1178:
 23061   00488E  0012               	return		;funcret
 23062   004890                     __end_ofi2___fltol:
 23063                           	callstack 0
 23064                           
 23065 ;; *************** function i2___flsub *****************
 23066 ;; Defined at:
 23067 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\sprcadd.c"
 23068 ;; Parameters:    Size  Location     Type
 23069 ;;  b               4   39[COMRAM] long 
 23070 ;;  a               4   43[COMRAM] long 
 23071 ;; Auto vars:     Size  Location     Type
 23072 ;;		None
 23073 ;; Return value:  Size  Location     Type
 23074 ;;                  4   39[COMRAM] long 
 23075 ;; Registers used:
 23076 ;;		wreg, status,2, status,0, cstack
 23077 ;; Tracked objects:
 23078 ;;		On entry : 0/0
 23079 ;;		On exit  : 0/0
 23080 ;;		Unchanged: 0/0
 23081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23082 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23083 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23084 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23085 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23086 ;;Total ram usage:        8 bytes
 23087 ;; Hardware stack levels used: 1
 23088 ;; Hardware stack levels required when called: 1
 23089 ;; This function calls:
 23090 ;;		i2___fladd
 23091 ;; This function is called by:
 23092 ;;		i2_efgtoa
 23093 ;; This function uses a non-reentrant model
 23094 ;;
 23095                           
 23096                           	psect	text90
 23097   006094                     __ptext90:
 23098                           	callstack 0
 23099   006094                     i2___flsub:
 23100                           	callstack 11
 23101   006094  0E00               	movlw	0
 23102   006096  1A2C               	xorwf	i2___flsub@a^0,f,c
 23103   006098  0E00               	movlw	0
 23104   00609A  1A2D               	xorwf	(i2___flsub@a+1)^0,f,c
 23105   00609C  0E00               	movlw	0
 23106   00609E  1A2E               	xorwf	(i2___flsub@a+2)^0,f,c
 23107   0060A0  0E80               	movlw	128
 23108   0060A2  1A2F               	xorwf	(i2___flsub@a+3)^0,f,c
 23109   0060A4  C028  F001         	movff	i2___flsub@b,i2___fladd@b
 23110   0060A8  C029  F002         	movff	i2___flsub@b+1,i2___fladd@b+1
 23111   0060AC  C02A  F003         	movff	i2___flsub@b+2,i2___fladd@b+2
 23112   0060B0  C02B  F004         	movff	i2___flsub@b+3,i2___fladd@b+3
 23113   0060B4  C02C  F005         	movff	i2___flsub@a,i2___fladd@a
 23114   0060B8  C02D  F006         	movff	i2___flsub@a+1,i2___fladd@a+1
 23115   0060BC  C02E  F007         	movff	i2___flsub@a+2,i2___fladd@a+2
 23116   0060C0  C02F  F008         	movff	i2___flsub@a+3,i2___fladd@a+3
 23117   0060C4  ECA1  F00D         	call	i2___fladd	;wreg free
 23118   0060C8  C001  F028         	movff	?i2___fladd,?i2___flsub
 23119   0060CC  C002  F029         	movff	?i2___fladd+1,?i2___flsub+1
 23120   0060D0  C003  F02A         	movff	?i2___fladd+2,?i2___flsub+2
 23121   0060D4  C004  F02B         	movff	?i2___fladd+3,?i2___flsub+3
 23122   0060D8  0012               	return		;funcret
 23123   0060DA                     __end_ofi2___flsub:
 23124                           	callstack 0
 23125                           
 23126 ;; *************** function i2___fladd *****************
 23127 ;; Defined at:
 23128 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\sprcadd.c"
 23129 ;; Parameters:    Size  Location     Type
 23130 ;;  b               4    0[COMRAM] long 
 23131 ;;  a               4    4[COMRAM] long 
 23132 ;; Auto vars:     Size  Location     Type
 23133 ;;  grs             1   15[COMRAM] unsigned char 
 23134 ;;  bexp            1   14[COMRAM] unsigned char 
 23135 ;;  aexp            1   13[COMRAM] unsigned char 
 23136 ;;  signs           1   12[COMRAM] unsigned char 
 23137 ;; Return value:  Size  Location     Type
 23138 ;;                  4    0[COMRAM] unsigned char 
 23139 ;; Registers used:
 23140 ;;		wreg, status,2, status,0
 23141 ;; Tracked objects:
 23142 ;;		On entry : 0/0
 23143 ;;		On exit  : 0/0
 23144 ;;		Unchanged: 0/0
 23145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23146 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23147 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23148 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23149 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23150 ;;Total ram usage:       16 bytes
 23151 ;; Hardware stack levels used: 1
 23152 ;; This function calls:
 23153 ;;		Nothing
 23154 ;; This function is called by:
 23155 ;;		i2___flsub
 23156 ;;		i2_efgtoa
 23157 ;; This function uses a non-reentrant model
 23158 ;;
 23159                           
 23160                           	psect	text91
 23161   001B42                     __ptext91:
 23162                           	callstack 0
 23163   001B42                     i2___fladd:
 23164                           	callstack 11
 23165   001B42  5004               	movf	(i2___fladd@b+3)^0,w,c
 23166   001B44  0B80               	andlw	128
 23167   001B46  6E0D               	movwf	i2___fladd@signs^0,c
 23168   001B48  5004               	movf	(i2___fladd@b+3)^0,w,c
 23169   001B4A  2404               	addwf	(i2___fladd@b+3)^0,w,c
 23170   001B4C  6E0F               	movwf	i2___fladd@bexp^0,c
 23171   001B4E  AE03               	btfss	(i2___fladd@b+2)^0,7,c
 23172   001B50  EFAC  F00D         	goto	i2u454_41
 23173   001B54  EFAE  F00D         	goto	i2u454_40
 23174   001B58                     i2u454_41:
 23175   001B58  EFAF  F00D         	goto	i2l5196
 23176   001B5C                     i2u454_40:
 23177   001B5C  800F               	bsf	i2___fladd@bexp^0,0,c
 23178   001B5E                     i2l5196:
 23179   001B5E  500F               	movf	i2___fladd@bexp^0,w,c
 23180   001B60  B4D8               	btfsc	status,2,c
 23181   001B62  EFB5  F00D         	goto	i2u455_41
 23182   001B66  EFB7  F00D         	goto	i2u455_40
 23183   001B6A                     i2u455_41:
 23184   001B6A  EFCB  F00D         	goto	i2l5206
 23185   001B6E                     i2u455_40:
 23186   001B6E  280F               	incf	i2___fladd@bexp^0,w,c
 23187   001B70  A4D8               	btfss	status,2,c
 23188   001B72  EFBD  F00D         	goto	i2u456_41
 23189   001B76  EFBF  F00D         	goto	i2u456_40
 23190   001B7A                     i2u456_41:
 23191   001B7A  EFC7  F00D         	goto	i2l5202
 23192   001B7E                     i2u456_40:
 23193   001B7E  0E00               	movlw	0
 23194   001B80  6E01               	movwf	i2___fladd@b^0,c
 23195   001B82  0E00               	movlw	0
 23196   001B84  6E02               	movwf	(i2___fladd@b+1)^0,c
 23197   001B86  0E00               	movlw	0
 23198   001B88  6E03               	movwf	(i2___fladd@b+2)^0,c
 23199   001B8A  0E00               	movlw	0
 23200   001B8C  6E04               	movwf	(i2___fladd@b+3)^0,c
 23201   001B8E                     i2l5202:
 23202   001B8E  8E03               	bsf	(i2___fladd@b+2)^0,7,c
 23203   001B90  6A04               	clrf	(i2___fladd@b+3)^0,c
 23204   001B92  EFD3  F00D         	goto	i2l5208
 23205   001B96                     i2l5206:
 23206   001B96  0E00               	movlw	0
 23207   001B98  6E01               	movwf	i2___fladd@b^0,c
 23208   001B9A  0E00               	movlw	0
 23209   001B9C  6E02               	movwf	(i2___fladd@b+1)^0,c
 23210   001B9E  0E00               	movlw	0
 23211   001BA0  6E03               	movwf	(i2___fladd@b+2)^0,c
 23212   001BA2  0E00               	movlw	0
 23213   001BA4  6E04               	movwf	(i2___fladd@b+3)^0,c
 23214   001BA6                     i2l5208:
 23215   001BA6  5008               	movf	(i2___fladd@a+3)^0,w,c
 23216   001BA8  0B80               	andlw	128
 23217   001BAA  6E0E               	movwf	i2___fladd@aexp^0,c
 23218   001BAC  500D               	movf	i2___fladd@signs^0,w,c
 23219   001BAE  180E               	xorwf	i2___fladd@aexp^0,w,c
 23220   001BB0  B4D8               	btfsc	status,2,c
 23221   001BB2  EFDD  F00D         	goto	i2u457_41
 23222   001BB6  EFDF  F00D         	goto	i2u457_40
 23223   001BBA                     i2u457_41:
 23224   001BBA  EFE0  F00D         	goto	i2l5214
 23225   001BBE                     i2u457_40:
 23226   001BBE  8C0D               	bsf	i2___fladd@signs^0,6,c
 23227   001BC0                     i2l5214:
 23228   001BC0  5008               	movf	(i2___fladd@a+3)^0,w,c
 23229   001BC2  2408               	addwf	(i2___fladd@a+3)^0,w,c
 23230   001BC4  6E0E               	movwf	i2___fladd@aexp^0,c
 23231   001BC6  AE07               	btfss	(i2___fladd@a+2)^0,7,c
 23232   001BC8  EFE8  F00D         	goto	i2u458_41
 23233   001BCC  EFEA  F00D         	goto	i2u458_40
 23234   001BD0                     i2u458_41:
 23235   001BD0  EFEB  F00D         	goto	i2l5220
 23236   001BD4                     i2u458_40:
 23237   001BD4  800E               	bsf	i2___fladd@aexp^0,0,c
 23238   001BD6                     i2l5220:
 23239   001BD6  500E               	movf	i2___fladd@aexp^0,w,c
 23240   001BD8  B4D8               	btfsc	status,2,c
 23241   001BDA  EFF1  F00D         	goto	i2u459_41
 23242   001BDE  EFF3  F00D         	goto	i2u459_40
 23243   001BE2                     i2u459_41:
 23244   001BE2  EF07  F00E         	goto	i2l5230
 23245   001BE6                     i2u459_40:
 23246   001BE6  280E               	incf	i2___fladd@aexp^0,w,c
 23247   001BE8  A4D8               	btfss	status,2,c
 23248   001BEA  EFF9  F00D         	goto	i2u460_41
 23249   001BEE  EFFB  F00D         	goto	i2u460_40
 23250   001BF2                     i2u460_41:
 23251   001BF2  EF03  F00E         	goto	i2l5226
 23252   001BF6                     i2u460_40:
 23253   001BF6  0E00               	movlw	0
 23254   001BF8  6E05               	movwf	i2___fladd@a^0,c
 23255   001BFA  0E00               	movlw	0
 23256   001BFC  6E06               	movwf	(i2___fladd@a+1)^0,c
 23257   001BFE  0E00               	movlw	0
 23258   001C00  6E07               	movwf	(i2___fladd@a+2)^0,c
 23259   001C02  0E00               	movlw	0
 23260   001C04  6E08               	movwf	(i2___fladd@a+3)^0,c
 23261   001C06                     i2l5226:
 23262   001C06  8E07               	bsf	(i2___fladd@a+2)^0,7,c
 23263   001C08  6A08               	clrf	(i2___fladd@a+3)^0,c
 23264   001C0A  EF0F  F00E         	goto	i2l5232
 23265   001C0E                     i2l5230:
 23266   001C0E  0E00               	movlw	0
 23267   001C10  6E05               	movwf	i2___fladd@a^0,c
 23268   001C12  0E00               	movlw	0
 23269   001C14  6E06               	movwf	(i2___fladd@a+1)^0,c
 23270   001C16  0E00               	movlw	0
 23271   001C18  6E07               	movwf	(i2___fladd@a+2)^0,c
 23272   001C1A  0E00               	movlw	0
 23273   001C1C  6E08               	movwf	(i2___fladd@a+3)^0,c
 23274   001C1E                     i2l5232:
 23275   001C1E  500F               	movf	i2___fladd@bexp^0,w,c
 23276   001C20  5C0E               	subwf	i2___fladd@aexp^0,w,c
 23277   001C22  B0D8               	btfsc	status,0,c
 23278   001C24  EF16  F00E         	goto	i2u461_41
 23279   001C28  EF18  F00E         	goto	i2u461_40
 23280   001C2C                     i2u461_41:
 23281   001C2C  EF3F  F00E         	goto	i2l5268
 23282   001C30                     i2u461_40:
 23283   001C30  AC0D               	btfss	i2___fladd@signs^0,6,c
 23284   001C32  EF1D  F00E         	goto	i2u462_41
 23285   001C36  EF1F  F00E         	goto	i2u462_40
 23286   001C3A                     i2u462_41:
 23287   001C3A  EF21  F00E         	goto	i2l5238
 23288   001C3E                     i2u462_40:
 23289   001C3E  0E80               	movlw	128
 23290   001C40  1A0D               	xorwf	i2___fladd@signs^0,f,c
 23291   001C42                     i2l5238:
 23292   001C42  C00F  F010         	movff	i2___fladd@bexp,i2___fladd@grs
 23293   001C46  C00E  F00F         	movff	i2___fladd@aexp,i2___fladd@bexp
 23294   001C4A  C010  F00E         	movff	i2___fladd@grs,i2___fladd@aexp
 23295   001C4E  C001  F010         	movff	i2___fladd@b,i2___fladd@grs
 23296   001C52  C005  F001         	movff	i2___fladd@a,i2___fladd@b
 23297   001C56  C010  F005         	movff	i2___fladd@grs,i2___fladd@a
 23298   001C5A  C002  F010         	movff	i2___fladd@b+1,i2___fladd@grs
 23299   001C5E  C006  F002         	movff	i2___fladd@a+1,i2___fladd@b+1
 23300   001C62  C010  F006         	movff	i2___fladd@grs,i2___fladd@a+1
 23301   001C66  C003  F010         	movff	i2___fladd@b+2,i2___fladd@grs
 23302   001C6A  C007  F003         	movff	i2___fladd@a+2,i2___fladd@b+2
 23303   001C6E  C010  F007         	movff	i2___fladd@grs,i2___fladd@a+2
 23304   001C72  C004  F010         	movff	i2___fladd@b+3,i2___fladd@grs
 23305   001C76  C008  F004         	movff	i2___fladd@a+3,i2___fladd@b+3
 23306   001C7A  C010  F008         	movff	i2___fladd@grs,i2___fladd@a+3
 23307   001C7E                     i2l5268:
 23308   001C7E  6A10               	clrf	i2___fladd@grs^0,c
 23309   001C80  500F               	movf	i2___fladd@bexp^0,w,c
 23310   001C82  C00E  F009         	movff	i2___fladd@aexp,??i2___fladd
 23311   001C86  6A0A               	clrf	(??i2___fladd+1)^0,c
 23312   001C88  5E09               	subwf	??i2___fladd^0,f,c
 23313   001C8A  0E00               	movlw	0
 23314   001C8C  5A0A               	subwfb	(??i2___fladd+1)^0,f,c
 23315   001C8E  BE0A               	btfsc	(??i2___fladd+1)^0,7,c
 23316   001C90  EF53  F00E         	goto	i2u463_41
 23317   001C94  500A               	movf	(??i2___fladd+1)^0,w,c
 23318   001C96  E109               	bnz	i2u463_40
 23319   001C98  0E1A               	movlw	26
 23320   001C9A  5C09               	subwf	??i2___fladd^0,w,c
 23321   001C9C  A0D8               	btfss	status,0,c
 23322   001C9E  EF53  F00E         	goto	i2u463_41
 23323   001CA2  EF55  F00E         	goto	i2u463_40
 23324   001CA6                     i2u463_41:
 23325   001CA6  EF8C  F00E         	goto	i2l1410
 23326   001CAA                     i2u463_40:
 23327   001CAA  5001               	movf	i2___fladd@b^0,w,c
 23328   001CAC  1002               	iorwf	(i2___fladd@b+1)^0,w,c
 23329   001CAE  1003               	iorwf	(i2___fladd@b+2)^0,w,c
 23330   001CB0  1004               	iorwf	(i2___fladd@b+3)^0,w,c
 23331   001CB2  A4D8               	btfss	status,2,c
 23332   001CB4  EF5E  F00E         	goto	i2u464_41
 23333   001CB8  EF61  F00E         	goto	i2u464_40
 23334   001CBC                     i2u464_41:
 23335   001CBC  0E01               	movlw	1
 23336   001CBE  EF62  F00E         	goto	i2u465_40
 23337   001CC2                     i2u464_40:
 23338   001CC2  0E00               	movlw	0
 23339   001CC4                     i2u465_40:
 23340   001CC4  6E10               	movwf	i2___fladd@grs^0,c
 23341   001CC6  0E00               	movlw	0
 23342   001CC8  6E01               	movwf	i2___fladd@b^0,c
 23343   001CCA  0E00               	movlw	0
 23344   001CCC  6E02               	movwf	(i2___fladd@b+1)^0,c
 23345   001CCE  0E00               	movlw	0
 23346   001CD0  6E03               	movwf	(i2___fladd@b+2)^0,c
 23347   001CD2  0E00               	movlw	0
 23348   001CD4  6E04               	movwf	(i2___fladd@b+3)^0,c
 23349   001CD6  C00E  F00F         	movff	i2___fladd@aexp,i2___fladd@bexp
 23350   001CDA  EF95  F00E         	goto	i2l1409
 23351   001CDE                     i2l1411:
 23352   001CDE  A010               	btfss	i2___fladd@grs^0,0,c
 23353   001CE0  EF74  F00E         	goto	i2u466_41
 23354   001CE4  EF76  F00E         	goto	i2u466_40
 23355   001CE8                     i2u466_41:
 23356   001CE8  EF7C  F00E         	goto	i2l5278
 23357   001CEC                     i2u466_40:
 23358   001CEC  90D8               	bcf	status,0,c
 23359   001CEE  3010               	rrcf	i2___fladd@grs^0,w,c
 23360   001CF0  0901               	iorlw	1
 23361   001CF2  6E10               	movwf	i2___fladd@grs^0,c
 23362   001CF4  EF7E  F00E         	goto	i2l5280
 23363   001CF8                     i2l5278:
 23364   001CF8  90D8               	bcf	status,0,c
 23365   001CFA  3210               	rrcf	i2___fladd@grs^0,f,c
 23366   001CFC                     i2l5280:
 23367   001CFC  A001               	btfss	i2___fladd@b^0,0,c
 23368   001CFE  EF83  F00E         	goto	i2u467_41
 23369   001D02  EF85  F00E         	goto	i2u467_40
 23370   001D06                     i2u467_41:
 23371   001D06  EF86  F00E         	goto	i2l5284
 23372   001D0A                     i2u467_40:
 23373   001D0A  8E10               	bsf	i2___fladd@grs^0,7,c
 23374   001D0C                     i2l5284:
 23375   001D0C  3404               	rlcf	(i2___fladd@b+3)^0,w,c
 23376   001D0E  3204               	rrcf	(i2___fladd@b+3)^0,f,c
 23377   001D10  3203               	rrcf	(i2___fladd@b+2)^0,f,c
 23378   001D12  3202               	rrcf	(i2___fladd@b+1)^0,f,c
 23379   001D14  3201               	rrcf	i2___fladd@b^0,f,c
 23380   001D16  2A0F               	incf	i2___fladd@bexp^0,f,c
 23381   001D18                     i2l1410:
 23382   001D18  500E               	movf	i2___fladd@aexp^0,w,c
 23383   001D1A  5C0F               	subwf	i2___fladd@bexp^0,w,c
 23384   001D1C  A0D8               	btfss	status,0,c
 23385   001D1E  EF93  F00E         	goto	i2u468_41
 23386   001D22  EF95  F00E         	goto	i2u468_40
 23387   001D26                     i2u468_41:
 23388   001D26  EF6F  F00E         	goto	i2l1411
 23389   001D2A                     i2u468_40:
 23390   001D2A                     i2l1409:
 23391   001D2A  BC0D               	btfsc	i2___fladd@signs^0,6,c
 23392   001D2C  EF9A  F00E         	goto	i2u469_41
 23393   001D30  EF9C  F00E         	goto	i2u469_40
 23394   001D34                     i2u469_41:
 23395   001D34  EFDC  F00E         	goto	i2l5312
 23396   001D38                     i2u469_40:
 23397   001D38  500F               	movf	i2___fladd@bexp^0,w,c
 23398   001D3A  A4D8               	btfss	status,2,c
 23399   001D3C  EFA2  F00E         	goto	i2u470_41
 23400   001D40  EFA4  F00E         	goto	i2u470_40
 23401   001D44                     i2u470_41:
 23402   001D44  EFAE  F00E         	goto	i2l5294
 23403   001D48                     i2u470_40:
 23404   001D48  0E00               	movlw	0
 23405   001D4A  6E01               	movwf	?i2___fladd^0,c
 23406   001D4C  0E00               	movlw	0
 23407   001D4E  6E02               	movwf	(?i2___fladd+1)^0,c
 23408   001D50  0E00               	movlw	0
 23409   001D52  6E03               	movwf	(?i2___fladd+2)^0,c
 23410   001D54  0E00               	movlw	0
 23411   001D56  6E04               	movwf	(?i2___fladd+3)^0,c
 23412   001D58  EFFB  F00F         	goto	i2l1418
 23413   001D5C                     i2l5294:
 23414   001D5C  5005               	movf	i2___fladd@a^0,w,c
 23415   001D5E  2601               	addwf	i2___fladd@b^0,f,c
 23416   001D60  5006               	movf	(i2___fladd@a+1)^0,w,c
 23417   001D62  2202               	addwfc	(i2___fladd@b+1)^0,f,c
 23418   001D64  5007               	movf	(i2___fladd@a+2)^0,w,c
 23419   001D66  2203               	addwfc	(i2___fladd@b+2)^0,f,c
 23420   001D68  5008               	movf	(i2___fladd@a+3)^0,w,c
 23421   001D6A  2204               	addwfc	(i2___fladd@b+3)^0,f,c
 23422   001D6C  A004               	btfss	(i2___fladd@b+3)^0,0,c
 23423   001D6E  EFBB  F00E         	goto	i2u471_41
 23424   001D72  EFBD  F00E         	goto	i2u471_40
 23425   001D76                     i2u471_41:
 23426   001D76  EF69  F00F         	goto	i2l1423
 23427   001D7A                     i2u471_40:
 23428   001D7A  A010               	btfss	i2___fladd@grs^0,0,c
 23429   001D7C  EFC2  F00E         	goto	i2u472_41
 23430   001D80  EFC4  F00E         	goto	i2u472_40
 23431   001D84                     i2u472_41:
 23432   001D84  EFCA  F00E         	goto	i2l5302
 23433   001D88                     i2u472_40:
 23434   001D88  90D8               	bcf	status,0,c
 23435   001D8A  3010               	rrcf	i2___fladd@grs^0,w,c
 23436   001D8C  0901               	iorlw	1
 23437   001D8E  6E10               	movwf	i2___fladd@grs^0,c
 23438   001D90  EFCC  F00E         	goto	i2l5304
 23439   001D94                     i2l5302:
 23440   001D94  90D8               	bcf	status,0,c
 23441   001D96  3210               	rrcf	i2___fladd@grs^0,f,c
 23442   001D98                     i2l5304:
 23443   001D98  A001               	btfss	i2___fladd@b^0,0,c
 23444   001D9A  EFD1  F00E         	goto	i2u473_41
 23445   001D9E  EFD3  F00E         	goto	i2u473_40
 23446   001DA2                     i2u473_41:
 23447   001DA2  EFD4  F00E         	goto	i2l5308
 23448   001DA6                     i2u473_40:
 23449   001DA6  8E10               	bsf	i2___fladd@grs^0,7,c
 23450   001DA8                     i2l5308:
 23451   001DA8  3404               	rlcf	(i2___fladd@b+3)^0,w,c
 23452   001DAA  3204               	rrcf	(i2___fladd@b+3)^0,f,c
 23453   001DAC  3203               	rrcf	(i2___fladd@b+2)^0,f,c
 23454   001DAE  3202               	rrcf	(i2___fladd@b+1)^0,f,c
 23455   001DB0  3201               	rrcf	i2___fladd@b^0,f,c
 23456   001DB2  2A0F               	incf	i2___fladd@bexp^0,f,c
 23457   001DB4  EF69  F00F         	goto	i2l1423
 23458   001DB8                     i2l5312:
 23459   001DB8  5005               	movf	i2___fladd@a^0,w,c
 23460   001DBA  5C01               	subwf	i2___fladd@b^0,w,c
 23461   001DBC  5006               	movf	(i2___fladd@a+1)^0,w,c
 23462   001DBE  5802               	subwfb	(i2___fladd@b+1)^0,w,c
 23463   001DC0  5007               	movf	(i2___fladd@a+2)^0,w,c
 23464   001DC2  5803               	subwfb	(i2___fladd@b+2)^0,w,c
 23465   001DC4  5004               	movf	(i2___fladd@b+3)^0,w,c
 23466   001DC6  0A80               	xorlw	128
 23467   001DC8  6E09               	movwf	??i2___fladd^0,c
 23468   001DCA  5008               	movf	(i2___fladd@a+3)^0,w,c
 23469   001DCC  0A80               	xorlw	128
 23470   001DCE  5809               	subwfb	??i2___fladd^0,w,c
 23471   001DD0  B0D8               	btfsc	status,0,c
 23472   001DD2  EFED  F00E         	goto	i2u474_41
 23473   001DD6  EFEF  F00E         	goto	i2u474_40
 23474   001DDA                     i2u474_41:
 23475   001DDA  EF1A  F00F         	goto	i2l5322
 23476   001DDE                     i2u474_40:
 23477   001DDE  5001               	movf	i2___fladd@b^0,w,c
 23478   001DE0  5C05               	subwf	i2___fladd@a^0,w,c
 23479   001DE2  6E09               	movwf	??i2___fladd^0,c
 23480   001DE4  5002               	movf	(i2___fladd@b+1)^0,w,c
 23481   001DE6  5806               	subwfb	(i2___fladd@a+1)^0,w,c
 23482   001DE8  6E0A               	movwf	(??i2___fladd+1)^0,c
 23483   001DEA  5003               	movf	(i2___fladd@b+2)^0,w,c
 23484   001DEC  5807               	subwfb	(i2___fladd@a+2)^0,w,c
 23485   001DEE  6E0B               	movwf	(??i2___fladd+2)^0,c
 23486   001DF0  5004               	movf	(i2___fladd@b+3)^0,w,c
 23487   001DF2  5808               	subwfb	(i2___fladd@a+3)^0,w,c
 23488   001DF4  6E0C               	movwf	(??i2___fladd+3)^0,c
 23489   001DF6  0EFF               	movlw	255
 23490   001DF8  2409               	addwf	??i2___fladd^0,w,c
 23491   001DFA  6E01               	movwf	i2___fladd@b^0,c
 23492   001DFC  0EFF               	movlw	255
 23493   001DFE  200A               	addwfc	(??i2___fladd+1)^0,w,c
 23494   001E00  6E02               	movwf	(i2___fladd@b+1)^0,c
 23495   001E02  0EFF               	movlw	255
 23496   001E04  200B               	addwfc	(??i2___fladd+2)^0,w,c
 23497   001E06  6E03               	movwf	(i2___fladd@b+2)^0,c
 23498   001E08  0EFF               	movlw	255
 23499   001E0A  200C               	addwfc	(??i2___fladd+3)^0,w,c
 23500   001E0C  6E04               	movwf	(i2___fladd@b+3)^0,c
 23501   001E0E  0E80               	movlw	128
 23502   001E10  1A0D               	xorwf	i2___fladd@signs^0,f,c
 23503   001E12  6C10               	negf	i2___fladd@grs^0,c
 23504   001E14  5010               	movf	i2___fladd@grs^0,w,c
 23505   001E16  A4D8               	btfss	status,2,c
 23506   001E18  EF10  F00F         	goto	i2u475_41
 23507   001E1C  EF12  F00F         	goto	i2u475_40
 23508   001E20                     i2u475_41:
 23509   001E20  EF22  F00F         	goto	i2l1426
 23510   001E24                     i2u475_40:
 23511   001E24  0E01               	movlw	1
 23512   001E26  2601               	addwf	i2___fladd@b^0,f,c
 23513   001E28  0E00               	movlw	0
 23514   001E2A  2202               	addwfc	(i2___fladd@b+1)^0,f,c
 23515   001E2C  2203               	addwfc	(i2___fladd@b+2)^0,f,c
 23516   001E2E  2204               	addwfc	(i2___fladd@b+3)^0,f,c
 23517   001E30  EF22  F00F         	goto	i2l1426
 23518   001E34                     i2l5322:
 23519   001E34  5005               	movf	i2___fladd@a^0,w,c
 23520   001E36  5E01               	subwf	i2___fladd@b^0,f,c
 23521   001E38  5006               	movf	(i2___fladd@a+1)^0,w,c
 23522   001E3A  5A02               	subwfb	(i2___fladd@b+1)^0,f,c
 23523   001E3C  5007               	movf	(i2___fladd@a+2)^0,w,c
 23524   001E3E  5A03               	subwfb	(i2___fladd@b+2)^0,f,c
 23525   001E40  5008               	movf	(i2___fladd@a+3)^0,w,c
 23526   001E42  5A04               	subwfb	(i2___fladd@b+3)^0,f,c
 23527   001E44                     i2l1426:
 23528   001E44  5001               	movf	i2___fladd@b^0,w,c
 23529   001E46  1002               	iorwf	(i2___fladd@b+1)^0,w,c
 23530   001E48  1003               	iorwf	(i2___fladd@b+2)^0,w,c
 23531   001E4A  1004               	iorwf	(i2___fladd@b+3)^0,w,c
 23532   001E4C  A4D8               	btfss	status,2,c
 23533   001E4E  EF2B  F00F         	goto	i2u476_41
 23534   001E52  EF2D  F00F         	goto	i2u476_40
 23535   001E56                     i2u476_41:
 23536   001E56  EF62  F00F         	goto	i2l5346
 23537   001E5A                     i2u476_40:
 23538   001E5A  5010               	movf	i2___fladd@grs^0,w,c
 23539   001E5C  A4D8               	btfss	status,2,c
 23540   001E5E  EF33  F00F         	goto	i2u477_41
 23541   001E62  EF35  F00F         	goto	i2u477_40
 23542   001E66                     i2u477_41:
 23543   001E66  EF62  F00F         	goto	i2l5346
 23544   001E6A                     i2u477_40:
 23545   001E6A  0E00               	movlw	0
 23546   001E6C  6E01               	movwf	?i2___fladd^0,c
 23547   001E6E  0E00               	movlw	0
 23548   001E70  6E02               	movwf	(?i2___fladd+1)^0,c
 23549   001E72  0E00               	movlw	0
 23550   001E74  6E03               	movwf	(?i2___fladd+2)^0,c
 23551   001E76  0E00               	movlw	0
 23552   001E78  6E04               	movwf	(?i2___fladd+3)^0,c
 23553   001E7A  EFFB  F00F         	goto	i2l1418
 23554   001E7E                     i2l5330:
 23555   001E7E  90D8               	bcf	status,0,c
 23556   001E80  3601               	rlcf	i2___fladd@b^0,f,c
 23557   001E82  3602               	rlcf	(i2___fladd@b+1)^0,f,c
 23558   001E84  3603               	rlcf	(i2___fladd@b+2)^0,f,c
 23559   001E86  3604               	rlcf	(i2___fladd@b+3)^0,f,c
 23560   001E88  AE10               	btfss	i2___fladd@grs^0,7,c
 23561   001E8A  EF49  F00F         	goto	i2u478_41
 23562   001E8E  EF4B  F00F         	goto	i2u478_40
 23563   001E92                     i2u478_41:
 23564   001E92  EF4C  F00F         	goto	i2l5336
 23565   001E96                     i2u478_40:
 23566   001E96  8001               	bsf	i2___fladd@b^0,0,c
 23567   001E98                     i2l5336:
 23568   001E98  A010               	btfss	i2___fladd@grs^0,0,c
 23569   001E9A  EF51  F00F         	goto	i2u479_41
 23570   001E9E  EF53  F00F         	goto	i2u479_40
 23571   001EA2                     i2u479_41:
 23572   001EA2  EF57  F00F         	goto	i2l5340
 23573   001EA6                     i2u479_40:
 23574   001EA6  80D8               	bsf	status,0,c
 23575   001EA8  3610               	rlcf	i2___fladd@grs^0,f,c
 23576   001EAA  EF59  F00F         	goto	i2l5342
 23577   001EAE                     i2l5340:
 23578   001EAE  90D8               	bcf	status,0,c
 23579   001EB0  3610               	rlcf	i2___fladd@grs^0,f,c
 23580   001EB2                     i2l5342:
 23581   001EB2  500F               	movf	i2___fladd@bexp^0,w,c
 23582   001EB4  B4D8               	btfsc	status,2,c
 23583   001EB6  EF5F  F00F         	goto	i2u480_41
 23584   001EBA  EF61  F00F         	goto	i2u480_40
 23585   001EBE                     i2u480_41:
 23586   001EBE  EF62  F00F         	goto	i2l5346
 23587   001EC2                     i2u480_40:
 23588   001EC2  060F               	decf	i2___fladd@bexp^0,f,c
 23589   001EC4                     i2l5346:
 23590   001EC4  AE03               	btfss	(i2___fladd@b+2)^0,7,c
 23591   001EC6  EF67  F00F         	goto	i2u481_41
 23592   001ECA  EF69  F00F         	goto	i2u481_40
 23593   001ECE                     i2u481_41:
 23594   001ECE  EF3F  F00F         	goto	i2l5330
 23595   001ED2                     i2u481_40:
 23596   001ED2                     i2l1423:
 23597   001ED2  6A0E               	clrf	i2___fladd@aexp^0,c
 23598   001ED4  AE10               	btfss	i2___fladd@grs^0,7,c
 23599   001ED6  EF6F  F00F         	goto	i2u482_41
 23600   001EDA  EF71  F00F         	goto	i2u482_40
 23601   001EDE                     i2u482_41:
 23602   001EDE  EF89  F00F         	goto	i2l1435
 23603   001EE2                     i2u482_40:
 23604   001EE2  C010  F009         	movff	i2___fladd@grs,??i2___fladd
 23605   001EE6  0E7F               	movlw	127
 23606   001EE8  1609               	andwf	??i2___fladd^0,f,c
 23607   001EEA  B4D8               	btfsc	status,2,c
 23608   001EEC  EF7A  F00F         	goto	i2u483_41
 23609   001EF0  EF7C  F00F         	goto	i2u483_40
 23610   001EF4                     i2u483_41:
 23611   001EF4  EF80  F00F         	goto	i2l1436
 23612   001EF8                     i2u483_40:
 23613   001EF8                     i2l5350:
 23614   001EF8  0E01               	movlw	1
 23615   001EFA  6E0E               	movwf	i2___fladd@aexp^0,c
 23616   001EFC  EF89  F00F         	goto	i2l1435
 23617   001F00                     i2l1436:
 23618   001F00  A001               	btfss	i2___fladd@b^0,0,c
 23619   001F02  EF85  F00F         	goto	i2u484_41
 23620   001F06  EF87  F00F         	goto	i2u484_40
 23621   001F0A                     i2u484_41:
 23622   001F0A  EF89  F00F         	goto	i2l1435
 23623   001F0E                     i2u484_40:
 23624   001F0E  EF7C  F00F         	goto	i2l5350
 23625   001F12                     i2l1435:
 23626   001F12  500E               	movf	i2___fladd@aexp^0,w,c
 23627   001F14  B4D8               	btfsc	status,2,c
 23628   001F16  EF8F  F00F         	goto	i2u485_41
 23629   001F1A  EF91  F00F         	goto	i2u485_40
 23630   001F1E                     i2u485_41:
 23631   001F1E  EFBC  F00F         	goto	i2l5362
 23632   001F22                     i2u485_40:
 23633   001F22  0E01               	movlw	1
 23634   001F24  2601               	addwf	i2___fladd@b^0,f,c
 23635   001F26  0E00               	movlw	0
 23636   001F28  2202               	addwfc	(i2___fladd@b+1)^0,f,c
 23637   001F2A  2203               	addwfc	(i2___fladd@b+2)^0,f,c
 23638   001F2C  2204               	addwfc	(i2___fladd@b+3)^0,f,c
 23639   001F2E  A004               	btfss	(i2___fladd@b+3)^0,0,c
 23640   001F30  EF9C  F00F         	goto	i2u486_41
 23641   001F34  EF9E  F00F         	goto	i2u486_40
 23642   001F38                     i2u486_41:
 23643   001F38  EFBC  F00F         	goto	i2l5362
 23644   001F3C                     i2u486_40:
 23645   001F3C  C001  F009         	movff	i2___fladd@b,??i2___fladd
 23646   001F40  C002  F00A         	movff	i2___fladd@b+1,??i2___fladd+1
 23647   001F44  C003  F00B         	movff	i2___fladd@b+2,??i2___fladd+2
 23648   001F48  C004  F00C         	movff	i2___fladd@b+3,??i2___fladd+3
 23649   001F4C  340C               	rlcf	(??i2___fladd+3)^0,w,c
 23650   001F4E  320C               	rrcf	(??i2___fladd+3)^0,f,c
 23651   001F50  320B               	rrcf	(??i2___fladd+2)^0,f,c
 23652   001F52  320A               	rrcf	(??i2___fladd+1)^0,f,c
 23653   001F54  3209               	rrcf	??i2___fladd^0,f,c
 23654   001F56  C009  F001         	movff	??i2___fladd,i2___fladd@b
 23655   001F5A  C00A  F002         	movff	??i2___fladd+1,i2___fladd@b+1
 23656   001F5E  C00B  F003         	movff	??i2___fladd+2,i2___fladd@b+2
 23657   001F62  C00C  F004         	movff	??i2___fladd+3,i2___fladd@b+3
 23658   001F66  280F               	incf	i2___fladd@bexp^0,w,c
 23659   001F68  B4D8               	btfsc	status,2,c
 23660   001F6A  EFB9  F00F         	goto	i2u487_41
 23661   001F6E  EFBB  F00F         	goto	i2u487_40
 23662   001F72                     i2u487_41:
 23663   001F72  EFBC  F00F         	goto	i2l5362
 23664   001F76                     i2u487_40:
 23665   001F76  2A0F               	incf	i2___fladd@bexp^0,f,c
 23666   001F78                     i2l5362:
 23667   001F78  280F               	incf	i2___fladd@bexp^0,w,c
 23668   001F7A  B4D8               	btfsc	status,2,c
 23669   001F7C  EFC2  F00F         	goto	i2u488_41
 23670   001F80  EFC4  F00F         	goto	i2u488_40
 23671   001F84                     i2u488_41:
 23672   001F84  EFCC  F00F         	goto	i2l5366
 23673   001F88                     i2u488_40:
 23674   001F88  500F               	movf	i2___fladd@bexp^0,w,c
 23675   001F8A  A4D8               	btfss	status,2,c
 23676   001F8C  EFCA  F00F         	goto	i2u489_41
 23677   001F90  EFCC  F00F         	goto	i2u489_40
 23678   001F94                     i2u489_41:
 23679   001F94  EFDD  F00F         	goto	i2l1442
 23680   001F98                     i2u489_40:
 23681   001F98                     i2l5366:
 23682   001F98  0E00               	movlw	0
 23683   001F9A  6E01               	movwf	i2___fladd@b^0,c
 23684   001F9C  0E00               	movlw	0
 23685   001F9E  6E02               	movwf	(i2___fladd@b+1)^0,c
 23686   001FA0  0E00               	movlw	0
 23687   001FA2  6E03               	movwf	(i2___fladd@b+2)^0,c
 23688   001FA4  0E00               	movlw	0
 23689   001FA6  6E04               	movwf	(i2___fladd@b+3)^0,c
 23690   001FA8  500F               	movf	i2___fladd@bexp^0,w,c
 23691   001FAA  A4D8               	btfss	status,2,c
 23692   001FAC  EFDA  F00F         	goto	i2u490_41
 23693   001FB0  EFDC  F00F         	goto	i2u490_40
 23694   001FB4                     i2u490_41:
 23695   001FB4  EFDD  F00F         	goto	i2l1442
 23696   001FB8                     i2u490_40:
 23697   001FB8  6A0D               	clrf	i2___fladd@signs^0,c
 23698   001FBA                     i2l1442:
 23699   001FBA  A00F               	btfss	i2___fladd@bexp^0,0,c
 23700   001FBC  EFE2  F00F         	goto	i2u491_41
 23701   001FC0  EFE4  F00F         	goto	i2u491_40
 23702   001FC4                     i2u491_41:
 23703   001FC4  EFE7  F00F         	goto	i2l5372
 23704   001FC8                     i2u491_40:
 23705   001FC8  8E03               	bsf	(i2___fladd@b+2)^0,7,c
 23706   001FCA  EFE8  F00F         	goto	i2l5374
 23707   001FCE                     i2l5372:
 23708   001FCE  9E03               	bcf	(i2___fladd@b+2)^0,7,c
 23709   001FD0                     i2l5374:
 23710   001FD0  90D8               	bcf	status,0,c
 23711   001FD2  300F               	rrcf	i2___fladd@bexp^0,w,c
 23712   001FD4  6E04               	movwf	(i2___fladd@b+3)^0,c
 23713   001FD6  AE0D               	btfss	i2___fladd@signs^0,7,c
 23714   001FD8  EFF0  F00F         	goto	i2u492_41
 23715   001FDC  EFF2  F00F         	goto	i2u492_40
 23716   001FE0                     i2u492_41:
 23717   001FE0  EFF3  F00F         	goto	i2l5380
 23718   001FE4                     i2u492_40:
 23719   001FE4  8E04               	bsf	(i2___fladd@b+3)^0,7,c
 23720   001FE6                     i2l5380:
 23721   001FE6  C001  F001         	movff	i2___fladd@b,?i2___fladd
 23722   001FEA  C002  F002         	movff	i2___fladd@b+1,?i2___fladd+1
 23723   001FEE  C003  F003         	movff	i2___fladd@b+2,?i2___fladd+2
 23724   001FF2  C004  F004         	movff	i2___fladd@b+3,?i2___fladd+3
 23725   001FF6                     i2l1418:
 23726   001FF6  0012               	return		;funcret
 23727   001FF8                     __end_ofi2___fladd:
 23728                           	callstack 0
 23729                           
 23730 ;; *************** function i2___flneg *****************
 23731 ;; Defined at:
 23732 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\flneg.c"
 23733 ;; Parameters:    Size  Location     Type
 23734 ;;  f1              4    0[COMRAM] unsigned char 
 23735 ;; Auto vars:     Size  Location     Type
 23736 ;;		None
 23737 ;; Return value:  Size  Location     Type
 23738 ;;                  4    0[COMRAM] unsigned char 
 23739 ;; Registers used:
 23740 ;;		wreg, status,2, status,0
 23741 ;; Tracked objects:
 23742 ;;		On entry : 0/0
 23743 ;;		On exit  : 0/0
 23744 ;;		Unchanged: 0/0
 23745 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23746 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23747 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23748 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23749 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23750 ;;Total ram usage:        4 bytes
 23751 ;; Hardware stack levels used: 1
 23752 ;; This function calls:
 23753 ;;		Nothing
 23754 ;; This function is called by:
 23755 ;;		i2_efgtoa
 23756 ;; This function uses a non-reentrant model
 23757 ;;
 23758                           
 23759                           	psect	text92
 23760   006314                     __ptext92:
 23761                           	callstack 0
 23762   006314                     i2___flneg:
 23763                           	callstack 12
 23764   006314  5001               	movf	i2___flneg@f1^0,w,c
 23765   006316  1002               	iorwf	(i2___flneg@f1+1)^0,w,c
 23766   006318  1003               	iorwf	(i2___flneg@f1+2)^0,w,c
 23767   00631A  1004               	iorwf	(i2___flneg@f1+3)^0,w,c
 23768   00631C  B4D8               	btfsc	status,2,c
 23769   00631E  EF93  F031         	goto	i2u515_41
 23770   006322  EF95  F031         	goto	i2u515_40
 23771   006326                     i2u515_41:
 23772   006326  EF9D  F031         	goto	i2l5524
 23773   00632A                     i2u515_40:
 23774   00632A  0E00               	movlw	0
 23775   00632C  1A01               	xorwf	i2___flneg@f1^0,f,c
 23776   00632E  0E00               	movlw	0
 23777   006330  1A02               	xorwf	(i2___flneg@f1+1)^0,f,c
 23778   006332  0E00               	movlw	0
 23779   006334  1A03               	xorwf	(i2___flneg@f1+2)^0,f,c
 23780   006336  0E80               	movlw	128
 23781   006338  1A04               	xorwf	(i2___flneg@f1+3)^0,f,c
 23782   00633A                     i2l5524:
 23783   00633A  C001  F001         	movff	i2___flneg@f1,?i2___flneg
 23784   00633E  C002  F002         	movff	i2___flneg@f1+1,?i2___flneg+1
 23785   006342  C003  F003         	movff	i2___flneg@f1+2,?i2___flneg+2
 23786   006346  C004  F004         	movff	i2___flneg@f1+3,?i2___flneg+3
 23787   00634A  0012               	return		;funcret
 23788   00634C                     __end_ofi2___flneg:
 23789                           	callstack 0
 23790                           
 23791 ;; *************** function i2___flge *****************
 23792 ;; Defined at:
 23793 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\flge.c"
 23794 ;; Parameters:    Size  Location     Type
 23795 ;;  ff1             4   39[COMRAM] unsigned char 
 23796 ;;  ff2             4   43[COMRAM] unsigned char 
 23797 ;; Auto vars:     Size  Location     Type
 23798 ;;		None
 23799 ;; Return value:  Size  Location     Type
 23800 ;;		None               void
 23801 ;; Registers used:
 23802 ;;		wreg, status,2, status,0
 23803 ;; Tracked objects:
 23804 ;;		On entry : 0/0
 23805 ;;		On exit  : 0/0
 23806 ;;		Unchanged: 0/0
 23807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23808 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23809 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23810 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23811 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23812 ;;Total ram usage:       12 bytes
 23813 ;; Hardware stack levels used: 1
 23814 ;; This function calls:
 23815 ;;		Nothing
 23816 ;; This function is called by:
 23817 ;;		i2_efgtoa
 23818 ;; This function uses a non-reentrant model
 23819 ;;
 23820                           
 23821                           	psect	text93
 23822   004890                     __ptext93:
 23823                           	callstack 0
 23824   004890                     i2___flge:
 23825                           	callstack 12
 23826   004890  0E00               	movlw	0
 23827   004892  1428               	andwf	i2___flge@ff1^0,w,c
 23828   004894  6E30               	movwf	??i2___flge^0,c
 23829   004896  0E00               	movlw	0
 23830   004898  1429               	andwf	(i2___flge@ff1+1)^0,w,c
 23831   00489A  6E31               	movwf	(??i2___flge+1)^0,c
 23832   00489C  0E80               	movlw	128
 23833   00489E  142A               	andwf	(i2___flge@ff1+2)^0,w,c
 23834   0048A0  6E32               	movwf	(??i2___flge+2)^0,c
 23835   0048A2  0E7F               	movlw	127
 23836   0048A4  142B               	andwf	(i2___flge@ff1+3)^0,w,c
 23837   0048A6  6E33               	movwf	(??i2___flge+3)^0,c
 23838   0048A8  5030               	movf	??i2___flge^0,w,c
 23839   0048AA  1031               	iorwf	(??i2___flge+1)^0,w,c
 23840   0048AC  1032               	iorwf	(??i2___flge+2)^0,w,c
 23841   0048AE  1033               	iorwf	(??i2___flge+3)^0,w,c
 23842   0048B0  A4D8               	btfss	status,2,c
 23843   0048B2  EF5D  F024         	goto	i2u510_41
 23844   0048B6  EF5F  F024         	goto	i2u510_40
 23845   0048BA                     i2u510_41:
 23846   0048BA  EF67  F024         	goto	i2l5502
 23847   0048BE                     i2u510_40:
 23848   0048BE  0E00               	movlw	0
 23849   0048C0  6E28               	movwf	i2___flge@ff1^0,c
 23850   0048C2  0E00               	movlw	0
 23851   0048C4  6E29               	movwf	(i2___flge@ff1+1)^0,c
 23852   0048C6  0E00               	movlw	0
 23853   0048C8  6E2A               	movwf	(i2___flge@ff1+2)^0,c
 23854   0048CA  0E00               	movlw	0
 23855   0048CC  6E2B               	movwf	(i2___flge@ff1+3)^0,c
 23856   0048CE                     i2l5502:
 23857   0048CE  0E00               	movlw	0
 23858   0048D0  142C               	andwf	i2___flge@ff2^0,w,c
 23859   0048D2  6E30               	movwf	??i2___flge^0,c
 23860   0048D4  0E00               	movlw	0
 23861   0048D6  142D               	andwf	(i2___flge@ff2+1)^0,w,c
 23862   0048D8  6E31               	movwf	(??i2___flge+1)^0,c
 23863   0048DA  0E80               	movlw	128
 23864   0048DC  142E               	andwf	(i2___flge@ff2+2)^0,w,c
 23865   0048DE  6E32               	movwf	(??i2___flge+2)^0,c
 23866   0048E0  0E7F               	movlw	127
 23867   0048E2  142F               	andwf	(i2___flge@ff2+3)^0,w,c
 23868   0048E4  6E33               	movwf	(??i2___flge+3)^0,c
 23869   0048E6  5030               	movf	??i2___flge^0,w,c
 23870   0048E8  1031               	iorwf	(??i2___flge+1)^0,w,c
 23871   0048EA  1032               	iorwf	(??i2___flge+2)^0,w,c
 23872   0048EC  1033               	iorwf	(??i2___flge+3)^0,w,c
 23873   0048EE  A4D8               	btfss	status,2,c
 23874   0048F0  EF7C  F024         	goto	i2u511_41
 23875   0048F4  EF7E  F024         	goto	i2u511_40
 23876   0048F8                     i2u511_41:
 23877   0048F8  EF86  F024         	goto	i2l5506
 23878   0048FC                     i2u511_40:
 23879   0048FC  0E00               	movlw	0
 23880   0048FE  6E2C               	movwf	i2___flge@ff2^0,c
 23881   004900  0E00               	movlw	0
 23882   004902  6E2D               	movwf	(i2___flge@ff2+1)^0,c
 23883   004904  0E00               	movlw	0
 23884   004906  6E2E               	movwf	(i2___flge@ff2+2)^0,c
 23885   004908  0E00               	movlw	0
 23886   00490A  6E2F               	movwf	(i2___flge@ff2+3)^0,c
 23887   00490C                     i2l5506:
 23888   00490C  AE2B               	btfss	(i2___flge@ff1+3)^0,7,c
 23889   00490E  EF8B  F024         	goto	i2u512_41
 23890   004912  EF8D  F024         	goto	i2u512_40
 23891   004916                     i2u512_41:
 23892   004916  EF96  F024         	goto	i2l5510
 23893   00491A                     i2u512_40:
 23894   00491A  6C28               	negf	i2___flge@ff1^0,c
 23895   00491C  1E29               	comf	(i2___flge@ff1+1)^0,f,c
 23896   00491E  B0D8               	btfsc	status,0,c
 23897   004920  2A29               	incf	(i2___flge@ff1+1)^0,f,c
 23898   004922  1E2A               	comf	(i2___flge@ff1+2)^0,f,c
 23899   004924  B0D8               	btfsc	status,0,c
 23900   004926  2A2A               	incf	(i2___flge@ff1+2)^0,f,c
 23901   004928  0E80               	movlw	128
 23902   00492A  562B               	subfwb	(i2___flge@ff1+3)^0,f,c
 23903   00492C                     i2l5510:
 23904   00492C  AE2F               	btfss	(i2___flge@ff2+3)^0,7,c
 23905   00492E  EF9B  F024         	goto	i2u513_41
 23906   004932  EF9D  F024         	goto	i2u513_40
 23907   004936                     i2u513_41:
 23908   004936  EFA6  F024         	goto	i2l1146
 23909   00493A                     i2u513_40:
 23910   00493A  6C2C               	negf	i2___flge@ff2^0,c
 23911   00493C  1E2D               	comf	(i2___flge@ff2+1)^0,f,c
 23912   00493E  B0D8               	btfsc	status,0,c
 23913   004940  2A2D               	incf	(i2___flge@ff2+1)^0,f,c
 23914   004942  1E2E               	comf	(i2___flge@ff2+2)^0,f,c
 23915   004944  B0D8               	btfsc	status,0,c
 23916   004946  2A2E               	incf	(i2___flge@ff2+2)^0,f,c
 23917   004948  0E80               	movlw	128
 23918   00494A  562F               	subfwb	(i2___flge@ff2+3)^0,f,c
 23919   00494C                     i2l1146:
 23920   00494C  0E00               	movlw	0
 23921   00494E  1A28               	xorwf	i2___flge@ff1^0,f,c
 23922   004950  0E00               	movlw	0
 23923   004952  1A29               	xorwf	(i2___flge@ff1+1)^0,f,c
 23924   004954  0E00               	movlw	0
 23925   004956  1A2A               	xorwf	(i2___flge@ff1+2)^0,f,c
 23926   004958  0E80               	movlw	128
 23927   00495A  1A2B               	xorwf	(i2___flge@ff1+3)^0,f,c
 23928   00495C  0E00               	movlw	0
 23929   00495E  1A2C               	xorwf	i2___flge@ff2^0,f,c
 23930   004960  0E00               	movlw	0
 23931   004962  1A2D               	xorwf	(i2___flge@ff2+1)^0,f,c
 23932   004964  0E00               	movlw	0
 23933   004966  1A2E               	xorwf	(i2___flge@ff2+2)^0,f,c
 23934   004968  0E80               	movlw	128
 23935   00496A  1A2F               	xorwf	(i2___flge@ff2+3)^0,f,c
 23936   00496C  502C               	movf	i2___flge@ff2^0,w,c
 23937   00496E  5C28               	subwf	i2___flge@ff1^0,w,c
 23938   004970  502D               	movf	(i2___flge@ff2+1)^0,w,c
 23939   004972  5829               	subwfb	(i2___flge@ff1+1)^0,w,c
 23940   004974  502E               	movf	(i2___flge@ff2+2)^0,w,c
 23941   004976  582A               	subwfb	(i2___flge@ff1+2)^0,w,c
 23942   004978  502F               	movf	(i2___flge@ff2+3)^0,w,c
 23943   00497A  582B               	subwfb	(i2___flge@ff1+3)^0,w,c
 23944   00497C  B0D8               	btfsc	status,0,c
 23945   00497E  EFC3  F024         	goto	i2u514_41
 23946   004982  EFC5  F024         	goto	i2u514_40
 23947   004986                     i2u514_41:
 23948   004986  EFC8  F024         	goto	i2l5516
 23949   00498A                     i2u514_40:
 23950   00498A  90D8               	bcf	status,0,c
 23951   00498C  EFC9  F024         	goto	i2l1151
 23952   004990                     i2l5516:
 23953   004990  80D8               	bsf	status,0,c
 23954   004992                     i2l1151:
 23955   004992  0012               	return		;funcret
 23956   004994                     __end_ofi2___flge:
 23957                           	callstack 0
 23958                           
 23959 ;; *************** function i2___fleq *****************
 23960 ;; Defined at:
 23961 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\fleq.c"
 23962 ;; Parameters:    Size  Location     Type
 23963 ;;  ff1             4    0[COMRAM] unsigned char 
 23964 ;;  ff2             4    4[COMRAM] unsigned char 
 23965 ;; Auto vars:     Size  Location     Type
 23966 ;;		None
 23967 ;; Return value:  Size  Location     Type
 23968 ;;		None               void
 23969 ;; Registers used:
 23970 ;;		wreg, status,2, status,0
 23971 ;; Tracked objects:
 23972 ;;		On entry : 0/0
 23973 ;;		On exit  : 0/0
 23974 ;;		Unchanged: 0/0
 23975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23976 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23977 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23978 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23979 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23980 ;;Total ram usage:       12 bytes
 23981 ;; Hardware stack levels used: 1
 23982 ;; This function calls:
 23983 ;;		Nothing
 23984 ;; This function is called by:
 23985 ;;		i2_efgtoa
 23986 ;; This function uses a non-reentrant model
 23987 ;;
 23988                           
 23989                           	psect	text94
 23990   00568A                     __ptext94:
 23991                           	callstack 0
 23992   00568A                     i2___fleq:
 23993                           	callstack 12
 23994   00568A  0E00               	movlw	0
 23995   00568C  1401               	andwf	i2___fleq@ff1^0,w,c
 23996   00568E  6E09               	movwf	??i2___fleq^0,c
 23997   005690  0E00               	movlw	0
 23998   005692  1402               	andwf	(i2___fleq@ff1+1)^0,w,c
 23999   005694  6E0A               	movwf	(??i2___fleq+1)^0,c
 24000   005696  0E80               	movlw	128
 24001   005698  1403               	andwf	(i2___fleq@ff1+2)^0,w,c
 24002   00569A  6E0B               	movwf	(??i2___fleq+2)^0,c
 24003   00569C  0E7F               	movlw	127
 24004   00569E  1404               	andwf	(i2___fleq@ff1+3)^0,w,c
 24005   0056A0  6E0C               	movwf	(??i2___fleq+3)^0,c
 24006   0056A2  5009               	movf	??i2___fleq^0,w,c
 24007   0056A4  100A               	iorwf	(??i2___fleq+1)^0,w,c
 24008   0056A6  100B               	iorwf	(??i2___fleq+2)^0,w,c
 24009   0056A8  100C               	iorwf	(??i2___fleq+3)^0,w,c
 24010   0056AA  A4D8               	btfss	status,2,c
 24011   0056AC  EF5A  F02B         	goto	i2u507_41
 24012   0056B0  EF5C  F02B         	goto	i2u507_40
 24013   0056B4                     i2u507_41:
 24014   0056B4  EF64  F02B         	goto	i2l5486
 24015   0056B8                     i2u507_40:
 24016   0056B8  0E00               	movlw	0
 24017   0056BA  6E01               	movwf	i2___fleq@ff1^0,c
 24018   0056BC  0E00               	movlw	0
 24019   0056BE  6E02               	movwf	(i2___fleq@ff1+1)^0,c
 24020   0056C0  0E00               	movlw	0
 24021   0056C2  6E03               	movwf	(i2___fleq@ff1+2)^0,c
 24022   0056C4  0E00               	movlw	0
 24023   0056C6  6E04               	movwf	(i2___fleq@ff1+3)^0,c
 24024   0056C8                     i2l5486:
 24025   0056C8  0E00               	movlw	0
 24026   0056CA  1405               	andwf	i2___fleq@ff2^0,w,c
 24027   0056CC  6E09               	movwf	??i2___fleq^0,c
 24028   0056CE  0E00               	movlw	0
 24029   0056D0  1406               	andwf	(i2___fleq@ff2+1)^0,w,c
 24030   0056D2  6E0A               	movwf	(??i2___fleq+1)^0,c
 24031   0056D4  0E80               	movlw	128
 24032   0056D6  1407               	andwf	(i2___fleq@ff2+2)^0,w,c
 24033   0056D8  6E0B               	movwf	(??i2___fleq+2)^0,c
 24034   0056DA  0E7F               	movlw	127
 24035   0056DC  1408               	andwf	(i2___fleq@ff2+3)^0,w,c
 24036   0056DE  6E0C               	movwf	(??i2___fleq+3)^0,c
 24037   0056E0  5009               	movf	??i2___fleq^0,w,c
 24038   0056E2  100A               	iorwf	(??i2___fleq+1)^0,w,c
 24039   0056E4  100B               	iorwf	(??i2___fleq+2)^0,w,c
 24040   0056E6  100C               	iorwf	(??i2___fleq+3)^0,w,c
 24041   0056E8  A4D8               	btfss	status,2,c
 24042   0056EA  EF79  F02B         	goto	i2u508_41
 24043   0056EE  EF7B  F02B         	goto	i2u508_40
 24044   0056F2                     i2u508_41:
 24045   0056F2  EF83  F02B         	goto	i2l5490
 24046   0056F6                     i2u508_40:
 24047   0056F6  0E00               	movlw	0
 24048   0056F8  6E05               	movwf	i2___fleq@ff2^0,c
 24049   0056FA  0E00               	movlw	0
 24050   0056FC  6E06               	movwf	(i2___fleq@ff2+1)^0,c
 24051   0056FE  0E00               	movlw	0
 24052   005700  6E07               	movwf	(i2___fleq@ff2+2)^0,c
 24053   005702  0E00               	movlw	0
 24054   005704  6E08               	movwf	(i2___fleq@ff2+3)^0,c
 24055   005706                     i2l5490:
 24056   005706  5005               	movf	i2___fleq@ff2^0,w,c
 24057   005708  1801               	xorwf	i2___fleq@ff1^0,w,c
 24058   00570A  E10F               	bnz	i2u509_40
 24059   00570C  5006               	movf	(i2___fleq@ff2+1)^0,w,c
 24060   00570E  1802               	xorwf	(i2___fleq@ff1+1)^0,w,c
 24061   005710  E10C               	bnz	i2u509_40
 24062   005712  5007               	movf	(i2___fleq@ff2+2)^0,w,c
 24063   005714  1803               	xorwf	(i2___fleq@ff1+2)^0,w,c
 24064   005716  E109               	bnz	i2u509_40
 24065   005718  5008               	movf	(i2___fleq@ff2+3)^0,w,c
 24066   00571A  1804               	xorwf	(i2___fleq@ff1+3)^0,w,c
 24067   00571C  B4D8               	btfsc	status,2,c
 24068   00571E  EF93  F02B         	goto	i2u509_41
 24069   005722  EF95  F02B         	goto	i2u509_40
 24070   005726                     i2u509_41:
 24071   005726  EF98  F02B         	goto	i2l5494
 24072   00572A                     i2u509_40:
 24073   00572A  90D8               	bcf	status,0,c
 24074   00572C  EF99  F02B         	goto	i2l1140
 24075   005730                     i2l5494:
 24076   005730  80D8               	bsf	status,0,c
 24077   005732                     i2l1140:
 24078   005732  0012               	return		;funcret
 24079   005734                     __end_ofi2___fleq:
 24080                           	callstack 0
 24081                           
 24082 ;; *************** function i2___awmod *****************
 24083 ;; Defined at:
 24084 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\awmod.c"
 24085 ;; Parameters:    Size  Location     Type
 24086 ;;  dividend        2    0[COMRAM] int 
 24087 ;;  divisor         2    2[COMRAM] int 
 24088 ;; Auto vars:     Size  Location     Type
 24089 ;;  sign            1    5[COMRAM] unsigned char 
 24090 ;;  counter         1    4[COMRAM] unsigned char 
 24091 ;; Return value:  Size  Location     Type
 24092 ;;                  2    0[COMRAM] int 
 24093 ;; Registers used:
 24094 ;;		wreg, status,2, status,0
 24095 ;; Tracked objects:
 24096 ;;		On entry : 0/0
 24097 ;;		On exit  : 0/0
 24098 ;;		Unchanged: 0/0
 24099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24100 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24101 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24102 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24103 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24104 ;;Total ram usage:        6 bytes
 24105 ;; Hardware stack levels used: 1
 24106 ;; This function calls:
 24107 ;;		Nothing
 24108 ;; This function is called by:
 24109 ;;		i2_efgtoa
 24110 ;; This function uses a non-reentrant model
 24111 ;;
 24112                           
 24113                           	psect	text95
 24114   005484                     __ptext95:
 24115                           	callstack 0
 24116   005484                     i2___awmod:
 24117                           	callstack 12
 24118   005484  6A06               	clrf	i2___awmod@sign^0,c
 24119   005486  BE02               	btfsc	(i2___awmod@dividend+1)^0,7,c
 24120   005488  EF4A  F02A         	goto	i2u501_40
 24121   00548C  EF48  F02A         	goto	i2u501_41
 24122   005490                     i2u501_41:
 24123   005490  EF50  F02A         	goto	i2l5454
 24124   005494                     i2u501_40:
 24125   005494  6C01               	negf	i2___awmod@dividend^0,c
 24126   005496  1E02               	comf	(i2___awmod@dividend+1)^0,f,c
 24127   005498  B0D8               	btfsc	status,0,c
 24128   00549A  2A02               	incf	(i2___awmod@dividend+1)^0,f,c
 24129   00549C  0E01               	movlw	1
 24130   00549E  6E06               	movwf	i2___awmod@sign^0,c
 24131   0054A0                     i2l5454:
 24132   0054A0  BE04               	btfsc	(i2___awmod@divisor+1)^0,7,c
 24133   0054A2  EF57  F02A         	goto	i2u502_40
 24134   0054A6  EF55  F02A         	goto	i2u502_41
 24135   0054AA                     i2u502_41:
 24136   0054AA  EF5B  F02A         	goto	i2l5458
 24137   0054AE                     i2u502_40:
 24138   0054AE  6C03               	negf	i2___awmod@divisor^0,c
 24139   0054B0  1E04               	comf	(i2___awmod@divisor+1)^0,f,c
 24140   0054B2  B0D8               	btfsc	status,0,c
 24141   0054B4  2A04               	incf	(i2___awmod@divisor+1)^0,f,c
 24142   0054B6                     i2l5458:
 24143   0054B6  5003               	movf	i2___awmod@divisor^0,w,c
 24144   0054B8  1004               	iorwf	(i2___awmod@divisor+1)^0,w,c
 24145   0054BA  B4D8               	btfsc	status,2,c
 24146   0054BC  EF62  F02A         	goto	i2u503_41
 24147   0054C0  EF64  F02A         	goto	i2u503_40
 24148   0054C4                     i2u503_41:
 24149   0054C4  EF88  F02A         	goto	i2l5474
 24150   0054C8                     i2u503_40:
 24151   0054C8  0E01               	movlw	1
 24152   0054CA  6E05               	movwf	i2___awmod@counter^0,c
 24153   0054CC  EF6C  F02A         	goto	i2l5464
 24154   0054D0                     i2l5462:
 24155   0054D0  90D8               	bcf	status,0,c
 24156   0054D2  3603               	rlcf	i2___awmod@divisor^0,f,c
 24157   0054D4  3604               	rlcf	(i2___awmod@divisor+1)^0,f,c
 24158   0054D6  2A05               	incf	i2___awmod@counter^0,f,c
 24159   0054D8                     i2l5464:
 24160   0054D8  AE04               	btfss	(i2___awmod@divisor+1)^0,7,c
 24161   0054DA  EF71  F02A         	goto	i2u504_41
 24162   0054DE  EF73  F02A         	goto	i2u504_40
 24163   0054E2                     i2u504_41:
 24164   0054E2  EF68  F02A         	goto	i2l5462
 24165   0054E6                     i2u504_40:
 24166   0054E6                     i2l5466:
 24167   0054E6  5003               	movf	i2___awmod@divisor^0,w,c
 24168   0054E8  5C01               	subwf	i2___awmod@dividend^0,w,c
 24169   0054EA  5004               	movf	(i2___awmod@divisor+1)^0,w,c
 24170   0054EC  5802               	subwfb	(i2___awmod@dividend+1)^0,w,c
 24171   0054EE  A0D8               	btfss	status,0,c
 24172   0054F0  EF7C  F02A         	goto	i2u505_41
 24173   0054F4  EF7E  F02A         	goto	i2u505_40
 24174   0054F8                     i2u505_41:
 24175   0054F8  EF82  F02A         	goto	i2l5470
 24176   0054FC                     i2u505_40:
 24177   0054FC  5003               	movf	i2___awmod@divisor^0,w,c
 24178   0054FE  5E01               	subwf	i2___awmod@dividend^0,f,c
 24179   005500  5004               	movf	(i2___awmod@divisor+1)^0,w,c
 24180   005502  5A02               	subwfb	(i2___awmod@dividend+1)^0,f,c
 24181   005504                     i2l5470:
 24182   005504  90D8               	bcf	status,0,c
 24183   005506  3204               	rrcf	(i2___awmod@divisor+1)^0,f,c
 24184   005508  3203               	rrcf	i2___awmod@divisor^0,f,c
 24185   00550A  2E05               	decfsz	i2___awmod@counter^0,f,c
 24186   00550C  EF73  F02A         	goto	i2l5466
 24187   005510                     i2l5474:
 24188   005510  5006               	movf	i2___awmod@sign^0,w,c
 24189   005512  B4D8               	btfsc	status,2,c
 24190   005514  EF8E  F02A         	goto	i2u506_41
 24191   005518  EF90  F02A         	goto	i2u506_40
 24192   00551C                     i2u506_41:
 24193   00551C  EF94  F02A         	goto	i2l5478
 24194   005520                     i2u506_40:
 24195   005520  6C01               	negf	i2___awmod@dividend^0,c
 24196   005522  1E02               	comf	(i2___awmod@dividend+1)^0,f,c
 24197   005524  B0D8               	btfsc	status,0,c
 24198   005526  2A02               	incf	(i2___awmod@dividend+1)^0,f,c
 24199   005528                     i2l5478:
 24200   005528  C001  F001         	movff	i2___awmod@dividend,?i2___awmod
 24201   00552C  C002  F002         	movff	i2___awmod@dividend+1,?i2___awmod+1
 24202   005530  0012               	return		;funcret
 24203   005532                     __end_ofi2___awmod:
 24204                           	callstack 0
 24205                           
 24206 ;; *************** function i2___awdiv *****************
 24207 ;; Defined at:
 24208 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\awdiv.c"
 24209 ;; Parameters:    Size  Location     Type
 24210 ;;  dividend        2    0[COMRAM] int 
 24211 ;;  divisor         2    2[COMRAM] int 
 24212 ;; Auto vars:     Size  Location     Type
 24213 ;;  quotient        2    6[COMRAM] int 
 24214 ;;  sign            1    5[COMRAM] unsigned char 
 24215 ;;  counter         1    4[COMRAM] unsigned char 
 24216 ;; Return value:  Size  Location     Type
 24217 ;;                  2    0[COMRAM] int 
 24218 ;; Registers used:
 24219 ;;		wreg, status,2, status,0
 24220 ;; Tracked objects:
 24221 ;;		On entry : 0/0
 24222 ;;		On exit  : 0/0
 24223 ;;		Unchanged: 0/0
 24224 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24225 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24226 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24227 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24228 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24229 ;;Total ram usage:        8 bytes
 24230 ;; Hardware stack levels used: 1
 24231 ;; This function calls:
 24232 ;;		Nothing
 24233 ;; This function is called by:
 24234 ;;		i2_efgtoa
 24235 ;; This function uses a non-reentrant model
 24236 ;;
 24237                           
 24238                           	psect	text96
 24239   005258                     __ptext96:
 24240                           	callstack 0
 24241   005258                     i2___awdiv:
 24242                           	callstack 12
 24243   005258  6A06               	clrf	i2___awdiv@sign^0,c
 24244   00525A  BE04               	btfsc	(i2___awdiv@divisor+1)^0,7,c
 24245   00525C  EF34  F029         	goto	i2u495_40
 24246   005260  EF32  F029         	goto	i2u495_41
 24247   005264                     i2u495_41:
 24248   005264  EF3A  F029         	goto	i2l5410
 24249   005268                     i2u495_40:
 24250   005268  6C03               	negf	i2___awdiv@divisor^0,c
 24251   00526A  1E04               	comf	(i2___awdiv@divisor+1)^0,f,c
 24252   00526C  B0D8               	btfsc	status,0,c
 24253   00526E  2A04               	incf	(i2___awdiv@divisor+1)^0,f,c
 24254   005270  0E01               	movlw	1
 24255   005272  6E06               	movwf	i2___awdiv@sign^0,c
 24256   005274                     i2l5410:
 24257   005274  BE02               	btfsc	(i2___awdiv@dividend+1)^0,7,c
 24258   005276  EF41  F029         	goto	i2u496_40
 24259   00527A  EF3F  F029         	goto	i2u496_41
 24260   00527E                     i2u496_41:
 24261   00527E  EF47  F029         	goto	i2l5416
 24262   005282                     i2u496_40:
 24263   005282  6C01               	negf	i2___awdiv@dividend^0,c
 24264   005284  1E02               	comf	(i2___awdiv@dividend+1)^0,f,c
 24265   005286  B0D8               	btfsc	status,0,c
 24266   005288  2A02               	incf	(i2___awdiv@dividend+1)^0,f,c
 24267   00528A  0E01               	movlw	1
 24268   00528C  1A06               	xorwf	i2___awdiv@sign^0,f,c
 24269   00528E                     i2l5416:
 24270   00528E  0E00               	movlw	0
 24271   005290  6E08               	movwf	(i2___awdiv@quotient+1)^0,c
 24272   005292  0E00               	movlw	0
 24273   005294  6E07               	movwf	i2___awdiv@quotient^0,c
 24274   005296  5003               	movf	i2___awdiv@divisor^0,w,c
 24275   005298  1004               	iorwf	(i2___awdiv@divisor+1)^0,w,c
 24276   00529A  B4D8               	btfsc	status,2,c
 24277   00529C  EF52  F029         	goto	i2u497_41
 24278   0052A0  EF54  F029         	goto	i2u497_40
 24279   0052A4                     i2u497_41:
 24280   0052A4  EF7C  F029         	goto	i2l5438
 24281   0052A8                     i2u497_40:
 24282   0052A8  0E01               	movlw	1
 24283   0052AA  6E05               	movwf	i2___awdiv@counter^0,c
 24284   0052AC  EF5C  F029         	goto	i2l5424
 24285   0052B0                     i2l5422:
 24286   0052B0  90D8               	bcf	status,0,c
 24287   0052B2  3603               	rlcf	i2___awdiv@divisor^0,f,c
 24288   0052B4  3604               	rlcf	(i2___awdiv@divisor+1)^0,f,c
 24289   0052B6  2A05               	incf	i2___awdiv@counter^0,f,c
 24290   0052B8                     i2l5424:
 24291   0052B8  AE04               	btfss	(i2___awdiv@divisor+1)^0,7,c
 24292   0052BA  EF61  F029         	goto	i2u498_41
 24293   0052BE  EF63  F029         	goto	i2u498_40
 24294   0052C2                     i2u498_41:
 24295   0052C2  EF58  F029         	goto	i2l5422
 24296   0052C6                     i2u498_40:
 24297   0052C6                     i2l5426:
 24298   0052C6  90D8               	bcf	status,0,c
 24299   0052C8  3607               	rlcf	i2___awdiv@quotient^0,f,c
 24300   0052CA  3608               	rlcf	(i2___awdiv@quotient+1)^0,f,c
 24301   0052CC  5003               	movf	i2___awdiv@divisor^0,w,c
 24302   0052CE  5C01               	subwf	i2___awdiv@dividend^0,w,c
 24303   0052D0  5004               	movf	(i2___awdiv@divisor+1)^0,w,c
 24304   0052D2  5802               	subwfb	(i2___awdiv@dividend+1)^0,w,c
 24305   0052D4  A0D8               	btfss	status,0,c
 24306   0052D6  EF6F  F029         	goto	i2u499_41
 24307   0052DA  EF71  F029         	goto	i2u499_40
 24308   0052DE                     i2u499_41:
 24309   0052DE  EF76  F029         	goto	i2l5434
 24310   0052E2                     i2u499_40:
 24311   0052E2  5003               	movf	i2___awdiv@divisor^0,w,c
 24312   0052E4  5E01               	subwf	i2___awdiv@dividend^0,f,c
 24313   0052E6  5004               	movf	(i2___awdiv@divisor+1)^0,w,c
 24314   0052E8  5A02               	subwfb	(i2___awdiv@dividend+1)^0,f,c
 24315   0052EA  8007               	bsf	i2___awdiv@quotient^0,0,c
 24316   0052EC                     i2l5434:
 24317   0052EC  90D8               	bcf	status,0,c
 24318   0052EE  3204               	rrcf	(i2___awdiv@divisor+1)^0,f,c
 24319   0052F0  3203               	rrcf	i2___awdiv@divisor^0,f,c
 24320   0052F2  2E05               	decfsz	i2___awdiv@counter^0,f,c
 24321   0052F4  EF63  F029         	goto	i2l5426
 24322   0052F8                     i2l5438:
 24323   0052F8  5006               	movf	i2___awdiv@sign^0,w,c
 24324   0052FA  B4D8               	btfsc	status,2,c
 24325   0052FC  EF82  F029         	goto	i2u500_41
 24326   005300  EF84  F029         	goto	i2u500_40
 24327   005304                     i2u500_41:
 24328   005304  EF88  F029         	goto	i2l5442
 24329   005308                     i2u500_40:
 24330   005308  6C07               	negf	i2___awdiv@quotient^0,c
 24331   00530A  1E08               	comf	(i2___awdiv@quotient+1)^0,f,c
 24332   00530C  B0D8               	btfsc	status,0,c
 24333   00530E  2A08               	incf	(i2___awdiv@quotient+1)^0,f,c
 24334   005310                     i2l5442:
 24335   005310  C007  F001         	movff	i2___awdiv@quotient,?i2___awdiv
 24336   005314  C008  F002         	movff	i2___awdiv@quotient+1,?i2___awdiv+1
 24337   005318  0012               	return		;funcret
 24338   00531A                     __end_ofi2___awdiv:
 24339                           	callstack 0
 24340                           
 24341 ;; *************** function i2_lire_tension *****************
 24342 ;; Defined at:
 24343 ;;		line 316 in file "main.c"
 24344 ;; Parameters:    Size  Location     Type
 24345 ;;		None
 24346 ;; Auto vars:     Size  Location     Type
 24347 ;;  tension         4   68[COMRAM] float 
 24348 ;;  adc_val         2   72[COMRAM] short 
 24349 ;; Return value:  Size  Location     Type
 24350 ;;                  4   64[COMRAM] float 
 24351 ;; Registers used:
 24352 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 24353 ;; Tracked objects:
 24354 ;;		On entry : 0/0
 24355 ;;		On exit  : 0/0
 24356 ;;		Unchanged: 0/0
 24357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24358 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24359 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24360 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24361 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24362 ;;Total ram usage:       10 bytes
 24363 ;; Hardware stack levels used: 1
 24364 ;; Hardware stack levels required when called: 1
 24365 ;; This function calls:
 24366 ;;		i2_ADC_ChannelSelect
 24367 ;;		i2_ADC_ConversionResultGet
 24368 ;;		i2_ADC_ConversionStart
 24369 ;;		i2___fldiv
 24370 ;;		i2___flmul
 24371 ;;		i2___xxtofl
 24372 ;; This function is called by:
 24373 ;;		i2_LCD_UpdateMenu
 24374 ;; This function uses a non-reentrant model
 24375 ;;
 24376                           
 24377                           	psect	text97
 24378   0057D0                     __ptext97:
 24379                           	callstack 0
 24380   0057D0                     i2_lire_tension:
 24381                           	callstack 15
 24382   0057D0                     
 24383                           ;main.c: 318:     ADC_ChannelSelect(ADC_CHANNEL_ANA4);
 24384   0057D0  0E04               	movlw	4
 24385   0057D2  EC2E  F033         	call	i2_ADC_ChannelSelect
 24386   0057D6                     
 24387                           ;main.c: 319:     ADC_ConversionStart();
 24388   0057D6  EC36  F033         	call	i2_ADC_ConversionStart	;wreg free
 24389   0057DA                     
 24390                           ;main.c: 320:     adc_result_t adc_val = ADC_ConversionResultGet();
 24391   0057DA  ECDC  F032         	call	i2_ADC_ConversionResultGet	;wreg free
 24392   0057DE  C001  F049         	movff	?i2_ADC_ConversionResultGet,i2lire_tension@adc_val
 24393   0057E2  C002  F04A         	movff	?i2_ADC_ConversionResultGet+1,i2lire_tension@adc_val+1
 24394   0057E6                     
 24395                           ;main.c: 322:    float tension = (adc_val * 5.f) / 4095.0f;
 24396   0057E6  0E00               	movlw	0
 24397   0057E8  6E13               	movwf	i2___flmul@a^0,c
 24398   0057EA  0E00               	movlw	0
 24399   0057EC  6E14               	movwf	(i2___flmul@a+1)^0,c
 24400   0057EE  0EA0               	movlw	160
 24401   0057F0  6E15               	movwf	(i2___flmul@a+2)^0,c
 24402   0057F2  0E40               	movlw	64
 24403   0057F4  6E16               	movwf	(i2___flmul@a+3)^0,c
 24404   0057F6  C049  F001         	movff	i2lire_tension@adc_val,i2___xxtofl@val
 24405   0057FA  C04A  F002         	movff	i2lire_tension@adc_val+1,i2___xxtofl@val+1
 24406   0057FE  0E00               	movlw	0
 24407   005800  BE02               	btfsc	(i2___xxtofl@val+1)^0,7,c
 24408   005802  0EFF               	movlw	-1
 24409   005804  6E03               	movwf	(i2___xxtofl@val+2)^0,c
 24410   005806  6E04               	movwf	(i2___xxtofl@val+3)^0,c
 24411   005808  0E01               	movlw	1
 24412   00580A  EC47  F021         	call	i2___xxtofl
 24413   00580E  C001  F00F         	movff	?i2___xxtofl,i2___flmul@b
 24414   005812  C002  F010         	movff	?i2___xxtofl+1,i2___flmul@b+1
 24415   005816  C003  F011         	movff	?i2___xxtofl+2,i2___flmul@b+2
 24416   00581A  C004  F012         	movff	?i2___xxtofl+3,i2___flmul@b+3
 24417   00581E  EC22  F012         	call	i2___flmul	;wreg free
 24418   005822  C00F  F028         	movff	?i2___flmul,i2___fldiv@b
 24419   005826  C010  F029         	movff	?i2___flmul+1,i2___fldiv@b+1
 24420   00582A  C011  F02A         	movff	?i2___flmul+2,i2___fldiv@b+2
 24421   00582E  C012  F02B         	movff	?i2___flmul+3,i2___fldiv@b+3
 24422   005832  0E00               	movlw	0
 24423   005834  6E2C               	movwf	i2___fldiv@a^0,c
 24424   005836  0EF0               	movlw	240
 24425   005838  6E2D               	movwf	(i2___fldiv@a+1)^0,c
 24426   00583A  0E7F               	movlw	127
 24427   00583C  6E2E               	movwf	(i2___fldiv@a+2)^0,c
 24428   00583E  0E45               	movlw	69
 24429   005840  6E2F               	movwf	(i2___fldiv@a+3)^0,c
 24430   005842  ECF6  F017         	call	i2___fldiv	;wreg free
 24431   005846  C028  F045         	movff	?i2___fldiv,i2lire_tension@tension
 24432   00584A  C029  F046         	movff	?i2___fldiv+1,i2lire_tension@tension+1
 24433   00584E  C02A  F047         	movff	?i2___fldiv+2,i2lire_tension@tension+2
 24434   005852  C02B  F048         	movff	?i2___fldiv+3,i2lire_tension@tension+3
 24435   005856                     
 24436                           ;main.c: 323:     return tension;
 24437   005856  C045  F041         	movff	i2lire_tension@tension,?i2_lire_tension
 24438   00585A  C046  F042         	movff	i2lire_tension@tension+1,?i2_lire_tension+1
 24439   00585E  C047  F043         	movff	i2lire_tension@tension+2,?i2_lire_tension+2
 24440   005862  C048  F044         	movff	i2lire_tension@tension+3,?i2_lire_tension+3
 24441   005866  0012               	return		;funcret
 24442   005868                     __end_ofi2_lire_tension:
 24443                           	callstack 0
 24444                           
 24445 ;; *************** function i2___xxtofl *****************
 24446 ;; Defined at:
 24447 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\xxtofl.c"
 24448 ;; Parameters:    Size  Location     Type
 24449 ;;  sign            1    wreg     unsigned char 
 24450 ;;  val             4    0[COMRAM] long 
 24451 ;; Auto vars:     Size  Location     Type
 24452 ;;  sign            1    8[COMRAM] unsigned char 
 24453 ;;  arg             4   10[COMRAM] unsigned long 
 24454 ;;  exp             1    9[COMRAM] unsigned char 
 24455 ;; Return value:  Size  Location     Type
 24456 ;;                  4    0[COMRAM] unsigned char 
 24457 ;; Registers used:
 24458 ;;		wreg, status,2, status,0
 24459 ;; Tracked objects:
 24460 ;;		On entry : 0/0
 24461 ;;		On exit  : 0/0
 24462 ;;		Unchanged: 0/0
 24463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24464 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24465 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24466 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24467 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24468 ;;Total ram usage:       14 bytes
 24469 ;; Hardware stack levels used: 1
 24470 ;; This function calls:
 24471 ;;		Nothing
 24472 ;; This function is called by:
 24473 ;;		i2_lire_tension
 24474 ;; This function uses a non-reentrant model
 24475 ;;
 24476                           
 24477                           	psect	text98
 24478   00428E                     __ptext98:
 24479                           	callstack 0
 24480   00428E                     i2___xxtofl:
 24481                           	callstack 15
 24482                           
 24483                           ;incstack = 0
 24484                           ;i2___xxtofl@sign stored from wreg
 24485   00428E  6E09               	movwf	i2___xxtofl@sign^0,c
 24486   004290  5009               	movf	i2___xxtofl@sign^0,w,c
 24487   004292  B4D8               	btfsc	status,2,c
 24488   004294  EF4E  F021         	goto	i2u770_41
 24489   004298  EF50  F021         	goto	i2u770_40
 24490   00429C                     i2u770_41:
 24491   00429C  EF72  F021         	goto	i2l1536
 24492   0042A0                     i2u770_40:
 24493   0042A0  BE04               	btfsc	(i2___xxtofl@val+3)^0,7,c
 24494   0042A2  EF57  F021         	goto	i2u771_40
 24495   0042A6  EF55  F021         	goto	i2u771_41
 24496   0042AA                     i2u771_41:
 24497   0042AA  EF72  F021         	goto	i2l1536
 24498   0042AE                     i2u771_40:
 24499   0042AE  C001  F005         	movff	i2___xxtofl@val,??i2___xxtofl
 24500   0042B2  C002  F006         	movff	i2___xxtofl@val+1,??i2___xxtofl+1
 24501   0042B6  C003  F007         	movff	i2___xxtofl@val+2,??i2___xxtofl+2
 24502   0042BA  C004  F008         	movff	i2___xxtofl@val+3,??i2___xxtofl+3
 24503   0042BE  1E05               	comf	??i2___xxtofl^0,f,c
 24504   0042C0  1E06               	comf	(??i2___xxtofl+1)^0,f,c
 24505   0042C2  1E07               	comf	(??i2___xxtofl+2)^0,f,c
 24506   0042C4  1E08               	comf	(??i2___xxtofl+3)^0,f,c
 24507   0042C6  2A05               	incf	??i2___xxtofl^0,f,c
 24508   0042C8  0E00               	movlw	0
 24509   0042CA  2206               	addwfc	(??i2___xxtofl+1)^0,f,c
 24510   0042CC  2207               	addwfc	(??i2___xxtofl+2)^0,f,c
 24511   0042CE  2208               	addwfc	(??i2___xxtofl+3)^0,f,c
 24512   0042D0  C005  F00B         	movff	??i2___xxtofl,i2___xxtofl@arg
 24513   0042D4  C006  F00C         	movff	??i2___xxtofl+1,i2___xxtofl@arg+1
 24514   0042D8  C007  F00D         	movff	??i2___xxtofl+2,i2___xxtofl@arg+2
 24515   0042DC  C008  F00E         	movff	??i2___xxtofl+3,i2___xxtofl@arg+3
 24516   0042E0  EF7A  F021         	goto	i2l7080
 24517   0042E4                     i2l1536:
 24518   0042E4  C001  F00B         	movff	i2___xxtofl@val,i2___xxtofl@arg
 24519   0042E8  C002  F00C         	movff	i2___xxtofl@val+1,i2___xxtofl@arg+1
 24520   0042EC  C003  F00D         	movff	i2___xxtofl@val+2,i2___xxtofl@arg+2
 24521   0042F0  C004  F00E         	movff	i2___xxtofl@val+3,i2___xxtofl@arg+3
 24522   0042F4                     i2l7080:
 24523   0042F4  5001               	movf	i2___xxtofl@val^0,w,c
 24524   0042F6  1002               	iorwf	(i2___xxtofl@val+1)^0,w,c
 24525   0042F8  1003               	iorwf	(i2___xxtofl@val+2)^0,w,c
 24526   0042FA  1004               	iorwf	(i2___xxtofl@val+3)^0,w,c
 24527   0042FC  A4D8               	btfss	status,2,c
 24528   0042FE  EF83  F021         	goto	i2u772_41
 24529   004302  EF85  F021         	goto	i2u772_40
 24530   004306                     i2u772_41:
 24531   004306  EF8F  F021         	goto	i2l7086
 24532   00430A                     i2u772_40:
 24533   00430A  0E00               	movlw	0
 24534   00430C  6E01               	movwf	?i2___xxtofl^0,c
 24535   00430E  0E00               	movlw	0
 24536   004310  6E02               	movwf	(?i2___xxtofl+1)^0,c
 24537   004312  0E00               	movlw	0
 24538   004314  6E03               	movwf	(?i2___xxtofl+2)^0,c
 24539   004316  0E00               	movlw	0
 24540   004318  6E04               	movwf	(?i2___xxtofl+3)^0,c
 24541   00431A  EF20  F022         	goto	i2l1539
 24542   00431E                     i2l7086:
 24543   00431E  0E96               	movlw	150
 24544   004320  6E0A               	movwf	i2___xxtofl@exp^0,c
 24545   004322  EF99  F021         	goto	i2l7090
 24546   004326                     i2l7088:
 24547   004326  2A0A               	incf	i2___xxtofl@exp^0,f,c
 24548   004328  90D8               	bcf	status,0,c
 24549   00432A  320E               	rrcf	(i2___xxtofl@arg+3)^0,f,c
 24550   00432C  320D               	rrcf	(i2___xxtofl@arg+2)^0,f,c
 24551   00432E  320C               	rrcf	(i2___xxtofl@arg+1)^0,f,c
 24552   004330  320B               	rrcf	i2___xxtofl@arg^0,f,c
 24553   004332                     i2l7090:
 24554   004332  0E00               	movlw	0
 24555   004334  140B               	andwf	i2___xxtofl@arg^0,w,c
 24556   004336  6E05               	movwf	??i2___xxtofl^0,c
 24557   004338  0E00               	movlw	0
 24558   00433A  140C               	andwf	(i2___xxtofl@arg+1)^0,w,c
 24559   00433C  6E06               	movwf	(??i2___xxtofl+1)^0,c
 24560   00433E  0E00               	movlw	0
 24561   004340  140D               	andwf	(i2___xxtofl@arg+2)^0,w,c
 24562   004342  6E07               	movwf	(??i2___xxtofl+2)^0,c
 24563   004344  0EFE               	movlw	254
 24564   004346  140E               	andwf	(i2___xxtofl@arg+3)^0,w,c
 24565   004348  6E08               	movwf	(??i2___xxtofl+3)^0,c
 24566   00434A  5005               	movf	??i2___xxtofl^0,w,c
 24567   00434C  1006               	iorwf	(??i2___xxtofl+1)^0,w,c
 24568   00434E  1007               	iorwf	(??i2___xxtofl+2)^0,w,c
 24569   004350  1008               	iorwf	(??i2___xxtofl+3)^0,w,c
 24570   004352  A4D8               	btfss	status,2,c
 24571   004354  EFAE  F021         	goto	i2u773_41
 24572   004358  EFB0  F021         	goto	i2u773_40
 24573   00435C                     i2u773_41:
 24574   00435C  EF93  F021         	goto	i2l7088
 24575   004360                     i2u773_40:
 24576   004360  EFBE  F021         	goto	i2l1543
 24577   004364                     i2l7092:
 24578   004364  2A0A               	incf	i2___xxtofl@exp^0,f,c
 24579   004366  0E01               	movlw	1
 24580   004368  260B               	addwf	i2___xxtofl@arg^0,f,c
 24581   00436A  0E00               	movlw	0
 24582   00436C  220C               	addwfc	(i2___xxtofl@arg+1)^0,f,c
 24583   00436E  220D               	addwfc	(i2___xxtofl@arg+2)^0,f,c
 24584   004370  220E               	addwfc	(i2___xxtofl@arg+3)^0,f,c
 24585   004372  90D8               	bcf	status,0,c
 24586   004374  320E               	rrcf	(i2___xxtofl@arg+3)^0,f,c
 24587   004376  320D               	rrcf	(i2___xxtofl@arg+2)^0,f,c
 24588   004378  320C               	rrcf	(i2___xxtofl@arg+1)^0,f,c
 24589   00437A  320B               	rrcf	i2___xxtofl@arg^0,f,c
 24590   00437C                     i2l1543:
 24591   00437C  0E00               	movlw	0
 24592   00437E  140B               	andwf	i2___xxtofl@arg^0,w,c
 24593   004380  6E05               	movwf	??i2___xxtofl^0,c
 24594   004382  0E00               	movlw	0
 24595   004384  140C               	andwf	(i2___xxtofl@arg+1)^0,w,c
 24596   004386  6E06               	movwf	(??i2___xxtofl+1)^0,c
 24597   004388  0E00               	movlw	0
 24598   00438A  140D               	andwf	(i2___xxtofl@arg+2)^0,w,c
 24599   00438C  6E07               	movwf	(??i2___xxtofl+2)^0,c
 24600   00438E  0EFF               	movlw	255
 24601   004390  140E               	andwf	(i2___xxtofl@arg+3)^0,w,c
 24602   004392  6E08               	movwf	(??i2___xxtofl+3)^0,c
 24603   004394  5005               	movf	??i2___xxtofl^0,w,c
 24604   004396  1006               	iorwf	(??i2___xxtofl+1)^0,w,c
 24605   004398  1007               	iorwf	(??i2___xxtofl+2)^0,w,c
 24606   00439A  1008               	iorwf	(??i2___xxtofl+3)^0,w,c
 24607   00439C  A4D8               	btfss	status,2,c
 24608   00439E  EFD3  F021         	goto	i2u774_41
 24609   0043A2  EFD5  F021         	goto	i2u774_40
 24610   0043A6                     i2u774_41:
 24611   0043A6  EFB2  F021         	goto	i2l7092
 24612   0043AA                     i2u774_40:
 24613   0043AA  EFDD  F021         	goto	i2l7100
 24614   0043AE                     i2l7098:
 24615   0043AE  060A               	decf	i2___xxtofl@exp^0,f,c
 24616   0043B0  90D8               	bcf	status,0,c
 24617   0043B2  360B               	rlcf	i2___xxtofl@arg^0,f,c
 24618   0043B4  360C               	rlcf	(i2___xxtofl@arg+1)^0,f,c
 24619   0043B6  360D               	rlcf	(i2___xxtofl@arg+2)^0,f,c
 24620   0043B8  360E               	rlcf	(i2___xxtofl@arg+3)^0,f,c
 24621   0043BA                     i2l7100:
 24622   0043BA  BE0D               	btfsc	(i2___xxtofl@arg+2)^0,7,c
 24623   0043BC  EFE2  F021         	goto	i2u775_41
 24624   0043C0  EFE4  F021         	goto	i2u775_40
 24625   0043C4                     i2u775_41:
 24626   0043C4  EFEC  F021         	goto	i2l1550
 24627   0043C8                     i2u775_40:
 24628   0043C8  0E02               	movlw	2
 24629   0043CA  600A               	cpfslt	i2___xxtofl@exp^0,c
 24630   0043CC  EFEA  F021         	goto	i2u776_41
 24631   0043D0  EFEC  F021         	goto	i2u776_40
 24632   0043D4                     i2u776_41:
 24633   0043D4  EFD7  F021         	goto	i2l7098
 24634   0043D8                     i2u776_40:
 24635   0043D8                     i2l1550:
 24636   0043D8  B00A               	btfsc	i2___xxtofl@exp^0,0,c
 24637   0043DA  EFF1  F021         	goto	i2u777_41
 24638   0043DE  EFF3  F021         	goto	i2u777_40
 24639   0043E2                     i2u777_41:
 24640   0043E2  EFF4  F021         	goto	i2l7106
 24641   0043E6                     i2u777_40:
 24642   0043E6  9E0D               	bcf	(i2___xxtofl@arg+2)^0,7,c
 24643   0043E8                     i2l7106:
 24644   0043E8  90D8               	bcf	status,0,c
 24645   0043EA  320A               	rrcf	i2___xxtofl@exp^0,f,c
 24646   0043EC  C00A  F005         	movff	i2___xxtofl@exp,??i2___xxtofl
 24647   0043F0  6A06               	clrf	(??i2___xxtofl+1)^0,c
 24648   0043F2  6A07               	clrf	(??i2___xxtofl+2)^0,c
 24649   0043F4  6A08               	clrf	(??i2___xxtofl+3)^0,c
 24650   0043F6  C005  F008         	movff	??i2___xxtofl,??i2___xxtofl+3
 24651   0043FA  6A07               	clrf	(??i2___xxtofl+2)^0,c
 24652   0043FC  6A06               	clrf	(??i2___xxtofl+1)^0,c
 24653   0043FE  6A05               	clrf	??i2___xxtofl^0,c
 24654   004400  5005               	movf	??i2___xxtofl^0,w,c
 24655   004402  120B               	iorwf	i2___xxtofl@arg^0,f,c
 24656   004404  5006               	movf	(??i2___xxtofl+1)^0,w,c
 24657   004406  120C               	iorwf	(i2___xxtofl@arg+1)^0,f,c
 24658   004408  5007               	movf	(??i2___xxtofl+2)^0,w,c
 24659   00440A  120D               	iorwf	(i2___xxtofl@arg+2)^0,f,c
 24660   00440C  5008               	movf	(??i2___xxtofl+3)^0,w,c
 24661   00440E  120E               	iorwf	(i2___xxtofl@arg+3)^0,f,c
 24662   004410  5009               	movf	i2___xxtofl@sign^0,w,c
 24663   004412  B4D8               	btfsc	status,2,c
 24664   004414  EF0E  F022         	goto	i2u778_41
 24665   004418  EF10  F022         	goto	i2u778_40
 24666   00441C                     i2u778_41:
 24667   00441C  EF18  F022         	goto	i2l7116
 24668   004420                     i2u778_40:
 24669   004420  BE04               	btfsc	(i2___xxtofl@val+3)^0,7,c
 24670   004422  EF17  F022         	goto	i2u779_40
 24671   004426  EF15  F022         	goto	i2u779_41
 24672   00442A                     i2u779_41:
 24673   00442A  EF18  F022         	goto	i2l7116
 24674   00442E                     i2u779_40:
 24675   00442E  8E0E               	bsf	(i2___xxtofl@arg+3)^0,7,c
 24676   004430                     i2l7116:
 24677   004430  C00B  F001         	movff	i2___xxtofl@arg,?i2___xxtofl
 24678   004434  C00C  F002         	movff	i2___xxtofl@arg+1,?i2___xxtofl+1
 24679   004438  C00D  F003         	movff	i2___xxtofl@arg+2,?i2___xxtofl+2
 24680   00443C  C00E  F004         	movff	i2___xxtofl@arg+3,?i2___xxtofl+3
 24681   004440                     i2l1539:
 24682   004440  0012               	return		;funcret
 24683   004442                     __end_ofi2___xxtofl:
 24684                           	callstack 0
 24685                           
 24686 ;; *************** function i2___flmul *****************
 24687 ;; Defined at:
 24688 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\sprcmul.c"
 24689 ;; Parameters:    Size  Location     Type
 24690 ;;  b               4   14[COMRAM] unsigned char 
 24691 ;;  a               4   18[COMRAM] unsigned char 
 24692 ;; Auto vars:     Size  Location     Type
 24693 ;;  prod            4   33[COMRAM] struct .
 24694 ;;  grs             4   27[COMRAM] unsigned long 
 24695 ;;  temp            2   37[COMRAM] struct .
 24696 ;;  bexp            1   32[COMRAM] unsigned char 
 24697 ;;  aexp            1   31[COMRAM] unsigned char 
 24698 ;;  sign            1   26[COMRAM] unsigned char 
 24699 ;; Return value:  Size  Location     Type
 24700 ;;                  4   14[COMRAM] unsigned char 
 24701 ;; Registers used:
 24702 ;;		wreg, status,2, status,0, prodl, prodh
 24703 ;; Tracked objects:
 24704 ;;		On entry : 0/0
 24705 ;;		On exit  : 0/0
 24706 ;;		Unchanged: 0/0
 24707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24708 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24709 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24710 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24711 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24712 ;;Total ram usage:       25 bytes
 24713 ;; Hardware stack levels used: 1
 24714 ;; This function calls:
 24715 ;;		Nothing
 24716 ;; This function is called by:
 24717 ;;		i2_lire_tension
 24718 ;;		i2_efgtoa
 24719 ;; This function uses a non-reentrant model
 24720 ;;
 24721                           
 24722                           	psect	text99
 24723   002444                     __ptext99:
 24724                           	callstack 0
 24725   002444                     i2___flmul:
 24726                           	callstack 12
 24727   002444  5012               	movf	(i2___flmul@b+3)^0,w,c
 24728   002446  0B80               	andlw	128
 24729   002448  6E1B               	movwf	i2___flmul@sign^0,c
 24730   00244A  5012               	movf	(i2___flmul@b+3)^0,w,c
 24731   00244C  2412               	addwf	(i2___flmul@b+3)^0,w,c
 24732   00244E  6E21               	movwf	i2___flmul@bexp^0,c
 24733   002450  AE11               	btfss	(i2___flmul@b+2)^0,7,c
 24734   002452  EF2D  F012         	goto	i2u546_41
 24735   002456  EF2F  F012         	goto	i2u546_40
 24736   00245A                     i2u546_41:
 24737   00245A  EF30  F012         	goto	i2l5720
 24738   00245E                     i2u546_40:
 24739   00245E  8021               	bsf	i2___flmul@bexp^0,0,c
 24740   002460                     i2l5720:
 24741   002460  5021               	movf	i2___flmul@bexp^0,w,c
 24742   002462  B4D8               	btfsc	status,2,c
 24743   002464  EF36  F012         	goto	i2u547_41
 24744   002468  EF38  F012         	goto	i2u547_40
 24745   00246C                     i2u547_41:
 24746   00246C  EF4B  F012         	goto	i2l5728
 24747   002470                     i2u547_40:
 24748   002470  2821               	incf	i2___flmul@bexp^0,w,c
 24749   002472  A4D8               	btfss	status,2,c
 24750   002474  EF3E  F012         	goto	i2u548_41
 24751   002478  EF40  F012         	goto	i2u548_40
 24752   00247C                     i2u548_41:
 24753   00247C  EF48  F012         	goto	i2l5726
 24754   002480                     i2u548_40:
 24755   002480  0E00               	movlw	0
 24756   002482  6E0F               	movwf	i2___flmul@b^0,c
 24757   002484  0E00               	movlw	0
 24758   002486  6E10               	movwf	(i2___flmul@b+1)^0,c
 24759   002488  0E00               	movlw	0
 24760   00248A  6E11               	movwf	(i2___flmul@b+2)^0,c
 24761   00248C  0E00               	movlw	0
 24762   00248E  6E12               	movwf	(i2___flmul@b+3)^0,c
 24763   002490                     i2l5726:
 24764   002490  8E11               	bsf	(i2___flmul@b+2)^0,7,c
 24765   002492  EF53  F012         	goto	i2l5730
 24766   002496                     i2l5728:
 24767   002496  0E00               	movlw	0
 24768   002498  6E0F               	movwf	i2___flmul@b^0,c
 24769   00249A  0E00               	movlw	0
 24770   00249C  6E10               	movwf	(i2___flmul@b+1)^0,c
 24771   00249E  0E00               	movlw	0
 24772   0024A0  6E11               	movwf	(i2___flmul@b+2)^0,c
 24773   0024A2  0E00               	movlw	0
 24774   0024A4  6E12               	movwf	(i2___flmul@b+3)^0,c
 24775   0024A6                     i2l5730:
 24776   0024A6  5016               	movf	(i2___flmul@a+3)^0,w,c
 24777   0024A8  0B80               	andlw	128
 24778   0024AA  1A1B               	xorwf	i2___flmul@sign^0,f,c
 24779   0024AC  5016               	movf	(i2___flmul@a+3)^0,w,c
 24780   0024AE  2416               	addwf	(i2___flmul@a+3)^0,w,c
 24781   0024B0  6E20               	movwf	i2___flmul@aexp^0,c
 24782   0024B2  AE15               	btfss	(i2___flmul@a+2)^0,7,c
 24783   0024B4  EF5E  F012         	goto	i2u549_41
 24784   0024B8  EF60  F012         	goto	i2u549_40
 24785   0024BC                     i2u549_41:
 24786   0024BC  EF61  F012         	goto	i2l5738
 24787   0024C0                     i2u549_40:
 24788   0024C0  8020               	bsf	i2___flmul@aexp^0,0,c
 24789   0024C2                     i2l5738:
 24790   0024C2  5020               	movf	i2___flmul@aexp^0,w,c
 24791   0024C4  B4D8               	btfsc	status,2,c
 24792   0024C6  EF67  F012         	goto	i2u550_41
 24793   0024CA  EF69  F012         	goto	i2u550_40
 24794   0024CE                     i2u550_41:
 24795   0024CE  EF7C  F012         	goto	i2l5746
 24796   0024D2                     i2u550_40:
 24797   0024D2  2820               	incf	i2___flmul@aexp^0,w,c
 24798   0024D4  A4D8               	btfss	status,2,c
 24799   0024D6  EF6F  F012         	goto	i2u551_41
 24800   0024DA  EF71  F012         	goto	i2u551_40
 24801   0024DE                     i2u551_41:
 24802   0024DE  EF79  F012         	goto	i2l5744
 24803   0024E2                     i2u551_40:
 24804   0024E2  0E00               	movlw	0
 24805   0024E4  6E13               	movwf	i2___flmul@a^0,c
 24806   0024E6  0E00               	movlw	0
 24807   0024E8  6E14               	movwf	(i2___flmul@a+1)^0,c
 24808   0024EA  0E00               	movlw	0
 24809   0024EC  6E15               	movwf	(i2___flmul@a+2)^0,c
 24810   0024EE  0E00               	movlw	0
 24811   0024F0  6E16               	movwf	(i2___flmul@a+3)^0,c
 24812   0024F2                     i2l5744:
 24813   0024F2  8E15               	bsf	(i2___flmul@a+2)^0,7,c
 24814   0024F4  EF84  F012         	goto	i2l1495
 24815   0024F8                     i2l5746:
 24816   0024F8  0E00               	movlw	0
 24817   0024FA  6E13               	movwf	i2___flmul@a^0,c
 24818   0024FC  0E00               	movlw	0
 24819   0024FE  6E14               	movwf	(i2___flmul@a+1)^0,c
 24820   002500  0E00               	movlw	0
 24821   002502  6E15               	movwf	(i2___flmul@a+2)^0,c
 24822   002504  0E00               	movlw	0
 24823   002506  6E16               	movwf	(i2___flmul@a+3)^0,c
 24824   002508                     i2l1495:
 24825   002508  5020               	movf	i2___flmul@aexp^0,w,c
 24826   00250A  B4D8               	btfsc	status,2,c
 24827   00250C  EF8A  F012         	goto	i2u552_41
 24828   002510  EF8C  F012         	goto	i2u552_40
 24829   002514                     i2u552_41:
 24830   002514  EF94  F012         	goto	i2l5750
 24831   002518                     i2u552_40:
 24832   002518  5021               	movf	i2___flmul@bexp^0,w,c
 24833   00251A  A4D8               	btfss	status,2,c
 24834   00251C  EF92  F012         	goto	i2u553_41
 24835   002520  EF94  F012         	goto	i2u553_40
 24836   002524                     i2u553_41:
 24837   002524  EF9E  F012         	goto	i2l5754
 24838   002528                     i2u553_40:
 24839   002528                     i2l5750:
 24840   002528  0E00               	movlw	0
 24841   00252A  6E0F               	movwf	?i2___flmul^0,c
 24842   00252C  0E00               	movlw	0
 24843   00252E  6E10               	movwf	(?i2___flmul+1)^0,c
 24844   002530  0E00               	movlw	0
 24845   002532  6E11               	movwf	(?i2___flmul+2)^0,c
 24846   002534  0E00               	movlw	0
 24847   002536  6E12               	movwf	(?i2___flmul+3)^0,c
 24848   002538  EF46  F014         	goto	i2l1499
 24849   00253C                     i2l5754:
 24850   00253C  5015               	movf	(i2___flmul@a+2)^0,w,c
 24851   00253E  020F               	mulwf	i2___flmul@b^0,c
 24852   002540  006F FFCC  F026    	movff	prodl,i2___flmul@temp
 24853   002546  006F FFD0  F027    	movff	prodh,i2___flmul@temp+1
 24854   00254C  5026               	movf	i2___flmul@temp^0,w,c
 24855   00254E  6E1C               	movwf	i2___flmul@grs^0,c
 24856   002550  6A1D               	clrf	(i2___flmul@grs+1)^0,c
 24857   002552  6A1E               	clrf	(i2___flmul@grs+2)^0,c
 24858   002554  6A1F               	clrf	(i2___flmul@grs+3)^0,c
 24859   002556  5027               	movf	(i2___flmul@temp+1)^0,w,c
 24860   002558  6E22               	movwf	i2___flmul@prod^0,c
 24861   00255A  6A23               	clrf	(i2___flmul@prod+1)^0,c
 24862   00255C  6A24               	clrf	(i2___flmul@prod+2)^0,c
 24863   00255E  6A25               	clrf	(i2___flmul@prod+3)^0,c
 24864   002560  5014               	movf	(i2___flmul@a+1)^0,w,c
 24865   002562  0210               	mulwf	(i2___flmul@b+1)^0,c
 24866   002564  006F FFCC  F026    	movff	prodl,i2___flmul@temp
 24867   00256A  006F FFD0  F027    	movff	prodh,i2___flmul@temp+1
 24868   002570  5026               	movf	i2___flmul@temp^0,w,c
 24869   002572  261C               	addwf	i2___flmul@grs^0,f,c
 24870   002574  0E00               	movlw	0
 24871   002576  221D               	addwfc	(i2___flmul@grs+1)^0,f,c
 24872   002578  221E               	addwfc	(i2___flmul@grs+2)^0,f,c
 24873   00257A  221F               	addwfc	(i2___flmul@grs+3)^0,f,c
 24874   00257C  5027               	movf	(i2___flmul@temp+1)^0,w,c
 24875   00257E  2622               	addwf	i2___flmul@prod^0,f,c
 24876   002580  0E00               	movlw	0
 24877   002582  2223               	addwfc	(i2___flmul@prod+1)^0,f,c
 24878   002584  2224               	addwfc	(i2___flmul@prod+2)^0,f,c
 24879   002586  2225               	addwfc	(i2___flmul@prod+3)^0,f,c
 24880   002588  5013               	movf	i2___flmul@a^0,w,c
 24881   00258A  0211               	mulwf	(i2___flmul@b+2)^0,c
 24882   00258C  006F FFCC  F026    	movff	prodl,i2___flmul@temp
 24883   002592  006F FFD0  F027    	movff	prodh,i2___flmul@temp+1
 24884   002598  5026               	movf	i2___flmul@temp^0,w,c
 24885   00259A  261C               	addwf	i2___flmul@grs^0,f,c
 24886   00259C  0E00               	movlw	0
 24887   00259E  221D               	addwfc	(i2___flmul@grs+1)^0,f,c
 24888   0025A0  221E               	addwfc	(i2___flmul@grs+2)^0,f,c
 24889   0025A2  221F               	addwfc	(i2___flmul@grs+3)^0,f,c
 24890   0025A4  5027               	movf	(i2___flmul@temp+1)^0,w,c
 24891   0025A6  2622               	addwf	i2___flmul@prod^0,f,c
 24892   0025A8  0E00               	movlw	0
 24893   0025AA  2223               	addwfc	(i2___flmul@prod+1)^0,f,c
 24894   0025AC  2224               	addwfc	(i2___flmul@prod+2)^0,f,c
 24895   0025AE  2225               	addwfc	(i2___flmul@prod+3)^0,f,c
 24896   0025B0  C01E  F01F         	movff	i2___flmul@grs+2,i2___flmul@grs+3
 24897   0025B4  C01D  F01E         	movff	i2___flmul@grs+1,i2___flmul@grs+2
 24898   0025B8  C01C  F01D         	movff	i2___flmul@grs,i2___flmul@grs+1
 24899   0025BC  6A1C               	clrf	i2___flmul@grs^0,c
 24900   0025BE  5013               	movf	i2___flmul@a^0,w,c
 24901   0025C0  0210               	mulwf	(i2___flmul@b+1)^0,c
 24902   0025C2  006F FFCC  F026    	movff	prodl,i2___flmul@temp
 24903   0025C8  006F FFD0  F027    	movff	prodh,i2___flmul@temp+1
 24904   0025CE  5026               	movf	i2___flmul@temp^0,w,c
 24905   0025D0  261C               	addwf	i2___flmul@grs^0,f,c
 24906   0025D2  5027               	movf	(i2___flmul@temp+1)^0,w,c
 24907   0025D4  221D               	addwfc	(i2___flmul@grs+1)^0,f,c
 24908   0025D6  0E00               	movlw	0
 24909   0025D8  221E               	addwfc	(i2___flmul@grs+2)^0,f,c
 24910   0025DA  0E00               	movlw	0
 24911   0025DC  221F               	addwfc	(i2___flmul@grs+3)^0,f,c
 24912   0025DE  5014               	movf	(i2___flmul@a+1)^0,w,c
 24913   0025E0  020F               	mulwf	i2___flmul@b^0,c
 24914   0025E2  006F FFCC  F026    	movff	prodl,i2___flmul@temp
 24915   0025E8  006F FFD0  F027    	movff	prodh,i2___flmul@temp+1
 24916   0025EE  5026               	movf	i2___flmul@temp^0,w,c
 24917   0025F0  261C               	addwf	i2___flmul@grs^0,f,c
 24918   0025F2  5027               	movf	(i2___flmul@temp+1)^0,w,c
 24919   0025F4  221D               	addwfc	(i2___flmul@grs+1)^0,f,c
 24920   0025F6  0E00               	movlw	0
 24921   0025F8  221E               	addwfc	(i2___flmul@grs+2)^0,f,c
 24922   0025FA  0E00               	movlw	0
 24923   0025FC  221F               	addwfc	(i2___flmul@grs+3)^0,f,c
 24924   0025FE  C01E  F01F         	movff	i2___flmul@grs+2,i2___flmul@grs+3
 24925   002602  C01D  F01E         	movff	i2___flmul@grs+1,i2___flmul@grs+2
 24926   002606  C01C  F01D         	movff	i2___flmul@grs,i2___flmul@grs+1
 24927   00260A  6A1C               	clrf	i2___flmul@grs^0,c
 24928   00260C  5013               	movf	i2___flmul@a^0,w,c
 24929   00260E  020F               	mulwf	i2___flmul@b^0,c
 24930   002610  006F FFCC  F026    	movff	prodl,i2___flmul@temp
 24931   002616  006F FFD0  F027    	movff	prodh,i2___flmul@temp+1
 24932   00261C  5026               	movf	i2___flmul@temp^0,w,c
 24933   00261E  261C               	addwf	i2___flmul@grs^0,f,c
 24934   002620  5027               	movf	(i2___flmul@temp+1)^0,w,c
 24935   002622  221D               	addwfc	(i2___flmul@grs+1)^0,f,c
 24936   002624  0E00               	movlw	0
 24937   002626  221E               	addwfc	(i2___flmul@grs+2)^0,f,c
 24938   002628  0E00               	movlw	0
 24939   00262A  221F               	addwfc	(i2___flmul@grs+3)^0,f,c
 24940   00262C  5015               	movf	(i2___flmul@a+2)^0,w,c
 24941   00262E  0210               	mulwf	(i2___flmul@b+1)^0,c
 24942   002630  006F FFCC  F026    	movff	prodl,i2___flmul@temp
 24943   002636  006F FFD0  F027    	movff	prodh,i2___flmul@temp+1
 24944   00263C  5026               	movf	i2___flmul@temp^0,w,c
 24945   00263E  2622               	addwf	i2___flmul@prod^0,f,c
 24946   002640  5027               	movf	(i2___flmul@temp+1)^0,w,c
 24947   002642  2223               	addwfc	(i2___flmul@prod+1)^0,f,c
 24948   002644  0E00               	movlw	0
 24949   002646  2224               	addwfc	(i2___flmul@prod+2)^0,f,c
 24950   002648  0E00               	movlw	0
 24951   00264A  2225               	addwfc	(i2___flmul@prod+3)^0,f,c
 24952   00264C  5014               	movf	(i2___flmul@a+1)^0,w,c
 24953   00264E  0211               	mulwf	(i2___flmul@b+2)^0,c
 24954   002650  006F FFCC  F026    	movff	prodl,i2___flmul@temp
 24955   002656  006F FFD0  F027    	movff	prodh,i2___flmul@temp+1
 24956   00265C  5026               	movf	i2___flmul@temp^0,w,c
 24957   00265E  2622               	addwf	i2___flmul@prod^0,f,c
 24958   002660  5027               	movf	(i2___flmul@temp+1)^0,w,c
 24959   002662  2223               	addwfc	(i2___flmul@prod+1)^0,f,c
 24960   002664  0E00               	movlw	0
 24961   002666  2224               	addwfc	(i2___flmul@prod+2)^0,f,c
 24962   002668  0E00               	movlw	0
 24963   00266A  2225               	addwfc	(i2___flmul@prod+3)^0,f,c
 24964   00266C  5015               	movf	(i2___flmul@a+2)^0,w,c
 24965   00266E  0211               	mulwf	(i2___flmul@b+2)^0,c
 24966   002670  006F FFCC  F026    	movff	prodl,i2___flmul@temp
 24967   002676  006F FFD0  F027    	movff	prodh,i2___flmul@temp+1
 24968   00267C  5026               	movf	i2___flmul@temp^0,w,c
 24969   00267E  6E17               	movwf	??i2___flmul^0,c
 24970   002680  5027               	movf	(i2___flmul@temp+1)^0,w,c
 24971   002682  6E18               	movwf	(??i2___flmul+1)^0,c
 24972   002684  6A19               	clrf	(??i2___flmul+2)^0,c
 24973   002686  6A1A               	clrf	(??i2___flmul+3)^0,c
 24974   002688  C019  F01A         	movff	??i2___flmul+2,??i2___flmul+3
 24975   00268C  C018  F019         	movff	??i2___flmul+1,??i2___flmul+2
 24976   002690  C017  F018         	movff	??i2___flmul,??i2___flmul+1
 24977   002694  6A17               	clrf	??i2___flmul^0,c
 24978   002696  5017               	movf	??i2___flmul^0,w,c
 24979   002698  2622               	addwf	i2___flmul@prod^0,f,c
 24980   00269A  5018               	movf	(??i2___flmul+1)^0,w,c
 24981   00269C  2223               	addwfc	(i2___flmul@prod+1)^0,f,c
 24982   00269E  5019               	movf	(??i2___flmul+2)^0,w,c
 24983   0026A0  2224               	addwfc	(i2___flmul@prod+2)^0,f,c
 24984   0026A2  501A               	movf	(??i2___flmul+3)^0,w,c
 24985   0026A4  2225               	addwfc	(i2___flmul@prod+3)^0,f,c
 24986   0026A6  C01C  F017         	movff	i2___flmul@grs,??i2___flmul
 24987   0026AA  C01D  F018         	movff	i2___flmul@grs+1,??i2___flmul+1
 24988   0026AE  C01E  F019         	movff	i2___flmul@grs+2,??i2___flmul+2
 24989   0026B2  C01F  F01A         	movff	i2___flmul@grs+3,??i2___flmul+3
 24990   0026B6  0E19               	movlw	25
 24991   0026B8  EF63  F013         	goto	i2u554_40
 24992   0026BC                     i2u554_45:
 24993   0026BC  90D8               	bcf	status,0,c
 24994   0026BE  321A               	rrcf	(??i2___flmul+3)^0,f,c
 24995   0026C0  3219               	rrcf	(??i2___flmul+2)^0,f,c
 24996   0026C2  3218               	rrcf	(??i2___flmul+1)^0,f,c
 24997   0026C4  3217               	rrcf	??i2___flmul^0,f,c
 24998   0026C6                     i2u554_40:
 24999   0026C6  2EE8               	decfsz	wreg,f,c
 25000   0026C8  EF5E  F013         	goto	i2u554_45
 25001   0026CC  5017               	movf	??i2___flmul^0,w,c
 25002   0026CE  2622               	addwf	i2___flmul@prod^0,f,c
 25003   0026D0  5018               	movf	(??i2___flmul+1)^0,w,c
 25004   0026D2  2223               	addwfc	(i2___flmul@prod+1)^0,f,c
 25005   0026D4  5019               	movf	(??i2___flmul+2)^0,w,c
 25006   0026D6  2224               	addwfc	(i2___flmul@prod+2)^0,f,c
 25007   0026D8  501A               	movf	(??i2___flmul+3)^0,w,c
 25008   0026DA  2225               	addwfc	(i2___flmul@prod+3)^0,f,c
 25009   0026DC  C01E  F01F         	movff	i2___flmul@grs+2,i2___flmul@grs+3
 25010   0026E0  C01D  F01E         	movff	i2___flmul@grs+1,i2___flmul@grs+2
 25011   0026E4  C01C  F01D         	movff	i2___flmul@grs,i2___flmul@grs+1
 25012   0026E8  6A1C               	clrf	i2___flmul@grs^0,c
 25013   0026EA  5020               	movf	i2___flmul@aexp^0,w,c
 25014   0026EC  C021  F017         	movff	i2___flmul@bexp,??i2___flmul
 25015   0026F0  6A18               	clrf	(??i2___flmul+1)^0,c
 25016   0026F2  2617               	addwf	??i2___flmul^0,f,c
 25017   0026F4  0E00               	movlw	0
 25018   0026F6  2218               	addwfc	(??i2___flmul+1)^0,f,c
 25019   0026F8  0E82               	movlw	130
 25020   0026FA  2417               	addwf	??i2___flmul^0,w,c
 25021   0026FC  6E26               	movwf	i2___flmul@temp^0,c
 25022   0026FE  0EFF               	movlw	255
 25023   002700  2018               	addwfc	(??i2___flmul+1)^0,w,c
 25024   002702  6E27               	movwf	(i2___flmul@temp+1)^0,c
 25025   002704  EF99  F013         	goto	i2l5802
 25026   002708                     i2l5796:
 25027   002708  90D8               	bcf	status,0,c
 25028   00270A  3622               	rlcf	i2___flmul@prod^0,f,c
 25029   00270C  3623               	rlcf	(i2___flmul@prod+1)^0,f,c
 25030   00270E  3624               	rlcf	(i2___flmul@prod+2)^0,f,c
 25031   002710  3625               	rlcf	(i2___flmul@prod+3)^0,f,c
 25032   002712  AE1F               	btfss	(i2___flmul@grs+3)^0,7,c
 25033   002714  EF8E  F013         	goto	i2u555_41
 25034   002718  EF90  F013         	goto	i2u555_40
 25035   00271C                     i2u555_41:
 25036   00271C  EF91  F013         	goto	i2l1502
 25037   002720                     i2u555_40:
 25038   002720  8022               	bsf	i2___flmul@prod^0,0,c
 25039   002722                     i2l1502:
 25040   002722  90D8               	bcf	status,0,c
 25041   002724  361C               	rlcf	i2___flmul@grs^0,f,c
 25042   002726  361D               	rlcf	(i2___flmul@grs+1)^0,f,c
 25043   002728  361E               	rlcf	(i2___flmul@grs+2)^0,f,c
 25044   00272A  361F               	rlcf	(i2___flmul@grs+3)^0,f,c
 25045   00272C  0626               	decf	i2___flmul@temp^0,f,c
 25046   00272E  A0D8               	btfss	status,0,c
 25047   002730  0627               	decf	(i2___flmul@temp+1)^0,f,c
 25048   002732                     i2l5802:
 25049   002732  AE24               	btfss	(i2___flmul@prod+2)^0,7,c
 25050   002734  EF9E  F013         	goto	i2u556_41
 25051   002738  EFA0  F013         	goto	i2u556_40
 25052   00273C                     i2u556_41:
 25053   00273C  EF84  F013         	goto	i2l5796
 25054   002740                     i2u556_40:
 25055   002740  6A20               	clrf	i2___flmul@aexp^0,c
 25056   002742  AE1F               	btfss	(i2___flmul@grs+3)^0,7,c
 25057   002744  EFA6  F013         	goto	i2u557_41
 25058   002748  EFA8  F013         	goto	i2u557_40
 25059   00274C                     i2u557_41:
 25060   00274C  EFCC  F013         	goto	i2l1504
 25061   002750                     i2u557_40:
 25062   002750  0EFF               	movlw	255
 25063   002752  141C               	andwf	i2___flmul@grs^0,w,c
 25064   002754  6E17               	movwf	??i2___flmul^0,c
 25065   002756  0EFF               	movlw	255
 25066   002758  141D               	andwf	(i2___flmul@grs+1)^0,w,c
 25067   00275A  6E18               	movwf	(??i2___flmul+1)^0,c
 25068   00275C  0EFF               	movlw	255
 25069   00275E  141E               	andwf	(i2___flmul@grs+2)^0,w,c
 25070   002760  6E19               	movwf	(??i2___flmul+2)^0,c
 25071   002762  0E7F               	movlw	127
 25072   002764  141F               	andwf	(i2___flmul@grs+3)^0,w,c
 25073   002766  6E1A               	movwf	(??i2___flmul+3)^0,c
 25074   002768  5017               	movf	??i2___flmul^0,w,c
 25075   00276A  1018               	iorwf	(??i2___flmul+1)^0,w,c
 25076   00276C  1019               	iorwf	(??i2___flmul+2)^0,w,c
 25077   00276E  101A               	iorwf	(??i2___flmul+3)^0,w,c
 25078   002770  B4D8               	btfsc	status,2,c
 25079   002772  EFBD  F013         	goto	i2u558_41
 25080   002776  EFBF  F013         	goto	i2u558_40
 25081   00277A                     i2u558_41:
 25082   00277A  EFC3  F013         	goto	i2l1505
 25083   00277E                     i2u558_40:
 25084   00277E                     i2l5806:
 25085   00277E  0E01               	movlw	1
 25086   002780  6E20               	movwf	i2___flmul@aexp^0,c
 25087   002782  EFCC  F013         	goto	i2l1504
 25088   002786                     i2l1505:
 25089   002786  A022               	btfss	i2___flmul@prod^0,0,c
 25090   002788  EFC8  F013         	goto	i2u559_41
 25091   00278C  EFCA  F013         	goto	i2u559_40
 25092   002790                     i2u559_41:
 25093   002790  EFCC  F013         	goto	i2l1504
 25094   002794                     i2u559_40:
 25095   002794  EFBF  F013         	goto	i2l5806
 25096   002798                     i2l1504:
 25097   002798  5020               	movf	i2___flmul@aexp^0,w,c
 25098   00279A  B4D8               	btfsc	status,2,c
 25099   00279C  EFD2  F013         	goto	i2u560_41
 25100   0027A0  EFD4  F013         	goto	i2u560_40
 25101   0027A4                     i2u560_41:
 25102   0027A4  EFF8  F013         	goto	i2l5818
 25103   0027A8                     i2u560_40:
 25104   0027A8  0E01               	movlw	1
 25105   0027AA  2622               	addwf	i2___flmul@prod^0,f,c
 25106   0027AC  0E00               	movlw	0
 25107   0027AE  2223               	addwfc	(i2___flmul@prod+1)^0,f,c
 25108   0027B0  2224               	addwfc	(i2___flmul@prod+2)^0,f,c
 25109   0027B2  2225               	addwfc	(i2___flmul@prod+3)^0,f,c
 25110   0027B4  A025               	btfss	(i2___flmul@prod+3)^0,0,c
 25111   0027B6  EFDF  F013         	goto	i2u561_41
 25112   0027BA  EFE1  F013         	goto	i2u561_40
 25113   0027BE                     i2u561_41:
 25114   0027BE  EFF8  F013         	goto	i2l5818
 25115   0027C2                     i2u561_40:
 25116   0027C2  C022  F017         	movff	i2___flmul@prod,??i2___flmul
 25117   0027C6  C023  F018         	movff	i2___flmul@prod+1,??i2___flmul+1
 25118   0027CA  C024  F019         	movff	i2___flmul@prod+2,??i2___flmul+2
 25119   0027CE  C025  F01A         	movff	i2___flmul@prod+3,??i2___flmul+3
 25120   0027D2  341A               	rlcf	(??i2___flmul+3)^0,w,c
 25121   0027D4  321A               	rrcf	(??i2___flmul+3)^0,f,c
 25122   0027D6  3219               	rrcf	(??i2___flmul+2)^0,f,c
 25123   0027D8  3218               	rrcf	(??i2___flmul+1)^0,f,c
 25124   0027DA  3217               	rrcf	??i2___flmul^0,f,c
 25125   0027DC  C017  F022         	movff	??i2___flmul,i2___flmul@prod
 25126   0027E0  C018  F023         	movff	??i2___flmul+1,i2___flmul@prod+1
 25127   0027E4  C019  F024         	movff	??i2___flmul+2,i2___flmul@prod+2
 25128   0027E8  C01A  F025         	movff	??i2___flmul+3,i2___flmul@prod+3
 25129   0027EC  4A26               	infsnz	i2___flmul@temp^0,f,c
 25130   0027EE  2A27               	incf	(i2___flmul@temp+1)^0,f,c
 25131   0027F0                     i2l5818:
 25132   0027F0  BE27               	btfsc	(i2___flmul@temp+1)^0,7,c
 25133   0027F2  EF03  F014         	goto	i2u562_41
 25134   0027F6  5027               	movf	(i2___flmul@temp+1)^0,w,c
 25135   0027F8  E108               	bnz	i2u562_40
 25136   0027FA  2826               	incf	i2___flmul@temp^0,w,c
 25137   0027FC  A0D8               	btfss	status,0,c
 25138   0027FE  EF03  F014         	goto	i2u562_41
 25139   002802  EF05  F014         	goto	i2u562_40
 25140   002806                     i2u562_41:
 25141   002806  EF0F  F014         	goto	i2l5822
 25142   00280A                     i2u562_40:
 25143   00280A  0E00               	movlw	0
 25144   00280C  6E22               	movwf	i2___flmul@prod^0,c
 25145   00280E  0E00               	movlw	0
 25146   002810  6E23               	movwf	(i2___flmul@prod+1)^0,c
 25147   002812  0E80               	movlw	128
 25148   002814  6E24               	movwf	(i2___flmul@prod+2)^0,c
 25149   002816  0E7F               	movlw	127
 25150   002818  6E25               	movwf	(i2___flmul@prod+3)^0,c
 25151   00281A  EF3C  F014         	goto	i2l5836
 25152   00281E                     i2l5822:
 25153   00281E  BE27               	btfsc	(i2___flmul@temp+1)^0,7,c
 25154   002820  EF1C  F014         	goto	i2u563_40
 25155   002824  5027               	movf	(i2___flmul@temp+1)^0,w,c
 25156   002826  E106               	bnz	i2u563_41
 25157   002828  0426               	decf	i2___flmul@temp^0,w,c
 25158   00282A  B0D8               	btfsc	status,0,c
 25159   00282C  EF1A  F014         	goto	i2u563_41
 25160   002830  EF1C  F014         	goto	i2u563_40
 25161   002834                     i2u563_41:
 25162   002834  EF27  F014         	goto	i2l1512
 25163   002838                     i2u563_40:
 25164   002838  0E00               	movlw	0
 25165   00283A  6E22               	movwf	i2___flmul@prod^0,c
 25166   00283C  0E00               	movlw	0
 25167   00283E  6E23               	movwf	(i2___flmul@prod+1)^0,c
 25168   002840  0E00               	movlw	0
 25169   002842  6E24               	movwf	(i2___flmul@prod+2)^0,c
 25170   002844  0E00               	movlw	0
 25171   002846  6E25               	movwf	(i2___flmul@prod+3)^0,c
 25172   002848  6A1B               	clrf	i2___flmul@sign^0,c
 25173   00284A  EF3C  F014         	goto	i2l5836
 25174   00284E                     i2l1512:
 25175   00284E  C026  F021         	movff	i2___flmul@temp,i2___flmul@bexp
 25176   002852  0EFF               	movlw	255
 25177   002854  1622               	andwf	i2___flmul@prod^0,f,c
 25178   002856  0EFF               	movlw	255
 25179   002858  1623               	andwf	(i2___flmul@prod+1)^0,f,c
 25180   00285A  0E7F               	movlw	127
 25181   00285C  1624               	andwf	(i2___flmul@prod+2)^0,f,c
 25182   00285E  0E00               	movlw	0
 25183   002860  1625               	andwf	(i2___flmul@prod+3)^0,f,c
 25184   002862  A021               	btfss	i2___flmul@bexp^0,0,c
 25185   002864  EF36  F014         	goto	i2u564_41
 25186   002868  EF38  F014         	goto	i2u564_40
 25187   00286C                     i2u564_41:
 25188   00286C  EF39  F014         	goto	i2l5834
 25189   002870                     i2u564_40:
 25190   002870  8E24               	bsf	(i2___flmul@prod+2)^0,7,c
 25191   002872                     i2l5834:
 25192   002872  90D8               	bcf	status,0,c
 25193   002874  3021               	rrcf	i2___flmul@bexp^0,w,c
 25194   002876  6E25               	movwf	(i2___flmul@prod+3)^0,c
 25195   002878                     i2l5836:
 25196   002878  501B               	movf	i2___flmul@sign^0,w,c
 25197   00287A  1225               	iorwf	(i2___flmul@prod+3)^0,f,c
 25198   00287C  C022  F00F         	movff	i2___flmul@prod,?i2___flmul
 25199   002880  C023  F010         	movff	i2___flmul@prod+1,?i2___flmul+1
 25200   002884  C024  F011         	movff	i2___flmul@prod+2,?i2___flmul+2
 25201   002888  C025  F012         	movff	i2___flmul@prod+3,?i2___flmul+3
 25202   00288C                     i2l1499:
 25203   00288C  0012               	return		;funcret
 25204   00288E                     __end_ofi2___flmul:
 25205                           	callstack 0
 25206                           
 25207 ;; *************** function i2___fldiv *****************
 25208 ;; Defined at:
 25209 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\sprcdiv.c"
 25210 ;; Parameters:    Size  Location     Type
 25211 ;;  b               4   39[COMRAM] unsigned char 
 25212 ;;  a               4   43[COMRAM] unsigned char 
 25213 ;; Auto vars:     Size  Location     Type
 25214 ;;  grs             4   58[COMRAM] unsigned long 
 25215 ;;  rem             4   51[COMRAM] unsigned long 
 25216 ;;  new_exp         2   56[COMRAM] short 
 25217 ;;  aexp            1   63[COMRAM] unsigned char 
 25218 ;;  bexp            1   62[COMRAM] unsigned char 
 25219 ;;  sign            1   55[COMRAM] unsigned char 
 25220 ;; Return value:  Size  Location     Type
 25221 ;;                  4   39[COMRAM] unsigned char 
 25222 ;; Registers used:
 25223 ;;		wreg, status,2, status,0
 25224 ;; Tracked objects:
 25225 ;;		On entry : 0/0
 25226 ;;		On exit  : 0/0
 25227 ;;		Unchanged: 0/0
 25228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25229 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25230 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25231 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25232 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25233 ;;Total ram usage:       25 bytes
 25234 ;; Hardware stack levels used: 1
 25235 ;; This function calls:
 25236 ;;		Nothing
 25237 ;; This function is called by:
 25238 ;;		i2_lire_tension
 25239 ;;		i2_efgtoa
 25240 ;; This function uses a non-reentrant model
 25241 ;;
 25242                           
 25243                           	psect	text100
 25244   002FEC                     __ptext100:
 25245                           	callstack 0
 25246   002FEC                     i2___fldiv:
 25247                           	callstack 12
 25248   002FEC  502B               	movf	(i2___fldiv@b+3)^0,w,c
 25249   002FEE  0B80               	andlw	128
 25250   002FF0  6E38               	movwf	i2___fldiv@sign^0,c
 25251   002FF2  502B               	movf	(i2___fldiv@b+3)^0,w,c
 25252   002FF4  242B               	addwf	(i2___fldiv@b+3)^0,w,c
 25253   002FF6  6E3F               	movwf	i2___fldiv@bexp^0,c
 25254   002FF8  AE2A               	btfss	(i2___fldiv@b+2)^0,7,c
 25255   002FFA  EF01  F018         	goto	i2u523_41
 25256   002FFE  EF03  F018         	goto	i2u523_40
 25257   003002                     i2u523_41:
 25258   003002  EF04  F018         	goto	i2l5584
 25259   003006                     i2u523_40:
 25260   003006  803F               	bsf	i2___fldiv@bexp^0,0,c
 25261   003008                     i2l5584:
 25262   003008  503F               	movf	i2___fldiv@bexp^0,w,c
 25263   00300A  B4D8               	btfsc	status,2,c
 25264   00300C  EF0A  F018         	goto	i2u524_41
 25265   003010  EF0C  F018         	goto	i2u524_40
 25266   003014                     i2u524_41:
 25267   003014  EF20  F018         	goto	i2l5594
 25268   003018                     i2u524_40:
 25269   003018  283F               	incf	i2___fldiv@bexp^0,w,c
 25270   00301A  A4D8               	btfss	status,2,c
 25271   00301C  EF12  F018         	goto	i2u525_41
 25272   003020  EF14  F018         	goto	i2u525_40
 25273   003024                     i2u525_41:
 25274   003024  EF1C  F018         	goto	i2l5590
 25275   003028                     i2u525_40:
 25276   003028  0E00               	movlw	0
 25277   00302A  6E28               	movwf	i2___fldiv@b^0,c
 25278   00302C  0E00               	movlw	0
 25279   00302E  6E29               	movwf	(i2___fldiv@b+1)^0,c
 25280   003030  0E00               	movlw	0
 25281   003032  6E2A               	movwf	(i2___fldiv@b+2)^0,c
 25282   003034  0E00               	movlw	0
 25283   003036  6E2B               	movwf	(i2___fldiv@b+3)^0,c
 25284   003038                     i2l5590:
 25285   003038  8E2A               	bsf	(i2___fldiv@b+2)^0,7,c
 25286   00303A  6A2B               	clrf	(i2___fldiv@b+3)^0,c
 25287   00303C  EF28  F018         	goto	i2l5596
 25288   003040                     i2l5594:
 25289   003040  0E00               	movlw	0
 25290   003042  6E28               	movwf	i2___fldiv@b^0,c
 25291   003044  0E00               	movlw	0
 25292   003046  6E29               	movwf	(i2___fldiv@b+1)^0,c
 25293   003048  0E00               	movlw	0
 25294   00304A  6E2A               	movwf	(i2___fldiv@b+2)^0,c
 25295   00304C  0E00               	movlw	0
 25296   00304E  6E2B               	movwf	(i2___fldiv@b+3)^0,c
 25297   003050                     i2l5596:
 25298   003050  502F               	movf	(i2___fldiv@a+3)^0,w,c
 25299   003052  0B80               	andlw	128
 25300   003054  1A38               	xorwf	i2___fldiv@sign^0,f,c
 25301   003056  502F               	movf	(i2___fldiv@a+3)^0,w,c
 25302   003058  242F               	addwf	(i2___fldiv@a+3)^0,w,c
 25303   00305A  6E40               	movwf	i2___fldiv@aexp^0,c
 25304   00305C  AE2E               	btfss	(i2___fldiv@a+2)^0,7,c
 25305   00305E  EF33  F018         	goto	i2u526_41
 25306   003062  EF35  F018         	goto	i2u526_40
 25307   003066                     i2u526_41:
 25308   003066  EF36  F018         	goto	i2l5604
 25309   00306A                     i2u526_40:
 25310   00306A  8040               	bsf	i2___fldiv@aexp^0,0,c
 25311   00306C                     i2l5604:
 25312   00306C  5040               	movf	i2___fldiv@aexp^0,w,c
 25313   00306E  B4D8               	btfsc	status,2,c
 25314   003070  EF3C  F018         	goto	i2u527_41
 25315   003074  EF3E  F018         	goto	i2u527_40
 25316   003078                     i2u527_41:
 25317   003078  EF52  F018         	goto	i2l5614
 25318   00307C                     i2u527_40:
 25319   00307C  2840               	incf	i2___fldiv@aexp^0,w,c
 25320   00307E  A4D8               	btfss	status,2,c
 25321   003080  EF44  F018         	goto	i2u528_41
 25322   003084  EF46  F018         	goto	i2u528_40
 25323   003088                     i2u528_41:
 25324   003088  EF4E  F018         	goto	i2l5610
 25325   00308C                     i2u528_40:
 25326   00308C  0E00               	movlw	0
 25327   00308E  6E2C               	movwf	i2___fldiv@a^0,c
 25328   003090  0E00               	movlw	0
 25329   003092  6E2D               	movwf	(i2___fldiv@a+1)^0,c
 25330   003094  0E00               	movlw	0
 25331   003096  6E2E               	movwf	(i2___fldiv@a+2)^0,c
 25332   003098  0E00               	movlw	0
 25333   00309A  6E2F               	movwf	(i2___fldiv@a+3)^0,c
 25334   00309C                     i2l5610:
 25335   00309C  8E2E               	bsf	(i2___fldiv@a+2)^0,7,c
 25336   00309E  6A2F               	clrf	(i2___fldiv@a+3)^0,c
 25337   0030A0  EF5A  F018         	goto	i2l5616
 25338   0030A4                     i2l5614:
 25339   0030A4  0E00               	movlw	0
 25340   0030A6  6E2C               	movwf	i2___fldiv@a^0,c
 25341   0030A8  0E00               	movlw	0
 25342   0030AA  6E2D               	movwf	(i2___fldiv@a+1)^0,c
 25343   0030AC  0E00               	movlw	0
 25344   0030AE  6E2E               	movwf	(i2___fldiv@a+2)^0,c
 25345   0030B0  0E00               	movlw	0
 25346   0030B2  6E2F               	movwf	(i2___fldiv@a+3)^0,c
 25347   0030B4                     i2l5616:
 25348   0030B4  502C               	movf	i2___fldiv@a^0,w,c
 25349   0030B6  102D               	iorwf	(i2___fldiv@a+1)^0,w,c
 25350   0030B8  102E               	iorwf	(i2___fldiv@a+2)^0,w,c
 25351   0030BA  102F               	iorwf	(i2___fldiv@a+3)^0,w,c
 25352   0030BC  A4D8               	btfss	status,2,c
 25353   0030BE  EF63  F018         	goto	i2u529_41
 25354   0030C2  EF65  F018         	goto	i2u529_40
 25355   0030C6                     i2u529_41:
 25356   0030C6  EF7D  F018         	goto	i2l5628
 25357   0030CA                     i2u529_40:
 25358   0030CA  0E00               	movlw	0
 25359   0030CC  6E28               	movwf	i2___fldiv@b^0,c
 25360   0030CE  0E00               	movlw	0
 25361   0030D0  6E29               	movwf	(i2___fldiv@b+1)^0,c
 25362   0030D2  0E00               	movlw	0
 25363   0030D4  6E2A               	movwf	(i2___fldiv@b+2)^0,c
 25364   0030D6  0E00               	movlw	0
 25365   0030D8  6E2B               	movwf	(i2___fldiv@b+3)^0,c
 25366   0030DA  0E80               	movlw	128
 25367   0030DC  122A               	iorwf	(i2___fldiv@b+2)^0,f,c
 25368   0030DE  0E7F               	movlw	127
 25369   0030E0  122B               	iorwf	(i2___fldiv@b+3)^0,f,c
 25370   0030E2                     i2l5622:
 25371   0030E2  5038               	movf	i2___fldiv@sign^0,w,c
 25372   0030E4  122B               	iorwf	(i2___fldiv@b+3)^0,f,c
 25373   0030E6  C028  F028         	movff	i2___fldiv@b,?i2___fldiv
 25374   0030EA  C029  F029         	movff	i2___fldiv@b+1,?i2___fldiv+1
 25375   0030EE  C02A  F02A         	movff	i2___fldiv@b+2,?i2___fldiv+2
 25376   0030F2  C02B  F02B         	movff	i2___fldiv@b+3,?i2___fldiv+3
 25377   0030F6  EFBD  F019         	goto	i2l1463
 25378   0030FA                     i2l5628:
 25379   0030FA  503F               	movf	i2___fldiv@bexp^0,w,c
 25380   0030FC  A4D8               	btfss	status,2,c
 25381   0030FE  EF83  F018         	goto	i2u530_41
 25382   003102  EF85  F018         	goto	i2u530_40
 25383   003106                     i2u530_41:
 25384   003106  EF8F  F018         	goto	i2l5636
 25385   00310A                     i2u530_40:
 25386   00310A  0E00               	movlw	0
 25387   00310C  6E28               	movwf	?i2___fldiv^0,c
 25388   00310E  0E00               	movlw	0
 25389   003110  6E29               	movwf	(?i2___fldiv+1)^0,c
 25390   003112  0E00               	movlw	0
 25391   003114  6E2A               	movwf	(?i2___fldiv+2)^0,c
 25392   003116  0E00               	movlw	0
 25393   003118  6E2B               	movwf	(?i2___fldiv+3)^0,c
 25394   00311A  EFBD  F019         	goto	i2l1463
 25395   00311E                     i2l5636:
 25396   00311E  5040               	movf	i2___fldiv@aexp^0,w,c
 25397   003120  C03F  F030         	movff	i2___fldiv@bexp,??i2___fldiv
 25398   003124  6A31               	clrf	(??i2___fldiv+1)^0,c
 25399   003126  5E30               	subwf	??i2___fldiv^0,f,c
 25400   003128  0E00               	movlw	0
 25401   00312A  5A31               	subwfb	(??i2___fldiv+1)^0,f,c
 25402   00312C  0E7F               	movlw	127
 25403   00312E  2430               	addwf	??i2___fldiv^0,w,c
 25404   003130  6E39               	movwf	i2___fldiv@new_exp^0,c
 25405   003132  0E00               	movlw	0
 25406   003134  2031               	addwfc	(??i2___fldiv+1)^0,w,c
 25407   003136  6E3A               	movwf	(i2___fldiv@new_exp+1)^0,c
 25408   003138  C028  F034         	movff	i2___fldiv@b,i2___fldiv@rem
 25409   00313C  C029  F035         	movff	i2___fldiv@b+1,i2___fldiv@rem+1
 25410   003140  C02A  F036         	movff	i2___fldiv@b+2,i2___fldiv@rem+2
 25411   003144  C02B  F037         	movff	i2___fldiv@b+3,i2___fldiv@rem+3
 25412   003148  0E00               	movlw	0
 25413   00314A  6E28               	movwf	i2___fldiv@b^0,c
 25414   00314C  0E00               	movlw	0
 25415   00314E  6E29               	movwf	(i2___fldiv@b+1)^0,c
 25416   003150  0E00               	movlw	0
 25417   003152  6E2A               	movwf	(i2___fldiv@b+2)^0,c
 25418   003154  0E00               	movlw	0
 25419   003156  6E2B               	movwf	(i2___fldiv@b+3)^0,c
 25420   003158  0E00               	movlw	0
 25421   00315A  6E3B               	movwf	i2___fldiv@grs^0,c
 25422   00315C  0E00               	movlw	0
 25423   00315E  6E3C               	movwf	(i2___fldiv@grs+1)^0,c
 25424   003160  0E00               	movlw	0
 25425   003162  6E3D               	movwf	(i2___fldiv@grs+2)^0,c
 25426   003164  0E00               	movlw	0
 25427   003166  6E3E               	movwf	(i2___fldiv@grs+3)^0,c
 25428   003168  6A40               	clrf	i2___fldiv@aexp^0,c
 25429   00316A  EFEF  F018         	goto	i2l1465
 25430   00316E                     i2l5646:
 25431   00316E  5040               	movf	i2___fldiv@aexp^0,w,c
 25432   003170  B4D8               	btfsc	status,2,c
 25433   003172  EFBD  F018         	goto	i2u531_41
 25434   003176  EFBF  F018         	goto	i2u531_40
 25435   00317A                     i2u531_41:
 25436   00317A  EFD6  F018         	goto	i2l5654
 25437   00317E                     i2u531_40:
 25438   00317E  90D8               	bcf	status,0,c
 25439   003180  3634               	rlcf	i2___fldiv@rem^0,f,c
 25440   003182  3635               	rlcf	(i2___fldiv@rem+1)^0,f,c
 25441   003184  3636               	rlcf	(i2___fldiv@rem+2)^0,f,c
 25442   003186  3637               	rlcf	(i2___fldiv@rem+3)^0,f,c
 25443   003188  90D8               	bcf	status,0,c
 25444   00318A  3628               	rlcf	i2___fldiv@b^0,f,c
 25445   00318C  3629               	rlcf	(i2___fldiv@b+1)^0,f,c
 25446   00318E  362A               	rlcf	(i2___fldiv@b+2)^0,f,c
 25447   003190  362B               	rlcf	(i2___fldiv@b+3)^0,f,c
 25448   003192  AE3E               	btfss	(i2___fldiv@grs+3)^0,7,c
 25449   003194  EFCE  F018         	goto	i2u532_41
 25450   003198  EFD0  F018         	goto	i2u532_40
 25451   00319C                     i2u532_41:
 25452   00319C  EFD1  F018         	goto	i2l1468
 25453   0031A0                     i2u532_40:
 25454   0031A0  8028               	bsf	i2___fldiv@b^0,0,c
 25455   0031A2                     i2l1468:
 25456   0031A2  90D8               	bcf	status,0,c
 25457   0031A4  363B               	rlcf	i2___fldiv@grs^0,f,c
 25458   0031A6  363C               	rlcf	(i2___fldiv@grs+1)^0,f,c
 25459   0031A8  363D               	rlcf	(i2___fldiv@grs+2)^0,f,c
 25460   0031AA  363E               	rlcf	(i2___fldiv@grs+3)^0,f,c
 25461   0031AC                     i2l5654:
 25462   0031AC  502C               	movf	i2___fldiv@a^0,w,c
 25463   0031AE  5C34               	subwf	i2___fldiv@rem^0,w,c
 25464   0031B0  502D               	movf	(i2___fldiv@a+1)^0,w,c
 25465   0031B2  5835               	subwfb	(i2___fldiv@rem+1)^0,w,c
 25466   0031B4  502E               	movf	(i2___fldiv@a+2)^0,w,c
 25467   0031B6  5836               	subwfb	(i2___fldiv@rem+2)^0,w,c
 25468   0031B8  502F               	movf	(i2___fldiv@a+3)^0,w,c
 25469   0031BA  5837               	subwfb	(i2___fldiv@rem+3)^0,w,c
 25470   0031BC  A0D8               	btfss	status,0,c
 25471   0031BE  EFE3  F018         	goto	i2u533_41
 25472   0031C2  EFE5  F018         	goto	i2u533_40
 25473   0031C6                     i2u533_41:
 25474   0031C6  EFEE  F018         	goto	i2l5660
 25475   0031CA                     i2u533_40:
 25476   0031CA  8C3E               	bsf	(i2___fldiv@grs+3)^0,6,c
 25477   0031CC  502C               	movf	i2___fldiv@a^0,w,c
 25478   0031CE  5E34               	subwf	i2___fldiv@rem^0,f,c
 25479   0031D0  502D               	movf	(i2___fldiv@a+1)^0,w,c
 25480   0031D2  5A35               	subwfb	(i2___fldiv@rem+1)^0,f,c
 25481   0031D4  502E               	movf	(i2___fldiv@a+2)^0,w,c
 25482   0031D6  5A36               	subwfb	(i2___fldiv@rem+2)^0,f,c
 25483   0031D8  502F               	movf	(i2___fldiv@a+3)^0,w,c
 25484   0031DA  5A37               	subwfb	(i2___fldiv@rem+3)^0,f,c
 25485   0031DC                     i2l5660:
 25486   0031DC  2A40               	incf	i2___fldiv@aexp^0,f,c
 25487   0031DE                     i2l1465:
 25488   0031DE  0E19               	movlw	25
 25489   0031E0  6440               	cpfsgt	i2___fldiv@aexp^0,c
 25490   0031E2  EFF5  F018         	goto	i2u534_41
 25491   0031E6  EFF7  F018         	goto	i2u534_40
 25492   0031EA                     i2u534_41:
 25493   0031EA  EFB7  F018         	goto	i2l5646
 25494   0031EE                     i2u534_40:
 25495   0031EE  5034               	movf	i2___fldiv@rem^0,w,c
 25496   0031F0  1035               	iorwf	(i2___fldiv@rem+1)^0,w,c
 25497   0031F2  1036               	iorwf	(i2___fldiv@rem+2)^0,w,c
 25498   0031F4  1037               	iorwf	(i2___fldiv@rem+3)^0,w,c
 25499   0031F6  B4D8               	btfsc	status,2,c
 25500   0031F8  EF00  F019         	goto	i2u535_41
 25501   0031FC  EF02  F019         	goto	i2u535_40
 25502   003200                     i2u535_41:
 25503   003200  EF1A  F019         	goto	i2l5672
 25504   003204                     i2u535_40:
 25505   003204  803B               	bsf	i2___fldiv@grs^0,0,c
 25506   003206  EF1A  F019         	goto	i2l5672
 25507   00320A                     i2l5666:
 25508   00320A  90D8               	bcf	status,0,c
 25509   00320C  3628               	rlcf	i2___fldiv@b^0,f,c
 25510   00320E  3629               	rlcf	(i2___fldiv@b+1)^0,f,c
 25511   003210  362A               	rlcf	(i2___fldiv@b+2)^0,f,c
 25512   003212  362B               	rlcf	(i2___fldiv@b+3)^0,f,c
 25513   003214  AE3E               	btfss	(i2___fldiv@grs+3)^0,7,c
 25514   003216  EF0F  F019         	goto	i2u536_41
 25515   00321A  EF11  F019         	goto	i2u536_40
 25516   00321E                     i2u536_41:
 25517   00321E  EF12  F019         	goto	i2l1474
 25518   003222                     i2u536_40:
 25519   003222  8028               	bsf	i2___fldiv@b^0,0,c
 25520   003224                     i2l1474:
 25521   003224  90D8               	bcf	status,0,c
 25522   003226  363B               	rlcf	i2___fldiv@grs^0,f,c
 25523   003228  363C               	rlcf	(i2___fldiv@grs+1)^0,f,c
 25524   00322A  363D               	rlcf	(i2___fldiv@grs+2)^0,f,c
 25525   00322C  363E               	rlcf	(i2___fldiv@grs+3)^0,f,c
 25526   00322E  0639               	decf	i2___fldiv@new_exp^0,f,c
 25527   003230  A0D8               	btfss	status,0,c
 25528   003232  063A               	decf	(i2___fldiv@new_exp+1)^0,f,c
 25529   003234                     i2l5672:
 25530   003234  AE2A               	btfss	(i2___fldiv@b+2)^0,7,c
 25531   003236  EF1F  F019         	goto	i2u537_41
 25532   00323A  EF21  F019         	goto	i2u537_40
 25533   00323E                     i2u537_41:
 25534   00323E  EF05  F019         	goto	i2l5666
 25535   003242                     i2u537_40:
 25536   003242  6A40               	clrf	i2___fldiv@aexp^0,c
 25537   003244  AE3E               	btfss	(i2___fldiv@grs+3)^0,7,c
 25538   003246  EF27  F019         	goto	i2u538_41
 25539   00324A  EF29  F019         	goto	i2u538_40
 25540   00324E                     i2u538_41:
 25541   00324E  EF4D  F019         	goto	i2l1476
 25542   003252                     i2u538_40:
 25543   003252  0EFF               	movlw	255
 25544   003254  143B               	andwf	i2___fldiv@grs^0,w,c
 25545   003256  6E30               	movwf	??i2___fldiv^0,c
 25546   003258  0EFF               	movlw	255
 25547   00325A  143C               	andwf	(i2___fldiv@grs+1)^0,w,c
 25548   00325C  6E31               	movwf	(??i2___fldiv+1)^0,c
 25549   00325E  0EFF               	movlw	255
 25550   003260  143D               	andwf	(i2___fldiv@grs+2)^0,w,c
 25551   003262  6E32               	movwf	(??i2___fldiv+2)^0,c
 25552   003264  0E7F               	movlw	127
 25553   003266  143E               	andwf	(i2___fldiv@grs+3)^0,w,c
 25554   003268  6E33               	movwf	(??i2___fldiv+3)^0,c
 25555   00326A  5030               	movf	??i2___fldiv^0,w,c
 25556   00326C  1031               	iorwf	(??i2___fldiv+1)^0,w,c
 25557   00326E  1032               	iorwf	(??i2___fldiv+2)^0,w,c
 25558   003270  1033               	iorwf	(??i2___fldiv+3)^0,w,c
 25559   003272  B4D8               	btfsc	status,2,c
 25560   003274  EF3E  F019         	goto	i2u539_41
 25561   003278  EF40  F019         	goto	i2u539_40
 25562   00327C                     i2u539_41:
 25563   00327C  EF44  F019         	goto	i2l1477
 25564   003280                     i2u539_40:
 25565   003280                     i2l5676:
 25566   003280  0E01               	movlw	1
 25567   003282  6E40               	movwf	i2___fldiv@aexp^0,c
 25568   003284  EF4D  F019         	goto	i2l1476
 25569   003288                     i2l1477:
 25570   003288  A028               	btfss	i2___fldiv@b^0,0,c
 25571   00328A  EF49  F019         	goto	i2u540_41
 25572   00328E  EF4B  F019         	goto	i2u540_40
 25573   003292                     i2u540_41:
 25574   003292  EF4D  F019         	goto	i2l1476
 25575   003296                     i2u540_40:
 25576   003296  EF40  F019         	goto	i2l5676
 25577   00329A                     i2l1476:
 25578   00329A  5040               	movf	i2___fldiv@aexp^0,w,c
 25579   00329C  B4D8               	btfsc	status,2,c
 25580   00329E  EF53  F019         	goto	i2u541_41
 25581   0032A2  EF55  F019         	goto	i2u541_40
 25582   0032A6                     i2u541_41:
 25583   0032A6  EF79  F019         	goto	i2l5688
 25584   0032AA                     i2u541_40:
 25585   0032AA  0E01               	movlw	1
 25586   0032AC  2628               	addwf	i2___fldiv@b^0,f,c
 25587   0032AE  0E00               	movlw	0
 25588   0032B0  2229               	addwfc	(i2___fldiv@b+1)^0,f,c
 25589   0032B2  222A               	addwfc	(i2___fldiv@b+2)^0,f,c
 25590   0032B4  222B               	addwfc	(i2___fldiv@b+3)^0,f,c
 25591   0032B6  A02B               	btfss	(i2___fldiv@b+3)^0,0,c
 25592   0032B8  EF60  F019         	goto	i2u542_41
 25593   0032BC  EF62  F019         	goto	i2u542_40
 25594   0032C0                     i2u542_41:
 25595   0032C0  EF79  F019         	goto	i2l5688
 25596   0032C4                     i2u542_40:
 25597   0032C4  C028  F030         	movff	i2___fldiv@b,??i2___fldiv
 25598   0032C8  C029  F031         	movff	i2___fldiv@b+1,??i2___fldiv+1
 25599   0032CC  C02A  F032         	movff	i2___fldiv@b+2,??i2___fldiv+2
 25600   0032D0  C02B  F033         	movff	i2___fldiv@b+3,??i2___fldiv+3
 25601   0032D4  3433               	rlcf	(??i2___fldiv+3)^0,w,c
 25602   0032D6  3233               	rrcf	(??i2___fldiv+3)^0,f,c
 25603   0032D8  3232               	rrcf	(??i2___fldiv+2)^0,f,c
 25604   0032DA  3231               	rrcf	(??i2___fldiv+1)^0,f,c
 25605   0032DC  3230               	rrcf	??i2___fldiv^0,f,c
 25606   0032DE  C030  F028         	movff	??i2___fldiv,i2___fldiv@b
 25607   0032E2  C031  F029         	movff	??i2___fldiv+1,i2___fldiv@b+1
 25608   0032E6  C032  F02A         	movff	??i2___fldiv+2,i2___fldiv@b+2
 25609   0032EA  C033  F02B         	movff	??i2___fldiv+3,i2___fldiv@b+3
 25610   0032EE  4A39               	infsnz	i2___fldiv@new_exp^0,f,c
 25611   0032F0  2A3A               	incf	(i2___fldiv@new_exp+1)^0,f,c
 25612   0032F2                     i2l5688:
 25613   0032F2  BE3A               	btfsc	(i2___fldiv@new_exp+1)^0,7,c
 25614   0032F4  EF84  F019         	goto	i2u543_41
 25615   0032F8  503A               	movf	(i2___fldiv@new_exp+1)^0,w,c
 25616   0032FA  E108               	bnz	i2u543_40
 25617   0032FC  2839               	incf	i2___fldiv@new_exp^0,w,c
 25618   0032FE  A0D8               	btfss	status,0,c
 25619   003300  EF84  F019         	goto	i2u543_41
 25620   003304  EF86  F019         	goto	i2u543_40
 25621   003308                     i2u543_41:
 25622   003308  EF91  F019         	goto	i2l5692
 25623   00330C                     i2u543_40:
 25624   00330C  0E00               	movlw	0
 25625   00330E  6E3A               	movwf	(i2___fldiv@new_exp+1)^0,c
 25626   003310  6839               	setf	i2___fldiv@new_exp^0,c
 25627   003312  0E00               	movlw	0
 25628   003314  6E28               	movwf	i2___fldiv@b^0,c
 25629   003316  0E00               	movlw	0
 25630   003318  6E29               	movwf	(i2___fldiv@b+1)^0,c
 25631   00331A  0E00               	movlw	0
 25632   00331C  6E2A               	movwf	(i2___fldiv@b+2)^0,c
 25633   00331E  0E00               	movlw	0
 25634   003320  6E2B               	movwf	(i2___fldiv@b+3)^0,c
 25635   003322                     i2l5692:
 25636   003322  BE3A               	btfsc	(i2___fldiv@new_exp+1)^0,7,c
 25637   003324  EF9E  F019         	goto	i2u544_40
 25638   003328  503A               	movf	(i2___fldiv@new_exp+1)^0,w,c
 25639   00332A  E106               	bnz	i2u544_41
 25640   00332C  0439               	decf	i2___fldiv@new_exp^0,w,c
 25641   00332E  B0D8               	btfsc	status,0,c
 25642   003330  EF9C  F019         	goto	i2u544_41
 25643   003334  EF9E  F019         	goto	i2u544_40
 25644   003338                     i2u544_41:
 25645   003338  EFAB  F019         	goto	i2l5698
 25646   00333C                     i2u544_40:
 25647   00333C  0E00               	movlw	0
 25648   00333E  6E3A               	movwf	(i2___fldiv@new_exp+1)^0,c
 25649   003340  0E00               	movlw	0
 25650   003342  6E39               	movwf	i2___fldiv@new_exp^0,c
 25651   003344  0E00               	movlw	0
 25652   003346  6E28               	movwf	i2___fldiv@b^0,c
 25653   003348  0E00               	movlw	0
 25654   00334A  6E29               	movwf	(i2___fldiv@b+1)^0,c
 25655   00334C  0E00               	movlw	0
 25656   00334E  6E2A               	movwf	(i2___fldiv@b+2)^0,c
 25657   003350  0E00               	movlw	0
 25658   003352  6E2B               	movwf	(i2___fldiv@b+3)^0,c
 25659   003354  6A38               	clrf	i2___fldiv@sign^0,c
 25660   003356                     i2l5698:
 25661   003356  C039  F03F         	movff	i2___fldiv@new_exp,i2___fldiv@bexp
 25662   00335A  A03F               	btfss	i2___fldiv@bexp^0,0,c
 25663   00335C  EFB2  F019         	goto	i2u545_41
 25664   003360  EFB4  F019         	goto	i2u545_40
 25665   003364                     i2u545_41:
 25666   003364  EFB7  F019         	goto	i2l5704
 25667   003368                     i2u545_40:
 25668   003368  8E2A               	bsf	(i2___fldiv@b+2)^0,7,c
 25669   00336A  EFB8  F019         	goto	i2l5706
 25670   00336E                     i2l5704:
 25671   00336E  9E2A               	bcf	(i2___fldiv@b+2)^0,7,c
 25672   003370                     i2l5706:
 25673   003370  90D8               	bcf	status,0,c
 25674   003372  303F               	rrcf	i2___fldiv@bexp^0,w,c
 25675   003374  6E2B               	movwf	(i2___fldiv@b+3)^0,c
 25676   003376  EF71  F018         	goto	i2l5622
 25677   00337A                     i2l1463:
 25678   00337A  0012               	return		;funcret
 25679   00337C                     __end_ofi2___fldiv:
 25680                           	callstack 0
 25681                           
 25682 ;; *************** function i2_ADC_ConversionStart *****************
 25683 ;; Defined at:
 25684 ;;		line 144 in file "mcc_generated_files/adc/src/adc.c"
 25685 ;; Parameters:    Size  Location     Type
 25686 ;;		None
 25687 ;; Auto vars:     Size  Location     Type
 25688 ;;		None
 25689 ;; Return value:  Size  Location     Type
 25690 ;;                  1    wreg      void 
 25691 ;; Registers used:
 25692 ;;		None
 25693 ;; Tracked objects:
 25694 ;;		On entry : 0/0
 25695 ;;		On exit  : 0/0
 25696 ;;		Unchanged: 0/0
 25697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25698 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25699 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25700 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25701 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25702 ;;Total ram usage:        0 bytes
 25703 ;; Hardware stack levels used: 1
 25704 ;; This function calls:
 25705 ;;		Nothing
 25706 ;; This function is called by:
 25707 ;;		i2_lire_tension
 25708 ;; This function uses a non-reentrant model
 25709 ;;
 25710                           
 25711                           	psect	text101
 25712   00666C                     __ptext101:
 25713                           	callstack 0
 25714   00666C                     i2_ADC_ConversionStart:
 25715                           	callstack 15
 25716   00666C                     
 25717                           ;mcc_generated_files/adc/src/adc.c: 146:     ADCON0bits.ADGO = 1;
 25718   00666C  013E               	movlb	62	; () banked
 25719   00666E  81F8               	bsf	248,0,b	;volatile
 25720   006670                     
 25721                           ; BSR set to: 62
 25722   006670  0012               	return		;funcret
 25723   006672                     __end_ofi2_ADC_ConversionStart:
 25724                           	callstack 0
 25725                           
 25726 ;; *************** function i2_ADC_ConversionResultGet *****************
 25727 ;; Defined at:
 25728 ;;		line 159 in file "mcc_generated_files/adc/src/adc.c"
 25729 ;; Parameters:    Size  Location     Type
 25730 ;;		None
 25731 ;; Auto vars:     Size  Location     Type
 25732 ;;		None
 25733 ;; Return value:  Size  Location     Type
 25734 ;;                  2    0[COMRAM] short 
 25735 ;; Registers used:
 25736 ;;		wreg, status,2, status,0
 25737 ;; Tracked objects:
 25738 ;;		On entry : 0/0
 25739 ;;		On exit  : 0/0
 25740 ;;		Unchanged: 0/0
 25741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25742 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25743 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25744 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25745 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25746 ;;Total ram usage:        4 bytes
 25747 ;; Hardware stack levels used: 1
 25748 ;; This function calls:
 25749 ;;		Nothing
 25750 ;; This function is called by:
 25751 ;;		i2_lire_tension
 25752 ;; This function uses a non-reentrant model
 25753 ;;
 25754                           
 25755                           	psect	text102
 25756   0065B8                     __ptext102:
 25757                           	callstack 0
 25758   0065B8                     i2_ADC_ConversionResultGet:
 25759                           	callstack 15
 25760   0065B8                     
 25761                           ;mcc_generated_files/adc/src/adc.c: 161:     return ((adc_result_t)((ADRESH << 8) + ADRE
      +                          SL));
 25762   0065B8  013E               	movlb	62	; () banked
 25763   0065BA  51F0               	movf	240,w,b	;volatile
 25764   0065BC  6E04               	movwf	(??i2_ADC_ConversionResultGet+1)^0,c
 25765   0065BE  6A03               	clrf	??i2_ADC_ConversionResultGet^0,c
 25766   0065C0  51EF               	movf	239,w,b	;volatile
 25767   0065C2  2403               	addwf	??i2_ADC_ConversionResultGet^0,w,c
 25768   0065C4  6E01               	movwf	?i2_ADC_ConversionResultGet^0,c
 25769   0065C6  0E00               	movlw	0
 25770   0065C8  2004               	addwfc	(??i2_ADC_ConversionResultGet+1)^0,w,c
 25771   0065CA  6E02               	movwf	(?i2_ADC_ConversionResultGet+1)^0,c
 25772   0065CC                     
 25773                           ; BSR set to: 62
 25774   0065CC  0012               	return		;funcret
 25775   0065CE                     __end_ofi2_ADC_ConversionResultGet:
 25776                           	callstack 0
 25777                           
 25778 ;; *************** function i2_ADC_ChannelSelect *****************
 25779 ;; Defined at:
 25780 ;;		line 139 in file "mcc_generated_files/adc/src/adc.c"
 25781 ;; Parameters:    Size  Location     Type
 25782 ;;  channel         1    wreg     enum E15638
 25783 ;; Auto vars:     Size  Location     Type
 25784 ;;  channel         1    0[COMRAM] enum E15638
 25785 ;; Return value:  Size  Location     Type
 25786 ;;                  1    wreg      void 
 25787 ;; Registers used:
 25788 ;;		wreg
 25789 ;; Tracked objects:
 25790 ;;		On entry : 0/0
 25791 ;;		On exit  : 0/0
 25792 ;;		Unchanged: 0/0
 25793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25794 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25795 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25796 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25797 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25798 ;;Total ram usage:        1 bytes
 25799 ;; Hardware stack levels used: 1
 25800 ;; This function calls:
 25801 ;;		Nothing
 25802 ;; This function is called by:
 25803 ;;		i2_lire_tension
 25804 ;; This function uses a non-reentrant model
 25805 ;;
 25806                           
 25807                           	psect	text103
 25808   00665C                     __ptext103:
 25809                           	callstack 0
 25810   00665C                     i2_ADC_ChannelSelect:
 25811                           	callstack 15
 25812                           
 25813                           ; BSR set to: 62
 25814                           ;incstack = 0
 25815                           ;i2ADC_ChannelSelect@channel stored from wreg
 25816   00665C  6E01               	movwf	i2ADC_ChannelSelect@channel^0,c
 25817   00665E                     
 25818                           ;mcc_generated_files/adc/src/adc.c: 139: void ADC_ChannelSelect(adc_channel_t channel);m
      +                          cc_generated_files/adc/src/adc.c: 140: {;mcc_generated_files/adc/src/adc.c: 141:    ADPC
      +                          H = channel;
 25819   00665E  0060  F007  FEF1   	movff	i2ADC_ChannelSelect@channel,16113	;volatile
 25820   006664  0012               	return		;funcret
 25821   006666                     __end_ofi2_ADC_ChannelSelect:
 25822                           	callstack 0
 25823                           
 25824 ;; *************** function i2_LCD_String *****************
 25825 ;; Defined at:
 25826 ;;		line 35 in file "LCM_S01604DSF.c"
 25827 ;; Parameters:    Size  Location     Type
 25828 ;;  str             2    2[COMRAM] PTR const unsigned char 
 25829 ;;		 -> i2LCD_UpdateMenu@buffer(16), STR_18(14), LCD_UpdateMenu@buffer(16), STR_16(8), 
 25830 ;;		 -> STR_15(9), STR_14(15), STR_13(14), STR_12(16), 
 25831 ;;		 -> STR_11(15), STR_10(16), STR_9(14), STR_8(14), 
 25832 ;;		 -> STR_7(15), STR_6(15), STR_5(16), STR_4(5), 
 25833 ;;		 -> STR_3(16), STR_2(17), STR_1(5), 
 25834 ;; Auto vars:     Size  Location     Type
 25835 ;;		None
 25836 ;; Return value:  Size  Location     Type
 25837 ;;                  1    wreg      void 
 25838 ;; Registers used:
 25839 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 25840 ;; Tracked objects:
 25841 ;;		On entry : 0/0
 25842 ;;		On exit  : 0/0
 25843 ;;		Unchanged: 0/0
 25844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25845 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25846 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25847 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25848 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25849 ;;Total ram usage:        2 bytes
 25850 ;; Hardware stack levels used: 1
 25851 ;; Hardware stack levels required when called: 2
 25852 ;; This function calls:
 25853 ;;		i2_LCD_Char
 25854 ;; This function is called by:
 25855 ;;		i2_LCD_UpdateMenu
 25856 ;; This function uses a non-reentrant model
 25857 ;;
 25858                           
 25859                           	psect	text104
 25860   0059DA                     __ptext104:
 25861                           	callstack 0
 25862   0059DA                     i2_LCD_String:
 25863                           	callstack 14
 25864   0059DA                     
 25865                           ;LCM_S01604DSF.c: 36:     while (*str) {
 25866   0059DA  EF08  F02D         	goto	i2l7460
 25867   0059DE                     i2l7456:
 25868                           
 25869                           ;LCM_S01604DSF.c: 37:         LCD_Char(*str++);
 25870   0059DE  0060  F00F  FFF6   	movff	i2LCD_String@str,tblptrl
 25871   0059E4  0060  F013  FFF7   	movff	i2LCD_String@str+1,tblptrh
 25872   0059EA  0E00               	movlw	low (__mediumconst shr (0+16))
 25873   0059EC  6EF8               	movwf	tblptru,c
 25874   0059EE  0E0F               	movlw	(high __ramtop+-1)
 25875   0059F0  64F7               	cpfsgt	tblptrh,c
 25876   0059F2  D003               	bra	i2u825_47
 25877   0059F4  0008               	tblrd		*
 25878   0059F6  50F5               	movf	tablat,w,c
 25879   0059F8  D007               	bra	i2u825_40
 25880   0059FA                     i2u825_47:
 25881   0059FA  006F FFDB FFE9     	movff	tblptrl,fsr0l
 25882   005A00  006F FFDF FFEA     	movff	tblptrh,fsr0h
 25883   005A06  50EF               	movf	indf0,w,c
 25884   005A08                     i2u825_40:
 25885   005A08  EC7E  F032         	call	i2_LCD_Char
 25886   005A0C  4A03               	infsnz	i2LCD_String@str^0,f,c
 25887   005A0E  2A04               	incf	(i2LCD_String@str+1)^0,f,c
 25888   005A10                     i2l7460:
 25889                           
 25890                           ;LCM_S01604DSF.c: 36:     while (*str) {
 25891   005A10  0060  F00F  FFF6   	movff	i2LCD_String@str,tblptrl
 25892   005A16  0060  F013  FFF7   	movff	i2LCD_String@str+1,tblptrh
 25893   005A1C  0E00               	movlw	low (__mediumconst shr (0+16))
 25894   005A1E  6EF8               	movwf	tblptru,c
 25895   005A20  0E0F               	movlw	(high __ramtop+-1)
 25896   005A22  64F7               	cpfsgt	tblptrh,c
 25897   005A24  D003               	bra	i2u826_47
 25898   005A26  0008               	tblrd		*
 25899   005A28  50F5               	movf	tablat,w,c
 25900   005A2A  D007               	bra	i2u826_40
 25901   005A2C                     i2u826_47:
 25902   005A2C  006F FFDB FFE9     	movff	tblptrl,fsr0l
 25903   005A32  006F FFDF FFEA     	movff	tblptrh,fsr0h
 25904   005A38  50EF               	movf	indf0,w,c
 25905   005A3A                     i2u826_40:
 25906   005A3A  0900               	iorlw	0
 25907   005A3C  A4D8               	btfss	status,2,c
 25908   005A3E  EF23  F02D         	goto	i2u827_41
 25909   005A42  EF25  F02D         	goto	i2u827_40
 25910   005A46                     i2u827_41:
 25911   005A46  EFEF  F02C         	goto	i2l7456
 25912   005A4A                     i2u827_40:
 25913   005A4A  0012               	return		;funcret
 25914   005A4C                     __end_ofi2_LCD_String:
 25915                           	callstack 0
 25916                           
 25917 ;; *************** function i2_LCD_Char *****************
 25918 ;; Defined at:
 25919 ;;		line 28 in file "LCM_S01604DSF.c"
 25920 ;; Parameters:    Size  Location     Type
 25921 ;;  data            1    wreg     unsigned char 
 25922 ;; Auto vars:     Size  Location     Type
 25923 ;;  data            1    1[COMRAM] unsigned char 
 25924 ;; Return value:  Size  Location     Type
 25925 ;;                  1    wreg      void 
 25926 ;; Registers used:
 25927 ;;		wreg, cstack
 25928 ;; Tracked objects:
 25929 ;;		On entry : 0/0
 25930 ;;		On exit  : 0/0
 25931 ;;		Unchanged: 0/0
 25932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25933 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25934 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25935 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25936 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25937 ;;Total ram usage:        2 bytes
 25938 ;; Hardware stack levels used: 1
 25939 ;; Hardware stack levels required when called: 1
 25940 ;; This function calls:
 25941 ;;		i2_LCD_EnablePulse
 25942 ;; This function is called by:
 25943 ;;		i2_LCD_String
 25944 ;;		i2_LCD_UpdateMenu
 25945 ;; This function uses a non-reentrant model
 25946 ;;
 25947                           
 25948                           	psect	text105
 25949   0064FC                     __ptext105:
 25950                           	callstack 0
 25951   0064FC                     i2_LCD_Char:
 25952                           	callstack 14
 25953                           
 25954                           ;incstack = 0
 25955                           ;i2LCD_Char@data stored from wreg
 25956   0064FC  6E02               	movwf	i2LCD_Char@data^0,c
 25957   0064FE  82BB               	bsf	187,1,c	;volatile
 25958   006500                     
 25959                           ;LCM_S01604DSF.c: 30:     LATC = data;
 25960   006500  0060  F00B  FFBC   	movff	i2LCD_Char@data,16316	;volatile
 25961   006506                     
 25962                           ;LCM_S01604DSF.c: 31:     LCD_EnablePulse();
 25963   006506  ECAB  F032         	call	i2_LCD_EnablePulse	;wreg free
 25964   00650A                     
 25965                           ;LCM_S01604DSF.c: 32:     _delay((unsigned long)((1)*(64000000UL/4000.0)));
 25966   00650A  0E15               	movlw	21
 25967   00650C  6E01               	movwf	??i2_LCD_Char^0,c
 25968   00650E  0EC6               	movlw	198
 25969   006510                     i2u944_47:
 25970   006510  2EE8               	decfsz	wreg,f,c
 25971   006512  D7FE               	bra	i2u944_47
 25972   006514  2E01               	decfsz	??i2_LCD_Char^0,f,c
 25973   006516  D7FC               	bra	i2u944_47
 25974   006518  D000               	nop2	
 25975   00651A  0012               	return		;funcret
 25976   00651C                     __end_ofi2_LCD_Char:
 25977                           	callstack 0
 25978                           
 25979 ;; *************** function i2_LCD_SetCursor *****************
 25980 ;; Defined at:
 25981 ;;		line 41 in file "LCM_S01604DSF.c"
 25982 ;; Parameters:    Size  Location     Type
 25983 ;;  row             1    wreg     unsigned char 
 25984 ;;  column          1    2[COMRAM] unsigned char 
 25985 ;; Auto vars:     Size  Location     Type
 25986 ;;  row             1    7[COMRAM] unsigned char 
 25987 ;;  row_offsets     4    3[COMRAM] const unsigned char [4]
 25988 ;; Return value:  Size  Location     Type
 25989 ;;                  1    wreg      void 
 25990 ;; Registers used:
 25991 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 25992 ;; Tracked objects:
 25993 ;;		On entry : 0/0
 25994 ;;		On exit  : 0/0
 25995 ;;		Unchanged: 0/0
 25996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25997 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25998 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25999 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26000 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26001 ;;Total ram usage:        6 bytes
 26002 ;; Hardware stack levels used: 1
 26003 ;; Hardware stack levels required when called: 2
 26004 ;; This function calls:
 26005 ;;		i2_LCD_Command
 26006 ;; This function is called by:
 26007 ;;		i2_LCD_UpdateMenu
 26008 ;; This function uses a non-reentrant model
 26009 ;;
 26010                           
 26011                           	psect	text106
 26012   005E3A                     __ptext106:
 26013                           	callstack 0
 26014   005E3A                     i2_LCD_SetCursor:
 26015                           	callstack 14
 26016                           
 26017                           ;incstack = 0
 26018                           ;i2LCD_SetCursor@row stored from wreg
 26019   005E3A  6E08               	movwf	i2LCD_SetCursor@row^0,c
 26020   005E3C                     
 26021                           ;LCM_S01604DSF.c: 42:     const uint8_t row_offsets[] = {0x00, 0x40, 0x10, 0x50};
 26022   005E3C  0E05               	movlw	low LCD_SetCursor@F16382
 26023   005E3E  6EF6               	movwf	tblptrl,c
 26024   005E40                     	if	1	;There is more than 1 active tblptr byte
 26025   005E40  0EFF               	movlw	high LCD_SetCursor@F16382
 26026   005E42  6EF7               	movwf	tblptrh,c
 26027   005E44                     	endif
 26028   005E44                     	if	1	;There are 3 active tblptr bytes
 26029   005E44  0E00               	movlw	low (LCD_SetCursor@F16382 shr (0+16))
 26030   005E46  6EF8               	movwf	tblptru,c
 26031   005E48                     	endif
 26032   005E48  0009               	tblrd		*+
 26033   005E4A  006F FFD4  F004    	movff	tablat,i2LCD_SetCursor@row_offsets
 26034   005E50  0009               	tblrd		*+
 26035   005E52  006F FFD4  F005    	movff	tablat,i2LCD_SetCursor@row_offsets+1
 26036   005E58  0009               	tblrd		*+
 26037   005E5A  006F FFD4  F006    	movff	tablat,i2LCD_SetCursor@row_offsets+2
 26038   005E60  000A               	tblrd		*-
 26039   005E62  006F FFD4  F007    	movff	tablat,i2LCD_SetCursor@row_offsets+3
 26040   005E68                     
 26041                           ;LCM_S01604DSF.c: 43:     if (row > 3) row = 3;
 26042   005E68  0E03               	movlw	3
 26043   005E6A  6408               	cpfsgt	i2LCD_SetCursor@row^0,c
 26044   005E6C  EF3A  F02F         	goto	i2u828_41
 26045   005E70  EF3C  F02F         	goto	i2u828_40
 26046   005E74                     i2u828_41:
 26047   005E74  EF3E  F02F         	goto	i2l7468
 26048   005E78                     i2u828_40:
 26049   005E78  0E03               	movlw	3
 26050   005E7A  6E08               	movwf	i2LCD_SetCursor@row^0,c
 26051   005E7C                     i2l7468:
 26052                           
 26053                           ;LCM_S01604DSF.c: 44:     LCD_Command(0x80 | (row_offsets[row] + column));
 26054   005E7C  5008               	movf	i2LCD_SetCursor@row^0,w,c
 26055   005E7E  0F04               	addlw	low i2LCD_SetCursor@row_offsets
 26056   005E80  6ED9               	movwf	fsr2l,c
 26057   005E82  6ADA               	clrf	fsr2h,c
 26058   005E84  50DF               	movf	indf2,w,c
 26059   005E86  2403               	addwf	i2LCD_SetCursor@column^0,w,c
 26060   005E88  0980               	iorlw	128
 26061   005E8A  EC8E  F032         	call	i2_LCD_Command
 26062   005E8E  0012               	return		;funcret
 26063   005E90                     __end_ofi2_LCD_SetCursor:
 26064                           	callstack 0
 26065                           
 26066 ;; *************** function i2_LCD_Init *****************
 26067 ;; Defined at:
 26068 ;;		line 52 in file "LCM_S01604DSF.c"
 26069 ;; Parameters:    Size  Location     Type
 26070 ;;		None
 26071 ;; Auto vars:     Size  Location     Type
 26072 ;;		None
 26073 ;; Return value:  Size  Location     Type
 26074 ;;                  1    wreg      void 
 26075 ;; Registers used:
 26076 ;;		wreg, cstack
 26077 ;; Tracked objects:
 26078 ;;		On entry : 0/0
 26079 ;;		On exit  : 0/0
 26080 ;;		Unchanged: 0/0
 26081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26082 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26083 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26084 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26085 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26086 ;;Total ram usage:        2 bytes
 26087 ;; Hardware stack levels used: 1
 26088 ;; Hardware stack levels required when called: 3
 26089 ;; This function calls:
 26090 ;;		i2_LCD_Clear
 26091 ;;		i2_LCD_Command
 26092 ;; This function is called by:
 26093 ;;		i2_LCD_UpdateMenu
 26094 ;; This function uses a non-reentrant model
 26095 ;;
 26096                           
 26097                           	psect	text107
 26098   006382                     __ptext107:
 26099                           	callstack 0
 26100   006382                     i2_LCD_Init:
 26101                           	callstack 13
 26102   006382  92BB               	bcf	187,1,c	;volatile
 26103   006384  90BB               	bcf	187,0,c	;volatile
 26104   006386                     
 26105                           ;LCM_S01604DSF.c: 56:     _delay((unsigned long)((20)*(64000000UL/4000.0)));
 26106   006386  0E02               	movlw	2
 26107   006388  6E05               	movwf	(??i2_LCD_Init+1)^0,c
 26108   00638A  0EA0               	movlw	160
 26109   00638C  6E04               	movwf	??i2_LCD_Init^0,c
 26110   00638E  0E92               	movlw	146
 26111   006390                     i2u945_47:
 26112   006390  2EE8               	decfsz	wreg,f,c
 26113   006392  D7FE               	bra	i2u945_47
 26114   006394  2E04               	decfsz	??i2_LCD_Init^0,f,c
 26115   006396  D7FC               	bra	i2u945_47
 26116   006398  2E05               	decfsz	(??i2_LCD_Init+1)^0,f,c
 26117   00639A  D7FA               	bra	i2u945_47
 26118   00639C  D000               	nop2	
 26119   00639E                     
 26120                           ;LCM_S01604DSF.c: 58:     LCD_Command(0x38);
 26121   00639E  0E38               	movlw	56
 26122   0063A0  EC8E  F032         	call	i2_LCD_Command
 26123   0063A4                     
 26124                           ;LCM_S01604DSF.c: 59:     LCD_Command(0x0C);
 26125   0063A4  0E0C               	movlw	12
 26126   0063A6  EC8E  F032         	call	i2_LCD_Command
 26127   0063AA                     
 26128                           ;LCM_S01604DSF.c: 60:     LCD_Command(0x06);
 26129   0063AA  0E06               	movlw	6
 26130   0063AC  EC8E  F032         	call	i2_LCD_Command
 26131   0063B0                     
 26132                           ;LCM_S01604DSF.c: 61:     LCD_Clear();
 26133   0063B0  ECE7  F032         	call	i2_LCD_Clear	;wreg free
 26134   0063B4  0012               	return		;funcret
 26135   0063B6                     __end_ofi2_LCD_Init:
 26136                           	callstack 0
 26137                           
 26138 ;; *************** function i2_LCD_Clear *****************
 26139 ;; Defined at:
 26140 ;;		line 47 in file "LCM_S01604DSF.c"
 26141 ;; Parameters:    Size  Location     Type
 26142 ;;		None
 26143 ;; Auto vars:     Size  Location     Type
 26144 ;;		None
 26145 ;; Return value:  Size  Location     Type
 26146 ;;                  1    wreg      void 
 26147 ;; Registers used:
 26148 ;;		wreg, cstack
 26149 ;; Tracked objects:
 26150 ;;		On entry : 0/0
 26151 ;;		On exit  : 0/0
 26152 ;;		Unchanged: 0/0
 26153 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26154 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26155 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26156 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26157 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26158 ;;Total ram usage:        1 bytes
 26159 ;; Hardware stack levels used: 1
 26160 ;; Hardware stack levels required when called: 2
 26161 ;; This function calls:
 26162 ;;		i2_LCD_Command
 26163 ;; This function is called by:
 26164 ;;		i2_LCD_Init
 26165 ;; This function uses a non-reentrant model
 26166 ;;
 26167                           
 26168                           	psect	text108
 26169   0065CE                     __ptext108:
 26170                           	callstack 0
 26171   0065CE                     i2_LCD_Clear:
 26172                           	callstack 13
 26173   0065CE                     
 26174                           ;LCM_S01604DSF.c: 48:     LCD_Command(0x01);
 26175   0065CE  0E01               	movlw	1
 26176   0065D0  EC8E  F032         	call	i2_LCD_Command
 26177   0065D4                     
 26178                           ;LCM_S01604DSF.c: 49:     _delay((unsigned long)((2)*(64000000UL/4000.0)));
 26179   0065D4  0E2A               	movlw	42
 26180   0065D6  6E03               	movwf	??i2_LCD_Clear^0,c
 26181   0065D8  0E8E               	movlw	142
 26182   0065DA                     i2u946_47:
 26183   0065DA  2EE8               	decfsz	wreg,f,c
 26184   0065DC  D7FE               	bra	i2u946_47
 26185   0065DE  2E03               	decfsz	??i2_LCD_Clear^0,f,c
 26186   0065E0  D7FC               	bra	i2u946_47
 26187   0065E2  0012               	return		;funcret
 26188   0065E4                     __end_ofi2_LCD_Clear:
 26189                           	callstack 0
 26190                           
 26191 ;; *************** function i2_LCD_Command *****************
 26192 ;; Defined at:
 26193 ;;		line 21 in file "LCM_S01604DSF.c"
 26194 ;; Parameters:    Size  Location     Type
 26195 ;;  cmd             1    wreg     unsigned char 
 26196 ;; Auto vars:     Size  Location     Type
 26197 ;;  cmd             1    1[COMRAM] unsigned char 
 26198 ;; Return value:  Size  Location     Type
 26199 ;;                  1    wreg      void 
 26200 ;; Registers used:
 26201 ;;		wreg, cstack
 26202 ;; Tracked objects:
 26203 ;;		On entry : 0/0
 26204 ;;		On exit  : 0/0
 26205 ;;		Unchanged: 0/0
 26206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26207 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26208 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26209 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26210 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26211 ;;Total ram usage:        2 bytes
 26212 ;; Hardware stack levels used: 1
 26213 ;; Hardware stack levels required when called: 1
 26214 ;; This function calls:
 26215 ;;		i2_LCD_EnablePulse
 26216 ;; This function is called by:
 26217 ;;		i2_LCD_SetCursor
 26218 ;;		i2_LCD_Clear
 26219 ;;		i2_LCD_Init
 26220 ;; This function uses a non-reentrant model
 26221 ;;
 26222                           
 26223                           	psect	text109
 26224   00651C                     __ptext109:
 26225                           	callstack 0
 26226   00651C                     i2_LCD_Command:
 26227                           	callstack 14
 26228                           
 26229                           ;incstack = 0
 26230                           ;i2LCD_Command@cmd stored from wreg
 26231   00651C  6E02               	movwf	i2LCD_Command@cmd^0,c
 26232   00651E  92BB               	bcf	187,1,c	;volatile
 26233   006520                     
 26234                           ;LCM_S01604DSF.c: 23:     LATC = cmd;
 26235   006520  0060  F00B  FFBC   	movff	i2LCD_Command@cmd,16316	;volatile
 26236   006526                     
 26237                           ;LCM_S01604DSF.c: 24:     LCD_EnablePulse();
 26238   006526  ECAB  F032         	call	i2_LCD_EnablePulse	;wreg free
 26239   00652A                     
 26240                           ;LCM_S01604DSF.c: 25:     _delay((unsigned long)((2)*(64000000UL/4000.0)));
 26241   00652A  0E2A               	movlw	42
 26242   00652C  6E01               	movwf	??i2_LCD_Command^0,c
 26243   00652E  0E8E               	movlw	142
 26244   006530                     i2u947_47:
 26245   006530  2EE8               	decfsz	wreg,f,c
 26246   006532  D7FE               	bra	i2u947_47
 26247   006534  2E01               	decfsz	??i2_LCD_Command^0,f,c
 26248   006536  D7FC               	bra	i2u947_47
 26249   006538  0012               	return		;funcret
 26250   00653A                     __end_ofi2_LCD_Command:
 26251                           	callstack 0
 26252                           
 26253 ;; *************** function i2_LCD_EnablePulse *****************
 26254 ;; Defined at:
 26255 ;;		line 14 in file "LCM_S01604DSF.c"
 26256 ;; Parameters:    Size  Location     Type
 26257 ;;		None
 26258 ;; Auto vars:     Size  Location     Type
 26259 ;;		None
 26260 ;; Return value:  Size  Location     Type
 26261 ;;                  1    wreg      void 
 26262 ;; Registers used:
 26263 ;;		wreg
 26264 ;; Tracked objects:
 26265 ;;		On entry : 0/0
 26266 ;;		On exit  : 0/0
 26267 ;;		Unchanged: 0/0
 26268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26269 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26270 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26271 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26272 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26273 ;;Total ram usage:        0 bytes
 26274 ;; Hardware stack levels used: 1
 26275 ;; This function calls:
 26276 ;;		Nothing
 26277 ;; This function is called by:
 26278 ;;		i2_LCD_Command
 26279 ;;		i2_LCD_Char
 26280 ;; This function uses a non-reentrant model
 26281 ;;
 26282                           
 26283                           	psect	text110
 26284   006556                     __ptext110:
 26285                           	callstack 0
 26286   006556                     i2_LCD_EnablePulse:
 26287                           	callstack 14
 26288   006556  80BB               	bsf	187,0,c	;volatile
 26289   006558                     
 26290                           ;LCM_S01604DSF.c: 16:     _delay((unsigned long)((1)*(64000000UL/4000000.0)));
 26291   006558  0E05               	movlw	5
 26292   00655A                     i2u948_47:
 26293   00655A  2EE8               	decfsz	wreg,f,c
 26294   00655C  D7FE               	bra	i2u948_47
 26295   00655E  0000               	nop	
 26296   006560  90BB               	bcf	187,0,c	;volatile
 26297   006562                     
 26298                           ;LCM_S01604DSF.c: 18:     _delay((unsigned long)((100)*(64000000UL/4000000.0)));
 26299   006562  0EE4               	movlw	228
 26300   006564                     i2u949_47:
 26301   006564  D000               	nop2	
 26302   006566  D000               	nop2	
 26303   006568  2EE8               	decfsz	wreg,f,c
 26304   00656A  D7FC               	bra	i2u949_47
 26305   00656C  D000               	nop2	
 26306   00656E  D000               	nop2	
 26307   006570  0012               	return		;funcret
 26308   006572                     __end_ofi2_LCD_EnablePulse:
 26309                           	callstack 0
 26310                           
 26311 ;; *************** function _ADC_ThresholdISR *****************
 26312 ;; Defined at:
 26313 ;;		line 422 in file "mcc_generated_files/adc/src/adc.c"
 26314 ;; Parameters:    Size  Location     Type
 26315 ;;		None
 26316 ;; Auto vars:     Size  Location     Type
 26317 ;;		None
 26318 ;; Return value:  Size  Location     Type
 26319 ;;                  1    wreg      void 
 26320 ;; Registers used:
 26321 ;;		None
 26322 ;; Tracked objects:
 26323 ;;		On entry : 0/0
 26324 ;;		On exit  : 0/0
 26325 ;;		Unchanged: 0/0
 26326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26327 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26328 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26329 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26330 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26331 ;;Total ram usage:        0 bytes
 26332 ;; Hardware stack levels used: 1
 26333 ;; This function calls:
 26334 ;;		Nothing
 26335 ;; This function is called by:
 26336 ;;		_INTERRUPT_InterruptManager
 26337 ;; This function uses a non-reentrant model
 26338 ;;
 26339                           
 26340                           	psect	text111
 26341   006672                     __ptext111:
 26342                           	callstack 0
 26343   006672                     _ADC_ThresholdISR:
 26344                           	callstack 20
 26345   006672                     
 26346                           ;mcc_generated_files/adc/src/adc.c: 424:     PIR1bits.ADTIF = 0;
 26347   006672  0139               	movlb	57	; () banked
 26348   006674  97A1               	bcf	161,3,b	;volatile
 26349   006676                     
 26350                           ; BSR set to: 57
 26351   006676  0012               	return		;funcret
 26352   006678                     __end_of_ADC_ThresholdISR:
 26353                           	callstack 0
 26354                           
 26355 ;; *************** function _ADC_ISR *****************
 26356 ;; Defined at:
 26357 ;;		line 408 in file "mcc_generated_files/adc/src/adc.c"
 26358 ;; Parameters:    Size  Location     Type
 26359 ;;		None
 26360 ;; Auto vars:     Size  Location     Type
 26361 ;;		None
 26362 ;; Return value:  Size  Location     Type
 26363 ;;                  1    wreg      void 
 26364 ;; Registers used:
 26365 ;;		None
 26366 ;; Tracked objects:
 26367 ;;		On entry : 0/0
 26368 ;;		On exit  : 0/0
 26369 ;;		Unchanged: 0/0
 26370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26371 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26372 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26373 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26374 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26375 ;;Total ram usage:        0 bytes
 26376 ;; Hardware stack levels used: 1
 26377 ;; This function calls:
 26378 ;;		Nothing
 26379 ;; This function is called by:
 26380 ;;		_INTERRUPT_InterruptManager
 26381 ;; This function uses a non-reentrant model
 26382 ;;
 26383                           
 26384                           	psect	text112
 26385   006678                     __ptext112:
 26386                           	callstack 0
 26387   006678                     _ADC_ISR:
 26388                           	callstack 20
 26389   006678                     
 26390                           ;mcc_generated_files/adc/src/adc.c: 410:     PIR1bits.ADIF = 0;
 26391   006678  0139               	movlb	57	; () banked
 26392   00667A  95A1               	bcf	161,2,b	;volatile
 26393   00667C                     
 26394                           ; BSR set to: 57
 26395   00667C  0012               	return		;funcret
 26396   00667E                     __end_of_ADC_ISR:
 26397                           	callstack 0
 26398                           
 26399                           ;
 26400                           ; H/W Interrupt Vector Table @ 0x8
 26401                           ;
 26402                           
 26403                           	psect	ivt0x8
 26404   000008                     __pivt0x8:
 26405                           	callstack 0
 26406   000008                     ivt0x8_base:
 26407                           	callstack 0
 26408                           
 26409                           ; high-priority vector
 26410   000008  EFBE  F026         	goto	_INTERRUPT_InterruptManager
 26411   000018                     	org	16
 26412                           
 26413                           ; low-priority vector
 26414   000018  00FF               	reset	
 26415                           
 26416                           	psect	rparam
 26417   000001                     ___rparam_used  equ	1
 26418   000000                     ___param_bank   equ	0
 26419   000000                     __Lparam        equ	__Lrparam
 26420   000000                     __Hparam        equ	__Hrparam
 26421                           
 26422                           	psect	config
 26423                           
 26424                           ;Config register CONFIG1L @ 0x300000
 26425                           ;	External Oscillator Selection
 26426                           ;	FEXTOSC = ECH, EC (external clock) above 8 MHz; PFM set to high power
 26427                           ;	Reset Oscillator Selection
 26428                           ;	RSTOSC = HFINTOSC_64MHZ, HFINTOSC with HFFRQ = 64 MHz and CDIV = 1:1
 26429   300000                     	org	3145728
 26430   300000  8F                 	db	143
 26431                           
 26432                           ;Config register CONFIG1H @ 0x300001
 26433                           ;	Clock out Enable bit
 26434                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
 26435                           ;	PRLOCKED One-Way Set Enable bit
 26436                           ;	PR1WAY = ON, PRLOCK bit can be cleared and set only once
 26437                           ;	Clock Switch Enable bit
 26438                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 26439                           ;	Fail-Safe Clock Monitor Enable bit
 26440                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
 26441   300001                     	org	3145729
 26442   300001  FF                 	db	255
 26443                           
 26444                           ;Config register CONFIG2L @ 0x300002
 26445                           ;	MCLR Enable bit
 26446                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
 26447                           ;	Power-up timer selection bits
 26448                           ;	PWRTS = PWRT_OFF, PWRT is disabled
 26449                           ;	Multi-vector enable bit
 26450                           ;	MVECEN = OFF, Interrupt contoller does not use vector table to prioritze interrupts
 26451                           ;	IVTLOCK bit One-way set enable bit
 26452                           ;	IVT1WAY = ON, IVTLOCK bit can be cleared and set only once
 26453                           ;	Low Power BOR Enable bit
 26454                           ;	LPBOREN = OFF, ULPBOR disabled
 26455                           ;	Brown-out Reset Enable bits
 26456                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
 26457   300002                     	org	3145730
 26458   300002  F7                 	db	247
 26459                           
 26460                           ;Config register CONFIG2H @ 0x300003
 26461                           ;	Brown-out Reset Voltage Selection bits
 26462                           ;	BORV = VBOR_2P45, Brown-out Reset Voltage (VBOR) set to 2.45V
 26463                           ;	ZCD Disable bit
 26464                           ;	ZCD = OFF, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
 26465                           ;	PPSLOCK bit One-Way Set Enable bit
 26466                           ;	PPS1WAY = ON, PPSLOCK bit can be cleared and set only once; PPS registers remain locke
      +                          d after one clear/set cycle
 26467                           ;	Stack Full/Underflow Reset Enable bit
 26468                           ;	STVREN = ON, Stack full/underflow will cause Reset
 26469                           ;	Debugger Enable bit
 26470                           ;	DEBUG = 0x1, unprogrammed default
 26471                           ;	Extended Instruction Set Enable bit
 26472                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
 26473   300003                     	org	3145731
 26474   300003  FF                 	db	255
 26475                           
 26476                           ;Config register CONFIG3L @ 0x300004
 26477                           ;	WDT Period selection bits
 26478                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 26479                           ;	WDT operating mode
 26480                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
 26481   300004                     	org	3145732
 26482   300004  9F                 	db	159
 26483                           
 26484                           ;Config register CONFIG3H @ 0x300005
 26485                           ;	WDT Window Select bits
 26486                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
 26487                           ;	WDT input clock selector
 26488                           ;	WDTCCS = SC, Software Control
 26489   300005                     	org	3145733
 26490   300005  FF                 	db	255
 26491                           
 26492                           ;Config register CONFIG4L @ 0x300006
 26493                           ;	Boot Block Size selection bits
 26494                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
 26495                           ;	Boot Block enable bit
 26496                           ;	BBEN = OFF, Boot block disabled
 26497                           ;	Storage Area Flash enable bit
 26498                           ;	SAFEN = OFF, SAF disabled
 26499                           ;	Application Block write protection bit
 26500                           ;	WRTAPP = OFF, Application Block not write protected
 26501   300006                     	org	3145734
 26502   300006  FF                 	db	255
 26503                           
 26504                           ;Config register CONFIG4H @ 0x300007
 26505                           ;	Boot Block Write Protection bit
 26506                           ;	WRTB = OFF, Boot Block not write-protected
 26507                           ;	Configuration Register Write Protection bit
 26508                           ;	WRTC = OFF, Configuration registers not write-protected
 26509                           ;	Data EEPROM Write Protection bit
 26510                           ;	WRTD = OFF, Data EEPROM not write-protected
 26511                           ;	SAF Write protection bit
 26512                           ;	WRTSAF = OFF, SAF not Write Protected
 26513                           ;	Low Voltage Programming Enable bit
 26514                           ;	LVP = ON, Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored
 26515   300007                     	org	3145735
 26516   300007  FF                 	db	255
 26517                           
 26518                           ;Config register CONFIG5L @ 0x300008
 26519                           ;	PFM and Data EEPROM Code Protection bit
 26520                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
 26521   300008                     	org	3145736
 26522   300008  FF                 	db	255
 26523                           
 26524                           ;Config register CONFIG5H @ 0x300009
 26525                           ;	unspecified, using default values
 26526   300009                     	org	3145737
 26527   300009  FF                 	db	255
 26528                           tosu	equ	0x3FFF
 26529                           tosh	equ	0x3FFE
 26530                           tosl	equ	0x3FFD
 26531                           stkptr	equ	0x3FFC
 26532                           pclatu	equ	0x3FFB
 26533                           pclath	equ	0x3FFA
 26534                           pcl	equ	0x3FF9
 26535                           tblptru	equ	0x3FF8
 26536                           tblptrh	equ	0x3FF7
 26537                           tblptrl	equ	0x3FF6
 26538                           tablat	equ	0x3FF5
 26539                           prodh	equ	0x3FF4
 26540                           prodl	equ	0x3FF3
 26541                           indf0	equ	0x3FEF
 26542                           postinc0	equ	0x3FEE
 26543                           postdec0	equ	0x3FED
 26544                           preinc0	equ	0x3FEC
 26545                           plusw0	equ	0x3FEB
 26546                           fsr0h	equ	0x3FEA
 26547                           fsr0l	equ	0x3FE9
 26548                           wreg	equ	0x3FE8
 26549                           indf1	equ	0x3FE7
 26550                           postinc1	equ	0x3FE6
 26551                           postdec1	equ	0x3FE5
 26552                           preinc1	equ	0x3FE4
 26553                           plusw1	equ	0x3FE3
 26554                           fsr1h	equ	0x3FE2
 26555                           fsr1l	equ	0x3FE1
 26556                           bsr	equ	0x3FE0
 26557                           indf2	equ	0x3FDF
 26558                           postinc2	equ	0x3FDE
 26559                           postdec2	equ	0x3FDD
 26560                           preinc2	equ	0x3FDC
 26561                           plusw2	equ	0x3FDB
 26562                           fsr2h	equ	0x3FDA
 26563                           fsr2l	equ	0x3FD9
 26564                           status	equ	0x3FD8

Data Sizes:
    Strings     246
    Constant    28
    Data        0
    BSS         537
    Persistent  16
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     93      94
    BANK0           160    117     155
    BANK1           256    214     216
    BANK2           256      0      80
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0

Pointer List with Targets:

    ADC_ConversionDoneCallback	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), NULL(NULL[0]), 

    ADC_ThresholdCallback	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), NULL(NULL[0]), 

    BP1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> BP1_DefaultInterruptHandler(), int_BP1(), NULL(), 

    BP1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> BP1_DefaultInterruptHandler(), int_BP1(), 

    BP2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> BP2_DefaultInterruptHandler(), int_BP2(), NULL(), 

    BP2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> BP2_DefaultInterruptHandler(), int_BP2(), 

    BP3_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> BP3_DefaultInterruptHandler(), int_BP3(), NULL(), 

    BP3_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> BP3_DefaultInterruptHandler(), int_BP3(), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK1[11]), 

    f$.$buffer	PTR unsigned char  size(2) Largest target is 16
		 -> LCD_UpdateMenu@buffer(BANK1[16]), 

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK1[11]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 16
		 -> LCD_UpdateMenu@buffer(BANK1[16]), 

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK1[11]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    i2sprintf@f$.$buffer	PTR unsigned char  size(2) Largest target is 16
		 -> i2LCD_UpdateMenu@buffer(BANK0[16]), LCD_UpdateMenu@buffer(BANK1[16]), 

    i2sprintf@f$.$source	PTR const unsigned char  size(2) Largest target is 0

    INT0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), NULL(), 

    INT0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), 

    INT1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), NULL(), 

    INT1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), 

    INT2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT2_DefaultInterruptHandler(), NULL(), 

    INT2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT2_DefaultInterruptHandler(), 

    LCD_String@str	PTR const unsigned char  size(2) Largest target is 17
		 -> LCD_UpdateMenu@buffer(BANK1[16]), STR_1(CODE[5]), STR_10(CODE[16]), STR_11(CODE[15]), 
		 -> STR_12(CODE[16]), STR_13(CODE[14]), STR_14(CODE[15]), STR_15(CODE[9]), 
		 -> STR_16(CODE[8]), STR_18(CODE[14]), STR_2(CODE[17]), STR_3(CODE[16]), 
		 -> STR_4(CODE[5]), STR_5(CODE[16]), STR_6(CODE[15]), STR_7(CODE[15]), 
		 -> STR_8(CODE[14]), STR_9(CODE[14]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    memcpy@d1	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    memcpy@s1	PTR const void  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK1[11]), 

    read_prec_or_width@ap	PTR PTR void [1] size(2) Largest target is 2
		 -> sprintf@ap(BANK1[2]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK1[2]), 

    S2201$buffer	PTR unsigned char  size(2) Largest target is 16
		 -> LCD_UpdateMenu@buffer(BANK1[16]), 

    S2201$source	PTR const unsigned char  size(2) Largest target is 0

    sp__memcpy	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_17(CODE[7]), STR_19(CODE[7]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 16
		 -> LCD_UpdateMenu@buffer(BANK1[16]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_20(CODE[4]), STR_23(CODE[4]), 

    TMR1_GateCallback	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_DefaultGateCallback(), NULL(), 

    TMR1_OverflowCallback	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_DefaultOverflowCallback(), TMR1_handler(), NULL(), 

    TMR1_OverflowCallbackRegister@CallbackHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_handler(), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK1[2]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 7
		 -> STR_17(CODE[7]), STR_19(CODE[7]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK1[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK1[11]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK1[2]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 7
		 -> STR_17(CODE[7]), STR_19(CODE[7]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_17(CODE[7]), STR_19(CODE[7]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK1[11]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _TMR1_OverflowISR->_TMR1_CounterSet
    _appliquer_action->_on_leds
    _on_leds->_send_leds
    _off_leds->_send_leds
    _send_leds->_send_color
    _send_color->_send_byte
    _send_byte->_send_bit
    i2_vfpfcnvrt->i2_efgtoa
    i2_efgtoa->i2___fltol
    i2_efgtoa->i2_floorf
    i2_pad->i2_fputs
    i2_fputs->i2_fputc
    i2_floorf->i2___fldiv
    i2___fltol->i2_lire_tension
    i2___flsub->i2___flmul
    i2___flge->i2___flmul
    i2_lire_tension->i2___fldiv
    i2___flmul->i2___xxtofl
    i2___fldiv->i2___flmul
    i2_LCD_String->i2_LCD_Char
    i2_LCD_SetCursor->i2_LCD_Command
    i2_LCD_Init->i2_LCD_Clear
    i2_LCD_Clear->i2_LCD_Command

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    _BP3_ISR->_int_BP3
    _int_BP3->i2_LCD_UpdateMenu
    _BP2_ISR->_int_BP2
    _int_BP2->i2_LCD_UpdateMenu
    _BP1_ISR->_int_BP1
    _int_BP1->i2_LCD_UpdateMenu
    i2_LCD_UpdateMenu->i2_sprintf
    i2_sprintf->i2_vfprintf
    i2_vfprintf->i2_vfpfcnvrt
    i2_vfpfcnvrt->i2_efgtoa

Critical Paths under _main in BANK1

    _main->_LCD_UpdateMenu
    _SYSTEM_Initialize->_TMR1_Initialize
    _PIN_MANAGER_Initialize->_BP1_SetInterruptHandler
    _PIN_MANAGER_Initialize->_BP2_SetInterruptHandler
    _PIN_MANAGER_Initialize->_BP3_SetInterruptHandler
    _INTERRUPT_Initialize->_INT0_SetInterruptHandler
    _INTERRUPT_Initialize->_INT1_SetInterruptHandler
    _INTERRUPT_Initialize->_INT2_SetInterruptHandler
    _LCD_UpdateMenu->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->___fltol
    _efgtoa->_floorf
    _pad->_fputs
    _fputs->_fputc
    _floorf->___fldiv
    ___fltol->_lire_tension
    ___flsub->___flmul
    ___flge->___flmul
    _lire_tension->___fldiv
    ___flmul->___xxtofl
    ___fldiv->___flmul
    _LCD_String->_LCD_Char
    _LCD_SetCursor->_LCD_Command
    _LCD_Init->_LCD_Clear
    _LCD_Clear->_LCD_Command

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   17125
                     _ADC_Initialize
            _BP1_SetInterruptHandler
            _BP2_SetInterruptHandler
            _BP3_SetInterruptHandler
                     _LCD_UpdateMenu
                  _SYSTEM_Initialize
      _TMR1_OverflowCallbackRegister
 ---------------------------------------------------------------------------------
 (1) _TMR1_OverflowCallbackRegister                        2     0      2      23
                                              6 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     141
                     _ADC_Initialize
                   _CLOCK_Initialize
               _INTERRUPT_Initialize
             _PIN_MANAGER_Initialize
                    _TMR1_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      2     2      0       0
                                              6 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0      72
            _BP1_SetInterruptHandler
            _BP2_SetInterruptHandler
            _BP3_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _BP3_SetInterruptHandler                              2     0      2      24
                                              6 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (3) _BP2_SetInterruptHandler                              2     0      2      24
                                              6 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (3) _BP1_SetInterruptHandler                              2     0      2      24
                                              6 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0      69
           _INT0_SetInterruptHandler
           _INT1_SetInterruptHandler
           _INT2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT2_SetInterruptHandler                             2     0      2      23
                                              6 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (3) _INT1_SetInterruptHandler                             2     0      2      23
                                              6 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             2     0      2      23
                                              6 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _CLOCK_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_UpdateMenu                                      24    24      0   16886
                                            190 BANK1     24    24      0
                           _LCD_Char
                           _LCD_Init
                      _LCD_SetCursor
                         _LCD_String
                            ___fltol
                       _lire_tension
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             23    15      8   13136
                                            169 BANK1     21    13      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6   12916
                                            161 BANK1      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           16    10      6   12762
                                            146 BANK1     15     9      6
                             _efgtoa
                              _fputc
                 _read_prec_or_width
 ---------------------------------------------------------------------------------
 (5) _read_prec_or_width                                   9     5      4     182
                                              6 BANK1      9     5      4
 ---------------------------------------------------------------------------------
 (5) _efgtoa                                              56    49      7   11810
                                             90 BANK1     56    49      7
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                               _labs
                             _memcpy
                                _pad
                             _strcpy
 ---------------------------------------------------------------------------------
 (6) _strcpy                                               6     2      4      77
                                              6 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (6) _pad                                                  9     3      6     707
                                             22 BANK1      9     3      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4     331
                                             15 BANK1      7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                9     5      4     232
                                              6 BANK1      9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _memcpy                                              11     5      6     146
                                              6 BANK1     11     5      6
 ---------------------------------------------------------------------------------
 (6) _labs                                                 8     4      4      69
                                              6 BANK1      8     4      4
 ---------------------------------------------------------------------------------
 (6) _floorf                                              20    16      4     340
                                             70 BANK1     20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fpclassifyf                                       14    10      4     137
                                              6 BANK1     14    10      4
 ---------------------------------------------------------------------------------
 (6) ___fltol                                             10     6      4     234
                                             80 BANK1     10     6      4
                       _lire_tension (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flsub                                              8     0      8    2037
                                             45 BANK1      8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fladd                                             16     8      8    1988
                                              6 BANK1     16     8      8
 ---------------------------------------------------------------------------------
 (6) ___flneg                                              4     0      4      46
                                              6 BANK1      4     0      4
 ---------------------------------------------------------------------------------
 (6) ___flge                                              12     4      8     190
                                             45 BANK1     12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fleq                                              12     4      8      94
                                              6 BANK1     12     4      8
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4     298
                                              6 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4     302
                                              6 BANK1      8     4      4
 ---------------------------------------------------------------------------------
 (2) _lire_tension                                        10     6      4    3026
                                             70 BANK1     10     6      4
                  _ADC_ChannelSelect
            _ADC_ConversionResultGet
                _ADC_ConversionStart
                            ___fldiv
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     338
                                              6 BANK1     14    10      4
 ---------------------------------------------------------------------------------
 (6) ___flmul                                             25    17      8    1480
                                             20 BANK1     25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fldiv                                             25    17      8    1133
                                             45 BANK1     25    17      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) _ADC_ConversionStart                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _ADC_ConversionResultGet                              4     2      2       0
                                              6 BANK1      4     2      2
 ---------------------------------------------------------------------------------
 (3) _ADC_ChannelSelect                                    1     1      0      29
                                              6 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (2) _LCD_String                                           2     0      2      93
                                              8 BANK1      2     0      2
                           _LCD_Char
 ---------------------------------------------------------------------------------
 (3) _LCD_Char                                             2     2      0      29
                                              6 BANK1      2     2      0
                    _LCD_EnablePulse
 ---------------------------------------------------------------------------------
 (2) _LCD_SetCursor                                        6     5      1     164
                                              8 BANK1      6     5      1
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (2) _LCD_Init                                             2     2      0      58
                                              9 BANK1      2     2      0
                          _LCD_Clear
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (3) _LCD_Clear                                            1     1      0      29
                                              8 BANK1      1     1      0
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (3) _LCD_Command                                          2     2      0      29
                                              6 BANK1      2     2      0
                    _LCD_EnablePulse
 ---------------------------------------------------------------------------------
 (4) _LCD_EnablePulse                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _INTERRUPT_InterruptManager                          6     6      0   53603
                                              0 BANK1      6     6      0
                            _ADC_ISR
                   _ADC_ThresholdISR
                    _PIN_MANAGER_IOC
                   _TMR1_OverflowISR
 ---------------------------------------------------------------------------------
 (11) _TMR1_OverflowISR                                    0     0      0     113
                                NULL *
                    _TMR1_CounterSet
       _TMR1_DefaultOverflowCallback *
                       _TMR1_handler *
 ---------------------------------------------------------------------------------
 (12) _TMR1_handler                                        2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (12) _TMR1_DefaultOverflowCallback                        0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _TMR1_CounterSet                                     3     1      2     113
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (11) _PIN_MANAGER_IOC                                     0     0      0   53490
                            _BP1_ISR
                            _BP2_ISR
                            _BP3_ISR
 ---------------------------------------------------------------------------------
 (12) _BP3_ISR                                             0     0      0   18770
                                NULL *
        _BP3_DefaultInterruptHandler *
                            _int_BP3 *
 ---------------------------------------------------------------------------------
 (13) _int_BP3                                             2     2      0   18770
                                            115 BANK0      2     2      0
                   _appliquer_action
                   i2_LCD_UpdateMenu
 ---------------------------------------------------------------------------------
 (14) _appliquer_action                                    7     7      0    1410
                                             29 COMRAM     7     7      0
                           _off_leds
                            _on_leds
 ---------------------------------------------------------------------------------
 (15) _on_leds                                             9     7      2     708
                                             20 COMRAM     9     7      2
                          _send_leds
 ---------------------------------------------------------------------------------
 (15) _off_leds                                            6     6      0     633
                                             20 COMRAM     6     6      0
                          _send_leds
 ---------------------------------------------------------------------------------
 (16) _send_leds                                          14    14      0     407
                                              6 COMRAM    14    14      0
                         _send_color
                       _ws2812_reset
 ---------------------------------------------------------------------------------
 (17) _ws2812_reset                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _send_color                                          3     1      2     181
                                              3 COMRAM     3     1      2
                          _send_byte
 ---------------------------------------------------------------------------------
 (18) _send_byte                                           2     2      0     106
                                              1 COMRAM     2     2      0
                           _send_bit
 ---------------------------------------------------------------------------------
 (19) _send_bit                                            1     1      0      29
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (13) _BP3_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _BP2_ISR                                             0     0      0   17360
                                NULL *
        _BP2_DefaultInterruptHandler *
                            _int_BP2 *
 ---------------------------------------------------------------------------------
 (13) _int_BP2                                             2     2      0   17360
                                            115 BANK0      2     2      0
                   i2_LCD_UpdateMenu
 ---------------------------------------------------------------------------------
 (13) _BP2_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _BP1_ISR                                             0     0      0   17360
                                NULL *
        _BP1_DefaultInterruptHandler *
                            _int_BP1 *
 ---------------------------------------------------------------------------------
 (13) _int_BP1                                             2     2      0   17360
                                            115 BANK0      2     2      0
                   i2_LCD_UpdateMenu
 ---------------------------------------------------------------------------------
 (14) i2_LCD_UpdateMenu                                   24    24      0   17360
                                             91 BANK0     24    24      0
                         i2_LCD_Char
                         i2_LCD_Init
                    i2_LCD_SetCursor
                       i2_LCD_String
                          i2___fltol
                     i2_lire_tension
                          i2_sprintf
 ---------------------------------------------------------------------------------
 (15) i2_sprintf                                          23    15      8   13554
                                             70 BANK0     21    13      8
                         i2_vfprintf
 ---------------------------------------------------------------------------------
 (16) i2_vfprintf                                          8     2      6   13224
                                             62 BANK0      8     2      6
                        i2_vfpfcnvrt
 ---------------------------------------------------------------------------------
 (17) i2_vfpfcnvrt                                        16    10      6   12997
                                             47 BANK0     15     9      6
                           i2_efgtoa
                            i2_fputc
               i2_read_prec_or_width
 ---------------------------------------------------------------------------------
 (18) i2_read_prec_or_width                                9     5      4     182
                                              0 COMRAM     9     5      4
 ---------------------------------------------------------------------------------
 (18) i2_efgtoa                                           56    49      7   11809
                                             84 COMRAM     9     2      7
                                              0 BANK0     47    47      0
                          i2___awdiv
                          i2___awmod
                          i2___fladd
                          i2___fldiv
                           i2___fleq
                           i2___flge
                          i2___flmul
                          i2___flneg
                          i2___flsub
                          i2___fltol
                    i2___fpclassifyf
                           i2_floorf
                             i2_labs
                           i2_memcpy
                              i2_pad
                           i2_strcpy
 ---------------------------------------------------------------------------------
 (19) i2_strcpy                                            6     2      4      77
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (19) i2_pad                                               9     3      6     707
                                             16 COMRAM     9     3      6
                            i2_fputc
                            i2_fputs
 ---------------------------------------------------------------------------------
 (20) i2_fputs                                             7     3      4     331
                                              9 COMRAM     7     3      4
                            i2_fputc
 ---------------------------------------------------------------------------------
 (18) i2_fputc                                             9     5      4     232
                                              0 COMRAM     9     5      4
                            i2_putch
 ---------------------------------------------------------------------------------
 (19) i2_putch                                             1     1      0       0
 ---------------------------------------------------------------------------------
 (19) i2_memcpy                                           11     5      6     146
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (19) i2_labs                                              8     4      4      69
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (19) i2_floorf                                           20    16      4     340
                                             64 COMRAM    20    16      4
                          i2___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (19) i2___fpclassifyf                                    14    10      4     137
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (19) i2___fltol                                          10     6      4     233
                                             74 COMRAM    10     6      4
                     i2_lire_tension (ARG)
 ---------------------------------------------------------------------------------
 (19) i2___flsub                                           8     0      8    2037
                                             39 COMRAM     8     0      8
                          i2___fladd
                          i2___flmul (ARG)
 ---------------------------------------------------------------------------------
 (20) i2___fladd                                          16     8      8    1988
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (19) i2___flneg                                           4     0      4      46
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (19) i2___flge                                           12     4      8     190
                                             39 COMRAM    12     4      8
                          i2___flmul (ARG)
 ---------------------------------------------------------------------------------
 (19) i2___fleq                                           12     4      8      94
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (19) i2___awmod                                           6     2      4     298
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (19) i2___awdiv                                           8     4      4     302
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (15) i2_lire_tension                                     10     6      4    3025
                                             64 COMRAM    10     6      4
                i2_ADC_ChannelSelect
          i2_ADC_ConversionResultGet
              i2_ADC_ConversionStart
                          i2___fldiv
                          i2___flmul
                         i2___xxtofl
 ---------------------------------------------------------------------------------
 (16) i2___xxtofl                                         14    10      4     337
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (19) i2___flmul                                          25    17      8    1480
                                             14 COMRAM    25    17      8
                         i2___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (19) i2___fldiv                                          25    17      8    1133
                                             39 COMRAM    25    17      8
                          i2___flmul (ARG)
                         i2___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (16) i2_ADC_ConversionStart                               0     0      0       0
 ---------------------------------------------------------------------------------
 (16) i2_ADC_ConversionResultGet                           4     2      2       0
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (16) i2_ADC_ChannelSelect                                 1     1      0      29
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (15) i2_LCD_String                                        2     0      2      93
                                              2 COMRAM     2     0      2
                         i2_LCD_Char
 ---------------------------------------------------------------------------------
 (16) i2_LCD_Char                                          2     2      0      29
                                              0 COMRAM     2     2      0
                  i2_LCD_EnablePulse
 ---------------------------------------------------------------------------------
 (15) i2_LCD_SetCursor                                     6     5      1     164
                                              2 COMRAM     6     5      1
                      i2_LCD_Command
 ---------------------------------------------------------------------------------
 (15) i2_LCD_Init                                          2     2      0      58
                                              3 COMRAM     2     2      0
                        i2_LCD_Clear
                      i2_LCD_Command
 ---------------------------------------------------------------------------------
 (16) i2_LCD_Clear                                         1     1      0      29
                                              2 COMRAM     1     1      0
                      i2_LCD_Command
 ---------------------------------------------------------------------------------
 (16) i2_LCD_Command                                       2     2      0      29
                                              0 COMRAM     2     2      0
                  i2_LCD_EnablePulse
 ---------------------------------------------------------------------------------
 (17) i2_LCD_EnablePulse                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _BP1_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (12) NULL(Fake)                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _ADC_ThresholdISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _ADC_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 20
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Initialize
   _BP1_SetInterruptHandler
   _BP2_SetInterruptHandler
   _BP3_SetInterruptHandler
   _LCD_UpdateMenu
     _LCD_Char
       _LCD_EnablePulse
     _LCD_Init
       _LCD_Clear
         _LCD_Command
           _LCD_EnablePulse
       _LCD_Command
     _LCD_SetCursor
       _LCD_Command
     _LCD_String
       _LCD_Char
     ___fltol
       _lire_tension (ARG)
         _ADC_ChannelSelect
         _ADC_ConversionResultGet
         _ADC_ConversionStart
         ___fldiv
           ___flmul (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul
         ___xxtofl
     _lire_tension
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
               ___flmul (ARG)
             ___flmul
             ___flneg
             ___flsub
               ___fladd
               ___flmul (ARG)
             ___fltol
             ___fpclassifyf
             _floorf
               ___fldiv (ARG)
             _labs
             _memcpy
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
             _strcpy
           _fputc
           _read_prec_or_width
   _SYSTEM_Initialize
     _ADC_Initialize
     _CLOCK_Initialize
     _INTERRUPT_Initialize
       _INT0_SetInterruptHandler
       _INT1_SetInterruptHandler
       _INT2_SetInterruptHandler
     _PIN_MANAGER_Initialize
       _BP1_SetInterruptHandler
       _BP2_SetInterruptHandler
       _BP3_SetInterruptHandler
     _TMR1_Initialize
   _TMR1_OverflowCallbackRegister

 _INTERRUPT_InterruptManager (ROOT)
   _ADC_ISR
   _ADC_ThresholdISR
   _PIN_MANAGER_IOC
     _BP1_ISR
       NULL(Fake) *
       _BP1_DefaultInterruptHandler *
       _int_BP1 *
         i2_LCD_UpdateMenu
           i2_LCD_Char
             i2_LCD_EnablePulse
           i2_LCD_Init
             i2_LCD_Clear
               i2_LCD_Command
                 i2_LCD_EnablePulse
             i2_LCD_Command
           i2_LCD_SetCursor
             i2_LCD_Command
           i2_LCD_String
             i2_LCD_Char
           i2___fltol
             i2_lire_tension (ARG)
               i2_ADC_ChannelSelect
               i2_ADC_ConversionResultGet
               i2_ADC_ConversionStart
               i2___fldiv
                 i2___flmul (ARG)
                   i2___xxtofl (ARG)
                 i2___xxtofl (ARG)
               i2___flmul
               i2___xxtofl
           i2_lire_tension
           i2_sprintf
             i2_vfprintf
               i2_vfpfcnvrt
                 i2_efgtoa
                   i2___awdiv
                   i2___awmod
                   i2___fladd
                   i2___fldiv
                   i2___fleq
                   i2___flge
                     i2___flmul (ARG)
                   i2___flmul
                   i2___flneg
                   i2___flsub
                     i2___fladd
                     i2___flmul (ARG)
                   i2___fltol
                   i2___fpclassifyf
                   i2_floorf
                     i2___fldiv (ARG)
                   i2_labs
                   i2_memcpy
                   i2_pad
                     i2_fputc
                       i2_putch
                     i2_fputs
                       i2_fputc
                   i2_strcpy
                 i2_fputc
                 i2_read_prec_or_width
     _BP2_ISR
       NULL(Fake) *
       _BP2_DefaultInterruptHandler *
       _int_BP2 *
         i2_LCD_UpdateMenu
     _BP3_ISR
       NULL(Fake) *
       _BP3_DefaultInterruptHandler *
       _int_BP3 *
         _appliquer_action
           _off_leds
             _send_leds
               _send_color
                 _send_byte
                   _send_bit
               _ws2812_reset
           _on_leds
             _send_leds
         i2_LCD_UpdateMenu
   _TMR1_OverflowISR
     NULL(Fake) *
     _TMR1_CounterSet *
     _TMR1_DefaultOverflowCallback *
     _TMR1_handler *

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM            4095      0     432     10.5%
BITBIGSFRllh      1329      0       0      0.0%
BITBIGSFRllll      400      0       0      0.0%
BITBIGSFRh         263      0       0      0.0%
BITBANK15          256      0       0      0.0%
BANK15             256      0       0      0.0%
BITBANK14          256      0       0      0.0%
BANK14             256      0       0      0.0%
BITBANK13          256      0       0      0.0%
BANK13             256      0       0      0.0%
BITBANK12          256      0       0      0.0%
BANK12             256      0       0      0.0%
BITBANK11          256      0       0      0.0%
BANK11             256      0       0      0.0%
BITBANK10          256      0       0      0.0%
BANK10             256      0       0      0.0%
BITBANK9           256      0       0      0.0%
BANK9              256      0       0      0.0%
BITBANK8           256      0       0      0.0%
BANK8              256      0       0      0.0%
BITBANK7           256      0       0      0.0%
BANK7              256      0       0      0.0%
BITBANK6           256      0       0      0.0%
BANK6              256      0       0      0.0%
BITBANK5           256      0       0      0.0%
BANK5              256      0       0      0.0%
BITBANK4           256      0       0      0.0%
BANK4              256      0       0      0.0%
BITBANK3           256      0       0      0.0%
BANK3              256      0       0      0.0%
BITBANK2           256      0       0      0.0%
BANK2              256      0      80     31.2%
BITBANK1           256      0       0      0.0%
BANK1              256    214     216     84.4%
BITBANK0           160      0       0      0.0%
BANK0              160    117     155     96.9%
BITCOMRAM           95      0       0      0.0%
COMRAM              95     93      94     98.9%
BITBIGSFRlh         32      0       0      0.0%
BITBIGSFRlllh       20      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0     975      0.0%


Microchip Technology PIC18 Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Wed Jun 11 16:15:16 2025

                                           l9 653A                                  ___fldiv@aexp 0145  
                                ___fldiv@bexp 0144                                  ___fldiv@sign 013D  
                                ?_LCD_Command 0001                                            l12 6546  
                                          l13 6554                                            l21 6450  
                                          l23 646E                                            l16 6474  
                                          l41 634C                                            l18 6492  
                                          l43 634E                                            l35 5B16  
                                          l45 6380                                            l29 5966  
                                          l38 658A                                  ___awdiv@sign 010B  
                                 ?_LCD_String 0108                             ?_ADC_ThresholdISR 0001  
                               _LCD_SetCursor 5ABA                                           l150 6614  
                                         l153 666A                                           l162 64FA  
                                         l138 5BD0                                           l326 6608  
                                         l339 65A0                                           l461 663C  
                                         l622 61A2                                           l471 6632  
                                         l560 665A                                           l448 58F2  
                                         l537 6222                                           l481 6628  
                                         l573 6650                                           l816 57CE  
                                         l761 2C58                                           l681 661E  
                                         l586 6646                                           l875 5D86  
                                         l876 5D86                                           i2l9 6556  
                                 i2___fladd@a 0005                                   i2___fladd@b 0001  
                  ??_INT0_SetInterruptHandler 0108                            ??_ADC_ThresholdISR 0001  
                             _timer1ReloadVal 00E3                                           _pad 5968  
                             __end_of_ADC_ISR 667E                                   i2___fldiv@a 002C  
                                 i2___fldiv@b 0028                                  ___awmod@sign 010B  
                                  i2___xxtofl 428E                                           prod 3FF3  
                             __end_of_BP1_ISR 644C                               ?i2_lire_tension 0041  
                             __end_of_BP2_ISR 641A                                           tosl 3FFD  
                             __end_of_BP3_ISR 63E8                                           wreg 3FE8  
                                 i2___flmul@a 0013                                   i2___flmul@b 000F  
                         __end_ofi2_vfpfcnvrt 3CAE                                   i2___flsub@a 002C  
                                 i2___flsub@b 0028                                  ___flmul@aexp 0125  
                                ___flmul@bexp 0126               __end_of_BP3_SetInterruptHandler 662A  
                                ___flmul@sign 0120                                  ___flmul@temp 012B  
                                ___flmul@prod 0127                                  ___fltol@exp1 0159  
                                        l1112 5194                                          l1140 55DC  
                                        l1125 5482                                          l1151 4788  
                                        l1146 4742                                          l1410 1862  
                                        l1155 62D8                                          l1411 1828  
                                        l1502 22D8                                          l1503 22F6  
                                        l1423 1A1C                                          l1512 2404  
                                        l1504 234E                                          l1505 233C  
                                        l1409 1874                                          l1601 0B5A  
                                        l1442 1B04                                          l1426 198E  
                                        l1418 1B40                                          l1178 4682  
                                        l1435 1A5C                                          l1451 6006  
                                        l1436 1A4A                                          l1604 03B4  
                                        l1550 4224                                          l1702 4A92  
                                        l1606 01F4                                          l1463 2FEA  
                                        l1543 41C8                                          l1536 4130  
                                        l1712 3E06                                          l1465 2E4E  
                                        l1474 2E94                                          l1475 2EB2  
                                        l1539 428C                                          l1723 5D36  
                                        l1476 2F0A                                          l1468 2E12  
                                        l1477 2EF8                                          l1709 3EC2  
                                        l1741 4F30                                          l1590 59D8  
                                        l1638 081E                                          l1495 20BE  
                                        l1663 4C86                                          l1559 5EDE  
                                        l1752 667E                                          l1729 5C2C  
                                        l1586 5980                                          l1674 37E8  
                                        l1499 2442                                          l1659 4C7E  
                                        l1692 5CDE                                          l1749 5FBE  
                                        l1685 39D2                                          l1758 604C  
                                        l7000 4A8A                                          l7010 5CF0  
                                        l6300 17A0                                          l7020 3D26  
                                        l7012 5D04                                          l7004 6008  
                                        l6310 17B4                                          l6302 17A4  
                                        l7030 3DF6                                          l7022 3D3A  
                                        l7006 6010                                          ?_pad 0116  
                                        l6400 1A2C                                          l6312 17B8  
                                        l6304 17A8                                          l6320 17C8  
                                        l7040 3EB2                                          l7024 3D48  
                                        l7032 3E2A                                          l7016 3CAE  
                                        l7008 5CE0                                          l7200 00B2  
                                        l8000 619C                                          l7130 653C  
                                        l6410 1A86                                          l6402 1A42  
                                        l6330 1842                                          l6322 17F4  
                                        l6314 17BC                                          l6306 17AC  
                                        l6250 16B8                                          l6242 168A  
                                        l7034 3E66                                          l7018 3CCE  
                                        l7050 5BFA                                          l7210 00FC  
                                        l7202 00DA                                          l8010 620E  
                                        l8002 61E4                                          l7132 6544  
                                        l6420 1B02                                          l6412 1AC0  
                                        l6340 1882                                          l6332 1846  
                                        l6324 1810                                          l6316 17C0  
                                        l6308 17B0                                          l6260 16F0  
                                        l6252 16C8                                          l6244 1698  
                                        l7036 3E7A                                          l7028 3DBA  
                                        l7052 5C0C                                          l7044 5BD2  
                                        l7300 0584                                          l7220 0166  
                                        l7212 0114                                          l7204 00EA  
                                        l8012 6212                                          l8004 61EC  
                                        l6430 1B2E                                          l6422 1B12  
                                        l6406 1A6C                                          l6414 1AC2  
                                        l6350 18C4                                          l6342 1892  
                                        l6334 1854                                          l6326 1820  
                                        l6318 17C4                                          l6270 171E  
                                        l6262 16F6                                          l6254 16D8  
                                        l6246 16A6                                          l7038 3EA2  
                                        l7046 5BE6                                          l7054 5C10  
                                        l7310 0642                                          l7302 05B8  
                                        l7222 0176                                          l7214 011E  
                                        l7206 00EE                                          l8006 61FA  
                                        l6600 2DEE                                          l6432 1B30  
                                        l6424 1B18                                          l6416 1AD2  
                                        l6408 1A78                                          l6360 18F2  
                                        l6352 18D2                                          l6336 1856  
                                        l6328 1836                                          l6280 1752  
                                        l6272 1720                                          l6264 1708  
                                        l6256 16DA                                          l6248 16A8  
                                        l7048 5BF6                                          l6440 5F98  
                                        l7400 0A1C                                          l7320 0718  
                                        l7312 0652                                          l7304 05EC  
                                        l7224 017A                                          l7208 00F4  
                                        l8200 2A96                                          l8120 2896  
                                        l8008 61FE                                          l6610 2E3C  
                                        l6602 2E02                                          l6530 2C5A  
                                        l8050 574A                                          l6426 1B1A  
                                        l6418 1AE2                                          l6370 195E  
                                        l6362 18FC                                          l6354 18DE  
                                        l6346 18A6                                          l6338 1860  
                                        l6290 178C                                          l6274 1730  
                                        l6282 1758                                          l6266 170A  
                                        l6258 16E0                                          l6442 5F9E  
                                        l7410 0A5C                                          l7402 0A24  
                                        l7330 075E                                          l7322 072C  
                                        l7314 0686                                          l7306 0600  
                                        l7250 02B0                                          l7242 0204  
                                        l7226 0180                                          l7218 013E  
                                        l8210 2AD2                                          l8202 2AA4  
                                        l8130 28EE                                          l8122 28A0  
                                        l6620 2E84                                          l6612 2E4C  
                                        l6604 2E10                                          l6540 2C98  
                                        l6532 2C68                                          l6700 20CE  
                                        l8052 57BE                                          l8044 5734  
                                        l6428 1B20                                          l6372 196E  
                                        l6356 18E2                                          l6348 18B6  
                                        l6364 1902                                          l6292 1790  
                                        l6284 1768                                          l6276 1740  
                                        l6268 1710                                          l6436 5F78  
                                        l7420 0A98                                          l7412 0A6C  
                                        l7404 0A2A                                          l7340 0830  
                                        l7332 0766                                          l7316 06E0  
                                        l7324 0730                                          l7308 0634  
                                        l7252 02EE                                          l7244 0208  
                                        l7228 0188                                          l7236 01A4  
                                        l7180 0032                                          l8060 5EAA  
                                        l8220 2B0C                                          l8212 2ADE  
                                        l8204 2AB0                                          l8140 2938  
                                        l8132 28F8                                          l8124 28AE  
                                        l8116 6616                                          l6622 2E92  
                                        l6614 2E5E                                          l6606 2E1C  
                                        l6550 2CC6                                          l6542 2CA8  
                                        l6534 2C76                                          l6710 210C  
                                        l6702 20DE                                          l8046 573A  
                                        l6390 19F0                                          l6382 19C8  
                                        l6366 1928                                          l6374 197E  
                                        l6358 18F0                                          l6294 1794  
                                        l6286 177A                                          l6278 1750  
                                        l6438 5F86                                          l7430 0AF2  
                                        l7422 0A9E                                          l7414 0A78  
                                        l7406 0A3C                                          l7350 0860  
                                        l7342 083E                                          l7334 077C  
                                        l7326 0740                                          l7318 06E4  
                                        l7270 03E2                                          l7254 0302  
                                        l7262 0380                                          l7246 023C  
                                        l7238 01BC                                          l7190 007A  
                                        l7182 0040                                          l8062 5EB2  
                                        l8230 2B6E                                          l8222 2B20  
                                        l8214 2AE8                                          l8206 2ABA  
                                        l8150 2978                                          l8142 294A  
                                        l8134 2902                                          l8126 28C8  
                                        l8118 288E                                          _ADCP 3ED7  
                                        l7504 6476                                          l6632 2F1A  
                                        l6640 2F62                                          l6616 2E74  
                                        l6624 2EA4                                          l6608 2E3A  
                                        l6560 2CFC                                          l6552 2CCC  
                                        l6544 2CAA                                          l6536 2C78  
                                        l6720 2166                                          l6712 2126  
                                        l8048 573E                                          l6800 50D2  
                                        l6392 19F8                                          l6384 19D2  
                                        l6376 19A4                                          l6368 195C  
                                        l6296 1798                                          l6288 1788  
                                        l7432 0B0A                                          l7424 0AAE  
                                        l7416 0A80                                          l7408 0A56  
                                        l7360 0892                                          l7352 0870  
                                        l7344 084E                                          l7336 07F6  
                                        l7328 0752                                          l7280 0428  
                                        l7272 03EA                                          l7264 03BC  
                                        l7256 0336                                          l7248 027C  
                                        l7192 008A                                          l7184 0044  
                                        l8064 5ECE                                          l8056 5E90  
                                        l8232 2B7A                                          l8224 2B46  
                                        l8216 2AF2                                          l8208 2AC4  
                                        l8160 29B0                                          l8152 2982  
                                        l8144 2954                                          l8136 2910  
                                        l8128 28D4                                          l7506 647C  
                                        l6650 2FC6                                          l6642 2F7C  
                                        l6634 2F26                                          l6626 2EC2  
                                        l6618 2E7A                                          l6570 2D3A  
                                        l6562 2D0C                                          l6554 2CDA  
                                        l6538 2C88                                          l6546 2CB0  
                                        l6730 21B4                                          l6722 2174  
                                        l6714 2132                                          l6706 20F2  
                                        l6810 50FE                                          l6802 50D6  
                                        l6394 19FC                                          l6386 19E0  
                                        l6378 19B4                                          l6298 179C  
                                        l7434 0B1A                                          l7418 0A92  
                                        l7426 0AB4                                          l7370 093C  
                                        l7362 08A4                                          l7354 0874  
                                        l7346 0852                                          l7338 0816  
                                        l7290 046E                                          l7282 043A  
                                        l7274 03F0                                          l7266 03CC  
                                        l7258 033E                                          l7194 009A  
                                        l7186 0068                                          l7178 001E  
                                        l7450 4C3A                                          l7442 4B92  
                                        l7530 3738                                          l8058 5EA2  
                                        l8234 2B9A                                          l8226 2B54  
                                        l8218 2B00                                          l8170 29EC  
                                        l8162 29BE                                          l8154 2990  
                                        l8146 2962                                          l8138 292E  
                                        l8090 6594                                          l7508 6480  
                                        l6652 2FCA                                          l6644 2F92  
                                        l6636 2F34                                          l6628 2EF0  
                                        l6572 2D4A                                          l6580 2D6A  
                                        l6564 2D0E                                          l6556 2CDC  
                                        l6548 2CC0                                          l6740 2232  
                                        l6732 21D2                                          l6724 2184  
                                        l6716 214E                                          l6708 2102  
                                        l6820 512C                                          l6812 5106  
                                        l6804 50E4                                          l6900 46C4  
                                        l6396 1A0C                                          l6388 19E2  
                                        l7436 0B32                                          l7428 0AE4  
                                        l7380 098A                                          l7372 0944  
                                        l7364 08A8                                          l7356 087A  
                                        l7348 0858                                          l7292 04D2  
                                        l7276 0402                                          l7284 0442  
                                        l7268 03D8                                          l7196 00A6  
                                        l7188 0072                                          l7452 4C4C  
                                        l7444 4B9C                                          l7540 37A6  
                                        l7532 3746                                          l8228 2B60  
                                        l8180 2A26                                          l8172 29F8  
                                        l8164 29CA                                          l8156 299C  
                                        l8148 296E                                          l8092 6598  
                                        l7710 6452                                          l6654 2FD8  
                                        l6646 2FAC                                          l6638 2F5E  
                                        l6590 2DA8                                          l6582 2D7A  
                                        l6574 2D52                                          l6558 2CEC  
                                        l6566 2D14                                          l6750 22C8  
                                        l6742 225C                                          l6734 21E2  
                                        l6726 2194                                          l6718 215A  
                                        l6670 2014                                          l6830 5166  
                                        l6822 5134                                          l6814 510A  
                                        l6806 50EC                                          l6910 4730  
                                        l6902 46F2                                          l6398 1A0E  
                                        l5950 4EA6                                          l5942 4E58  
                                        l7438 0B3A                                          l7390 09BE  
                                        l7382 0998                                          l7366 08AE  
                                        l7358 0880                                          l7374 0948  
                                        l7294 052A                                          l7286 044A  
                                        l7278 0410                                          l7198 00AE  
                                        l7446 4BCA                                          l7550 37EE  
                                        l7542 37BE                                          l7534 374A  
                                        l7526 36F8                                          l8190 2A5E  
                                        l8182 2A30                                          l8174 2A02  
                                        l8166 29D4                                          l8158 29A6  
                                        l8238 2BCA                                          l8094 659C  
                                        l8086 658C                                          l7712 6458  
                                        l7720 660E                                          l6656 2FDE  
                                        l6648 2FC4                                          l6592 2DB8  
                                        l6584 2D7A                                          l6576 2D56  
                                        l6568 2D24                                          l6752 22D6  
                                        l6744 2292                                          l6736 2202  
                                        l6728 21A4                                          l6680 204C  
                                        l6672 2016                                          l6840 518C  
                                        l6832 5168                                          l6824 5142  
                                        l6816 5112                                          l6808 50F0  
                                        l6912 4780                                          l6904 4702  
                                        l6920 62B8                                          l5952 4EDC  
                                        l5944 4E6C                                          l7392 09C6  
                                        l7384 09AA                                          l7376 0966  
                                        l7368 0906                                          l7296 0560  
                                        l7288 045A                                          l7448 4C18  
                                        l7552 3816                                          l7544 37D8  
                                        l7536 3778                                          l7528 3726  
                                        l8192 2A68                                          l8184 2A3A  
                                        l8176 2A0C                                          l8168 29DE  
                                        l8088 6590                                          l7714 645C  
                                        l7722 6666                                          l6658 2FE0  
                                        l6594 2DC8                                          l6762 235E  
                                        l6770 23A6                                          l6754 22E8  
                                        l6746 22A0                                          l6738 2212  
                                        l6690 2078                                          l6682 205C  
                                        l6674 2026                                          l6666 1FF8  
                                        l7810 40EC                                          l6834 516E  
                                        l6826 5148                                          l6818 5124  
                                        l6850 53EE                                          l6914 4786  
                                        l6906 4710                                          l6922 62C8  
                                        l5946 4E7E                                          l7394 09D2  
                                        l7386 09AC                                          l7378 0982  
                                        l7298 0566                                          l7554 3838  
                                        l7562 38EE                                          l7546 37E0  
                                        l7538 378A                                          l8194 2A76  
                                        l8186 2A48                                          l8178 2A1A  
                                        l7730 662A                                          l7716 6572  
                                        l7724 64DC                                          l6596 2DD8  
                                        l6588 2D8E                                          l6780 2408  
                                        l6772 23C0                                          l6764 236A  
                                        l6756 2306                                          l6748 22BE  
                                        l6692 2088                                          l6684 2062  
                                        l6676 2036                                          l6668 2006  
                                        l7820 416A                                          l7812 40FA  
                                        l6828 515E                                          l6836 5174  
                                        l6860 5422                                          l6852 53F2  
                                        l6844 53D4                                          l6908 4722  
                                        l6940 45E8                                          l6932 45A8  
                                        l5948 4E88                                          l7396 09D8  
                                        l7388 09BA                                          l7572 3962  
                                        l7564 3904                                          l7556 385E  
                                        l8196 2A82                                          l8188 2A54  
                                        l7900 5BAC                                          l7732 6620  
                                        l7718 6578                                          l6598 2DDE  
                                        l6790 2432                                          l6782 2418  
                                        l6774 23D4                                          l6766 2378  
                                        l6758 2334                                          l6694 2098  
                                        l6686 2068                                          l6678 2046  
                                        l7830 41BE                                          l7822 4172  
                                        l7814 4140                                          l6838 5184  
                                        l6870 545C                                          l6862 542A  
                                        l6854 5400                                          l6846 53D8  
                                        l6918 62A0                                          l6950 4618  
                                        l6942 45F6                                          l6934 45D2  
                                        l6926 457C                                          l7398 0A00  
                                        l7566 392C                                          l7558 38A6  
                                        l7574 3988                                          l8198 2A8C  
                                        l7910 5BC6                                          l7902 5BB6  
                                        l7734 6652                                          l6784 2426  
                                        l6776 23EE                                          l6768 23A2  
                                        l6696 20A8                                          l6688 2076  
                                        l7840 4234                                          l7832 41FA  
                                        l7824 417E                                          l7816 4156  
                                        l7808 40DA                                          l6864 5438  
                                        l6872 5462                                          l6856 5408  
                                        l6848 53E6                                          l6880 5532  
                                        l6960 4642                                          l6952 4622  
                                        l6936 45D4                                          l6928 4594  
                                        l7912 5BC8                                          l7904 5BBE  
                                        l7920 6606                                          l7736 6648  
                                        l7728 6634                                          l6786 2428  
                                        l6778 23FE                                          l6698 20AE  
                                        l7850 427C                                          l7842 4238  
                                        l7834 4206                                          l7826 41B0  
                                        l6874 5472                                          l6866 544E  
                                        l6858 541A                                          l6890 55D4  
                                        l6882 5562                                          l6794 5FC0  
                                        l6962 4652                                          l6938 45E4  
                                        l6970 5968                                          l7578 399E  
                                        l7906 5BC0                                          l7914 65F8  
                                        l7738 663E                                          l7930 588A  
                                        l7922 5868                                          l6788 242E  
                                        l7844 425C                                          l7836 4214  
                                        l7828 41B2                                          l6876 547A  
                                        l6868 5456                                          l6892 55DA  
                                        l6884 5572                                          l6796 5FD2  
                                        l6964 4662                                          l6948 460E  
                                        l6980 59C4                                          l6972 5978  
                                        l7860 5CD4                                          l7908 5BC4  
                                        l7916 65FE                                          l7940 5894  
                                        l7932 588C                                          l7924 5876  
                                        l7870 592C                                          l7846 426C  
                                        l7838 4232                                          l6886 55A0  
                                        l6966 4672                                          l6958 4636  
                                        l6990 4A28                                          l6982 4994  
                                        l6974 598C                                          l7854 5C88  
                                        l7918 6600                                          l7950 58A2  
                                        l7942 5896                                          l7934 588E  
                                        l7926 587E                                          l8750 5D78  
                                        l7880 6350                                          l7872 5ABE  
                                        l7864 58F4                                          l7848 427A  
                                        l6888 55B0                                          l6896 4684  
                                        l6984 49B4                                          l6976 59A0  
                                        l7856 5C94                                          l7960 58B0  
                                        l7952 58A4                                          l7944 5898  
                                        l7936 5890                                          l7928 5888  
                                        l8760 5D82                                          l8752 5D7A  
                                        l7882 636A                                          l7874 5AEA  
                                        l7866 58F8                                          l6898 46B4  
                                        l6986 49F4                                          l6994 4A34  
                                        l6978 59A6                                          l7858 5CB2  
                                        l8834 2BE2                                          l7890 5B76  
                                        l7970 58BA                                          l7962 58B2  
                                        l7954 58A6                                          l7946 589A  
                                        l7938 5892                                          l8762 5D86  
                                        l8754 5D7C                                          l7884 6370  
                                        l7876 5AFC                                          l7868 5926  
                                        l6996 4A46                                          l6988 4A1C  
                                        l7892 5B9A                                          l7980 58C4  
                                        l7972 58BC                                          l7964 58B4  
                                        l7956 58A8                                          l7948 589C  
                                        l8756 5D7E                                          l8748 5D38  
                                        l7886 6376                                          l7878 5B00  
                                        l7894 5BA2                                          l7982 58D2  
                                        l7974 58BE                                          l7966 58B6  
                                        l7958 58AE                                          l7990 6168  
                                        l8758 5D80                                          l7888 637C  
                                        l7896 5BA4                                          l7984 58E0  
                                        l7976 58C0                                          l7968 58B8  
                                        l7992 6184                                          l7898 5BAA  
                                        l7986 58EE                                          l7978 58C2  
                                        l7994 618C                                          l7996 6196  
                                        l7988 6162                                          l7998 619A  
                                        STR_1 FFF2                                          STR_2 FF09  
                                        STR_3 FF1A                                          STR_4 FFED  
                                        STR_5 FF3A                                          STR_6 FF87  
                                        STR_7 FF69                                          STR_8 FFB2  
                                        STR_9 FFC0                                          _LATA 3FBA  
                                        _LATB 3FBB                                          _LATC 3FBC  
                                        u7000 2FD8                                          u7001 2FD4  
                                        u7010 2014                                          u7011 2010  
                                        u7100 22D6                                          u7020 2026  
                                        u7101 22D2                                          u7021 2022  
                                        u7110 22F6                                          u7030 2036  
                                        u7111 22F2                                          u7031 2032  
                                        u7120 2306                                          u7040 2076  
                                        u7200 50E4                                          u6400 1788  
                                        u6320 16A6                                          u8000 0410  
                                        u7121 2302                                          u7041 2072  
                                        u7201 50E0                                          u6401 1784  
                                        u6321 16A2                                          u8001 040C  
                                        u7130 2334                                          u7050 2088  
                                        u7210 50FE                                          u6410 17F4  
                                        u6330 16B8                                          u8010 043A  
                                        u7131 2330                                          u7051 2084  
                                        u7211 50FA                                          u6411 17F0  
                                        u6331 16B4                                          u8011 0436  
                                        i2l12 6562                                          u7140 234A  
                                        u7060 2098                                          u7220 5124  
                                        u7300 544E                                          u6500 18D2  
                                        u6420 180C                                          u6340 16C8  
                                        u8100 0830                                          u8020 0584  
                                        i2l13 6570                                          i2l21 64FE  
                                        u7141 2346                                          u7061 2094  
                                        u7221 5120                                          u7301 544A  
                                        u6501 18CE                                          u6421 1806  
                                        u6341 16C4                                          u8101 082C  
                                        u8021 0580                                          u7150 235E  
                                        u7070 20CE                                          u7230 5142  
                                        u7310 5472                                          u6510 18F0  
                                        u6430 180E                                          u6350 1708  
                                        u8110 083E                                          u8030 05EC  
                                        i2l23 651A                                          u7151 235A  
                                        u7071 20CA                                          u7231 513E  
                                        u7311 546E                                          u6511 18EC  
                                        u6351 1704                                          u8111 083A  
                                        u8031 05E8                                          i2l16 651E  
                                        u7160 2378                                          u7080 20DE  
                                        u7240 515E                                          u7320 5562  
                                        u7400 62B8                                          u6600 1A2C  
                                        u6520 1928                                          u6440 1836  
                                        u6360 171E                                          u8200 0B04  
                                        u8120 0892                                          u8040 0634  
                                        i2l41 6382                                          u7161 2374  
                                        u7081 20DA                                          u7241 515A  
                                        u7321 555E                                          u7401 62B4  
                                        u6601 1A28                                          u6521 1924  
                                        u6441 1832                                          u6361 171A  
                                        u8201 0AFE                                          u8121 088E  
                                        u8041 0630                                          i2l18 6538  
                                        u7170 23C0                                          u7090 227C  
                                        u7250 5184                                          u7330 55A0  
                                        u6610 1A42                                          u6530 196E  
                                        u6450 1854                                          u6370 1730  
                                        u7410 4594                                          u8210 0B06  
                                        u8130 0966                                          u8050 0642  
                                        i2l43 6384                                          i2l35 5E8E  
                                        u7171 23BC                                          u7251 5180  
                                        u7331 559C                                          u6611 1A3E  
                                        u6531 196A                                          u6451 1850  
                                        u6371 172C                                          u7411 4590  
                                        u8131 0962                                          u8051 063E  
                                        u7180 23EE                                          u7260 53E6  
                                        u7340 55D4                                          u6700 1B2E  
                                        u6620 1A58                                          u6540 19A4  
                                        u6460 1874                                          u6380 1740  
                                        u7420 45C8                                          u7500 49D6  
                                        u5900 4EA6                                          u8220 0B1A  
                                        u8140 0982                                          u8060 06E0  
                                        i2l45 63B4                                          i2l29 5A4A  
                                        u7181 23EA                                          u7261 53E2  
                                        u7341 55D0                                          u6701 1B2A  
                                        u6621 1A54                                          u6541 19A0  
                                        u6461 1870                                          u6381 173C  
                                        u5901 4EA2                                          u8221 0B16  
                                        u8141 097E                                          u8061 06DC  
                                        i2l38 65E2                                          u7190 2426  
                                        u7270 5400                                          u7350 46B4  
                                        u6630 1A6C                                          u6550 19B4  
                                        u6470 1882                                          u6390 177A  
                                        u7430 45F6                                          u7510 49F4  
                                        u5910 4EDC                                          u6710 5FBE  
                                        u8150 09AA                                          u8070 072C  
                                        u8230 4BCA                                          u7191 2422  
                                        u7095 2272                                          u7271 53FC  
                                        u7351 46B0                                          u6631 1A68  
                                        u6551 19B0                                          u6471 187E  
                                        u6391 1776                                          u7431 45F2  
                                        u7511 49F0                                          u5911 4ED8  
                                        u6711 5FBA                                          u8151 09A6  
                                        u8071 0728                                          u8231 4BC6  
                                        u6800 2C98                                          u7280 541A  
                                        u7360 46F2                                          u6640 1A86  
                                        u6560 19E0                                          u6480 1892  
                                        u7440 460A                                          u7520 4A1C  
                                        u7600 3D26                                          u8160 09BA  
                                        u8080 0752                                          u8240 4C7E  
                                        u6801 2C94                                          u7281 5416  
                                        u7361 46EE                                          u6641 1A82  
                                        u6561 19DC                                          u6481 188E  
                                        u7441 4606                                          u7425 45BE  
                                        u7521 4A18                                          u7505 49CA  
                                        u7601 3D22                                          u8161 09B6  
                                        u8081 074E                                          u8241 4C7A  
                                        u6810 2CDA                                          u7290 5438  
                                        u7370 4710                                          u6650 1AC0  
                                        u6570 19F0                                          u6490 18C4  
                                        u7450 4632                                          u7530 4A46  
                                        u7610 3D48                                          u8170 0A3C  
                                        u8090 07F6                                          u8330 3726  
                                        u6811 2CD6                                          u7291 5434  
                                        u7371 470C                                          u6651 1ABC  
                                        u6571 19EC                                          u6491 18C0  
                                        u7451 462E                                          u7531 4A42  
                                        u7611 3D44                                          u8171 0A38  
                                        u8091 07F2                                          u8331 3722  
                                        u6900 2E74                                          u6820 2CEC  
                                        u8500 4156                                          u7380 4730  
                                        u6660 1AD2                                          u6580 1A0C  
                                        u7460 4652                                          u8180 0A56  
                                        u8340 3778                                          u6901 2E70  
                                        u6821 2CE8                                          u8501 4152  
                                        u7381 472C                                          u6661 1ACE  
                                        u6581 1A08                                          u7461 464E  
                                        u8181 0A52                                          u8341 3774  
                                        u6910 2E92                                          u6830 2CFC  
                                        u8510 41AC                                          u7390 4780  
                                        u6670 1AE2                                          u6590 1A1C  
                                        u7470 4662                                          u7550 4A80  
                                        u7630 3DB6                                          u8190 0A6C  
                                        u8350 3838                                          u6911 2E8E  
                                        u6831 2CF8                                          u8511 41A8  
                                        u7391 477C                                          u6671 1ADE  
                                        u6591 1A18                                          u7471 465E  
                                        u7551 4A7A                                          u7631 3DB2  
                                        u8191 0A68                                          u8351 3834  
                                        u8600 5956                                          u6920 2EB2  
                                        u6840 2D3A                                          u8520 41F6  
                                        u6680 1B02                                          u7560 4A82  
                                        u7640 3DDA                                          u5880 4E6C  
                                        u7480 5978                                          u8360 385A  
                                        u6921 2EAE                                          u6841 2D36  
                                        u8521 41F2                                          u6681 1AFE  
                                        u7545 4A58                                          u7625 3D5C  
                                        u5881 4E68                                          u7481 5974  
                                        u8361 3856                                          u8610 5966  
                                        u6930 2EC2                                          u6850 2D7A  
                                        u8530 4214                                          u6690 1B12  
                                        u7650 3DF6                                          u7626 3D66  
                                        u5890 4E7E                                          u7490 59C4  
                                        u7570 604C                                          u8611 5962  
                                        u6931 2EBE                                          u6851 2D76  
                                        u8531 4210                                          u6691 1B0E  
                                        u7651 3DF2                                          u7627 3D76  
                                        u5891 4E7A                                          u7491 59C0  
                                        u7571 6048                                          u8620 5AFC  
                                        u6940 2EF0                                          u6860 2DEE  
                                        u6780 2C76                                          u8540 4224  
                                        u7660 3E4A                                          u7580 5CF0  
                                        u7900 0166                                          u8621 5AF8  
                                        u9317 6464                                          u6941 2EEC  
                                        u6861 2DEA                                          u6781 2C72  
                                        u8541 4220                                          u7645 3DD0  
                                        u7581 5CEC                                          u7901 0162  
                                        u6950 2F06                                          u6870 2E10  
                                        u6790 2C88                                          u8550 4232  
                                        u7670 3E66                                          u7590 3CF8  
                                        u7910 0176                                          u9327 635C  
                                        u8607 5948                                          u6951 2F02  
                                        u6871 2E0C                                          u6791 2C84  
                                        u8551 422E                                          u7671 3E62  
                                        u7911 0172                                          u6960 2F1A  
                                        u6880 2E3A                                          u8560 426C  
                                        u8480 40EC                                          u7680 3EA2  
                                        u7920 01F0                                          u9337 6580  
                                        u6961 2F16                                          u6881 2E36  
                                        u8561 4268                                          u8481 40E8  
                                        u7681 3E9E                                          u7665 3E40  
                                        u7921 01EC                                          u6970 2F34  
                                        u6890 2E5E                                          u8570 427A  
                                        u8490 40FA                                          u7690 5C2C  
                                        u7930 027C                                          u7850 0040  
                                        u9347 6488                                          u6971 2F30  
                                        u6891 2E5A                                          u8571 4276  
                                        u8491 40F6                                          u7595 3CEE  
                                        u7691 5C28                                          u7931 0278  
                                        u7851 003C                                          u6980 2F7C  
                                        u7940 02B0                                          u7860 008A  
                                        u8580 5CD4                                          u9357 653E  
                                        u6981 2F78                                          u7941 02AC  
                                        u7861 0086                                          u8581 5CD0  
                                        u8590 5922                                          u6990 2FAC  
                                        u7950 02EE                                          u7870 009A  
                                        u9367 6548                                          u6991 2FA8  
                                        u7951 02EA                                          u7871 0096  
                                        u7960 037C                                          u7880 00DA  
                                        u7961 0378                                          u7881 00D6  
                                        u7970 03B4                                          u7890 00EA  
                                        u7971 03B0                                          u7891 00E6  
                                        u7980 03CC                                          u8597 5914  
                                        u7981 03C8                                          u7990 0402  
                                        u7991 03FE                        ??i2_read_prec_or_width 0005  
                                        _WPUA 3A41                                          _WPUB 3A51  
                                        _WPUC 3A61                                          _WPUE 3A81  
                                i2___flge@ff1 0028                                  i2___flge@ff2 002C  
                                 ?i2_LCD_Char 0001                                  i2___fleq@ff1 0001  
                                i2___fleq@ff2 0005                                          _dbuf 0200  
                                 ?i2_LCD_Init 0001                                          _labs 5CE0  
                                        _main 5D38                                          _prec 00DF  
                                        pad@i 011D                                          pad@p 011A  
                                        fsr0h 3FEA                                          fsr1h 3FE2  
                                        indf0 3FEF                                          fsr2h 3FDA  
                                        fsr0l 3FE9                                          indf2 3FDF  
                                        fsr1l 3FE1                                          fsr2l 3FD9  
                                i2___flneg@f1 0001                                 ___fpclassifyf 4994  
                   ?_INT2_SetInterruptHandler 0106                                          prodh 3FF4  
                                        prodl 3FF3                                          start 001A  
                 __end_of_ADC_ConversionStart 666C                                  i2___fltol@f1 004B  
                             ___fldiv@new_exp 013E                               __end_ofi2_fputc 500A  
                             __end_ofi2_fputs 6162                          _BP1_InterruptHandler 00F9  
                             __end_ofi2_putch 668A                                    i2efgtoa@fp 0055  
                                  i2efgtoa@ne 0066                                    i2efgtoa@pp 0068  
                                  i2efgtoa@ou 0074                                  ___param_bank 0000  
                     _BP2_SetInterruptHandler 662A                                         ??_pad 011C  
                            __end_of_LCD_Char 6470                                    i2_vfprintf 5D8E  
                            __end_of_LCD_Init 6382                                  LCD_Char@data 0107  
                              ?_LCD_SetCursor 0108                                 ___fltol@sign1 0158  
              ??_TMR1_DefaultOverflowCallback 0001                                         ?_labs 0106  
                                       _ADCAP 3EF5                                         _ADACT 3EFE  
                             __end_of___fladd 1B42                                         ?_main 0001  
                                       _ADCLK 3EFF                                         _ADCNT 3EEB  
                                       _ADPCH 3EF1                               __end_of___fldiv 2FEC  
                                       _ADREF 3EFD                               __end_of___awdiv 5196  
                             __end_of___flneg 62DA                                         STR_10 FF2A  
                                       STR_11 FF78                                         STR_20 FFF7  
                                       STR_12 FF4A                                         STR_13 FFA4  
                                       STR_14 FF5A                                         STR_23 FFFB  
                                       STR_15 FFCE                                         STR_16 FFD7  
                                       STR_17 FFE6                                         STR_18 FF96  
                                       STR_19 FFDF                               __end_of___awmod 5484  
                                       _ADRPT 3EEC                               __end_of___flmul 2444  
                             __end_of___flsub 6008                               __end_of___fltol 4684  
                              _LCD_UpdateMenu 288E                                         _T1CLK 3FB5  
                             ___awdiv@divisor 0108                                         _T1CON 3FB2  
                                       _IOCAF 3A47                                         _IOCBF 3A57  
                                       _IOCCF 3A67                                         _IOCAN 3A46  
                                       _IOCEF 3A87                                         _IOCAP 3A45  
                                       _IOCBN 3A56                                         _IOCBP 3A55  
                                       _IOCCN 3A66                                         _IOCCP 3A65  
                                       _IOCEN 3A86                                         _IOCEP 3A85  
                                       i2l150 6664                                         i2l313 6676  
                                       i2l153 6670                       __end_of_TMR1_CounterSet 6094  
                                       i2l162 65CC                                         i2l308 667C  
                                       i2l454 629E                                         i2l550 4E32  
                                       i2l542 4DC6                                         i2l464 6686  
                                       i2l800 6302                                         i2l544 4DEA  
                                       i2l545 4E32                                         i2l458 644A  
                                       i2l474 6684                                         i2l802 6312  
                                       i2l810 65B6                                         i2l546 4E0E  
                                       i2l468 6418                                         i2l484 6682  
                                       i2l813 65F6                                         i2l478 63E6  
                                       i2l807 64DA                                         i2l639 6092  
                                       i2l816 5866                                         i2l761 36F6  
                                       i2l825 5B3E                                         i2l673 6260  
                                       i2l770 531E                                         i2l827 5B74  
                                       i2l851 457A                                         i2l845 4576  
                                       i2l781 50D0                                         i2l774 53D2  
                                       i2l862 5688                                         i2l854 64B6  
                                       i2l870 5F2C                                         i2l687 6680  
                                       i2l784 519A                                         i2l777 5010  
                                       i2l788 5256                               ___awdiv@counter 010A  
                                       _OSCEN 39DD                                  vfpfcnvrt@fmt 0194  
                                       _TMR1H 3FB1                                         _TMR1L 3FB0  
                                       _TRISA 3FC2                                         _TRISB 3FC3  
                                       _TRISC 3FC4                                         i2_pad 5A4C  
                        __end_of_ws2812_reset 65F8                                 i2___fladd@grs 0010  
                                  i2memcpy@d1 0001                                    i2memcpy@s1 0003  
                  i2ADC_ChannelSelect@channel 0001                                  ?i2_LCD_Clear 0001  
               __end_ofi2_ADC_ConversionStart 6672                               __end_of_int_BP1 5B76  
                             __end_of_int_BP2 457C                               __end_of_int_BP3 64B8  
                     __end_of_PIN_MANAGER_IOC 62A0                                         _flags 00E9  
                         read_prec_or_width@c 010C                           read_prec_or_width@n 010D  
                                       _fputc 4E58                                         _fputs 5F78  
                               i2___fldiv@grs 003B                                 i2___fldiv@rem 0034  
                                       labs@a 0106                                         pad@fp 0116  
                                       _width 00DD                                         _putch 667E  
                             __end_of_on_leds 50D2                      _INT1_SetInterruptHandler 6648  
                     __end_of_TMR1_Initialize 61A4                                         pclath 3FFA  
                                       pclatu 3FFB                              __end_ofi2___flge 4994  
                            __end_ofi2___fleq 5734                                         tablat 3FF5  
                           ?_appliquer_action 0001                                         status 3FD8  
                            __end_ofi2_efgtoa 168A                               __end_of_sprintf 5EE0  
                              ?___fpclassifyf 0106                                 i2___flmul@grs 001C  
                            __end_ofi2_floorf 40D6                            ??_appliquer_action 001E  
                            __end_ofi2_memcpy 5C88                              ?_LCD_EnablePulse 0001  
                ?_BP3_DefaultInterruptHandler 0001                              __end_ofi2_strcpy 611E  
                             __initialization 61A4                                  __end_of_labs 5D38  
                                __end_of_main 5D8E                              _TMR1_OverflowISR 6224  
                  i2LCD_SetCursor@row_offsets 0004                                     ??_ADC_ISR 0001  
                 ?_INTERRUPT_InterruptManager 0001                        __end_of_LCD_UpdateMenu 2C5A  
                                 i2_vfpfcnvrt 39D4                                     ??_BP1_ISR 005E  
                                   ??_BP2_ISR 005E                                     ??_BP3_ISR 005E  
                               i2vfpfcnvrt@ap 0093                                 i2vfpfcnvrt@cp 009C  
                               i2vfpfcnvrt@fp 008F                                        ??_labs 010A  
                                      ??_main 01D6                             __end_of_LCD_Clear 658C  
                               __activetblptr 0003                                    i2sprintf@f 00B0  
                                  i2sprintf@s 00A6                      __end_ofi2_LCD_UpdateMenu 36F8  
                                 ?i2___xxtofl 0001                                        ?i2_pad 0011  
                  __end_of_read_prec_or_width 4C88                                        _ADACCH 3EE9  
                                      _ADACCL 3EE8                                        _ADACCU 3EEA  
                                      _ADACQH 3EF4                                        _ADACQL 3EF3  
                        TMR1_handler@timer_1s 00E1                                        _ADCON0 3EF8  
                                      _ADCON1 3EF9                                        _ADCON2 3EFA  
                                      _ADCON3 3EFB                                        _ADERRH 3EE3  
                                      _ADERRL 3EE2                                        ?_fputc 0106  
                                      _ADLTHH 3EDF                                        _ADLTHL 3EDE  
                                      ?_fputs 010F                                        _ADRESH 3EF0  
                                      _ADRESL 3EEF                                        _ADPREH 3EF7  
                                      _ADPREL 3EF6                                        _ADSTAT 3EFC  
                                      _ADUTHH 3EE1                              ___awdiv@dividend 0106  
                                      _ADUTHL 3EE0         __end_of_TMR1_OverflowCallbackRegister 6620  
               _TMR1_OverflowCallbackRegister 6616                                        _ANSELA 3A40  
                                      ?_putch 0001                                        _ANSELB 3A50  
                                      _ANSELC 3A60                                        _RB1I2C 3A5A  
                                      _T1GATE 3FB4                                        _RB2I2C 3A5B  
                                      _T1GCON 3FB3                                        _RC3I2C 3A6A  
                                      _RC4I2C 3A6B                                        _ODCONA 3A42  
                                      _ODCONB 3A52                                        _ODCONC 3A62  
                                      i2l1112 5318                                        i2l1140 5732  
                                      i2l1125 5530                                        i2l1151 4992  
                                      i2l1146 494C                                        i2l1410 1D18  
                                      i2l1155 634A                                        i2l1411 1CDE  
                                      i2l1502 2722                                        i2l1503 2740  
                                      i2l1423 1ED2                                        i2l1512 284E  
                                      i2l1504 2798                                        i2l1505 2786  
                                      i2l1409 1D2A                                        i2l1601 1688  
                                      i2l1442 1FBA                                        i2l1426 1E44  
                                      i2l1418 1FF6                                        i2l1178 488E  
                                      i2l1435 1F12                                        i2l1451 60D8  
                                      i2l1436 1F00                                        i2l1604 0EEC  
                                      i2l1550 43D8                                        i2l1702 4B90  
                                      i2l1606 0D32                                        i2l1463 337A  
                                      i2l1543 437C                                        i2l1536 42E4  
                                      i2l1712 4018                                        i2l1465 31DE  
                                      i2l1474 3224                                        i2l1475 3242  
                                      i2l1539 4440                                        i2l1723 5E38  
                                      i2l1476 329A                                        i2l1468 31A2  
                                      i2l1477 3288                                        i2l1709 40D4  
                                      i2l1741 5008                                        i2l1590 5AB8  
                                      i2l1638 1350                                        i2l1495 2508  
                                      i2l1663 4D7A                                        i2l1559 5F76  
                                      i2l5200 1B7E                                        i2l1752 6688  
                                      i2l6000 0C7C                                        i2l1729 5C86  
                                      i2l5210 1BAC                                        i2l5202 1B8E  
                                      i2l1586 5A62                                        i2l6010 0CC6  
                                      i2l6002 0CA2                                        i2l1674 3AC4  
                                      i2l1499 288C                                        i2l1659 4D72  
                                      i2l5300 1D88                                        i2l5220 1BD6  
                                      i2l5212 1BBE                                        i2l5204 1B90  
                                      i2l6100 1214                                        i2l6020 0CFC  
                                      i2l6004 0CB4                                        i2l1692 5DE2  
                                      i2l1749 6160                                        i2l1685 3CAC  
                                      i2l5310 1DB2                                        i2l5302 1D94  
                                      i2l5222 1BE6                                        i2l5230 1C0E  
                                      i2l5214 1BC0                                        i2l5206 1B96  
                                      i2l1758 611C                                        i2l6110 1284  
                                      i2l6102 1248                                        i2l6030 0DBA  
                                      i2l6006 0CB8                                        i2l5320 1E24  
                                      i2l5304 1D98                                        i2l5312 1DB8  
                                      i2l5240 1C46                                        i2l5232 1C1E  
                                      i2l5224 1BF6                                        i2l5216 1BC6  
                                      i2l5208 1BA6                                        i2l6200 15C0  
                                      i2l6120 1346                                        i2l6112 1290  
                                      i2l6104 125C                                        i2l6040 0E7A  
                                      i2l6032 0DEC                                        i2l6024 0D42  
                                      i2l6008 0CBE                                        i2l5400 630C  
                                      i2l5410 5274                                        i2l5402 5258  
                                      i2l5330 1E7E                                        i2l5314 1DDE  
                                      i2l5322 1E34                                        i2l5306 1DA6  
                                      i2l5250 1C5A                                        i2l5242 1C4A  
                                      i2l5234 1C30                                        i2l5226 1C06  
                                      i2l5218 1BD4                                        i2l6210 1612  
                                      i2l6202 15C6                                        i2l6130 138A  
                                      i2l6122 1362                                        i2l6114 1298  
                                      i2l6106 1260                                        i2l6050 0F10  
                                      i2l6034 0E2A                                        i2l6026 0D48  
                                      i2l6018 0CE2                                        i2l7100 43BA  
                                      i2l5420 52A8                                        i2l5412 5282  
                                      i2l5404 525A                                        i2l5500 48BE  
                                      i2l5340 1EAE                                        i2l5332 1E88  
                                      i2l5324 1E5A                                        i2l5316 1E12  
                                      i2l5308 1DA8                                        i2l5260 1C6E  
                                      i2l5252 1C5E                                        i2l5244 1C4E  
                                      i2l5236 1C3E                                        i2l5228 1C08  
                                      i2l5180 4F56                                        i2l6220 1668  
                                      i2l6212 1620                                        i2l6204 15CC  
                                      i2l6132 1392                                        i2l6124 1370  
                                      i2l6140 13B2                                        i2l6116 12AE  
                                      i2l6108 1270                                        i2l6060 0F44  
                                      i2l6052 0F18                                        i2l6036 0E3E  
                                      i2l6044 0EBA                                        i2l6028 0D7C  
                                      i2l7110 4410                                        i2l7102 43C8  
                                      i2l5430 52E2                                        i2l5422 52B0  
                                      i2l5414 528A                                        i2l5406 5268  
                                      i2l5510 492C                                        i2l5502 48CE  
                                      i2l5350 1EF8                                        i2l5342 1EB2  
                                      i2l5334 1E96                                        i2l5326 1E6A  
                                      i2l5318 1E14                                        i2l5270 1CAA  
                                      i2l5262 1C72                                        i2l5254 1C62  
                                      i2l5246 1C52                                        i2l5238 1C42  
                                      i2l5190 1B42                                        i2l5182 4F60  
                                      i2l6214 1638                                        i2l6206 15DC  
                                      i2l6150 1438                                        i2l6142 13C4  
                                      i2l6134 13A2                                        i2l6126 1380  
                                      i2l6118 1326                                        i2l6070 0F8E  
                                      i2l6062 0F5C                                        i2l6054 0F20  
                                      i2l6046 0EF4                                        i2l6038 0E72  
                                      i2l6230 4D0C                                        i2l5600 305C  
                                      i2l7112 4420                                        i2l7104 43E6  
                                      i2l5440 5308                                        i2l5432 52EA  
                                      i2l5424 52B8                                        i2l5416 528E  
                                      i2l5408 5270                                        i2l5512 493A  
                                      i2l5504 48FC                                        i2l5520 6314  
                                      i2l5360 1F76                                        i2l5344 1EC2  
                                      i2l5336 1E98                                        i2l5280 1CFC  
                                      i2l5272 1CC6                                        i2l5264 1C76  
                                      i2l5256 1C66                                        i2l5248 1C56  
                                      i2l5192 1B4E                                        i2l5184 4F7E  
                                      i2l5176 4F32                                        i2l6216 1648  
                                      i2l6208 15E2                                        i2l6160 14B2  
                                      i2l6152 146C                                        i2l6144 13D6  
                                      i2l6136 13A6                                        i2l6128 1384  
                                      i2l6072 0FA2                                        i2l6080 1098  
                                      i2l6064 0F6E                                        i2l6056 0F24  
                                      i2l6048 0F04                                        i2l6232 4D2E  
                                      i2l6224 4C88                                        i2l6240 65E6  
                                      _INLVLA 3A44                                        i2l5610 309C  
                                      i2l5602 306A                                        i2l7114 442E  
                                      i2l7106 43E8                                        i2l5442 5310  
                                      i2l5434 52EC                                        i2l5426 52C6  
                                      i2l5418 5296                                        i2l5450 5494  
                                      i2l5514 498A                                        i2l5506 490C  
                                      i2l5522 632A                                        i2l5370 1FC8  
                                      i2l5354 1F22                                        i2l5362 1F78  
                                      i2l5338 1EA6                                        i2l5346 1EC4  
                                      i2l5290 1D48                                        i2l5282 1D0A  
                                      i2l5274 1CD6                                        i2l5266 1C7A  
                                      i2l5258 1C6A                                        i2l5194 1B5C  
                                      i2l5530 47A0                                        i2l5186 4FB4  
                                      i2l5178 4F44                                        i2l6218 1660  
                                      i2l6170 14EA                                        i2l6162 14BA  
                                      i2l6154 1474                                        i2l6146 13DA  
                                      i2l6138 13AC                                        i2l6090 1164  
                                      i2l6082 10B6                                        i2l6074 1006  
                                      i2l6058 0F36                                        i2l6066 0F76  
                                      i2l6234 4D40                                        i2l6226 4C90  
                                      _INLVLB 3A54                                        _INLVLC 3A64  
                                      i2l7060 650A                                        i2l5700 335A  
                                      i2l5620 30DA                                        i2l5612 309E  
                                      i2l5604 306C                                        i2l7116 4430  
                                      i2l7108 43EC                                        i2l5436 52F2  
                                      i2l5428 52CC                                        i2l5460 54C8  
                                      i2l5452 549C                                        i2l5516 4990  
                                      i2l5508 491A                                        i2l5524 633A  
                                      i2l5380 1FE6                                        i2l5372 1FCE  
                                      i2l5364 1F88                                        i2l5356 1F2E  
                                      i2l5348 1EE2                                        i2l5284 1D0C  
                                      i2l5276 1CEC                                        i2l5268 1C7E  
                                      i2l5196 1B5E                                        i2l5540 47F0  
                                      i2l6180 152E                                        i2l6172 14EE  
                                      i2l6164 14C8                                        i2l6148 13E0  
                                      i2l6156 1478                                        i2l6092 1174  
                                      i2l6084 10EA                                        i2l6076 105E  
                                      i2l6068 0F7E                                        i2l6228 4CBE  
                                      i2l6236 65A4                                        _INLVLE 3A84  
                                      i2l7062 65CE                                        i2l7070 65B8  
                                      i2l5702 3368                                        i2l5630 310A  
                                      i2l5622 30E2                                        i2l5606 307C  
                                      i2l5614 30A4                                        i2l5438 52F8  
                                      i2l5470 5504                                        i2l5462 54D0  
                                      i2l5454 54A0                                        i2l5446 5484  
                                      i2l5374 1FD0                                        i2l5366 1F98  
                                      i2l5358 1F3C                                        i2l5294 1D5C  
                                      i2l5286 1D16                                        i2l5278 1CF8  
                                      i2l5198 1B6E                                        i2l5550 481A  
                                      i2l5542 47F4                                        i2l5534 47B4  
                                      i2l5390 6140                                        i2l6190 1584  
                                      i2l6182 154A                                        i2l6174 14F6  
                                      i2l6166 14DA                                        i2l6158 1496  
                                      i2l6094 1184                                        i2l6086 111C  
                                      i2l6078 1092                                        i2l6238 65E4  
                                      i2l7150 53BC                                        i2l7134 531A  
                                      i2l8110 6230                                        i2l7064 65D4  
                                      i2l7056 6500                                        i2l5704 336E  
                                      i2l5640 3148                                        i2l5632 310A  
                                      i2l5624 30E6                                        i2l5616 30B4  
                                      i2l5608 308C                                        i2l5800 2720  
                                      i2l5720 2460                                        i2l7080 42F4  
                                      i2l5472 550A                                        i2l5464 54D8  
                                      i2l5456 54AE                                        i2l5448 5486  
                                      i2l5376 1FD6                                        i2l5368 1FB8  
                                      i2l5296 1D6C                                        i2l5288 1D38  
                                      i2l5560 4842                                        i2l5552 4824  
                                      i2l5544 4802                                        i2l5536 47DE  
                                      i2l5528 478A                                        i2l5384 611E  
                                      i2l6192 158A                                        i2l6184 1552  
                                      i2l6176 1502                                        i2l6168 14DC  
                                      i2l6096 11B8                                        i2l6088 1132  
                                      i2l5392 62DC                                        i2l6520 522E  
                                      i2l7152 53BE                                        i2l7144 5320  
                                      i2l8040 6088                                        i2l8032 604E  
                                      i2l8112 6244                                        i2l7058 6506  
                                      i2l7066 665E                                        i2l5706 3370  
                                      i2l5650 3192                                        i2l5642 3158  
                                      i2l5618 30CA                                        i2l5810 27A8  
                                      i2l5802 2732                                        i2l5730 24A6  
                                      i2l5722 2470                                        i2l5714 2444  
                                      i2l7090 4332                                        i2l7082 430A  
                                      i2l7074 4290                                        i2l5466 54E6  
                                      i2l5474 5510                                        i2l5458 54B6  
                                      i2l5490 5706                                        i2l5482 568A  
                                      i2l5378 1FE4                                        i2l5298 1D7A  
                                      i2l5562 484E                                        i2l5554 482E  
                                      i2l5538 47E0                                        i2l5386 612A  
                                      i2l6194 159A                                        i2l6178 1508  
                                      i2l6186 1558                                        i2l6098 120E  
                                      i2l5394 62EC                                        i2l6522 5230  
                                      i2l7154 53CE                                        i2l7146 53AA  
                                      i2l7170 50AA                                        i2l8042 608C  
                                      i2l8034 605C                                        i2l8114 625C  
                                      i2l6444 6520                                        i2l7068 666C  
                                      i2l5660 31DC                                        i2l5652 31A0  
                                      i2l5644 3168                                        i2l5636 311E  
                                      i2l5628 30FA                                        i2l5580 2FF8  
                                      i2l5820 280A                                        i2l5812 27B4  
                                      i2l5804 2750                                        i2l5740 24D2  
                                      i2l5732 24AC                                        i2l5724 2480  
                                      i2l5716 2450                                        i2l7092 4364  
                                      i2l7076 42A0                                        i2l5476 5520  
                                      i2l5468 54FC                                        i2l5492 572A  
                                      i2l5484 56B8                                        i2l5572 6094  
                                      i2l5564 485E                                        i2l5900 40C4  
                                      i2l5388 613C                                        i2l6196 15A6  
                                      i2l6188 156A                                        i2l5396 62EE  
                                      i2l6524 5240                                        i2l6508 5196  
                                      i2l7148 53AC                                        i2l7172 50BA  
                                      i2l7156 500C                                        i2l8036 6074  
                                      i2l8108 6224                                        i2l6446 6526  
                                      i2l5670 3222                                        i2l5662 31EE  
                                      i2l5654 31AC                                        i2l5646 316E  
                                      i2l5638 3138                                        i2l5590 3038  
                                      i2l5582 3006                                        i2l5830 2862  
                                      i2l5822 281E                                        i2l5814 27C2  
                                      i2l5806 277E                                        i2l5750 2528  
                                      i2l5742 24E2                                        i2l5734 24B2  
                                      i2l5726 2490                                        i2l5718 245E  
                                      i2l7094 4366                                        i2l7086 431E  
                                      i2l7078 42AE                                        i2l5478 5528  
                                      i2l5494 5730                                        i2l5486 56C8  
                                      i2l5574 60A4                                        i2l5566 486E  
                                      i2l6198 15AE                                        i2l5398 62F6  
                                      i2l6526 5242                                        i2l6518 519C  
                                      i2l7174 50BC                                        i2l7166 5012  
                                      i2l7510 55DE                                        i2l8038 607A  
                                      i2l8070 5F04                                        i2l8080 6672  
                                      i2l6448 652A                                        i2l5680 32AA  
                                      i2l5664 3204                                        i2l5672 3234  
                                      i2l5656 31CA                                        i2l5648 317E  
                                      i2l5592 303A                                        i2l5584 3008  
                                      i2l5832 2870                                        i2l5824 2838  
                                      i2l5816 27EC                                        i2l5760 2570  
                                      i2l5744 24F2                                        i2l5736 24C0  
                                      i2l5728 2496                                        i2l7096 4372  
                                      i2l7088 4326                                        i2l5488 56F6  
                                      i2l5568 487E                                        i2l5904 5DE4  
                                      i2l5920 5C68                                        i2l5912 5C2E  
                                      i2l6528 5252                                        i2l7176 50CC  
                                      i2l7168 50A8                                        i2l7520 566A  
                                      i2l7512 55F0                                        i2l8072 5F0C  
                                      i2l8074 6678                                        i2l5690 330C  
                                      i2l5682 32B6                                        i2l5674 3252  
                                      i2l5666 320A                                        i2l5658 31CC  
                                      i2l5586 3018                                        i2l5594 3040  
                                      i2l5578 2FEC                                        i2l5834 2872  
                                      i2l5826 2848                                        i2l5818 27F0  
                                      i2l5770 25BE                                        i2l5762 257C  
                                      i2l5754 253C                                        i2l5746 24F8  
                                      i2l5738 24C2                                        i2l7098 43AE  
                                      i2l5498 4890                                        i2l5906 5DF2  
                                      i2l5914 5C42                                        i2l5922 5C6C  
                                      i2l5850 5A86                                        i2l5842 5A4C  
                                      i2l7522 5672                                        i2l7514 5600  
                                      i2l7460 5A10                                        i2l5692 3322  
                                      i2l5684 32C4                                        i2l5676 3280  
                                      i2l5668 3214                                        i2l5596 3050  
                                      i2l5588 3028                                        i2l5828 2852  
                                      i2l5836 2878                                        i2l5780 261C  
                                      i2l5772 25CE                                        i2l5764 2598  
                                      i2l5756 254C                                        i2l5748 2518  
                                      i2l5860 4B1A                                        i2l5908 5E06  
                                      i2l5916 5C52                                        i2l5852 5AA4  
                                      i2l5844 5A5A                                        i2l5924 60DA  
                                      i2l8500 5F4E                                        i2l5940 64CA  
                                      i2l7524 5684                                        i2l7516 5646  
                                      i2l8068 5EE0                                        i2l7470 6386  
                                      i2l7462 5E3C                                        i2l7454 59DA  
                                      i2l5694 333C                                        i2l5686 32EE  
                                      i2l5598 3056                                        i2l5838 287C  
                                      i2l5790 26A6                                        i2l5782 262C  
                                      i2l5774 25DE                                        i2l5766 25A4  
                                      i2l5758 2556                                        i2l5862 4B26  
                                      i2l5854 4A94                                        i2l5918 5C56  
                                      i2l5846 5A6E                                        i2l5926 60E2  
                                      i2l8430 3A14                                        i2l8502 5F66  
                                      i2l8510 338E                                        i2l5934 64BC  
                                      i2l7518 5658                                        i2l7472 639E  
                                      i2l7464 5E68                                        i2l7456 59DE  
                                      i2l5696 3354                                        i2l5688 32F2  
                                      i2l5792 26DC                                        i2l5784 264C  
                                      i2l5776 25EE                                        i2l5768 25B0  
                                      i2l7480 57D0                                        i2l5872 4B88  
                                      i2l5856 4AB4                                        i2l5880 3F3A  
                                      i2l5848 5A82                                        i2l5960 0B5C  
                                      i2l8440 3A82                                        i2l8432 3A22  
                                      i2l8600 3594                                        i2l8520 33DA  
                                      i2l8512 339A                                        i2l5936 64C4  
                                      i2l5928 64BA                                        i2l7474 63A4  
                                      i2l7466 5E78                                        i2l7458 5A0C  
                                      i2l5698 3356                                        i2l5794 26EA  
                                      i2l5786 265C                                        i2l5778 25FE  
                                      i2l7482 57D6                                        i2l5858 4AF2  
                                      i2l5866 4B32                                        i2l5890 4008  
                                      i2l5882 3F4E                                        i2l5970 0BB0  
                                      i2l5962 0B70                                        i2l8450 3ACA  
                                      i2l8442 3A9A                                        i2l8434 3A26  
                                      i2l8426 39D4                                        i2l8610 35D2  
                                      i2l8602 359E                                        i2l8530 3424  
                                      i2l8522 33E4                                        i2l8514 33B0  
                                      i2l8506 337C                                        i2l5938 64C8  
                                      i2l5956 6558                                        i2l7476 63AA  
                                      i2l7468 5E7C                                        i2l5796 2708  
                                      i2l5788 267C                                        i2l7484 57DA  
                                      i2l5868 4B44                                        i2l5884 3F5C  
                                      i2l5892 403C                                        i2l5876 3EC4  
                                      i2l5980 0BEC                                        i2l5972 0BB8  
                                      i2l5964 0B7E                                        i2l8452 3AF2  
                                      i2l8444 3AB4                                        i2l8436 3A54  
                                      i2l8428 3A02                                        i2l8620 3620  
                                      i2l8612 35F6                                        i2l8604 35A8  
                                      i2l8540 3458                                        i2l8532 342E  
                                      i2l8524 33F0                                        i2l8516 33BA  
                                      i2l8508 3384                                        i2l8700 641A  
                                      i2l5958 6560                                        i2l7478 63B0  
                                      i2l5798 2712                                        i2l7486 57E6  
                                      i2l5894 4078                                        i2l5878 3EE4  
                                      i2l5990 0C32                                        i2l5974 0BC8  
                                      i2l5982 0BF0                                        i2l5966 0B82  
                                      i2l8454 3B14                                        i2l8462 3BCA  
                                      i2l8446 3ABC                                        i2l8438 3A66  
                                      i2l8622 3640                                        i2l8614 3600  
                                      i2l8606 35B4                                        i2l8550 348E  
                                      i2l8542 3464                                        i2l8534 343A  
                                      i2l8526 340A                                        i2l8518 33D0  
                                      i2l8702 642E                                        i2l8710 6414  
                                      i2l7488 5856                                        i2l5896 408C  
                                      i2l5888 3FCC                                        i2l5992 0C3A  
                                      i2l5984 0C16                                        i2l5976 0BD8  
                                      i2l5968 0BA6                                        i2l8472 3C3E  
                                      i2l8464 3BE0                                        i2l8456 3B3A  
                                      i2l8616 360A                                        i2l8608 35BE  
                                      i2l8560 34C2                                        i2l8552 3498  
                                      i2l8544 346E                                        i2l8536 3444  
                                      i2l8528 3414                                        i2l8640 5B70  
                                      i2l8632 5B18                                        i2l8704 6446  
                                      i2l8712 63B6                                        i2l8720 6272  
                                      i2l5898 40B4                                        i2l5994 0C52  
                                      i2l5986 0C28                                        i2l5978 0BE4  
                                      i2l8466 3C08                                        i2l8458 3B82  
                                      i2l8474 3C64                                        i2l8490 5DD8  
                                      i2l8618 3616                                        i2l8570 34F6  
                                      i2l8562 34CC                                        i2l8554 34A2  
                                      i2l8546 3478                                        i2l8538 344E  
                                      i2l8626 366A                                        i2l8634 5B36  
                                      i2l8650 446E                                        i2l8706 63E8  
                                      i2l8714 63CA                                        i2l8722 6276  
                                      i2l8730 4DA0                                        i2l5996 0C5C  
                                      i2l5988 0C2C                                        i2l8484 5D8E  
                                      i2l8580 352A                                        i2l8572 3500  
                                      i2l8564 34D6                                        i2l8556 34AC  
                                      i2l8548 3482                                        i2l8660 44AA  
                                      i2l8652 4476                                        i2l8708 63FC  
                                      i2l8716 63E2                                        i2l8724 6286  
                                      i2l8740 4DF8                                        i2l8732 4DB0  
                                      i2l8478 3C7A                                        i2l8486 5D9A  
                                      i2l8494 5F2E                                        i2l8590 3560  
                                      i2l8582 3536                                        i2l8574 350C  
                                      i2l8566 34E2                                        i2l8558 34B8  
                                      i2l8638 5B44                                        i2l8670 44F0  
                                      i2l8662 44BC                                        i2l8654 4488  
                                      i2l8646 4442                                        i2l8726 628A  
                                      i2l8718 6262                                        i2l8742 4E06  
                                      i2l8734 4DBE                                        i2l8488 5DB6  
                                      i2l8496 5F3E                                        i2l8592 356A  
                                      i2l8584 3540                                        i2l8576 3516  
                                      i2l8568 34EC                                        i2l8680 452C  
                                      i2l8672 44F8                                        i2l8664 44C4  
                                      i2l8656 4490                                        i2l8648 445C  
                                      i2l8728 629A                                        i2l8744 4E1C  
                                      i2l8736 4DD4                                        i2l8498 5F46  
                                      i2l8594 3574                                        i2l8586 354A  
                                      i2l8578 3520                                        i2l8690 456E  
                                      i2l8682 453E                                        i2l8674 450A  
                                      i2l8666 44D6                                        i2l8658 44A2  
                                      i2l8746 4E2A                                        i2l8738 4DE2  
                                      i2l8596 357E                                        i2l8588 3554  
                                      i2l8836 5B5A                                        i2l8684 4546  
                                      i2l8676 4512                                        i2l8668 44DE  
                                      i2l8692 4576                                        i2l8838 3680  
                                      i2l8598 358A                                        i2l8686 4558  
                                      i2l8678 4524                                        i2l8694 6494  
                                      i2l8688 455E                                        i2l8696 64AE  
                                      i2l8698 64B2                                     ??i2_fputc 0005  
                                   ??i2_fputs 000E                                        _OSCFRQ 39DF  
                                   ??i2_putch 0001                              __end_of___xxtofl 428E  
                                      i2_labs 5DE4                                        i2pad@i 0018  
                                      i2pad@p 0015                     ??_BP2_SetInterruptHandler 0108  
                           ??i2_LCD_SetCursor 0004                                i2___fladd@aexp 000E  
                              i2___fladd@bexp 000F                                   i2memcpy@tmp 000B  
                                vfprintf@cfmt 01A7                                        ___flge 4684  
                                      ___fleq 5532                                 i2vfprintf@fmt 00A0  
                                   ??___fladd 010E                                     ??___fldiv 0135  
                                   ??___awdiv 010A                                     ??___flneg 010A  
                                   ??___awmod 010A                               ??_LCD_SetCursor 0109  
                                   ??___flmul 011C                                     ??___flsub 0135  
                                   ??___fltol 0154                                        _efgtoa 001E  
                                 ?i2_vfprintf 009E                              __end_of_off_leds 53D4  
                                      _floorf 3CAE                                        _memcpy 5BD2  
                        read_prec_or_width@ap 0108                               ?_LCD_UpdateMenu 0001  
                                      clear_0 61AC                                        clear_1 61BE  
                                      clear_2 61CA                              ___awdiv@quotient 010C  
                              i2___fldiv@aexp 0040                                i2___fldiv@bexp 003F  
                             ___awmod@divisor 0108                                 ?i2_LCD_String 0003  
                                      isa$std 0001                                i2___fldiv@sign 0038  
                             ___awmod@counter 010A                                        pad@buf 0118  
                       appliquer_action@color 0022                             ?_CLOCK_Initialize 0001  
                                      _strcpy 6008                                i2___awdiv@sign 0006  
                                   ??_int_BP1 00D3                                     ??_int_BP2 00D3  
                                   ??_int_BP3 00D3                              __end_of_send_bit 6314  
                                      fputc@c 0106                              ?_TMR1_CounterSet 0001  
                               ?_lire_tension 0146                  _INT2_DefaultInterruptHandler 0000  
                                      fputs@c 0113                                        fputs@i 0114  
                                      fputs@s 010F                             __end_ofi2___fladd 1FF8  
                           __end_ofi2___fldiv 337C                             __end_ofi2___awdiv 531A  
                           __end_ofi2___flneg 634C                             __end_ofi2___awmod 5532  
                           __end_ofi2___flmul 288E                            ??_CLOCK_Initialize 0106  
                           __end_ofi2___flsub 60DA                             __end_ofi2___fltol 4890  
                             ___fpclassifyf@e 010E                               ___fpclassifyf@u 0110  
                             ___fpclassifyf@x 0106                                     ??_on_leds 0017  
                        _BP2_InterruptHandler 00F7                                  __mediumconst FEEC  
                           ??i2___fpclassifyf 0005                                        tblptrh 3FF7  
                                      tblptrl 3FF6                                        tblptru 3FF8  
                                      putch@c 0001                              __end_of_vfprintf 5CE0  
                              i2___awmod@sign 0006      INT2_SetInterruptHandler@InterruptHandler 0106  
    INT1_SetInterruptHandler@InterruptHandler 0106      INT0_SetInterruptHandler@InterruptHandler 0106  
     BP3_SetInterruptHandler@InterruptHandler 0106       BP2_SetInterruptHandler@InterruptHandler 0106  
     BP1_SetInterruptHandler@InterruptHandler 0106                              ?_PIN_MANAGER_IOC 0001  
                                   ??_sprintf 01B1                                i2___flmul@aexp 0020  
                              i2___flmul@bexp 0021                                i2___flmul@sign 001B  
                              i2___flmul@temp 0026                                i2___flmul@prod 0022  
                    ?_BP1_SetInterruptHandler 0106                                    ___flge@ff1 012D  
                                  ___flge@ff2 0131                               ??___fpclassifyf 010A  
                            ?_TMR1_Initialize 0001                                  ___xxtofl@arg 0110  
                                ___xxtofl@exp 010F                             _SYSTEM_Initialize 658C  
                                ___xxtofl@val 0106                                    ___fleq@ff1 0106  
                                  ___fleq@ff2 010A                                     ?_LCD_Char 0001  
                                  __accesstop 0060                       __end_of__initialization 61DE  
                              i2___fltol@exp1 0054                                     ?_LCD_Init 0001  
                                  ___flneg@f1 0106           __end_of_BP2_DefaultInterruptHandler 6686  
                 _BP2_DefaultInterruptHandler 6684                            ?_SYSTEM_Initialize 0001  
                               ___rparam_used 0001                                    ___fltol@f1 0150  
                           __end_ofi2_sprintf 5F78                                 __end_ofi2_pad 5ABA  
                               i2_efgtoa$2332 0064                                 i2_efgtoa$2326 0062  
                              __pcstackCOMRAM 0001                                  i2efgtoa@mode 006A  
                                i2efgtoa@sign 0082                           ??_SYSTEM_Initialize 0108  
               ??_BP2_DefaultInterruptHandler 0001                                 __end_of_fputc 4F32  
                               __end_of_fputs 5FC0                                 __end_of_putch 6680  
                              ??i2_LCD_String 0005                              ??i2_lire_tension 0045  
                                ??_LCD_String 010A                            __end_of_COLORS_TAB FF05  
                  _ADC_ConversionDoneCallback 00E7                                     ?i2___flge 0028  
                                   ?i2___fleq 0001                                ??_lire_tension 014A  
                              i2LCD_Char@data 0002                              i2LCD_Command@cmd 0002  
                                   ?i2_efgtoa 0055                                       ??i2_pad 0017  
                                   ?i2_floorf 0041                                     ?i2_memcpy 0001  
            __end_of_INT2_SetInterruptHandler 6648                                i2vfpfcnvrt@fmt 0091  
                                   ?i2_strcpy 0001                                       ??_fputc 010A  
                   __end_of_SYSTEM_Initialize 65A2                                       ??_fputs 0113  
                                     ??_putch 0106                                    __pbssBANK0 00D5  
                                  __pbssBANK2 0200                                   i2sprintf@ap 00AE  
                                ??i2_LCD_Char 0001                                    ??_LCD_Char 0106  
                                ??i2_LCD_Init 0004                                    ??_LCD_Init 0109  
                       _INT0_InterruptHandler 00F3                ?_TMR1_OverflowCallbackRegister 0106  
                                     ?i2_labs 0001                            __end_of_LCD_String 5968  
                                 i2strcpy@src 0003                    ?i2_ADC_ConversionResultGet 0001  
                     _ADC_ConversionResultGet 64DC                           i2_ADC_ChannelSelect 665C  
                                     IVTBASEH 3FD6                                       IVTBASEL 3FD5  
                                     IVTBASEU 3FD7                                  _ws2812_reset 65E4  
                                     ?___flge 012D                                       ?___fleq 0106  
                                     ?_efgtoa 015A                                       _ADFLTRH 3EE7  
                                     ?_floorf 0146                                       _ADFLTRL 3EE6  
                                     ?_memcpy 0106                                       _ADC_ISR 6678  
                                     _ADPREVH 3EEE                                       _ADPREVL 3EED  
                                     _BP1_ISR 641A                                 i2_LCD_Command 651C  
                                     _BP2_ISR 63E8                                       _ADSTPTH 3EE5  
                                     _ADSTPTL 3EE4                                       _BP3_ISR 63B6  
                                  _flag_start 00EA                                    ??i2___flge 0030  
                                  ??i2___fleq 0009                                       ?_strcpy 0106  
                        ?i2_ADC_ChannelSelect 0001                    ??_INT1_SetInterruptHandler 0108  
                                  ??i2_efgtoa 005C                            __end_ofi2_LCD_Char 651C  
                          __end_ofi2_LCD_Init 63B6                                     ?___xxtofl 0106  
                                  ??i2_floorf 0045                                    ??i2_memcpy 0007  
                                     _OSCCON1 39D9                                       _OSCCON3 39DB  
             __end_of_BP1_SetInterruptHandler 663E                                       _OSCTUNE 39DE  
                    ADC_ChannelSelect@channel 0106                                       _SLRCONA 3A43  
                                     _SLRCONB 3A53                                   send_bit@bit 0001  
                                     _SLRCONC 3A63                                    ??i2_strcpy 0005  
                    __end_of_TMR1_OverflowISR 6262                                   send_color@b 0005  
                                 send_color@g 0004                                   send_color@r 0006  
                                     i2_fputc 4F32                                       i2_fputs 611E  
                                     i2labs@a 0001                                       i2pad@fp 0011  
                                     i2_putch 6688                                     ?_off_leds 0001  
                   ?_INT0_SetInterruptHandler 0106                               i2___fladd@signs 000D  
                               LCD_String@str 0108                                     ?_send_bit 0001  
                                     __Hparam 0000             __end_ofi2_ADC_ConversionResultGet 65CE  
                        _BP3_InterruptHandler 00F5                         i2LCD_SetCursor@column 0003  
                                     __Lparam 0000                       _BP3_SetInterruptHandler 6620  
                                     ___fladd 168A                                       ___fldiv 2C5A  
                                     ___awdiv 50D2                                       ___flneg 62A0  
                                     ___awmod 53D4                                       ___flmul 1FF8  
                                     ___flsub 5FC0                                       ___fltol 457C  
                                   ?_vfprintf 01A1                                i2vfprintf@cfmt 00A4  
                              ?i2_LCD_Command 0001                      LCD_SetCursor@row_offsets 0109  
                                ?i2_vfpfcnvrt 008F                                       __pcinit 61A4  
                                     __ramtop 1000                                       __ptext0 5D38  
                                     __ptext1 6616                                       __ptext2 658C  
                                     __ptext3 6162                                       __ptext4 5868  
                                     __ptext5 6620                                       __ptext6 662A  
                                     __ptext7 6634                                       __ptext8 61E4  
                                     __ptext9 663E                                    _matrix_tab 0250  
                       ??i2_ADC_ChannelSelect 0001                                       _int_BP1 5B18  
                                     _int_BP2 4442                                       _int_BP3 6494  
                                   _T1CONbits 3FB2                         read_prec_or_width@fmt 0106  
                                ??i2___xxtofl 0005                        TMR1_CounterSet@onState 0003  
                                  ??___xxtofl 010A                              ___awmod@dividend 0106  
                                     _on_leds 500A                             ?i2_LCD_UpdateMenu 0001  
                    ??_PIN_MANAGER_Initialize 0108                                     _IOCAFbits 3A47  
                               ?_TMR1_handler 0001                         _ADC_ThresholdCallback 00E5  
                                     efgtoa@c 0160                                       efgtoa@d 016E  
                                     efgtoa@e 0183                                       efgtoa@f 015C  
                                     efgtoa@g 018A                                       efgtoa@h 017B  
                                     efgtoa@i 0186                                       efgtoa@l 017F  
                                     efgtoa@m 0170                                       efgtoa@n 0188  
                                     efgtoa@p 0172                                       efgtoa@t 0163  
                                     efgtoa@u 018E                                       efgtoa@w 0175  
                                   _LCD_Clear 6572                               i2_LCD_SetCursor 5E3A  
                          ??i2_LCD_UpdateMenu 00BB                                       _sprintf 5E90  
                        end_of_initialization 61DE                         i2_ADC_ConversionStart 666C  
                                     floorf@e 0154                                       floorf@m 0150  
                    _INT2_SetInterruptHandler 663E                                       floorf@u 0156  
                                     floorf@x 0146                             __end_of_send_leds 5258  
                           __end_of_send_byte 64DC                  ?_BP1_DefaultInterruptHandler 0001  
                   ??_ADC_ConversionResultGet 0108                                       memcpy@d 010C  
                                     memcpy@n 010A                                       memcpy@s 010E  
                        __end_ofi2_LCD_String 5A4C                              LCD_SetCursor@row 010D  
                                     fputc@fp 0108                                    ??_off_leds 0015  
                              LCD_Command@cmd 0107                                    _send_color 65A2  
                                     fputs@fp 0111                            _read_prec_or_width 4B92  
                              i2___xxtofl@arg 000B                                i2___xxtofl@exp 000A  
                              i2___xxtofl@val 0001                          __end_of_lire_tension 57D0  
                                  ??_send_bit 0001                        i2LCD_UpdateMenu@buffer 00BD  
                            ??_LCD_UpdateMenu 01BE                             __end_of_vfpfcnvrt 39D4  
                                  efgtoa@mode 016D                                    efgtoa@sign 0185  
               rainbow_scroll_vertical@offset 005E                            __end_ofi2___xxtofl 4442  
                                     postdec1 3FE5                                       postdec2 3FDD  
                         ?_read_prec_or_width 0106                                       postinc0 3FEE  
                                     postinc1 3FE6                                       postinc2 3FDE  
                            vfpfcnvrt@convarg 019A                               i2___fpclassifyf 4A94  
                                ??i2_vfprintf 005E                                    ??_vfprintf 01A7  
                                     strcpy@d 010A                         _INT1_InterruptHandler 00F1  
                       _TMR1_OverflowCallback 00ED                                   ___fladd@grs 0115  
                              ??_TMR1_handler 0001                                 ___xxtofl@sign 010E  
TMR1_OverflowCallbackRegister@CallbackHandler 0106                                     _TRISAbits 3FC2  
                                   _TRISBbits 3FC3                                    ?_LCD_Clear 0001  
                        ??_read_prec_or_width 010A                                   ___fldiv@grs 0140  
                                 ___fldiv@rem 0139                               i2___fltol@sign1 0053  
                                   i2___fladd 1B42                                     i2___fldiv 2FEC  
                                   i2___awdiv 5258                                     i2___flneg 6314  
                                   i2___awmod 5484                                     i2___flmul 2444  
                                   i2___flsub 6094                                     i2___fltol 478A  
                            _ADC_ThresholdISR 6672                                   ___flmul@grs 0121  
                          __end_ofi2_vfprintf 5DE4                            i2___awdiv@dividend 0001  
                               send_byte@byte 0002                     ??_BP3_SetInterruptHandler 0108  
                              __end_ofi2_labs 5E3A                                     i2efgtoa@c 005B  
                                   i2efgtoa@d 006B                                     i2efgtoa@e 0080  
                                   i2efgtoa@f 0057                                     i2efgtoa@g 0087  
                                   i2efgtoa@h 0078                                     i2efgtoa@i 0083  
                                   i2efgtoa@l 007C                                     i2efgtoa@m 006D  
                                   i2efgtoa@n 0085                                     i2efgtoa@p 006F  
                                   i2efgtoa@t 0060                                     i2efgtoa@u 008B  
                                   i2efgtoa@w 0072                               ??i2_LCD_Command 0001  
                               i2efgtoa@esign 0069                                     i2_sprintf 5F2E  
                __end_of_INTERRUPT_Initialize 6224                                 ??_LCD_Command 0106  
                               i2efgtoa@nmode 0071                                __end_of___flge 478A  
                              __end_of___fleq 55DE                  _INT0_DefaultInterruptHandler 0000  
                                   i2floorf@e 004F                                   vfpfcnvrt@ap 0196  
                                   i2floorf@m 004B                                   vfpfcnvrt@cp 019F  
                                   i2floorf@u 0051                                   vfpfcnvrt@fp 0192  
                                   i2floorf@x 0041                         __end_of_LCD_SetCursor 5B18  
                           i2_LCD_EnablePulse 6556                                __end_of_efgtoa 0B5C  
                                   i2memcpy@d 0007                                     i2memcpy@n 0005  
                                   i2memcpy@s 0009                                _ADC_Initialize 5B76  
                                   i2fputc@fp 0003                                  _etat_courant 00EB  
                              __end_of_floorf 3EC4                           LCD_SetCursor@F16382 FF05  
                              __end_of_memcpy 5C2E                                     i2fputs@fp 000C  
                                  floorf@F521 00D5                       __end_ofi2_LCD_SetCursor 5E90  
                          ?i2_LCD_EnablePulse 0001                                __end_of_strcpy 604E  
                         start_initialization 61A4                            i2___awdiv@quotient 0007  
                                 __end_of_pad 59DA                           ??i2_LCD_EnablePulse 0001  
                      ?i2_ADC_ConversionStart 0001                                    ?i2___fladd 0001  
                                  ?i2___fldiv 0028                                    ?i2___awdiv 0001  
                                  ?i2___flneg 0001                                    ?i2___awmod 0001  
                                  ?i2___flmul 000F                                    ?i2___flsub 0028  
                                  ?i2___fltol 004B                                  i2vfpfcnvrt@c 009B  
                                  ivt0x8_base 0008                      ?_BP2_SetInterruptHandler 0106  
                                   i2strcpy@d 0005                                   ?_send_color 0004  
                       __end_of___fpclassifyf 4A94                                      ??i2_labs 0005  
                     __end_ofi2___fpclassifyf 4B92                   ??i2_ADC_ConversionResultGet 0003  
         __end_of_BP3_DefaultInterruptHandler 6684                   _BP3_DefaultInterruptHandler 6682  
                         LCD_SetCursor@column 0108                                   vfprintf@fmt 01A3  
                                i2vfprintf@ap 00A2                                  i2vfprintf@fp 009E  
                                    ??___flge 0135                                      ??___fleq 010E  
                   __end_ofi2_LCD_EnablePulse 6572                      _TMR1_DefaultGateCallback 0000  
                                  ?i2_sprintf 00A6                                      ??_efgtoa 0161  
                      __end_of_ADC_Initialize 5BD2                              _appliquer_action 55DE  
                                    ??_floorf 014A                                      ??_memcpy 010C  
                                    ?_ADC_ISR 0001                 ??_BP3_DefaultInterruptHandler 0001  
                                    ?_BP1_ISR 0001                                      ?_BP2_ISR 0001  
                                    ?_BP3_ISR 0001               ??_TMR1_OverflowCallbackRegister 0108  
                                    ??_strcpy 010A                       i2read_prec_or_width@fmt 0001  
                                   ___fladd@a 010A                                     ___fladd@b 0106  
                                   ___fldiv@a 0131                                     ___fldiv@b 012D  
                                 __pbssBIGRAM 0250                             _ADC_ChannelSelect 660A  
                         __end_of_LCD_Command 6494                                  i2sprintf@fmt 00A8  
                           ??_LCD_EnablePulse 0106                                     ___flmul@a 0118  
                                   ___flmul@b 0114                                   __pbssCOMRAM 005E  
                                   ___flsub@a 0131                                     ___flsub@b 012D  
            __end_of_INT0_SetInterruptHandler 665C                                 __pcstackBANK0 0060  
                               __pcstackBANK1 0100                                 ??i2_LCD_Clear 0003  
                          ?_ADC_ChannelSelect 0001                                   ??_LCD_Clear 0108  
                           _TMR1_GateCallback 01D6                             ?_TMR1_OverflowISR 0001  
                         _ADC_ConversionStart 6666                                      ?i2_fputc 0001  
                                    ?i2_fputs 000A                                  i2strcpy@dest 0001  
                         ??_ADC_ChannelSelect 0106                                      ?i2_putch 0001  
                          ??_TMR1_OverflowISR 0004                         _INT2_InterruptHandler 00EF  
                                   __pnvBANK0 00ED                                     __pnvBANK1 01D6  
                                 _efgtoa$2332 0167                                   _efgtoa$2326 0165  
                        __end_of_TMR1_handler 5F2E                        _PIN_MANAGER_Initialize 5868  
                               __pmediumconst FEEC                                      ?___fladd 0106  
                                    ?___fldiv 012D                                      ?___awdiv 0106  
                                   __ptext100 2FEC                                     __ptext101 666C  
                                   __ptext110 6556                                     __ptext102 65B8  
                                    ?___flneg 0106                                     __ptext111 6672  
                                   __ptext103 665C                                     __ptext112 6678  
                                   __ptext104 59DA                                     __ptext105 64FC  
                                   __ptext106 5E3A                                     __ptext107 6382  
                                   __ptext108 65CE                                     __ptext109 651C  
                                    ?___awmod 0106                                      ?___flmul 0114  
                                    ?___flsub 012D                                      ?___fltol 0150  
                             ?_ADC_Initialize 0001                          ?_ADC_ConversionStart 0001  
                ??_INTERRUPT_InterruptManager 0100                  __end_ofi2_read_prec_or_width 4D7C  
                   __end_of_ADC_ChannelSelect 6616                                  i2_LCD_String 59DA  
                            ?i2_LCD_SetCursor 0003                         i2lire_tension@adc_val 0049  
                                  send_leds@i 0013                                    send_leds@j 0014  
                                    ?_int_BP1 0001                                      ?_int_BP2 0001  
                                    ?_int_BP3 0001                                    send_byte@i 0003  
                                 __smallconst FEEC                     i2_ADC_ConversionResultGet 65B8  
                  ??_INT2_SetInterruptHandler 0108                                  _lire_tension 5734  
                                    _ADCPbits 3ED7                                      ?_on_leds 0015  
             __end_of_BP2_SetInterruptHandler 6634                                   ??i2___fladd 0009  
                                 ??i2___fldiv 0030                                   ??i2___awdiv 0005  
                                 ??i2___flneg 0005                                   ??i2___awmod 0005  
                                    ?_sprintf 01A9                                   ??i2___flmul 0017  
                                 ??i2___flsub 0030                                   ??i2___fltol 004F  
                        _INTERRUPT_Initialize 61E4                         i2lire_tension@tension 0045  
                            _CLOCK_Initialize 65F8                                      _LCD_Char 644C  
                         __end_ofi2_LCD_Clear 65E4                                      _LCD_Init 634C  
                                    _LATAbits 3FBA                                      _LATBbits 3FBB  
                   ?_INT1_SetInterruptHandler 0106                                      _PIE0bits 3990  
                                    _PIE1bits 3991                                      _PIE4bits 3994  
                                   _send_leds 5196                                     _send_byte 64B8  
                            ?i2___fpclassifyf 0001                             ??_TMR1_CounterSet 0003  
                                    i2u500_40 5308                                      i2u500_41 5304  
                                    i2u501_40 5494                                      i2u501_41 5490  
                                    i2u502_40 54AE                                      i2u510_40 48BE  
                                    i2u502_41 54AA                                      i2u510_41 48BA  
                                    i2u503_40 54C8                                      i2u511_40 48FC  
                                    i2u503_41 54C4                                      i2u511_41 48F8  
                                    _PIR0bits 39A0                                      i2u504_40 54E6  
                                    i2u512_40 491A                                      i2u520_40 483E  
                                    i2u600_40 0DBA                                      i2u504_41 54E2  
                                    i2u512_41 4916                                      i2u520_41 483A  
                                    i2u600_41 0DB6                                      i2u505_40 54FC  
                                    i2u513_40 493A                                      i2u521_40 485E  
                                    i2u601_40 0DEC                                      i2u505_41 54F8  
                                    i2u513_41 4936                                      i2u521_41 485A  
                                    i2u601_41 0DE8                                      _PIR1bits 39A1  
                                    i2u530_40 310A                                      i2u506_40 5520  
                                    i2u514_40 498A                                      i2u522_40 486E  
                                    i2u450_40 4F44                                      i2u610_40 111C  
                                    i2u602_40 0E2A                                      i2u530_41 3106  
                                    i2u506_41 551C                                      i2u514_41 4986  
                                    i2u522_41 486A                                      i2u450_41 4F40  
                                    i2u610_41 1118                                      i2u602_41 0E26  
                                    i2u531_40 317E                                      i2u523_40 3006  
                                    i2u507_40 56B8                                      i2u515_40 632A  
                                    i2u451_40 4F56                                      i2u611_40 1164  
                                    i2u603_40 0EB6                                      i2u531_41 317A  
                                    i2u523_41 3002                                      i2u507_41 56B4  
                                    i2u515_41 6326                                      i2u451_41 4F52  
                                    i2u611_41 1160                                      i2u603_41 0EB2  
                                    i2u540_40 3296                                      i2u532_40 31A0  
                                    i2u524_40 3018                                      i2u508_40 56F6  
                                    i2u460_40 1BF6                                      i2u516_40 47A0  
                                    i2u452_40 4F7E                                      i2u620_40 1496  
                                    i2u612_40 1174                                      i2u604_40 0EEC  
                                    i2u540_41 3292                                      i2u532_41 319C  
                                    i2u524_41 3014                                      i2u508_41 56F2  
                                    i2u460_41 1BF2                                      i2u516_41 479C  
                                    i2u452_41 4F7A                                      i2u620_41 1492  
                                    i2u612_41 1170                                      i2u604_41 0EE8  
                                    i2u541_40 32AA                                      i2u533_40 31CA  
                                    i2u525_40 3028                                      i2u509_40 572A  
                                    i2u461_40 1C30                                      i2u517_40 47D4  
                                    i2u453_40 4FB4                                      i2u621_40 14B2  
                                    i2u613_40 120E                                      i2u605_40 0F04  
                                    i2u541_41 32A6                                      i2u533_41 31C6  
                                    i2u525_41 3024                                      i2u509_41 5726  
                                    i2u461_41 1C2C                                      i2u453_41 4FB0  
                                    i2u621_41 14AE                                      i2u613_41 120A  
                                    i2u605_41 0F00                                      i2u517_45 47CA  
                                    i2u542_40 32C4                                      i2u534_40 31EE  
                                    i2u526_40 306A                                      i2u550_40 24D2  
                                    i2u470_40 1D48                                      i2u462_40 1C3E  
                                    i2u454_40 1B5C                                      i2u518_40 4802  
                                    i2u622_40 14DA                                      i2u614_40 125C  
                                    i2u606_40 0F36                                      i2u630_40 4CBE  
                                    i2u542_41 32C0                                      i2u534_41 31EA  
                                    i2u526_41 3066                                      i2u550_41 24CE  
                                    i2u470_41 1D44                                      i2u462_41 1C3A  
                                    i2u454_41 1B58                                      i2u518_41 47FE  
                                    i2u622_41 14D6                                      i2u614_41 1258  
                                    i2u606_41 0F32                                      i2u630_41 4CBA  
                                    i2u543_40 330C                                      i2u535_40 3204  
                                    i2u527_40 307C                                      i2u551_40 24E2  
                                    i2u471_40 1D7A                                      i2u463_40 1CAA  
                                    i2u455_40 1B6E                                      i2u519_40 4816  
                                    i2u623_40 14EA                                      i2u615_40 1284  
                                    i2u607_40 0F44                                      i2u631_40 4D72  
                                    i2u543_41 3308                                      i2u535_41 3200  
                                    i2u527_41 3078                                      i2u551_41 24DE  
                                    i2u471_41 1D76                                      i2u463_41 1CA6  
                                    i2u455_41 1B6A                                      i2u519_41 4812  
                                    i2u623_41 14E6                                      i2u615_41 1280  
                                    i2u607_41 0F40                                      i2u631_41 4D6E  
                                    _PIR4bits 39A4                                      i2u544_40 333C  
                                    i2u536_40 3222                                      i2u528_40 308C  
                                    i2u560_40 27A8                                      i2u552_40 2518  
                                    i2u480_40 1EC2                                      i2u472_40 1D88  
                                    i2u464_40 1CC2                                      i2u456_40 1B7E  
                                    i2u624_40 156A                                      i2u616_40 1326  
                                    i2u608_40 0F6E                                      i2u544_41 3338  
                                    i2u536_41 321E                                      i2u528_41 3088  
                                    i2u560_41 27A4                                      i2u552_41 2514  
                                    i2u480_41 1EBE                                      i2u472_41 1D84  
                                    i2u464_41 1CBC                                      i2u456_41 1B7A  
                                    i2u624_41 1566                                      i2u616_41 1322  
                                    i2u608_41 0F6A                                      i2u545_40 3368  
                                    i2u537_40 3242                                      i2u529_40 30CA  
                                    i2u561_40 27C2                                      i2u553_40 2528  
                                    i2u481_40 1ED2                                      i2u473_40 1DA6  
                                    i2u465_40 1CC4                                      i2u457_40 1BBE  
                                    i2u625_40 1584                                      i2u617_40 1362  
                                    i2u609_40 10B6                                      i2u545_41 3364  
                                    i2u537_41 323E                                      i2u529_41 30C6  
                                    i2u561_41 27BE                                      i2u553_41 2524  
                                    i2u481_41 1ECE                                      i2u473_41 1DA2  
                                    i2u457_41 1BBA                                      i2u625_41 1580  
                                    i2u617_41 135E                                      i2u609_41 10B2  
                                    _PIR5bits 39A5                                      i2u538_40 3252  
                                    i2u562_40 280A                                      i2u554_40 26C6  
                                    i2u546_40 245E                                      i2u490_40 1FB8  
                                    i2u482_40 1EE2                                      i2u474_40 1DDE  
                                    i2u466_40 1CEC                                      i2u458_40 1BD4  
                                    i2u570_40 4B44                                      i2u626_40 159A  
                                    i2u618_40 1370                                      i2u538_41 324E  
                                    i2u562_41 2806                                      i2u546_41 245A  
                                    i2u490_41 1FB4                                      i2u482_41 1EDE  
                                    i2u474_41 1DDA                                      i2u466_41 1CE8  
                                    i2u458_41 1BD0                                      i2u570_41 4B40  
                                    i2u626_41 1596                                      i2u618_41 136C  
                                    i2u554_45 26BC                                      i2u539_40 3280  
                                    i2u563_40 2838                                      i2u555_40 2720  
                                    i2u547_40 2470                                      i2u491_40 1FC8  
                                    i2u483_40 1EF8                                      i2u475_40 1E24  
                                    i2u467_40 1D0A                                      i2u459_40 1BE6  
                                    i2u627_40 1632                                      i2u619_40 13C4  
                                    i2u539_41 327C                                      i2u563_41 2834  
                                    i2u555_41 271C                                      i2u547_41 246C  
                                    i2u491_41 1FC4                                      i2u483_41 1EF4  
                                    i2u475_41 1E20                                      i2u467_41 1D06  
                                    i2u459_41 1BE2                                      i2u627_41 162C  
                                    i2u619_41 13C0                                      i2u571_45 4B56  
                                    i2u564_40 2870                                      i2u556_40 2740  
                                    i2u548_40 2480                                      i2u492_40 1FE4  
                                    i2u484_40 1F0E                                      i2u476_40 1E5A  
                                    i2u468_40 1D2A                                      i2u572_40 4B7E  
                                    i2u580_40 4008                                      i2u628_40 1634  
                                    i2u900_40 3B14                                      i2u564_41 286C  
                                    i2u556_41 273C                                      i2u548_41 247C  
                                    i2u492_41 1FE0                                      i2u484_41 1F0A  
                                    i2u476_41 1E56                                      i2u468_41 1D26  
                                    i2u572_41 4B78                                      i2u580_41 4004  
                                    i2u900_41 3B10                                      i2u557_40 2750  
                                    i2u549_40 24C0                                      i2u485_40 1F22  
                                    i2u477_40 1E6A                                      i2u469_40 1D38  
                                    i2u573_40 4B80                                      i2u581_40 405C  
                                    i2u493_40 6160                                      i2u565_40 5A5A  
                                    i2u629_40 1648                                      i2u901_40 3B36  
                                    i2u557_41 274C                                      i2u549_41 24BC  
                                    i2u485_41 1F1E                                      i2u477_41 1E66  
                                    i2u469_41 1D34                                      i2u493_41 615C  
                                    i2u565_41 5A56                                      i2u629_41 1644  
                                    i2u901_41 3B32                                      _PIR7bits 39A7  
                                    i2u581_45 4052                                      i2u558_40 277E  
                                    i2u486_40 1F3C                                      i2u478_40 1E96  
                                    i2u582_40 4078                                      i2u574_40 3F0C  
                                    i2u566_40 5AA4                                      i2u902_40 5DD8  
                                    i2u910_40 4524                                      i2u494_40 62EC  
                                    i2u830_40 5600                                      i2u558_41 277A  
                                    i2u486_41 1F38                                      i2u478_41 1E92  
                                    i2u582_41 4074                                      i2u566_41 5AA0  
                                    i2u902_41 5DD4                                      i2u910_41 4520  
                                    i2u494_41 62E8                                      i2u830_41 55FC  
                                    i2u574_45 3F02                                      i2u559_40 2794  
                                    i2u495_40 5268                                      i2u487_40 1F76  
                                    i2u479_40 1EA6                                      i2u567_40 4AD4  
                                    i2u583_40 40B4                                      i2u575_40 3F3A  
                                    i2u911_40 453E                                      i2u903_40 446E  
                                    i2u831_40 566A                                      i2u559_41 2790  
                                    i2u495_41 5264                                      i2u487_41 1F72  
                                    i2u479_41 1EA2                                      i2u583_41 40B0  
                                    i2u575_41 3F36                                      i2u911_41 453A  
                                    i2u903_41 446A                                      i2u831_41 5666  
                                    i2u567_45 4ACA                                      i2u496_40 5282  
                                    i2u488_40 1F88                                      i2u568_40 4AF2  
                                    i2u576_40 3F5C                                      i2u584_40 5DF2  
                                    i2u592_40 0B7E                                      i2u912_40 4558  
                                    i2u904_40 4488                                      i2u832_40 5684  
                                    i2u920_40 6272                                      i2u496_41 527E  
                                    i2u488_41 1F84                                      i2u568_41 4AEE  
                                    i2u576_41 3F58                                      i2u584_41 5DEE  
                                    i2u592_41 0B7A                                      i2u912_41 4554  
                                    i2u904_41 4484                                      i2u832_41 5680  
                                    i2u920_41 626E                                      i2u825_40 5A08  
                                    i2u497_40 52A8                                      i2u489_40 1F98  
                                    i2u569_40 4B1A                                      i2u585_40 5C86  
                                    i2u593_40 0BC8                                      i2u913_40 456E  
                                    i2u905_40 44A2                                      i2u921_40 6286  
                                    i2u497_41 52A4                                      i2u489_41 1F94  
                                    i2u569_41 4B16                                      i2u585_41 5C82  
                                    i2u593_41 0BC4                                      i2u913_41 456A  
                                    i2u905_41 449E                                      i2u921_41 6282  
                                    i2u577_45 3F70                                      i2u577_46 3F7A  
                                    i2u825_47 59FA                                      i2u577_47 3F8A  
                                    i2u826_40 5A3A                                      i2u770_40 42A0  
                                    i2u498_40 52C6                                      i2u578_40 3FC8  
                                    i2u586_40 611C                                      i2u594_40 0BD8  
                                    i2u914_40 642E                                      i2u906_40 44BC  
                                    i2u922_40 629A                                      i2u930_40 4E2A  
                                    i2u770_41 429C                                      i2u498_41 52C2  
                                    i2u578_41 3FC4                                      i2u586_41 6118  
                                    i2u594_41 0BD4                                      i2u914_41 642A  
                                    i2u906_41 44B8                                      i2u922_41 6296  
                                    i2u930_41 4E26                                      i2u826_47 5A2C  
                                    i2u827_40 5A4A                                      i2u771_40 42AE  
                                    i2u499_40 52E2                                      i2u579_40 3FEC  
                                    i2u595_40 0C16                                      i2u907_40 44D6  
                                    i2u587_40 64DA                                      i2u923_40 4DB0  
                                    i2u827_41 5A46                                      i2u771_41 42AA  
                                    i2u499_41 52DE                                      i2u595_41 0C12  
                                    i2u907_41 44D2                                      i2u587_41 64D6  
                                    i2u923_41 4DAC                                      i2u579_45 3FE2  
                                    i2u828_40 5E78                                      i2u772_40 430A  
                                    i2u596_40 0C28                                      i2u915_48 6434  
                                    i2u908_40 44F0                                      i2u916_40 63FC  
                                    i2u676_40 5240                                      i2u924_40 4DBE  
                                    i2u828_41 5E74                                      i2u772_41 4306  
                                    i2u596_41 0C24                                      i2u915_49 6446  
                                    i2u908_41 44EC                                      i2u916_41 63F8  
                                    i2u676_41 523C                                      i2u924_41 4DBA  
                                    i2u940_47 62FA                                      i2u773_40 4360  
                                    i2u597_40 0CA2                                      i2u909_40 450A  
                                    i2u677_40 5252                                      i2u781_40 53BC  
                                    i2u829_40 55F0                                      i2u925_40 4DD4  
                                    i2u773_41 435C                                      i2u597_41 0C9E  
                                    i2u909_41 4506                                      i2u677_41 524E  
                                    i2u781_41 53B8                                      i2u829_41 55EC  
                                    i2u925_41 4DD0                                      i2u941_47 630E  
                                    i2u774_40 43AA                                      i2u598_40 0CB4  
                                    i2u917_48 6402                                      i2u782_40 53CE  
                                    i2u918_40 63CA                                      i2u870_40 606C  
                                    i2u926_40 4DE2                                      i2u774_41 43A6  
                                    i2u598_41 0CB0                                      i2u917_49 6414  
                                    i2u782_41 53CA                                      i2u918_41 63C6  
                                    i2u870_41 6066                                      i2u926_41 4DDE  
                                    i2u870_46 606E                                      i2u942_47 444E  
                                    i2u775_40 43C8                                      i2u599_40 0D2E  
                                    i2u783_40 50BA                                      i2u927_40 4DF8  
                                    i2u775_41 43C4                                      i2u599_41 0D2A  
                                    i2u783_41 50B6                                      i2u927_41 4DF4  
                                    i2u871_45 6082                                      i2u871_46 6084  
                                    i2u943_47 5B24                                      i2u776_40 43D8  
                                    i2u784_40 50CC                                      i2u919_48 63D0  
                                    i2u872_40 5F04                                      i2u928_40 4E06  
                                    i2u776_41 43D4                                      i2u784_41 50C8  
                                    i2u919_49 63E2                                      i2u872_41 5F00  
                                    i2u928_41 4E02                                      i2u944_47 6510  
                                    i2u777_40 43E6                                      i2u873_40 5F1C  
                                    i2u929_40 4E1C                                      i2u777_41 43E2  
                                    i2u873_41 5F16                                      i2u929_41 4E18  
                     _BP1_SetInterruptHandler 6634                                      i2u873_46 5F1E  
                                    i2u945_47 6390                                      i2u937_47 64A0  
                                    i2u778_40 4420                                      i2u778_41 441C  
                                    i2u946_47 65DA                                      i2u938_47 65E8  
                                    i2u779_40 442E                                      i2u779_41 442A  
                                    i2u947_47 6530                                      i2u939_47 62F0  
                                    i2u948_47 655A                                      i2u869_40 605C  
                                    i2u877_40 6244                                      i2u869_41 6058  
                                    i2u877_41 6240                                      i2u949_47 6564  
                                    i2u878_48 624A                                      i2u878_49 625C  
                                    i2u898_40 3A02                                      i2u898_41 39FE  
                                    i2u899_40 3A54                                      i2u899_41 3A50  
                           i2___fldiv@new_exp 0039                         LCD_UpdateMenu@courant 01D4  
                                 ??i2_sprintf 005E                   __end_ofi2_ADC_ChannelSelect 6666  
                       ??_ADC_ConversionStart 0106                             ??_PIN_MANAGER_IOC 005E  
                                 _LCD_Command 6470                      __end_of_ADC_ThresholdISR 6678  
                                   _vfpfcnvrt 36F8                         LCD_UpdateMenu@tension 01D0  
                           ??_TMR1_Initialize 0106                                    _ADCON0bits 3EF8  
                                  _ADCON1bits 3EF9                                    _ADCON2bits 3EFA  
                                    i2___flge 4890                                    _ADCON3bits 3EFB  
                                    i2___fleq 568A                                      i2_efgtoa 0B5C  
                                    i2_floorf 3EC4                                      i2_memcpy 5C2E  
                           i2___awdiv@divisor 0003                             i2___awdiv@counter 0005  
                                    i2pad@buf 0013                                      i2_strcpy 60DA  
                                  vfpfcnvrt@c 019E                                   _INTCON0bits 3FD2  
                                    i2fputc@c 0001                         ?_INTERRUPT_Initialize 0001  
                                    i2fputs@c 000E                                      i2fputs@i 000F  
                                    i2fputs@s 000A                      _INT0_SetInterruptHandler 6652  
                          i2___awmod@dividend 0001                  ?_BP2_DefaultInterruptHandler 0001  
                                  ?_send_leds 0001                                    ?_send_byte 0001  
                                  _ADSTATbits 3EFC                                      __Hrparam 0000  
                                   off_leds@i 0019                                     off_leds@j 001A  
                                   memcpy@tmp 0110                                    vfprintf@ap 01A5  
                                    __Lrparam 0000                                    vfprintf@fp 01A1  
                          i2LCD_SetCursor@row 0008                               _adc_busy_status 00EC  
                      i2read_prec_or_width@ap 0003                               i2LCD_String@str 0003  
                                  ?_vfpfcnvrt 0192                            ___fpclassifyf@F465 00D9  
                          i2vfpfcnvrt@convarg 0097                                    sprintf@fmt 01AB  
                     ??i2_ADC_ConversionStart 0001                                      ___xxtofl 40D6  
                                    __pivt0x8 0008                                   i2_LCD_Clear 65CE  
                    ?_ADC_ConversionResultGet 0106                                      __ptext10 6648  
                                    __ptext11 6652                                      __ptext20 6008  
                                    __ptext12 65F8                                      __ptext21 5968  
                                    __ptext13 5B76                                    _T1GCONbits 3FB3  
                                    __ptext30 5FC0                                      __ptext22 5F78  
                                    __ptext14 288E                                      __ptext31 168A  
                                    __ptext23 4E58                                      __ptext15 5E90  
                                    __ptext40 2C5A                                      __ptext32 62A0  
                                    __ptext24 667E                                      __ptext16 5C88  
                                    __ptext41 6666                                      __ptext33 4684  
                                    __ptext25 5BD2                                      __ptext17 36F8  
                                    __ptext50 653A                                      __ptext42 64DC  
                                    __ptext34 5532                                      __ptext26 5CE0  
                                    __ptext18 4B92                                      __ptext51 4D7C  
                                    __ptext43 660A                                      __ptext35 53D4  
                                    __ptext27 3CAE                                      __ptext19 001E  
                                    __ptext60 55DE                                      __ptext52 6224  
                                    __ptext44 58F4                                      __ptext36 50D2  
                                    __ptext28 4994                                      __ptext61 500A  
                                    __ptext53 6680                                      __ptext45 644C  
                                    __ptext37 5734                                      __ptext29 457C  
                                    __ptext70 4442                                      __ptext62 531A  
                                    __ptext54 5EE0                                      __ptext46 5ABA  
                                    __ptext38 40D6                                      __ptext71 641A  
                                    __ptext63 5196                                      __ptext55 604E  
                                    __ptext47 634C                                      __ptext39 1FF8  
                                    __ptext80 60DA                                      __ptext72 6686  
                                    __ptext64 65E4                                      __ptext56 6262  
                                    __ptext48 6572                                      __ptext81 5A4C  
                                    __ptext73 5B18                                      __ptext65 65A2  
                                    __ptext57 63B6                                      __ptext49 6470  
                                    __ptext90 6094                                      __ptext82 611E  
                                    __ptext74 337C                                      __ptext66 64B8  
                                    __ptext58 6682                                      __ptext91 1B42  
                                    __ptext83 4F32                                      __ptext75 5F2E  
                                    __ptext67 62DA                                      __ptext59 6494  
                                    __ptext92 6314                                      __ptext84 6688  
                                    __ptext76 5D8E                                      __ptext68 63E8  
                                    __ptext93 4890                                      __ptext85 5C2E  
                                    __ptext77 39D4                                      __ptext69 6684  
                                    __ptext94 568A                                      __ptext86 5DE4  
                                    __ptext78 4C88                                      __ptext95 5484  
                                    __ptext87 3EC4                                      __ptext79 0B5C  
                                    __ptext96 5258                                      __ptext88 4A94  
                                    __ptext97 57D0                                      __ptext89 478A  
                                    __ptext98 428E                                      __ptext99 2444  
                                  _COLORS_TAB FEED                      __end_of_appliquer_action 568A  
                                  strcpy@dest 0106                                  ??_send_color 0006  
                                    _off_leds 531A                          i2_read_prec_or_width 4C88  
                   ??_BP1_SetInterruptHandler 0108                                      _send_bit 62DA  
        __end_of_TMR1_DefaultOverflowCallback 6682                  _TMR1_DefaultOverflowCallback 6680  
                               ?_ws2812_reset 0001                                      efgtoa@fp 015A  
                                    efgtoa@ne 0169                                      efgtoa@pp 016B  
                        LCD_UpdateMenu@buffer 01C0                                      efgtoa@ou 0177  
                                    isa$xinst 0000                       TMR1_CounterSet@timerVal 0001  
                             _LCD_EnablePulse 653A                                      _vfprintf 5C88  
          __end_of_INTERRUPT_InterruptManager 4E58                    _INTERRUPT_InterruptManager 4D7C  
                       __end_ofi2_LCD_Command 653A                                    _LCD_String 58F4  
                _INT1_DefaultInterruptHandler 0000                           lire_tension@adc_val 014E  
                           i2___awmod@divisor 0003                             i2___awmod@counter 0005  
                          __end_of_send_color 65B8                                      memcpy@d1 0106  
                                    memcpy@s1 0108                                  _TMR1_handler 5EE0  
                              i2_lire_tension 57D0                        ??_INTERRUPT_Initialize 0108  
                           i2___fpclassifyf@e 0009                             i2___fpclassifyf@u 000B  
                           i2___fpclassifyf@x 0001                         i2read_prec_or_width@c 0007  
                       i2read_prec_or_width@n 0008           __end_of_BP1_DefaultInterruptHandler 6688  
                 _BP1_DefaultInterruptHandler 6686                                      intlevel2 0000  
                                   sprintf@ap 01B1                                      on_leds@b 0016  
                                    on_leds@g 0015                                      on_leds@i 001C  
                                    on_leds@j 001D                                      on_leds@r 001B  
                    ?_BP3_SetInterruptHandler 0106                               i2___xxtofl@sign 0009  
                         lire_tension@tension 014A                                    i2_LCD_Char 64FC  
                       ?i2_read_prec_or_width 0001                                    i2_LCD_Init 6382  
                     ?_PIN_MANAGER_Initialize 0001                                     strcpy@src 0108  
                                 ??_send_leds 0007                              i2_LCD_UpdateMenu 337C  
                                 ??_send_byte 0002                                ??_ws2812_reset 0001  
                            ??_ADC_Initialize 0106                       i2LCD_UpdateMenu@courant 00D1  
               ??_BP1_DefaultInterruptHandler 0001                                   efgtoa@esign 016C  
                                 efgtoa@nmode 0174                 ?_TMR1_DefaultOverflowCallback 0001  
                     i2LCD_UpdateMenu@tension 00CD                                 ??i2_vfpfcnvrt 0095  
                                 ??_vfpfcnvrt 0198                      __end_of_CLOCK_Initialize 660A  
                                    sprintf@f 01B3                                      sprintf@s 01A9  
             __end_of_ADC_ConversionResultGet 64FC                        __end_ofi2_lire_tension 5868  
            __end_of_INT1_SetInterruptHandler 6652                   __end_ofLCD_SetCursor@F16382 FF09  
                             _TMR1_CounterSet 604E                                 ___fladd@signs 0112  
              __end_of_PIN_MANAGER_Initialize 58F4                                  ___fladd@aexp 0113  
                                ___fladd@bexp 0114                               _PIN_MANAGER_IOC 6262  
                     __end_of_LCD_EnablePulse 6556                               _TMR1_Initialize 6162  

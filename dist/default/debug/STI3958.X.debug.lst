

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Wed Jun 11 14:40:37 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	18F26K42
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,space=0,delta=1,noexec
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     7                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,noexec
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,space=0,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,space=0,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,space=0,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,space=0,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,space=0,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,space=0,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,space=0,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,space=0,delta=1,group=3
    32                           	psect	text16,global,reloc=2,class=CODE,space=0,delta=1,group=1
    33                           	psect	text17,global,reloc=2,class=CODE,space=0,delta=1,group=1
    34                           	psect	text18,global,reloc=2,class=CODE,space=0,delta=1,group=1
    35                           	psect	text19,global,reloc=2,class=CODE,space=0,delta=1,group=1
    36                           	psect	text20,global,reloc=2,class=CODE,space=0,delta=1,group=3
    37                           	psect	text21,global,reloc=2,class=CODE,space=0,delta=1,group=1
    38                           	psect	text22,global,reloc=2,class=CODE,space=0,delta=1,group=3
    39                           	psect	text23,global,reloc=2,class=CODE,space=0,delta=1,group=3
    40                           	psect	text24,global,reloc=2,class=CODE,space=0,delta=1,group=3
    41                           	psect	text25,global,reloc=2,class=CODE,space=0,delta=1,group=3
    42                           	psect	text26,global,reloc=2,class=CODE,space=0,delta=1,group=3
    43                           	psect	text27,global,reloc=2,class=CODE,space=0,delta=1,group=3
    44                           	psect	text28,global,reloc=2,class=CODE,space=0,delta=1,group=3
    45                           	psect	text29,global,reloc=2,class=CODE,space=0,delta=1,group=2
    46                           	psect	text30,global,reloc=2,class=CODE,space=0,delta=1,group=2
    47                           	psect	text31,global,reloc=2,class=CODE,space=0,delta=1,group=2
    48                           	psect	text32,global,reloc=2,class=CODE,space=0,delta=1,group=2
    49                           	psect	text33,global,reloc=2,class=CODE,space=0,delta=1,group=2
    50                           	psect	text34,global,reloc=2,class=CODE,space=0,delta=1,group=2
    51                           	psect	text35,global,reloc=2,class=CODE,space=0,delta=1,group=2
    52                           	psect	text36,global,reloc=2,class=CODE,space=0,delta=1,group=2
    53                           	psect	text37,global,reloc=2,class=CODE,space=0,delta=1
    54                           	psect	text38,global,reloc=2,class=CODE,space=0,delta=1,group=2
    55                           	psect	text39,global,reloc=2,class=CODE,space=0,delta=1,group=2
    56                           	psect	text40,global,reloc=2,class=CODE,space=0,delta=1,group=2
    57                           	psect	text41,global,reloc=2,class=CODE,space=0,delta=1
    58                           	psect	text42,global,reloc=2,class=CODE,space=0,delta=1
    59                           	psect	text43,global,reloc=2,class=CODE,space=0,delta=1
    60                           	psect	text44,global,reloc=2,class=CODE,space=0,delta=1
    61                           	psect	text45,global,reloc=2,class=CODE,space=0,delta=1
    62                           	psect	text46,global,reloc=2,class=CODE,space=0,delta=1
    63                           	psect	text47,global,reloc=2,class=CODE,space=0,delta=1
    64                           	psect	text48,global,reloc=2,class=CODE,space=0,delta=1
    65                           	psect	text49,global,reloc=2,class=CODE,space=0,delta=1
    66                           	psect	text50,global,reloc=2,class=CODE,space=0,delta=1
    67                           	psect	text51,global,reloc=2,class=CODE,space=0,delta=1
    68                           	psect	text52,global,reloc=2,class=CODE,space=0,delta=1
    69                           	psect	text53,global,reloc=2,class=CODE,space=0,delta=1
    70                           	psect	text54,global,reloc=2,class=CODE,space=0,delta=1
    71                           	psect	text55,global,reloc=2,class=CODE,space=0,delta=1
    72                           	psect	text56,global,reloc=2,class=CODE,space=0,delta=1
    73                           	psect	text57,global,reloc=2,class=CODE,space=0,delta=1
    74                           	psect	text58,global,reloc=2,class=CODE,space=0,delta=1
    75                           	psect	text59,global,reloc=2,class=CODE,space=0,delta=1
    76                           	psect	text60,global,reloc=2,class=CODE,space=0,delta=1
    77                           	psect	text61,global,reloc=2,class=CODE,space=0,delta=1
    78                           	psect	text62,global,reloc=2,class=CODE,space=0,delta=1
    79                           	psect	text63,global,reloc=2,class=CODE,space=0,delta=1
    80                           	psect	text64,global,reloc=2,class=CODE,space=0,delta=1
    81                           	psect	text65,global,reloc=2,class=CODE,space=0,delta=1
    82                           	psect	text66,global,reloc=2,class=CODE,space=0,delta=1
    83                           	psect	text67,global,reloc=2,class=CODE,space=0,delta=1
    84                           	psect	text68,global,reloc=2,class=CODE,space=0,delta=1
    85                           	psect	text69,global,reloc=2,class=CODE,space=0,delta=1
    86                           	psect	text70,global,reloc=2,class=CODE,space=0,delta=1
    87                           	psect	text71,global,reloc=2,class=CODE,space=0,delta=1
    88                           	psect	text72,global,reloc=2,class=CODE,space=0,delta=1
    89                           	psect	text73,global,reloc=2,class=CODE,space=0,delta=1
    90                           	psect	text74,global,reloc=2,class=CODE,space=0,delta=1
    91                           	psect	text75,global,reloc=2,class=CODE,space=0,delta=1
    92                           	psect	text76,global,reloc=2,class=CODE,space=0,delta=1
    93                           	psect	text77,global,reloc=2,class=CODE,space=0,delta=1
    94                           	psect	text78,global,reloc=2,class=CODE,space=0,delta=1
    95                           	psect	text79,global,reloc=2,class=CODE,space=0,delta=1
    96                           	psect	text80,global,reloc=2,class=CODE,space=0,delta=1
    97                           	psect	text81,global,reloc=2,class=CODE,space=0,delta=1
    98                           	psect	text82,global,reloc=2,class=CODE,space=0,delta=1
    99                           	psect	text83,global,reloc=2,class=CODE,space=0,delta=1
   100                           	psect	text84,global,reloc=2,class=CODE,space=0,delta=1
   101                           	psect	text85,global,reloc=2,class=CODE,space=0,delta=1
   102                           	psect	text86,global,reloc=2,class=CODE,space=0,delta=1
   103                           	psect	text87,global,reloc=2,class=CODE,space=0,delta=1
   104                           	psect	text88,global,reloc=2,class=CODE,space=0,delta=1
   105                           	psect	text89,global,reloc=2,class=CODE,space=0,delta=1
   106                           	psect	text90,global,reloc=2,class=CODE,space=0,delta=1
   107                           	psect	text91,global,reloc=2,class=CODE,space=0,delta=1
   108                           	psect	text92,global,reloc=2,class=CODE,space=0,delta=1
   109                           	psect	text93,global,reloc=2,class=CODE,space=0,delta=1
   110                           	psect	text94,global,reloc=2,class=CODE,space=0,delta=1
   111                           	psect	text95,global,reloc=2,class=CODE,space=0,delta=1
   112                           	psect	text96,global,reloc=2,class=CODE,space=0,delta=1
   113                           	psect	text97,global,reloc=2,class=CODE,space=0,delta=1
   114                           	psect	text98,global,reloc=2,class=CODE,space=0,delta=1
   115                           	psect	text99,global,reloc=2,class=CODE,space=0,delta=1
   116                           	psect	text100,global,reloc=2,class=CODE,space=0,delta=1
   117                           	psect	text101,global,reloc=2,class=CODE,space=0,delta=1
   118                           	psect	text102,global,reloc=2,class=CODE,space=0,delta=1
   119                           	psect	text103,global,reloc=2,class=CODE,space=0,delta=1
   120                           	psect	text104,global,reloc=2,class=CODE,space=0,delta=1
   121                           	psect	text105,global,reloc=2,class=CODE,space=0,delta=1
   122                           	psect	text106,global,reloc=2,class=CODE,space=0,delta=1
   123                           	psect	text107,global,reloc=2,class=CODE,space=0,delta=1
   124                           	psect	text108,global,reloc=2,class=CODE,space=0,delta=1
   125                           	psect	text109,global,reloc=2,class=CODE,space=0,delta=1
   126                           	psect	text110,global,reloc=2,class=CODE,space=0,delta=1
   127                           	psect	text111,global,reloc=2,class=CODE,space=0,delta=1
   128                           	psect	text112,global,reloc=2,class=CODE,space=0,delta=1
   129                           	psect	ivt0x8,global,reloc=2,class=CODE,space=0,delta=1,noexec,keep,optim=
   130                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   131                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   132                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   133   000000                     
   134                           ; Generated 13/12/2024 GMT
   135                           ; 
   136                           ; Copyright © 2024, Microchip Technology Inc. and its subsidiaries ("Microchip")
   137                           ; All rights reserved.
   138                           ; 
   139                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   140                           ; 
   141                           ; Redistribution and use in source and binary forms, with or without modification, are
   142                           ; permitted provided that the following conditions are met:
   143                           ; 
   144                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   145                           ;        conditions and the following disclaimer.
   146                           ; 
   147                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   148                           ;        of conditions and the following disclaimer in the documentation and/or other
   149                           ;        materials provided with the distribution. Publication is not required when
   150                           ;        this file is used in an embedded application.
   151                           ; 
   152                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   153                           ;        software without specific prior written permission.
   154                           ; 
   155                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   156                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   157                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   158                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   159                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   160                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   161                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   162                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   163                           ; 
   164                           ; 
   165                           ; Code-generator required, PIC18F26K42 Definitions
   166                           ; 
   167                           ; SFR Addresses
   168   003FE0                     bsr             equ	16352
   169   003FE9                     fsr0            equ	16361
   170   003FEA                     fsr0h           equ	16362
   171   003FE9                     fsr0l           equ	16361
   172   003FE1                     fsr1            equ	16353
   173   003FE2                     fsr1h           equ	16354
   174   003FE1                     fsr1l           equ	16353
   175   003FD9                     fsr2            equ	16345
   176   003FDA                     fsr2h           equ	16346
   177   003FD9                     fsr2l           equ	16345
   178   003FEF                     indf0           equ	16367
   179   003FE7                     indf1           equ	16359
   180   003FDF                     indf2           equ	16351
   181   003FD2                     intcon          equ	16338
   182   0039E5                     nvmcon          equ	14821
   183   003FF9                     pcl             equ	16377
   184   003FFA                     pclath          equ	16378
   185   003FFB                     pclatu          equ	16379
   186   003FEB                     plusw0          equ	16363
   187   003FE3                     plusw1          equ	16355
   188   003FDB                     plusw2          equ	16347
   189   003FED                     postdec0        equ	16365
   190   003FE5                     postdec1        equ	16357
   191   003FDD                     postdec2        equ	16349
   192   003FEE                     postinc0        equ	16366
   193   003FE6                     postinc1        equ	16358
   194   003FDE                     postinc2        equ	16350
   195   003FEC                     preinc0         equ	16364
   196   003FE4                     preinc1         equ	16356
   197   003FDC                     preinc2         equ	16348
   198   003FF3                     prod            equ	16371
   199   003FF4                     prodh           equ	16372
   200   003FF3                     prodl           equ	16371
   201   003FD8                     status          equ	16344
   202   003FF5                     tablat          equ	16373
   203   003FF6                     tblptr          equ	16374
   204   003FF7                     tblptrh         equ	16375
   205   003FF6                     tblptrl         equ	16374
   206   003FF8                     tblptru         equ	16376
   207   003FFD                     tosl            equ	16381
   208   003FE8                     wreg            equ	16360
   209   003880                     STATUS_CSHAD    equ	14464	;# 
   210   003881                     WREG_CSHAD      equ	14465	;# 
   211   003882                     BSR_CSHAD       equ	14466	;# 
   212   003883                     SHADCON         equ	14467	;# 
   213   003884                     STATUS_SHAD     equ	14468	;# 
   214   003885                     WREG_SHAD       equ	14469	;# 
   215   003886                     BSR_SHAD        equ	14470	;# 
   216   003887                     PCLATH_SHAD     equ	14471	;# 
   217   003888                     PCLATU_SHAD     equ	14472	;# 
   218   003889                     FSR0SH          equ	14473	;# 
   219   003889                     FSR0L_SHAD      equ	14473	;# 
   220   00388A                     FSR0H_SHAD      equ	14474	;# 
   221   00388B                     FSR1SH          equ	14475	;# 
   222   00388B                     FSR1L_SHAD      equ	14475	;# 
   223   00388C                     FSR1H_SHAD      equ	14476	;# 
   224   00388D                     FSR2SH          equ	14477	;# 
   225   00388D                     FSR2L_SHAD      equ	14477	;# 
   226   00388E                     FSR2H_SHAD      equ	14478	;# 
   227   00388F                     PRODSH          equ	14479	;# 
   228   00388F                     PRODL_SHAD      equ	14479	;# 
   229   003890                     PRODH_SHAD      equ	14480	;# 
   230   00389D                     IVTADL          equ	14493	;# 
   231   00389E                     IVTADH          equ	14494	;# 
   232   00389F                     IVTADU          equ	14495	;# 
   233   00395B                     WDTCON0         equ	14683	;# 
   234   00395C                     WDTCON1         equ	14684	;# 
   235   00395D                     WDTPSL          equ	14685	;# 
   236   00395E                     WDTPSH          equ	14686	;# 
   237   00395F                     WDTTMR          equ	14687	;# 
   238   003960                     CRCDATA         equ	14688	;# 
   239   003960                     CRCDATL         equ	14688	;# 
   240   003961                     CRCDATH         equ	14689	;# 
   241   003962                     CRCACC          equ	14690	;# 
   242   003962                     CRCACCL         equ	14690	;# 
   243   003963                     CRCACCH         equ	14691	;# 
   244   003964                     CRCSHFT         equ	14692	;# 
   245   003964                     CRCSHIFTL       equ	14692	;# 
   246   003965                     CRCSHIFTH       equ	14693	;# 
   247   003966                     CRCXOR          equ	14694	;# 
   248   003966                     CRCXORL         equ	14694	;# 
   249   003967                     CRCXORH         equ	14695	;# 
   250   003968                     CRCCON0         equ	14696	;# 
   251   003969                     CRCCON1         equ	14697	;# 
   252   003976                     SCANLADR        equ	14710	;# 
   253   003976                     SCANLADRL       equ	14710	;# 
   254   003977                     SCANLADRH       equ	14711	;# 
   255   003978                     SCANLADRU       equ	14712	;# 
   256   003979                     SCANHADR        equ	14713	;# 
   257   003979                     SCANHADRL       equ	14713	;# 
   258   00397A                     SCANHADRH       equ	14714	;# 
   259   00397B                     SCANHADRU       equ	14715	;# 
   260   00397C                     SCANCON0        equ	14716	;# 
   261   00397D                     SCANTRIG        equ	14717	;# 
   262   003980                     IPR0            equ	14720	;# 
   263   003981                     IPR1            equ	14721	;# 
   264   003982                     IPR2            equ	14722	;# 
   265   003983                     IPR3            equ	14723	;# 
   266   003984                     IPR4            equ	14724	;# 
   267   003985                     IPR5            equ	14725	;# 
   268   003986                     IPR6            equ	14726	;# 
   269   003987                     IPR7            equ	14727	;# 
   270   003988                     IPR8            equ	14728	;# 
   271   003989                     IPR9            equ	14729	;# 
   272   00398A                     IPR10           equ	14730	;# 
   273   003990                     PIE0            equ	14736	;# 
   274   003991                     PIE1            equ	14737	;# 
   275   003992                     PIE2            equ	14738	;# 
   276   003993                     PIE3            equ	14739	;# 
   277   003994                     PIE4            equ	14740	;# 
   278   003995                     PIE5            equ	14741	;# 
   279   003996                     PIE6            equ	14742	;# 
   280   003997                     PIE7            equ	14743	;# 
   281   003998                     PIE8            equ	14744	;# 
   282   003999                     PIE9            equ	14745	;# 
   283   00399A                     PIE10           equ	14746	;# 
   284   0039A0                     PIR0            equ	14752	;# 
   285   0039A1                     PIR1            equ	14753	;# 
   286   0039A2                     PIR2            equ	14754	;# 
   287   0039A3                     PIR3            equ	14755	;# 
   288   0039A4                     PIR4            equ	14756	;# 
   289   0039A5                     PIR5            equ	14757	;# 
   290   0039A6                     PIR6            equ	14758	;# 
   291   0039A7                     PIR7            equ	14759	;# 
   292   0039A8                     PIR8            equ	14760	;# 
   293   0039A9                     PIR9            equ	14761	;# 
   294   0039AA                     PIR10           equ	14762	;# 
   295   0039C0                     PMD0            equ	14784	;# 
   296   0039C1                     PMD1            equ	14785	;# 
   297   0039C2                     PMD2            equ	14786	;# 
   298   0039C3                     PMD3            equ	14787	;# 
   299   0039C4                     PMD4            equ	14788	;# 
   300   0039C5                     PMD5            equ	14789	;# 
   301   0039C6                     PMD6            equ	14790	;# 
   302   0039C7                     PMD7            equ	14791	;# 
   303   0039D0                     BORCON          equ	14800	;# 
   304   0039D1                     VREGCON         equ	14801	;# 
   305   0039D8                     CPUDOZE         equ	14808	;# 
   306   0039D9                     OSCCON1         equ	14809	;# 
   307   0039DA                     OSCCON2         equ	14810	;# 
   308   0039DB                     OSCCON3         equ	14811	;# 
   309   0039DC                     OSCSTAT         equ	14812	;# 
   310   0039DC                     OSCSTAT1        equ	14812	;# 
   311   0039DD                     OSCEN           equ	14813	;# 
   312   0039DE                     OSCTUNE         equ	14814	;# 
   313   0039DF                     OSCFRQ          equ	14815	;# 
   314   0039E0                     NVMADRL         equ	14816	;# 
   315   0039E1                     NVMADRH         equ	14817	;# 
   316   0039E3                     NVMDAT          equ	14819	;# 
   317   0039E5                     NVMCON1         equ	14821	;# 
   318   0039E6                     NVMCON2         equ	14822	;# 
   319   0039EF                     PRLOCK          equ	14831	;# 
   320   0039F1                     ISRPR           equ	14833	;# 
   321   0039F2                     MAINPR          equ	14834	;# 
   322   0039F3                     DMA1PR          equ	14835	;# 
   323   0039F4                     DMA2PR          equ	14836	;# 
   324   0039F7                     SCANPR          equ	14839	;# 
   325   003A00                     RA0PPS          equ	14848	;# 
   326   003A01                     RA1PPS          equ	14849	;# 
   327   003A02                     RA2PPS          equ	14850	;# 
   328   003A03                     RA3PPS          equ	14851	;# 
   329   003A04                     RA4PPS          equ	14852	;# 
   330   003A05                     RA5PPS          equ	14853	;# 
   331   003A06                     RA6PPS          equ	14854	;# 
   332   003A07                     RA7PPS          equ	14855	;# 
   333   003A08                     RB0PPS          equ	14856	;# 
   334   003A09                     RB1PPS          equ	14857	;# 
   335   003A0A                     RB2PPS          equ	14858	;# 
   336   003A0B                     RB3PPS          equ	14859	;# 
   337   003A0C                     RB4PPS          equ	14860	;# 
   338   003A0D                     RB5PPS          equ	14861	;# 
   339   003A0E                     RB6PPS          equ	14862	;# 
   340   003A0F                     RB7PPS          equ	14863	;# 
   341   003A10                     RC0PPS          equ	14864	;# 
   342   003A11                     RC1PPS          equ	14865	;# 
   343   003A12                     RC2PPS          equ	14866	;# 
   344   003A13                     RC3PPS          equ	14867	;# 
   345   003A14                     RC4PPS          equ	14868	;# 
   346   003A15                     RC5PPS          equ	14869	;# 
   347   003A16                     RC6PPS          equ	14870	;# 
   348   003A17                     RC7PPS          equ	14871	;# 
   349   003A40                     ANSELA          equ	14912	;# 
   350   003A41                     WPUA            equ	14913	;# 
   351   003A42                     ODCONA          equ	14914	;# 
   352   003A43                     SLRCONA         equ	14915	;# 
   353   003A44                     INLVLA          equ	14916	;# 
   354   003A45                     IOCAP           equ	14917	;# 
   355   003A46                     IOCAN           equ	14918	;# 
   356   003A47                     IOCAF           equ	14919	;# 
   357   003A48                     CCDPA           equ	14920	;# 
   358   003A49                     CCDNA           equ	14921	;# 
   359   003A50                     ANSELB          equ	14928	;# 
   360   003A51                     WPUB            equ	14929	;# 
   361   003A52                     ODCONB          equ	14930	;# 
   362   003A53                     SLRCONB         equ	14931	;# 
   363   003A54                     INLVLB          equ	14932	;# 
   364   003A55                     IOCBP           equ	14933	;# 
   365   003A56                     IOCBN           equ	14934	;# 
   366   003A57                     IOCBF           equ	14935	;# 
   367   003A58                     CCDPB           equ	14936	;# 
   368   003A59                     CCDNB           equ	14937	;# 
   369   003A5A                     RB1I2C          equ	14938	;# 
   370   003A5B                     RB2I2C          equ	14939	;# 
   371   003A60                     ANSELC          equ	14944	;# 
   372   003A61                     WPUC            equ	14945	;# 
   373   003A62                     ODCONC          equ	14946	;# 
   374   003A63                     SLRCONC         equ	14947	;# 
   375   003A64                     INLVLC          equ	14948	;# 
   376   003A65                     IOCCP           equ	14949	;# 
   377   003A66                     IOCCN           equ	14950	;# 
   378   003A67                     IOCCF           equ	14951	;# 
   379   003A68                     CCDPC           equ	14952	;# 
   380   003A69                     CCDNC           equ	14953	;# 
   381   003A6A                     RC3I2C          equ	14954	;# 
   382   003A6B                     RC4I2C          equ	14955	;# 
   383   003A81                     WPUE            equ	14977	;# 
   384   003A84                     INLVLE          equ	14980	;# 
   385   003A85                     IOCEP           equ	14981	;# 
   386   003A86                     IOCEN           equ	14982	;# 
   387   003A87                     IOCEF           equ	14983	;# 
   388   003ABE                     CCDCON          equ	15038	;# 
   389   003ABF                     PPSLOCK         equ	15039	;# 
   390   003AC0                     INT0PPS         equ	15040	;# 
   391   003AC1                     INT1PPS         equ	15041	;# 
   392   003AC2                     INT2PPS         equ	15042	;# 
   393   003AC3                     T0CKIPPS        equ	15043	;# 
   394   003AC4                     T1CKIPPS        equ	15044	;# 
   395   003AC5                     T1GPPS          equ	15045	;# 
   396   003AC6                     T3CKIPPS        equ	15046	;# 
   397   003AC7                     T3GPPS          equ	15047	;# 
   398   003AC8                     T5CKIPPS        equ	15048	;# 
   399   003AC9                     T5GPPS          equ	15049	;# 
   400   003ACA                     T2INPPS         equ	15050	;# 
   401   003ACB                     T4INPPS         equ	15051	;# 
   402   003ACC                     T6INPPS         equ	15052	;# 
   403   003ACD                     CCP1PPS         equ	15053	;# 
   404   003ACE                     CCP2PPS         equ	15054	;# 
   405   003ACF                     CCP3PPS         equ	15055	;# 
   406   003AD0                     CCP4PPS         equ	15056	;# 
   407   003AD1                     SMT1WINPPS      equ	15057	;# 
   408   003AD2                     SMT1SIGPPS      equ	15058	;# 
   409   003AD3                     CWG1INPPS       equ	15059	;# 
   410   003AD4                     CWG2INPPS       equ	15060	;# 
   411   003AD5                     CWG3INPPS       equ	15061	;# 
   412   003AD6                     MD1CARLPPS      equ	15062	;# 
   413   003AD7                     MD1CARHPPS      equ	15063	;# 
   414   003AD8                     MD1SRCPPS       equ	15064	;# 
   415   003AD9                     CLCIN0PPS       equ	15065	;# 
   416   003ADA                     CLCIN1PPS       equ	15066	;# 
   417   003ADB                     CLCIN2PPS       equ	15067	;# 
   418   003ADC                     CLCIN3PPS       equ	15068	;# 
   419   003ADD                     ADACTPPS        equ	15069	;# 
   420   003ADE                     SPI1SCKPPS      equ	15070	;# 
   421   003ADF                     SPI1SDIPPS      equ	15071	;# 
   422   003AE0                     SPI1SSPPS       equ	15072	;# 
   423   003AE1                     I2C1SCLPPS      equ	15073	;# 
   424   003AE2                     I2C1SDAPPS      equ	15074	;# 
   425   003AE3                     I2C2SCLPPS      equ	15075	;# 
   426   003AE4                     I2C2SDAPPS      equ	15076	;# 
   427   003AE5                     U1RXPPS         equ	15077	;# 
   428   003AE6                     U1CTSPPS        equ	15078	;# 
   429   003AE8                     U2RXPPS         equ	15080	;# 
   430   003AE9                     U2CTSPPS        equ	15081	;# 
   431   003BC9                     DMA2BUF         equ	15305	;# 
   432   003BCA                     DMA2DCNT        equ	15306	;# 
   433   003BCA                     DMA2DCNTL       equ	15306	;# 
   434   003BCB                     DMA2DCNTH       equ	15307	;# 
   435   003BCC                     DMA2DPTR        equ	15308	;# 
   436   003BCC                     DMA2DPTRL       equ	15308	;# 
   437   003BCD                     DMA2DPTRH       equ	15309	;# 
   438   003BCE                     DMA2DSZ         equ	15310	;# 
   439   003BCE                     DMA2DSZL        equ	15310	;# 
   440   003BCF                     DMA2DSZH        equ	15311	;# 
   441   003BD0                     DMA2DSA         equ	15312	;# 
   442   003BD0                     DMA2DSAL        equ	15312	;# 
   443   003BD1                     DMA2DSAH        equ	15313	;# 
   444   003BD2                     DMA2SCNT        equ	15314	;# 
   445   003BD2                     DMA2SCNTL       equ	15314	;# 
   446   003BD3                     DMA2SCNTH       equ	15315	;# 
   447   003BD4                     DMA2SPTR        equ	15316	;# 
   448   003BD4                     DMA2SPTRL       equ	15316	;# 
   449   003BD5                     DMA2SPTRH       equ	15317	;# 
   450   003BD6                     DMA2SPTRU       equ	15318	;# 
   451   003BD7                     DMA2SSZ         equ	15319	;# 
   452   003BD7                     DMA2SSZL        equ	15319	;# 
   453   003BD8                     DMA2SSZH        equ	15320	;# 
   454   003BD9                     DMA2SSA         equ	15321	;# 
   455   003BD9                     DMA2SSAL        equ	15321	;# 
   456   003BDA                     DMA2SSAH        equ	15322	;# 
   457   003BDB                     DMA2SSAU        equ	15323	;# 
   458   003BDC                     DMA2CON0        equ	15324	;# 
   459   003BDD                     DMA2CON1        equ	15325	;# 
   460   003BDE                     DMA2AIRQ        equ	15326	;# 
   461   003BDF                     DMA2SIRQ        equ	15327	;# 
   462   003BE9                     DMA1BUF         equ	15337	;# 
   463   003BEA                     DMA1DCNT        equ	15338	;# 
   464   003BEA                     DMA1DCNTL       equ	15338	;# 
   465   003BEB                     DMA1DCNTH       equ	15339	;# 
   466   003BEC                     DMA1DPTR        equ	15340	;# 
   467   003BEC                     DMA1DPTRL       equ	15340	;# 
   468   003BED                     DMA1DPTRH       equ	15341	;# 
   469   003BEE                     DMA1DSZ         equ	15342	;# 
   470   003BEE                     DMA1DSZL        equ	15342	;# 
   471   003BEF                     DMA1DSZH        equ	15343	;# 
   472   003BF0                     DMA1DSA         equ	15344	;# 
   473   003BF0                     DMA1DSAL        equ	15344	;# 
   474   003BF1                     DMA1DSAH        equ	15345	;# 
   475   003BF2                     DMA1SCNT        equ	15346	;# 
   476   003BF2                     DMA1SCNTL       equ	15346	;# 
   477   003BF3                     DMA1SCNTH       equ	15347	;# 
   478   003BF4                     DMA1SPTR        equ	15348	;# 
   479   003BF4                     DMA1SPTRL       equ	15348	;# 
   480   003BF5                     DMA1SPTRH       equ	15349	;# 
   481   003BF6                     DMA1SPTRU       equ	15350	;# 
   482   003BF7                     DMA1SSZ         equ	15351	;# 
   483   003BF7                     DMA1SSZL        equ	15351	;# 
   484   003BF8                     DMA1SSZH        equ	15352	;# 
   485   003BF9                     DMA1SSA         equ	15353	;# 
   486   003BF9                     DMA1SSAL        equ	15353	;# 
   487   003BFA                     DMA1SSAH        equ	15354	;# 
   488   003BFB                     DMA1SSAU        equ	15355	;# 
   489   003BFC                     DMA1CON0        equ	15356	;# 
   490   003BFD                     DMA1CON1        equ	15357	;# 
   491   003BFE                     DMA1AIRQ        equ	15358	;# 
   492   003BFF                     DMA1SIRQ        equ	15359	;# 
   493   003C56                     CLC4CON         equ	15446	;# 
   494   003C57                     CLC4POL         equ	15447	;# 
   495   003C58                     CLC4SEL0        equ	15448	;# 
   496   003C59                     CLC4SEL1        equ	15449	;# 
   497   003C5A                     CLC4SEL2        equ	15450	;# 
   498   003C5B                     CLC4SEL3        equ	15451	;# 
   499   003C5C                     CLC4GLS0        equ	15452	;# 
   500   003C5D                     CLC4GLS1        equ	15453	;# 
   501   003C5E                     CLC4GLS2        equ	15454	;# 
   502   003C5F                     CLC4GLS3        equ	15455	;# 
   503   003C60                     CLC3CON         equ	15456	;# 
   504   003C61                     CLC3POL         equ	15457	;# 
   505   003C62                     CLC3SEL0        equ	15458	;# 
   506   003C63                     CLC3SEL1        equ	15459	;# 
   507   003C64                     CLC3SEL2        equ	15460	;# 
   508   003C65                     CLC3SEL3        equ	15461	;# 
   509   003C66                     CLC3GLS0        equ	15462	;# 
   510   003C67                     CLC3GLS1        equ	15463	;# 
   511   003C68                     CLC3GLS2        equ	15464	;# 
   512   003C69                     CLC3GLS3        equ	15465	;# 
   513   003C6A                     CLC2CON         equ	15466	;# 
   514   003C6B                     CLC2POL         equ	15467	;# 
   515   003C6C                     CLC2SEL0        equ	15468	;# 
   516   003C6D                     CLC2SEL1        equ	15469	;# 
   517   003C6E                     CLC2SEL2        equ	15470	;# 
   518   003C6F                     CLC2SEL3        equ	15471	;# 
   519   003C70                     CLC2GLS0        equ	15472	;# 
   520   003C71                     CLC2GLS1        equ	15473	;# 
   521   003C72                     CLC2GLS2        equ	15474	;# 
   522   003C73                     CLC2GLS3        equ	15475	;# 
   523   003C74                     CLC1CON         equ	15476	;# 
   524   003C75                     CLC1POL         equ	15477	;# 
   525   003C76                     CLC1SEL0        equ	15478	;# 
   526   003C77                     CLC1SEL1        equ	15479	;# 
   527   003C78                     CLC1SEL2        equ	15480	;# 
   528   003C79                     CLC1SEL3        equ	15481	;# 
   529   003C7A                     CLC1GLS0        equ	15482	;# 
   530   003C7B                     CLC1GLS1        equ	15483	;# 
   531   003C7C                     CLC1GLS2        equ	15484	;# 
   532   003C7D                     CLC1GLS3        equ	15485	;# 
   533   003C7E                     CLCDATA0        equ	15486	;# 
   534   003CE5                     CLKRCON         equ	15589	;# 
   535   003CE6                     CLKRCLK         equ	15590	;# 
   536   003CFA                     MD1CON0         equ	15610	;# 
   537   003CFB                     MD1CON1         equ	15611	;# 
   538   003CFC                     MD1SRC          equ	15612	;# 
   539   003CFD                     MD1CARL         equ	15613	;# 
   540   003CFE                     MD1CARH         equ	15614	;# 
   541   003D10                     SPI1RXB         equ	15632	;# 
   542   003D11                     SPI1TXB         equ	15633	;# 
   543   003D12                     SPI1TCNT        equ	15634	;# 
   544   003D12                     SPI1TCNTL       equ	15634	;# 
   545   003D13                     SPI1TCNTH       equ	15635	;# 
   546   003D14                     SPI1CON0        equ	15636	;# 
   547   003D15                     SPI1CON1        equ	15637	;# 
   548   003D16                     SPI1CON2        equ	15638	;# 
   549   003D17                     SPI1STATUS      equ	15639	;# 
   550   003D18                     SPI1TWIDTH      equ	15640	;# 
   551   003D19                     SPI1BAUD        equ	15641	;# 
   552   003D1A                     SPI1INTF        equ	15642	;# 
   553   003D1B                     SPI1INTE        equ	15643	;# 
   554   003D1C                     SPI1CLK         equ	15644	;# 
   555   003D54                     I2C2RXB         equ	15700	;# 
   556   003D55                     I2C2TXB         equ	15701	;# 
   557   003D56                     I2C2CNT         equ	15702	;# 
   558   003D57                     I2C2ADB0        equ	15703	;# 
   559   003D58                     I2C2ADB1        equ	15704	;# 
   560   003D59                     I2C2ADR0        equ	15705	;# 
   561   003D5A                     I2C2ADR1        equ	15706	;# 
   562   003D5B                     I2C2ADR2        equ	15707	;# 
   563   003D5C                     I2C2ADR3        equ	15708	;# 
   564   003D5D                     I2C2CON0        equ	15709	;# 
   565   003D5E                     I2C2CON1        equ	15710	;# 
   566   003D5F                     I2C2CON2        equ	15711	;# 
   567   003D60                     I2C2ERR         equ	15712	;# 
   568   003D61                     I2C2STAT0       equ	15713	;# 
   569   003D62                     I2C2STAT1       equ	15714	;# 
   570   003D63                     I2C2PIR         equ	15715	;# 
   571   003D64                     I2C2PIE         equ	15716	;# 
   572   003D65                     I2C2CLK         equ	15717	;# 
   573   003D66                     I2C2BTO         equ	15718	;# 
   574   003D6A                     I2C1RXB         equ	15722	;# 
   575   003D6B                     I2C1TXB         equ	15723	;# 
   576   003D6C                     I2C1CNT         equ	15724	;# 
   577   003D6D                     I2C1ADB0        equ	15725	;# 
   578   003D6E                     I2C1ADB1        equ	15726	;# 
   579   003D6F                     I2C1ADR0        equ	15727	;# 
   580   003D70                     I2C1ADR1        equ	15728	;# 
   581   003D71                     I2C1ADR2        equ	15729	;# 
   582   003D72                     I2C1ADR3        equ	15730	;# 
   583   003D73                     I2C1CON0        equ	15731	;# 
   584   003D74                     I2C1CON1        equ	15732	;# 
   585   003D75                     I2C1CON2        equ	15733	;# 
   586   003D76                     I2C1ERR         equ	15734	;# 
   587   003D77                     I2C1STAT0       equ	15735	;# 
   588   003D78                     I2C1STAT1       equ	15736	;# 
   589   003D79                     I2C1PIR         equ	15737	;# 
   590   003D7A                     I2C1PIE         equ	15738	;# 
   591   003D7B                     I2C1CLK         equ	15739	;# 
   592   003D7C                     I2C1BTO         equ	15740	;# 
   593   003DD0                     U2RXB           equ	15824	;# 
   594   003DD0                     U2RXBL          equ	15824	;# 
   595   003DD2                     U2TXB           equ	15826	;# 
   596   003DD2                     U2TXBL          equ	15826	;# 
   597   003DD4                     U2P1            equ	15828	;# 
   598   003DD4                     U2P1L           equ	15828	;# 
   599   003DD6                     U2P2            equ	15830	;# 
   600   003DD6                     U2P2L           equ	15830	;# 
   601   003DD8                     U2P3            equ	15832	;# 
   602   003DD8                     U2P3L           equ	15832	;# 
   603   003DDA                     U2CON0          equ	15834	;# 
   604   003DDB                     U2CON1          equ	15835	;# 
   605   003DDC                     U2CON2          equ	15836	;# 
   606   003DDD                     U2BRG           equ	15837	;# 
   607   003DDD                     U2BRGL          equ	15837	;# 
   608   003DDE                     U2BRGH          equ	15838	;# 
   609   003DDF                     U2FIFO          equ	15839	;# 
   610   003DE0                     U2UIR           equ	15840	;# 
   611   003DE1                     U2ERRIR         equ	15841	;# 
   612   003DE2                     U2ERRIE         equ	15842	;# 
   613   003DE8                     U1RXB           equ	15848	;# 
   614   003DE8                     U1RXBL          equ	15848	;# 
   615   003DE9                     U1RXCHK         equ	15849	;# 
   616   003DEA                     U1TXB           equ	15850	;# 
   617   003DEA                     U1TXBL          equ	15850	;# 
   618   003DEB                     U1TXCHK         equ	15851	;# 
   619   003DEC                     U1P1            equ	15852	;# 
   620   003DEC                     U1P1L           equ	15852	;# 
   621   003DED                     U1P1H           equ	15853	;# 
   622   003DEE                     U1P2            equ	15854	;# 
   623   003DEE                     U1P2L           equ	15854	;# 
   624   003DEF                     U1P2H           equ	15855	;# 
   625   003DF0                     U1P3            equ	15856	;# 
   626   003DF0                     U1P3L           equ	15856	;# 
   627   003DF1                     U1P3H           equ	15857	;# 
   628   003DF2                     U1CON0          equ	15858	;# 
   629   003DF3                     U1CON1          equ	15859	;# 
   630   003DF4                     U1CON2          equ	15860	;# 
   631   003DF5                     U1BRG           equ	15861	;# 
   632   003DF5                     U1BRGL          equ	15861	;# 
   633   003DF6                     U1BRGH          equ	15862	;# 
   634   003DF7                     U1FIFO          equ	15863	;# 
   635   003DF8                     U1UIR           equ	15864	;# 
   636   003DF9                     U1ERRIR         equ	15865	;# 
   637   003DFA                     U1ERRIE         equ	15866	;# 
   638   003E9C                     DAC1CON1        equ	16028	;# 
   639   003E9E                     DAC1CON0        equ	16030	;# 
   640   003EB8                     CM2CON0         equ	16056	;# 
   641   003EB9                     CM2CON1         equ	16057	;# 
   642   003EBA                     CM2NCH          equ	16058	;# 
   643   003EBB                     CM2PCH          equ	16059	;# 
   644   003EBC                     CM1CON0         equ	16060	;# 
   645   003EBD                     CM1CON1         equ	16061	;# 
   646   003EBE                     CM1NCH          equ	16062	;# 
   647   003EBF                     CM1PCH          equ	16063	;# 
   648   003EC0                     CMOUT           equ	16064	;# 
   649   003EC1                     FVRCON          equ	16065	;# 
   650   003EC3                     ZCDCON          equ	16067	;# 
   651   003EC9                     HLVDCON0        equ	16073	;# 
   652   003ECA                     HLVDCON1        equ	16074	;# 
   653   003ED7                     ADCP            equ	16087	;# 
   654   003EDE                     ADLTH           equ	16094	;# 
   655   003EDE                     ADLTHL          equ	16094	;# 
   656   003EDF                     ADLTHH          equ	16095	;# 
   657   003EE0                     ADUTH           equ	16096	;# 
   658   003EE0                     ADUTHL          equ	16096	;# 
   659   003EE1                     ADUTHH          equ	16097	;# 
   660   003EE2                     ADERR           equ	16098	;# 
   661   003EE2                     ADERRL          equ	16098	;# 
   662   003EE3                     ADERRH          equ	16099	;# 
   663   003EE4                     ADSTPT          equ	16100	;# 
   664   003EE4                     ADSTPTL         equ	16100	;# 
   665   003EE5                     ADSTPTH         equ	16101	;# 
   666   003EE6                     ADFLTR          equ	16102	;# 
   667   003EE6                     ADFLTRL         equ	16102	;# 
   668   003EE7                     ADFLTRH         equ	16103	;# 
   669   003EE8                     ADACC           equ	16104	;# 
   670   003EE8                     ADACCL          equ	16104	;# 
   671   003EE9                     ADACCH          equ	16105	;# 
   672   003EEA                     ADACCU          equ	16106	;# 
   673   003EEB                     ADCNT           equ	16107	;# 
   674   003EEC                     ADRPT           equ	16108	;# 
   675   003EED                     ADPREV          equ	16109	;# 
   676   003EED                     ADPREVL         equ	16109	;# 
   677   003EEE                     ADPREVH         equ	16110	;# 
   678   003EEF                     ADRES           equ	16111	;# 
   679   003EEF                     ADRESL          equ	16111	;# 
   680   003EF0                     ADRESH          equ	16112	;# 
   681   003EF1                     ADPCH           equ	16113	;# 
   682   003EF3                     ADACQ           equ	16115	;# 
   683   003EF3                     ADACQL          equ	16115	;# 
   684   003EF4                     ADACQH          equ	16116	;# 
   685   003EF5                     ADCAP           equ	16117	;# 
   686   003EF6                     ADPRE           equ	16118	;# 
   687   003EF6                     ADPREL          equ	16118	;# 
   688   003EF7                     ADPREH          equ	16119	;# 
   689   003EF8                     ADCON0          equ	16120	;# 
   690   003EF9                     ADCON1          equ	16121	;# 
   691   003EFA                     ADCON2          equ	16122	;# 
   692   003EFB                     ADCON3          equ	16123	;# 
   693   003EFC                     ADSTAT          equ	16124	;# 
   694   003EFD                     ADREF           equ	16125	;# 
   695   003EFE                     ADACT           equ	16126	;# 
   696   003EFF                     ADCLK           equ	16127	;# 
   697   003F12                     SMT1TMR         equ	16146	;# 
   698   003F12                     SMT1TMRL        equ	16146	;# 
   699   003F13                     SMT1TMRH        equ	16147	;# 
   700   003F14                     SMT1TMRU        equ	16148	;# 
   701   003F15                     SMT1CPR         equ	16149	;# 
   702   003F15                     SMT1CPRL        equ	16149	;# 
   703   003F16                     SMT1CPRH        equ	16150	;# 
   704   003F17                     SMT1CPRU        equ	16151	;# 
   705   003F18                     SMT1CPW         equ	16152	;# 
   706   003F18                     SMT1CPWL        equ	16152	;# 
   707   003F19                     SMT1CPWH        equ	16153	;# 
   708   003F1A                     SMT1CPWU        equ	16154	;# 
   709   003F1B                     SMT1PR          equ	16155	;# 
   710   003F1B                     SMT1PRL         equ	16155	;# 
   711   003F1C                     SMT1PRH         equ	16156	;# 
   712   003F1D                     SMT1PRU         equ	16157	;# 
   713   003F1E                     SMT1CON0        equ	16158	;# 
   714   003F1F                     SMT1CON1        equ	16159	;# 
   715   003F20                     SMT1STAT        equ	16160	;# 
   716   003F21                     SMT1CLK         equ	16161	;# 
   717   003F22                     SMT1SIG         equ	16162	;# 
   718   003F23                     SMT1WIN         equ	16163	;# 
   719   003F38                     NCO1ACC         equ	16184	;# 
   720   003F38                     NCO1ACCL        equ	16184	;# 
   721   003F39                     NCO1ACCH        equ	16185	;# 
   722   003F3A                     NCO1ACCU        equ	16186	;# 
   723   003F3B                     NCO1INC         equ	16187	;# 
   724   003F3B                     NCO1INCL        equ	16187	;# 
   725   003F3C                     NCO1INCH        equ	16188	;# 
   726   003F3D                     NCO1INCU        equ	16189	;# 
   727   003F3E                     NCO1CON         equ	16190	;# 
   728   003F3F                     NCO1CLK         equ	16191	;# 
   729   003F40                     CWG3CLK         equ	16192	;# 
   730   003F40                     CWG3CLKCON      equ	16192	;# 
   731   003F41                     CWG3ISM         equ	16193	;# 
   732   003F41                     CWG3DAT         equ	16193	;# 
   733   003F42                     CWG3DBR         equ	16194	;# 
   734   003F43                     CWG3DBF         equ	16195	;# 
   735   003F44                     CWG3CON0        equ	16196	;# 
   736   003F45                     CWG3CON1        equ	16197	;# 
   737   003F46                     CWG3AS0         equ	16198	;# 
   738   003F47                     CWG3AS1         equ	16199	;# 
   739   003F48                     CWG3STR         equ	16200	;# 
   740   003F49                     CWG2CLK         equ	16201	;# 
   741   003F49                     CWG2CLKCON      equ	16201	;# 
   742   003F4A                     CWG2ISM         equ	16202	;# 
   743   003F4A                     CWG2DAT         equ	16202	;# 
   744   003F4B                     CWG2DBR         equ	16203	;# 
   745   003F4C                     CWG2DBF         equ	16204	;# 
   746   003F4D                     CWG2CON0        equ	16205	;# 
   747   003F4E                     CWG2CON1        equ	16206	;# 
   748   003F4F                     CWG2AS0         equ	16207	;# 
   749   003F50                     CWG2AS1         equ	16208	;# 
   750   003F51                     CWG2STR         equ	16209	;# 
   751   003F52                     CWG1CLK         equ	16210	;# 
   752   003F52                     CWG1CLKCON      equ	16210	;# 
   753   003F53                     CWG1ISM         equ	16211	;# 
   754   003F53                     CWG1DAT         equ	16211	;# 
   755   003F54                     CWG1DBR         equ	16212	;# 
   756   003F55                     CWG1DBF         equ	16213	;# 
   757   003F56                     CWG1CON0        equ	16214	;# 
   758   003F57                     CWG1CON1        equ	16215	;# 
   759   003F58                     CWG1AS0         equ	16216	;# 
   760   003F59                     CWG1AS1         equ	16217	;# 
   761   003F5A                     CWG1STR         equ	16218	;# 
   762   003F5E                     CCPTMRS0        equ	16222	;# 
   763   003F5F                     CCPTMRS1        equ	16223	;# 
   764   003F60                     PWM8DC          equ	16224	;# 
   765   003F60                     PWM8DCL         equ	16224	;# 
   766   003F61                     PWM8DCH         equ	16225	;# 
   767   003F62                     PWM8CON         equ	16226	;# 
   768   003F64                     PWM7DC          equ	16228	;# 
   769   003F64                     PWM7DCL         equ	16228	;# 
   770   003F65                     PWM7DCH         equ	16229	;# 
   771   003F66                     PWM7CON         equ	16230	;# 
   772   003F68                     PWM6DC          equ	16232	;# 
   773   003F68                     PWM6DCL         equ	16232	;# 
   774   003F69                     PWM6DCH         equ	16233	;# 
   775   003F6A                     PWM6CON         equ	16234	;# 
   776   003F6C                     PWM5DC          equ	16236	;# 
   777   003F6C                     PWM5DCL         equ	16236	;# 
   778   003F6D                     PWM5DCH         equ	16237	;# 
   779   003F6E                     PWM5CON         equ	16238	;# 
   780   003F70                     CCPR4           equ	16240	;# 
   781   003F70                     CCPR4L          equ	16240	;# 
   782   003F71                     CCPR4H          equ	16241	;# 
   783   003F72                     CCP4CON         equ	16242	;# 
   784   003F73                     CCP4CAP         equ	16243	;# 
   785   003F74                     CCPR3           equ	16244	;# 
   786   003F74                     CCPR3L          equ	16244	;# 
   787   003F75                     CCPR3H          equ	16245	;# 
   788   003F76                     CCP3CON         equ	16246	;# 
   789   003F77                     CCP3CAP         equ	16247	;# 
   790   003F78                     CCPR2           equ	16248	;# 
   791   003F78                     CCPR2L          equ	16248	;# 
   792   003F79                     CCPR2H          equ	16249	;# 
   793   003F7A                     CCP2CON         equ	16250	;# 
   794   003F7B                     CCP2CAP         equ	16251	;# 
   795   003F7C                     CCPR1           equ	16252	;# 
   796   003F7C                     CCPR1L          equ	16252	;# 
   797   003F7D                     CCPR1H          equ	16253	;# 
   798   003F7E                     CCP1CON         equ	16254	;# 
   799   003F7F                     CCP1CAP         equ	16255	;# 
   800   003F92                     T6TMR           equ	16274	;# 
   801   003F92                     TMR6            equ	16274	;# 
   802   003F93                     T6PR            equ	16275	;# 
   803   003F93                     PR6             equ	16275	;# 
   804   003F94                     T6CON           equ	16276	;# 
   805   003F95                     T6HLT           equ	16277	;# 
   806   003F96                     T6CLKCON        equ	16278	;# 
   807   003F96                     T6CLK           equ	16278	;# 
   808   003F97                     T6RST           equ	16279	;# 
   809   003F98                     TMR5            equ	16280	;# 
   810   003F98                     TMR5L           equ	16280	;# 
   811   003F99                     TMR5H           equ	16281	;# 
   812   003F9A                     T5CON           equ	16282	;# 
   813   003F9A                     TMR5CON         equ	16282	;# 
   814   003F9B                     T5GCON          equ	16283	;# 
   815   003F9B                     TMR5GCON        equ	16283	;# 
   816   003F9C                     T5GATE          equ	16284	;# 
   817   003F9C                     TMR5GATE        equ	16284	;# 
   818   003F9D                     T5CLK           equ	16285	;# 
   819   003F9D                     TMR5CLK         equ	16285	;# 
   820   003F9D                     PR5             equ	16285	;# 
   821   003F9E                     T4TMR           equ	16286	;# 
   822   003F9E                     TMR4            equ	16286	;# 
   823   003F9F                     T4PR            equ	16287	;# 
   824   003F9F                     PR4             equ	16287	;# 
   825   003FA0                     T4CON           equ	16288	;# 
   826   003FA1                     T4HLT           equ	16289	;# 
   827   003FA2                     T4CLKCON        equ	16290	;# 
   828   003FA2                     T4CLK           equ	16290	;# 
   829   003FA3                     T4RST           equ	16291	;# 
   830   003FA4                     TMR3            equ	16292	;# 
   831   003FA4                     TMR3L           equ	16292	;# 
   832   003FA5                     TMR3H           equ	16293	;# 
   833   003FA6                     T3CON           equ	16294	;# 
   834   003FA6                     TMR3CON         equ	16294	;# 
   835   003FA7                     T3GCON          equ	16295	;# 
   836   003FA7                     TMR3GCON        equ	16295	;# 
   837   003FA8                     T3GATE          equ	16296	;# 
   838   003FA8                     TMR3GATE        equ	16296	;# 
   839   003FA9                     T3CLK           equ	16297	;# 
   840   003FA9                     TMR3CLK         equ	16297	;# 
   841   003FA9                     PR3             equ	16297	;# 
   842   003FAA                     T2TMR           equ	16298	;# 
   843   003FAA                     TMR2            equ	16298	;# 
   844   003FAB                     T2PR            equ	16299	;# 
   845   003FAB                     PR2             equ	16299	;# 
   846   003FAC                     T2CON           equ	16300	;# 
   847   003FAD                     T2HLT           equ	16301	;# 
   848   003FAE                     T2CLKCON        equ	16302	;# 
   849   003FAE                     T2CLK           equ	16302	;# 
   850   003FAF                     T2RST           equ	16303	;# 
   851   003FB0                     TMR1            equ	16304	;# 
   852   003FB0                     TMR1L           equ	16304	;# 
   853   003FB1                     TMR1H           equ	16305	;# 
   854   003FB2                     T1CON           equ	16306	;# 
   855   003FB2                     TMR1CON         equ	16306	;# 
   856   003FB3                     T1GCON          equ	16307	;# 
   857   003FB3                     TMR1GCON        equ	16307	;# 
   858   003FB4                     T1GATE          equ	16308	;# 
   859   003FB4                     TMR1GATE        equ	16308	;# 
   860   003FB5                     T1CLK           equ	16309	;# 
   861   003FB5                     TMR1CLK         equ	16309	;# 
   862   003FB5                     PR1             equ	16309	;# 
   863   003FB6                     TMR0L           equ	16310	;# 
   864   003FB6                     TMR0            equ	16310	;# 
   865   003FB7                     TMR0H           equ	16311	;# 
   866   003FB7                     PR0             equ	16311	;# 
   867   003FB8                     T0CON0          equ	16312	;# 
   868   003FB9                     T0CON1          equ	16313	;# 
   869   003FBA                     LATA            equ	16314	;# 
   870   003FBB                     LATB            equ	16315	;# 
   871   003FBC                     LATC            equ	16316	;# 
   872   003FC2                     TRISA           equ	16322	;# 
   873   003FC3                     TRISB           equ	16323	;# 
   874   003FC4                     TRISC           equ	16324	;# 
   875   003FCA                     PORTA           equ	16330	;# 
   876   003FCB                     PORTB           equ	16331	;# 
   877   003FCC                     PORTC           equ	16332	;# 
   878   003FCE                     PORTE           equ	16334	;# 
   879   003FD2                     INTCON0         equ	16338	;# 
   880   003FD3                     INTCON1         equ	16339	;# 
   881   003FD4                     IVTLOCK         equ	16340	;# 
   882   003FD5                     IVTBASE         equ	16341	;# 
   883   003FD5                     IVTBASEL        equ	16341	;# 
   884   003FD6                     IVTBASEH        equ	16342	;# 
   885   003FD7                     IVTBASEU        equ	16343	;# 
   886   003FD8                     STATUS          equ	16344	;# 
   887   003FD9                     FSR2            equ	16345	;# 
   888   003FD9                     FSR2L           equ	16345	;# 
   889   003FDA                     FSR2H           equ	16346	;# 
   890   003FDB                     PLUSW2          equ	16347	;# 
   891   003FDC                     PREINC2         equ	16348	;# 
   892   003FDD                     POSTDEC2        equ	16349	;# 
   893   003FDE                     POSTINC2        equ	16350	;# 
   894   003FDF                     INDF2           equ	16351	;# 
   895   003FE0                     BSR             equ	16352	;# 
   896   003FE1                     FSR1            equ	16353	;# 
   897   003FE1                     FSR1L           equ	16353	;# 
   898   003FE2                     FSR1H           equ	16354	;# 
   899   003FE3                     PLUSW1          equ	16355	;# 
   900   003FE4                     PREINC1         equ	16356	;# 
   901   003FE5                     POSTDEC1        equ	16357	;# 
   902   003FE6                     POSTINC1        equ	16358	;# 
   903   003FE7                     INDF1           equ	16359	;# 
   904   003FE8                     WREG            equ	16360	;# 
   905   003FE9                     FSR0            equ	16361	;# 
   906   003FE9                     FSR0L           equ	16361	;# 
   907   003FEA                     FSR0H           equ	16362	;# 
   908   003FEB                     PLUSW0          equ	16363	;# 
   909   003FEC                     PREINC0         equ	16364	;# 
   910   003FED                     POSTDEC0        equ	16365	;# 
   911   003FEE                     POSTINC0        equ	16366	;# 
   912   003FEF                     INDF0           equ	16367	;# 
   913   003FF0                     PCON0           equ	16368	;# 
   914   003FF1                     PCON1           equ	16369	;# 
   915   003FF3                     PROD            equ	16371	;# 
   916   003FF3                     PRODL           equ	16371	;# 
   917   003FF4                     PRODH           equ	16372	;# 
   918   003FF5                     TABLAT          equ	16373	;# 
   919   003FF6                     TBLPTR          equ	16374	;# 
   920   003FF6                     TBLPTRL         equ	16374	;# 
   921   003FF7                     TBLPTRH         equ	16375	;# 
   922   003FF8                     TBLPTRU         equ	16376	;# 
   923   003FF9                     PCLAT           equ	16377	;# 
   924   003FF9                     PCL             equ	16377	;# 
   925   003FFA                     PCLATH          equ	16378	;# 
   926   003FFB                     PCLATU          equ	16379	;# 
   927   003FFC                     STKPTR          equ	16380	;# 
   928   003FFD                     TOS             equ	16381	;# 
   929   003FFD                     TOSL            equ	16381	;# 
   930   003FFE                     TOSH            equ	16382	;# 
   931   003FFF                     TOSU            equ	16383	;# 
   932   003880                     STATUS_CSHAD    equ	14464	;# 
   933   003881                     WREG_CSHAD      equ	14465	;# 
   934   003882                     BSR_CSHAD       equ	14466	;# 
   935   003883                     SHADCON         equ	14467	;# 
   936   003884                     STATUS_SHAD     equ	14468	;# 
   937   003885                     WREG_SHAD       equ	14469	;# 
   938   003886                     BSR_SHAD        equ	14470	;# 
   939   003887                     PCLATH_SHAD     equ	14471	;# 
   940   003888                     PCLATU_SHAD     equ	14472	;# 
   941   003889                     FSR0SH          equ	14473	;# 
   942   003889                     FSR0L_SHAD      equ	14473	;# 
   943   00388A                     FSR0H_SHAD      equ	14474	;# 
   944   00388B                     FSR1SH          equ	14475	;# 
   945   00388B                     FSR1L_SHAD      equ	14475	;# 
   946   00388C                     FSR1H_SHAD      equ	14476	;# 
   947   00388D                     FSR2SH          equ	14477	;# 
   948   00388D                     FSR2L_SHAD      equ	14477	;# 
   949   00388E                     FSR2H_SHAD      equ	14478	;# 
   950   00388F                     PRODSH          equ	14479	;# 
   951   00388F                     PRODL_SHAD      equ	14479	;# 
   952   003890                     PRODH_SHAD      equ	14480	;# 
   953   00389D                     IVTADL          equ	14493	;# 
   954   00389E                     IVTADH          equ	14494	;# 
   955   00389F                     IVTADU          equ	14495	;# 
   956   00395B                     WDTCON0         equ	14683	;# 
   957   00395C                     WDTCON1         equ	14684	;# 
   958   00395D                     WDTPSL          equ	14685	;# 
   959   00395E                     WDTPSH          equ	14686	;# 
   960   00395F                     WDTTMR          equ	14687	;# 
   961   003960                     CRCDATA         equ	14688	;# 
   962   003960                     CRCDATL         equ	14688	;# 
   963   003961                     CRCDATH         equ	14689	;# 
   964   003962                     CRCACC          equ	14690	;# 
   965   003962                     CRCACCL         equ	14690	;# 
   966   003963                     CRCACCH         equ	14691	;# 
   967   003964                     CRCSHFT         equ	14692	;# 
   968   003964                     CRCSHIFTL       equ	14692	;# 
   969   003965                     CRCSHIFTH       equ	14693	;# 
   970   003966                     CRCXOR          equ	14694	;# 
   971   003966                     CRCXORL         equ	14694	;# 
   972   003967                     CRCXORH         equ	14695	;# 
   973   003968                     CRCCON0         equ	14696	;# 
   974   003969                     CRCCON1         equ	14697	;# 
   975   003976                     SCANLADR        equ	14710	;# 
   976   003976                     SCANLADRL       equ	14710	;# 
   977   003977                     SCANLADRH       equ	14711	;# 
   978   003978                     SCANLADRU       equ	14712	;# 
   979   003979                     SCANHADR        equ	14713	;# 
   980   003979                     SCANHADRL       equ	14713	;# 
   981   00397A                     SCANHADRH       equ	14714	;# 
   982   00397B                     SCANHADRU       equ	14715	;# 
   983   00397C                     SCANCON0        equ	14716	;# 
   984   00397D                     SCANTRIG        equ	14717	;# 
   985   003980                     IPR0            equ	14720	;# 
   986   003981                     IPR1            equ	14721	;# 
   987   003982                     IPR2            equ	14722	;# 
   988   003983                     IPR3            equ	14723	;# 
   989   003984                     IPR4            equ	14724	;# 
   990   003985                     IPR5            equ	14725	;# 
   991   003986                     IPR6            equ	14726	;# 
   992   003987                     IPR7            equ	14727	;# 
   993   003988                     IPR8            equ	14728	;# 
   994   003989                     IPR9            equ	14729	;# 
   995   00398A                     IPR10           equ	14730	;# 
   996   003990                     PIE0            equ	14736	;# 
   997   003991                     PIE1            equ	14737	;# 
   998   003992                     PIE2            equ	14738	;# 
   999   003993                     PIE3            equ	14739	;# 
  1000   003994                     PIE4            equ	14740	;# 
  1001   003995                     PIE5            equ	14741	;# 
  1002   003996                     PIE6            equ	14742	;# 
  1003   003997                     PIE7            equ	14743	;# 
  1004   003998                     PIE8            equ	14744	;# 
  1005   003999                     PIE9            equ	14745	;# 
  1006   00399A                     PIE10           equ	14746	;# 
  1007   0039A0                     PIR0            equ	14752	;# 
  1008   0039A1                     PIR1            equ	14753	;# 
  1009   0039A2                     PIR2            equ	14754	;# 
  1010   0039A3                     PIR3            equ	14755	;# 
  1011   0039A4                     PIR4            equ	14756	;# 
  1012   0039A5                     PIR5            equ	14757	;# 
  1013   0039A6                     PIR6            equ	14758	;# 
  1014   0039A7                     PIR7            equ	14759	;# 
  1015   0039A8                     PIR8            equ	14760	;# 
  1016   0039A9                     PIR9            equ	14761	;# 
  1017   0039AA                     PIR10           equ	14762	;# 
  1018   0039C0                     PMD0            equ	14784	;# 
  1019   0039C1                     PMD1            equ	14785	;# 
  1020   0039C2                     PMD2            equ	14786	;# 
  1021   0039C3                     PMD3            equ	14787	;# 
  1022   0039C4                     PMD4            equ	14788	;# 
  1023   0039C5                     PMD5            equ	14789	;# 
  1024   0039C6                     PMD6            equ	14790	;# 
  1025   0039C7                     PMD7            equ	14791	;# 
  1026   0039D0                     BORCON          equ	14800	;# 
  1027   0039D1                     VREGCON         equ	14801	;# 
  1028   0039D8                     CPUDOZE         equ	14808	;# 
  1029   0039D9                     OSCCON1         equ	14809	;# 
  1030   0039DA                     OSCCON2         equ	14810	;# 
  1031   0039DB                     OSCCON3         equ	14811	;# 
  1032   0039DC                     OSCSTAT         equ	14812	;# 
  1033   0039DC                     OSCSTAT1        equ	14812	;# 
  1034   0039DD                     OSCEN           equ	14813	;# 
  1035   0039DE                     OSCTUNE         equ	14814	;# 
  1036   0039DF                     OSCFRQ          equ	14815	;# 
  1037   0039E0                     NVMADRL         equ	14816	;# 
  1038   0039E1                     NVMADRH         equ	14817	;# 
  1039   0039E3                     NVMDAT          equ	14819	;# 
  1040   0039E5                     NVMCON1         equ	14821	;# 
  1041   0039E6                     NVMCON2         equ	14822	;# 
  1042   0039EF                     PRLOCK          equ	14831	;# 
  1043   0039F1                     ISRPR           equ	14833	;# 
  1044   0039F2                     MAINPR          equ	14834	;# 
  1045   0039F3                     DMA1PR          equ	14835	;# 
  1046   0039F4                     DMA2PR          equ	14836	;# 
  1047   0039F7                     SCANPR          equ	14839	;# 
  1048   003A00                     RA0PPS          equ	14848	;# 
  1049   003A01                     RA1PPS          equ	14849	;# 
  1050   003A02                     RA2PPS          equ	14850	;# 
  1051   003A03                     RA3PPS          equ	14851	;# 
  1052   003A04                     RA4PPS          equ	14852	;# 
  1053   003A05                     RA5PPS          equ	14853	;# 
  1054   003A06                     RA6PPS          equ	14854	;# 
  1055   003A07                     RA7PPS          equ	14855	;# 
  1056   003A08                     RB0PPS          equ	14856	;# 
  1057   003A09                     RB1PPS          equ	14857	;# 
  1058   003A0A                     RB2PPS          equ	14858	;# 
  1059   003A0B                     RB3PPS          equ	14859	;# 
  1060   003A0C                     RB4PPS          equ	14860	;# 
  1061   003A0D                     RB5PPS          equ	14861	;# 
  1062   003A0E                     RB6PPS          equ	14862	;# 
  1063   003A0F                     RB7PPS          equ	14863	;# 
  1064   003A10                     RC0PPS          equ	14864	;# 
  1065   003A11                     RC1PPS          equ	14865	;# 
  1066   003A12                     RC2PPS          equ	14866	;# 
  1067   003A13                     RC3PPS          equ	14867	;# 
  1068   003A14                     RC4PPS          equ	14868	;# 
  1069   003A15                     RC5PPS          equ	14869	;# 
  1070   003A16                     RC6PPS          equ	14870	;# 
  1071   003A17                     RC7PPS          equ	14871	;# 
  1072   003A40                     ANSELA          equ	14912	;# 
  1073   003A41                     WPUA            equ	14913	;# 
  1074   003A42                     ODCONA          equ	14914	;# 
  1075   003A43                     SLRCONA         equ	14915	;# 
  1076   003A44                     INLVLA          equ	14916	;# 
  1077   003A45                     IOCAP           equ	14917	;# 
  1078   003A46                     IOCAN           equ	14918	;# 
  1079   003A47                     IOCAF           equ	14919	;# 
  1080   003A48                     CCDPA           equ	14920	;# 
  1081   003A49                     CCDNA           equ	14921	;# 
  1082   003A50                     ANSELB          equ	14928	;# 
  1083   003A51                     WPUB            equ	14929	;# 
  1084   003A52                     ODCONB          equ	14930	;# 
  1085   003A53                     SLRCONB         equ	14931	;# 
  1086   003A54                     INLVLB          equ	14932	;# 
  1087   003A55                     IOCBP           equ	14933	;# 
  1088   003A56                     IOCBN           equ	14934	;# 
  1089   003A57                     IOCBF           equ	14935	;# 
  1090   003A58                     CCDPB           equ	14936	;# 
  1091   003A59                     CCDNB           equ	14937	;# 
  1092   003A5A                     RB1I2C          equ	14938	;# 
  1093   003A5B                     RB2I2C          equ	14939	;# 
  1094   003A60                     ANSELC          equ	14944	;# 
  1095   003A61                     WPUC            equ	14945	;# 
  1096   003A62                     ODCONC          equ	14946	;# 
  1097   003A63                     SLRCONC         equ	14947	;# 
  1098   003A64                     INLVLC          equ	14948	;# 
  1099   003A65                     IOCCP           equ	14949	;# 
  1100   003A66                     IOCCN           equ	14950	;# 
  1101   003A67                     IOCCF           equ	14951	;# 
  1102   003A68                     CCDPC           equ	14952	;# 
  1103   003A69                     CCDNC           equ	14953	;# 
  1104   003A6A                     RC3I2C          equ	14954	;# 
  1105   003A6B                     RC4I2C          equ	14955	;# 
  1106   003A81                     WPUE            equ	14977	;# 
  1107   003A84                     INLVLE          equ	14980	;# 
  1108   003A85                     IOCEP           equ	14981	;# 
  1109   003A86                     IOCEN           equ	14982	;# 
  1110   003A87                     IOCEF           equ	14983	;# 
  1111   003ABE                     CCDCON          equ	15038	;# 
  1112   003ABF                     PPSLOCK         equ	15039	;# 
  1113   003AC0                     INT0PPS         equ	15040	;# 
  1114   003AC1                     INT1PPS         equ	15041	;# 
  1115   003AC2                     INT2PPS         equ	15042	;# 
  1116   003AC3                     T0CKIPPS        equ	15043	;# 
  1117   003AC4                     T1CKIPPS        equ	15044	;# 
  1118   003AC5                     T1GPPS          equ	15045	;# 
  1119   003AC6                     T3CKIPPS        equ	15046	;# 
  1120   003AC7                     T3GPPS          equ	15047	;# 
  1121   003AC8                     T5CKIPPS        equ	15048	;# 
  1122   003AC9                     T5GPPS          equ	15049	;# 
  1123   003ACA                     T2INPPS         equ	15050	;# 
  1124   003ACB                     T4INPPS         equ	15051	;# 
  1125   003ACC                     T6INPPS         equ	15052	;# 
  1126   003ACD                     CCP1PPS         equ	15053	;# 
  1127   003ACE                     CCP2PPS         equ	15054	;# 
  1128   003ACF                     CCP3PPS         equ	15055	;# 
  1129   003AD0                     CCP4PPS         equ	15056	;# 
  1130   003AD1                     SMT1WINPPS      equ	15057	;# 
  1131   003AD2                     SMT1SIGPPS      equ	15058	;# 
  1132   003AD3                     CWG1INPPS       equ	15059	;# 
  1133   003AD4                     CWG2INPPS       equ	15060	;# 
  1134   003AD5                     CWG3INPPS       equ	15061	;# 
  1135   003AD6                     MD1CARLPPS      equ	15062	;# 
  1136   003AD7                     MD1CARHPPS      equ	15063	;# 
  1137   003AD8                     MD1SRCPPS       equ	15064	;# 
  1138   003AD9                     CLCIN0PPS       equ	15065	;# 
  1139   003ADA                     CLCIN1PPS       equ	15066	;# 
  1140   003ADB                     CLCIN2PPS       equ	15067	;# 
  1141   003ADC                     CLCIN3PPS       equ	15068	;# 
  1142   003ADD                     ADACTPPS        equ	15069	;# 
  1143   003ADE                     SPI1SCKPPS      equ	15070	;# 
  1144   003ADF                     SPI1SDIPPS      equ	15071	;# 
  1145   003AE0                     SPI1SSPPS       equ	15072	;# 
  1146   003AE1                     I2C1SCLPPS      equ	15073	;# 
  1147   003AE2                     I2C1SDAPPS      equ	15074	;# 
  1148   003AE3                     I2C2SCLPPS      equ	15075	;# 
  1149   003AE4                     I2C2SDAPPS      equ	15076	;# 
  1150   003AE5                     U1RXPPS         equ	15077	;# 
  1151   003AE6                     U1CTSPPS        equ	15078	;# 
  1152   003AE8                     U2RXPPS         equ	15080	;# 
  1153   003AE9                     U2CTSPPS        equ	15081	;# 
  1154   003BC9                     DMA2BUF         equ	15305	;# 
  1155   003BCA                     DMA2DCNT        equ	15306	;# 
  1156   003BCA                     DMA2DCNTL       equ	15306	;# 
  1157   003BCB                     DMA2DCNTH       equ	15307	;# 
  1158   003BCC                     DMA2DPTR        equ	15308	;# 
  1159   003BCC                     DMA2DPTRL       equ	15308	;# 
  1160   003BCD                     DMA2DPTRH       equ	15309	;# 
  1161   003BCE                     DMA2DSZ         equ	15310	;# 
  1162   003BCE                     DMA2DSZL        equ	15310	;# 
  1163   003BCF                     DMA2DSZH        equ	15311	;# 
  1164   003BD0                     DMA2DSA         equ	15312	;# 
  1165   003BD0                     DMA2DSAL        equ	15312	;# 
  1166   003BD1                     DMA2DSAH        equ	15313	;# 
  1167   003BD2                     DMA2SCNT        equ	15314	;# 
  1168   003BD2                     DMA2SCNTL       equ	15314	;# 
  1169   003BD3                     DMA2SCNTH       equ	15315	;# 
  1170   003BD4                     DMA2SPTR        equ	15316	;# 
  1171   003BD4                     DMA2SPTRL       equ	15316	;# 
  1172   003BD5                     DMA2SPTRH       equ	15317	;# 
  1173   003BD6                     DMA2SPTRU       equ	15318	;# 
  1174   003BD7                     DMA2SSZ         equ	15319	;# 
  1175   003BD7                     DMA2SSZL        equ	15319	;# 
  1176   003BD8                     DMA2SSZH        equ	15320	;# 
  1177   003BD9                     DMA2SSA         equ	15321	;# 
  1178   003BD9                     DMA2SSAL        equ	15321	;# 
  1179   003BDA                     DMA2SSAH        equ	15322	;# 
  1180   003BDB                     DMA2SSAU        equ	15323	;# 
  1181   003BDC                     DMA2CON0        equ	15324	;# 
  1182   003BDD                     DMA2CON1        equ	15325	;# 
  1183   003BDE                     DMA2AIRQ        equ	15326	;# 
  1184   003BDF                     DMA2SIRQ        equ	15327	;# 
  1185   003BE9                     DMA1BUF         equ	15337	;# 
  1186   003BEA                     DMA1DCNT        equ	15338	;# 
  1187   003BEA                     DMA1DCNTL       equ	15338	;# 
  1188   003BEB                     DMA1DCNTH       equ	15339	;# 
  1189   003BEC                     DMA1DPTR        equ	15340	;# 
  1190   003BEC                     DMA1DPTRL       equ	15340	;# 
  1191   003BED                     DMA1DPTRH       equ	15341	;# 
  1192   003BEE                     DMA1DSZ         equ	15342	;# 
  1193   003BEE                     DMA1DSZL        equ	15342	;# 
  1194   003BEF                     DMA1DSZH        equ	15343	;# 
  1195   003BF0                     DMA1DSA         equ	15344	;# 
  1196   003BF0                     DMA1DSAL        equ	15344	;# 
  1197   003BF1                     DMA1DSAH        equ	15345	;# 
  1198   003BF2                     DMA1SCNT        equ	15346	;# 
  1199   003BF2                     DMA1SCNTL       equ	15346	;# 
  1200   003BF3                     DMA1SCNTH       equ	15347	;# 
  1201   003BF4                     DMA1SPTR        equ	15348	;# 
  1202   003BF4                     DMA1SPTRL       equ	15348	;# 
  1203   003BF5                     DMA1SPTRH       equ	15349	;# 
  1204   003BF6                     DMA1SPTRU       equ	15350	;# 
  1205   003BF7                     DMA1SSZ         equ	15351	;# 
  1206   003BF7                     DMA1SSZL        equ	15351	;# 
  1207   003BF8                     DMA1SSZH        equ	15352	;# 
  1208   003BF9                     DMA1SSA         equ	15353	;# 
  1209   003BF9                     DMA1SSAL        equ	15353	;# 
  1210   003BFA                     DMA1SSAH        equ	15354	;# 
  1211   003BFB                     DMA1SSAU        equ	15355	;# 
  1212   003BFC                     DMA1CON0        equ	15356	;# 
  1213   003BFD                     DMA1CON1        equ	15357	;# 
  1214   003BFE                     DMA1AIRQ        equ	15358	;# 
  1215   003BFF                     DMA1SIRQ        equ	15359	;# 
  1216   003C56                     CLC4CON         equ	15446	;# 
  1217   003C57                     CLC4POL         equ	15447	;# 
  1218   003C58                     CLC4SEL0        equ	15448	;# 
  1219   003C59                     CLC4SEL1        equ	15449	;# 
  1220   003C5A                     CLC4SEL2        equ	15450	;# 
  1221   003C5B                     CLC4SEL3        equ	15451	;# 
  1222   003C5C                     CLC4GLS0        equ	15452	;# 
  1223   003C5D                     CLC4GLS1        equ	15453	;# 
  1224   003C5E                     CLC4GLS2        equ	15454	;# 
  1225   003C5F                     CLC4GLS3        equ	15455	;# 
  1226   003C60                     CLC3CON         equ	15456	;# 
  1227   003C61                     CLC3POL         equ	15457	;# 
  1228   003C62                     CLC3SEL0        equ	15458	;# 
  1229   003C63                     CLC3SEL1        equ	15459	;# 
  1230   003C64                     CLC3SEL2        equ	15460	;# 
  1231   003C65                     CLC3SEL3        equ	15461	;# 
  1232   003C66                     CLC3GLS0        equ	15462	;# 
  1233   003C67                     CLC3GLS1        equ	15463	;# 
  1234   003C68                     CLC3GLS2        equ	15464	;# 
  1235   003C69                     CLC3GLS3        equ	15465	;# 
  1236   003C6A                     CLC2CON         equ	15466	;# 
  1237   003C6B                     CLC2POL         equ	15467	;# 
  1238   003C6C                     CLC2SEL0        equ	15468	;# 
  1239   003C6D                     CLC2SEL1        equ	15469	;# 
  1240   003C6E                     CLC2SEL2        equ	15470	;# 
  1241   003C6F                     CLC2SEL3        equ	15471	;# 
  1242   003C70                     CLC2GLS0        equ	15472	;# 
  1243   003C71                     CLC2GLS1        equ	15473	;# 
  1244   003C72                     CLC2GLS2        equ	15474	;# 
  1245   003C73                     CLC2GLS3        equ	15475	;# 
  1246   003C74                     CLC1CON         equ	15476	;# 
  1247   003C75                     CLC1POL         equ	15477	;# 
  1248   003C76                     CLC1SEL0        equ	15478	;# 
  1249   003C77                     CLC1SEL1        equ	15479	;# 
  1250   003C78                     CLC1SEL2        equ	15480	;# 
  1251   003C79                     CLC1SEL3        equ	15481	;# 
  1252   003C7A                     CLC1GLS0        equ	15482	;# 
  1253   003C7B                     CLC1GLS1        equ	15483	;# 
  1254   003C7C                     CLC1GLS2        equ	15484	;# 
  1255   003C7D                     CLC1GLS3        equ	15485	;# 
  1256   003C7E                     CLCDATA0        equ	15486	;# 
  1257   003CE5                     CLKRCON         equ	15589	;# 
  1258   003CE6                     CLKRCLK         equ	15590	;# 
  1259   003CFA                     MD1CON0         equ	15610	;# 
  1260   003CFB                     MD1CON1         equ	15611	;# 
  1261   003CFC                     MD1SRC          equ	15612	;# 
  1262   003CFD                     MD1CARL         equ	15613	;# 
  1263   003CFE                     MD1CARH         equ	15614	;# 
  1264   003D10                     SPI1RXB         equ	15632	;# 
  1265   003D11                     SPI1TXB         equ	15633	;# 
  1266   003D12                     SPI1TCNT        equ	15634	;# 
  1267   003D12                     SPI1TCNTL       equ	15634	;# 
  1268   003D13                     SPI1TCNTH       equ	15635	;# 
  1269   003D14                     SPI1CON0        equ	15636	;# 
  1270   003D15                     SPI1CON1        equ	15637	;# 
  1271   003D16                     SPI1CON2        equ	15638	;# 
  1272   003D17                     SPI1STATUS      equ	15639	;# 
  1273   003D18                     SPI1TWIDTH      equ	15640	;# 
  1274   003D19                     SPI1BAUD        equ	15641	;# 
  1275   003D1A                     SPI1INTF        equ	15642	;# 
  1276   003D1B                     SPI1INTE        equ	15643	;# 
  1277   003D1C                     SPI1CLK         equ	15644	;# 
  1278   003D54                     I2C2RXB         equ	15700	;# 
  1279   003D55                     I2C2TXB         equ	15701	;# 
  1280   003D56                     I2C2CNT         equ	15702	;# 
  1281   003D57                     I2C2ADB0        equ	15703	;# 
  1282   003D58                     I2C2ADB1        equ	15704	;# 
  1283   003D59                     I2C2ADR0        equ	15705	;# 
  1284   003D5A                     I2C2ADR1        equ	15706	;# 
  1285   003D5B                     I2C2ADR2        equ	15707	;# 
  1286   003D5C                     I2C2ADR3        equ	15708	;# 
  1287   003D5D                     I2C2CON0        equ	15709	;# 
  1288   003D5E                     I2C2CON1        equ	15710	;# 
  1289   003D5F                     I2C2CON2        equ	15711	;# 
  1290   003D60                     I2C2ERR         equ	15712	;# 
  1291   003D61                     I2C2STAT0       equ	15713	;# 
  1292   003D62                     I2C2STAT1       equ	15714	;# 
  1293   003D63                     I2C2PIR         equ	15715	;# 
  1294   003D64                     I2C2PIE         equ	15716	;# 
  1295   003D65                     I2C2CLK         equ	15717	;# 
  1296   003D66                     I2C2BTO         equ	15718	;# 
  1297   003D6A                     I2C1RXB         equ	15722	;# 
  1298   003D6B                     I2C1TXB         equ	15723	;# 
  1299   003D6C                     I2C1CNT         equ	15724	;# 
  1300   003D6D                     I2C1ADB0        equ	15725	;# 
  1301   003D6E                     I2C1ADB1        equ	15726	;# 
  1302   003D6F                     I2C1ADR0        equ	15727	;# 
  1303   003D70                     I2C1ADR1        equ	15728	;# 
  1304   003D71                     I2C1ADR2        equ	15729	;# 
  1305   003D72                     I2C1ADR3        equ	15730	;# 
  1306   003D73                     I2C1CON0        equ	15731	;# 
  1307   003D74                     I2C1CON1        equ	15732	;# 
  1308   003D75                     I2C1CON2        equ	15733	;# 
  1309   003D76                     I2C1ERR         equ	15734	;# 
  1310   003D77                     I2C1STAT0       equ	15735	;# 
  1311   003D78                     I2C1STAT1       equ	15736	;# 
  1312   003D79                     I2C1PIR         equ	15737	;# 
  1313   003D7A                     I2C1PIE         equ	15738	;# 
  1314   003D7B                     I2C1CLK         equ	15739	;# 
  1315   003D7C                     I2C1BTO         equ	15740	;# 
  1316   003DD0                     U2RXB           equ	15824	;# 
  1317   003DD0                     U2RXBL          equ	15824	;# 
  1318   003DD2                     U2TXB           equ	15826	;# 
  1319   003DD2                     U2TXBL          equ	15826	;# 
  1320   003DD4                     U2P1            equ	15828	;# 
  1321   003DD4                     U2P1L           equ	15828	;# 
  1322   003DD6                     U2P2            equ	15830	;# 
  1323   003DD6                     U2P2L           equ	15830	;# 
  1324   003DD8                     U2P3            equ	15832	;# 
  1325   003DD8                     U2P3L           equ	15832	;# 
  1326   003DDA                     U2CON0          equ	15834	;# 
  1327   003DDB                     U2CON1          equ	15835	;# 
  1328   003DDC                     U2CON2          equ	15836	;# 
  1329   003DDD                     U2BRG           equ	15837	;# 
  1330   003DDD                     U2BRGL          equ	15837	;# 
  1331   003DDE                     U2BRGH          equ	15838	;# 
  1332   003DDF                     U2FIFO          equ	15839	;# 
  1333   003DE0                     U2UIR           equ	15840	;# 
  1334   003DE1                     U2ERRIR         equ	15841	;# 
  1335   003DE2                     U2ERRIE         equ	15842	;# 
  1336   003DE8                     U1RXB           equ	15848	;# 
  1337   003DE8                     U1RXBL          equ	15848	;# 
  1338   003DE9                     U1RXCHK         equ	15849	;# 
  1339   003DEA                     U1TXB           equ	15850	;# 
  1340   003DEA                     U1TXBL          equ	15850	;# 
  1341   003DEB                     U1TXCHK         equ	15851	;# 
  1342   003DEC                     U1P1            equ	15852	;# 
  1343   003DEC                     U1P1L           equ	15852	;# 
  1344   003DED                     U1P1H           equ	15853	;# 
  1345   003DEE                     U1P2            equ	15854	;# 
  1346   003DEE                     U1P2L           equ	15854	;# 
  1347   003DEF                     U1P2H           equ	15855	;# 
  1348   003DF0                     U1P3            equ	15856	;# 
  1349   003DF0                     U1P3L           equ	15856	;# 
  1350   003DF1                     U1P3H           equ	15857	;# 
  1351   003DF2                     U1CON0          equ	15858	;# 
  1352   003DF3                     U1CON1          equ	15859	;# 
  1353   003DF4                     U1CON2          equ	15860	;# 
  1354   003DF5                     U1BRG           equ	15861	;# 
  1355   003DF5                     U1BRGL          equ	15861	;# 
  1356   003DF6                     U1BRGH          equ	15862	;# 
  1357   003DF7                     U1FIFO          equ	15863	;# 
  1358   003DF8                     U1UIR           equ	15864	;# 
  1359   003DF9                     U1ERRIR         equ	15865	;# 
  1360   003DFA                     U1ERRIE         equ	15866	;# 
  1361   003E9C                     DAC1CON1        equ	16028	;# 
  1362   003E9E                     DAC1CON0        equ	16030	;# 
  1363   003EB8                     CM2CON0         equ	16056	;# 
  1364   003EB9                     CM2CON1         equ	16057	;# 
  1365   003EBA                     CM2NCH          equ	16058	;# 
  1366   003EBB                     CM2PCH          equ	16059	;# 
  1367   003EBC                     CM1CON0         equ	16060	;# 
  1368   003EBD                     CM1CON1         equ	16061	;# 
  1369   003EBE                     CM1NCH          equ	16062	;# 
  1370   003EBF                     CM1PCH          equ	16063	;# 
  1371   003EC0                     CMOUT           equ	16064	;# 
  1372   003EC1                     FVRCON          equ	16065	;# 
  1373   003EC3                     ZCDCON          equ	16067	;# 
  1374   003EC9                     HLVDCON0        equ	16073	;# 
  1375   003ECA                     HLVDCON1        equ	16074	;# 
  1376   003ED7                     ADCP            equ	16087	;# 
  1377   003EDE                     ADLTH           equ	16094	;# 
  1378   003EDE                     ADLTHL          equ	16094	;# 
  1379   003EDF                     ADLTHH          equ	16095	;# 
  1380   003EE0                     ADUTH           equ	16096	;# 
  1381   003EE0                     ADUTHL          equ	16096	;# 
  1382   003EE1                     ADUTHH          equ	16097	;# 
  1383   003EE2                     ADERR           equ	16098	;# 
  1384   003EE2                     ADERRL          equ	16098	;# 
  1385   003EE3                     ADERRH          equ	16099	;# 
  1386   003EE4                     ADSTPT          equ	16100	;# 
  1387   003EE4                     ADSTPTL         equ	16100	;# 
  1388   003EE5                     ADSTPTH         equ	16101	;# 
  1389   003EE6                     ADFLTR          equ	16102	;# 
  1390   003EE6                     ADFLTRL         equ	16102	;# 
  1391   003EE7                     ADFLTRH         equ	16103	;# 
  1392   003EE8                     ADACC           equ	16104	;# 
  1393   003EE8                     ADACCL          equ	16104	;# 
  1394   003EE9                     ADACCH          equ	16105	;# 
  1395   003EEA                     ADACCU          equ	16106	;# 
  1396   003EEB                     ADCNT           equ	16107	;# 
  1397   003EEC                     ADRPT           equ	16108	;# 
  1398   003EED                     ADPREV          equ	16109	;# 
  1399   003EED                     ADPREVL         equ	16109	;# 
  1400   003EEE                     ADPREVH         equ	16110	;# 
  1401   003EEF                     ADRES           equ	16111	;# 
  1402   003EEF                     ADRESL          equ	16111	;# 
  1403   003EF0                     ADRESH          equ	16112	;# 
  1404   003EF1                     ADPCH           equ	16113	;# 
  1405   003EF3                     ADACQ           equ	16115	;# 
  1406   003EF3                     ADACQL          equ	16115	;# 
  1407   003EF4                     ADACQH          equ	16116	;# 
  1408   003EF5                     ADCAP           equ	16117	;# 
  1409   003EF6                     ADPRE           equ	16118	;# 
  1410   003EF6                     ADPREL          equ	16118	;# 
  1411   003EF7                     ADPREH          equ	16119	;# 
  1412   003EF8                     ADCON0          equ	16120	;# 
  1413   003EF9                     ADCON1          equ	16121	;# 
  1414   003EFA                     ADCON2          equ	16122	;# 
  1415   003EFB                     ADCON3          equ	16123	;# 
  1416   003EFC                     ADSTAT          equ	16124	;# 
  1417   003EFD                     ADREF           equ	16125	;# 
  1418   003EFE                     ADACT           equ	16126	;# 
  1419   003EFF                     ADCLK           equ	16127	;# 
  1420   003F12                     SMT1TMR         equ	16146	;# 
  1421   003F12                     SMT1TMRL        equ	16146	;# 
  1422   003F13                     SMT1TMRH        equ	16147	;# 
  1423   003F14                     SMT1TMRU        equ	16148	;# 
  1424   003F15                     SMT1CPR         equ	16149	;# 
  1425   003F15                     SMT1CPRL        equ	16149	;# 
  1426   003F16                     SMT1CPRH        equ	16150	;# 
  1427   003F17                     SMT1CPRU        equ	16151	;# 
  1428   003F18                     SMT1CPW         equ	16152	;# 
  1429   003F18                     SMT1CPWL        equ	16152	;# 
  1430   003F19                     SMT1CPWH        equ	16153	;# 
  1431   003F1A                     SMT1CPWU        equ	16154	;# 
  1432   003F1B                     SMT1PR          equ	16155	;# 
  1433   003F1B                     SMT1PRL         equ	16155	;# 
  1434   003F1C                     SMT1PRH         equ	16156	;# 
  1435   003F1D                     SMT1PRU         equ	16157	;# 
  1436   003F1E                     SMT1CON0        equ	16158	;# 
  1437   003F1F                     SMT1CON1        equ	16159	;# 
  1438   003F20                     SMT1STAT        equ	16160	;# 
  1439   003F21                     SMT1CLK         equ	16161	;# 
  1440   003F22                     SMT1SIG         equ	16162	;# 
  1441   003F23                     SMT1WIN         equ	16163	;# 
  1442   003F38                     NCO1ACC         equ	16184	;# 
  1443   003F38                     NCO1ACCL        equ	16184	;# 
  1444   003F39                     NCO1ACCH        equ	16185	;# 
  1445   003F3A                     NCO1ACCU        equ	16186	;# 
  1446   003F3B                     NCO1INC         equ	16187	;# 
  1447   003F3B                     NCO1INCL        equ	16187	;# 
  1448   003F3C                     NCO1INCH        equ	16188	;# 
  1449   003F3D                     NCO1INCU        equ	16189	;# 
  1450   003F3E                     NCO1CON         equ	16190	;# 
  1451   003F3F                     NCO1CLK         equ	16191	;# 
  1452   003F40                     CWG3CLK         equ	16192	;# 
  1453   003F40                     CWG3CLKCON      equ	16192	;# 
  1454   003F41                     CWG3ISM         equ	16193	;# 
  1455   003F41                     CWG3DAT         equ	16193	;# 
  1456   003F42                     CWG3DBR         equ	16194	;# 
  1457   003F43                     CWG3DBF         equ	16195	;# 
  1458   003F44                     CWG3CON0        equ	16196	;# 
  1459   003F45                     CWG3CON1        equ	16197	;# 
  1460   003F46                     CWG3AS0         equ	16198	;# 
  1461   003F47                     CWG3AS1         equ	16199	;# 
  1462   003F48                     CWG3STR         equ	16200	;# 
  1463   003F49                     CWG2CLK         equ	16201	;# 
  1464   003F49                     CWG2CLKCON      equ	16201	;# 
  1465   003F4A                     CWG2ISM         equ	16202	;# 
  1466   003F4A                     CWG2DAT         equ	16202	;# 
  1467   003F4B                     CWG2DBR         equ	16203	;# 
  1468   003F4C                     CWG2DBF         equ	16204	;# 
  1469   003F4D                     CWG2CON0        equ	16205	;# 
  1470   003F4E                     CWG2CON1        equ	16206	;# 
  1471   003F4F                     CWG2AS0         equ	16207	;# 
  1472   003F50                     CWG2AS1         equ	16208	;# 
  1473   003F51                     CWG2STR         equ	16209	;# 
  1474   003F52                     CWG1CLK         equ	16210	;# 
  1475   003F52                     CWG1CLKCON      equ	16210	;# 
  1476   003F53                     CWG1ISM         equ	16211	;# 
  1477   003F53                     CWG1DAT         equ	16211	;# 
  1478   003F54                     CWG1DBR         equ	16212	;# 
  1479   003F55                     CWG1DBF         equ	16213	;# 
  1480   003F56                     CWG1CON0        equ	16214	;# 
  1481   003F57                     CWG1CON1        equ	16215	;# 
  1482   003F58                     CWG1AS0         equ	16216	;# 
  1483   003F59                     CWG1AS1         equ	16217	;# 
  1484   003F5A                     CWG1STR         equ	16218	;# 
  1485   003F5E                     CCPTMRS0        equ	16222	;# 
  1486   003F5F                     CCPTMRS1        equ	16223	;# 
  1487   003F60                     PWM8DC          equ	16224	;# 
  1488   003F60                     PWM8DCL         equ	16224	;# 
  1489   003F61                     PWM8DCH         equ	16225	;# 
  1490   003F62                     PWM8CON         equ	16226	;# 
  1491   003F64                     PWM7DC          equ	16228	;# 
  1492   003F64                     PWM7DCL         equ	16228	;# 
  1493   003F65                     PWM7DCH         equ	16229	;# 
  1494   003F66                     PWM7CON         equ	16230	;# 
  1495   003F68                     PWM6DC          equ	16232	;# 
  1496   003F68                     PWM6DCL         equ	16232	;# 
  1497   003F69                     PWM6DCH         equ	16233	;# 
  1498   003F6A                     PWM6CON         equ	16234	;# 
  1499   003F6C                     PWM5DC          equ	16236	;# 
  1500   003F6C                     PWM5DCL         equ	16236	;# 
  1501   003F6D                     PWM5DCH         equ	16237	;# 
  1502   003F6E                     PWM5CON         equ	16238	;# 
  1503   003F70                     CCPR4           equ	16240	;# 
  1504   003F70                     CCPR4L          equ	16240	;# 
  1505   003F71                     CCPR4H          equ	16241	;# 
  1506   003F72                     CCP4CON         equ	16242	;# 
  1507   003F73                     CCP4CAP         equ	16243	;# 
  1508   003F74                     CCPR3           equ	16244	;# 
  1509   003F74                     CCPR3L          equ	16244	;# 
  1510   003F75                     CCPR3H          equ	16245	;# 
  1511   003F76                     CCP3CON         equ	16246	;# 
  1512   003F77                     CCP3CAP         equ	16247	;# 
  1513   003F78                     CCPR2           equ	16248	;# 
  1514   003F78                     CCPR2L          equ	16248	;# 
  1515   003F79                     CCPR2H          equ	16249	;# 
  1516   003F7A                     CCP2CON         equ	16250	;# 
  1517   003F7B                     CCP2CAP         equ	16251	;# 
  1518   003F7C                     CCPR1           equ	16252	;# 
  1519   003F7C                     CCPR1L          equ	16252	;# 
  1520   003F7D                     CCPR1H          equ	16253	;# 
  1521   003F7E                     CCP1CON         equ	16254	;# 
  1522   003F7F                     CCP1CAP         equ	16255	;# 
  1523   003F92                     T6TMR           equ	16274	;# 
  1524   003F92                     TMR6            equ	16274	;# 
  1525   003F93                     T6PR            equ	16275	;# 
  1526   003F93                     PR6             equ	16275	;# 
  1527   003F94                     T6CON           equ	16276	;# 
  1528   003F95                     T6HLT           equ	16277	;# 
  1529   003F96                     T6CLKCON        equ	16278	;# 
  1530   003F96                     T6CLK           equ	16278	;# 
  1531   003F97                     T6RST           equ	16279	;# 
  1532   003F98                     TMR5            equ	16280	;# 
  1533   003F98                     TMR5L           equ	16280	;# 
  1534   003F99                     TMR5H           equ	16281	;# 
  1535   003F9A                     T5CON           equ	16282	;# 
  1536   003F9A                     TMR5CON         equ	16282	;# 
  1537   003F9B                     T5GCON          equ	16283	;# 
  1538   003F9B                     TMR5GCON        equ	16283	;# 
  1539   003F9C                     T5GATE          equ	16284	;# 
  1540   003F9C                     TMR5GATE        equ	16284	;# 
  1541   003F9D                     T5CLK           equ	16285	;# 
  1542   003F9D                     TMR5CLK         equ	16285	;# 
  1543   003F9D                     PR5             equ	16285	;# 
  1544   003F9E                     T4TMR           equ	16286	;# 
  1545   003F9E                     TMR4            equ	16286	;# 
  1546   003F9F                     T4PR            equ	16287	;# 
  1547   003F9F                     PR4             equ	16287	;# 
  1548   003FA0                     T4CON           equ	16288	;# 
  1549   003FA1                     T4HLT           equ	16289	;# 
  1550   003FA2                     T4CLKCON        equ	16290	;# 
  1551   003FA2                     T4CLK           equ	16290	;# 
  1552   003FA3                     T4RST           equ	16291	;# 
  1553   003FA4                     TMR3            equ	16292	;# 
  1554   003FA4                     TMR3L           equ	16292	;# 
  1555   003FA5                     TMR3H           equ	16293	;# 
  1556   003FA6                     T3CON           equ	16294	;# 
  1557   003FA6                     TMR3CON         equ	16294	;# 
  1558   003FA7                     T3GCON          equ	16295	;# 
  1559   003FA7                     TMR3GCON        equ	16295	;# 
  1560   003FA8                     T3GATE          equ	16296	;# 
  1561   003FA8                     TMR3GATE        equ	16296	;# 
  1562   003FA9                     T3CLK           equ	16297	;# 
  1563   003FA9                     TMR3CLK         equ	16297	;# 
  1564   003FA9                     PR3             equ	16297	;# 
  1565   003FAA                     T2TMR           equ	16298	;# 
  1566   003FAA                     TMR2            equ	16298	;# 
  1567   003FAB                     T2PR            equ	16299	;# 
  1568   003FAB                     PR2             equ	16299	;# 
  1569   003FAC                     T2CON           equ	16300	;# 
  1570   003FAD                     T2HLT           equ	16301	;# 
  1571   003FAE                     T2CLKCON        equ	16302	;# 
  1572   003FAE                     T2CLK           equ	16302	;# 
  1573   003FAF                     T2RST           equ	16303	;# 
  1574   003FB0                     TMR1            equ	16304	;# 
  1575   003FB0                     TMR1L           equ	16304	;# 
  1576   003FB1                     TMR1H           equ	16305	;# 
  1577   003FB2                     T1CON           equ	16306	;# 
  1578   003FB2                     TMR1CON         equ	16306	;# 
  1579   003FB3                     T1GCON          equ	16307	;# 
  1580   003FB3                     TMR1GCON        equ	16307	;# 
  1581   003FB4                     T1GATE          equ	16308	;# 
  1582   003FB4                     TMR1GATE        equ	16308	;# 
  1583   003FB5                     T1CLK           equ	16309	;# 
  1584   003FB5                     TMR1CLK         equ	16309	;# 
  1585   003FB5                     PR1             equ	16309	;# 
  1586   003FB6                     TMR0L           equ	16310	;# 
  1587   003FB6                     TMR0            equ	16310	;# 
  1588   003FB7                     TMR0H           equ	16311	;# 
  1589   003FB7                     PR0             equ	16311	;# 
  1590   003FB8                     T0CON0          equ	16312	;# 
  1591   003FB9                     T0CON1          equ	16313	;# 
  1592   003FBA                     LATA            equ	16314	;# 
  1593   003FBB                     LATB            equ	16315	;# 
  1594   003FBC                     LATC            equ	16316	;# 
  1595   003FC2                     TRISA           equ	16322	;# 
  1596   003FC3                     TRISB           equ	16323	;# 
  1597   003FC4                     TRISC           equ	16324	;# 
  1598   003FCA                     PORTA           equ	16330	;# 
  1599   003FCB                     PORTB           equ	16331	;# 
  1600   003FCC                     PORTC           equ	16332	;# 
  1601   003FCE                     PORTE           equ	16334	;# 
  1602   003FD2                     INTCON0         equ	16338	;# 
  1603   003FD3                     INTCON1         equ	16339	;# 
  1604   003FD4                     IVTLOCK         equ	16340	;# 
  1605   003FD5                     IVTBASE         equ	16341	;# 
  1606   003FD5                     IVTBASEL        equ	16341	;# 
  1607   003FD6                     IVTBASEH        equ	16342	;# 
  1608   003FD7                     IVTBASEU        equ	16343	;# 
  1609   003FD8                     STATUS          equ	16344	;# 
  1610   003FD9                     FSR2            equ	16345	;# 
  1611   003FD9                     FSR2L           equ	16345	;# 
  1612   003FDA                     FSR2H           equ	16346	;# 
  1613   003FDB                     PLUSW2          equ	16347	;# 
  1614   003FDC                     PREINC2         equ	16348	;# 
  1615   003FDD                     POSTDEC2        equ	16349	;# 
  1616   003FDE                     POSTINC2        equ	16350	;# 
  1617   003FDF                     INDF2           equ	16351	;# 
  1618   003FE0                     BSR             equ	16352	;# 
  1619   003FE1                     FSR1            equ	16353	;# 
  1620   003FE1                     FSR1L           equ	16353	;# 
  1621   003FE2                     FSR1H           equ	16354	;# 
  1622   003FE3                     PLUSW1          equ	16355	;# 
  1623   003FE4                     PREINC1         equ	16356	;# 
  1624   003FE5                     POSTDEC1        equ	16357	;# 
  1625   003FE6                     POSTINC1        equ	16358	;# 
  1626   003FE7                     INDF1           equ	16359	;# 
  1627   003FE8                     WREG            equ	16360	;# 
  1628   003FE9                     FSR0            equ	16361	;# 
  1629   003FE9                     FSR0L           equ	16361	;# 
  1630   003FEA                     FSR0H           equ	16362	;# 
  1631   003FEB                     PLUSW0          equ	16363	;# 
  1632   003FEC                     PREINC0         equ	16364	;# 
  1633   003FED                     POSTDEC0        equ	16365	;# 
  1634   003FEE                     POSTINC0        equ	16366	;# 
  1635   003FEF                     INDF0           equ	16367	;# 
  1636   003FF0                     PCON0           equ	16368	;# 
  1637   003FF1                     PCON1           equ	16369	;# 
  1638   003FF3                     PROD            equ	16371	;# 
  1639   003FF3                     PRODL           equ	16371	;# 
  1640   003FF4                     PRODH           equ	16372	;# 
  1641   003FF5                     TABLAT          equ	16373	;# 
  1642   003FF6                     TBLPTR          equ	16374	;# 
  1643   003FF6                     TBLPTRL         equ	16374	;# 
  1644   003FF7                     TBLPTRH         equ	16375	;# 
  1645   003FF8                     TBLPTRU         equ	16376	;# 
  1646   003FF9                     PCLAT           equ	16377	;# 
  1647   003FF9                     PCL             equ	16377	;# 
  1648   003FFA                     PCLATH          equ	16378	;# 
  1649   003FFB                     PCLATU          equ	16379	;# 
  1650   003FFC                     STKPTR          equ	16380	;# 
  1651   003FFD                     TOS             equ	16381	;# 
  1652   003FFD                     TOSL            equ	16381	;# 
  1653   003FFE                     TOSH            equ	16382	;# 
  1654   003FFF                     TOSU            equ	16383	;# 
  1655   003880                     STATUS_CSHAD    equ	14464	;# 
  1656   003881                     WREG_CSHAD      equ	14465	;# 
  1657   003882                     BSR_CSHAD       equ	14466	;# 
  1658   003883                     SHADCON         equ	14467	;# 
  1659   003884                     STATUS_SHAD     equ	14468	;# 
  1660   003885                     WREG_SHAD       equ	14469	;# 
  1661   003886                     BSR_SHAD        equ	14470	;# 
  1662   003887                     PCLATH_SHAD     equ	14471	;# 
  1663   003888                     PCLATU_SHAD     equ	14472	;# 
  1664   003889                     FSR0SH          equ	14473	;# 
  1665   003889                     FSR0L_SHAD      equ	14473	;# 
  1666   00388A                     FSR0H_SHAD      equ	14474	;# 
  1667   00388B                     FSR1SH          equ	14475	;# 
  1668   00388B                     FSR1L_SHAD      equ	14475	;# 
  1669   00388C                     FSR1H_SHAD      equ	14476	;# 
  1670   00388D                     FSR2SH          equ	14477	;# 
  1671   00388D                     FSR2L_SHAD      equ	14477	;# 
  1672   00388E                     FSR2H_SHAD      equ	14478	;# 
  1673   00388F                     PRODSH          equ	14479	;# 
  1674   00388F                     PRODL_SHAD      equ	14479	;# 
  1675   003890                     PRODH_SHAD      equ	14480	;# 
  1676   00389D                     IVTADL          equ	14493	;# 
  1677   00389E                     IVTADH          equ	14494	;# 
  1678   00389F                     IVTADU          equ	14495	;# 
  1679   00395B                     WDTCON0         equ	14683	;# 
  1680   00395C                     WDTCON1         equ	14684	;# 
  1681   00395D                     WDTPSL          equ	14685	;# 
  1682   00395E                     WDTPSH          equ	14686	;# 
  1683   00395F                     WDTTMR          equ	14687	;# 
  1684   003960                     CRCDATA         equ	14688	;# 
  1685   003960                     CRCDATL         equ	14688	;# 
  1686   003961                     CRCDATH         equ	14689	;# 
  1687   003962                     CRCACC          equ	14690	;# 
  1688   003962                     CRCACCL         equ	14690	;# 
  1689   003963                     CRCACCH         equ	14691	;# 
  1690   003964                     CRCSHFT         equ	14692	;# 
  1691   003964                     CRCSHIFTL       equ	14692	;# 
  1692   003965                     CRCSHIFTH       equ	14693	;# 
  1693   003966                     CRCXOR          equ	14694	;# 
  1694   003966                     CRCXORL         equ	14694	;# 
  1695   003967                     CRCXORH         equ	14695	;# 
  1696   003968                     CRCCON0         equ	14696	;# 
  1697   003969                     CRCCON1         equ	14697	;# 
  1698   003976                     SCANLADR        equ	14710	;# 
  1699   003976                     SCANLADRL       equ	14710	;# 
  1700   003977                     SCANLADRH       equ	14711	;# 
  1701   003978                     SCANLADRU       equ	14712	;# 
  1702   003979                     SCANHADR        equ	14713	;# 
  1703   003979                     SCANHADRL       equ	14713	;# 
  1704   00397A                     SCANHADRH       equ	14714	;# 
  1705   00397B                     SCANHADRU       equ	14715	;# 
  1706   00397C                     SCANCON0        equ	14716	;# 
  1707   00397D                     SCANTRIG        equ	14717	;# 
  1708   003980                     IPR0            equ	14720	;# 
  1709   003981                     IPR1            equ	14721	;# 
  1710   003982                     IPR2            equ	14722	;# 
  1711   003983                     IPR3            equ	14723	;# 
  1712   003984                     IPR4            equ	14724	;# 
  1713   003985                     IPR5            equ	14725	;# 
  1714   003986                     IPR6            equ	14726	;# 
  1715   003987                     IPR7            equ	14727	;# 
  1716   003988                     IPR8            equ	14728	;# 
  1717   003989                     IPR9            equ	14729	;# 
  1718   00398A                     IPR10           equ	14730	;# 
  1719   003990                     PIE0            equ	14736	;# 
  1720   003991                     PIE1            equ	14737	;# 
  1721   003992                     PIE2            equ	14738	;# 
  1722   003993                     PIE3            equ	14739	;# 
  1723   003994                     PIE4            equ	14740	;# 
  1724   003995                     PIE5            equ	14741	;# 
  1725   003996                     PIE6            equ	14742	;# 
  1726   003997                     PIE7            equ	14743	;# 
  1727   003998                     PIE8            equ	14744	;# 
  1728   003999                     PIE9            equ	14745	;# 
  1729   00399A                     PIE10           equ	14746	;# 
  1730   0039A0                     PIR0            equ	14752	;# 
  1731   0039A1                     PIR1            equ	14753	;# 
  1732   0039A2                     PIR2            equ	14754	;# 
  1733   0039A3                     PIR3            equ	14755	;# 
  1734   0039A4                     PIR4            equ	14756	;# 
  1735   0039A5                     PIR5            equ	14757	;# 
  1736   0039A6                     PIR6            equ	14758	;# 
  1737   0039A7                     PIR7            equ	14759	;# 
  1738   0039A8                     PIR8            equ	14760	;# 
  1739   0039A9                     PIR9            equ	14761	;# 
  1740   0039AA                     PIR10           equ	14762	;# 
  1741   0039C0                     PMD0            equ	14784	;# 
  1742   0039C1                     PMD1            equ	14785	;# 
  1743   0039C2                     PMD2            equ	14786	;# 
  1744   0039C3                     PMD3            equ	14787	;# 
  1745   0039C4                     PMD4            equ	14788	;# 
  1746   0039C5                     PMD5            equ	14789	;# 
  1747   0039C6                     PMD6            equ	14790	;# 
  1748   0039C7                     PMD7            equ	14791	;# 
  1749   0039D0                     BORCON          equ	14800	;# 
  1750   0039D1                     VREGCON         equ	14801	;# 
  1751   0039D8                     CPUDOZE         equ	14808	;# 
  1752   0039D9                     OSCCON1         equ	14809	;# 
  1753   0039DA                     OSCCON2         equ	14810	;# 
  1754   0039DB                     OSCCON3         equ	14811	;# 
  1755   0039DC                     OSCSTAT         equ	14812	;# 
  1756   0039DC                     OSCSTAT1        equ	14812	;# 
  1757   0039DD                     OSCEN           equ	14813	;# 
  1758   0039DE                     OSCTUNE         equ	14814	;# 
  1759   0039DF                     OSCFRQ          equ	14815	;# 
  1760   0039E0                     NVMADRL         equ	14816	;# 
  1761   0039E1                     NVMADRH         equ	14817	;# 
  1762   0039E3                     NVMDAT          equ	14819	;# 
  1763   0039E5                     NVMCON1         equ	14821	;# 
  1764   0039E6                     NVMCON2         equ	14822	;# 
  1765   0039EF                     PRLOCK          equ	14831	;# 
  1766   0039F1                     ISRPR           equ	14833	;# 
  1767   0039F2                     MAINPR          equ	14834	;# 
  1768   0039F3                     DMA1PR          equ	14835	;# 
  1769   0039F4                     DMA2PR          equ	14836	;# 
  1770   0039F7                     SCANPR          equ	14839	;# 
  1771   003A00                     RA0PPS          equ	14848	;# 
  1772   003A01                     RA1PPS          equ	14849	;# 
  1773   003A02                     RA2PPS          equ	14850	;# 
  1774   003A03                     RA3PPS          equ	14851	;# 
  1775   003A04                     RA4PPS          equ	14852	;# 
  1776   003A05                     RA5PPS          equ	14853	;# 
  1777   003A06                     RA6PPS          equ	14854	;# 
  1778   003A07                     RA7PPS          equ	14855	;# 
  1779   003A08                     RB0PPS          equ	14856	;# 
  1780   003A09                     RB1PPS          equ	14857	;# 
  1781   003A0A                     RB2PPS          equ	14858	;# 
  1782   003A0B                     RB3PPS          equ	14859	;# 
  1783   003A0C                     RB4PPS          equ	14860	;# 
  1784   003A0D                     RB5PPS          equ	14861	;# 
  1785   003A0E                     RB6PPS          equ	14862	;# 
  1786   003A0F                     RB7PPS          equ	14863	;# 
  1787   003A10                     RC0PPS          equ	14864	;# 
  1788   003A11                     RC1PPS          equ	14865	;# 
  1789   003A12                     RC2PPS          equ	14866	;# 
  1790   003A13                     RC3PPS          equ	14867	;# 
  1791   003A14                     RC4PPS          equ	14868	;# 
  1792   003A15                     RC5PPS          equ	14869	;# 
  1793   003A16                     RC6PPS          equ	14870	;# 
  1794   003A17                     RC7PPS          equ	14871	;# 
  1795   003A40                     ANSELA          equ	14912	;# 
  1796   003A41                     WPUA            equ	14913	;# 
  1797   003A42                     ODCONA          equ	14914	;# 
  1798   003A43                     SLRCONA         equ	14915	;# 
  1799   003A44                     INLVLA          equ	14916	;# 
  1800   003A45                     IOCAP           equ	14917	;# 
  1801   003A46                     IOCAN           equ	14918	;# 
  1802   003A47                     IOCAF           equ	14919	;# 
  1803   003A48                     CCDPA           equ	14920	;# 
  1804   003A49                     CCDNA           equ	14921	;# 
  1805   003A50                     ANSELB          equ	14928	;# 
  1806   003A51                     WPUB            equ	14929	;# 
  1807   003A52                     ODCONB          equ	14930	;# 
  1808   003A53                     SLRCONB         equ	14931	;# 
  1809   003A54                     INLVLB          equ	14932	;# 
  1810   003A55                     IOCBP           equ	14933	;# 
  1811   003A56                     IOCBN           equ	14934	;# 
  1812   003A57                     IOCBF           equ	14935	;# 
  1813   003A58                     CCDPB           equ	14936	;# 
  1814   003A59                     CCDNB           equ	14937	;# 
  1815   003A5A                     RB1I2C          equ	14938	;# 
  1816   003A5B                     RB2I2C          equ	14939	;# 
  1817   003A60                     ANSELC          equ	14944	;# 
  1818   003A61                     WPUC            equ	14945	;# 
  1819   003A62                     ODCONC          equ	14946	;# 
  1820   003A63                     SLRCONC         equ	14947	;# 
  1821   003A64                     INLVLC          equ	14948	;# 
  1822   003A65                     IOCCP           equ	14949	;# 
  1823   003A66                     IOCCN           equ	14950	;# 
  1824   003A67                     IOCCF           equ	14951	;# 
  1825   003A68                     CCDPC           equ	14952	;# 
  1826   003A69                     CCDNC           equ	14953	;# 
  1827   003A6A                     RC3I2C          equ	14954	;# 
  1828   003A6B                     RC4I2C          equ	14955	;# 
  1829   003A81                     WPUE            equ	14977	;# 
  1830   003A84                     INLVLE          equ	14980	;# 
  1831   003A85                     IOCEP           equ	14981	;# 
  1832   003A86                     IOCEN           equ	14982	;# 
  1833   003A87                     IOCEF           equ	14983	;# 
  1834   003ABE                     CCDCON          equ	15038	;# 
  1835   003ABF                     PPSLOCK         equ	15039	;# 
  1836   003AC0                     INT0PPS         equ	15040	;# 
  1837   003AC1                     INT1PPS         equ	15041	;# 
  1838   003AC2                     INT2PPS         equ	15042	;# 
  1839   003AC3                     T0CKIPPS        equ	15043	;# 
  1840   003AC4                     T1CKIPPS        equ	15044	;# 
  1841   003AC5                     T1GPPS          equ	15045	;# 
  1842   003AC6                     T3CKIPPS        equ	15046	;# 
  1843   003AC7                     T3GPPS          equ	15047	;# 
  1844   003AC8                     T5CKIPPS        equ	15048	;# 
  1845   003AC9                     T5GPPS          equ	15049	;# 
  1846   003ACA                     T2INPPS         equ	15050	;# 
  1847   003ACB                     T4INPPS         equ	15051	;# 
  1848   003ACC                     T6INPPS         equ	15052	;# 
  1849   003ACD                     CCP1PPS         equ	15053	;# 
  1850   003ACE                     CCP2PPS         equ	15054	;# 
  1851   003ACF                     CCP3PPS         equ	15055	;# 
  1852   003AD0                     CCP4PPS         equ	15056	;# 
  1853   003AD1                     SMT1WINPPS      equ	15057	;# 
  1854   003AD2                     SMT1SIGPPS      equ	15058	;# 
  1855   003AD3                     CWG1INPPS       equ	15059	;# 
  1856   003AD4                     CWG2INPPS       equ	15060	;# 
  1857   003AD5                     CWG3INPPS       equ	15061	;# 
  1858   003AD6                     MD1CARLPPS      equ	15062	;# 
  1859   003AD7                     MD1CARHPPS      equ	15063	;# 
  1860   003AD8                     MD1SRCPPS       equ	15064	;# 
  1861   003AD9                     CLCIN0PPS       equ	15065	;# 
  1862   003ADA                     CLCIN1PPS       equ	15066	;# 
  1863   003ADB                     CLCIN2PPS       equ	15067	;# 
  1864   003ADC                     CLCIN3PPS       equ	15068	;# 
  1865   003ADD                     ADACTPPS        equ	15069	;# 
  1866   003ADE                     SPI1SCKPPS      equ	15070	;# 
  1867   003ADF                     SPI1SDIPPS      equ	15071	;# 
  1868   003AE0                     SPI1SSPPS       equ	15072	;# 
  1869   003AE1                     I2C1SCLPPS      equ	15073	;# 
  1870   003AE2                     I2C1SDAPPS      equ	15074	;# 
  1871   003AE3                     I2C2SCLPPS      equ	15075	;# 
  1872   003AE4                     I2C2SDAPPS      equ	15076	;# 
  1873   003AE5                     U1RXPPS         equ	15077	;# 
  1874   003AE6                     U1CTSPPS        equ	15078	;# 
  1875   003AE8                     U2RXPPS         equ	15080	;# 
  1876   003AE9                     U2CTSPPS        equ	15081	;# 
  1877   003BC9                     DMA2BUF         equ	15305	;# 
  1878   003BCA                     DMA2DCNT        equ	15306	;# 
  1879   003BCA                     DMA2DCNTL       equ	15306	;# 
  1880   003BCB                     DMA2DCNTH       equ	15307	;# 
  1881   003BCC                     DMA2DPTR        equ	15308	;# 
  1882   003BCC                     DMA2DPTRL       equ	15308	;# 
  1883   003BCD                     DMA2DPTRH       equ	15309	;# 
  1884   003BCE                     DMA2DSZ         equ	15310	;# 
  1885   003BCE                     DMA2DSZL        equ	15310	;# 
  1886   003BCF                     DMA2DSZH        equ	15311	;# 
  1887   003BD0                     DMA2DSA         equ	15312	;# 
  1888   003BD0                     DMA2DSAL        equ	15312	;# 
  1889   003BD1                     DMA2DSAH        equ	15313	;# 
  1890   003BD2                     DMA2SCNT        equ	15314	;# 
  1891   003BD2                     DMA2SCNTL       equ	15314	;# 
  1892   003BD3                     DMA2SCNTH       equ	15315	;# 
  1893   003BD4                     DMA2SPTR        equ	15316	;# 
  1894   003BD4                     DMA2SPTRL       equ	15316	;# 
  1895   003BD5                     DMA2SPTRH       equ	15317	;# 
  1896   003BD6                     DMA2SPTRU       equ	15318	;# 
  1897   003BD7                     DMA2SSZ         equ	15319	;# 
  1898   003BD7                     DMA2SSZL        equ	15319	;# 
  1899   003BD8                     DMA2SSZH        equ	15320	;# 
  1900   003BD9                     DMA2SSA         equ	15321	;# 
  1901   003BD9                     DMA2SSAL        equ	15321	;# 
  1902   003BDA                     DMA2SSAH        equ	15322	;# 
  1903   003BDB                     DMA2SSAU        equ	15323	;# 
  1904   003BDC                     DMA2CON0        equ	15324	;# 
  1905   003BDD                     DMA2CON1        equ	15325	;# 
  1906   003BDE                     DMA2AIRQ        equ	15326	;# 
  1907   003BDF                     DMA2SIRQ        equ	15327	;# 
  1908   003BE9                     DMA1BUF         equ	15337	;# 
  1909   003BEA                     DMA1DCNT        equ	15338	;# 
  1910   003BEA                     DMA1DCNTL       equ	15338	;# 
  1911   003BEB                     DMA1DCNTH       equ	15339	;# 
  1912   003BEC                     DMA1DPTR        equ	15340	;# 
  1913   003BEC                     DMA1DPTRL       equ	15340	;# 
  1914   003BED                     DMA1DPTRH       equ	15341	;# 
  1915   003BEE                     DMA1DSZ         equ	15342	;# 
  1916   003BEE                     DMA1DSZL        equ	15342	;# 
  1917   003BEF                     DMA1DSZH        equ	15343	;# 
  1918   003BF0                     DMA1DSA         equ	15344	;# 
  1919   003BF0                     DMA1DSAL        equ	15344	;# 
  1920   003BF1                     DMA1DSAH        equ	15345	;# 
  1921   003BF2                     DMA1SCNT        equ	15346	;# 
  1922   003BF2                     DMA1SCNTL       equ	15346	;# 
  1923   003BF3                     DMA1SCNTH       equ	15347	;# 
  1924   003BF4                     DMA1SPTR        equ	15348	;# 
  1925   003BF4                     DMA1SPTRL       equ	15348	;# 
  1926   003BF5                     DMA1SPTRH       equ	15349	;# 
  1927   003BF6                     DMA1SPTRU       equ	15350	;# 
  1928   003BF7                     DMA1SSZ         equ	15351	;# 
  1929   003BF7                     DMA1SSZL        equ	15351	;# 
  1930   003BF8                     DMA1SSZH        equ	15352	;# 
  1931   003BF9                     DMA1SSA         equ	15353	;# 
  1932   003BF9                     DMA1SSAL        equ	15353	;# 
  1933   003BFA                     DMA1SSAH        equ	15354	;# 
  1934   003BFB                     DMA1SSAU        equ	15355	;# 
  1935   003BFC                     DMA1CON0        equ	15356	;# 
  1936   003BFD                     DMA1CON1        equ	15357	;# 
  1937   003BFE                     DMA1AIRQ        equ	15358	;# 
  1938   003BFF                     DMA1SIRQ        equ	15359	;# 
  1939   003C56                     CLC4CON         equ	15446	;# 
  1940   003C57                     CLC4POL         equ	15447	;# 
  1941   003C58                     CLC4SEL0        equ	15448	;# 
  1942   003C59                     CLC4SEL1        equ	15449	;# 
  1943   003C5A                     CLC4SEL2        equ	15450	;# 
  1944   003C5B                     CLC4SEL3        equ	15451	;# 
  1945   003C5C                     CLC4GLS0        equ	15452	;# 
  1946   003C5D                     CLC4GLS1        equ	15453	;# 
  1947   003C5E                     CLC4GLS2        equ	15454	;# 
  1948   003C5F                     CLC4GLS3        equ	15455	;# 
  1949   003C60                     CLC3CON         equ	15456	;# 
  1950   003C61                     CLC3POL         equ	15457	;# 
  1951   003C62                     CLC3SEL0        equ	15458	;# 
  1952   003C63                     CLC3SEL1        equ	15459	;# 
  1953   003C64                     CLC3SEL2        equ	15460	;# 
  1954   003C65                     CLC3SEL3        equ	15461	;# 
  1955   003C66                     CLC3GLS0        equ	15462	;# 
  1956   003C67                     CLC3GLS1        equ	15463	;# 
  1957   003C68                     CLC3GLS2        equ	15464	;# 
  1958   003C69                     CLC3GLS3        equ	15465	;# 
  1959   003C6A                     CLC2CON         equ	15466	;# 
  1960   003C6B                     CLC2POL         equ	15467	;# 
  1961   003C6C                     CLC2SEL0        equ	15468	;# 
  1962   003C6D                     CLC2SEL1        equ	15469	;# 
  1963   003C6E                     CLC2SEL2        equ	15470	;# 
  1964   003C6F                     CLC2SEL3        equ	15471	;# 
  1965   003C70                     CLC2GLS0        equ	15472	;# 
  1966   003C71                     CLC2GLS1        equ	15473	;# 
  1967   003C72                     CLC2GLS2        equ	15474	;# 
  1968   003C73                     CLC2GLS3        equ	15475	;# 
  1969   003C74                     CLC1CON         equ	15476	;# 
  1970   003C75                     CLC1POL         equ	15477	;# 
  1971   003C76                     CLC1SEL0        equ	15478	;# 
  1972   003C77                     CLC1SEL1        equ	15479	;# 
  1973   003C78                     CLC1SEL2        equ	15480	;# 
  1974   003C79                     CLC1SEL3        equ	15481	;# 
  1975   003C7A                     CLC1GLS0        equ	15482	;# 
  1976   003C7B                     CLC1GLS1        equ	15483	;# 
  1977   003C7C                     CLC1GLS2        equ	15484	;# 
  1978   003C7D                     CLC1GLS3        equ	15485	;# 
  1979   003C7E                     CLCDATA0        equ	15486	;# 
  1980   003CE5                     CLKRCON         equ	15589	;# 
  1981   003CE6                     CLKRCLK         equ	15590	;# 
  1982   003CFA                     MD1CON0         equ	15610	;# 
  1983   003CFB                     MD1CON1         equ	15611	;# 
  1984   003CFC                     MD1SRC          equ	15612	;# 
  1985   003CFD                     MD1CARL         equ	15613	;# 
  1986   003CFE                     MD1CARH         equ	15614	;# 
  1987   003D10                     SPI1RXB         equ	15632	;# 
  1988   003D11                     SPI1TXB         equ	15633	;# 
  1989   003D12                     SPI1TCNT        equ	15634	;# 
  1990   003D12                     SPI1TCNTL       equ	15634	;# 
  1991   003D13                     SPI1TCNTH       equ	15635	;# 
  1992   003D14                     SPI1CON0        equ	15636	;# 
  1993   003D15                     SPI1CON1        equ	15637	;# 
  1994   003D16                     SPI1CON2        equ	15638	;# 
  1995   003D17                     SPI1STATUS      equ	15639	;# 
  1996   003D18                     SPI1TWIDTH      equ	15640	;# 
  1997   003D19                     SPI1BAUD        equ	15641	;# 
  1998   003D1A                     SPI1INTF        equ	15642	;# 
  1999   003D1B                     SPI1INTE        equ	15643	;# 
  2000   003D1C                     SPI1CLK         equ	15644	;# 
  2001   003D54                     I2C2RXB         equ	15700	;# 
  2002   003D55                     I2C2TXB         equ	15701	;# 
  2003   003D56                     I2C2CNT         equ	15702	;# 
  2004   003D57                     I2C2ADB0        equ	15703	;# 
  2005   003D58                     I2C2ADB1        equ	15704	;# 
  2006   003D59                     I2C2ADR0        equ	15705	;# 
  2007   003D5A                     I2C2ADR1        equ	15706	;# 
  2008   003D5B                     I2C2ADR2        equ	15707	;# 
  2009   003D5C                     I2C2ADR3        equ	15708	;# 
  2010   003D5D                     I2C2CON0        equ	15709	;# 
  2011   003D5E                     I2C2CON1        equ	15710	;# 
  2012   003D5F                     I2C2CON2        equ	15711	;# 
  2013   003D60                     I2C2ERR         equ	15712	;# 
  2014   003D61                     I2C2STAT0       equ	15713	;# 
  2015   003D62                     I2C2STAT1       equ	15714	;# 
  2016   003D63                     I2C2PIR         equ	15715	;# 
  2017   003D64                     I2C2PIE         equ	15716	;# 
  2018   003D65                     I2C2CLK         equ	15717	;# 
  2019   003D66                     I2C2BTO         equ	15718	;# 
  2020   003D6A                     I2C1RXB         equ	15722	;# 
  2021   003D6B                     I2C1TXB         equ	15723	;# 
  2022   003D6C                     I2C1CNT         equ	15724	;# 
  2023   003D6D                     I2C1ADB0        equ	15725	;# 
  2024   003D6E                     I2C1ADB1        equ	15726	;# 
  2025   003D6F                     I2C1ADR0        equ	15727	;# 
  2026   003D70                     I2C1ADR1        equ	15728	;# 
  2027   003D71                     I2C1ADR2        equ	15729	;# 
  2028   003D72                     I2C1ADR3        equ	15730	;# 
  2029   003D73                     I2C1CON0        equ	15731	;# 
  2030   003D74                     I2C1CON1        equ	15732	;# 
  2031   003D75                     I2C1CON2        equ	15733	;# 
  2032   003D76                     I2C1ERR         equ	15734	;# 
  2033   003D77                     I2C1STAT0       equ	15735	;# 
  2034   003D78                     I2C1STAT1       equ	15736	;# 
  2035   003D79                     I2C1PIR         equ	15737	;# 
  2036   003D7A                     I2C1PIE         equ	15738	;# 
  2037   003D7B                     I2C1CLK         equ	15739	;# 
  2038   003D7C                     I2C1BTO         equ	15740	;# 
  2039   003DD0                     U2RXB           equ	15824	;# 
  2040   003DD0                     U2RXBL          equ	15824	;# 
  2041   003DD2                     U2TXB           equ	15826	;# 
  2042   003DD2                     U2TXBL          equ	15826	;# 
  2043   003DD4                     U2P1            equ	15828	;# 
  2044   003DD4                     U2P1L           equ	15828	;# 
  2045   003DD6                     U2P2            equ	15830	;# 
  2046   003DD6                     U2P2L           equ	15830	;# 
  2047   003DD8                     U2P3            equ	15832	;# 
  2048   003DD8                     U2P3L           equ	15832	;# 
  2049   003DDA                     U2CON0          equ	15834	;# 
  2050   003DDB                     U2CON1          equ	15835	;# 
  2051   003DDC                     U2CON2          equ	15836	;# 
  2052   003DDD                     U2BRG           equ	15837	;# 
  2053   003DDD                     U2BRGL          equ	15837	;# 
  2054   003DDE                     U2BRGH          equ	15838	;# 
  2055   003DDF                     U2FIFO          equ	15839	;# 
  2056   003DE0                     U2UIR           equ	15840	;# 
  2057   003DE1                     U2ERRIR         equ	15841	;# 
  2058   003DE2                     U2ERRIE         equ	15842	;# 
  2059   003DE8                     U1RXB           equ	15848	;# 
  2060   003DE8                     U1RXBL          equ	15848	;# 
  2061   003DE9                     U1RXCHK         equ	15849	;# 
  2062   003DEA                     U1TXB           equ	15850	;# 
  2063   003DEA                     U1TXBL          equ	15850	;# 
  2064   003DEB                     U1TXCHK         equ	15851	;# 
  2065   003DEC                     U1P1            equ	15852	;# 
  2066   003DEC                     U1P1L           equ	15852	;# 
  2067   003DED                     U1P1H           equ	15853	;# 
  2068   003DEE                     U1P2            equ	15854	;# 
  2069   003DEE                     U1P2L           equ	15854	;# 
  2070   003DEF                     U1P2H           equ	15855	;# 
  2071   003DF0                     U1P3            equ	15856	;# 
  2072   003DF0                     U1P3L           equ	15856	;# 
  2073   003DF1                     U1P3H           equ	15857	;# 
  2074   003DF2                     U1CON0          equ	15858	;# 
  2075   003DF3                     U1CON1          equ	15859	;# 
  2076   003DF4                     U1CON2          equ	15860	;# 
  2077   003DF5                     U1BRG           equ	15861	;# 
  2078   003DF5                     U1BRGL          equ	15861	;# 
  2079   003DF6                     U1BRGH          equ	15862	;# 
  2080   003DF7                     U1FIFO          equ	15863	;# 
  2081   003DF8                     U1UIR           equ	15864	;# 
  2082   003DF9                     U1ERRIR         equ	15865	;# 
  2083   003DFA                     U1ERRIE         equ	15866	;# 
  2084   003E9C                     DAC1CON1        equ	16028	;# 
  2085   003E9E                     DAC1CON0        equ	16030	;# 
  2086   003EB8                     CM2CON0         equ	16056	;# 
  2087   003EB9                     CM2CON1         equ	16057	;# 
  2088   003EBA                     CM2NCH          equ	16058	;# 
  2089   003EBB                     CM2PCH          equ	16059	;# 
  2090   003EBC                     CM1CON0         equ	16060	;# 
  2091   003EBD                     CM1CON1         equ	16061	;# 
  2092   003EBE                     CM1NCH          equ	16062	;# 
  2093   003EBF                     CM1PCH          equ	16063	;# 
  2094   003EC0                     CMOUT           equ	16064	;# 
  2095   003EC1                     FVRCON          equ	16065	;# 
  2096   003EC3                     ZCDCON          equ	16067	;# 
  2097   003EC9                     HLVDCON0        equ	16073	;# 
  2098   003ECA                     HLVDCON1        equ	16074	;# 
  2099   003ED7                     ADCP            equ	16087	;# 
  2100   003EDE                     ADLTH           equ	16094	;# 
  2101   003EDE                     ADLTHL          equ	16094	;# 
  2102   003EDF                     ADLTHH          equ	16095	;# 
  2103   003EE0                     ADUTH           equ	16096	;# 
  2104   003EE0                     ADUTHL          equ	16096	;# 
  2105   003EE1                     ADUTHH          equ	16097	;# 
  2106   003EE2                     ADERR           equ	16098	;# 
  2107   003EE2                     ADERRL          equ	16098	;# 
  2108   003EE3                     ADERRH          equ	16099	;# 
  2109   003EE4                     ADSTPT          equ	16100	;# 
  2110   003EE4                     ADSTPTL         equ	16100	;# 
  2111   003EE5                     ADSTPTH         equ	16101	;# 
  2112   003EE6                     ADFLTR          equ	16102	;# 
  2113   003EE6                     ADFLTRL         equ	16102	;# 
  2114   003EE7                     ADFLTRH         equ	16103	;# 
  2115   003EE8                     ADACC           equ	16104	;# 
  2116   003EE8                     ADACCL          equ	16104	;# 
  2117   003EE9                     ADACCH          equ	16105	;# 
  2118   003EEA                     ADACCU          equ	16106	;# 
  2119   003EEB                     ADCNT           equ	16107	;# 
  2120   003EEC                     ADRPT           equ	16108	;# 
  2121   003EED                     ADPREV          equ	16109	;# 
  2122   003EED                     ADPREVL         equ	16109	;# 
  2123   003EEE                     ADPREVH         equ	16110	;# 
  2124   003EEF                     ADRES           equ	16111	;# 
  2125   003EEF                     ADRESL          equ	16111	;# 
  2126   003EF0                     ADRESH          equ	16112	;# 
  2127   003EF1                     ADPCH           equ	16113	;# 
  2128   003EF3                     ADACQ           equ	16115	;# 
  2129   003EF3                     ADACQL          equ	16115	;# 
  2130   003EF4                     ADACQH          equ	16116	;# 
  2131   003EF5                     ADCAP           equ	16117	;# 
  2132   003EF6                     ADPRE           equ	16118	;# 
  2133   003EF6                     ADPREL          equ	16118	;# 
  2134   003EF7                     ADPREH          equ	16119	;# 
  2135   003EF8                     ADCON0          equ	16120	;# 
  2136   003EF9                     ADCON1          equ	16121	;# 
  2137   003EFA                     ADCON2          equ	16122	;# 
  2138   003EFB                     ADCON3          equ	16123	;# 
  2139   003EFC                     ADSTAT          equ	16124	;# 
  2140   003EFD                     ADREF           equ	16125	;# 
  2141   003EFE                     ADACT           equ	16126	;# 
  2142   003EFF                     ADCLK           equ	16127	;# 
  2143   003F12                     SMT1TMR         equ	16146	;# 
  2144   003F12                     SMT1TMRL        equ	16146	;# 
  2145   003F13                     SMT1TMRH        equ	16147	;# 
  2146   003F14                     SMT1TMRU        equ	16148	;# 
  2147   003F15                     SMT1CPR         equ	16149	;# 
  2148   003F15                     SMT1CPRL        equ	16149	;# 
  2149   003F16                     SMT1CPRH        equ	16150	;# 
  2150   003F17                     SMT1CPRU        equ	16151	;# 
  2151   003F18                     SMT1CPW         equ	16152	;# 
  2152   003F18                     SMT1CPWL        equ	16152	;# 
  2153   003F19                     SMT1CPWH        equ	16153	;# 
  2154   003F1A                     SMT1CPWU        equ	16154	;# 
  2155   003F1B                     SMT1PR          equ	16155	;# 
  2156   003F1B                     SMT1PRL         equ	16155	;# 
  2157   003F1C                     SMT1PRH         equ	16156	;# 
  2158   003F1D                     SMT1PRU         equ	16157	;# 
  2159   003F1E                     SMT1CON0        equ	16158	;# 
  2160   003F1F                     SMT1CON1        equ	16159	;# 
  2161   003F20                     SMT1STAT        equ	16160	;# 
  2162   003F21                     SMT1CLK         equ	16161	;# 
  2163   003F22                     SMT1SIG         equ	16162	;# 
  2164   003F23                     SMT1WIN         equ	16163	;# 
  2165   003F38                     NCO1ACC         equ	16184	;# 
  2166   003F38                     NCO1ACCL        equ	16184	;# 
  2167   003F39                     NCO1ACCH        equ	16185	;# 
  2168   003F3A                     NCO1ACCU        equ	16186	;# 
  2169   003F3B                     NCO1INC         equ	16187	;# 
  2170   003F3B                     NCO1INCL        equ	16187	;# 
  2171   003F3C                     NCO1INCH        equ	16188	;# 
  2172   003F3D                     NCO1INCU        equ	16189	;# 
  2173   003F3E                     NCO1CON         equ	16190	;# 
  2174   003F3F                     NCO1CLK         equ	16191	;# 
  2175   003F40                     CWG3CLK         equ	16192	;# 
  2176   003F40                     CWG3CLKCON      equ	16192	;# 
  2177   003F41                     CWG3ISM         equ	16193	;# 
  2178   003F41                     CWG3DAT         equ	16193	;# 
  2179   003F42                     CWG3DBR         equ	16194	;# 
  2180   003F43                     CWG3DBF         equ	16195	;# 
  2181   003F44                     CWG3CON0        equ	16196	;# 
  2182   003F45                     CWG3CON1        equ	16197	;# 
  2183   003F46                     CWG3AS0         equ	16198	;# 
  2184   003F47                     CWG3AS1         equ	16199	;# 
  2185   003F48                     CWG3STR         equ	16200	;# 
  2186   003F49                     CWG2CLK         equ	16201	;# 
  2187   003F49                     CWG2CLKCON      equ	16201	;# 
  2188   003F4A                     CWG2ISM         equ	16202	;# 
  2189   003F4A                     CWG2DAT         equ	16202	;# 
  2190   003F4B                     CWG2DBR         equ	16203	;# 
  2191   003F4C                     CWG2DBF         equ	16204	;# 
  2192   003F4D                     CWG2CON0        equ	16205	;# 
  2193   003F4E                     CWG2CON1        equ	16206	;# 
  2194   003F4F                     CWG2AS0         equ	16207	;# 
  2195   003F50                     CWG2AS1         equ	16208	;# 
  2196   003F51                     CWG2STR         equ	16209	;# 
  2197   003F52                     CWG1CLK         equ	16210	;# 
  2198   003F52                     CWG1CLKCON      equ	16210	;# 
  2199   003F53                     CWG1ISM         equ	16211	;# 
  2200   003F53                     CWG1DAT         equ	16211	;# 
  2201   003F54                     CWG1DBR         equ	16212	;# 
  2202   003F55                     CWG1DBF         equ	16213	;# 
  2203   003F56                     CWG1CON0        equ	16214	;# 
  2204   003F57                     CWG1CON1        equ	16215	;# 
  2205   003F58                     CWG1AS0         equ	16216	;# 
  2206   003F59                     CWG1AS1         equ	16217	;# 
  2207   003F5A                     CWG1STR         equ	16218	;# 
  2208   003F5E                     CCPTMRS0        equ	16222	;# 
  2209   003F5F                     CCPTMRS1        equ	16223	;# 
  2210   003F60                     PWM8DC          equ	16224	;# 
  2211   003F60                     PWM8DCL         equ	16224	;# 
  2212   003F61                     PWM8DCH         equ	16225	;# 
  2213   003F62                     PWM8CON         equ	16226	;# 
  2214   003F64                     PWM7DC          equ	16228	;# 
  2215   003F64                     PWM7DCL         equ	16228	;# 
  2216   003F65                     PWM7DCH         equ	16229	;# 
  2217   003F66                     PWM7CON         equ	16230	;# 
  2218   003F68                     PWM6DC          equ	16232	;# 
  2219   003F68                     PWM6DCL         equ	16232	;# 
  2220   003F69                     PWM6DCH         equ	16233	;# 
  2221   003F6A                     PWM6CON         equ	16234	;# 
  2222   003F6C                     PWM5DC          equ	16236	;# 
  2223   003F6C                     PWM5DCL         equ	16236	;# 
  2224   003F6D                     PWM5DCH         equ	16237	;# 
  2225   003F6E                     PWM5CON         equ	16238	;# 
  2226   003F70                     CCPR4           equ	16240	;# 
  2227   003F70                     CCPR4L          equ	16240	;# 
  2228   003F71                     CCPR4H          equ	16241	;# 
  2229   003F72                     CCP4CON         equ	16242	;# 
  2230   003F73                     CCP4CAP         equ	16243	;# 
  2231   003F74                     CCPR3           equ	16244	;# 
  2232   003F74                     CCPR3L          equ	16244	;# 
  2233   003F75                     CCPR3H          equ	16245	;# 
  2234   003F76                     CCP3CON         equ	16246	;# 
  2235   003F77                     CCP3CAP         equ	16247	;# 
  2236   003F78                     CCPR2           equ	16248	;# 
  2237   003F78                     CCPR2L          equ	16248	;# 
  2238   003F79                     CCPR2H          equ	16249	;# 
  2239   003F7A                     CCP2CON         equ	16250	;# 
  2240   003F7B                     CCP2CAP         equ	16251	;# 
  2241   003F7C                     CCPR1           equ	16252	;# 
  2242   003F7C                     CCPR1L          equ	16252	;# 
  2243   003F7D                     CCPR1H          equ	16253	;# 
  2244   003F7E                     CCP1CON         equ	16254	;# 
  2245   003F7F                     CCP1CAP         equ	16255	;# 
  2246   003F92                     T6TMR           equ	16274	;# 
  2247   003F92                     TMR6            equ	16274	;# 
  2248   003F93                     T6PR            equ	16275	;# 
  2249   003F93                     PR6             equ	16275	;# 
  2250   003F94                     T6CON           equ	16276	;# 
  2251   003F95                     T6HLT           equ	16277	;# 
  2252   003F96                     T6CLKCON        equ	16278	;# 
  2253   003F96                     T6CLK           equ	16278	;# 
  2254   003F97                     T6RST           equ	16279	;# 
  2255   003F98                     TMR5            equ	16280	;# 
  2256   003F98                     TMR5L           equ	16280	;# 
  2257   003F99                     TMR5H           equ	16281	;# 
  2258   003F9A                     T5CON           equ	16282	;# 
  2259   003F9A                     TMR5CON         equ	16282	;# 
  2260   003F9B                     T5GCON          equ	16283	;# 
  2261   003F9B                     TMR5GCON        equ	16283	;# 
  2262   003F9C                     T5GATE          equ	16284	;# 
  2263   003F9C                     TMR5GATE        equ	16284	;# 
  2264   003F9D                     T5CLK           equ	16285	;# 
  2265   003F9D                     TMR5CLK         equ	16285	;# 
  2266   003F9D                     PR5             equ	16285	;# 
  2267   003F9E                     T4TMR           equ	16286	;# 
  2268   003F9E                     TMR4            equ	16286	;# 
  2269   003F9F                     T4PR            equ	16287	;# 
  2270   003F9F                     PR4             equ	16287	;# 
  2271   003FA0                     T4CON           equ	16288	;# 
  2272   003FA1                     T4HLT           equ	16289	;# 
  2273   003FA2                     T4CLKCON        equ	16290	;# 
  2274   003FA2                     T4CLK           equ	16290	;# 
  2275   003FA3                     T4RST           equ	16291	;# 
  2276   003FA4                     TMR3            equ	16292	;# 
  2277   003FA4                     TMR3L           equ	16292	;# 
  2278   003FA5                     TMR3H           equ	16293	;# 
  2279   003FA6                     T3CON           equ	16294	;# 
  2280   003FA6                     TMR3CON         equ	16294	;# 
  2281   003FA7                     T3GCON          equ	16295	;# 
  2282   003FA7                     TMR3GCON        equ	16295	;# 
  2283   003FA8                     T3GATE          equ	16296	;# 
  2284   003FA8                     TMR3GATE        equ	16296	;# 
  2285   003FA9                     T3CLK           equ	16297	;# 
  2286   003FA9                     TMR3CLK         equ	16297	;# 
  2287   003FA9                     PR3             equ	16297	;# 
  2288   003FAA                     T2TMR           equ	16298	;# 
  2289   003FAA                     TMR2            equ	16298	;# 
  2290   003FAB                     T2PR            equ	16299	;# 
  2291   003FAB                     PR2             equ	16299	;# 
  2292   003FAC                     T2CON           equ	16300	;# 
  2293   003FAD                     T2HLT           equ	16301	;# 
  2294   003FAE                     T2CLKCON        equ	16302	;# 
  2295   003FAE                     T2CLK           equ	16302	;# 
  2296   003FAF                     T2RST           equ	16303	;# 
  2297   003FB0                     TMR1            equ	16304	;# 
  2298   003FB0                     TMR1L           equ	16304	;# 
  2299   003FB1                     TMR1H           equ	16305	;# 
  2300   003FB2                     T1CON           equ	16306	;# 
  2301   003FB2                     TMR1CON         equ	16306	;# 
  2302   003FB3                     T1GCON          equ	16307	;# 
  2303   003FB3                     TMR1GCON        equ	16307	;# 
  2304   003FB4                     T1GATE          equ	16308	;# 
  2305   003FB4                     TMR1GATE        equ	16308	;# 
  2306   003FB5                     T1CLK           equ	16309	;# 
  2307   003FB5                     TMR1CLK         equ	16309	;# 
  2308   003FB5                     PR1             equ	16309	;# 
  2309   003FB6                     TMR0L           equ	16310	;# 
  2310   003FB6                     TMR0            equ	16310	;# 
  2311   003FB7                     TMR0H           equ	16311	;# 
  2312   003FB7                     PR0             equ	16311	;# 
  2313   003FB8                     T0CON0          equ	16312	;# 
  2314   003FB9                     T0CON1          equ	16313	;# 
  2315   003FBA                     LATA            equ	16314	;# 
  2316   003FBB                     LATB            equ	16315	;# 
  2317   003FBC                     LATC            equ	16316	;# 
  2318   003FC2                     TRISA           equ	16322	;# 
  2319   003FC3                     TRISB           equ	16323	;# 
  2320   003FC4                     TRISC           equ	16324	;# 
  2321   003FCA                     PORTA           equ	16330	;# 
  2322   003FCB                     PORTB           equ	16331	;# 
  2323   003FCC                     PORTC           equ	16332	;# 
  2324   003FCE                     PORTE           equ	16334	;# 
  2325   003FD2                     INTCON0         equ	16338	;# 
  2326   003FD3                     INTCON1         equ	16339	;# 
  2327   003FD4                     IVTLOCK         equ	16340	;# 
  2328   003FD5                     IVTBASE         equ	16341	;# 
  2329   003FD5                     IVTBASEL        equ	16341	;# 
  2330   003FD6                     IVTBASEH        equ	16342	;# 
  2331   003FD7                     IVTBASEU        equ	16343	;# 
  2332   003FD8                     STATUS          equ	16344	;# 
  2333   003FD9                     FSR2            equ	16345	;# 
  2334   003FD9                     FSR2L           equ	16345	;# 
  2335   003FDA                     FSR2H           equ	16346	;# 
  2336   003FDB                     PLUSW2          equ	16347	;# 
  2337   003FDC                     PREINC2         equ	16348	;# 
  2338   003FDD                     POSTDEC2        equ	16349	;# 
  2339   003FDE                     POSTINC2        equ	16350	;# 
  2340   003FDF                     INDF2           equ	16351	;# 
  2341   003FE0                     BSR             equ	16352	;# 
  2342   003FE1                     FSR1            equ	16353	;# 
  2343   003FE1                     FSR1L           equ	16353	;# 
  2344   003FE2                     FSR1H           equ	16354	;# 
  2345   003FE3                     PLUSW1          equ	16355	;# 
  2346   003FE4                     PREINC1         equ	16356	;# 
  2347   003FE5                     POSTDEC1        equ	16357	;# 
  2348   003FE6                     POSTINC1        equ	16358	;# 
  2349   003FE7                     INDF1           equ	16359	;# 
  2350   003FE8                     WREG            equ	16360	;# 
  2351   003FE9                     FSR0            equ	16361	;# 
  2352   003FE9                     FSR0L           equ	16361	;# 
  2353   003FEA                     FSR0H           equ	16362	;# 
  2354   003FEB                     PLUSW0          equ	16363	;# 
  2355   003FEC                     PREINC0         equ	16364	;# 
  2356   003FED                     POSTDEC0        equ	16365	;# 
  2357   003FEE                     POSTINC0        equ	16366	;# 
  2358   003FEF                     INDF0           equ	16367	;# 
  2359   003FF0                     PCON0           equ	16368	;# 
  2360   003FF1                     PCON1           equ	16369	;# 
  2361   003FF3                     PROD            equ	16371	;# 
  2362   003FF3                     PRODL           equ	16371	;# 
  2363   003FF4                     PRODH           equ	16372	;# 
  2364   003FF5                     TABLAT          equ	16373	;# 
  2365   003FF6                     TBLPTR          equ	16374	;# 
  2366   003FF6                     TBLPTRL         equ	16374	;# 
  2367   003FF7                     TBLPTRH         equ	16375	;# 
  2368   003FF8                     TBLPTRU         equ	16376	;# 
  2369   003FF9                     PCLAT           equ	16377	;# 
  2370   003FF9                     PCL             equ	16377	;# 
  2371   003FFA                     PCLATH          equ	16378	;# 
  2372   003FFB                     PCLATU          equ	16379	;# 
  2373   003FFC                     STKPTR          equ	16380	;# 
  2374   003FFD                     TOS             equ	16381	;# 
  2375   003FFD                     TOSL            equ	16381	;# 
  2376   003FFE                     TOSH            equ	16382	;# 
  2377   003FFF                     TOSU            equ	16383	;# 
  2378   003880                     STATUS_CSHAD    equ	14464	;# 
  2379   003881                     WREG_CSHAD      equ	14465	;# 
  2380   003882                     BSR_CSHAD       equ	14466	;# 
  2381   003883                     SHADCON         equ	14467	;# 
  2382   003884                     STATUS_SHAD     equ	14468	;# 
  2383   003885                     WREG_SHAD       equ	14469	;# 
  2384   003886                     BSR_SHAD        equ	14470	;# 
  2385   003887                     PCLATH_SHAD     equ	14471	;# 
  2386   003888                     PCLATU_SHAD     equ	14472	;# 
  2387   003889                     FSR0SH          equ	14473	;# 
  2388   003889                     FSR0L_SHAD      equ	14473	;# 
  2389   00388A                     FSR0H_SHAD      equ	14474	;# 
  2390   00388B                     FSR1SH          equ	14475	;# 
  2391   00388B                     FSR1L_SHAD      equ	14475	;# 
  2392   00388C                     FSR1H_SHAD      equ	14476	;# 
  2393   00388D                     FSR2SH          equ	14477	;# 
  2394   00388D                     FSR2L_SHAD      equ	14477	;# 
  2395   00388E                     FSR2H_SHAD      equ	14478	;# 
  2396   00388F                     PRODSH          equ	14479	;# 
  2397   00388F                     PRODL_SHAD      equ	14479	;# 
  2398   003890                     PRODH_SHAD      equ	14480	;# 
  2399   00389D                     IVTADL          equ	14493	;# 
  2400   00389E                     IVTADH          equ	14494	;# 
  2401   00389F                     IVTADU          equ	14495	;# 
  2402   00395B                     WDTCON0         equ	14683	;# 
  2403   00395C                     WDTCON1         equ	14684	;# 
  2404   00395D                     WDTPSL          equ	14685	;# 
  2405   00395E                     WDTPSH          equ	14686	;# 
  2406   00395F                     WDTTMR          equ	14687	;# 
  2407   003960                     CRCDATA         equ	14688	;# 
  2408   003960                     CRCDATL         equ	14688	;# 
  2409   003961                     CRCDATH         equ	14689	;# 
  2410   003962                     CRCACC          equ	14690	;# 
  2411   003962                     CRCACCL         equ	14690	;# 
  2412   003963                     CRCACCH         equ	14691	;# 
  2413   003964                     CRCSHFT         equ	14692	;# 
  2414   003964                     CRCSHIFTL       equ	14692	;# 
  2415   003965                     CRCSHIFTH       equ	14693	;# 
  2416   003966                     CRCXOR          equ	14694	;# 
  2417   003966                     CRCXORL         equ	14694	;# 
  2418   003967                     CRCXORH         equ	14695	;# 
  2419   003968                     CRCCON0         equ	14696	;# 
  2420   003969                     CRCCON1         equ	14697	;# 
  2421   003976                     SCANLADR        equ	14710	;# 
  2422   003976                     SCANLADRL       equ	14710	;# 
  2423   003977                     SCANLADRH       equ	14711	;# 
  2424   003978                     SCANLADRU       equ	14712	;# 
  2425   003979                     SCANHADR        equ	14713	;# 
  2426   003979                     SCANHADRL       equ	14713	;# 
  2427   00397A                     SCANHADRH       equ	14714	;# 
  2428   00397B                     SCANHADRU       equ	14715	;# 
  2429   00397C                     SCANCON0        equ	14716	;# 
  2430   00397D                     SCANTRIG        equ	14717	;# 
  2431   003980                     IPR0            equ	14720	;# 
  2432   003981                     IPR1            equ	14721	;# 
  2433   003982                     IPR2            equ	14722	;# 
  2434   003983                     IPR3            equ	14723	;# 
  2435   003984                     IPR4            equ	14724	;# 
  2436   003985                     IPR5            equ	14725	;# 
  2437   003986                     IPR6            equ	14726	;# 
  2438   003987                     IPR7            equ	14727	;# 
  2439   003988                     IPR8            equ	14728	;# 
  2440   003989                     IPR9            equ	14729	;# 
  2441   00398A                     IPR10           equ	14730	;# 
  2442   003990                     PIE0            equ	14736	;# 
  2443   003991                     PIE1            equ	14737	;# 
  2444   003992                     PIE2            equ	14738	;# 
  2445   003993                     PIE3            equ	14739	;# 
  2446   003994                     PIE4            equ	14740	;# 
  2447   003995                     PIE5            equ	14741	;# 
  2448   003996                     PIE6            equ	14742	;# 
  2449   003997                     PIE7            equ	14743	;# 
  2450   003998                     PIE8            equ	14744	;# 
  2451   003999                     PIE9            equ	14745	;# 
  2452   00399A                     PIE10           equ	14746	;# 
  2453   0039A0                     PIR0            equ	14752	;# 
  2454   0039A1                     PIR1            equ	14753	;# 
  2455   0039A2                     PIR2            equ	14754	;# 
  2456   0039A3                     PIR3            equ	14755	;# 
  2457   0039A4                     PIR4            equ	14756	;# 
  2458   0039A5                     PIR5            equ	14757	;# 
  2459   0039A6                     PIR6            equ	14758	;# 
  2460   0039A7                     PIR7            equ	14759	;# 
  2461   0039A8                     PIR8            equ	14760	;# 
  2462   0039A9                     PIR9            equ	14761	;# 
  2463   0039AA                     PIR10           equ	14762	;# 
  2464   0039C0                     PMD0            equ	14784	;# 
  2465   0039C1                     PMD1            equ	14785	;# 
  2466   0039C2                     PMD2            equ	14786	;# 
  2467   0039C3                     PMD3            equ	14787	;# 
  2468   0039C4                     PMD4            equ	14788	;# 
  2469   0039C5                     PMD5            equ	14789	;# 
  2470   0039C6                     PMD6            equ	14790	;# 
  2471   0039C7                     PMD7            equ	14791	;# 
  2472   0039D0                     BORCON          equ	14800	;# 
  2473   0039D1                     VREGCON         equ	14801	;# 
  2474   0039D8                     CPUDOZE         equ	14808	;# 
  2475   0039D9                     OSCCON1         equ	14809	;# 
  2476   0039DA                     OSCCON2         equ	14810	;# 
  2477   0039DB                     OSCCON3         equ	14811	;# 
  2478   0039DC                     OSCSTAT         equ	14812	;# 
  2479   0039DC                     OSCSTAT1        equ	14812	;# 
  2480   0039DD                     OSCEN           equ	14813	;# 
  2481   0039DE                     OSCTUNE         equ	14814	;# 
  2482   0039DF                     OSCFRQ          equ	14815	;# 
  2483   0039E0                     NVMADRL         equ	14816	;# 
  2484   0039E1                     NVMADRH         equ	14817	;# 
  2485   0039E3                     NVMDAT          equ	14819	;# 
  2486   0039E5                     NVMCON1         equ	14821	;# 
  2487   0039E6                     NVMCON2         equ	14822	;# 
  2488   0039EF                     PRLOCK          equ	14831	;# 
  2489   0039F1                     ISRPR           equ	14833	;# 
  2490   0039F2                     MAINPR          equ	14834	;# 
  2491   0039F3                     DMA1PR          equ	14835	;# 
  2492   0039F4                     DMA2PR          equ	14836	;# 
  2493   0039F7                     SCANPR          equ	14839	;# 
  2494   003A00                     RA0PPS          equ	14848	;# 
  2495   003A01                     RA1PPS          equ	14849	;# 
  2496   003A02                     RA2PPS          equ	14850	;# 
  2497   003A03                     RA3PPS          equ	14851	;# 
  2498   003A04                     RA4PPS          equ	14852	;# 
  2499   003A05                     RA5PPS          equ	14853	;# 
  2500   003A06                     RA6PPS          equ	14854	;# 
  2501   003A07                     RA7PPS          equ	14855	;# 
  2502   003A08                     RB0PPS          equ	14856	;# 
  2503   003A09                     RB1PPS          equ	14857	;# 
  2504   003A0A                     RB2PPS          equ	14858	;# 
  2505   003A0B                     RB3PPS          equ	14859	;# 
  2506   003A0C                     RB4PPS          equ	14860	;# 
  2507   003A0D                     RB5PPS          equ	14861	;# 
  2508   003A0E                     RB6PPS          equ	14862	;# 
  2509   003A0F                     RB7PPS          equ	14863	;# 
  2510   003A10                     RC0PPS          equ	14864	;# 
  2511   003A11                     RC1PPS          equ	14865	;# 
  2512   003A12                     RC2PPS          equ	14866	;# 
  2513   003A13                     RC3PPS          equ	14867	;# 
  2514   003A14                     RC4PPS          equ	14868	;# 
  2515   003A15                     RC5PPS          equ	14869	;# 
  2516   003A16                     RC6PPS          equ	14870	;# 
  2517   003A17                     RC7PPS          equ	14871	;# 
  2518   003A40                     ANSELA          equ	14912	;# 
  2519   003A41                     WPUA            equ	14913	;# 
  2520   003A42                     ODCONA          equ	14914	;# 
  2521   003A43                     SLRCONA         equ	14915	;# 
  2522   003A44                     INLVLA          equ	14916	;# 
  2523   003A45                     IOCAP           equ	14917	;# 
  2524   003A46                     IOCAN           equ	14918	;# 
  2525   003A47                     IOCAF           equ	14919	;# 
  2526   003A48                     CCDPA           equ	14920	;# 
  2527   003A49                     CCDNA           equ	14921	;# 
  2528   003A50                     ANSELB          equ	14928	;# 
  2529   003A51                     WPUB            equ	14929	;# 
  2530   003A52                     ODCONB          equ	14930	;# 
  2531   003A53                     SLRCONB         equ	14931	;# 
  2532   003A54                     INLVLB          equ	14932	;# 
  2533   003A55                     IOCBP           equ	14933	;# 
  2534   003A56                     IOCBN           equ	14934	;# 
  2535   003A57                     IOCBF           equ	14935	;# 
  2536   003A58                     CCDPB           equ	14936	;# 
  2537   003A59                     CCDNB           equ	14937	;# 
  2538   003A5A                     RB1I2C          equ	14938	;# 
  2539   003A5B                     RB2I2C          equ	14939	;# 
  2540   003A60                     ANSELC          equ	14944	;# 
  2541   003A61                     WPUC            equ	14945	;# 
  2542   003A62                     ODCONC          equ	14946	;# 
  2543   003A63                     SLRCONC         equ	14947	;# 
  2544   003A64                     INLVLC          equ	14948	;# 
  2545   003A65                     IOCCP           equ	14949	;# 
  2546   003A66                     IOCCN           equ	14950	;# 
  2547   003A67                     IOCCF           equ	14951	;# 
  2548   003A68                     CCDPC           equ	14952	;# 
  2549   003A69                     CCDNC           equ	14953	;# 
  2550   003A6A                     RC3I2C          equ	14954	;# 
  2551   003A6B                     RC4I2C          equ	14955	;# 
  2552   003A81                     WPUE            equ	14977	;# 
  2553   003A84                     INLVLE          equ	14980	;# 
  2554   003A85                     IOCEP           equ	14981	;# 
  2555   003A86                     IOCEN           equ	14982	;# 
  2556   003A87                     IOCEF           equ	14983	;# 
  2557   003ABE                     CCDCON          equ	15038	;# 
  2558   003ABF                     PPSLOCK         equ	15039	;# 
  2559   003AC0                     INT0PPS         equ	15040	;# 
  2560   003AC1                     INT1PPS         equ	15041	;# 
  2561   003AC2                     INT2PPS         equ	15042	;# 
  2562   003AC3                     T0CKIPPS        equ	15043	;# 
  2563   003AC4                     T1CKIPPS        equ	15044	;# 
  2564   003AC5                     T1GPPS          equ	15045	;# 
  2565   003AC6                     T3CKIPPS        equ	15046	;# 
  2566   003AC7                     T3GPPS          equ	15047	;# 
  2567   003AC8                     T5CKIPPS        equ	15048	;# 
  2568   003AC9                     T5GPPS          equ	15049	;# 
  2569   003ACA                     T2INPPS         equ	15050	;# 
  2570   003ACB                     T4INPPS         equ	15051	;# 
  2571   003ACC                     T6INPPS         equ	15052	;# 
  2572   003ACD                     CCP1PPS         equ	15053	;# 
  2573   003ACE                     CCP2PPS         equ	15054	;# 
  2574   003ACF                     CCP3PPS         equ	15055	;# 
  2575   003AD0                     CCP4PPS         equ	15056	;# 
  2576   003AD1                     SMT1WINPPS      equ	15057	;# 
  2577   003AD2                     SMT1SIGPPS      equ	15058	;# 
  2578   003AD3                     CWG1INPPS       equ	15059	;# 
  2579   003AD4                     CWG2INPPS       equ	15060	;# 
  2580   003AD5                     CWG3INPPS       equ	15061	;# 
  2581   003AD6                     MD1CARLPPS      equ	15062	;# 
  2582   003AD7                     MD1CARHPPS      equ	15063	;# 
  2583   003AD8                     MD1SRCPPS       equ	15064	;# 
  2584   003AD9                     CLCIN0PPS       equ	15065	;# 
  2585   003ADA                     CLCIN1PPS       equ	15066	;# 
  2586   003ADB                     CLCIN2PPS       equ	15067	;# 
  2587   003ADC                     CLCIN3PPS       equ	15068	;# 
  2588   003ADD                     ADACTPPS        equ	15069	;# 
  2589   003ADE                     SPI1SCKPPS      equ	15070	;# 
  2590   003ADF                     SPI1SDIPPS      equ	15071	;# 
  2591   003AE0                     SPI1SSPPS       equ	15072	;# 
  2592   003AE1                     I2C1SCLPPS      equ	15073	;# 
  2593   003AE2                     I2C1SDAPPS      equ	15074	;# 
  2594   003AE3                     I2C2SCLPPS      equ	15075	;# 
  2595   003AE4                     I2C2SDAPPS      equ	15076	;# 
  2596   003AE5                     U1RXPPS         equ	15077	;# 
  2597   003AE6                     U1CTSPPS        equ	15078	;# 
  2598   003AE8                     U2RXPPS         equ	15080	;# 
  2599   003AE9                     U2CTSPPS        equ	15081	;# 
  2600   003BC9                     DMA2BUF         equ	15305	;# 
  2601   003BCA                     DMA2DCNT        equ	15306	;# 
  2602   003BCA                     DMA2DCNTL       equ	15306	;# 
  2603   003BCB                     DMA2DCNTH       equ	15307	;# 
  2604   003BCC                     DMA2DPTR        equ	15308	;# 
  2605   003BCC                     DMA2DPTRL       equ	15308	;# 
  2606   003BCD                     DMA2DPTRH       equ	15309	;# 
  2607   003BCE                     DMA2DSZ         equ	15310	;# 
  2608   003BCE                     DMA2DSZL        equ	15310	;# 
  2609   003BCF                     DMA2DSZH        equ	15311	;# 
  2610   003BD0                     DMA2DSA         equ	15312	;# 
  2611   003BD0                     DMA2DSAL        equ	15312	;# 
  2612   003BD1                     DMA2DSAH        equ	15313	;# 
  2613   003BD2                     DMA2SCNT        equ	15314	;# 
  2614   003BD2                     DMA2SCNTL       equ	15314	;# 
  2615   003BD3                     DMA2SCNTH       equ	15315	;# 
  2616   003BD4                     DMA2SPTR        equ	15316	;# 
  2617   003BD4                     DMA2SPTRL       equ	15316	;# 
  2618   003BD5                     DMA2SPTRH       equ	15317	;# 
  2619   003BD6                     DMA2SPTRU       equ	15318	;# 
  2620   003BD7                     DMA2SSZ         equ	15319	;# 
  2621   003BD7                     DMA2SSZL        equ	15319	;# 
  2622   003BD8                     DMA2SSZH        equ	15320	;# 
  2623   003BD9                     DMA2SSA         equ	15321	;# 
  2624   003BD9                     DMA2SSAL        equ	15321	;# 
  2625   003BDA                     DMA2SSAH        equ	15322	;# 
  2626   003BDB                     DMA2SSAU        equ	15323	;# 
  2627   003BDC                     DMA2CON0        equ	15324	;# 
  2628   003BDD                     DMA2CON1        equ	15325	;# 
  2629   003BDE                     DMA2AIRQ        equ	15326	;# 
  2630   003BDF                     DMA2SIRQ        equ	15327	;# 
  2631   003BE9                     DMA1BUF         equ	15337	;# 
  2632   003BEA                     DMA1DCNT        equ	15338	;# 
  2633   003BEA                     DMA1DCNTL       equ	15338	;# 
  2634   003BEB                     DMA1DCNTH       equ	15339	;# 
  2635   003BEC                     DMA1DPTR        equ	15340	;# 
  2636   003BEC                     DMA1DPTRL       equ	15340	;# 
  2637   003BED                     DMA1DPTRH       equ	15341	;# 
  2638   003BEE                     DMA1DSZ         equ	15342	;# 
  2639   003BEE                     DMA1DSZL        equ	15342	;# 
  2640   003BEF                     DMA1DSZH        equ	15343	;# 
  2641   003BF0                     DMA1DSA         equ	15344	;# 
  2642   003BF0                     DMA1DSAL        equ	15344	;# 
  2643   003BF1                     DMA1DSAH        equ	15345	;# 
  2644   003BF2                     DMA1SCNT        equ	15346	;# 
  2645   003BF2                     DMA1SCNTL       equ	15346	;# 
  2646   003BF3                     DMA1SCNTH       equ	15347	;# 
  2647   003BF4                     DMA1SPTR        equ	15348	;# 
  2648   003BF4                     DMA1SPTRL       equ	15348	;# 
  2649   003BF5                     DMA1SPTRH       equ	15349	;# 
  2650   003BF6                     DMA1SPTRU       equ	15350	;# 
  2651   003BF7                     DMA1SSZ         equ	15351	;# 
  2652   003BF7                     DMA1SSZL        equ	15351	;# 
  2653   003BF8                     DMA1SSZH        equ	15352	;# 
  2654   003BF9                     DMA1SSA         equ	15353	;# 
  2655   003BF9                     DMA1SSAL        equ	15353	;# 
  2656   003BFA                     DMA1SSAH        equ	15354	;# 
  2657   003BFB                     DMA1SSAU        equ	15355	;# 
  2658   003BFC                     DMA1CON0        equ	15356	;# 
  2659   003BFD                     DMA1CON1        equ	15357	;# 
  2660   003BFE                     DMA1AIRQ        equ	15358	;# 
  2661   003BFF                     DMA1SIRQ        equ	15359	;# 
  2662   003C56                     CLC4CON         equ	15446	;# 
  2663   003C57                     CLC4POL         equ	15447	;# 
  2664   003C58                     CLC4SEL0        equ	15448	;# 
  2665   003C59                     CLC4SEL1        equ	15449	;# 
  2666   003C5A                     CLC4SEL2        equ	15450	;# 
  2667   003C5B                     CLC4SEL3        equ	15451	;# 
  2668   003C5C                     CLC4GLS0        equ	15452	;# 
  2669   003C5D                     CLC4GLS1        equ	15453	;# 
  2670   003C5E                     CLC4GLS2        equ	15454	;# 
  2671   003C5F                     CLC4GLS3        equ	15455	;# 
  2672   003C60                     CLC3CON         equ	15456	;# 
  2673   003C61                     CLC3POL         equ	15457	;# 
  2674   003C62                     CLC3SEL0        equ	15458	;# 
  2675   003C63                     CLC3SEL1        equ	15459	;# 
  2676   003C64                     CLC3SEL2        equ	15460	;# 
  2677   003C65                     CLC3SEL3        equ	15461	;# 
  2678   003C66                     CLC3GLS0        equ	15462	;# 
  2679   003C67                     CLC3GLS1        equ	15463	;# 
  2680   003C68                     CLC3GLS2        equ	15464	;# 
  2681   003C69                     CLC3GLS3        equ	15465	;# 
  2682   003C6A                     CLC2CON         equ	15466	;# 
  2683   003C6B                     CLC2POL         equ	15467	;# 
  2684   003C6C                     CLC2SEL0        equ	15468	;# 
  2685   003C6D                     CLC2SEL1        equ	15469	;# 
  2686   003C6E                     CLC2SEL2        equ	15470	;# 
  2687   003C6F                     CLC2SEL3        equ	15471	;# 
  2688   003C70                     CLC2GLS0        equ	15472	;# 
  2689   003C71                     CLC2GLS1        equ	15473	;# 
  2690   003C72                     CLC2GLS2        equ	15474	;# 
  2691   003C73                     CLC2GLS3        equ	15475	;# 
  2692   003C74                     CLC1CON         equ	15476	;# 
  2693   003C75                     CLC1POL         equ	15477	;# 
  2694   003C76                     CLC1SEL0        equ	15478	;# 
  2695   003C77                     CLC1SEL1        equ	15479	;# 
  2696   003C78                     CLC1SEL2        equ	15480	;# 
  2697   003C79                     CLC1SEL3        equ	15481	;# 
  2698   003C7A                     CLC1GLS0        equ	15482	;# 
  2699   003C7B                     CLC1GLS1        equ	15483	;# 
  2700   003C7C                     CLC1GLS2        equ	15484	;# 
  2701   003C7D                     CLC1GLS3        equ	15485	;# 
  2702   003C7E                     CLCDATA0        equ	15486	;# 
  2703   003CE5                     CLKRCON         equ	15589	;# 
  2704   003CE6                     CLKRCLK         equ	15590	;# 
  2705   003CFA                     MD1CON0         equ	15610	;# 
  2706   003CFB                     MD1CON1         equ	15611	;# 
  2707   003CFC                     MD1SRC          equ	15612	;# 
  2708   003CFD                     MD1CARL         equ	15613	;# 
  2709   003CFE                     MD1CARH         equ	15614	;# 
  2710   003D10                     SPI1RXB         equ	15632	;# 
  2711   003D11                     SPI1TXB         equ	15633	;# 
  2712   003D12                     SPI1TCNT        equ	15634	;# 
  2713   003D12                     SPI1TCNTL       equ	15634	;# 
  2714   003D13                     SPI1TCNTH       equ	15635	;# 
  2715   003D14                     SPI1CON0        equ	15636	;# 
  2716   003D15                     SPI1CON1        equ	15637	;# 
  2717   003D16                     SPI1CON2        equ	15638	;# 
  2718   003D17                     SPI1STATUS      equ	15639	;# 
  2719   003D18                     SPI1TWIDTH      equ	15640	;# 
  2720   003D19                     SPI1BAUD        equ	15641	;# 
  2721   003D1A                     SPI1INTF        equ	15642	;# 
  2722   003D1B                     SPI1INTE        equ	15643	;# 
  2723   003D1C                     SPI1CLK         equ	15644	;# 
  2724   003D54                     I2C2RXB         equ	15700	;# 
  2725   003D55                     I2C2TXB         equ	15701	;# 
  2726   003D56                     I2C2CNT         equ	15702	;# 
  2727   003D57                     I2C2ADB0        equ	15703	;# 
  2728   003D58                     I2C2ADB1        equ	15704	;# 
  2729   003D59                     I2C2ADR0        equ	15705	;# 
  2730   003D5A                     I2C2ADR1        equ	15706	;# 
  2731   003D5B                     I2C2ADR2        equ	15707	;# 
  2732   003D5C                     I2C2ADR3        equ	15708	;# 
  2733   003D5D                     I2C2CON0        equ	15709	;# 
  2734   003D5E                     I2C2CON1        equ	15710	;# 
  2735   003D5F                     I2C2CON2        equ	15711	;# 
  2736   003D60                     I2C2ERR         equ	15712	;# 
  2737   003D61                     I2C2STAT0       equ	15713	;# 
  2738   003D62                     I2C2STAT1       equ	15714	;# 
  2739   003D63                     I2C2PIR         equ	15715	;# 
  2740   003D64                     I2C2PIE         equ	15716	;# 
  2741   003D65                     I2C2CLK         equ	15717	;# 
  2742   003D66                     I2C2BTO         equ	15718	;# 
  2743   003D6A                     I2C1RXB         equ	15722	;# 
  2744   003D6B                     I2C1TXB         equ	15723	;# 
  2745   003D6C                     I2C1CNT         equ	15724	;# 
  2746   003D6D                     I2C1ADB0        equ	15725	;# 
  2747   003D6E                     I2C1ADB1        equ	15726	;# 
  2748   003D6F                     I2C1ADR0        equ	15727	;# 
  2749   003D70                     I2C1ADR1        equ	15728	;# 
  2750   003D71                     I2C1ADR2        equ	15729	;# 
  2751   003D72                     I2C1ADR3        equ	15730	;# 
  2752   003D73                     I2C1CON0        equ	15731	;# 
  2753   003D74                     I2C1CON1        equ	15732	;# 
  2754   003D75                     I2C1CON2        equ	15733	;# 
  2755   003D76                     I2C1ERR         equ	15734	;# 
  2756   003D77                     I2C1STAT0       equ	15735	;# 
  2757   003D78                     I2C1STAT1       equ	15736	;# 
  2758   003D79                     I2C1PIR         equ	15737	;# 
  2759   003D7A                     I2C1PIE         equ	15738	;# 
  2760   003D7B                     I2C1CLK         equ	15739	;# 
  2761   003D7C                     I2C1BTO         equ	15740	;# 
  2762   003DD0                     U2RXB           equ	15824	;# 
  2763   003DD0                     U2RXBL          equ	15824	;# 
  2764   003DD2                     U2TXB           equ	15826	;# 
  2765   003DD2                     U2TXBL          equ	15826	;# 
  2766   003DD4                     U2P1            equ	15828	;# 
  2767   003DD4                     U2P1L           equ	15828	;# 
  2768   003DD6                     U2P2            equ	15830	;# 
  2769   003DD6                     U2P2L           equ	15830	;# 
  2770   003DD8                     U2P3            equ	15832	;# 
  2771   003DD8                     U2P3L           equ	15832	;# 
  2772   003DDA                     U2CON0          equ	15834	;# 
  2773   003DDB                     U2CON1          equ	15835	;# 
  2774   003DDC                     U2CON2          equ	15836	;# 
  2775   003DDD                     U2BRG           equ	15837	;# 
  2776   003DDD                     U2BRGL          equ	15837	;# 
  2777   003DDE                     U2BRGH          equ	15838	;# 
  2778   003DDF                     U2FIFO          equ	15839	;# 
  2779   003DE0                     U2UIR           equ	15840	;# 
  2780   003DE1                     U2ERRIR         equ	15841	;# 
  2781   003DE2                     U2ERRIE         equ	15842	;# 
  2782   003DE8                     U1RXB           equ	15848	;# 
  2783   003DE8                     U1RXBL          equ	15848	;# 
  2784   003DE9                     U1RXCHK         equ	15849	;# 
  2785   003DEA                     U1TXB           equ	15850	;# 
  2786   003DEA                     U1TXBL          equ	15850	;# 
  2787   003DEB                     U1TXCHK         equ	15851	;# 
  2788   003DEC                     U1P1            equ	15852	;# 
  2789   003DEC                     U1P1L           equ	15852	;# 
  2790   003DED                     U1P1H           equ	15853	;# 
  2791   003DEE                     U1P2            equ	15854	;# 
  2792   003DEE                     U1P2L           equ	15854	;# 
  2793   003DEF                     U1P2H           equ	15855	;# 
  2794   003DF0                     U1P3            equ	15856	;# 
  2795   003DF0                     U1P3L           equ	15856	;# 
  2796   003DF1                     U1P3H           equ	15857	;# 
  2797   003DF2                     U1CON0          equ	15858	;# 
  2798   003DF3                     U1CON1          equ	15859	;# 
  2799   003DF4                     U1CON2          equ	15860	;# 
  2800   003DF5                     U1BRG           equ	15861	;# 
  2801   003DF5                     U1BRGL          equ	15861	;# 
  2802   003DF6                     U1BRGH          equ	15862	;# 
  2803   003DF7                     U1FIFO          equ	15863	;# 
  2804   003DF8                     U1UIR           equ	15864	;# 
  2805   003DF9                     U1ERRIR         equ	15865	;# 
  2806   003DFA                     U1ERRIE         equ	15866	;# 
  2807   003E9C                     DAC1CON1        equ	16028	;# 
  2808   003E9E                     DAC1CON0        equ	16030	;# 
  2809   003EB8                     CM2CON0         equ	16056	;# 
  2810   003EB9                     CM2CON1         equ	16057	;# 
  2811   003EBA                     CM2NCH          equ	16058	;# 
  2812   003EBB                     CM2PCH          equ	16059	;# 
  2813   003EBC                     CM1CON0         equ	16060	;# 
  2814   003EBD                     CM1CON1         equ	16061	;# 
  2815   003EBE                     CM1NCH          equ	16062	;# 
  2816   003EBF                     CM1PCH          equ	16063	;# 
  2817   003EC0                     CMOUT           equ	16064	;# 
  2818   003EC1                     FVRCON          equ	16065	;# 
  2819   003EC3                     ZCDCON          equ	16067	;# 
  2820   003EC9                     HLVDCON0        equ	16073	;# 
  2821   003ECA                     HLVDCON1        equ	16074	;# 
  2822   003ED7                     ADCP            equ	16087	;# 
  2823   003EDE                     ADLTH           equ	16094	;# 
  2824   003EDE                     ADLTHL          equ	16094	;# 
  2825   003EDF                     ADLTHH          equ	16095	;# 
  2826   003EE0                     ADUTH           equ	16096	;# 
  2827   003EE0                     ADUTHL          equ	16096	;# 
  2828   003EE1                     ADUTHH          equ	16097	;# 
  2829   003EE2                     ADERR           equ	16098	;# 
  2830   003EE2                     ADERRL          equ	16098	;# 
  2831   003EE3                     ADERRH          equ	16099	;# 
  2832   003EE4                     ADSTPT          equ	16100	;# 
  2833   003EE4                     ADSTPTL         equ	16100	;# 
  2834   003EE5                     ADSTPTH         equ	16101	;# 
  2835   003EE6                     ADFLTR          equ	16102	;# 
  2836   003EE6                     ADFLTRL         equ	16102	;# 
  2837   003EE7                     ADFLTRH         equ	16103	;# 
  2838   003EE8                     ADACC           equ	16104	;# 
  2839   003EE8                     ADACCL          equ	16104	;# 
  2840   003EE9                     ADACCH          equ	16105	;# 
  2841   003EEA                     ADACCU          equ	16106	;# 
  2842   003EEB                     ADCNT           equ	16107	;# 
  2843   003EEC                     ADRPT           equ	16108	;# 
  2844   003EED                     ADPREV          equ	16109	;# 
  2845   003EED                     ADPREVL         equ	16109	;# 
  2846   003EEE                     ADPREVH         equ	16110	;# 
  2847   003EEF                     ADRES           equ	16111	;# 
  2848   003EEF                     ADRESL          equ	16111	;# 
  2849   003EF0                     ADRESH          equ	16112	;# 
  2850   003EF1                     ADPCH           equ	16113	;# 
  2851   003EF3                     ADACQ           equ	16115	;# 
  2852   003EF3                     ADACQL          equ	16115	;# 
  2853   003EF4                     ADACQH          equ	16116	;# 
  2854   003EF5                     ADCAP           equ	16117	;# 
  2855   003EF6                     ADPRE           equ	16118	;# 
  2856   003EF6                     ADPREL          equ	16118	;# 
  2857   003EF7                     ADPREH          equ	16119	;# 
  2858   003EF8                     ADCON0          equ	16120	;# 
  2859   003EF9                     ADCON1          equ	16121	;# 
  2860   003EFA                     ADCON2          equ	16122	;# 
  2861   003EFB                     ADCON3          equ	16123	;# 
  2862   003EFC                     ADSTAT          equ	16124	;# 
  2863   003EFD                     ADREF           equ	16125	;# 
  2864   003EFE                     ADACT           equ	16126	;# 
  2865   003EFF                     ADCLK           equ	16127	;# 
  2866   003F12                     SMT1TMR         equ	16146	;# 
  2867   003F12                     SMT1TMRL        equ	16146	;# 
  2868   003F13                     SMT1TMRH        equ	16147	;# 
  2869   003F14                     SMT1TMRU        equ	16148	;# 
  2870   003F15                     SMT1CPR         equ	16149	;# 
  2871   003F15                     SMT1CPRL        equ	16149	;# 
  2872   003F16                     SMT1CPRH        equ	16150	;# 
  2873   003F17                     SMT1CPRU        equ	16151	;# 
  2874   003F18                     SMT1CPW         equ	16152	;# 
  2875   003F18                     SMT1CPWL        equ	16152	;# 
  2876   003F19                     SMT1CPWH        equ	16153	;# 
  2877   003F1A                     SMT1CPWU        equ	16154	;# 
  2878   003F1B                     SMT1PR          equ	16155	;# 
  2879   003F1B                     SMT1PRL         equ	16155	;# 
  2880   003F1C                     SMT1PRH         equ	16156	;# 
  2881   003F1D                     SMT1PRU         equ	16157	;# 
  2882   003F1E                     SMT1CON0        equ	16158	;# 
  2883   003F1F                     SMT1CON1        equ	16159	;# 
  2884   003F20                     SMT1STAT        equ	16160	;# 
  2885   003F21                     SMT1CLK         equ	16161	;# 
  2886   003F22                     SMT1SIG         equ	16162	;# 
  2887   003F23                     SMT1WIN         equ	16163	;# 
  2888   003F38                     NCO1ACC         equ	16184	;# 
  2889   003F38                     NCO1ACCL        equ	16184	;# 
  2890   003F39                     NCO1ACCH        equ	16185	;# 
  2891   003F3A                     NCO1ACCU        equ	16186	;# 
  2892   003F3B                     NCO1INC         equ	16187	;# 
  2893   003F3B                     NCO1INCL        equ	16187	;# 
  2894   003F3C                     NCO1INCH        equ	16188	;# 
  2895   003F3D                     NCO1INCU        equ	16189	;# 
  2896   003F3E                     NCO1CON         equ	16190	;# 
  2897   003F3F                     NCO1CLK         equ	16191	;# 
  2898   003F40                     CWG3CLK         equ	16192	;# 
  2899   003F40                     CWG3CLKCON      equ	16192	;# 
  2900   003F41                     CWG3ISM         equ	16193	;# 
  2901   003F41                     CWG3DAT         equ	16193	;# 
  2902   003F42                     CWG3DBR         equ	16194	;# 
  2903   003F43                     CWG3DBF         equ	16195	;# 
  2904   003F44                     CWG3CON0        equ	16196	;# 
  2905   003F45                     CWG3CON1        equ	16197	;# 
  2906   003F46                     CWG3AS0         equ	16198	;# 
  2907   003F47                     CWG3AS1         equ	16199	;# 
  2908   003F48                     CWG3STR         equ	16200	;# 
  2909   003F49                     CWG2CLK         equ	16201	;# 
  2910   003F49                     CWG2CLKCON      equ	16201	;# 
  2911   003F4A                     CWG2ISM         equ	16202	;# 
  2912   003F4A                     CWG2DAT         equ	16202	;# 
  2913   003F4B                     CWG2DBR         equ	16203	;# 
  2914   003F4C                     CWG2DBF         equ	16204	;# 
  2915   003F4D                     CWG2CON0        equ	16205	;# 
  2916   003F4E                     CWG2CON1        equ	16206	;# 
  2917   003F4F                     CWG2AS0         equ	16207	;# 
  2918   003F50                     CWG2AS1         equ	16208	;# 
  2919   003F51                     CWG2STR         equ	16209	;# 
  2920   003F52                     CWG1CLK         equ	16210	;# 
  2921   003F52                     CWG1CLKCON      equ	16210	;# 
  2922   003F53                     CWG1ISM         equ	16211	;# 
  2923   003F53                     CWG1DAT         equ	16211	;# 
  2924   003F54                     CWG1DBR         equ	16212	;# 
  2925   003F55                     CWG1DBF         equ	16213	;# 
  2926   003F56                     CWG1CON0        equ	16214	;# 
  2927   003F57                     CWG1CON1        equ	16215	;# 
  2928   003F58                     CWG1AS0         equ	16216	;# 
  2929   003F59                     CWG1AS1         equ	16217	;# 
  2930   003F5A                     CWG1STR         equ	16218	;# 
  2931   003F5E                     CCPTMRS0        equ	16222	;# 
  2932   003F5F                     CCPTMRS1        equ	16223	;# 
  2933   003F60                     PWM8DC          equ	16224	;# 
  2934   003F60                     PWM8DCL         equ	16224	;# 
  2935   003F61                     PWM8DCH         equ	16225	;# 
  2936   003F62                     PWM8CON         equ	16226	;# 
  2937   003F64                     PWM7DC          equ	16228	;# 
  2938   003F64                     PWM7DCL         equ	16228	;# 
  2939   003F65                     PWM7DCH         equ	16229	;# 
  2940   003F66                     PWM7CON         equ	16230	;# 
  2941   003F68                     PWM6DC          equ	16232	;# 
  2942   003F68                     PWM6DCL         equ	16232	;# 
  2943   003F69                     PWM6DCH         equ	16233	;# 
  2944   003F6A                     PWM6CON         equ	16234	;# 
  2945   003F6C                     PWM5DC          equ	16236	;# 
  2946   003F6C                     PWM5DCL         equ	16236	;# 
  2947   003F6D                     PWM5DCH         equ	16237	;# 
  2948   003F6E                     PWM5CON         equ	16238	;# 
  2949   003F70                     CCPR4           equ	16240	;# 
  2950   003F70                     CCPR4L          equ	16240	;# 
  2951   003F71                     CCPR4H          equ	16241	;# 
  2952   003F72                     CCP4CON         equ	16242	;# 
  2953   003F73                     CCP4CAP         equ	16243	;# 
  2954   003F74                     CCPR3           equ	16244	;# 
  2955   003F74                     CCPR3L          equ	16244	;# 
  2956   003F75                     CCPR3H          equ	16245	;# 
  2957   003F76                     CCP3CON         equ	16246	;# 
  2958   003F77                     CCP3CAP         equ	16247	;# 
  2959   003F78                     CCPR2           equ	16248	;# 
  2960   003F78                     CCPR2L          equ	16248	;# 
  2961   003F79                     CCPR2H          equ	16249	;# 
  2962   003F7A                     CCP2CON         equ	16250	;# 
  2963   003F7B                     CCP2CAP         equ	16251	;# 
  2964   003F7C                     CCPR1           equ	16252	;# 
  2965   003F7C                     CCPR1L          equ	16252	;# 
  2966   003F7D                     CCPR1H          equ	16253	;# 
  2967   003F7E                     CCP1CON         equ	16254	;# 
  2968   003F7F                     CCP1CAP         equ	16255	;# 
  2969   003F92                     T6TMR           equ	16274	;# 
  2970   003F92                     TMR6            equ	16274	;# 
  2971   003F93                     T6PR            equ	16275	;# 
  2972   003F93                     PR6             equ	16275	;# 
  2973   003F94                     T6CON           equ	16276	;# 
  2974   003F95                     T6HLT           equ	16277	;# 
  2975   003F96                     T6CLKCON        equ	16278	;# 
  2976   003F96                     T6CLK           equ	16278	;# 
  2977   003F97                     T6RST           equ	16279	;# 
  2978   003F98                     TMR5            equ	16280	;# 
  2979   003F98                     TMR5L           equ	16280	;# 
  2980   003F99                     TMR5H           equ	16281	;# 
  2981   003F9A                     T5CON           equ	16282	;# 
  2982   003F9A                     TMR5CON         equ	16282	;# 
  2983   003F9B                     T5GCON          equ	16283	;# 
  2984   003F9B                     TMR5GCON        equ	16283	;# 
  2985   003F9C                     T5GATE          equ	16284	;# 
  2986   003F9C                     TMR5GATE        equ	16284	;# 
  2987   003F9D                     T5CLK           equ	16285	;# 
  2988   003F9D                     TMR5CLK         equ	16285	;# 
  2989   003F9D                     PR5             equ	16285	;# 
  2990   003F9E                     T4TMR           equ	16286	;# 
  2991   003F9E                     TMR4            equ	16286	;# 
  2992   003F9F                     T4PR            equ	16287	;# 
  2993   003F9F                     PR4             equ	16287	;# 
  2994   003FA0                     T4CON           equ	16288	;# 
  2995   003FA1                     T4HLT           equ	16289	;# 
  2996   003FA2                     T4CLKCON        equ	16290	;# 
  2997   003FA2                     T4CLK           equ	16290	;# 
  2998   003FA3                     T4RST           equ	16291	;# 
  2999   003FA4                     TMR3            equ	16292	;# 
  3000   003FA4                     TMR3L           equ	16292	;# 
  3001   003FA5                     TMR3H           equ	16293	;# 
  3002   003FA6                     T3CON           equ	16294	;# 
  3003   003FA6                     TMR3CON         equ	16294	;# 
  3004   003FA7                     T3GCON          equ	16295	;# 
  3005   003FA7                     TMR3GCON        equ	16295	;# 
  3006   003FA8                     T3GATE          equ	16296	;# 
  3007   003FA8                     TMR3GATE        equ	16296	;# 
  3008   003FA9                     T3CLK           equ	16297	;# 
  3009   003FA9                     TMR3CLK         equ	16297	;# 
  3010   003FA9                     PR3             equ	16297	;# 
  3011   003FAA                     T2TMR           equ	16298	;# 
  3012   003FAA                     TMR2            equ	16298	;# 
  3013   003FAB                     T2PR            equ	16299	;# 
  3014   003FAB                     PR2             equ	16299	;# 
  3015   003FAC                     T2CON           equ	16300	;# 
  3016   003FAD                     T2HLT           equ	16301	;# 
  3017   003FAE                     T2CLKCON        equ	16302	;# 
  3018   003FAE                     T2CLK           equ	16302	;# 
  3019   003FAF                     T2RST           equ	16303	;# 
  3020   003FB0                     TMR1            equ	16304	;# 
  3021   003FB0                     TMR1L           equ	16304	;# 
  3022   003FB1                     TMR1H           equ	16305	;# 
  3023   003FB2                     T1CON           equ	16306	;# 
  3024   003FB2                     TMR1CON         equ	16306	;# 
  3025   003FB3                     T1GCON          equ	16307	;# 
  3026   003FB3                     TMR1GCON        equ	16307	;# 
  3027   003FB4                     T1GATE          equ	16308	;# 
  3028   003FB4                     TMR1GATE        equ	16308	;# 
  3029   003FB5                     T1CLK           equ	16309	;# 
  3030   003FB5                     TMR1CLK         equ	16309	;# 
  3031   003FB5                     PR1             equ	16309	;# 
  3032   003FB6                     TMR0L           equ	16310	;# 
  3033   003FB6                     TMR0            equ	16310	;# 
  3034   003FB7                     TMR0H           equ	16311	;# 
  3035   003FB7                     PR0             equ	16311	;# 
  3036   003FB8                     T0CON0          equ	16312	;# 
  3037   003FB9                     T0CON1          equ	16313	;# 
  3038   003FBA                     LATA            equ	16314	;# 
  3039   003FBB                     LATB            equ	16315	;# 
  3040   003FBC                     LATC            equ	16316	;# 
  3041   003FC2                     TRISA           equ	16322	;# 
  3042   003FC3                     TRISB           equ	16323	;# 
  3043   003FC4                     TRISC           equ	16324	;# 
  3044   003FCA                     PORTA           equ	16330	;# 
  3045   003FCB                     PORTB           equ	16331	;# 
  3046   003FCC                     PORTC           equ	16332	;# 
  3047   003FCE                     PORTE           equ	16334	;# 
  3048   003FD2                     INTCON0         equ	16338	;# 
  3049   003FD3                     INTCON1         equ	16339	;# 
  3050   003FD4                     IVTLOCK         equ	16340	;# 
  3051   003FD5                     IVTBASE         equ	16341	;# 
  3052   003FD5                     IVTBASEL        equ	16341	;# 
  3053   003FD6                     IVTBASEH        equ	16342	;# 
  3054   003FD7                     IVTBASEU        equ	16343	;# 
  3055   003FD8                     STATUS          equ	16344	;# 
  3056   003FD9                     FSR2            equ	16345	;# 
  3057   003FD9                     FSR2L           equ	16345	;# 
  3058   003FDA                     FSR2H           equ	16346	;# 
  3059   003FDB                     PLUSW2          equ	16347	;# 
  3060   003FDC                     PREINC2         equ	16348	;# 
  3061   003FDD                     POSTDEC2        equ	16349	;# 
  3062   003FDE                     POSTINC2        equ	16350	;# 
  3063   003FDF                     INDF2           equ	16351	;# 
  3064   003FE0                     BSR             equ	16352	;# 
  3065   003FE1                     FSR1            equ	16353	;# 
  3066   003FE1                     FSR1L           equ	16353	;# 
  3067   003FE2                     FSR1H           equ	16354	;# 
  3068   003FE3                     PLUSW1          equ	16355	;# 
  3069   003FE4                     PREINC1         equ	16356	;# 
  3070   003FE5                     POSTDEC1        equ	16357	;# 
  3071   003FE6                     POSTINC1        equ	16358	;# 
  3072   003FE7                     INDF1           equ	16359	;# 
  3073   003FE8                     WREG            equ	16360	;# 
  3074   003FE9                     FSR0            equ	16361	;# 
  3075   003FE9                     FSR0L           equ	16361	;# 
  3076   003FEA                     FSR0H           equ	16362	;# 
  3077   003FEB                     PLUSW0          equ	16363	;# 
  3078   003FEC                     PREINC0         equ	16364	;# 
  3079   003FED                     POSTDEC0        equ	16365	;# 
  3080   003FEE                     POSTINC0        equ	16366	;# 
  3081   003FEF                     INDF0           equ	16367	;# 
  3082   003FF0                     PCON0           equ	16368	;# 
  3083   003FF1                     PCON1           equ	16369	;# 
  3084   003FF3                     PROD            equ	16371	;# 
  3085   003FF3                     PRODL           equ	16371	;# 
  3086   003FF4                     PRODH           equ	16372	;# 
  3087   003FF5                     TABLAT          equ	16373	;# 
  3088   003FF6                     TBLPTR          equ	16374	;# 
  3089   003FF6                     TBLPTRL         equ	16374	;# 
  3090   003FF7                     TBLPTRH         equ	16375	;# 
  3091   003FF8                     TBLPTRU         equ	16376	;# 
  3092   003FF9                     PCLAT           equ	16377	;# 
  3093   003FF9                     PCL             equ	16377	;# 
  3094   003FFA                     PCLATH          equ	16378	;# 
  3095   003FFB                     PCLATU          equ	16379	;# 
  3096   003FFC                     STKPTR          equ	16380	;# 
  3097   003FFD                     TOS             equ	16381	;# 
  3098   003FFD                     TOSL            equ	16381	;# 
  3099   003FFE                     TOSH            equ	16382	;# 
  3100   003FFF                     TOSU            equ	16383	;# 
  3101   003880                     STATUS_CSHAD    equ	14464	;# 
  3102   003881                     WREG_CSHAD      equ	14465	;# 
  3103   003882                     BSR_CSHAD       equ	14466	;# 
  3104   003883                     SHADCON         equ	14467	;# 
  3105   003884                     STATUS_SHAD     equ	14468	;# 
  3106   003885                     WREG_SHAD       equ	14469	;# 
  3107   003886                     BSR_SHAD        equ	14470	;# 
  3108   003887                     PCLATH_SHAD     equ	14471	;# 
  3109   003888                     PCLATU_SHAD     equ	14472	;# 
  3110   003889                     FSR0SH          equ	14473	;# 
  3111   003889                     FSR0L_SHAD      equ	14473	;# 
  3112   00388A                     FSR0H_SHAD      equ	14474	;# 
  3113   00388B                     FSR1SH          equ	14475	;# 
  3114   00388B                     FSR1L_SHAD      equ	14475	;# 
  3115   00388C                     FSR1H_SHAD      equ	14476	;# 
  3116   00388D                     FSR2SH          equ	14477	;# 
  3117   00388D                     FSR2L_SHAD      equ	14477	;# 
  3118   00388E                     FSR2H_SHAD      equ	14478	;# 
  3119   00388F                     PRODSH          equ	14479	;# 
  3120   00388F                     PRODL_SHAD      equ	14479	;# 
  3121   003890                     PRODH_SHAD      equ	14480	;# 
  3122   00389D                     IVTADL          equ	14493	;# 
  3123   00389E                     IVTADH          equ	14494	;# 
  3124   00389F                     IVTADU          equ	14495	;# 
  3125   00395B                     WDTCON0         equ	14683	;# 
  3126   00395C                     WDTCON1         equ	14684	;# 
  3127   00395D                     WDTPSL          equ	14685	;# 
  3128   00395E                     WDTPSH          equ	14686	;# 
  3129   00395F                     WDTTMR          equ	14687	;# 
  3130   003960                     CRCDATA         equ	14688	;# 
  3131   003960                     CRCDATL         equ	14688	;# 
  3132   003961                     CRCDATH         equ	14689	;# 
  3133   003962                     CRCACC          equ	14690	;# 
  3134   003962                     CRCACCL         equ	14690	;# 
  3135   003963                     CRCACCH         equ	14691	;# 
  3136   003964                     CRCSHFT         equ	14692	;# 
  3137   003964                     CRCSHIFTL       equ	14692	;# 
  3138   003965                     CRCSHIFTH       equ	14693	;# 
  3139   003966                     CRCXOR          equ	14694	;# 
  3140   003966                     CRCXORL         equ	14694	;# 
  3141   003967                     CRCXORH         equ	14695	;# 
  3142   003968                     CRCCON0         equ	14696	;# 
  3143   003969                     CRCCON1         equ	14697	;# 
  3144   003976                     SCANLADR        equ	14710	;# 
  3145   003976                     SCANLADRL       equ	14710	;# 
  3146   003977                     SCANLADRH       equ	14711	;# 
  3147   003978                     SCANLADRU       equ	14712	;# 
  3148   003979                     SCANHADR        equ	14713	;# 
  3149   003979                     SCANHADRL       equ	14713	;# 
  3150   00397A                     SCANHADRH       equ	14714	;# 
  3151   00397B                     SCANHADRU       equ	14715	;# 
  3152   00397C                     SCANCON0        equ	14716	;# 
  3153   00397D                     SCANTRIG        equ	14717	;# 
  3154   003980                     IPR0            equ	14720	;# 
  3155   003981                     IPR1            equ	14721	;# 
  3156   003982                     IPR2            equ	14722	;# 
  3157   003983                     IPR3            equ	14723	;# 
  3158   003984                     IPR4            equ	14724	;# 
  3159   003985                     IPR5            equ	14725	;# 
  3160   003986                     IPR6            equ	14726	;# 
  3161   003987                     IPR7            equ	14727	;# 
  3162   003988                     IPR8            equ	14728	;# 
  3163   003989                     IPR9            equ	14729	;# 
  3164   00398A                     IPR10           equ	14730	;# 
  3165   003990                     PIE0            equ	14736	;# 
  3166   003991                     PIE1            equ	14737	;# 
  3167   003992                     PIE2            equ	14738	;# 
  3168   003993                     PIE3            equ	14739	;# 
  3169   003994                     PIE4            equ	14740	;# 
  3170   003995                     PIE5            equ	14741	;# 
  3171   003996                     PIE6            equ	14742	;# 
  3172   003997                     PIE7            equ	14743	;# 
  3173   003998                     PIE8            equ	14744	;# 
  3174   003999                     PIE9            equ	14745	;# 
  3175   00399A                     PIE10           equ	14746	;# 
  3176   0039A0                     PIR0            equ	14752	;# 
  3177   0039A1                     PIR1            equ	14753	;# 
  3178   0039A2                     PIR2            equ	14754	;# 
  3179   0039A3                     PIR3            equ	14755	;# 
  3180   0039A4                     PIR4            equ	14756	;# 
  3181   0039A5                     PIR5            equ	14757	;# 
  3182   0039A6                     PIR6            equ	14758	;# 
  3183   0039A7                     PIR7            equ	14759	;# 
  3184   0039A8                     PIR8            equ	14760	;# 
  3185   0039A9                     PIR9            equ	14761	;# 
  3186   0039AA                     PIR10           equ	14762	;# 
  3187   0039C0                     PMD0            equ	14784	;# 
  3188   0039C1                     PMD1            equ	14785	;# 
  3189   0039C2                     PMD2            equ	14786	;# 
  3190   0039C3                     PMD3            equ	14787	;# 
  3191   0039C4                     PMD4            equ	14788	;# 
  3192   0039C5                     PMD5            equ	14789	;# 
  3193   0039C6                     PMD6            equ	14790	;# 
  3194   0039C7                     PMD7            equ	14791	;# 
  3195   0039D0                     BORCON          equ	14800	;# 
  3196   0039D1                     VREGCON         equ	14801	;# 
  3197   0039D8                     CPUDOZE         equ	14808	;# 
  3198   0039D9                     OSCCON1         equ	14809	;# 
  3199   0039DA                     OSCCON2         equ	14810	;# 
  3200   0039DB                     OSCCON3         equ	14811	;# 
  3201   0039DC                     OSCSTAT         equ	14812	;# 
  3202   0039DC                     OSCSTAT1        equ	14812	;# 
  3203   0039DD                     OSCEN           equ	14813	;# 
  3204   0039DE                     OSCTUNE         equ	14814	;# 
  3205   0039DF                     OSCFRQ          equ	14815	;# 
  3206   0039E0                     NVMADRL         equ	14816	;# 
  3207   0039E1                     NVMADRH         equ	14817	;# 
  3208   0039E3                     NVMDAT          equ	14819	;# 
  3209   0039E5                     NVMCON1         equ	14821	;# 
  3210   0039E6                     NVMCON2         equ	14822	;# 
  3211   0039EF                     PRLOCK          equ	14831	;# 
  3212   0039F1                     ISRPR           equ	14833	;# 
  3213   0039F2                     MAINPR          equ	14834	;# 
  3214   0039F3                     DMA1PR          equ	14835	;# 
  3215   0039F4                     DMA2PR          equ	14836	;# 
  3216   0039F7                     SCANPR          equ	14839	;# 
  3217   003A00                     RA0PPS          equ	14848	;# 
  3218   003A01                     RA1PPS          equ	14849	;# 
  3219   003A02                     RA2PPS          equ	14850	;# 
  3220   003A03                     RA3PPS          equ	14851	;# 
  3221   003A04                     RA4PPS          equ	14852	;# 
  3222   003A05                     RA5PPS          equ	14853	;# 
  3223   003A06                     RA6PPS          equ	14854	;# 
  3224   003A07                     RA7PPS          equ	14855	;# 
  3225   003A08                     RB0PPS          equ	14856	;# 
  3226   003A09                     RB1PPS          equ	14857	;# 
  3227   003A0A                     RB2PPS          equ	14858	;# 
  3228   003A0B                     RB3PPS          equ	14859	;# 
  3229   003A0C                     RB4PPS          equ	14860	;# 
  3230   003A0D                     RB5PPS          equ	14861	;# 
  3231   003A0E                     RB6PPS          equ	14862	;# 
  3232   003A0F                     RB7PPS          equ	14863	;# 
  3233   003A10                     RC0PPS          equ	14864	;# 
  3234   003A11                     RC1PPS          equ	14865	;# 
  3235   003A12                     RC2PPS          equ	14866	;# 
  3236   003A13                     RC3PPS          equ	14867	;# 
  3237   003A14                     RC4PPS          equ	14868	;# 
  3238   003A15                     RC5PPS          equ	14869	;# 
  3239   003A16                     RC6PPS          equ	14870	;# 
  3240   003A17                     RC7PPS          equ	14871	;# 
  3241   003A40                     ANSELA          equ	14912	;# 
  3242   003A41                     WPUA            equ	14913	;# 
  3243   003A42                     ODCONA          equ	14914	;# 
  3244   003A43                     SLRCONA         equ	14915	;# 
  3245   003A44                     INLVLA          equ	14916	;# 
  3246   003A45                     IOCAP           equ	14917	;# 
  3247   003A46                     IOCAN           equ	14918	;# 
  3248   003A47                     IOCAF           equ	14919	;# 
  3249   003A48                     CCDPA           equ	14920	;# 
  3250   003A49                     CCDNA           equ	14921	;# 
  3251   003A50                     ANSELB          equ	14928	;# 
  3252   003A51                     WPUB            equ	14929	;# 
  3253   003A52                     ODCONB          equ	14930	;# 
  3254   003A53                     SLRCONB         equ	14931	;# 
  3255   003A54                     INLVLB          equ	14932	;# 
  3256   003A55                     IOCBP           equ	14933	;# 
  3257   003A56                     IOCBN           equ	14934	;# 
  3258   003A57                     IOCBF           equ	14935	;# 
  3259   003A58                     CCDPB           equ	14936	;# 
  3260   003A59                     CCDNB           equ	14937	;# 
  3261   003A5A                     RB1I2C          equ	14938	;# 
  3262   003A5B                     RB2I2C          equ	14939	;# 
  3263   003A60                     ANSELC          equ	14944	;# 
  3264   003A61                     WPUC            equ	14945	;# 
  3265   003A62                     ODCONC          equ	14946	;# 
  3266   003A63                     SLRCONC         equ	14947	;# 
  3267   003A64                     INLVLC          equ	14948	;# 
  3268   003A65                     IOCCP           equ	14949	;# 
  3269   003A66                     IOCCN           equ	14950	;# 
  3270   003A67                     IOCCF           equ	14951	;# 
  3271   003A68                     CCDPC           equ	14952	;# 
  3272   003A69                     CCDNC           equ	14953	;# 
  3273   003A6A                     RC3I2C          equ	14954	;# 
  3274   003A6B                     RC4I2C          equ	14955	;# 
  3275   003A81                     WPUE            equ	14977	;# 
  3276   003A84                     INLVLE          equ	14980	;# 
  3277   003A85                     IOCEP           equ	14981	;# 
  3278   003A86                     IOCEN           equ	14982	;# 
  3279   003A87                     IOCEF           equ	14983	;# 
  3280   003ABE                     CCDCON          equ	15038	;# 
  3281   003ABF                     PPSLOCK         equ	15039	;# 
  3282   003AC0                     INT0PPS         equ	15040	;# 
  3283   003AC1                     INT1PPS         equ	15041	;# 
  3284   003AC2                     INT2PPS         equ	15042	;# 
  3285   003AC3                     T0CKIPPS        equ	15043	;# 
  3286   003AC4                     T1CKIPPS        equ	15044	;# 
  3287   003AC5                     T1GPPS          equ	15045	;# 
  3288   003AC6                     T3CKIPPS        equ	15046	;# 
  3289   003AC7                     T3GPPS          equ	15047	;# 
  3290   003AC8                     T5CKIPPS        equ	15048	;# 
  3291   003AC9                     T5GPPS          equ	15049	;# 
  3292   003ACA                     T2INPPS         equ	15050	;# 
  3293   003ACB                     T4INPPS         equ	15051	;# 
  3294   003ACC                     T6INPPS         equ	15052	;# 
  3295   003ACD                     CCP1PPS         equ	15053	;# 
  3296   003ACE                     CCP2PPS         equ	15054	;# 
  3297   003ACF                     CCP3PPS         equ	15055	;# 
  3298   003AD0                     CCP4PPS         equ	15056	;# 
  3299   003AD1                     SMT1WINPPS      equ	15057	;# 
  3300   003AD2                     SMT1SIGPPS      equ	15058	;# 
  3301   003AD3                     CWG1INPPS       equ	15059	;# 
  3302   003AD4                     CWG2INPPS       equ	15060	;# 
  3303   003AD5                     CWG3INPPS       equ	15061	;# 
  3304   003AD6                     MD1CARLPPS      equ	15062	;# 
  3305   003AD7                     MD1CARHPPS      equ	15063	;# 
  3306   003AD8                     MD1SRCPPS       equ	15064	;# 
  3307   003AD9                     CLCIN0PPS       equ	15065	;# 
  3308   003ADA                     CLCIN1PPS       equ	15066	;# 
  3309   003ADB                     CLCIN2PPS       equ	15067	;# 
  3310   003ADC                     CLCIN3PPS       equ	15068	;# 
  3311   003ADD                     ADACTPPS        equ	15069	;# 
  3312   003ADE                     SPI1SCKPPS      equ	15070	;# 
  3313   003ADF                     SPI1SDIPPS      equ	15071	;# 
  3314   003AE0                     SPI1SSPPS       equ	15072	;# 
  3315   003AE1                     I2C1SCLPPS      equ	15073	;# 
  3316   003AE2                     I2C1SDAPPS      equ	15074	;# 
  3317   003AE3                     I2C2SCLPPS      equ	15075	;# 
  3318   003AE4                     I2C2SDAPPS      equ	15076	;# 
  3319   003AE5                     U1RXPPS         equ	15077	;# 
  3320   003AE6                     U1CTSPPS        equ	15078	;# 
  3321   003AE8                     U2RXPPS         equ	15080	;# 
  3322   003AE9                     U2CTSPPS        equ	15081	;# 
  3323   003BC9                     DMA2BUF         equ	15305	;# 
  3324   003BCA                     DMA2DCNT        equ	15306	;# 
  3325   003BCA                     DMA2DCNTL       equ	15306	;# 
  3326   003BCB                     DMA2DCNTH       equ	15307	;# 
  3327   003BCC                     DMA2DPTR        equ	15308	;# 
  3328   003BCC                     DMA2DPTRL       equ	15308	;# 
  3329   003BCD                     DMA2DPTRH       equ	15309	;# 
  3330   003BCE                     DMA2DSZ         equ	15310	;# 
  3331   003BCE                     DMA2DSZL        equ	15310	;# 
  3332   003BCF                     DMA2DSZH        equ	15311	;# 
  3333   003BD0                     DMA2DSA         equ	15312	;# 
  3334   003BD0                     DMA2DSAL        equ	15312	;# 
  3335   003BD1                     DMA2DSAH        equ	15313	;# 
  3336   003BD2                     DMA2SCNT        equ	15314	;# 
  3337   003BD2                     DMA2SCNTL       equ	15314	;# 
  3338   003BD3                     DMA2SCNTH       equ	15315	;# 
  3339   003BD4                     DMA2SPTR        equ	15316	;# 
  3340   003BD4                     DMA2SPTRL       equ	15316	;# 
  3341   003BD5                     DMA2SPTRH       equ	15317	;# 
  3342   003BD6                     DMA2SPTRU       equ	15318	;# 
  3343   003BD7                     DMA2SSZ         equ	15319	;# 
  3344   003BD7                     DMA2SSZL        equ	15319	;# 
  3345   003BD8                     DMA2SSZH        equ	15320	;# 
  3346   003BD9                     DMA2SSA         equ	15321	;# 
  3347   003BD9                     DMA2SSAL        equ	15321	;# 
  3348   003BDA                     DMA2SSAH        equ	15322	;# 
  3349   003BDB                     DMA2SSAU        equ	15323	;# 
  3350   003BDC                     DMA2CON0        equ	15324	;# 
  3351   003BDD                     DMA2CON1        equ	15325	;# 
  3352   003BDE                     DMA2AIRQ        equ	15326	;# 
  3353   003BDF                     DMA2SIRQ        equ	15327	;# 
  3354   003BE9                     DMA1BUF         equ	15337	;# 
  3355   003BEA                     DMA1DCNT        equ	15338	;# 
  3356   003BEA                     DMA1DCNTL       equ	15338	;# 
  3357   003BEB                     DMA1DCNTH       equ	15339	;# 
  3358   003BEC                     DMA1DPTR        equ	15340	;# 
  3359   003BEC                     DMA1DPTRL       equ	15340	;# 
  3360   003BED                     DMA1DPTRH       equ	15341	;# 
  3361   003BEE                     DMA1DSZ         equ	15342	;# 
  3362   003BEE                     DMA1DSZL        equ	15342	;# 
  3363   003BEF                     DMA1DSZH        equ	15343	;# 
  3364   003BF0                     DMA1DSA         equ	15344	;# 
  3365   003BF0                     DMA1DSAL        equ	15344	;# 
  3366   003BF1                     DMA1DSAH        equ	15345	;# 
  3367   003BF2                     DMA1SCNT        equ	15346	;# 
  3368   003BF2                     DMA1SCNTL       equ	15346	;# 
  3369   003BF3                     DMA1SCNTH       equ	15347	;# 
  3370   003BF4                     DMA1SPTR        equ	15348	;# 
  3371   003BF4                     DMA1SPTRL       equ	15348	;# 
  3372   003BF5                     DMA1SPTRH       equ	15349	;# 
  3373   003BF6                     DMA1SPTRU       equ	15350	;# 
  3374   003BF7                     DMA1SSZ         equ	15351	;# 
  3375   003BF7                     DMA1SSZL        equ	15351	;# 
  3376   003BF8                     DMA1SSZH        equ	15352	;# 
  3377   003BF9                     DMA1SSA         equ	15353	;# 
  3378   003BF9                     DMA1SSAL        equ	15353	;# 
  3379   003BFA                     DMA1SSAH        equ	15354	;# 
  3380   003BFB                     DMA1SSAU        equ	15355	;# 
  3381   003BFC                     DMA1CON0        equ	15356	;# 
  3382   003BFD                     DMA1CON1        equ	15357	;# 
  3383   003BFE                     DMA1AIRQ        equ	15358	;# 
  3384   003BFF                     DMA1SIRQ        equ	15359	;# 
  3385   003C56                     CLC4CON         equ	15446	;# 
  3386   003C57                     CLC4POL         equ	15447	;# 
  3387   003C58                     CLC4SEL0        equ	15448	;# 
  3388   003C59                     CLC4SEL1        equ	15449	;# 
  3389   003C5A                     CLC4SEL2        equ	15450	;# 
  3390   003C5B                     CLC4SEL3        equ	15451	;# 
  3391   003C5C                     CLC4GLS0        equ	15452	;# 
  3392   003C5D                     CLC4GLS1        equ	15453	;# 
  3393   003C5E                     CLC4GLS2        equ	15454	;# 
  3394   003C5F                     CLC4GLS3        equ	15455	;# 
  3395   003C60                     CLC3CON         equ	15456	;# 
  3396   003C61                     CLC3POL         equ	15457	;# 
  3397   003C62                     CLC3SEL0        equ	15458	;# 
  3398   003C63                     CLC3SEL1        equ	15459	;# 
  3399   003C64                     CLC3SEL2        equ	15460	;# 
  3400   003C65                     CLC3SEL3        equ	15461	;# 
  3401   003C66                     CLC3GLS0        equ	15462	;# 
  3402   003C67                     CLC3GLS1        equ	15463	;# 
  3403   003C68                     CLC3GLS2        equ	15464	;# 
  3404   003C69                     CLC3GLS3        equ	15465	;# 
  3405   003C6A                     CLC2CON         equ	15466	;# 
  3406   003C6B                     CLC2POL         equ	15467	;# 
  3407   003C6C                     CLC2SEL0        equ	15468	;# 
  3408   003C6D                     CLC2SEL1        equ	15469	;# 
  3409   003C6E                     CLC2SEL2        equ	15470	;# 
  3410   003C6F                     CLC2SEL3        equ	15471	;# 
  3411   003C70                     CLC2GLS0        equ	15472	;# 
  3412   003C71                     CLC2GLS1        equ	15473	;# 
  3413   003C72                     CLC2GLS2        equ	15474	;# 
  3414   003C73                     CLC2GLS3        equ	15475	;# 
  3415   003C74                     CLC1CON         equ	15476	;# 
  3416   003C75                     CLC1POL         equ	15477	;# 
  3417   003C76                     CLC1SEL0        equ	15478	;# 
  3418   003C77                     CLC1SEL1        equ	15479	;# 
  3419   003C78                     CLC1SEL2        equ	15480	;# 
  3420   003C79                     CLC1SEL3        equ	15481	;# 
  3421   003C7A                     CLC1GLS0        equ	15482	;# 
  3422   003C7B                     CLC1GLS1        equ	15483	;# 
  3423   003C7C                     CLC1GLS2        equ	15484	;# 
  3424   003C7D                     CLC1GLS3        equ	15485	;# 
  3425   003C7E                     CLCDATA0        equ	15486	;# 
  3426   003CE5                     CLKRCON         equ	15589	;# 
  3427   003CE6                     CLKRCLK         equ	15590	;# 
  3428   003CFA                     MD1CON0         equ	15610	;# 
  3429   003CFB                     MD1CON1         equ	15611	;# 
  3430   003CFC                     MD1SRC          equ	15612	;# 
  3431   003CFD                     MD1CARL         equ	15613	;# 
  3432   003CFE                     MD1CARH         equ	15614	;# 
  3433   003D10                     SPI1RXB         equ	15632	;# 
  3434   003D11                     SPI1TXB         equ	15633	;# 
  3435   003D12                     SPI1TCNT        equ	15634	;# 
  3436   003D12                     SPI1TCNTL       equ	15634	;# 
  3437   003D13                     SPI1TCNTH       equ	15635	;# 
  3438   003D14                     SPI1CON0        equ	15636	;# 
  3439   003D15                     SPI1CON1        equ	15637	;# 
  3440   003D16                     SPI1CON2        equ	15638	;# 
  3441   003D17                     SPI1STATUS      equ	15639	;# 
  3442   003D18                     SPI1TWIDTH      equ	15640	;# 
  3443   003D19                     SPI1BAUD        equ	15641	;# 
  3444   003D1A                     SPI1INTF        equ	15642	;# 
  3445   003D1B                     SPI1INTE        equ	15643	;# 
  3446   003D1C                     SPI1CLK         equ	15644	;# 
  3447   003D54                     I2C2RXB         equ	15700	;# 
  3448   003D55                     I2C2TXB         equ	15701	;# 
  3449   003D56                     I2C2CNT         equ	15702	;# 
  3450   003D57                     I2C2ADB0        equ	15703	;# 
  3451   003D58                     I2C2ADB1        equ	15704	;# 
  3452   003D59                     I2C2ADR0        equ	15705	;# 
  3453   003D5A                     I2C2ADR1        equ	15706	;# 
  3454   003D5B                     I2C2ADR2        equ	15707	;# 
  3455   003D5C                     I2C2ADR3        equ	15708	;# 
  3456   003D5D                     I2C2CON0        equ	15709	;# 
  3457   003D5E                     I2C2CON1        equ	15710	;# 
  3458   003D5F                     I2C2CON2        equ	15711	;# 
  3459   003D60                     I2C2ERR         equ	15712	;# 
  3460   003D61                     I2C2STAT0       equ	15713	;# 
  3461   003D62                     I2C2STAT1       equ	15714	;# 
  3462   003D63                     I2C2PIR         equ	15715	;# 
  3463   003D64                     I2C2PIE         equ	15716	;# 
  3464   003D65                     I2C2CLK         equ	15717	;# 
  3465   003D66                     I2C2BTO         equ	15718	;# 
  3466   003D6A                     I2C1RXB         equ	15722	;# 
  3467   003D6B                     I2C1TXB         equ	15723	;# 
  3468   003D6C                     I2C1CNT         equ	15724	;# 
  3469   003D6D                     I2C1ADB0        equ	15725	;# 
  3470   003D6E                     I2C1ADB1        equ	15726	;# 
  3471   003D6F                     I2C1ADR0        equ	15727	;# 
  3472   003D70                     I2C1ADR1        equ	15728	;# 
  3473   003D71                     I2C1ADR2        equ	15729	;# 
  3474   003D72                     I2C1ADR3        equ	15730	;# 
  3475   003D73                     I2C1CON0        equ	15731	;# 
  3476   003D74                     I2C1CON1        equ	15732	;# 
  3477   003D75                     I2C1CON2        equ	15733	;# 
  3478   003D76                     I2C1ERR         equ	15734	;# 
  3479   003D77                     I2C1STAT0       equ	15735	;# 
  3480   003D78                     I2C1STAT1       equ	15736	;# 
  3481   003D79                     I2C1PIR         equ	15737	;# 
  3482   003D7A                     I2C1PIE         equ	15738	;# 
  3483   003D7B                     I2C1CLK         equ	15739	;# 
  3484   003D7C                     I2C1BTO         equ	15740	;# 
  3485   003DD0                     U2RXB           equ	15824	;# 
  3486   003DD0                     U2RXBL          equ	15824	;# 
  3487   003DD2                     U2TXB           equ	15826	;# 
  3488   003DD2                     U2TXBL          equ	15826	;# 
  3489   003DD4                     U2P1            equ	15828	;# 
  3490   003DD4                     U2P1L           equ	15828	;# 
  3491   003DD6                     U2P2            equ	15830	;# 
  3492   003DD6                     U2P2L           equ	15830	;# 
  3493   003DD8                     U2P3            equ	15832	;# 
  3494   003DD8                     U2P3L           equ	15832	;# 
  3495   003DDA                     U2CON0          equ	15834	;# 
  3496   003DDB                     U2CON1          equ	15835	;# 
  3497   003DDC                     U2CON2          equ	15836	;# 
  3498   003DDD                     U2BRG           equ	15837	;# 
  3499   003DDD                     U2BRGL          equ	15837	;# 
  3500   003DDE                     U2BRGH          equ	15838	;# 
  3501   003DDF                     U2FIFO          equ	15839	;# 
  3502   003DE0                     U2UIR           equ	15840	;# 
  3503   003DE1                     U2ERRIR         equ	15841	;# 
  3504   003DE2                     U2ERRIE         equ	15842	;# 
  3505   003DE8                     U1RXB           equ	15848	;# 
  3506   003DE8                     U1RXBL          equ	15848	;# 
  3507   003DE9                     U1RXCHK         equ	15849	;# 
  3508   003DEA                     U1TXB           equ	15850	;# 
  3509   003DEA                     U1TXBL          equ	15850	;# 
  3510   003DEB                     U1TXCHK         equ	15851	;# 
  3511   003DEC                     U1P1            equ	15852	;# 
  3512   003DEC                     U1P1L           equ	15852	;# 
  3513   003DED                     U1P1H           equ	15853	;# 
  3514   003DEE                     U1P2            equ	15854	;# 
  3515   003DEE                     U1P2L           equ	15854	;# 
  3516   003DEF                     U1P2H           equ	15855	;# 
  3517   003DF0                     U1P3            equ	15856	;# 
  3518   003DF0                     U1P3L           equ	15856	;# 
  3519   003DF1                     U1P3H           equ	15857	;# 
  3520   003DF2                     U1CON0          equ	15858	;# 
  3521   003DF3                     U1CON1          equ	15859	;# 
  3522   003DF4                     U1CON2          equ	15860	;# 
  3523   003DF5                     U1BRG           equ	15861	;# 
  3524   003DF5                     U1BRGL          equ	15861	;# 
  3525   003DF6                     U1BRGH          equ	15862	;# 
  3526   003DF7                     U1FIFO          equ	15863	;# 
  3527   003DF8                     U1UIR           equ	15864	;# 
  3528   003DF9                     U1ERRIR         equ	15865	;# 
  3529   003DFA                     U1ERRIE         equ	15866	;# 
  3530   003E9C                     DAC1CON1        equ	16028	;# 
  3531   003E9E                     DAC1CON0        equ	16030	;# 
  3532   003EB8                     CM2CON0         equ	16056	;# 
  3533   003EB9                     CM2CON1         equ	16057	;# 
  3534   003EBA                     CM2NCH          equ	16058	;# 
  3535   003EBB                     CM2PCH          equ	16059	;# 
  3536   003EBC                     CM1CON0         equ	16060	;# 
  3537   003EBD                     CM1CON1         equ	16061	;# 
  3538   003EBE                     CM1NCH          equ	16062	;# 
  3539   003EBF                     CM1PCH          equ	16063	;# 
  3540   003EC0                     CMOUT           equ	16064	;# 
  3541   003EC1                     FVRCON          equ	16065	;# 
  3542   003EC3                     ZCDCON          equ	16067	;# 
  3543   003EC9                     HLVDCON0        equ	16073	;# 
  3544   003ECA                     HLVDCON1        equ	16074	;# 
  3545   003ED7                     ADCP            equ	16087	;# 
  3546   003EDE                     ADLTH           equ	16094	;# 
  3547   003EDE                     ADLTHL          equ	16094	;# 
  3548   003EDF                     ADLTHH          equ	16095	;# 
  3549   003EE0                     ADUTH           equ	16096	;# 
  3550   003EE0                     ADUTHL          equ	16096	;# 
  3551   003EE1                     ADUTHH          equ	16097	;# 
  3552   003EE2                     ADERR           equ	16098	;# 
  3553   003EE2                     ADERRL          equ	16098	;# 
  3554   003EE3                     ADERRH          equ	16099	;# 
  3555   003EE4                     ADSTPT          equ	16100	;# 
  3556   003EE4                     ADSTPTL         equ	16100	;# 
  3557   003EE5                     ADSTPTH         equ	16101	;# 
  3558   003EE6                     ADFLTR          equ	16102	;# 
  3559   003EE6                     ADFLTRL         equ	16102	;# 
  3560   003EE7                     ADFLTRH         equ	16103	;# 
  3561   003EE8                     ADACC           equ	16104	;# 
  3562   003EE8                     ADACCL          equ	16104	;# 
  3563   003EE9                     ADACCH          equ	16105	;# 
  3564   003EEA                     ADACCU          equ	16106	;# 
  3565   003EEB                     ADCNT           equ	16107	;# 
  3566   003EEC                     ADRPT           equ	16108	;# 
  3567   003EED                     ADPREV          equ	16109	;# 
  3568   003EED                     ADPREVL         equ	16109	;# 
  3569   003EEE                     ADPREVH         equ	16110	;# 
  3570   003EEF                     ADRES           equ	16111	;# 
  3571   003EEF                     ADRESL          equ	16111	;# 
  3572   003EF0                     ADRESH          equ	16112	;# 
  3573   003EF1                     ADPCH           equ	16113	;# 
  3574   003EF3                     ADACQ           equ	16115	;# 
  3575   003EF3                     ADACQL          equ	16115	;# 
  3576   003EF4                     ADACQH          equ	16116	;# 
  3577   003EF5                     ADCAP           equ	16117	;# 
  3578   003EF6                     ADPRE           equ	16118	;# 
  3579   003EF6                     ADPREL          equ	16118	;# 
  3580   003EF7                     ADPREH          equ	16119	;# 
  3581   003EF8                     ADCON0          equ	16120	;# 
  3582   003EF9                     ADCON1          equ	16121	;# 
  3583   003EFA                     ADCON2          equ	16122	;# 
  3584   003EFB                     ADCON3          equ	16123	;# 
  3585   003EFC                     ADSTAT          equ	16124	;# 
  3586   003EFD                     ADREF           equ	16125	;# 
  3587   003EFE                     ADACT           equ	16126	;# 
  3588   003EFF                     ADCLK           equ	16127	;# 
  3589   003F12                     SMT1TMR         equ	16146	;# 
  3590   003F12                     SMT1TMRL        equ	16146	;# 
  3591   003F13                     SMT1TMRH        equ	16147	;# 
  3592   003F14                     SMT1TMRU        equ	16148	;# 
  3593   003F15                     SMT1CPR         equ	16149	;# 
  3594   003F15                     SMT1CPRL        equ	16149	;# 
  3595   003F16                     SMT1CPRH        equ	16150	;# 
  3596   003F17                     SMT1CPRU        equ	16151	;# 
  3597   003F18                     SMT1CPW         equ	16152	;# 
  3598   003F18                     SMT1CPWL        equ	16152	;# 
  3599   003F19                     SMT1CPWH        equ	16153	;# 
  3600   003F1A                     SMT1CPWU        equ	16154	;# 
  3601   003F1B                     SMT1PR          equ	16155	;# 
  3602   003F1B                     SMT1PRL         equ	16155	;# 
  3603   003F1C                     SMT1PRH         equ	16156	;# 
  3604   003F1D                     SMT1PRU         equ	16157	;# 
  3605   003F1E                     SMT1CON0        equ	16158	;# 
  3606   003F1F                     SMT1CON1        equ	16159	;# 
  3607   003F20                     SMT1STAT        equ	16160	;# 
  3608   003F21                     SMT1CLK         equ	16161	;# 
  3609   003F22                     SMT1SIG         equ	16162	;# 
  3610   003F23                     SMT1WIN         equ	16163	;# 
  3611   003F38                     NCO1ACC         equ	16184	;# 
  3612   003F38                     NCO1ACCL        equ	16184	;# 
  3613   003F39                     NCO1ACCH        equ	16185	;# 
  3614   003F3A                     NCO1ACCU        equ	16186	;# 
  3615   003F3B                     NCO1INC         equ	16187	;# 
  3616   003F3B                     NCO1INCL        equ	16187	;# 
  3617   003F3C                     NCO1INCH        equ	16188	;# 
  3618   003F3D                     NCO1INCU        equ	16189	;# 
  3619   003F3E                     NCO1CON         equ	16190	;# 
  3620   003F3F                     NCO1CLK         equ	16191	;# 
  3621   003F40                     CWG3CLK         equ	16192	;# 
  3622   003F40                     CWG3CLKCON      equ	16192	;# 
  3623   003F41                     CWG3ISM         equ	16193	;# 
  3624   003F41                     CWG3DAT         equ	16193	;# 
  3625   003F42                     CWG3DBR         equ	16194	;# 
  3626   003F43                     CWG3DBF         equ	16195	;# 
  3627   003F44                     CWG3CON0        equ	16196	;# 
  3628   003F45                     CWG3CON1        equ	16197	;# 
  3629   003F46                     CWG3AS0         equ	16198	;# 
  3630   003F47                     CWG3AS1         equ	16199	;# 
  3631   003F48                     CWG3STR         equ	16200	;# 
  3632   003F49                     CWG2CLK         equ	16201	;# 
  3633   003F49                     CWG2CLKCON      equ	16201	;# 
  3634   003F4A                     CWG2ISM         equ	16202	;# 
  3635   003F4A                     CWG2DAT         equ	16202	;# 
  3636   003F4B                     CWG2DBR         equ	16203	;# 
  3637   003F4C                     CWG2DBF         equ	16204	;# 
  3638   003F4D                     CWG2CON0        equ	16205	;# 
  3639   003F4E                     CWG2CON1        equ	16206	;# 
  3640   003F4F                     CWG2AS0         equ	16207	;# 
  3641   003F50                     CWG2AS1         equ	16208	;# 
  3642   003F51                     CWG2STR         equ	16209	;# 
  3643   003F52                     CWG1CLK         equ	16210	;# 
  3644   003F52                     CWG1CLKCON      equ	16210	;# 
  3645   003F53                     CWG1ISM         equ	16211	;# 
  3646   003F53                     CWG1DAT         equ	16211	;# 
  3647   003F54                     CWG1DBR         equ	16212	;# 
  3648   003F55                     CWG1DBF         equ	16213	;# 
  3649   003F56                     CWG1CON0        equ	16214	;# 
  3650   003F57                     CWG1CON1        equ	16215	;# 
  3651   003F58                     CWG1AS0         equ	16216	;# 
  3652   003F59                     CWG1AS1         equ	16217	;# 
  3653   003F5A                     CWG1STR         equ	16218	;# 
  3654   003F5E                     CCPTMRS0        equ	16222	;# 
  3655   003F5F                     CCPTMRS1        equ	16223	;# 
  3656   003F60                     PWM8DC          equ	16224	;# 
  3657   003F60                     PWM8DCL         equ	16224	;# 
  3658   003F61                     PWM8DCH         equ	16225	;# 
  3659   003F62                     PWM8CON         equ	16226	;# 
  3660   003F64                     PWM7DC          equ	16228	;# 
  3661   003F64                     PWM7DCL         equ	16228	;# 
  3662   003F65                     PWM7DCH         equ	16229	;# 
  3663   003F66                     PWM7CON         equ	16230	;# 
  3664   003F68                     PWM6DC          equ	16232	;# 
  3665   003F68                     PWM6DCL         equ	16232	;# 
  3666   003F69                     PWM6DCH         equ	16233	;# 
  3667   003F6A                     PWM6CON         equ	16234	;# 
  3668   003F6C                     PWM5DC          equ	16236	;# 
  3669   003F6C                     PWM5DCL         equ	16236	;# 
  3670   003F6D                     PWM5DCH         equ	16237	;# 
  3671   003F6E                     PWM5CON         equ	16238	;# 
  3672   003F70                     CCPR4           equ	16240	;# 
  3673   003F70                     CCPR4L          equ	16240	;# 
  3674   003F71                     CCPR4H          equ	16241	;# 
  3675   003F72                     CCP4CON         equ	16242	;# 
  3676   003F73                     CCP4CAP         equ	16243	;# 
  3677   003F74                     CCPR3           equ	16244	;# 
  3678   003F74                     CCPR3L          equ	16244	;# 
  3679   003F75                     CCPR3H          equ	16245	;# 
  3680   003F76                     CCP3CON         equ	16246	;# 
  3681   003F77                     CCP3CAP         equ	16247	;# 
  3682   003F78                     CCPR2           equ	16248	;# 
  3683   003F78                     CCPR2L          equ	16248	;# 
  3684   003F79                     CCPR2H          equ	16249	;# 
  3685   003F7A                     CCP2CON         equ	16250	;# 
  3686   003F7B                     CCP2CAP         equ	16251	;# 
  3687   003F7C                     CCPR1           equ	16252	;# 
  3688   003F7C                     CCPR1L          equ	16252	;# 
  3689   003F7D                     CCPR1H          equ	16253	;# 
  3690   003F7E                     CCP1CON         equ	16254	;# 
  3691   003F7F                     CCP1CAP         equ	16255	;# 
  3692   003F92                     T6TMR           equ	16274	;# 
  3693   003F92                     TMR6            equ	16274	;# 
  3694   003F93                     T6PR            equ	16275	;# 
  3695   003F93                     PR6             equ	16275	;# 
  3696   003F94                     T6CON           equ	16276	;# 
  3697   003F95                     T6HLT           equ	16277	;# 
  3698   003F96                     T6CLKCON        equ	16278	;# 
  3699   003F96                     T6CLK           equ	16278	;# 
  3700   003F97                     T6RST           equ	16279	;# 
  3701   003F98                     TMR5            equ	16280	;# 
  3702   003F98                     TMR5L           equ	16280	;# 
  3703   003F99                     TMR5H           equ	16281	;# 
  3704   003F9A                     T5CON           equ	16282	;# 
  3705   003F9A                     TMR5CON         equ	16282	;# 
  3706   003F9B                     T5GCON          equ	16283	;# 
  3707   003F9B                     TMR5GCON        equ	16283	;# 
  3708   003F9C                     T5GATE          equ	16284	;# 
  3709   003F9C                     TMR5GATE        equ	16284	;# 
  3710   003F9D                     T5CLK           equ	16285	;# 
  3711   003F9D                     TMR5CLK         equ	16285	;# 
  3712   003F9D                     PR5             equ	16285	;# 
  3713   003F9E                     T4TMR           equ	16286	;# 
  3714   003F9E                     TMR4            equ	16286	;# 
  3715   003F9F                     T4PR            equ	16287	;# 
  3716   003F9F                     PR4             equ	16287	;# 
  3717   003FA0                     T4CON           equ	16288	;# 
  3718   003FA1                     T4HLT           equ	16289	;# 
  3719   003FA2                     T4CLKCON        equ	16290	;# 
  3720   003FA2                     T4CLK           equ	16290	;# 
  3721   003FA3                     T4RST           equ	16291	;# 
  3722   003FA4                     TMR3            equ	16292	;# 
  3723   003FA4                     TMR3L           equ	16292	;# 
  3724   003FA5                     TMR3H           equ	16293	;# 
  3725   003FA6                     T3CON           equ	16294	;# 
  3726   003FA6                     TMR3CON         equ	16294	;# 
  3727   003FA7                     T3GCON          equ	16295	;# 
  3728   003FA7                     TMR3GCON        equ	16295	;# 
  3729   003FA8                     T3GATE          equ	16296	;# 
  3730   003FA8                     TMR3GATE        equ	16296	;# 
  3731   003FA9                     T3CLK           equ	16297	;# 
  3732   003FA9                     TMR3CLK         equ	16297	;# 
  3733   003FA9                     PR3             equ	16297	;# 
  3734   003FAA                     T2TMR           equ	16298	;# 
  3735   003FAA                     TMR2            equ	16298	;# 
  3736   003FAB                     T2PR            equ	16299	;# 
  3737   003FAB                     PR2             equ	16299	;# 
  3738   003FAC                     T2CON           equ	16300	;# 
  3739   003FAD                     T2HLT           equ	16301	;# 
  3740   003FAE                     T2CLKCON        equ	16302	;# 
  3741   003FAE                     T2CLK           equ	16302	;# 
  3742   003FAF                     T2RST           equ	16303	;# 
  3743   003FB0                     TMR1            equ	16304	;# 
  3744   003FB0                     TMR1L           equ	16304	;# 
  3745   003FB1                     TMR1H           equ	16305	;# 
  3746   003FB2                     T1CON           equ	16306	;# 
  3747   003FB2                     TMR1CON         equ	16306	;# 
  3748   003FB3                     T1GCON          equ	16307	;# 
  3749   003FB3                     TMR1GCON        equ	16307	;# 
  3750   003FB4                     T1GATE          equ	16308	;# 
  3751   003FB4                     TMR1GATE        equ	16308	;# 
  3752   003FB5                     T1CLK           equ	16309	;# 
  3753   003FB5                     TMR1CLK         equ	16309	;# 
  3754   003FB5                     PR1             equ	16309	;# 
  3755   003FB6                     TMR0L           equ	16310	;# 
  3756   003FB6                     TMR0            equ	16310	;# 
  3757   003FB7                     TMR0H           equ	16311	;# 
  3758   003FB7                     PR0             equ	16311	;# 
  3759   003FB8                     T0CON0          equ	16312	;# 
  3760   003FB9                     T0CON1          equ	16313	;# 
  3761   003FBA                     LATA            equ	16314	;# 
  3762   003FBB                     LATB            equ	16315	;# 
  3763   003FBC                     LATC            equ	16316	;# 
  3764   003FC2                     TRISA           equ	16322	;# 
  3765   003FC3                     TRISB           equ	16323	;# 
  3766   003FC4                     TRISC           equ	16324	;# 
  3767   003FCA                     PORTA           equ	16330	;# 
  3768   003FCB                     PORTB           equ	16331	;# 
  3769   003FCC                     PORTC           equ	16332	;# 
  3770   003FCE                     PORTE           equ	16334	;# 
  3771   003FD2                     INTCON0         equ	16338	;# 
  3772   003FD3                     INTCON1         equ	16339	;# 
  3773   003FD4                     IVTLOCK         equ	16340	;# 
  3774   003FD5                     IVTBASE         equ	16341	;# 
  3775   003FD5                     IVTBASEL        equ	16341	;# 
  3776   003FD6                     IVTBASEH        equ	16342	;# 
  3777   003FD7                     IVTBASEU        equ	16343	;# 
  3778   003FD8                     STATUS          equ	16344	;# 
  3779   003FD9                     FSR2            equ	16345	;# 
  3780   003FD9                     FSR2L           equ	16345	;# 
  3781   003FDA                     FSR2H           equ	16346	;# 
  3782   003FDB                     PLUSW2          equ	16347	;# 
  3783   003FDC                     PREINC2         equ	16348	;# 
  3784   003FDD                     POSTDEC2        equ	16349	;# 
  3785   003FDE                     POSTINC2        equ	16350	;# 
  3786   003FDF                     INDF2           equ	16351	;# 
  3787   003FE0                     BSR             equ	16352	;# 
  3788   003FE1                     FSR1            equ	16353	;# 
  3789   003FE1                     FSR1L           equ	16353	;# 
  3790   003FE2                     FSR1H           equ	16354	;# 
  3791   003FE3                     PLUSW1          equ	16355	;# 
  3792   003FE4                     PREINC1         equ	16356	;# 
  3793   003FE5                     POSTDEC1        equ	16357	;# 
  3794   003FE6                     POSTINC1        equ	16358	;# 
  3795   003FE7                     INDF1           equ	16359	;# 
  3796   003FE8                     WREG            equ	16360	;# 
  3797   003FE9                     FSR0            equ	16361	;# 
  3798   003FE9                     FSR0L           equ	16361	;# 
  3799   003FEA                     FSR0H           equ	16362	;# 
  3800   003FEB                     PLUSW0          equ	16363	;# 
  3801   003FEC                     PREINC0         equ	16364	;# 
  3802   003FED                     POSTDEC0        equ	16365	;# 
  3803   003FEE                     POSTINC0        equ	16366	;# 
  3804   003FEF                     INDF0           equ	16367	;# 
  3805   003FF0                     PCON0           equ	16368	;# 
  3806   003FF1                     PCON1           equ	16369	;# 
  3807   003FF3                     PROD            equ	16371	;# 
  3808   003FF3                     PRODL           equ	16371	;# 
  3809   003FF4                     PRODH           equ	16372	;# 
  3810   003FF5                     TABLAT          equ	16373	;# 
  3811   003FF6                     TBLPTR          equ	16374	;# 
  3812   003FF6                     TBLPTRL         equ	16374	;# 
  3813   003FF7                     TBLPTRH         equ	16375	;# 
  3814   003FF8                     TBLPTRU         equ	16376	;# 
  3815   003FF9                     PCLAT           equ	16377	;# 
  3816   003FF9                     PCL             equ	16377	;# 
  3817   003FFA                     PCLATH          equ	16378	;# 
  3818   003FFB                     PCLATU          equ	16379	;# 
  3819   003FFC                     STKPTR          equ	16380	;# 
  3820   003FFD                     TOS             equ	16381	;# 
  3821   003FFD                     TOSL            equ	16381	;# 
  3822   003FFE                     TOSH            equ	16382	;# 
  3823   003FFF                     TOSU            equ	16383	;# 
  3824   003880                     STATUS_CSHAD    equ	14464	;# 
  3825   003881                     WREG_CSHAD      equ	14465	;# 
  3826   003882                     BSR_CSHAD       equ	14466	;# 
  3827   003883                     SHADCON         equ	14467	;# 
  3828   003884                     STATUS_SHAD     equ	14468	;# 
  3829   003885                     WREG_SHAD       equ	14469	;# 
  3830   003886                     BSR_SHAD        equ	14470	;# 
  3831   003887                     PCLATH_SHAD     equ	14471	;# 
  3832   003888                     PCLATU_SHAD     equ	14472	;# 
  3833   003889                     FSR0SH          equ	14473	;# 
  3834   003889                     FSR0L_SHAD      equ	14473	;# 
  3835   00388A                     FSR0H_SHAD      equ	14474	;# 
  3836   00388B                     FSR1SH          equ	14475	;# 
  3837   00388B                     FSR1L_SHAD      equ	14475	;# 
  3838   00388C                     FSR1H_SHAD      equ	14476	;# 
  3839   00388D                     FSR2SH          equ	14477	;# 
  3840   00388D                     FSR2L_SHAD      equ	14477	;# 
  3841   00388E                     FSR2H_SHAD      equ	14478	;# 
  3842   00388F                     PRODSH          equ	14479	;# 
  3843   00388F                     PRODL_SHAD      equ	14479	;# 
  3844   003890                     PRODH_SHAD      equ	14480	;# 
  3845   00389D                     IVTADL          equ	14493	;# 
  3846   00389E                     IVTADH          equ	14494	;# 
  3847   00389F                     IVTADU          equ	14495	;# 
  3848   00395B                     WDTCON0         equ	14683	;# 
  3849   00395C                     WDTCON1         equ	14684	;# 
  3850   00395D                     WDTPSL          equ	14685	;# 
  3851   00395E                     WDTPSH          equ	14686	;# 
  3852   00395F                     WDTTMR          equ	14687	;# 
  3853   003960                     CRCDATA         equ	14688	;# 
  3854   003960                     CRCDATL         equ	14688	;# 
  3855   003961                     CRCDATH         equ	14689	;# 
  3856   003962                     CRCACC          equ	14690	;# 
  3857   003962                     CRCACCL         equ	14690	;# 
  3858   003963                     CRCACCH         equ	14691	;# 
  3859   003964                     CRCSHFT         equ	14692	;# 
  3860   003964                     CRCSHIFTL       equ	14692	;# 
  3861   003965                     CRCSHIFTH       equ	14693	;# 
  3862   003966                     CRCXOR          equ	14694	;# 
  3863   003966                     CRCXORL         equ	14694	;# 
  3864   003967                     CRCXORH         equ	14695	;# 
  3865   003968                     CRCCON0         equ	14696	;# 
  3866   003969                     CRCCON1         equ	14697	;# 
  3867   003976                     SCANLADR        equ	14710	;# 
  3868   003976                     SCANLADRL       equ	14710	;# 
  3869   003977                     SCANLADRH       equ	14711	;# 
  3870   003978                     SCANLADRU       equ	14712	;# 
  3871   003979                     SCANHADR        equ	14713	;# 
  3872   003979                     SCANHADRL       equ	14713	;# 
  3873   00397A                     SCANHADRH       equ	14714	;# 
  3874   00397B                     SCANHADRU       equ	14715	;# 
  3875   00397C                     SCANCON0        equ	14716	;# 
  3876   00397D                     SCANTRIG        equ	14717	;# 
  3877   003980                     IPR0            equ	14720	;# 
  3878   003981                     IPR1            equ	14721	;# 
  3879   003982                     IPR2            equ	14722	;# 
  3880   003983                     IPR3            equ	14723	;# 
  3881   003984                     IPR4            equ	14724	;# 
  3882   003985                     IPR5            equ	14725	;# 
  3883   003986                     IPR6            equ	14726	;# 
  3884   003987                     IPR7            equ	14727	;# 
  3885   003988                     IPR8            equ	14728	;# 
  3886   003989                     IPR9            equ	14729	;# 
  3887   00398A                     IPR10           equ	14730	;# 
  3888   003990                     PIE0            equ	14736	;# 
  3889   003991                     PIE1            equ	14737	;# 
  3890   003992                     PIE2            equ	14738	;# 
  3891   003993                     PIE3            equ	14739	;# 
  3892   003994                     PIE4            equ	14740	;# 
  3893   003995                     PIE5            equ	14741	;# 
  3894   003996                     PIE6            equ	14742	;# 
  3895   003997                     PIE7            equ	14743	;# 
  3896   003998                     PIE8            equ	14744	;# 
  3897   003999                     PIE9            equ	14745	;# 
  3898   00399A                     PIE10           equ	14746	;# 
  3899   0039A0                     PIR0            equ	14752	;# 
  3900   0039A1                     PIR1            equ	14753	;# 
  3901   0039A2                     PIR2            equ	14754	;# 
  3902   0039A3                     PIR3            equ	14755	;# 
  3903   0039A4                     PIR4            equ	14756	;# 
  3904   0039A5                     PIR5            equ	14757	;# 
  3905   0039A6                     PIR6            equ	14758	;# 
  3906   0039A7                     PIR7            equ	14759	;# 
  3907   0039A8                     PIR8            equ	14760	;# 
  3908   0039A9                     PIR9            equ	14761	;# 
  3909   0039AA                     PIR10           equ	14762	;# 
  3910   0039C0                     PMD0            equ	14784	;# 
  3911   0039C1                     PMD1            equ	14785	;# 
  3912   0039C2                     PMD2            equ	14786	;# 
  3913   0039C3                     PMD3            equ	14787	;# 
  3914   0039C4                     PMD4            equ	14788	;# 
  3915   0039C5                     PMD5            equ	14789	;# 
  3916   0039C6                     PMD6            equ	14790	;# 
  3917   0039C7                     PMD7            equ	14791	;# 
  3918   0039D0                     BORCON          equ	14800	;# 
  3919   0039D1                     VREGCON         equ	14801	;# 
  3920   0039D8                     CPUDOZE         equ	14808	;# 
  3921   0039D9                     OSCCON1         equ	14809	;# 
  3922   0039DA                     OSCCON2         equ	14810	;# 
  3923   0039DB                     OSCCON3         equ	14811	;# 
  3924   0039DC                     OSCSTAT         equ	14812	;# 
  3925   0039DC                     OSCSTAT1        equ	14812	;# 
  3926   0039DD                     OSCEN           equ	14813	;# 
  3927   0039DE                     OSCTUNE         equ	14814	;# 
  3928   0039DF                     OSCFRQ          equ	14815	;# 
  3929   0039E0                     NVMADRL         equ	14816	;# 
  3930   0039E1                     NVMADRH         equ	14817	;# 
  3931   0039E3                     NVMDAT          equ	14819	;# 
  3932   0039E5                     NVMCON1         equ	14821	;# 
  3933   0039E6                     NVMCON2         equ	14822	;# 
  3934   0039EF                     PRLOCK          equ	14831	;# 
  3935   0039F1                     ISRPR           equ	14833	;# 
  3936   0039F2                     MAINPR          equ	14834	;# 
  3937   0039F3                     DMA1PR          equ	14835	;# 
  3938   0039F4                     DMA2PR          equ	14836	;# 
  3939   0039F7                     SCANPR          equ	14839	;# 
  3940   003A00                     RA0PPS          equ	14848	;# 
  3941   003A01                     RA1PPS          equ	14849	;# 
  3942   003A02                     RA2PPS          equ	14850	;# 
  3943   003A03                     RA3PPS          equ	14851	;# 
  3944   003A04                     RA4PPS          equ	14852	;# 
  3945   003A05                     RA5PPS          equ	14853	;# 
  3946   003A06                     RA6PPS          equ	14854	;# 
  3947   003A07                     RA7PPS          equ	14855	;# 
  3948   003A08                     RB0PPS          equ	14856	;# 
  3949   003A09                     RB1PPS          equ	14857	;# 
  3950   003A0A                     RB2PPS          equ	14858	;# 
  3951   003A0B                     RB3PPS          equ	14859	;# 
  3952   003A0C                     RB4PPS          equ	14860	;# 
  3953   003A0D                     RB5PPS          equ	14861	;# 
  3954   003A0E                     RB6PPS          equ	14862	;# 
  3955   003A0F                     RB7PPS          equ	14863	;# 
  3956   003A10                     RC0PPS          equ	14864	;# 
  3957   003A11                     RC1PPS          equ	14865	;# 
  3958   003A12                     RC2PPS          equ	14866	;# 
  3959   003A13                     RC3PPS          equ	14867	;# 
  3960   003A14                     RC4PPS          equ	14868	;# 
  3961   003A15                     RC5PPS          equ	14869	;# 
  3962   003A16                     RC6PPS          equ	14870	;# 
  3963   003A17                     RC7PPS          equ	14871	;# 
  3964   003A40                     ANSELA          equ	14912	;# 
  3965   003A41                     WPUA            equ	14913	;# 
  3966   003A42                     ODCONA          equ	14914	;# 
  3967   003A43                     SLRCONA         equ	14915	;# 
  3968   003A44                     INLVLA          equ	14916	;# 
  3969   003A45                     IOCAP           equ	14917	;# 
  3970   003A46                     IOCAN           equ	14918	;# 
  3971   003A47                     IOCAF           equ	14919	;# 
  3972   003A48                     CCDPA           equ	14920	;# 
  3973   003A49                     CCDNA           equ	14921	;# 
  3974   003A50                     ANSELB          equ	14928	;# 
  3975   003A51                     WPUB            equ	14929	;# 
  3976   003A52                     ODCONB          equ	14930	;# 
  3977   003A53                     SLRCONB         equ	14931	;# 
  3978   003A54                     INLVLB          equ	14932	;# 
  3979   003A55                     IOCBP           equ	14933	;# 
  3980   003A56                     IOCBN           equ	14934	;# 
  3981   003A57                     IOCBF           equ	14935	;# 
  3982   003A58                     CCDPB           equ	14936	;# 
  3983   003A59                     CCDNB           equ	14937	;# 
  3984   003A5A                     RB1I2C          equ	14938	;# 
  3985   003A5B                     RB2I2C          equ	14939	;# 
  3986   003A60                     ANSELC          equ	14944	;# 
  3987   003A61                     WPUC            equ	14945	;# 
  3988   003A62                     ODCONC          equ	14946	;# 
  3989   003A63                     SLRCONC         equ	14947	;# 
  3990   003A64                     INLVLC          equ	14948	;# 
  3991   003A65                     IOCCP           equ	14949	;# 
  3992   003A66                     IOCCN           equ	14950	;# 
  3993   003A67                     IOCCF           equ	14951	;# 
  3994   003A68                     CCDPC           equ	14952	;# 
  3995   003A69                     CCDNC           equ	14953	;# 
  3996   003A6A                     RC3I2C          equ	14954	;# 
  3997   003A6B                     RC4I2C          equ	14955	;# 
  3998   003A81                     WPUE            equ	14977	;# 
  3999   003A84                     INLVLE          equ	14980	;# 
  4000   003A85                     IOCEP           equ	14981	;# 
  4001   003A86                     IOCEN           equ	14982	;# 
  4002   003A87                     IOCEF           equ	14983	;# 
  4003   003ABE                     CCDCON          equ	15038	;# 
  4004   003ABF                     PPSLOCK         equ	15039	;# 
  4005   003AC0                     INT0PPS         equ	15040	;# 
  4006   003AC1                     INT1PPS         equ	15041	;# 
  4007   003AC2                     INT2PPS         equ	15042	;# 
  4008   003AC3                     T0CKIPPS        equ	15043	;# 
  4009   003AC4                     T1CKIPPS        equ	15044	;# 
  4010   003AC5                     T1GPPS          equ	15045	;# 
  4011   003AC6                     T3CKIPPS        equ	15046	;# 
  4012   003AC7                     T3GPPS          equ	15047	;# 
  4013   003AC8                     T5CKIPPS        equ	15048	;# 
  4014   003AC9                     T5GPPS          equ	15049	;# 
  4015   003ACA                     T2INPPS         equ	15050	;# 
  4016   003ACB                     T4INPPS         equ	15051	;# 
  4017   003ACC                     T6INPPS         equ	15052	;# 
  4018   003ACD                     CCP1PPS         equ	15053	;# 
  4019   003ACE                     CCP2PPS         equ	15054	;# 
  4020   003ACF                     CCP3PPS         equ	15055	;# 
  4021   003AD0                     CCP4PPS         equ	15056	;# 
  4022   003AD1                     SMT1WINPPS      equ	15057	;# 
  4023   003AD2                     SMT1SIGPPS      equ	15058	;# 
  4024   003AD3                     CWG1INPPS       equ	15059	;# 
  4025   003AD4                     CWG2INPPS       equ	15060	;# 
  4026   003AD5                     CWG3INPPS       equ	15061	;# 
  4027   003AD6                     MD1CARLPPS      equ	15062	;# 
  4028   003AD7                     MD1CARHPPS      equ	15063	;# 
  4029   003AD8                     MD1SRCPPS       equ	15064	;# 
  4030   003AD9                     CLCIN0PPS       equ	15065	;# 
  4031   003ADA                     CLCIN1PPS       equ	15066	;# 
  4032   003ADB                     CLCIN2PPS       equ	15067	;# 
  4033   003ADC                     CLCIN3PPS       equ	15068	;# 
  4034   003ADD                     ADACTPPS        equ	15069	;# 
  4035   003ADE                     SPI1SCKPPS      equ	15070	;# 
  4036   003ADF                     SPI1SDIPPS      equ	15071	;# 
  4037   003AE0                     SPI1SSPPS       equ	15072	;# 
  4038   003AE1                     I2C1SCLPPS      equ	15073	;# 
  4039   003AE2                     I2C1SDAPPS      equ	15074	;# 
  4040   003AE3                     I2C2SCLPPS      equ	15075	;# 
  4041   003AE4                     I2C2SDAPPS      equ	15076	;# 
  4042   003AE5                     U1RXPPS         equ	15077	;# 
  4043   003AE6                     U1CTSPPS        equ	15078	;# 
  4044   003AE8                     U2RXPPS         equ	15080	;# 
  4045   003AE9                     U2CTSPPS        equ	15081	;# 
  4046   003BC9                     DMA2BUF         equ	15305	;# 
  4047   003BCA                     DMA2DCNT        equ	15306	;# 
  4048   003BCA                     DMA2DCNTL       equ	15306	;# 
  4049   003BCB                     DMA2DCNTH       equ	15307	;# 
  4050   003BCC                     DMA2DPTR        equ	15308	;# 
  4051   003BCC                     DMA2DPTRL       equ	15308	;# 
  4052   003BCD                     DMA2DPTRH       equ	15309	;# 
  4053   003BCE                     DMA2DSZ         equ	15310	;# 
  4054   003BCE                     DMA2DSZL        equ	15310	;# 
  4055   003BCF                     DMA2DSZH        equ	15311	;# 
  4056   003BD0                     DMA2DSA         equ	15312	;# 
  4057   003BD0                     DMA2DSAL        equ	15312	;# 
  4058   003BD1                     DMA2DSAH        equ	15313	;# 
  4059   003BD2                     DMA2SCNT        equ	15314	;# 
  4060   003BD2                     DMA2SCNTL       equ	15314	;# 
  4061   003BD3                     DMA2SCNTH       equ	15315	;# 
  4062   003BD4                     DMA2SPTR        equ	15316	;# 
  4063   003BD4                     DMA2SPTRL       equ	15316	;# 
  4064   003BD5                     DMA2SPTRH       equ	15317	;# 
  4065   003BD6                     DMA2SPTRU       equ	15318	;# 
  4066   003BD7                     DMA2SSZ         equ	15319	;# 
  4067   003BD7                     DMA2SSZL        equ	15319	;# 
  4068   003BD8                     DMA2SSZH        equ	15320	;# 
  4069   003BD9                     DMA2SSA         equ	15321	;# 
  4070   003BD9                     DMA2SSAL        equ	15321	;# 
  4071   003BDA                     DMA2SSAH        equ	15322	;# 
  4072   003BDB                     DMA2SSAU        equ	15323	;# 
  4073   003BDC                     DMA2CON0        equ	15324	;# 
  4074   003BDD                     DMA2CON1        equ	15325	;# 
  4075   003BDE                     DMA2AIRQ        equ	15326	;# 
  4076   003BDF                     DMA2SIRQ        equ	15327	;# 
  4077   003BE9                     DMA1BUF         equ	15337	;# 
  4078   003BEA                     DMA1DCNT        equ	15338	;# 
  4079   003BEA                     DMA1DCNTL       equ	15338	;# 
  4080   003BEB                     DMA1DCNTH       equ	15339	;# 
  4081   003BEC                     DMA1DPTR        equ	15340	;# 
  4082   003BEC                     DMA1DPTRL       equ	15340	;# 
  4083   003BED                     DMA1DPTRH       equ	15341	;# 
  4084   003BEE                     DMA1DSZ         equ	15342	;# 
  4085   003BEE                     DMA1DSZL        equ	15342	;# 
  4086   003BEF                     DMA1DSZH        equ	15343	;# 
  4087   003BF0                     DMA1DSA         equ	15344	;# 
  4088   003BF0                     DMA1DSAL        equ	15344	;# 
  4089   003BF1                     DMA1DSAH        equ	15345	;# 
  4090   003BF2                     DMA1SCNT        equ	15346	;# 
  4091   003BF2                     DMA1SCNTL       equ	15346	;# 
  4092   003BF3                     DMA1SCNTH       equ	15347	;# 
  4093   003BF4                     DMA1SPTR        equ	15348	;# 
  4094   003BF4                     DMA1SPTRL       equ	15348	;# 
  4095   003BF5                     DMA1SPTRH       equ	15349	;# 
  4096   003BF6                     DMA1SPTRU       equ	15350	;# 
  4097   003BF7                     DMA1SSZ         equ	15351	;# 
  4098   003BF7                     DMA1SSZL        equ	15351	;# 
  4099   003BF8                     DMA1SSZH        equ	15352	;# 
  4100   003BF9                     DMA1SSA         equ	15353	;# 
  4101   003BF9                     DMA1SSAL        equ	15353	;# 
  4102   003BFA                     DMA1SSAH        equ	15354	;# 
  4103   003BFB                     DMA1SSAU        equ	15355	;# 
  4104   003BFC                     DMA1CON0        equ	15356	;# 
  4105   003BFD                     DMA1CON1        equ	15357	;# 
  4106   003BFE                     DMA1AIRQ        equ	15358	;# 
  4107   003BFF                     DMA1SIRQ        equ	15359	;# 
  4108   003C56                     CLC4CON         equ	15446	;# 
  4109   003C57                     CLC4POL         equ	15447	;# 
  4110   003C58                     CLC4SEL0        equ	15448	;# 
  4111   003C59                     CLC4SEL1        equ	15449	;# 
  4112   003C5A                     CLC4SEL2        equ	15450	;# 
  4113   003C5B                     CLC4SEL3        equ	15451	;# 
  4114   003C5C                     CLC4GLS0        equ	15452	;# 
  4115   003C5D                     CLC4GLS1        equ	15453	;# 
  4116   003C5E                     CLC4GLS2        equ	15454	;# 
  4117   003C5F                     CLC4GLS3        equ	15455	;# 
  4118   003C60                     CLC3CON         equ	15456	;# 
  4119   003C61                     CLC3POL         equ	15457	;# 
  4120   003C62                     CLC3SEL0        equ	15458	;# 
  4121   003C63                     CLC3SEL1        equ	15459	;# 
  4122   003C64                     CLC3SEL2        equ	15460	;# 
  4123   003C65                     CLC3SEL3        equ	15461	;# 
  4124   003C66                     CLC3GLS0        equ	15462	;# 
  4125   003C67                     CLC3GLS1        equ	15463	;# 
  4126   003C68                     CLC3GLS2        equ	15464	;# 
  4127   003C69                     CLC3GLS3        equ	15465	;# 
  4128   003C6A                     CLC2CON         equ	15466	;# 
  4129   003C6B                     CLC2POL         equ	15467	;# 
  4130   003C6C                     CLC2SEL0        equ	15468	;# 
  4131   003C6D                     CLC2SEL1        equ	15469	;# 
  4132   003C6E                     CLC2SEL2        equ	15470	;# 
  4133   003C6F                     CLC2SEL3        equ	15471	;# 
  4134   003C70                     CLC2GLS0        equ	15472	;# 
  4135   003C71                     CLC2GLS1        equ	15473	;# 
  4136   003C72                     CLC2GLS2        equ	15474	;# 
  4137   003C73                     CLC2GLS3        equ	15475	;# 
  4138   003C74                     CLC1CON         equ	15476	;# 
  4139   003C75                     CLC1POL         equ	15477	;# 
  4140   003C76                     CLC1SEL0        equ	15478	;# 
  4141   003C77                     CLC1SEL1        equ	15479	;# 
  4142   003C78                     CLC1SEL2        equ	15480	;# 
  4143   003C79                     CLC1SEL3        equ	15481	;# 
  4144   003C7A                     CLC1GLS0        equ	15482	;# 
  4145   003C7B                     CLC1GLS1        equ	15483	;# 
  4146   003C7C                     CLC1GLS2        equ	15484	;# 
  4147   003C7D                     CLC1GLS3        equ	15485	;# 
  4148   003C7E                     CLCDATA0        equ	15486	;# 
  4149   003CE5                     CLKRCON         equ	15589	;# 
  4150   003CE6                     CLKRCLK         equ	15590	;# 
  4151   003CFA                     MD1CON0         equ	15610	;# 
  4152   003CFB                     MD1CON1         equ	15611	;# 
  4153   003CFC                     MD1SRC          equ	15612	;# 
  4154   003CFD                     MD1CARL         equ	15613	;# 
  4155   003CFE                     MD1CARH         equ	15614	;# 
  4156   003D10                     SPI1RXB         equ	15632	;# 
  4157   003D11                     SPI1TXB         equ	15633	;# 
  4158   003D12                     SPI1TCNT        equ	15634	;# 
  4159   003D12                     SPI1TCNTL       equ	15634	;# 
  4160   003D13                     SPI1TCNTH       equ	15635	;# 
  4161   003D14                     SPI1CON0        equ	15636	;# 
  4162   003D15                     SPI1CON1        equ	15637	;# 
  4163   003D16                     SPI1CON2        equ	15638	;# 
  4164   003D17                     SPI1STATUS      equ	15639	;# 
  4165   003D18                     SPI1TWIDTH      equ	15640	;# 
  4166   003D19                     SPI1BAUD        equ	15641	;# 
  4167   003D1A                     SPI1INTF        equ	15642	;# 
  4168   003D1B                     SPI1INTE        equ	15643	;# 
  4169   003D1C                     SPI1CLK         equ	15644	;# 
  4170   003D54                     I2C2RXB         equ	15700	;# 
  4171   003D55                     I2C2TXB         equ	15701	;# 
  4172   003D56                     I2C2CNT         equ	15702	;# 
  4173   003D57                     I2C2ADB0        equ	15703	;# 
  4174   003D58                     I2C2ADB1        equ	15704	;# 
  4175   003D59                     I2C2ADR0        equ	15705	;# 
  4176   003D5A                     I2C2ADR1        equ	15706	;# 
  4177   003D5B                     I2C2ADR2        equ	15707	;# 
  4178   003D5C                     I2C2ADR3        equ	15708	;# 
  4179   003D5D                     I2C2CON0        equ	15709	;# 
  4180   003D5E                     I2C2CON1        equ	15710	;# 
  4181   003D5F                     I2C2CON2        equ	15711	;# 
  4182   003D60                     I2C2ERR         equ	15712	;# 
  4183   003D61                     I2C2STAT0       equ	15713	;# 
  4184   003D62                     I2C2STAT1       equ	15714	;# 
  4185   003D63                     I2C2PIR         equ	15715	;# 
  4186   003D64                     I2C2PIE         equ	15716	;# 
  4187   003D65                     I2C2CLK         equ	15717	;# 
  4188   003D66                     I2C2BTO         equ	15718	;# 
  4189   003D6A                     I2C1RXB         equ	15722	;# 
  4190   003D6B                     I2C1TXB         equ	15723	;# 
  4191   003D6C                     I2C1CNT         equ	15724	;# 
  4192   003D6D                     I2C1ADB0        equ	15725	;# 
  4193   003D6E                     I2C1ADB1        equ	15726	;# 
  4194   003D6F                     I2C1ADR0        equ	15727	;# 
  4195   003D70                     I2C1ADR1        equ	15728	;# 
  4196   003D71                     I2C1ADR2        equ	15729	;# 
  4197   003D72                     I2C1ADR3        equ	15730	;# 
  4198   003D73                     I2C1CON0        equ	15731	;# 
  4199   003D74                     I2C1CON1        equ	15732	;# 
  4200   003D75                     I2C1CON2        equ	15733	;# 
  4201   003D76                     I2C1ERR         equ	15734	;# 
  4202   003D77                     I2C1STAT0       equ	15735	;# 
  4203   003D78                     I2C1STAT1       equ	15736	;# 
  4204   003D79                     I2C1PIR         equ	15737	;# 
  4205   003D7A                     I2C1PIE         equ	15738	;# 
  4206   003D7B                     I2C1CLK         equ	15739	;# 
  4207   003D7C                     I2C1BTO         equ	15740	;# 
  4208   003DD0                     U2RXB           equ	15824	;# 
  4209   003DD0                     U2RXBL          equ	15824	;# 
  4210   003DD2                     U2TXB           equ	15826	;# 
  4211   003DD2                     U2TXBL          equ	15826	;# 
  4212   003DD4                     U2P1            equ	15828	;# 
  4213   003DD4                     U2P1L           equ	15828	;# 
  4214   003DD6                     U2P2            equ	15830	;# 
  4215   003DD6                     U2P2L           equ	15830	;# 
  4216   003DD8                     U2P3            equ	15832	;# 
  4217   003DD8                     U2P3L           equ	15832	;# 
  4218   003DDA                     U2CON0          equ	15834	;# 
  4219   003DDB                     U2CON1          equ	15835	;# 
  4220   003DDC                     U2CON2          equ	15836	;# 
  4221   003DDD                     U2BRG           equ	15837	;# 
  4222   003DDD                     U2BRGL          equ	15837	;# 
  4223   003DDE                     U2BRGH          equ	15838	;# 
  4224   003DDF                     U2FIFO          equ	15839	;# 
  4225   003DE0                     U2UIR           equ	15840	;# 
  4226   003DE1                     U2ERRIR         equ	15841	;# 
  4227   003DE2                     U2ERRIE         equ	15842	;# 
  4228   003DE8                     U1RXB           equ	15848	;# 
  4229   003DE8                     U1RXBL          equ	15848	;# 
  4230   003DE9                     U1RXCHK         equ	15849	;# 
  4231   003DEA                     U1TXB           equ	15850	;# 
  4232   003DEA                     U1TXBL          equ	15850	;# 
  4233   003DEB                     U1TXCHK         equ	15851	;# 
  4234   003DEC                     U1P1            equ	15852	;# 
  4235   003DEC                     U1P1L           equ	15852	;# 
  4236   003DED                     U1P1H           equ	15853	;# 
  4237   003DEE                     U1P2            equ	15854	;# 
  4238   003DEE                     U1P2L           equ	15854	;# 
  4239   003DEF                     U1P2H           equ	15855	;# 
  4240   003DF0                     U1P3            equ	15856	;# 
  4241   003DF0                     U1P3L           equ	15856	;# 
  4242   003DF1                     U1P3H           equ	15857	;# 
  4243   003DF2                     U1CON0          equ	15858	;# 
  4244   003DF3                     U1CON1          equ	15859	;# 
  4245   003DF4                     U1CON2          equ	15860	;# 
  4246   003DF5                     U1BRG           equ	15861	;# 
  4247   003DF5                     U1BRGL          equ	15861	;# 
  4248   003DF6                     U1BRGH          equ	15862	;# 
  4249   003DF7                     U1FIFO          equ	15863	;# 
  4250   003DF8                     U1UIR           equ	15864	;# 
  4251   003DF9                     U1ERRIR         equ	15865	;# 
  4252   003DFA                     U1ERRIE         equ	15866	;# 
  4253   003E9C                     DAC1CON1        equ	16028	;# 
  4254   003E9E                     DAC1CON0        equ	16030	;# 
  4255   003EB8                     CM2CON0         equ	16056	;# 
  4256   003EB9                     CM2CON1         equ	16057	;# 
  4257   003EBA                     CM2NCH          equ	16058	;# 
  4258   003EBB                     CM2PCH          equ	16059	;# 
  4259   003EBC                     CM1CON0         equ	16060	;# 
  4260   003EBD                     CM1CON1         equ	16061	;# 
  4261   003EBE                     CM1NCH          equ	16062	;# 
  4262   003EBF                     CM1PCH          equ	16063	;# 
  4263   003EC0                     CMOUT           equ	16064	;# 
  4264   003EC1                     FVRCON          equ	16065	;# 
  4265   003EC3                     ZCDCON          equ	16067	;# 
  4266   003EC9                     HLVDCON0        equ	16073	;# 
  4267   003ECA                     HLVDCON1        equ	16074	;# 
  4268   003ED7                     ADCP            equ	16087	;# 
  4269   003EDE                     ADLTH           equ	16094	;# 
  4270   003EDE                     ADLTHL          equ	16094	;# 
  4271   003EDF                     ADLTHH          equ	16095	;# 
  4272   003EE0                     ADUTH           equ	16096	;# 
  4273   003EE0                     ADUTHL          equ	16096	;# 
  4274   003EE1                     ADUTHH          equ	16097	;# 
  4275   003EE2                     ADERR           equ	16098	;# 
  4276   003EE2                     ADERRL          equ	16098	;# 
  4277   003EE3                     ADERRH          equ	16099	;# 
  4278   003EE4                     ADSTPT          equ	16100	;# 
  4279   003EE4                     ADSTPTL         equ	16100	;# 
  4280   003EE5                     ADSTPTH         equ	16101	;# 
  4281   003EE6                     ADFLTR          equ	16102	;# 
  4282   003EE6                     ADFLTRL         equ	16102	;# 
  4283   003EE7                     ADFLTRH         equ	16103	;# 
  4284   003EE8                     ADACC           equ	16104	;# 
  4285   003EE8                     ADACCL          equ	16104	;# 
  4286   003EE9                     ADACCH          equ	16105	;# 
  4287   003EEA                     ADACCU          equ	16106	;# 
  4288   003EEB                     ADCNT           equ	16107	;# 
  4289   003EEC                     ADRPT           equ	16108	;# 
  4290   003EED                     ADPREV          equ	16109	;# 
  4291   003EED                     ADPREVL         equ	16109	;# 
  4292   003EEE                     ADPREVH         equ	16110	;# 
  4293   003EEF                     ADRES           equ	16111	;# 
  4294   003EEF                     ADRESL          equ	16111	;# 
  4295   003EF0                     ADRESH          equ	16112	;# 
  4296   003EF1                     ADPCH           equ	16113	;# 
  4297   003EF3                     ADACQ           equ	16115	;# 
  4298   003EF3                     ADACQL          equ	16115	;# 
  4299   003EF4                     ADACQH          equ	16116	;# 
  4300   003EF5                     ADCAP           equ	16117	;# 
  4301   003EF6                     ADPRE           equ	16118	;# 
  4302   003EF6                     ADPREL          equ	16118	;# 
  4303   003EF7                     ADPREH          equ	16119	;# 
  4304   003EF8                     ADCON0          equ	16120	;# 
  4305   003EF9                     ADCON1          equ	16121	;# 
  4306   003EFA                     ADCON2          equ	16122	;# 
  4307   003EFB                     ADCON3          equ	16123	;# 
  4308   003EFC                     ADSTAT          equ	16124	;# 
  4309   003EFD                     ADREF           equ	16125	;# 
  4310   003EFE                     ADACT           equ	16126	;# 
  4311   003EFF                     ADCLK           equ	16127	;# 
  4312   003F12                     SMT1TMR         equ	16146	;# 
  4313   003F12                     SMT1TMRL        equ	16146	;# 
  4314   003F13                     SMT1TMRH        equ	16147	;# 
  4315   003F14                     SMT1TMRU        equ	16148	;# 
  4316   003F15                     SMT1CPR         equ	16149	;# 
  4317   003F15                     SMT1CPRL        equ	16149	;# 
  4318   003F16                     SMT1CPRH        equ	16150	;# 
  4319   003F17                     SMT1CPRU        equ	16151	;# 
  4320   003F18                     SMT1CPW         equ	16152	;# 
  4321   003F18                     SMT1CPWL        equ	16152	;# 
  4322   003F19                     SMT1CPWH        equ	16153	;# 
  4323   003F1A                     SMT1CPWU        equ	16154	;# 
  4324   003F1B                     SMT1PR          equ	16155	;# 
  4325   003F1B                     SMT1PRL         equ	16155	;# 
  4326   003F1C                     SMT1PRH         equ	16156	;# 
  4327   003F1D                     SMT1PRU         equ	16157	;# 
  4328   003F1E                     SMT1CON0        equ	16158	;# 
  4329   003F1F                     SMT1CON1        equ	16159	;# 
  4330   003F20                     SMT1STAT        equ	16160	;# 
  4331   003F21                     SMT1CLK         equ	16161	;# 
  4332   003F22                     SMT1SIG         equ	16162	;# 
  4333   003F23                     SMT1WIN         equ	16163	;# 
  4334   003F38                     NCO1ACC         equ	16184	;# 
  4335   003F38                     NCO1ACCL        equ	16184	;# 
  4336   003F39                     NCO1ACCH        equ	16185	;# 
  4337   003F3A                     NCO1ACCU        equ	16186	;# 
  4338   003F3B                     NCO1INC         equ	16187	;# 
  4339   003F3B                     NCO1INCL        equ	16187	;# 
  4340   003F3C                     NCO1INCH        equ	16188	;# 
  4341   003F3D                     NCO1INCU        equ	16189	;# 
  4342   003F3E                     NCO1CON         equ	16190	;# 
  4343   003F3F                     NCO1CLK         equ	16191	;# 
  4344   003F40                     CWG3CLK         equ	16192	;# 
  4345   003F40                     CWG3CLKCON      equ	16192	;# 
  4346   003F41                     CWG3ISM         equ	16193	;# 
  4347   003F41                     CWG3DAT         equ	16193	;# 
  4348   003F42                     CWG3DBR         equ	16194	;# 
  4349   003F43                     CWG3DBF         equ	16195	;# 
  4350   003F44                     CWG3CON0        equ	16196	;# 
  4351   003F45                     CWG3CON1        equ	16197	;# 
  4352   003F46                     CWG3AS0         equ	16198	;# 
  4353   003F47                     CWG3AS1         equ	16199	;# 
  4354   003F48                     CWG3STR         equ	16200	;# 
  4355   003F49                     CWG2CLK         equ	16201	;# 
  4356   003F49                     CWG2CLKCON      equ	16201	;# 
  4357   003F4A                     CWG2ISM         equ	16202	;# 
  4358   003F4A                     CWG2DAT         equ	16202	;# 
  4359   003F4B                     CWG2DBR         equ	16203	;# 
  4360   003F4C                     CWG2DBF         equ	16204	;# 
  4361   003F4D                     CWG2CON0        equ	16205	;# 
  4362   003F4E                     CWG2CON1        equ	16206	;# 
  4363   003F4F                     CWG2AS0         equ	16207	;# 
  4364   003F50                     CWG2AS1         equ	16208	;# 
  4365   003F51                     CWG2STR         equ	16209	;# 
  4366   003F52                     CWG1CLK         equ	16210	;# 
  4367   003F52                     CWG1CLKCON      equ	16210	;# 
  4368   003F53                     CWG1ISM         equ	16211	;# 
  4369   003F53                     CWG1DAT         equ	16211	;# 
  4370   003F54                     CWG1DBR         equ	16212	;# 
  4371   003F55                     CWG1DBF         equ	16213	;# 
  4372   003F56                     CWG1CON0        equ	16214	;# 
  4373   003F57                     CWG1CON1        equ	16215	;# 
  4374   003F58                     CWG1AS0         equ	16216	;# 
  4375   003F59                     CWG1AS1         equ	16217	;# 
  4376   003F5A                     CWG1STR         equ	16218	;# 
  4377   003F5E                     CCPTMRS0        equ	16222	;# 
  4378   003F5F                     CCPTMRS1        equ	16223	;# 
  4379   003F60                     PWM8DC          equ	16224	;# 
  4380   003F60                     PWM8DCL         equ	16224	;# 
  4381   003F61                     PWM8DCH         equ	16225	;# 
  4382   003F62                     PWM8CON         equ	16226	;# 
  4383   003F64                     PWM7DC          equ	16228	;# 
  4384   003F64                     PWM7DCL         equ	16228	;# 
  4385   003F65                     PWM7DCH         equ	16229	;# 
  4386   003F66                     PWM7CON         equ	16230	;# 
  4387   003F68                     PWM6DC          equ	16232	;# 
  4388   003F68                     PWM6DCL         equ	16232	;# 
  4389   003F69                     PWM6DCH         equ	16233	;# 
  4390   003F6A                     PWM6CON         equ	16234	;# 
  4391   003F6C                     PWM5DC          equ	16236	;# 
  4392   003F6C                     PWM5DCL         equ	16236	;# 
  4393   003F6D                     PWM5DCH         equ	16237	;# 
  4394   003F6E                     PWM5CON         equ	16238	;# 
  4395   003F70                     CCPR4           equ	16240	;# 
  4396   003F70                     CCPR4L          equ	16240	;# 
  4397   003F71                     CCPR4H          equ	16241	;# 
  4398   003F72                     CCP4CON         equ	16242	;# 
  4399   003F73                     CCP4CAP         equ	16243	;# 
  4400   003F74                     CCPR3           equ	16244	;# 
  4401   003F74                     CCPR3L          equ	16244	;# 
  4402   003F75                     CCPR3H          equ	16245	;# 
  4403   003F76                     CCP3CON         equ	16246	;# 
  4404   003F77                     CCP3CAP         equ	16247	;# 
  4405   003F78                     CCPR2           equ	16248	;# 
  4406   003F78                     CCPR2L          equ	16248	;# 
  4407   003F79                     CCPR2H          equ	16249	;# 
  4408   003F7A                     CCP2CON         equ	16250	;# 
  4409   003F7B                     CCP2CAP         equ	16251	;# 
  4410   003F7C                     CCPR1           equ	16252	;# 
  4411   003F7C                     CCPR1L          equ	16252	;# 
  4412   003F7D                     CCPR1H          equ	16253	;# 
  4413   003F7E                     CCP1CON         equ	16254	;# 
  4414   003F7F                     CCP1CAP         equ	16255	;# 
  4415   003F92                     T6TMR           equ	16274	;# 
  4416   003F92                     TMR6            equ	16274	;# 
  4417   003F93                     T6PR            equ	16275	;# 
  4418   003F93                     PR6             equ	16275	;# 
  4419   003F94                     T6CON           equ	16276	;# 
  4420   003F95                     T6HLT           equ	16277	;# 
  4421   003F96                     T6CLKCON        equ	16278	;# 
  4422   003F96                     T6CLK           equ	16278	;# 
  4423   003F97                     T6RST           equ	16279	;# 
  4424   003F98                     TMR5            equ	16280	;# 
  4425   003F98                     TMR5L           equ	16280	;# 
  4426   003F99                     TMR5H           equ	16281	;# 
  4427   003F9A                     T5CON           equ	16282	;# 
  4428   003F9A                     TMR5CON         equ	16282	;# 
  4429   003F9B                     T5GCON          equ	16283	;# 
  4430   003F9B                     TMR5GCON        equ	16283	;# 
  4431   003F9C                     T5GATE          equ	16284	;# 
  4432   003F9C                     TMR5GATE        equ	16284	;# 
  4433   003F9D                     T5CLK           equ	16285	;# 
  4434   003F9D                     TMR5CLK         equ	16285	;# 
  4435   003F9D                     PR5             equ	16285	;# 
  4436   003F9E                     T4TMR           equ	16286	;# 
  4437   003F9E                     TMR4            equ	16286	;# 
  4438   003F9F                     T4PR            equ	16287	;# 
  4439   003F9F                     PR4             equ	16287	;# 
  4440   003FA0                     T4CON           equ	16288	;# 
  4441   003FA1                     T4HLT           equ	16289	;# 
  4442   003FA2                     T4CLKCON        equ	16290	;# 
  4443   003FA2                     T4CLK           equ	16290	;# 
  4444   003FA3                     T4RST           equ	16291	;# 
  4445   003FA4                     TMR3            equ	16292	;# 
  4446   003FA4                     TMR3L           equ	16292	;# 
  4447   003FA5                     TMR3H           equ	16293	;# 
  4448   003FA6                     T3CON           equ	16294	;# 
  4449   003FA6                     TMR3CON         equ	16294	;# 
  4450   003FA7                     T3GCON          equ	16295	;# 
  4451   003FA7                     TMR3GCON        equ	16295	;# 
  4452   003FA8                     T3GATE          equ	16296	;# 
  4453   003FA8                     TMR3GATE        equ	16296	;# 
  4454   003FA9                     T3CLK           equ	16297	;# 
  4455   003FA9                     TMR3CLK         equ	16297	;# 
  4456   003FA9                     PR3             equ	16297	;# 
  4457   003FAA                     T2TMR           equ	16298	;# 
  4458   003FAA                     TMR2            equ	16298	;# 
  4459   003FAB                     T2PR            equ	16299	;# 
  4460   003FAB                     PR2             equ	16299	;# 
  4461   003FAC                     T2CON           equ	16300	;# 
  4462   003FAD                     T2HLT           equ	16301	;# 
  4463   003FAE                     T2CLKCON        equ	16302	;# 
  4464   003FAE                     T2CLK           equ	16302	;# 
  4465   003FAF                     T2RST           equ	16303	;# 
  4466   003FB0                     TMR1            equ	16304	;# 
  4467   003FB0                     TMR1L           equ	16304	;# 
  4468   003FB1                     TMR1H           equ	16305	;# 
  4469   003FB2                     T1CON           equ	16306	;# 
  4470   003FB2                     TMR1CON         equ	16306	;# 
  4471   003FB3                     T1GCON          equ	16307	;# 
  4472   003FB3                     TMR1GCON        equ	16307	;# 
  4473   003FB4                     T1GATE          equ	16308	;# 
  4474   003FB4                     TMR1GATE        equ	16308	;# 
  4475   003FB5                     T1CLK           equ	16309	;# 
  4476   003FB5                     TMR1CLK         equ	16309	;# 
  4477   003FB5                     PR1             equ	16309	;# 
  4478   003FB6                     TMR0L           equ	16310	;# 
  4479   003FB6                     TMR0            equ	16310	;# 
  4480   003FB7                     TMR0H           equ	16311	;# 
  4481   003FB7                     PR0             equ	16311	;# 
  4482   003FB8                     T0CON0          equ	16312	;# 
  4483   003FB9                     T0CON1          equ	16313	;# 
  4484   003FBA                     LATA            equ	16314	;# 
  4485   003FBB                     LATB            equ	16315	;# 
  4486   003FBC                     LATC            equ	16316	;# 
  4487   003FC2                     TRISA           equ	16322	;# 
  4488   003FC3                     TRISB           equ	16323	;# 
  4489   003FC4                     TRISC           equ	16324	;# 
  4490   003FCA                     PORTA           equ	16330	;# 
  4491   003FCB                     PORTB           equ	16331	;# 
  4492   003FCC                     PORTC           equ	16332	;# 
  4493   003FCE                     PORTE           equ	16334	;# 
  4494   003FD2                     INTCON0         equ	16338	;# 
  4495   003FD3                     INTCON1         equ	16339	;# 
  4496   003FD4                     IVTLOCK         equ	16340	;# 
  4497   003FD5                     IVTBASE         equ	16341	;# 
  4498   003FD5                     IVTBASEL        equ	16341	;# 
  4499   003FD6                     IVTBASEH        equ	16342	;# 
  4500   003FD7                     IVTBASEU        equ	16343	;# 
  4501   003FD8                     STATUS          equ	16344	;# 
  4502   003FD9                     FSR2            equ	16345	;# 
  4503   003FD9                     FSR2L           equ	16345	;# 
  4504   003FDA                     FSR2H           equ	16346	;# 
  4505   003FDB                     PLUSW2          equ	16347	;# 
  4506   003FDC                     PREINC2         equ	16348	;# 
  4507   003FDD                     POSTDEC2        equ	16349	;# 
  4508   003FDE                     POSTINC2        equ	16350	;# 
  4509   003FDF                     INDF2           equ	16351	;# 
  4510   003FE0                     BSR             equ	16352	;# 
  4511   003FE1                     FSR1            equ	16353	;# 
  4512   003FE1                     FSR1L           equ	16353	;# 
  4513   003FE2                     FSR1H           equ	16354	;# 
  4514   003FE3                     PLUSW1          equ	16355	;# 
  4515   003FE4                     PREINC1         equ	16356	;# 
  4516   003FE5                     POSTDEC1        equ	16357	;# 
  4517   003FE6                     POSTINC1        equ	16358	;# 
  4518   003FE7                     INDF1           equ	16359	;# 
  4519   003FE8                     WREG            equ	16360	;# 
  4520   003FE9                     FSR0            equ	16361	;# 
  4521   003FE9                     FSR0L           equ	16361	;# 
  4522   003FEA                     FSR0H           equ	16362	;# 
  4523   003FEB                     PLUSW0          equ	16363	;# 
  4524   003FEC                     PREINC0         equ	16364	;# 
  4525   003FED                     POSTDEC0        equ	16365	;# 
  4526   003FEE                     POSTINC0        equ	16366	;# 
  4527   003FEF                     INDF0           equ	16367	;# 
  4528   003FF0                     PCON0           equ	16368	;# 
  4529   003FF1                     PCON1           equ	16369	;# 
  4530   003FF3                     PROD            equ	16371	;# 
  4531   003FF3                     PRODL           equ	16371	;# 
  4532   003FF4                     PRODH           equ	16372	;# 
  4533   003FF5                     TABLAT          equ	16373	;# 
  4534   003FF6                     TBLPTR          equ	16374	;# 
  4535   003FF6                     TBLPTRL         equ	16374	;# 
  4536   003FF7                     TBLPTRH         equ	16375	;# 
  4537   003FF8                     TBLPTRU         equ	16376	;# 
  4538   003FF9                     PCLAT           equ	16377	;# 
  4539   003FF9                     PCL             equ	16377	;# 
  4540   003FFA                     PCLATH          equ	16378	;# 
  4541   003FFB                     PCLATU          equ	16379	;# 
  4542   003FFC                     STKPTR          equ	16380	;# 
  4543   003FFD                     TOS             equ	16381	;# 
  4544   003FFD                     TOSL            equ	16381	;# 
  4545   003FFE                     TOSH            equ	16382	;# 
  4546   003FFF                     TOSU            equ	16383	;# 
  4547   003880                     STATUS_CSHAD    equ	14464	;# 
  4548   003881                     WREG_CSHAD      equ	14465	;# 
  4549   003882                     BSR_CSHAD       equ	14466	;# 
  4550   003883                     SHADCON         equ	14467	;# 
  4551   003884                     STATUS_SHAD     equ	14468	;# 
  4552   003885                     WREG_SHAD       equ	14469	;# 
  4553   003886                     BSR_SHAD        equ	14470	;# 
  4554   003887                     PCLATH_SHAD     equ	14471	;# 
  4555   003888                     PCLATU_SHAD     equ	14472	;# 
  4556   003889                     FSR0SH          equ	14473	;# 
  4557   003889                     FSR0L_SHAD      equ	14473	;# 
  4558   00388A                     FSR0H_SHAD      equ	14474	;# 
  4559   00388B                     FSR1SH          equ	14475	;# 
  4560   00388B                     FSR1L_SHAD      equ	14475	;# 
  4561   00388C                     FSR1H_SHAD      equ	14476	;# 
  4562   00388D                     FSR2SH          equ	14477	;# 
  4563   00388D                     FSR2L_SHAD      equ	14477	;# 
  4564   00388E                     FSR2H_SHAD      equ	14478	;# 
  4565   00388F                     PRODSH          equ	14479	;# 
  4566   00388F                     PRODL_SHAD      equ	14479	;# 
  4567   003890                     PRODH_SHAD      equ	14480	;# 
  4568   00389D                     IVTADL          equ	14493	;# 
  4569   00389E                     IVTADH          equ	14494	;# 
  4570   00389F                     IVTADU          equ	14495	;# 
  4571   00395B                     WDTCON0         equ	14683	;# 
  4572   00395C                     WDTCON1         equ	14684	;# 
  4573   00395D                     WDTPSL          equ	14685	;# 
  4574   00395E                     WDTPSH          equ	14686	;# 
  4575   00395F                     WDTTMR          equ	14687	;# 
  4576   003960                     CRCDATA         equ	14688	;# 
  4577   003960                     CRCDATL         equ	14688	;# 
  4578   003961                     CRCDATH         equ	14689	;# 
  4579   003962                     CRCACC          equ	14690	;# 
  4580   003962                     CRCACCL         equ	14690	;# 
  4581   003963                     CRCACCH         equ	14691	;# 
  4582   003964                     CRCSHFT         equ	14692	;# 
  4583   003964                     CRCSHIFTL       equ	14692	;# 
  4584   003965                     CRCSHIFTH       equ	14693	;# 
  4585   003966                     CRCXOR          equ	14694	;# 
  4586   003966                     CRCXORL         equ	14694	;# 
  4587   003967                     CRCXORH         equ	14695	;# 
  4588   003968                     CRCCON0         equ	14696	;# 
  4589   003969                     CRCCON1         equ	14697	;# 
  4590   003976                     SCANLADR        equ	14710	;# 
  4591   003976                     SCANLADRL       equ	14710	;# 
  4592   003977                     SCANLADRH       equ	14711	;# 
  4593   003978                     SCANLADRU       equ	14712	;# 
  4594   003979                     SCANHADR        equ	14713	;# 
  4595   003979                     SCANHADRL       equ	14713	;# 
  4596   00397A                     SCANHADRH       equ	14714	;# 
  4597   00397B                     SCANHADRU       equ	14715	;# 
  4598   00397C                     SCANCON0        equ	14716	;# 
  4599   00397D                     SCANTRIG        equ	14717	;# 
  4600   003980                     IPR0            equ	14720	;# 
  4601   003981                     IPR1            equ	14721	;# 
  4602   003982                     IPR2            equ	14722	;# 
  4603   003983                     IPR3            equ	14723	;# 
  4604   003984                     IPR4            equ	14724	;# 
  4605   003985                     IPR5            equ	14725	;# 
  4606   003986                     IPR6            equ	14726	;# 
  4607   003987                     IPR7            equ	14727	;# 
  4608   003988                     IPR8            equ	14728	;# 
  4609   003989                     IPR9            equ	14729	;# 
  4610   00398A                     IPR10           equ	14730	;# 
  4611   003990                     PIE0            equ	14736	;# 
  4612   003991                     PIE1            equ	14737	;# 
  4613   003992                     PIE2            equ	14738	;# 
  4614   003993                     PIE3            equ	14739	;# 
  4615   003994                     PIE4            equ	14740	;# 
  4616   003995                     PIE5            equ	14741	;# 
  4617   003996                     PIE6            equ	14742	;# 
  4618   003997                     PIE7            equ	14743	;# 
  4619   003998                     PIE8            equ	14744	;# 
  4620   003999                     PIE9            equ	14745	;# 
  4621   00399A                     PIE10           equ	14746	;# 
  4622   0039A0                     PIR0            equ	14752	;# 
  4623   0039A1                     PIR1            equ	14753	;# 
  4624   0039A2                     PIR2            equ	14754	;# 
  4625   0039A3                     PIR3            equ	14755	;# 
  4626   0039A4                     PIR4            equ	14756	;# 
  4627   0039A5                     PIR5            equ	14757	;# 
  4628   0039A6                     PIR6            equ	14758	;# 
  4629   0039A7                     PIR7            equ	14759	;# 
  4630   0039A8                     PIR8            equ	14760	;# 
  4631   0039A9                     PIR9            equ	14761	;# 
  4632   0039AA                     PIR10           equ	14762	;# 
  4633   0039C0                     PMD0            equ	14784	;# 
  4634   0039C1                     PMD1            equ	14785	;# 
  4635   0039C2                     PMD2            equ	14786	;# 
  4636   0039C3                     PMD3            equ	14787	;# 
  4637   0039C4                     PMD4            equ	14788	;# 
  4638   0039C5                     PMD5            equ	14789	;# 
  4639   0039C6                     PMD6            equ	14790	;# 
  4640   0039C7                     PMD7            equ	14791	;# 
  4641   0039D0                     BORCON          equ	14800	;# 
  4642   0039D1                     VREGCON         equ	14801	;# 
  4643   0039D8                     CPUDOZE         equ	14808	;# 
  4644   0039D9                     OSCCON1         equ	14809	;# 
  4645   0039DA                     OSCCON2         equ	14810	;# 
  4646   0039DB                     OSCCON3         equ	14811	;# 
  4647   0039DC                     OSCSTAT         equ	14812	;# 
  4648   0039DC                     OSCSTAT1        equ	14812	;# 
  4649   0039DD                     OSCEN           equ	14813	;# 
  4650   0039DE                     OSCTUNE         equ	14814	;# 
  4651   0039DF                     OSCFRQ          equ	14815	;# 
  4652   0039E0                     NVMADRL         equ	14816	;# 
  4653   0039E1                     NVMADRH         equ	14817	;# 
  4654   0039E3                     NVMDAT          equ	14819	;# 
  4655   0039E5                     NVMCON1         equ	14821	;# 
  4656   0039E6                     NVMCON2         equ	14822	;# 
  4657   0039EF                     PRLOCK          equ	14831	;# 
  4658   0039F1                     ISRPR           equ	14833	;# 
  4659   0039F2                     MAINPR          equ	14834	;# 
  4660   0039F3                     DMA1PR          equ	14835	;# 
  4661   0039F4                     DMA2PR          equ	14836	;# 
  4662   0039F7                     SCANPR          equ	14839	;# 
  4663   003A00                     RA0PPS          equ	14848	;# 
  4664   003A01                     RA1PPS          equ	14849	;# 
  4665   003A02                     RA2PPS          equ	14850	;# 
  4666   003A03                     RA3PPS          equ	14851	;# 
  4667   003A04                     RA4PPS          equ	14852	;# 
  4668   003A05                     RA5PPS          equ	14853	;# 
  4669   003A06                     RA6PPS          equ	14854	;# 
  4670   003A07                     RA7PPS          equ	14855	;# 
  4671   003A08                     RB0PPS          equ	14856	;# 
  4672   003A09                     RB1PPS          equ	14857	;# 
  4673   003A0A                     RB2PPS          equ	14858	;# 
  4674   003A0B                     RB3PPS          equ	14859	;# 
  4675   003A0C                     RB4PPS          equ	14860	;# 
  4676   003A0D                     RB5PPS          equ	14861	;# 
  4677   003A0E                     RB6PPS          equ	14862	;# 
  4678   003A0F                     RB7PPS          equ	14863	;# 
  4679   003A10                     RC0PPS          equ	14864	;# 
  4680   003A11                     RC1PPS          equ	14865	;# 
  4681   003A12                     RC2PPS          equ	14866	;# 
  4682   003A13                     RC3PPS          equ	14867	;# 
  4683   003A14                     RC4PPS          equ	14868	;# 
  4684   003A15                     RC5PPS          equ	14869	;# 
  4685   003A16                     RC6PPS          equ	14870	;# 
  4686   003A17                     RC7PPS          equ	14871	;# 
  4687   003A40                     ANSELA          equ	14912	;# 
  4688   003A41                     WPUA            equ	14913	;# 
  4689   003A42                     ODCONA          equ	14914	;# 
  4690   003A43                     SLRCONA         equ	14915	;# 
  4691   003A44                     INLVLA          equ	14916	;# 
  4692   003A45                     IOCAP           equ	14917	;# 
  4693   003A46                     IOCAN           equ	14918	;# 
  4694   003A47                     IOCAF           equ	14919	;# 
  4695   003A48                     CCDPA           equ	14920	;# 
  4696   003A49                     CCDNA           equ	14921	;# 
  4697   003A50                     ANSELB          equ	14928	;# 
  4698   003A51                     WPUB            equ	14929	;# 
  4699   003A52                     ODCONB          equ	14930	;# 
  4700   003A53                     SLRCONB         equ	14931	;# 
  4701   003A54                     INLVLB          equ	14932	;# 
  4702   003A55                     IOCBP           equ	14933	;# 
  4703   003A56                     IOCBN           equ	14934	;# 
  4704   003A57                     IOCBF           equ	14935	;# 
  4705   003A58                     CCDPB           equ	14936	;# 
  4706   003A59                     CCDNB           equ	14937	;# 
  4707   003A5A                     RB1I2C          equ	14938	;# 
  4708   003A5B                     RB2I2C          equ	14939	;# 
  4709   003A60                     ANSELC          equ	14944	;# 
  4710   003A61                     WPUC            equ	14945	;# 
  4711   003A62                     ODCONC          equ	14946	;# 
  4712   003A63                     SLRCONC         equ	14947	;# 
  4713   003A64                     INLVLC          equ	14948	;# 
  4714   003A65                     IOCCP           equ	14949	;# 
  4715   003A66                     IOCCN           equ	14950	;# 
  4716   003A67                     IOCCF           equ	14951	;# 
  4717   003A68                     CCDPC           equ	14952	;# 
  4718   003A69                     CCDNC           equ	14953	;# 
  4719   003A6A                     RC3I2C          equ	14954	;# 
  4720   003A6B                     RC4I2C          equ	14955	;# 
  4721   003A81                     WPUE            equ	14977	;# 
  4722   003A84                     INLVLE          equ	14980	;# 
  4723   003A85                     IOCEP           equ	14981	;# 
  4724   003A86                     IOCEN           equ	14982	;# 
  4725   003A87                     IOCEF           equ	14983	;# 
  4726   003ABE                     CCDCON          equ	15038	;# 
  4727   003ABF                     PPSLOCK         equ	15039	;# 
  4728   003AC0                     INT0PPS         equ	15040	;# 
  4729   003AC1                     INT1PPS         equ	15041	;# 
  4730   003AC2                     INT2PPS         equ	15042	;# 
  4731   003AC3                     T0CKIPPS        equ	15043	;# 
  4732   003AC4                     T1CKIPPS        equ	15044	;# 
  4733   003AC5                     T1GPPS          equ	15045	;# 
  4734   003AC6                     T3CKIPPS        equ	15046	;# 
  4735   003AC7                     T3GPPS          equ	15047	;# 
  4736   003AC8                     T5CKIPPS        equ	15048	;# 
  4737   003AC9                     T5GPPS          equ	15049	;# 
  4738   003ACA                     T2INPPS         equ	15050	;# 
  4739   003ACB                     T4INPPS         equ	15051	;# 
  4740   003ACC                     T6INPPS         equ	15052	;# 
  4741   003ACD                     CCP1PPS         equ	15053	;# 
  4742   003ACE                     CCP2PPS         equ	15054	;# 
  4743   003ACF                     CCP3PPS         equ	15055	;# 
  4744   003AD0                     CCP4PPS         equ	15056	;# 
  4745   003AD1                     SMT1WINPPS      equ	15057	;# 
  4746   003AD2                     SMT1SIGPPS      equ	15058	;# 
  4747   003AD3                     CWG1INPPS       equ	15059	;# 
  4748   003AD4                     CWG2INPPS       equ	15060	;# 
  4749   003AD5                     CWG3INPPS       equ	15061	;# 
  4750   003AD6                     MD1CARLPPS      equ	15062	;# 
  4751   003AD7                     MD1CARHPPS      equ	15063	;# 
  4752   003AD8                     MD1SRCPPS       equ	15064	;# 
  4753   003AD9                     CLCIN0PPS       equ	15065	;# 
  4754   003ADA                     CLCIN1PPS       equ	15066	;# 
  4755   003ADB                     CLCIN2PPS       equ	15067	;# 
  4756   003ADC                     CLCIN3PPS       equ	15068	;# 
  4757   003ADD                     ADACTPPS        equ	15069	;# 
  4758   003ADE                     SPI1SCKPPS      equ	15070	;# 
  4759   003ADF                     SPI1SDIPPS      equ	15071	;# 
  4760   003AE0                     SPI1SSPPS       equ	15072	;# 
  4761   003AE1                     I2C1SCLPPS      equ	15073	;# 
  4762   003AE2                     I2C1SDAPPS      equ	15074	;# 
  4763   003AE3                     I2C2SCLPPS      equ	15075	;# 
  4764   003AE4                     I2C2SDAPPS      equ	15076	;# 
  4765   003AE5                     U1RXPPS         equ	15077	;# 
  4766   003AE6                     U1CTSPPS        equ	15078	;# 
  4767   003AE8                     U2RXPPS         equ	15080	;# 
  4768   003AE9                     U2CTSPPS        equ	15081	;# 
  4769   003BC9                     DMA2BUF         equ	15305	;# 
  4770   003BCA                     DMA2DCNT        equ	15306	;# 
  4771   003BCA                     DMA2DCNTL       equ	15306	;# 
  4772   003BCB                     DMA2DCNTH       equ	15307	;# 
  4773   003BCC                     DMA2DPTR        equ	15308	;# 
  4774   003BCC                     DMA2DPTRL       equ	15308	;# 
  4775   003BCD                     DMA2DPTRH       equ	15309	;# 
  4776   003BCE                     DMA2DSZ         equ	15310	;# 
  4777   003BCE                     DMA2DSZL        equ	15310	;# 
  4778   003BCF                     DMA2DSZH        equ	15311	;# 
  4779   003BD0                     DMA2DSA         equ	15312	;# 
  4780   003BD0                     DMA2DSAL        equ	15312	;# 
  4781   003BD1                     DMA2DSAH        equ	15313	;# 
  4782   003BD2                     DMA2SCNT        equ	15314	;# 
  4783   003BD2                     DMA2SCNTL       equ	15314	;# 
  4784   003BD3                     DMA2SCNTH       equ	15315	;# 
  4785   003BD4                     DMA2SPTR        equ	15316	;# 
  4786   003BD4                     DMA2SPTRL       equ	15316	;# 
  4787   003BD5                     DMA2SPTRH       equ	15317	;# 
  4788   003BD6                     DMA2SPTRU       equ	15318	;# 
  4789   003BD7                     DMA2SSZ         equ	15319	;# 
  4790   003BD7                     DMA2SSZL        equ	15319	;# 
  4791   003BD8                     DMA2SSZH        equ	15320	;# 
  4792   003BD9                     DMA2SSA         equ	15321	;# 
  4793   003BD9                     DMA2SSAL        equ	15321	;# 
  4794   003BDA                     DMA2SSAH        equ	15322	;# 
  4795   003BDB                     DMA2SSAU        equ	15323	;# 
  4796   003BDC                     DMA2CON0        equ	15324	;# 
  4797   003BDD                     DMA2CON1        equ	15325	;# 
  4798   003BDE                     DMA2AIRQ        equ	15326	;# 
  4799   003BDF                     DMA2SIRQ        equ	15327	;# 
  4800   003BE9                     DMA1BUF         equ	15337	;# 
  4801   003BEA                     DMA1DCNT        equ	15338	;# 
  4802   003BEA                     DMA1DCNTL       equ	15338	;# 
  4803   003BEB                     DMA1DCNTH       equ	15339	;# 
  4804   003BEC                     DMA1DPTR        equ	15340	;# 
  4805   003BEC                     DMA1DPTRL       equ	15340	;# 
  4806   003BED                     DMA1DPTRH       equ	15341	;# 
  4807   003BEE                     DMA1DSZ         equ	15342	;# 
  4808   003BEE                     DMA1DSZL        equ	15342	;# 
  4809   003BEF                     DMA1DSZH        equ	15343	;# 
  4810   003BF0                     DMA1DSA         equ	15344	;# 
  4811   003BF0                     DMA1DSAL        equ	15344	;# 
  4812   003BF1                     DMA1DSAH        equ	15345	;# 
  4813   003BF2                     DMA1SCNT        equ	15346	;# 
  4814   003BF2                     DMA1SCNTL       equ	15346	;# 
  4815   003BF3                     DMA1SCNTH       equ	15347	;# 
  4816   003BF4                     DMA1SPTR        equ	15348	;# 
  4817   003BF4                     DMA1SPTRL       equ	15348	;# 
  4818   003BF5                     DMA1SPTRH       equ	15349	;# 
  4819   003BF6                     DMA1SPTRU       equ	15350	;# 
  4820   003BF7                     DMA1SSZ         equ	15351	;# 
  4821   003BF7                     DMA1SSZL        equ	15351	;# 
  4822   003BF8                     DMA1SSZH        equ	15352	;# 
  4823   003BF9                     DMA1SSA         equ	15353	;# 
  4824   003BF9                     DMA1SSAL        equ	15353	;# 
  4825   003BFA                     DMA1SSAH        equ	15354	;# 
  4826   003BFB                     DMA1SSAU        equ	15355	;# 
  4827   003BFC                     DMA1CON0        equ	15356	;# 
  4828   003BFD                     DMA1CON1        equ	15357	;# 
  4829   003BFE                     DMA1AIRQ        equ	15358	;# 
  4830   003BFF                     DMA1SIRQ        equ	15359	;# 
  4831   003C56                     CLC4CON         equ	15446	;# 
  4832   003C57                     CLC4POL         equ	15447	;# 
  4833   003C58                     CLC4SEL0        equ	15448	;# 
  4834   003C59                     CLC4SEL1        equ	15449	;# 
  4835   003C5A                     CLC4SEL2        equ	15450	;# 
  4836   003C5B                     CLC4SEL3        equ	15451	;# 
  4837   003C5C                     CLC4GLS0        equ	15452	;# 
  4838   003C5D                     CLC4GLS1        equ	15453	;# 
  4839   003C5E                     CLC4GLS2        equ	15454	;# 
  4840   003C5F                     CLC4GLS3        equ	15455	;# 
  4841   003C60                     CLC3CON         equ	15456	;# 
  4842   003C61                     CLC3POL         equ	15457	;# 
  4843   003C62                     CLC3SEL0        equ	15458	;# 
  4844   003C63                     CLC3SEL1        equ	15459	;# 
  4845   003C64                     CLC3SEL2        equ	15460	;# 
  4846   003C65                     CLC3SEL3        equ	15461	;# 
  4847   003C66                     CLC3GLS0        equ	15462	;# 
  4848   003C67                     CLC3GLS1        equ	15463	;# 
  4849   003C68                     CLC3GLS2        equ	15464	;# 
  4850   003C69                     CLC3GLS3        equ	15465	;# 
  4851   003C6A                     CLC2CON         equ	15466	;# 
  4852   003C6B                     CLC2POL         equ	15467	;# 
  4853   003C6C                     CLC2SEL0        equ	15468	;# 
  4854   003C6D                     CLC2SEL1        equ	15469	;# 
  4855   003C6E                     CLC2SEL2        equ	15470	;# 
  4856   003C6F                     CLC2SEL3        equ	15471	;# 
  4857   003C70                     CLC2GLS0        equ	15472	;# 
  4858   003C71                     CLC2GLS1        equ	15473	;# 
  4859   003C72                     CLC2GLS2        equ	15474	;# 
  4860   003C73                     CLC2GLS3        equ	15475	;# 
  4861   003C74                     CLC1CON         equ	15476	;# 
  4862   003C75                     CLC1POL         equ	15477	;# 
  4863   003C76                     CLC1SEL0        equ	15478	;# 
  4864   003C77                     CLC1SEL1        equ	15479	;# 
  4865   003C78                     CLC1SEL2        equ	15480	;# 
  4866   003C79                     CLC1SEL3        equ	15481	;# 
  4867   003C7A                     CLC1GLS0        equ	15482	;# 
  4868   003C7B                     CLC1GLS1        equ	15483	;# 
  4869   003C7C                     CLC1GLS2        equ	15484	;# 
  4870   003C7D                     CLC1GLS3        equ	15485	;# 
  4871   003C7E                     CLCDATA0        equ	15486	;# 
  4872   003CE5                     CLKRCON         equ	15589	;# 
  4873   003CE6                     CLKRCLK         equ	15590	;# 
  4874   003CFA                     MD1CON0         equ	15610	;# 
  4875   003CFB                     MD1CON1         equ	15611	;# 
  4876   003CFC                     MD1SRC          equ	15612	;# 
  4877   003CFD                     MD1CARL         equ	15613	;# 
  4878   003CFE                     MD1CARH         equ	15614	;# 
  4879   003D10                     SPI1RXB         equ	15632	;# 
  4880   003D11                     SPI1TXB         equ	15633	;# 
  4881   003D12                     SPI1TCNT        equ	15634	;# 
  4882   003D12                     SPI1TCNTL       equ	15634	;# 
  4883   003D13                     SPI1TCNTH       equ	15635	;# 
  4884   003D14                     SPI1CON0        equ	15636	;# 
  4885   003D15                     SPI1CON1        equ	15637	;# 
  4886   003D16                     SPI1CON2        equ	15638	;# 
  4887   003D17                     SPI1STATUS      equ	15639	;# 
  4888   003D18                     SPI1TWIDTH      equ	15640	;# 
  4889   003D19                     SPI1BAUD        equ	15641	;# 
  4890   003D1A                     SPI1INTF        equ	15642	;# 
  4891   003D1B                     SPI1INTE        equ	15643	;# 
  4892   003D1C                     SPI1CLK         equ	15644	;# 
  4893   003D54                     I2C2RXB         equ	15700	;# 
  4894   003D55                     I2C2TXB         equ	15701	;# 
  4895   003D56                     I2C2CNT         equ	15702	;# 
  4896   003D57                     I2C2ADB0        equ	15703	;# 
  4897   003D58                     I2C2ADB1        equ	15704	;# 
  4898   003D59                     I2C2ADR0        equ	15705	;# 
  4899   003D5A                     I2C2ADR1        equ	15706	;# 
  4900   003D5B                     I2C2ADR2        equ	15707	;# 
  4901   003D5C                     I2C2ADR3        equ	15708	;# 
  4902   003D5D                     I2C2CON0        equ	15709	;# 
  4903   003D5E                     I2C2CON1        equ	15710	;# 
  4904   003D5F                     I2C2CON2        equ	15711	;# 
  4905   003D60                     I2C2ERR         equ	15712	;# 
  4906   003D61                     I2C2STAT0       equ	15713	;# 
  4907   003D62                     I2C2STAT1       equ	15714	;# 
  4908   003D63                     I2C2PIR         equ	15715	;# 
  4909   003D64                     I2C2PIE         equ	15716	;# 
  4910   003D65                     I2C2CLK         equ	15717	;# 
  4911   003D66                     I2C2BTO         equ	15718	;# 
  4912   003D6A                     I2C1RXB         equ	15722	;# 
  4913   003D6B                     I2C1TXB         equ	15723	;# 
  4914   003D6C                     I2C1CNT         equ	15724	;# 
  4915   003D6D                     I2C1ADB0        equ	15725	;# 
  4916   003D6E                     I2C1ADB1        equ	15726	;# 
  4917   003D6F                     I2C1ADR0        equ	15727	;# 
  4918   003D70                     I2C1ADR1        equ	15728	;# 
  4919   003D71                     I2C1ADR2        equ	15729	;# 
  4920   003D72                     I2C1ADR3        equ	15730	;# 
  4921   003D73                     I2C1CON0        equ	15731	;# 
  4922   003D74                     I2C1CON1        equ	15732	;# 
  4923   003D75                     I2C1CON2        equ	15733	;# 
  4924   003D76                     I2C1ERR         equ	15734	;# 
  4925   003D77                     I2C1STAT0       equ	15735	;# 
  4926   003D78                     I2C1STAT1       equ	15736	;# 
  4927   003D79                     I2C1PIR         equ	15737	;# 
  4928   003D7A                     I2C1PIE         equ	15738	;# 
  4929   003D7B                     I2C1CLK         equ	15739	;# 
  4930   003D7C                     I2C1BTO         equ	15740	;# 
  4931   003DD0                     U2RXB           equ	15824	;# 
  4932   003DD0                     U2RXBL          equ	15824	;# 
  4933   003DD2                     U2TXB           equ	15826	;# 
  4934   003DD2                     U2TXBL          equ	15826	;# 
  4935   003DD4                     U2P1            equ	15828	;# 
  4936   003DD4                     U2P1L           equ	15828	;# 
  4937   003DD6                     U2P2            equ	15830	;# 
  4938   003DD6                     U2P2L           equ	15830	;# 
  4939   003DD8                     U2P3            equ	15832	;# 
  4940   003DD8                     U2P3L           equ	15832	;# 
  4941   003DDA                     U2CON0          equ	15834	;# 
  4942   003DDB                     U2CON1          equ	15835	;# 
  4943   003DDC                     U2CON2          equ	15836	;# 
  4944   003DDD                     U2BRG           equ	15837	;# 
  4945   003DDD                     U2BRGL          equ	15837	;# 
  4946   003DDE                     U2BRGH          equ	15838	;# 
  4947   003DDF                     U2FIFO          equ	15839	;# 
  4948   003DE0                     U2UIR           equ	15840	;# 
  4949   003DE1                     U2ERRIR         equ	15841	;# 
  4950   003DE2                     U2ERRIE         equ	15842	;# 
  4951   003DE8                     U1RXB           equ	15848	;# 
  4952   003DE8                     U1RXBL          equ	15848	;# 
  4953   003DE9                     U1RXCHK         equ	15849	;# 
  4954   003DEA                     U1TXB           equ	15850	;# 
  4955   003DEA                     U1TXBL          equ	15850	;# 
  4956   003DEB                     U1TXCHK         equ	15851	;# 
  4957   003DEC                     U1P1            equ	15852	;# 
  4958   003DEC                     U1P1L           equ	15852	;# 
  4959   003DED                     U1P1H           equ	15853	;# 
  4960   003DEE                     U1P2            equ	15854	;# 
  4961   003DEE                     U1P2L           equ	15854	;# 
  4962   003DEF                     U1P2H           equ	15855	;# 
  4963   003DF0                     U1P3            equ	15856	;# 
  4964   003DF0                     U1P3L           equ	15856	;# 
  4965   003DF1                     U1P3H           equ	15857	;# 
  4966   003DF2                     U1CON0          equ	15858	;# 
  4967   003DF3                     U1CON1          equ	15859	;# 
  4968   003DF4                     U1CON2          equ	15860	;# 
  4969   003DF5                     U1BRG           equ	15861	;# 
  4970   003DF5                     U1BRGL          equ	15861	;# 
  4971   003DF6                     U1BRGH          equ	15862	;# 
  4972   003DF7                     U1FIFO          equ	15863	;# 
  4973   003DF8                     U1UIR           equ	15864	;# 
  4974   003DF9                     U1ERRIR         equ	15865	;# 
  4975   003DFA                     U1ERRIE         equ	15866	;# 
  4976   003E9C                     DAC1CON1        equ	16028	;# 
  4977   003E9E                     DAC1CON0        equ	16030	;# 
  4978   003EB8                     CM2CON0         equ	16056	;# 
  4979   003EB9                     CM2CON1         equ	16057	;# 
  4980   003EBA                     CM2NCH          equ	16058	;# 
  4981   003EBB                     CM2PCH          equ	16059	;# 
  4982   003EBC                     CM1CON0         equ	16060	;# 
  4983   003EBD                     CM1CON1         equ	16061	;# 
  4984   003EBE                     CM1NCH          equ	16062	;# 
  4985   003EBF                     CM1PCH          equ	16063	;# 
  4986   003EC0                     CMOUT           equ	16064	;# 
  4987   003EC1                     FVRCON          equ	16065	;# 
  4988   003EC3                     ZCDCON          equ	16067	;# 
  4989   003EC9                     HLVDCON0        equ	16073	;# 
  4990   003ECA                     HLVDCON1        equ	16074	;# 
  4991   003ED7                     ADCP            equ	16087	;# 
  4992   003EDE                     ADLTH           equ	16094	;# 
  4993   003EDE                     ADLTHL          equ	16094	;# 
  4994   003EDF                     ADLTHH          equ	16095	;# 
  4995   003EE0                     ADUTH           equ	16096	;# 
  4996   003EE0                     ADUTHL          equ	16096	;# 
  4997   003EE1                     ADUTHH          equ	16097	;# 
  4998   003EE2                     ADERR           equ	16098	;# 
  4999   003EE2                     ADERRL          equ	16098	;# 
  5000   003EE3                     ADERRH          equ	16099	;# 
  5001   003EE4                     ADSTPT          equ	16100	;# 
  5002   003EE4                     ADSTPTL         equ	16100	;# 
  5003   003EE5                     ADSTPTH         equ	16101	;# 
  5004   003EE6                     ADFLTR          equ	16102	;# 
  5005   003EE6                     ADFLTRL         equ	16102	;# 
  5006   003EE7                     ADFLTRH         equ	16103	;# 
  5007   003EE8                     ADACC           equ	16104	;# 
  5008   003EE8                     ADACCL          equ	16104	;# 
  5009   003EE9                     ADACCH          equ	16105	;# 
  5010   003EEA                     ADACCU          equ	16106	;# 
  5011   003EEB                     ADCNT           equ	16107	;# 
  5012   003EEC                     ADRPT           equ	16108	;# 
  5013   003EED                     ADPREV          equ	16109	;# 
  5014   003EED                     ADPREVL         equ	16109	;# 
  5015   003EEE                     ADPREVH         equ	16110	;# 
  5016   003EEF                     ADRES           equ	16111	;# 
  5017   003EEF                     ADRESL          equ	16111	;# 
  5018   003EF0                     ADRESH          equ	16112	;# 
  5019   003EF1                     ADPCH           equ	16113	;# 
  5020   003EF3                     ADACQ           equ	16115	;# 
  5021   003EF3                     ADACQL          equ	16115	;# 
  5022   003EF4                     ADACQH          equ	16116	;# 
  5023   003EF5                     ADCAP           equ	16117	;# 
  5024   003EF6                     ADPRE           equ	16118	;# 
  5025   003EF6                     ADPREL          equ	16118	;# 
  5026   003EF7                     ADPREH          equ	16119	;# 
  5027   003EF8                     ADCON0          equ	16120	;# 
  5028   003EF9                     ADCON1          equ	16121	;# 
  5029   003EFA                     ADCON2          equ	16122	;# 
  5030   003EFB                     ADCON3          equ	16123	;# 
  5031   003EFC                     ADSTAT          equ	16124	;# 
  5032   003EFD                     ADREF           equ	16125	;# 
  5033   003EFE                     ADACT           equ	16126	;# 
  5034   003EFF                     ADCLK           equ	16127	;# 
  5035   003F12                     SMT1TMR         equ	16146	;# 
  5036   003F12                     SMT1TMRL        equ	16146	;# 
  5037   003F13                     SMT1TMRH        equ	16147	;# 
  5038   003F14                     SMT1TMRU        equ	16148	;# 
  5039   003F15                     SMT1CPR         equ	16149	;# 
  5040   003F15                     SMT1CPRL        equ	16149	;# 
  5041   003F16                     SMT1CPRH        equ	16150	;# 
  5042   003F17                     SMT1CPRU        equ	16151	;# 
  5043   003F18                     SMT1CPW         equ	16152	;# 
  5044   003F18                     SMT1CPWL        equ	16152	;# 
  5045   003F19                     SMT1CPWH        equ	16153	;# 
  5046   003F1A                     SMT1CPWU        equ	16154	;# 
  5047   003F1B                     SMT1PR          equ	16155	;# 
  5048   003F1B                     SMT1PRL         equ	16155	;# 
  5049   003F1C                     SMT1PRH         equ	16156	;# 
  5050   003F1D                     SMT1PRU         equ	16157	;# 
  5051   003F1E                     SMT1CON0        equ	16158	;# 
  5052   003F1F                     SMT1CON1        equ	16159	;# 
  5053   003F20                     SMT1STAT        equ	16160	;# 
  5054   003F21                     SMT1CLK         equ	16161	;# 
  5055   003F22                     SMT1SIG         equ	16162	;# 
  5056   003F23                     SMT1WIN         equ	16163	;# 
  5057   003F38                     NCO1ACC         equ	16184	;# 
  5058   003F38                     NCO1ACCL        equ	16184	;# 
  5059   003F39                     NCO1ACCH        equ	16185	;# 
  5060   003F3A                     NCO1ACCU        equ	16186	;# 
  5061   003F3B                     NCO1INC         equ	16187	;# 
  5062   003F3B                     NCO1INCL        equ	16187	;# 
  5063   003F3C                     NCO1INCH        equ	16188	;# 
  5064   003F3D                     NCO1INCU        equ	16189	;# 
  5065   003F3E                     NCO1CON         equ	16190	;# 
  5066   003F3F                     NCO1CLK         equ	16191	;# 
  5067   003F40                     CWG3CLK         equ	16192	;# 
  5068   003F40                     CWG3CLKCON      equ	16192	;# 
  5069   003F41                     CWG3ISM         equ	16193	;# 
  5070   003F41                     CWG3DAT         equ	16193	;# 
  5071   003F42                     CWG3DBR         equ	16194	;# 
  5072   003F43                     CWG3DBF         equ	16195	;# 
  5073   003F44                     CWG3CON0        equ	16196	;# 
  5074   003F45                     CWG3CON1        equ	16197	;# 
  5075   003F46                     CWG3AS0         equ	16198	;# 
  5076   003F47                     CWG3AS1         equ	16199	;# 
  5077   003F48                     CWG3STR         equ	16200	;# 
  5078   003F49                     CWG2CLK         equ	16201	;# 
  5079   003F49                     CWG2CLKCON      equ	16201	;# 
  5080   003F4A                     CWG2ISM         equ	16202	;# 
  5081   003F4A                     CWG2DAT         equ	16202	;# 
  5082   003F4B                     CWG2DBR         equ	16203	;# 
  5083   003F4C                     CWG2DBF         equ	16204	;# 
  5084   003F4D                     CWG2CON0        equ	16205	;# 
  5085   003F4E                     CWG2CON1        equ	16206	;# 
  5086   003F4F                     CWG2AS0         equ	16207	;# 
  5087   003F50                     CWG2AS1         equ	16208	;# 
  5088   003F51                     CWG2STR         equ	16209	;# 
  5089   003F52                     CWG1CLK         equ	16210	;# 
  5090   003F52                     CWG1CLKCON      equ	16210	;# 
  5091   003F53                     CWG1ISM         equ	16211	;# 
  5092   003F53                     CWG1DAT         equ	16211	;# 
  5093   003F54                     CWG1DBR         equ	16212	;# 
  5094   003F55                     CWG1DBF         equ	16213	;# 
  5095   003F56                     CWG1CON0        equ	16214	;# 
  5096   003F57                     CWG1CON1        equ	16215	;# 
  5097   003F58                     CWG1AS0         equ	16216	;# 
  5098   003F59                     CWG1AS1         equ	16217	;# 
  5099   003F5A                     CWG1STR         equ	16218	;# 
  5100   003F5E                     CCPTMRS0        equ	16222	;# 
  5101   003F5F                     CCPTMRS1        equ	16223	;# 
  5102   003F60                     PWM8DC          equ	16224	;# 
  5103   003F60                     PWM8DCL         equ	16224	;# 
  5104   003F61                     PWM8DCH         equ	16225	;# 
  5105   003F62                     PWM8CON         equ	16226	;# 
  5106   003F64                     PWM7DC          equ	16228	;# 
  5107   003F64                     PWM7DCL         equ	16228	;# 
  5108   003F65                     PWM7DCH         equ	16229	;# 
  5109   003F66                     PWM7CON         equ	16230	;# 
  5110   003F68                     PWM6DC          equ	16232	;# 
  5111   003F68                     PWM6DCL         equ	16232	;# 
  5112   003F69                     PWM6DCH         equ	16233	;# 
  5113   003F6A                     PWM6CON         equ	16234	;# 
  5114   003F6C                     PWM5DC          equ	16236	;# 
  5115   003F6C                     PWM5DCL         equ	16236	;# 
  5116   003F6D                     PWM5DCH         equ	16237	;# 
  5117   003F6E                     PWM5CON         equ	16238	;# 
  5118   003F70                     CCPR4           equ	16240	;# 
  5119   003F70                     CCPR4L          equ	16240	;# 
  5120   003F71                     CCPR4H          equ	16241	;# 
  5121   003F72                     CCP4CON         equ	16242	;# 
  5122   003F73                     CCP4CAP         equ	16243	;# 
  5123   003F74                     CCPR3           equ	16244	;# 
  5124   003F74                     CCPR3L          equ	16244	;# 
  5125   003F75                     CCPR3H          equ	16245	;# 
  5126   003F76                     CCP3CON         equ	16246	;# 
  5127   003F77                     CCP3CAP         equ	16247	;# 
  5128   003F78                     CCPR2           equ	16248	;# 
  5129   003F78                     CCPR2L          equ	16248	;# 
  5130   003F79                     CCPR2H          equ	16249	;# 
  5131   003F7A                     CCP2CON         equ	16250	;# 
  5132   003F7B                     CCP2CAP         equ	16251	;# 
  5133   003F7C                     CCPR1           equ	16252	;# 
  5134   003F7C                     CCPR1L          equ	16252	;# 
  5135   003F7D                     CCPR1H          equ	16253	;# 
  5136   003F7E                     CCP1CON         equ	16254	;# 
  5137   003F7F                     CCP1CAP         equ	16255	;# 
  5138   003F92                     T6TMR           equ	16274	;# 
  5139   003F92                     TMR6            equ	16274	;# 
  5140   003F93                     T6PR            equ	16275	;# 
  5141   003F93                     PR6             equ	16275	;# 
  5142   003F94                     T6CON           equ	16276	;# 
  5143   003F95                     T6HLT           equ	16277	;# 
  5144   003F96                     T6CLKCON        equ	16278	;# 
  5145   003F96                     T6CLK           equ	16278	;# 
  5146   003F97                     T6RST           equ	16279	;# 
  5147   003F98                     TMR5            equ	16280	;# 
  5148   003F98                     TMR5L           equ	16280	;# 
  5149   003F99                     TMR5H           equ	16281	;# 
  5150   003F9A                     T5CON           equ	16282	;# 
  5151   003F9A                     TMR5CON         equ	16282	;# 
  5152   003F9B                     T5GCON          equ	16283	;# 
  5153   003F9B                     TMR5GCON        equ	16283	;# 
  5154   003F9C                     T5GATE          equ	16284	;# 
  5155   003F9C                     TMR5GATE        equ	16284	;# 
  5156   003F9D                     T5CLK           equ	16285	;# 
  5157   003F9D                     TMR5CLK         equ	16285	;# 
  5158   003F9D                     PR5             equ	16285	;# 
  5159   003F9E                     T4TMR           equ	16286	;# 
  5160   003F9E                     TMR4            equ	16286	;# 
  5161   003F9F                     T4PR            equ	16287	;# 
  5162   003F9F                     PR4             equ	16287	;# 
  5163   003FA0                     T4CON           equ	16288	;# 
  5164   003FA1                     T4HLT           equ	16289	;# 
  5165   003FA2                     T4CLKCON        equ	16290	;# 
  5166   003FA2                     T4CLK           equ	16290	;# 
  5167   003FA3                     T4RST           equ	16291	;# 
  5168   003FA4                     TMR3            equ	16292	;# 
  5169   003FA4                     TMR3L           equ	16292	;# 
  5170   003FA5                     TMR3H           equ	16293	;# 
  5171   003FA6                     T3CON           equ	16294	;# 
  5172   003FA6                     TMR3CON         equ	16294	;# 
  5173   003FA7                     T3GCON          equ	16295	;# 
  5174   003FA7                     TMR3GCON        equ	16295	;# 
  5175   003FA8                     T3GATE          equ	16296	;# 
  5176   003FA8                     TMR3GATE        equ	16296	;# 
  5177   003FA9                     T3CLK           equ	16297	;# 
  5178   003FA9                     TMR3CLK         equ	16297	;# 
  5179   003FA9                     PR3             equ	16297	;# 
  5180   003FAA                     T2TMR           equ	16298	;# 
  5181   003FAA                     TMR2            equ	16298	;# 
  5182   003FAB                     T2PR            equ	16299	;# 
  5183   003FAB                     PR2             equ	16299	;# 
  5184   003FAC                     T2CON           equ	16300	;# 
  5185   003FAD                     T2HLT           equ	16301	;# 
  5186   003FAE                     T2CLKCON        equ	16302	;# 
  5187   003FAE                     T2CLK           equ	16302	;# 
  5188   003FAF                     T2RST           equ	16303	;# 
  5189   003FB0                     TMR1            equ	16304	;# 
  5190   003FB0                     TMR1L           equ	16304	;# 
  5191   003FB1                     TMR1H           equ	16305	;# 
  5192   003FB2                     T1CON           equ	16306	;# 
  5193   003FB2                     TMR1CON         equ	16306	;# 
  5194   003FB3                     T1GCON          equ	16307	;# 
  5195   003FB3                     TMR1GCON        equ	16307	;# 
  5196   003FB4                     T1GATE          equ	16308	;# 
  5197   003FB4                     TMR1GATE        equ	16308	;# 
  5198   003FB5                     T1CLK           equ	16309	;# 
  5199   003FB5                     TMR1CLK         equ	16309	;# 
  5200   003FB5                     PR1             equ	16309	;# 
  5201   003FB6                     TMR0L           equ	16310	;# 
  5202   003FB6                     TMR0            equ	16310	;# 
  5203   003FB7                     TMR0H           equ	16311	;# 
  5204   003FB7                     PR0             equ	16311	;# 
  5205   003FB8                     T0CON0          equ	16312	;# 
  5206   003FB9                     T0CON1          equ	16313	;# 
  5207   003FBA                     LATA            equ	16314	;# 
  5208   003FBB                     LATB            equ	16315	;# 
  5209   003FBC                     LATC            equ	16316	;# 
  5210   003FC2                     TRISA           equ	16322	;# 
  5211   003FC3                     TRISB           equ	16323	;# 
  5212   003FC4                     TRISC           equ	16324	;# 
  5213   003FCA                     PORTA           equ	16330	;# 
  5214   003FCB                     PORTB           equ	16331	;# 
  5215   003FCC                     PORTC           equ	16332	;# 
  5216   003FCE                     PORTE           equ	16334	;# 
  5217   003FD2                     INTCON0         equ	16338	;# 
  5218   003FD3                     INTCON1         equ	16339	;# 
  5219   003FD4                     IVTLOCK         equ	16340	;# 
  5220   003FD5                     IVTBASE         equ	16341	;# 
  5221   003FD5                     IVTBASEL        equ	16341	;# 
  5222   003FD6                     IVTBASEH        equ	16342	;# 
  5223   003FD7                     IVTBASEU        equ	16343	;# 
  5224   003FD8                     STATUS          equ	16344	;# 
  5225   003FD9                     FSR2            equ	16345	;# 
  5226   003FD9                     FSR2L           equ	16345	;# 
  5227   003FDA                     FSR2H           equ	16346	;# 
  5228   003FDB                     PLUSW2          equ	16347	;# 
  5229   003FDC                     PREINC2         equ	16348	;# 
  5230   003FDD                     POSTDEC2        equ	16349	;# 
  5231   003FDE                     POSTINC2        equ	16350	;# 
  5232   003FDF                     INDF2           equ	16351	;# 
  5233   003FE0                     BSR             equ	16352	;# 
  5234   003FE1                     FSR1            equ	16353	;# 
  5235   003FE1                     FSR1L           equ	16353	;# 
  5236   003FE2                     FSR1H           equ	16354	;# 
  5237   003FE3                     PLUSW1          equ	16355	;# 
  5238   003FE4                     PREINC1         equ	16356	;# 
  5239   003FE5                     POSTDEC1        equ	16357	;# 
  5240   003FE6                     POSTINC1        equ	16358	;# 
  5241   003FE7                     INDF1           equ	16359	;# 
  5242   003FE8                     WREG            equ	16360	;# 
  5243   003FE9                     FSR0            equ	16361	;# 
  5244   003FE9                     FSR0L           equ	16361	;# 
  5245   003FEA                     FSR0H           equ	16362	;# 
  5246   003FEB                     PLUSW0          equ	16363	;# 
  5247   003FEC                     PREINC0         equ	16364	;# 
  5248   003FED                     POSTDEC0        equ	16365	;# 
  5249   003FEE                     POSTINC0        equ	16366	;# 
  5250   003FEF                     INDF0           equ	16367	;# 
  5251   003FF0                     PCON0           equ	16368	;# 
  5252   003FF1                     PCON1           equ	16369	;# 
  5253   003FF3                     PROD            equ	16371	;# 
  5254   003FF3                     PRODL           equ	16371	;# 
  5255   003FF4                     PRODH           equ	16372	;# 
  5256   003FF5                     TABLAT          equ	16373	;# 
  5257   003FF6                     TBLPTR          equ	16374	;# 
  5258   003FF6                     TBLPTRL         equ	16374	;# 
  5259   003FF7                     TBLPTRH         equ	16375	;# 
  5260   003FF8                     TBLPTRU         equ	16376	;# 
  5261   003FF9                     PCLAT           equ	16377	;# 
  5262   003FF9                     PCL             equ	16377	;# 
  5263   003FFA                     PCLATH          equ	16378	;# 
  5264   003FFB                     PCLATU          equ	16379	;# 
  5265   003FFC                     STKPTR          equ	16380	;# 
  5266   003FFD                     TOS             equ	16381	;# 
  5267   003FFD                     TOSL            equ	16381	;# 
  5268   003FFE                     TOSH            equ	16382	;# 
  5269   003FFF                     TOSU            equ	16383	;# 
  5270   003880                     STATUS_CSHAD    equ	14464	;# 
  5271   003881                     WREG_CSHAD      equ	14465	;# 
  5272   003882                     BSR_CSHAD       equ	14466	;# 
  5273   003883                     SHADCON         equ	14467	;# 
  5274   003884                     STATUS_SHAD     equ	14468	;# 
  5275   003885                     WREG_SHAD       equ	14469	;# 
  5276   003886                     BSR_SHAD        equ	14470	;# 
  5277   003887                     PCLATH_SHAD     equ	14471	;# 
  5278   003888                     PCLATU_SHAD     equ	14472	;# 
  5279   003889                     FSR0SH          equ	14473	;# 
  5280   003889                     FSR0L_SHAD      equ	14473	;# 
  5281   00388A                     FSR0H_SHAD      equ	14474	;# 
  5282   00388B                     FSR1SH          equ	14475	;# 
  5283   00388B                     FSR1L_SHAD      equ	14475	;# 
  5284   00388C                     FSR1H_SHAD      equ	14476	;# 
  5285   00388D                     FSR2SH          equ	14477	;# 
  5286   00388D                     FSR2L_SHAD      equ	14477	;# 
  5287   00388E                     FSR2H_SHAD      equ	14478	;# 
  5288   00388F                     PRODSH          equ	14479	;# 
  5289   00388F                     PRODL_SHAD      equ	14479	;# 
  5290   003890                     PRODH_SHAD      equ	14480	;# 
  5291   00389D                     IVTADL          equ	14493	;# 
  5292   00389E                     IVTADH          equ	14494	;# 
  5293   00389F                     IVTADU          equ	14495	;# 
  5294   00395B                     WDTCON0         equ	14683	;# 
  5295   00395C                     WDTCON1         equ	14684	;# 
  5296   00395D                     WDTPSL          equ	14685	;# 
  5297   00395E                     WDTPSH          equ	14686	;# 
  5298   00395F                     WDTTMR          equ	14687	;# 
  5299   003960                     CRCDATA         equ	14688	;# 
  5300   003960                     CRCDATL         equ	14688	;# 
  5301   003961                     CRCDATH         equ	14689	;# 
  5302   003962                     CRCACC          equ	14690	;# 
  5303   003962                     CRCACCL         equ	14690	;# 
  5304   003963                     CRCACCH         equ	14691	;# 
  5305   003964                     CRCSHFT         equ	14692	;# 
  5306   003964                     CRCSHIFTL       equ	14692	;# 
  5307   003965                     CRCSHIFTH       equ	14693	;# 
  5308   003966                     CRCXOR          equ	14694	;# 
  5309   003966                     CRCXORL         equ	14694	;# 
  5310   003967                     CRCXORH         equ	14695	;# 
  5311   003968                     CRCCON0         equ	14696	;# 
  5312   003969                     CRCCON1         equ	14697	;# 
  5313   003976                     SCANLADR        equ	14710	;# 
  5314   003976                     SCANLADRL       equ	14710	;# 
  5315   003977                     SCANLADRH       equ	14711	;# 
  5316   003978                     SCANLADRU       equ	14712	;# 
  5317   003979                     SCANHADR        equ	14713	;# 
  5318   003979                     SCANHADRL       equ	14713	;# 
  5319   00397A                     SCANHADRH       equ	14714	;# 
  5320   00397B                     SCANHADRU       equ	14715	;# 
  5321   00397C                     SCANCON0        equ	14716	;# 
  5322   00397D                     SCANTRIG        equ	14717	;# 
  5323   003980                     IPR0            equ	14720	;# 
  5324   003981                     IPR1            equ	14721	;# 
  5325   003982                     IPR2            equ	14722	;# 
  5326   003983                     IPR3            equ	14723	;# 
  5327   003984                     IPR4            equ	14724	;# 
  5328   003985                     IPR5            equ	14725	;# 
  5329   003986                     IPR6            equ	14726	;# 
  5330   003987                     IPR7            equ	14727	;# 
  5331   003988                     IPR8            equ	14728	;# 
  5332   003989                     IPR9            equ	14729	;# 
  5333   00398A                     IPR10           equ	14730	;# 
  5334   003990                     PIE0            equ	14736	;# 
  5335   003991                     PIE1            equ	14737	;# 
  5336   003992                     PIE2            equ	14738	;# 
  5337   003993                     PIE3            equ	14739	;# 
  5338   003994                     PIE4            equ	14740	;# 
  5339   003995                     PIE5            equ	14741	;# 
  5340   003996                     PIE6            equ	14742	;# 
  5341   003997                     PIE7            equ	14743	;# 
  5342   003998                     PIE8            equ	14744	;# 
  5343   003999                     PIE9            equ	14745	;# 
  5344   00399A                     PIE10           equ	14746	;# 
  5345   0039A0                     PIR0            equ	14752	;# 
  5346   0039A1                     PIR1            equ	14753	;# 
  5347   0039A2                     PIR2            equ	14754	;# 
  5348   0039A3                     PIR3            equ	14755	;# 
  5349   0039A4                     PIR4            equ	14756	;# 
  5350   0039A5                     PIR5            equ	14757	;# 
  5351   0039A6                     PIR6            equ	14758	;# 
  5352   0039A7                     PIR7            equ	14759	;# 
  5353   0039A8                     PIR8            equ	14760	;# 
  5354   0039A9                     PIR9            equ	14761	;# 
  5355   0039AA                     PIR10           equ	14762	;# 
  5356   0039C0                     PMD0            equ	14784	;# 
  5357   0039C1                     PMD1            equ	14785	;# 
  5358   0039C2                     PMD2            equ	14786	;# 
  5359   0039C3                     PMD3            equ	14787	;# 
  5360   0039C4                     PMD4            equ	14788	;# 
  5361   0039C5                     PMD5            equ	14789	;# 
  5362   0039C6                     PMD6            equ	14790	;# 
  5363   0039C7                     PMD7            equ	14791	;# 
  5364   0039D0                     BORCON          equ	14800	;# 
  5365   0039D1                     VREGCON         equ	14801	;# 
  5366   0039D8                     CPUDOZE         equ	14808	;# 
  5367   0039D9                     OSCCON1         equ	14809	;# 
  5368   0039DA                     OSCCON2         equ	14810	;# 
  5369   0039DB                     OSCCON3         equ	14811	;# 
  5370   0039DC                     OSCSTAT         equ	14812	;# 
  5371   0039DC                     OSCSTAT1        equ	14812	;# 
  5372   0039DD                     OSCEN           equ	14813	;# 
  5373   0039DE                     OSCTUNE         equ	14814	;# 
  5374   0039DF                     OSCFRQ          equ	14815	;# 
  5375   0039E0                     NVMADRL         equ	14816	;# 
  5376   0039E1                     NVMADRH         equ	14817	;# 
  5377   0039E3                     NVMDAT          equ	14819	;# 
  5378   0039E5                     NVMCON1         equ	14821	;# 
  5379   0039E6                     NVMCON2         equ	14822	;# 
  5380   0039EF                     PRLOCK          equ	14831	;# 
  5381   0039F1                     ISRPR           equ	14833	;# 
  5382   0039F2                     MAINPR          equ	14834	;# 
  5383   0039F3                     DMA1PR          equ	14835	;# 
  5384   0039F4                     DMA2PR          equ	14836	;# 
  5385   0039F7                     SCANPR          equ	14839	;# 
  5386   003A00                     RA0PPS          equ	14848	;# 
  5387   003A01                     RA1PPS          equ	14849	;# 
  5388   003A02                     RA2PPS          equ	14850	;# 
  5389   003A03                     RA3PPS          equ	14851	;# 
  5390   003A04                     RA4PPS          equ	14852	;# 
  5391   003A05                     RA5PPS          equ	14853	;# 
  5392   003A06                     RA6PPS          equ	14854	;# 
  5393   003A07                     RA7PPS          equ	14855	;# 
  5394   003A08                     RB0PPS          equ	14856	;# 
  5395   003A09                     RB1PPS          equ	14857	;# 
  5396   003A0A                     RB2PPS          equ	14858	;# 
  5397   003A0B                     RB3PPS          equ	14859	;# 
  5398   003A0C                     RB4PPS          equ	14860	;# 
  5399   003A0D                     RB5PPS          equ	14861	;# 
  5400   003A0E                     RB6PPS          equ	14862	;# 
  5401   003A0F                     RB7PPS          equ	14863	;# 
  5402   003A10                     RC0PPS          equ	14864	;# 
  5403   003A11                     RC1PPS          equ	14865	;# 
  5404   003A12                     RC2PPS          equ	14866	;# 
  5405   003A13                     RC3PPS          equ	14867	;# 
  5406   003A14                     RC4PPS          equ	14868	;# 
  5407   003A15                     RC5PPS          equ	14869	;# 
  5408   003A16                     RC6PPS          equ	14870	;# 
  5409   003A17                     RC7PPS          equ	14871	;# 
  5410   003A40                     ANSELA          equ	14912	;# 
  5411   003A41                     WPUA            equ	14913	;# 
  5412   003A42                     ODCONA          equ	14914	;# 
  5413   003A43                     SLRCONA         equ	14915	;# 
  5414   003A44                     INLVLA          equ	14916	;# 
  5415   003A45                     IOCAP           equ	14917	;# 
  5416   003A46                     IOCAN           equ	14918	;# 
  5417   003A47                     IOCAF           equ	14919	;# 
  5418   003A48                     CCDPA           equ	14920	;# 
  5419   003A49                     CCDNA           equ	14921	;# 
  5420   003A50                     ANSELB          equ	14928	;# 
  5421   003A51                     WPUB            equ	14929	;# 
  5422   003A52                     ODCONB          equ	14930	;# 
  5423   003A53                     SLRCONB         equ	14931	;# 
  5424   003A54                     INLVLB          equ	14932	;# 
  5425   003A55                     IOCBP           equ	14933	;# 
  5426   003A56                     IOCBN           equ	14934	;# 
  5427   003A57                     IOCBF           equ	14935	;# 
  5428   003A58                     CCDPB           equ	14936	;# 
  5429   003A59                     CCDNB           equ	14937	;# 
  5430   003A5A                     RB1I2C          equ	14938	;# 
  5431   003A5B                     RB2I2C          equ	14939	;# 
  5432   003A60                     ANSELC          equ	14944	;# 
  5433   003A61                     WPUC            equ	14945	;# 
  5434   003A62                     ODCONC          equ	14946	;# 
  5435   003A63                     SLRCONC         equ	14947	;# 
  5436   003A64                     INLVLC          equ	14948	;# 
  5437   003A65                     IOCCP           equ	14949	;# 
  5438   003A66                     IOCCN           equ	14950	;# 
  5439   003A67                     IOCCF           equ	14951	;# 
  5440   003A68                     CCDPC           equ	14952	;# 
  5441   003A69                     CCDNC           equ	14953	;# 
  5442   003A6A                     RC3I2C          equ	14954	;# 
  5443   003A6B                     RC4I2C          equ	14955	;# 
  5444   003A81                     WPUE            equ	14977	;# 
  5445   003A84                     INLVLE          equ	14980	;# 
  5446   003A85                     IOCEP           equ	14981	;# 
  5447   003A86                     IOCEN           equ	14982	;# 
  5448   003A87                     IOCEF           equ	14983	;# 
  5449   003ABE                     CCDCON          equ	15038	;# 
  5450   003ABF                     PPSLOCK         equ	15039	;# 
  5451   003AC0                     INT0PPS         equ	15040	;# 
  5452   003AC1                     INT1PPS         equ	15041	;# 
  5453   003AC2                     INT2PPS         equ	15042	;# 
  5454   003AC3                     T0CKIPPS        equ	15043	;# 
  5455   003AC4                     T1CKIPPS        equ	15044	;# 
  5456   003AC5                     T1GPPS          equ	15045	;# 
  5457   003AC6                     T3CKIPPS        equ	15046	;# 
  5458   003AC7                     T3GPPS          equ	15047	;# 
  5459   003AC8                     T5CKIPPS        equ	15048	;# 
  5460   003AC9                     T5GPPS          equ	15049	;# 
  5461   003ACA                     T2INPPS         equ	15050	;# 
  5462   003ACB                     T4INPPS         equ	15051	;# 
  5463   003ACC                     T6INPPS         equ	15052	;# 
  5464   003ACD                     CCP1PPS         equ	15053	;# 
  5465   003ACE                     CCP2PPS         equ	15054	;# 
  5466   003ACF                     CCP3PPS         equ	15055	;# 
  5467   003AD0                     CCP4PPS         equ	15056	;# 
  5468   003AD1                     SMT1WINPPS      equ	15057	;# 
  5469   003AD2                     SMT1SIGPPS      equ	15058	;# 
  5470   003AD3                     CWG1INPPS       equ	15059	;# 
  5471   003AD4                     CWG2INPPS       equ	15060	;# 
  5472   003AD5                     CWG3INPPS       equ	15061	;# 
  5473   003AD6                     MD1CARLPPS      equ	15062	;# 
  5474   003AD7                     MD1CARHPPS      equ	15063	;# 
  5475   003AD8                     MD1SRCPPS       equ	15064	;# 
  5476   003AD9                     CLCIN0PPS       equ	15065	;# 
  5477   003ADA                     CLCIN1PPS       equ	15066	;# 
  5478   003ADB                     CLCIN2PPS       equ	15067	;# 
  5479   003ADC                     CLCIN3PPS       equ	15068	;# 
  5480   003ADD                     ADACTPPS        equ	15069	;# 
  5481   003ADE                     SPI1SCKPPS      equ	15070	;# 
  5482   003ADF                     SPI1SDIPPS      equ	15071	;# 
  5483   003AE0                     SPI1SSPPS       equ	15072	;# 
  5484   003AE1                     I2C1SCLPPS      equ	15073	;# 
  5485   003AE2                     I2C1SDAPPS      equ	15074	;# 
  5486   003AE3                     I2C2SCLPPS      equ	15075	;# 
  5487   003AE4                     I2C2SDAPPS      equ	15076	;# 
  5488   003AE5                     U1RXPPS         equ	15077	;# 
  5489   003AE6                     U1CTSPPS        equ	15078	;# 
  5490   003AE8                     U2RXPPS         equ	15080	;# 
  5491   003AE9                     U2CTSPPS        equ	15081	;# 
  5492   003BC9                     DMA2BUF         equ	15305	;# 
  5493   003BCA                     DMA2DCNT        equ	15306	;# 
  5494   003BCA                     DMA2DCNTL       equ	15306	;# 
  5495   003BCB                     DMA2DCNTH       equ	15307	;# 
  5496   003BCC                     DMA2DPTR        equ	15308	;# 
  5497   003BCC                     DMA2DPTRL       equ	15308	;# 
  5498   003BCD                     DMA2DPTRH       equ	15309	;# 
  5499   003BCE                     DMA2DSZ         equ	15310	;# 
  5500   003BCE                     DMA2DSZL        equ	15310	;# 
  5501   003BCF                     DMA2DSZH        equ	15311	;# 
  5502   003BD0                     DMA2DSA         equ	15312	;# 
  5503   003BD0                     DMA2DSAL        equ	15312	;# 
  5504   003BD1                     DMA2DSAH        equ	15313	;# 
  5505   003BD2                     DMA2SCNT        equ	15314	;# 
  5506   003BD2                     DMA2SCNTL       equ	15314	;# 
  5507   003BD3                     DMA2SCNTH       equ	15315	;# 
  5508   003BD4                     DMA2SPTR        equ	15316	;# 
  5509   003BD4                     DMA2SPTRL       equ	15316	;# 
  5510   003BD5                     DMA2SPTRH       equ	15317	;# 
  5511   003BD6                     DMA2SPTRU       equ	15318	;# 
  5512   003BD7                     DMA2SSZ         equ	15319	;# 
  5513   003BD7                     DMA2SSZL        equ	15319	;# 
  5514   003BD8                     DMA2SSZH        equ	15320	;# 
  5515   003BD9                     DMA2SSA         equ	15321	;# 
  5516   003BD9                     DMA2SSAL        equ	15321	;# 
  5517   003BDA                     DMA2SSAH        equ	15322	;# 
  5518   003BDB                     DMA2SSAU        equ	15323	;# 
  5519   003BDC                     DMA2CON0        equ	15324	;# 
  5520   003BDD                     DMA2CON1        equ	15325	;# 
  5521   003BDE                     DMA2AIRQ        equ	15326	;# 
  5522   003BDF                     DMA2SIRQ        equ	15327	;# 
  5523   003BE9                     DMA1BUF         equ	15337	;# 
  5524   003BEA                     DMA1DCNT        equ	15338	;# 
  5525   003BEA                     DMA1DCNTL       equ	15338	;# 
  5526   003BEB                     DMA1DCNTH       equ	15339	;# 
  5527   003BEC                     DMA1DPTR        equ	15340	;# 
  5528   003BEC                     DMA1DPTRL       equ	15340	;# 
  5529   003BED                     DMA1DPTRH       equ	15341	;# 
  5530   003BEE                     DMA1DSZ         equ	15342	;# 
  5531   003BEE                     DMA1DSZL        equ	15342	;# 
  5532   003BEF                     DMA1DSZH        equ	15343	;# 
  5533   003BF0                     DMA1DSA         equ	15344	;# 
  5534   003BF0                     DMA1DSAL        equ	15344	;# 
  5535   003BF1                     DMA1DSAH        equ	15345	;# 
  5536   003BF2                     DMA1SCNT        equ	15346	;# 
  5537   003BF2                     DMA1SCNTL       equ	15346	;# 
  5538   003BF3                     DMA1SCNTH       equ	15347	;# 
  5539   003BF4                     DMA1SPTR        equ	15348	;# 
  5540   003BF4                     DMA1SPTRL       equ	15348	;# 
  5541   003BF5                     DMA1SPTRH       equ	15349	;# 
  5542   003BF6                     DMA1SPTRU       equ	15350	;# 
  5543   003BF7                     DMA1SSZ         equ	15351	;# 
  5544   003BF7                     DMA1SSZL        equ	15351	;# 
  5545   003BF8                     DMA1SSZH        equ	15352	;# 
  5546   003BF9                     DMA1SSA         equ	15353	;# 
  5547   003BF9                     DMA1SSAL        equ	15353	;# 
  5548   003BFA                     DMA1SSAH        equ	15354	;# 
  5549   003BFB                     DMA1SSAU        equ	15355	;# 
  5550   003BFC                     DMA1CON0        equ	15356	;# 
  5551   003BFD                     DMA1CON1        equ	15357	;# 
  5552   003BFE                     DMA1AIRQ        equ	15358	;# 
  5553   003BFF                     DMA1SIRQ        equ	15359	;# 
  5554   003C56                     CLC4CON         equ	15446	;# 
  5555   003C57                     CLC4POL         equ	15447	;# 
  5556   003C58                     CLC4SEL0        equ	15448	;# 
  5557   003C59                     CLC4SEL1        equ	15449	;# 
  5558   003C5A                     CLC4SEL2        equ	15450	;# 
  5559   003C5B                     CLC4SEL3        equ	15451	;# 
  5560   003C5C                     CLC4GLS0        equ	15452	;# 
  5561   003C5D                     CLC4GLS1        equ	15453	;# 
  5562   003C5E                     CLC4GLS2        equ	15454	;# 
  5563   003C5F                     CLC4GLS3        equ	15455	;# 
  5564   003C60                     CLC3CON         equ	15456	;# 
  5565   003C61                     CLC3POL         equ	15457	;# 
  5566   003C62                     CLC3SEL0        equ	15458	;# 
  5567   003C63                     CLC3SEL1        equ	15459	;# 
  5568   003C64                     CLC3SEL2        equ	15460	;# 
  5569   003C65                     CLC3SEL3        equ	15461	;# 
  5570   003C66                     CLC3GLS0        equ	15462	;# 
  5571   003C67                     CLC3GLS1        equ	15463	;# 
  5572   003C68                     CLC3GLS2        equ	15464	;# 
  5573   003C69                     CLC3GLS3        equ	15465	;# 
  5574   003C6A                     CLC2CON         equ	15466	;# 
  5575   003C6B                     CLC2POL         equ	15467	;# 
  5576   003C6C                     CLC2SEL0        equ	15468	;# 
  5577   003C6D                     CLC2SEL1        equ	15469	;# 
  5578   003C6E                     CLC2SEL2        equ	15470	;# 
  5579   003C6F                     CLC2SEL3        equ	15471	;# 
  5580   003C70                     CLC2GLS0        equ	15472	;# 
  5581   003C71                     CLC2GLS1        equ	15473	;# 
  5582   003C72                     CLC2GLS2        equ	15474	;# 
  5583   003C73                     CLC2GLS3        equ	15475	;# 
  5584   003C74                     CLC1CON         equ	15476	;# 
  5585   003C75                     CLC1POL         equ	15477	;# 
  5586   003C76                     CLC1SEL0        equ	15478	;# 
  5587   003C77                     CLC1SEL1        equ	15479	;# 
  5588   003C78                     CLC1SEL2        equ	15480	;# 
  5589   003C79                     CLC1SEL3        equ	15481	;# 
  5590   003C7A                     CLC1GLS0        equ	15482	;# 
  5591   003C7B                     CLC1GLS1        equ	15483	;# 
  5592   003C7C                     CLC1GLS2        equ	15484	;# 
  5593   003C7D                     CLC1GLS3        equ	15485	;# 
  5594   003C7E                     CLCDATA0        equ	15486	;# 
  5595   003CE5                     CLKRCON         equ	15589	;# 
  5596   003CE6                     CLKRCLK         equ	15590	;# 
  5597   003CFA                     MD1CON0         equ	15610	;# 
  5598   003CFB                     MD1CON1         equ	15611	;# 
  5599   003CFC                     MD1SRC          equ	15612	;# 
  5600   003CFD                     MD1CARL         equ	15613	;# 
  5601   003CFE                     MD1CARH         equ	15614	;# 
  5602   003D10                     SPI1RXB         equ	15632	;# 
  5603   003D11                     SPI1TXB         equ	15633	;# 
  5604   003D12                     SPI1TCNT        equ	15634	;# 
  5605   003D12                     SPI1TCNTL       equ	15634	;# 
  5606   003D13                     SPI1TCNTH       equ	15635	;# 
  5607   003D14                     SPI1CON0        equ	15636	;# 
  5608   003D15                     SPI1CON1        equ	15637	;# 
  5609   003D16                     SPI1CON2        equ	15638	;# 
  5610   003D17                     SPI1STATUS      equ	15639	;# 
  5611   003D18                     SPI1TWIDTH      equ	15640	;# 
  5612   003D19                     SPI1BAUD        equ	15641	;# 
  5613   003D1A                     SPI1INTF        equ	15642	;# 
  5614   003D1B                     SPI1INTE        equ	15643	;# 
  5615   003D1C                     SPI1CLK         equ	15644	;# 
  5616   003D54                     I2C2RXB         equ	15700	;# 
  5617   003D55                     I2C2TXB         equ	15701	;# 
  5618   003D56                     I2C2CNT         equ	15702	;# 
  5619   003D57                     I2C2ADB0        equ	15703	;# 
  5620   003D58                     I2C2ADB1        equ	15704	;# 
  5621   003D59                     I2C2ADR0        equ	15705	;# 
  5622   003D5A                     I2C2ADR1        equ	15706	;# 
  5623   003D5B                     I2C2ADR2        equ	15707	;# 
  5624   003D5C                     I2C2ADR3        equ	15708	;# 
  5625   003D5D                     I2C2CON0        equ	15709	;# 
  5626   003D5E                     I2C2CON1        equ	15710	;# 
  5627   003D5F                     I2C2CON2        equ	15711	;# 
  5628   003D60                     I2C2ERR         equ	15712	;# 
  5629   003D61                     I2C2STAT0       equ	15713	;# 
  5630   003D62                     I2C2STAT1       equ	15714	;# 
  5631   003D63                     I2C2PIR         equ	15715	;# 
  5632   003D64                     I2C2PIE         equ	15716	;# 
  5633   003D65                     I2C2CLK         equ	15717	;# 
  5634   003D66                     I2C2BTO         equ	15718	;# 
  5635   003D6A                     I2C1RXB         equ	15722	;# 
  5636   003D6B                     I2C1TXB         equ	15723	;# 
  5637   003D6C                     I2C1CNT         equ	15724	;# 
  5638   003D6D                     I2C1ADB0        equ	15725	;# 
  5639   003D6E                     I2C1ADB1        equ	15726	;# 
  5640   003D6F                     I2C1ADR0        equ	15727	;# 
  5641   003D70                     I2C1ADR1        equ	15728	;# 
  5642   003D71                     I2C1ADR2        equ	15729	;# 
  5643   003D72                     I2C1ADR3        equ	15730	;# 
  5644   003D73                     I2C1CON0        equ	15731	;# 
  5645   003D74                     I2C1CON1        equ	15732	;# 
  5646   003D75                     I2C1CON2        equ	15733	;# 
  5647   003D76                     I2C1ERR         equ	15734	;# 
  5648   003D77                     I2C1STAT0       equ	15735	;# 
  5649   003D78                     I2C1STAT1       equ	15736	;# 
  5650   003D79                     I2C1PIR         equ	15737	;# 
  5651   003D7A                     I2C1PIE         equ	15738	;# 
  5652   003D7B                     I2C1CLK         equ	15739	;# 
  5653   003D7C                     I2C1BTO         equ	15740	;# 
  5654   003DD0                     U2RXB           equ	15824	;# 
  5655   003DD0                     U2RXBL          equ	15824	;# 
  5656   003DD2                     U2TXB           equ	15826	;# 
  5657   003DD2                     U2TXBL          equ	15826	;# 
  5658   003DD4                     U2P1            equ	15828	;# 
  5659   003DD4                     U2P1L           equ	15828	;# 
  5660   003DD6                     U2P2            equ	15830	;# 
  5661   003DD6                     U2P2L           equ	15830	;# 
  5662   003DD8                     U2P3            equ	15832	;# 
  5663   003DD8                     U2P3L           equ	15832	;# 
  5664   003DDA                     U2CON0          equ	15834	;# 
  5665   003DDB                     U2CON1          equ	15835	;# 
  5666   003DDC                     U2CON2          equ	15836	;# 
  5667   003DDD                     U2BRG           equ	15837	;# 
  5668   003DDD                     U2BRGL          equ	15837	;# 
  5669   003DDE                     U2BRGH          equ	15838	;# 
  5670   003DDF                     U2FIFO          equ	15839	;# 
  5671   003DE0                     U2UIR           equ	15840	;# 
  5672   003DE1                     U2ERRIR         equ	15841	;# 
  5673   003DE2                     U2ERRIE         equ	15842	;# 
  5674   003DE8                     U1RXB           equ	15848	;# 
  5675   003DE8                     U1RXBL          equ	15848	;# 
  5676   003DE9                     U1RXCHK         equ	15849	;# 
  5677   003DEA                     U1TXB           equ	15850	;# 
  5678   003DEA                     U1TXBL          equ	15850	;# 
  5679   003DEB                     U1TXCHK         equ	15851	;# 
  5680   003DEC                     U1P1            equ	15852	;# 
  5681   003DEC                     U1P1L           equ	15852	;# 
  5682   003DED                     U1P1H           equ	15853	;# 
  5683   003DEE                     U1P2            equ	15854	;# 
  5684   003DEE                     U1P2L           equ	15854	;# 
  5685   003DEF                     U1P2H           equ	15855	;# 
  5686   003DF0                     U1P3            equ	15856	;# 
  5687   003DF0                     U1P3L           equ	15856	;# 
  5688   003DF1                     U1P3H           equ	15857	;# 
  5689   003DF2                     U1CON0          equ	15858	;# 
  5690   003DF3                     U1CON1          equ	15859	;# 
  5691   003DF4                     U1CON2          equ	15860	;# 
  5692   003DF5                     U1BRG           equ	15861	;# 
  5693   003DF5                     U1BRGL          equ	15861	;# 
  5694   003DF6                     U1BRGH          equ	15862	;# 
  5695   003DF7                     U1FIFO          equ	15863	;# 
  5696   003DF8                     U1UIR           equ	15864	;# 
  5697   003DF9                     U1ERRIR         equ	15865	;# 
  5698   003DFA                     U1ERRIE         equ	15866	;# 
  5699   003E9C                     DAC1CON1        equ	16028	;# 
  5700   003E9E                     DAC1CON0        equ	16030	;# 
  5701   003EB8                     CM2CON0         equ	16056	;# 
  5702   003EB9                     CM2CON1         equ	16057	;# 
  5703   003EBA                     CM2NCH          equ	16058	;# 
  5704   003EBB                     CM2PCH          equ	16059	;# 
  5705   003EBC                     CM1CON0         equ	16060	;# 
  5706   003EBD                     CM1CON1         equ	16061	;# 
  5707   003EBE                     CM1NCH          equ	16062	;# 
  5708   003EBF                     CM1PCH          equ	16063	;# 
  5709   003EC0                     CMOUT           equ	16064	;# 
  5710   003EC1                     FVRCON          equ	16065	;# 
  5711   003EC3                     ZCDCON          equ	16067	;# 
  5712   003EC9                     HLVDCON0        equ	16073	;# 
  5713   003ECA                     HLVDCON1        equ	16074	;# 
  5714   003ED7                     ADCP            equ	16087	;# 
  5715   003EDE                     ADLTH           equ	16094	;# 
  5716   003EDE                     ADLTHL          equ	16094	;# 
  5717   003EDF                     ADLTHH          equ	16095	;# 
  5718   003EE0                     ADUTH           equ	16096	;# 
  5719   003EE0                     ADUTHL          equ	16096	;# 
  5720   003EE1                     ADUTHH          equ	16097	;# 
  5721   003EE2                     ADERR           equ	16098	;# 
  5722   003EE2                     ADERRL          equ	16098	;# 
  5723   003EE3                     ADERRH          equ	16099	;# 
  5724   003EE4                     ADSTPT          equ	16100	;# 
  5725   003EE4                     ADSTPTL         equ	16100	;# 
  5726   003EE5                     ADSTPTH         equ	16101	;# 
  5727   003EE6                     ADFLTR          equ	16102	;# 
  5728   003EE6                     ADFLTRL         equ	16102	;# 
  5729   003EE7                     ADFLTRH         equ	16103	;# 
  5730   003EE8                     ADACC           equ	16104	;# 
  5731   003EE8                     ADACCL          equ	16104	;# 
  5732   003EE9                     ADACCH          equ	16105	;# 
  5733   003EEA                     ADACCU          equ	16106	;# 
  5734   003EEB                     ADCNT           equ	16107	;# 
  5735   003EEC                     ADRPT           equ	16108	;# 
  5736   003EED                     ADPREV          equ	16109	;# 
  5737   003EED                     ADPREVL         equ	16109	;# 
  5738   003EEE                     ADPREVH         equ	16110	;# 
  5739   003EEF                     ADRES           equ	16111	;# 
  5740   003EEF                     ADRESL          equ	16111	;# 
  5741   003EF0                     ADRESH          equ	16112	;# 
  5742   003EF1                     ADPCH           equ	16113	;# 
  5743   003EF3                     ADACQ           equ	16115	;# 
  5744   003EF3                     ADACQL          equ	16115	;# 
  5745   003EF4                     ADACQH          equ	16116	;# 
  5746   003EF5                     ADCAP           equ	16117	;# 
  5747   003EF6                     ADPRE           equ	16118	;# 
  5748   003EF6                     ADPREL          equ	16118	;# 
  5749   003EF7                     ADPREH          equ	16119	;# 
  5750   003EF8                     ADCON0          equ	16120	;# 
  5751   003EF9                     ADCON1          equ	16121	;# 
  5752   003EFA                     ADCON2          equ	16122	;# 
  5753   003EFB                     ADCON3          equ	16123	;# 
  5754   003EFC                     ADSTAT          equ	16124	;# 
  5755   003EFD                     ADREF           equ	16125	;# 
  5756   003EFE                     ADACT           equ	16126	;# 
  5757   003EFF                     ADCLK           equ	16127	;# 
  5758   003F12                     SMT1TMR         equ	16146	;# 
  5759   003F12                     SMT1TMRL        equ	16146	;# 
  5760   003F13                     SMT1TMRH        equ	16147	;# 
  5761   003F14                     SMT1TMRU        equ	16148	;# 
  5762   003F15                     SMT1CPR         equ	16149	;# 
  5763   003F15                     SMT1CPRL        equ	16149	;# 
  5764   003F16                     SMT1CPRH        equ	16150	;# 
  5765   003F17                     SMT1CPRU        equ	16151	;# 
  5766   003F18                     SMT1CPW         equ	16152	;# 
  5767   003F18                     SMT1CPWL        equ	16152	;# 
  5768   003F19                     SMT1CPWH        equ	16153	;# 
  5769   003F1A                     SMT1CPWU        equ	16154	;# 
  5770   003F1B                     SMT1PR          equ	16155	;# 
  5771   003F1B                     SMT1PRL         equ	16155	;# 
  5772   003F1C                     SMT1PRH         equ	16156	;# 
  5773   003F1D                     SMT1PRU         equ	16157	;# 
  5774   003F1E                     SMT1CON0        equ	16158	;# 
  5775   003F1F                     SMT1CON1        equ	16159	;# 
  5776   003F20                     SMT1STAT        equ	16160	;# 
  5777   003F21                     SMT1CLK         equ	16161	;# 
  5778   003F22                     SMT1SIG         equ	16162	;# 
  5779   003F23                     SMT1WIN         equ	16163	;# 
  5780   003F38                     NCO1ACC         equ	16184	;# 
  5781   003F38                     NCO1ACCL        equ	16184	;# 
  5782   003F39                     NCO1ACCH        equ	16185	;# 
  5783   003F3A                     NCO1ACCU        equ	16186	;# 
  5784   003F3B                     NCO1INC         equ	16187	;# 
  5785   003F3B                     NCO1INCL        equ	16187	;# 
  5786   003F3C                     NCO1INCH        equ	16188	;# 
  5787   003F3D                     NCO1INCU        equ	16189	;# 
  5788   003F3E                     NCO1CON         equ	16190	;# 
  5789   003F3F                     NCO1CLK         equ	16191	;# 
  5790   003F40                     CWG3CLK         equ	16192	;# 
  5791   003F40                     CWG3CLKCON      equ	16192	;# 
  5792   003F41                     CWG3ISM         equ	16193	;# 
  5793   003F41                     CWG3DAT         equ	16193	;# 
  5794   003F42                     CWG3DBR         equ	16194	;# 
  5795   003F43                     CWG3DBF         equ	16195	;# 
  5796   003F44                     CWG3CON0        equ	16196	;# 
  5797   003F45                     CWG3CON1        equ	16197	;# 
  5798   003F46                     CWG3AS0         equ	16198	;# 
  5799   003F47                     CWG3AS1         equ	16199	;# 
  5800   003F48                     CWG3STR         equ	16200	;# 
  5801   003F49                     CWG2CLK         equ	16201	;# 
  5802   003F49                     CWG2CLKCON      equ	16201	;# 
  5803   003F4A                     CWG2ISM         equ	16202	;# 
  5804   003F4A                     CWG2DAT         equ	16202	;# 
  5805   003F4B                     CWG2DBR         equ	16203	;# 
  5806   003F4C                     CWG2DBF         equ	16204	;# 
  5807   003F4D                     CWG2CON0        equ	16205	;# 
  5808   003F4E                     CWG2CON1        equ	16206	;# 
  5809   003F4F                     CWG2AS0         equ	16207	;# 
  5810   003F50                     CWG2AS1         equ	16208	;# 
  5811   003F51                     CWG2STR         equ	16209	;# 
  5812   003F52                     CWG1CLK         equ	16210	;# 
  5813   003F52                     CWG1CLKCON      equ	16210	;# 
  5814   003F53                     CWG1ISM         equ	16211	;# 
  5815   003F53                     CWG1DAT         equ	16211	;# 
  5816   003F54                     CWG1DBR         equ	16212	;# 
  5817   003F55                     CWG1DBF         equ	16213	;# 
  5818   003F56                     CWG1CON0        equ	16214	;# 
  5819   003F57                     CWG1CON1        equ	16215	;# 
  5820   003F58                     CWG1AS0         equ	16216	;# 
  5821   003F59                     CWG1AS1         equ	16217	;# 
  5822   003F5A                     CWG1STR         equ	16218	;# 
  5823   003F5E                     CCPTMRS0        equ	16222	;# 
  5824   003F5F                     CCPTMRS1        equ	16223	;# 
  5825   003F60                     PWM8DC          equ	16224	;# 
  5826   003F60                     PWM8DCL         equ	16224	;# 
  5827   003F61                     PWM8DCH         equ	16225	;# 
  5828   003F62                     PWM8CON         equ	16226	;# 
  5829   003F64                     PWM7DC          equ	16228	;# 
  5830   003F64                     PWM7DCL         equ	16228	;# 
  5831   003F65                     PWM7DCH         equ	16229	;# 
  5832   003F66                     PWM7CON         equ	16230	;# 
  5833   003F68                     PWM6DC          equ	16232	;# 
  5834   003F68                     PWM6DCL         equ	16232	;# 
  5835   003F69                     PWM6DCH         equ	16233	;# 
  5836   003F6A                     PWM6CON         equ	16234	;# 
  5837   003F6C                     PWM5DC          equ	16236	;# 
  5838   003F6C                     PWM5DCL         equ	16236	;# 
  5839   003F6D                     PWM5DCH         equ	16237	;# 
  5840   003F6E                     PWM5CON         equ	16238	;# 
  5841   003F70                     CCPR4           equ	16240	;# 
  5842   003F70                     CCPR4L          equ	16240	;# 
  5843   003F71                     CCPR4H          equ	16241	;# 
  5844   003F72                     CCP4CON         equ	16242	;# 
  5845   003F73                     CCP4CAP         equ	16243	;# 
  5846   003F74                     CCPR3           equ	16244	;# 
  5847   003F74                     CCPR3L          equ	16244	;# 
  5848   003F75                     CCPR3H          equ	16245	;# 
  5849   003F76                     CCP3CON         equ	16246	;# 
  5850   003F77                     CCP3CAP         equ	16247	;# 
  5851   003F78                     CCPR2           equ	16248	;# 
  5852   003F78                     CCPR2L          equ	16248	;# 
  5853   003F79                     CCPR2H          equ	16249	;# 
  5854   003F7A                     CCP2CON         equ	16250	;# 
  5855   003F7B                     CCP2CAP         equ	16251	;# 
  5856   003F7C                     CCPR1           equ	16252	;# 
  5857   003F7C                     CCPR1L          equ	16252	;# 
  5858   003F7D                     CCPR1H          equ	16253	;# 
  5859   003F7E                     CCP1CON         equ	16254	;# 
  5860   003F7F                     CCP1CAP         equ	16255	;# 
  5861   003F92                     T6TMR           equ	16274	;# 
  5862   003F92                     TMR6            equ	16274	;# 
  5863   003F93                     T6PR            equ	16275	;# 
  5864   003F93                     PR6             equ	16275	;# 
  5865   003F94                     T6CON           equ	16276	;# 
  5866   003F95                     T6HLT           equ	16277	;# 
  5867   003F96                     T6CLKCON        equ	16278	;# 
  5868   003F96                     T6CLK           equ	16278	;# 
  5869   003F97                     T6RST           equ	16279	;# 
  5870   003F98                     TMR5            equ	16280	;# 
  5871   003F98                     TMR5L           equ	16280	;# 
  5872   003F99                     TMR5H           equ	16281	;# 
  5873   003F9A                     T5CON           equ	16282	;# 
  5874   003F9A                     TMR5CON         equ	16282	;# 
  5875   003F9B                     T5GCON          equ	16283	;# 
  5876   003F9B                     TMR5GCON        equ	16283	;# 
  5877   003F9C                     T5GATE          equ	16284	;# 
  5878   003F9C                     TMR5GATE        equ	16284	;# 
  5879   003F9D                     T5CLK           equ	16285	;# 
  5880   003F9D                     TMR5CLK         equ	16285	;# 
  5881   003F9D                     PR5             equ	16285	;# 
  5882   003F9E                     T4TMR           equ	16286	;# 
  5883   003F9E                     TMR4            equ	16286	;# 
  5884   003F9F                     T4PR            equ	16287	;# 
  5885   003F9F                     PR4             equ	16287	;# 
  5886   003FA0                     T4CON           equ	16288	;# 
  5887   003FA1                     T4HLT           equ	16289	;# 
  5888   003FA2                     T4CLKCON        equ	16290	;# 
  5889   003FA2                     T4CLK           equ	16290	;# 
  5890   003FA3                     T4RST           equ	16291	;# 
  5891   003FA4                     TMR3            equ	16292	;# 
  5892   003FA4                     TMR3L           equ	16292	;# 
  5893   003FA5                     TMR3H           equ	16293	;# 
  5894   003FA6                     T3CON           equ	16294	;# 
  5895   003FA6                     TMR3CON         equ	16294	;# 
  5896   003FA7                     T3GCON          equ	16295	;# 
  5897   003FA7                     TMR3GCON        equ	16295	;# 
  5898   003FA8                     T3GATE          equ	16296	;# 
  5899   003FA8                     TMR3GATE        equ	16296	;# 
  5900   003FA9                     T3CLK           equ	16297	;# 
  5901   003FA9                     TMR3CLK         equ	16297	;# 
  5902   003FA9                     PR3             equ	16297	;# 
  5903   003FAA                     T2TMR           equ	16298	;# 
  5904   003FAA                     TMR2            equ	16298	;# 
  5905   003FAB                     T2PR            equ	16299	;# 
  5906   003FAB                     PR2             equ	16299	;# 
  5907   003FAC                     T2CON           equ	16300	;# 
  5908   003FAD                     T2HLT           equ	16301	;# 
  5909   003FAE                     T2CLKCON        equ	16302	;# 
  5910   003FAE                     T2CLK           equ	16302	;# 
  5911   003FAF                     T2RST           equ	16303	;# 
  5912   003FB0                     TMR1            equ	16304	;# 
  5913   003FB0                     TMR1L           equ	16304	;# 
  5914   003FB1                     TMR1H           equ	16305	;# 
  5915   003FB2                     T1CON           equ	16306	;# 
  5916   003FB2                     TMR1CON         equ	16306	;# 
  5917   003FB3                     T1GCON          equ	16307	;# 
  5918   003FB3                     TMR1GCON        equ	16307	;# 
  5919   003FB4                     T1GATE          equ	16308	;# 
  5920   003FB4                     TMR1GATE        equ	16308	;# 
  5921   003FB5                     T1CLK           equ	16309	;# 
  5922   003FB5                     TMR1CLK         equ	16309	;# 
  5923   003FB5                     PR1             equ	16309	;# 
  5924   003FB6                     TMR0L           equ	16310	;# 
  5925   003FB6                     TMR0            equ	16310	;# 
  5926   003FB7                     TMR0H           equ	16311	;# 
  5927   003FB7                     PR0             equ	16311	;# 
  5928   003FB8                     T0CON0          equ	16312	;# 
  5929   003FB9                     T0CON1          equ	16313	;# 
  5930   003FBA                     LATA            equ	16314	;# 
  5931   003FBB                     LATB            equ	16315	;# 
  5932   003FBC                     LATC            equ	16316	;# 
  5933   003FC2                     TRISA           equ	16322	;# 
  5934   003FC3                     TRISB           equ	16323	;# 
  5935   003FC4                     TRISC           equ	16324	;# 
  5936   003FCA                     PORTA           equ	16330	;# 
  5937   003FCB                     PORTB           equ	16331	;# 
  5938   003FCC                     PORTC           equ	16332	;# 
  5939   003FCE                     PORTE           equ	16334	;# 
  5940   003FD2                     INTCON0         equ	16338	;# 
  5941   003FD3                     INTCON1         equ	16339	;# 
  5942   003FD4                     IVTLOCK         equ	16340	;# 
  5943   003FD5                     IVTBASE         equ	16341	;# 
  5944   003FD5                     IVTBASEL        equ	16341	;# 
  5945   003FD6                     IVTBASEH        equ	16342	;# 
  5946   003FD7                     IVTBASEU        equ	16343	;# 
  5947   003FD8                     STATUS          equ	16344	;# 
  5948   003FD9                     FSR2            equ	16345	;# 
  5949   003FD9                     FSR2L           equ	16345	;# 
  5950   003FDA                     FSR2H           equ	16346	;# 
  5951   003FDB                     PLUSW2          equ	16347	;# 
  5952   003FDC                     PREINC2         equ	16348	;# 
  5953   003FDD                     POSTDEC2        equ	16349	;# 
  5954   003FDE                     POSTINC2        equ	16350	;# 
  5955   003FDF                     INDF2           equ	16351	;# 
  5956   003FE0                     BSR             equ	16352	;# 
  5957   003FE1                     FSR1            equ	16353	;# 
  5958   003FE1                     FSR1L           equ	16353	;# 
  5959   003FE2                     FSR1H           equ	16354	;# 
  5960   003FE3                     PLUSW1          equ	16355	;# 
  5961   003FE4                     PREINC1         equ	16356	;# 
  5962   003FE5                     POSTDEC1        equ	16357	;# 
  5963   003FE6                     POSTINC1        equ	16358	;# 
  5964   003FE7                     INDF1           equ	16359	;# 
  5965   003FE8                     WREG            equ	16360	;# 
  5966   003FE9                     FSR0            equ	16361	;# 
  5967   003FE9                     FSR0L           equ	16361	;# 
  5968   003FEA                     FSR0H           equ	16362	;# 
  5969   003FEB                     PLUSW0          equ	16363	;# 
  5970   003FEC                     PREINC0         equ	16364	;# 
  5971   003FED                     POSTDEC0        equ	16365	;# 
  5972   003FEE                     POSTINC0        equ	16366	;# 
  5973   003FEF                     INDF0           equ	16367	;# 
  5974   003FF0                     PCON0           equ	16368	;# 
  5975   003FF1                     PCON1           equ	16369	;# 
  5976   003FF3                     PROD            equ	16371	;# 
  5977   003FF3                     PRODL           equ	16371	;# 
  5978   003FF4                     PRODH           equ	16372	;# 
  5979   003FF5                     TABLAT          equ	16373	;# 
  5980   003FF6                     TBLPTR          equ	16374	;# 
  5981   003FF6                     TBLPTRL         equ	16374	;# 
  5982   003FF7                     TBLPTRH         equ	16375	;# 
  5983   003FF8                     TBLPTRU         equ	16376	;# 
  5984   003FF9                     PCLAT           equ	16377	;# 
  5985   003FF9                     PCL             equ	16377	;# 
  5986   003FFA                     PCLATH          equ	16378	;# 
  5987   003FFB                     PCLATU          equ	16379	;# 
  5988   003FFC                     STKPTR          equ	16380	;# 
  5989   003FFD                     TOS             equ	16381	;# 
  5990   003FFD                     TOSL            equ	16381	;# 
  5991   003FFE                     TOSH            equ	16382	;# 
  5992   003FFF                     TOSU            equ	16383	;# 
  5993                           
  5994 ;; Function _INT0_DefaultInterruptHandler is unused but had its address taken
  5995   000000                     _INT0_DefaultInterruptHandler equ	0
  5996                           
  5997 ;; Function _INT1_DefaultInterruptHandler is unused but had its address taken
  5998   000000                     _INT1_DefaultInterruptHandler equ	0
  5999                           
  6000 ;; Function _INT2_DefaultInterruptHandler is unused but had its address taken
  6001   000000                     _INT2_DefaultInterruptHandler equ	0
  6002                           
  6003 ;; Function _TMR1_DefaultGateCallback is unused but had its address taken
  6004   000000                     _TMR1_DefaultGateCallback equ	0
  6005                           
  6006                           	psect	mediumconst
  6007   00FEEA                     __pmediumconst:
  6008                           	callstack 0
  6009   00FEEA  00                 	db	0
  6010   00FEEB                     _COLORS_TAB:
  6011                           	callstack 0
  6012   00FEEB  00                 	db	0
  6013   00FEEC  64                 	db	100
  6014   00FEED  00                 	db	0
  6015   00FEEE  64                 	db	100
  6016   00FEEF  00                 	db	0
  6017   00FEF0  00                 	db	0
  6018   00FEF1  00                 	db	0
  6019   00FEF2  00                 	db	0
  6020   00FEF3  64                 	db	100
  6021   00FEF4  32                 	db	50
  6022   00FEF5  64                 	db	100
  6023   00FEF6  00                 	db	0
  6024   00FEF7  64                 	db	100
  6025   00FEF8  64                 	db	100
  6026   00FEF9  00                 	db	0
  6027   00FEFA  00                 	db	0
  6028   00FEFB  32                 	db	50
  6029   00FEFC  64                 	db	100
  6030   00FEFD  00                 	db	0
  6031   00FEFE  64                 	db	100
  6032   00FEFF  32                 	db	50
  6033   00FF00  64                 	db	100
  6034   00FF01  64                 	db	100
  6035   00FF02  64                 	db	100
  6036   00FF03                     __end_of_COLORS_TAB:
  6037                           	callstack 0
  6038   00FF03                     LCD_SetCursor@F16382:
  6039                           	callstack 0
  6040   00FF03  00                 	db	0
  6041   00FF04  40                 	db	64
  6042   00FF05  10                 	db	16
  6043   00FF06  50                 	db	80
  6044   00FF07                     __end_ofLCD_SetCursor@F16382:
  6045                           	callstack 0
  6046   00FF07                     STR_2:
  6047                           
  6048                           ; BSR set to: 57
  6049   00FF07  31                 	db	49	;'1'
  6050   00FF08  2E                 	db	46
  6051   00FF09  49                 	db	73	;'I'
  6052   00FF0A  43                 	db	67	;'C'
  6053   00FF0B  4C                 	db	76	;'L'
  6054   00FF0C  45                 	db	69	;'E'
  6055   00FF0D  44                 	db	68	;'D'
  6056   00FF0E  20                 	db	32
  6057   00FF0F  32                 	db	50	;'2'
  6058   00FF10  2E                 	db	46
  6059   00FF11  4D                 	db	77	;'M'
  6060   00FF12  65                 	db	101	;'e'
  6061   00FF13  73                 	db	115	;'s'
  6062   00FF14  75                 	db	117	;'u'
  6063   00FF15  72                 	db	114	;'r'
  6064   00FF16  65                 	db	101	;'e'
  6065   00FF17  00                 	db	0
  6066   00FF18                     STR_10:
  6067                           
  6068                           ; BSR set to: 57
  6069   00FF18  43                 	db	67	;'C'
  6070   00FF19  6F                 	db	111	;'o'
  6071   00FF1A  75                 	db	117	;'u'
  6072   00FF1B  6C                 	db	108	;'l'
  6073   00FF1C  65                 	db	101	;'e'
  6074   00FF1D  75                 	db	117	;'u'
  6075   00FF1E  72                 	db	114	;'r'
  6076   00FF1F  3A                 	db	58	;':'
  6077   00FF20  20                 	db	32
  6078   00FF21  4F                 	db	79	;'O'
  6079   00FF22  52                 	db	82	;'R'
  6080   00FF23  41                 	db	65	;'A'
  6081   00FF24  4E                 	db	78	;'N'
  6082   00FF25  47                 	db	71	;'G'
  6083   00FF26  45                 	db	69	;'E'
  6084   00FF27  00                 	db	0
  6085   00FF28                     STR_5:
  6086                           
  6087                           ; BSR set to: 57
  6088   00FF28  31                 	db	49	;'1'
  6089   00FF29  2E                 	db	46
  6090   00FF2A  52                 	db	82	;'R'
  6091   00FF2B  20                 	db	32
  6092   00FF2C  32                 	db	50	;'2'
  6093   00FF2D  2E                 	db	46
  6094   00FF2E  47                 	db	71	;'G'
  6095   00FF2F  20                 	db	32
  6096   00FF30  33                 	db	51	;'3'
  6097   00FF31  2E                 	db	46
  6098   00FF32  42                 	db	66	;'B'
  6099   00FF33  20                 	db	32
  6100   00FF34  34                 	db	52	;'4'
  6101   00FF35  2E                 	db	46
  6102   00FF36  4F                 	db	79	;'O'
  6103   00FF37  00                 	db	0
  6104   00FF38                     STR_12:
  6105                           
  6106                           ; BSR set to: 57
  6107   00FF38  43                 	db	67	;'C'
  6108   00FF39  6F                 	db	111	;'o'
  6109   00FF3A  75                 	db	117	;'u'
  6110   00FF3B  6C                 	db	108	;'l'
  6111   00FF3C  65                 	db	101	;'e'
  6112   00FF3D  75                 	db	117	;'u'
  6113   00FF3E  72                 	db	114	;'r'
  6114   00FF3F  3A                 	db	58	;':'
  6115   00FF40  20                 	db	32
  6116   00FF41  56                 	db	86	;'V'
  6117   00FF42  49                 	db	73	;'I'
  6118   00FF43  4F                 	db	79	;'O'
  6119   00FF44  4C                 	db	76	;'L'
  6120   00FF45  45                 	db	69	;'E'
  6121   00FF46  54                 	db	84	;'T'
  6122   00FF47  00                 	db	0
  6123   00FF48                     STR_3:
  6124                           
  6125                           ; BSR set to: 57
  6126   00FF48  33                 	db	51	;'3'
  6127   00FF49  2E                 	db	46
  6128   00FF4A  3F                 	db	63	;'?'
  6129   00FF4B  20                 	db	32
  6130   00FF4C  32                 	db	50	;'2'
  6131   00FF4D  2E                 	db	46
  6132   00FF4E  41                 	db	65	;'A'
  6133   00FF4F  6E                 	db	110	;'n'
  6134   00FF50  69                 	db	105	;'i'
  6135   00FF51  6D                 	db	109	;'m'
  6136   00FF52  61                 	db	97	;'a'
  6137   00FF53  74                 	db	116	;'t'
  6138   00FF54  69                 	db	105	;'i'
  6139   00FF55  6F                 	db	111	;'o'
  6140   00FF56  6E                 	db	110	;'n'
  6141   00FF57  00                 	db	0
  6142   00FF58                     STR_14:
  6143                           
  6144                           ; BSR set to: 57
  6145   00FF58  43                 	db	67	;'C'
  6146   00FF59  6F                 	db	111	;'o'
  6147   00FF5A  75                 	db	117	;'u'
  6148   00FF5B  6C                 	db	108	;'l'
  6149   00FF5C  65                 	db	101	;'e'
  6150   00FF5D  75                 	db	117	;'u'
  6151   00FF5E  72                 	db	114	;'r'
  6152   00FF5F  3A                 	db	58	;':'
  6153   00FF60  20                 	db	32
  6154   00FF61  42                 	db	66	;'B'
  6155   00FF62  4C                 	db	76	;'L'
  6156   00FF63  41                 	db	65	;'A'
  6157   00FF64  4E                 	db	78	;'N'
  6158   00FF65  43                 	db	67	;'C'
  6159   00FF66  00                 	db	0
  6160   00FF67                     STR_7:
  6161                           
  6162                           ; BSR set to: 57
  6163   00FF67  43                 	db	67	;'C'
  6164   00FF68  6F                 	db	111	;'o'
  6165   00FF69  75                 	db	117	;'u'
  6166   00FF6A  6C                 	db	108	;'l'
  6167   00FF6B  65                 	db	101	;'e'
  6168   00FF6C  75                 	db	117	;'u'
  6169   00FF6D  72                 	db	114	;'r'
  6170   00FF6E  3A                 	db	58	;':'
  6171   00FF6F  20                 	db	32
  6172   00FF70  52                 	db	82	;'R'
  6173   00FF71  4F                 	db	79	;'O'
  6174   00FF72  55                 	db	85	;'U'
  6175   00FF73  47                 	db	71	;'G'
  6176   00FF74  45                 	db	69	;'E'
  6177   00FF75  00                 	db	0
  6178   00FF76                     STR_11:
  6179                           
  6180                           ; BSR set to: 57
  6181   00FF76  43                 	db	67	;'C'
  6182   00FF77  6F                 	db	111	;'o'
  6183   00FF78  75                 	db	117	;'u'
  6184   00FF79  6C                 	db	108	;'l'
  6185   00FF7A  65                 	db	101	;'e'
  6186   00FF7B  75                 	db	117	;'u'
  6187   00FF7C  72                 	db	114	;'r'
  6188   00FF7D  3A                 	db	58	;':'
  6189   00FF7E  20                 	db	32
  6190   00FF7F  4A                 	db	74	;'J'
  6191   00FF80  41                 	db	65	;'A'
  6192   00FF81  55                 	db	85	;'U'
  6193   00FF82  4E                 	db	78	;'N'
  6194   00FF83  45                 	db	69	;'E'
  6195   00FF84  00                 	db	0
  6196   00FF85                     STR_6:
  6197                           
  6198                           ; BSR set to: 57
  6199   00FF85  4D                 	db	77	;'M'
  6200   00FF86  65                 	db	101	;'e'
  6201   00FF87  73                 	db	115	;'s'
  6202   00FF88  75                 	db	117	;'u'
  6203   00FF89  72                 	db	114	;'r'
  6204   00FF8A  65                 	db	101	;'e'
  6205   00FF8B  20                 	db	32
  6206   00FF8C  63                 	db	99	;'c'
  6207   00FF8D  6F                 	db	111	;'o'
  6208   00FF8E  75                 	db	117	;'u'
  6209   00FF8F  72                 	db	114	;'r'
  6210   00FF90  61                 	db	97	;'a'
  6211   00FF91  6E                 	db	110	;'n'
  6212   00FF92  74                 	db	116	;'t'
  6213   00FF93  00                 	db	0
  6214   00FF94                     STR_18:
  6215                           
  6216                           ; BSR set to: 57
  6217   00FF94  43                 	db	67	;'C'
  6218   00FF95  6F                 	db	111	;'o'
  6219   00FF96  75                 	db	117	;'u'
  6220   00FF97  72                 	db	114	;'r'
  6221   00FF98  65                 	db	101	;'e'
  6222   00FF99  6E                 	db	110	;'n'
  6223   00FF9A  74                 	db	116	;'t'
  6224   00FF9B  20                 	db	32
  6225   00FF9C  6C                 	db	108	;'l'
  6226   00FF9D  65                 	db	101	;'e'
  6227   00FF9E  64                 	db	100	;'d'
  6228   00FF9F  73                 	db	115	;'s'
  6229   00FFA0  3A                 	db	58	;':'
  6230   00FFA1  00                 	db	0
  6231   00FFA2                     STR_13:
  6232                           
  6233                           ; BSR set to: 57
  6234   00FFA2  43                 	db	67	;'C'
  6235   00FFA3  6F                 	db	111	;'o'
  6236   00FFA4  75                 	db	117	;'u'
  6237   00FFA5  6C                 	db	108	;'l'
  6238   00FFA6  65                 	db	101	;'e'
  6239   00FFA7  75                 	db	117	;'u'
  6240   00FFA8  72                 	db	114	;'r'
  6241   00FFA9  3A                 	db	58	;':'
  6242   00FFAA  20                 	db	32
  6243   00FFAB  52                 	db	82	;'R'
  6244   00FFAC  4F                 	db	79	;'O'
  6245   00FFAD  53                 	db	83	;'S'
  6246   00FFAE  45                 	db	69	;'E'
  6247   00FFAF  00                 	db	0
  6248   00FFB0                     STR_8:
  6249                           
  6250                           ; BSR set to: 57
  6251   00FFB0  43                 	db	67	;'C'
  6252   00FFB1  6F                 	db	111	;'o'
  6253   00FFB2  75                 	db	117	;'u'
  6254   00FFB3  6C                 	db	108	;'l'
  6255   00FFB4  65                 	db	101	;'e'
  6256   00FFB5  75                 	db	117	;'u'
  6257   00FFB6  72                 	db	114	;'r'
  6258   00FFB7  3A                 	db	58	;':'
  6259   00FFB8  20                 	db	32
  6260   00FFB9  56                 	db	86	;'V'
  6261   00FFBA  45                 	db	69	;'E'
  6262   00FFBB  52                 	db	82	;'R'
  6263   00FFBC  54                 	db	84	;'T'
  6264   00FFBD  00                 	db	0
  6265   00FFBE                     STR_9:
  6266                           
  6267                           ; BSR set to: 57
  6268   00FFBE  43                 	db	67	;'C'
  6269   00FFBF  6F                 	db	111	;'o'
  6270   00FFC0  75                 	db	117	;'u'
  6271   00FFC1  6C                 	db	108	;'l'
  6272   00FFC2  65                 	db	101	;'e'
  6273   00FFC3  75                 	db	117	;'u'
  6274   00FFC4  72                 	db	114	;'r'
  6275   00FFC5  3A                 	db	58	;':'
  6276   00FFC6  20                 	db	32
  6277   00FFC7  42                 	db	66	;'B'
  6278   00FFC8  4C                 	db	76	;'L'
  6279   00FFC9  45                 	db	69	;'E'
  6280   00FFCA  55                 	db	85	;'U'
  6281   00FFCB  00                 	db	0
  6282   00FFCC                     STR_15:
  6283                           
  6284                           ; BSR set to: 57
  6285   00FFCC  45                 	db	69	;'E'
  6286   00FFCD  54                 	db	84	;'T'
  6287   00FFCE  45                 	db	69	;'E'
  6288   00FFCF  49                 	db	73	;'I'
  6289   00FFD0  4E                 	db	78	;'N'
  6290   00FFD1  44                 	db	68	;'D'
  6291   00FFD2  52                 	db	82	;'R'
  6292   00FFD3  45                 	db	69	;'E'
  6293   00FFD4  00                 	db	0
  6294   00FFD5                     STR_16:
  6295                           
  6296                           ; BSR set to: 57
  6297   00FFD5  56                 	db	86	;'V'
  6298   00FFD6  5F                 	db	95	;'_'
  6299   00FFD7  49                 	db	73	;'I'
  6300   00FFD8  6C                 	db	108	;'l'
  6301   00FFD9  65                 	db	101	;'e'
  6302   00FFDA  64                 	db	100	;'d'
  6303   00FFDB  3A                 	db	58	;':'
  6304   00FFDC  00                 	db	0
  6305   00FFDD                     STR_1:
  6306                           
  6307                           ; BSR set to: 57
  6308   00FFDD  43                 	db	67	;'C'
  6309   00FFDE  68                 	db	104	;'h'
  6310   00FFDF  6F                 	db	111	;'o'
  6311   00FFE0  69                 	db	105	;'i'
  6312   00FFE1  78                 	db	120	;'x'
  6313   00FFE2  3A                 	db	58	;':'
  6314   00FFE3  00                 	db	0
  6315   00FFE4                     STR_19:
  6316                           
  6317                           ; BSR set to: 57
  6318   00FFE4  25                 	db	37
  6319   00FFE5  2E                 	db	46
  6320   00FFE6  33                 	db	51	;'3'
  6321   00FFE7  65                 	db	101	;'e'
  6322   00FFE8  20                 	db	32
  6323   00FFE9  41                 	db	65	;'A'
  6324   00FFEA  00                 	db	0
  6325   00FFEB                     STR_17:
  6326                           
  6327                           ; BSR set to: 57
  6328   00FFEB  25                 	db	37
  6329   00FFEC  2E                 	db	46
  6330   00FFED  32                 	db	50	;'2'
  6331   00FFEE  66                 	db	102	;'f'
  6332   00FFEF  20                 	db	32
  6333   00FFF0  56                 	db	86	;'V'
  6334   00FFF1  00                 	db	0
  6335   00FFF2                     STR_4:
  6336                           
  6337                           ; BSR set to: 57
  6338   00FFF2  4C                 	db	76	;'L'
  6339   00FFF3  45                 	db	69	;'E'
  6340   00FFF4  44                 	db	68	;'D'
  6341   00FFF5  3A                 	db	58	;':'
  6342   00FFF6  00                 	db	0
  6343   00FFF7                     STR_20:
  6344                           
  6345                           ; BSR set to: 57
  6346   00FFF7  69                 	db	105	;'i'
  6347   00FFF8  6E                 	db	110	;'n'
  6348   00FFF9  66                 	db	102	;'f'
  6349   00FFFA  00                 	db	0
  6350   00FFFB                     STR_23:
  6351                           
  6352                           ; BSR set to: 57
  6353   00FFFB  6E                 	db	110	;'n'
  6354   00FFFC  61                 	db	97	;'a'
  6355   00FFFD  6E                 	db	110	;'n'
  6356   00FFFE  00                 	db	0
  6357   00FFFB                     STR_24          equ	STR_23
  6358   00FFFB                     STR_25          equ	STR_23
  6359   00FFF7                     STR_21          equ	STR_20
  6360   00FFF7                     STR_22          equ	STR_20
  6361   00FFFF  00                 	db	0	; dummy byte at the end
  6362   00FEEA                     __smallconst    set	__pmediumconst
  6363   00FEEA                     __mediumconst   set	__pmediumconst
  6364   000003                     __activetblptr  equ	3
  6365                           
  6366                           	psect	nvBANK0
  6367   0000ED                     __pnvBANK0:
  6368                           	callstack 0
  6369   0000ED                     _TMR1_OverflowCallback:
  6370                           	callstack 0
  6371   0000ED                     	ds	2
  6372   0000EF                     _INT2_InterruptHandler:
  6373                           	callstack 0
  6374   0000EF                     	ds	2
  6375   0000F1                     _INT1_InterruptHandler:
  6376                           	callstack 0
  6377   0000F1                     	ds	2
  6378   0000F3                     _INT0_InterruptHandler:
  6379                           	callstack 0
  6380   0000F3                     	ds	2
  6381   0000F5                     _BP3_InterruptHandler:
  6382                           	callstack 0
  6383   0000F5                     	ds	2
  6384   0000F7                     _BP2_InterruptHandler:
  6385                           	callstack 0
  6386   0000F7                     	ds	2
  6387   0000F9                     _BP1_InterruptHandler:
  6388                           	callstack 0
  6389   0000F9                     	ds	2
  6390                           
  6391                           	psect	nvBANK1
  6392   0001D6                     __pnvBANK1:
  6393                           	callstack 0
  6394   0001D6                     _TMR1_GateCallback:
  6395                           	callstack 0
  6396   0001D6                     	ds	2
  6397   0039A4                     _PIR4bits       set	14756
  6398   003994                     _PIE4bits       set	14740
  6399   0039A0                     _PIR0bits       set	14752
  6400   0039A7                     _PIR7bits       set	14759
  6401   0039A5                     _PIR5bits       set	14757
  6402   003990                     _PIE0bits       set	14736
  6403   0039DE                     _OSCTUNE        set	14814
  6404   0039DF                     _OSCFRQ         set	14815
  6405   0039DD                     _OSCEN          set	14813
  6406   0039DB                     _OSCCON3        set	14811
  6407   0039D9                     _OSCCON1        set	14809
  6408   003991                     _PIE1bits       set	14737
  6409   0039A1                     _PIR1bits       set	14753
  6410   003A47                     _IOCAFbits      set	14919
  6411   003A87                     _IOCEF          set	14983
  6412   003A86                     _IOCEN          set	14982
  6413   003A85                     _IOCEP          set	14981
  6414   003A67                     _IOCCF          set	14951
  6415   003A66                     _IOCCN          set	14950
  6416   003A65                     _IOCCP          set	14949
  6417   003A57                     _IOCBF          set	14935
  6418   003A56                     _IOCBN          set	14934
  6419   003A55                     _IOCBP          set	14933
  6420   003A47                     _IOCAF          set	14919
  6421   003A46                     _IOCAN          set	14918
  6422   003A45                     _IOCAP          set	14917
  6423   003A6B                     _RC4I2C         set	14955
  6424   003A6A                     _RC3I2C         set	14954
  6425   003A5B                     _RB2I2C         set	14939
  6426   003A5A                     _RB1I2C         set	14938
  6427   003A84                     _INLVLE         set	14980
  6428   003A64                     _INLVLC         set	14948
  6429   003A54                     _INLVLB         set	14932
  6430   003A44                     _INLVLA         set	14916
  6431   003A63                     _SLRCONC        set	14947
  6432   003A53                     _SLRCONB        set	14931
  6433   003A43                     _SLRCONA        set	14915
  6434   003A81                     _WPUE           set	14977
  6435   003A61                     _WPUC           set	14945
  6436   003A51                     _WPUB           set	14929
  6437   003A41                     _WPUA           set	14913
  6438   003A60                     _ANSELC         set	14944
  6439   003A50                     _ANSELB         set	14928
  6440   003A40                     _ANSELA         set	14912
  6441   003A62                     _ODCONC         set	14946
  6442   003A52                     _ODCONB         set	14930
  6443   003A42                     _ODCONA         set	14914
  6444   003ED7                     _ADCPbits       set	16087
  6445   003EF9                     _ADCON1bits     set	16121
  6446   003EE2                     _ADERRL         set	16098
  6447   003EE3                     _ADERRH         set	16099
  6448   003EED                     _ADPREVL        set	16109
  6449   003EEE                     _ADPREVH        set	16110
  6450   003EE6                     _ADFLTRL        set	16102
  6451   003EE7                     _ADFLTRH        set	16103
  6452   003EFC                     _ADSTATbits     set	16124
  6453   003EEB                     _ADCNT          set	16107
  6454   003EE8                     _ADACCL         set	16104
  6455   003EE9                     _ADACCH         set	16105
  6456   003EFB                     _ADCON3bits     set	16123
  6457   003EFA                     _ADCON2bits     set	16122
  6458   003EEF                     _ADRESL         set	16111
  6459   003EF0                     _ADRESH         set	16112
  6460   003EF8                     _ADCON0         set	16120
  6461   003EFE                     _ADACT          set	16126
  6462   003EFF                     _ADCLK          set	16127
  6463   003EFD                     _ADREF          set	16125
  6464   003EFC                     _ADSTAT         set	16124
  6465   003EFB                     _ADCON3         set	16123
  6466   003EFA                     _ADCON2         set	16122
  6467   003EF9                     _ADCON1         set	16121
  6468   003EF7                     _ADPREH         set	16119
  6469   003EF6                     _ADPREL         set	16118
  6470   003EF5                     _ADCAP          set	16117
  6471   003ED7                     _ADCP           set	16087
  6472   003EF4                     _ADACQH         set	16116
  6473   003EF3                     _ADACQL         set	16115
  6474   003EF1                     _ADPCH          set	16113
  6475   003EEC                     _ADRPT          set	16108
  6476   003EEA                     _ADACCU         set	16106
  6477   003EE5                     _ADSTPTH        set	16101
  6478   003EE4                     _ADSTPTL        set	16100
  6479   003EE1                     _ADUTHH         set	16097
  6480   003EE0                     _ADUTHL         set	16096
  6481   003EDF                     _ADLTHH         set	16095
  6482   003EDE                     _ADLTHL         set	16094
  6483   003EF8                     _ADCON0bits     set	16120
  6484   003FC2                     _TRISAbits      set	16322
  6485   003FC3                     _TRISBbits      set	16323
  6486   003FBA                     _LATAbits       set	16314
  6487   003FB3                     _T1GCONbits     set	16307
  6488   003FB2                     _T1CON          set	16306
  6489   003FB0                     _TMR1L          set	16304
  6490   003FB1                     _TMR1H          set	16305
  6491   003FB5                     _T1CLK          set	16309
  6492   003FB4                     _T1GATE         set	16308
  6493   003FB3                     _T1GCON         set	16307
  6494   003FB2                     _T1CONbits      set	16306
  6495   003FD2                     _INTCON0bits    set	16338
  6496   003FC4                     _TRISC          set	16324
  6497   003FC3                     _TRISB          set	16323
  6498   003FC2                     _TRISA          set	16322
  6499   003FBB                     _LATB           set	16315
  6500   003FBA                     _LATA           set	16314
  6501   003FBC                     _LATC           set	16316
  6502   003FBB                     _LATBbits       set	16315
  6503                           
  6504                           ; #config settings
  6505                           
  6506                           	psect	cinit
  6507   006072                     __pcinit:
  6508                           	callstack 0
  6509   006072                     start_initialization:
  6510                           	callstack 0
  6511   006072                     __initialization:
  6512                           	callstack 0
  6513                           
  6514                           ; Clear objects allocated to BIGRAM (432 bytes)
  6515   006072  EE00  F250         	lfsr	0,__pbssBIGRAM
  6516   006076  EE10 F1B0          	lfsr	1,432
  6517   00607A                     clear_0:
  6518   00607A  6AEE               	clrf	postinc0,c
  6519   00607C  50E5               	movf	postdec1,w,c
  6520   00607E  50E1               	movf	fsr1l,w,c
  6521   006080  E1FC               	bnz	clear_0
  6522   006082  50E2               	movf	fsr1h,w,c
  6523   006084  E1FA               	bnz	clear_0
  6524                           
  6525                           ; Clear objects allocated to BANK2 (80 bytes)
  6526   006086  EE00  F200         	lfsr	0,__pbssBANK2
  6527   00608A  0E50               	movlw	80
  6528   00608C                     clear_1:
  6529   00608C  6AEE               	clrf	postinc0,c
  6530   00608E  06E8               	decf	wreg,f,c
  6531   006090  E1FD               	bnz	clear_1
  6532                           
  6533                           ; Clear objects allocated to BANK0 (24 bytes)
  6534   006092  EE00  F0D5         	lfsr	0,__pbssBANK0
  6535   006096  0E18               	movlw	24
  6536   006098                     clear_2:
  6537   006098  6AEE               	clrf	postinc0,c
  6538   00609A  06E8               	decf	wreg,f,c
  6539   00609C  E1FD               	bnz	clear_2
  6540                           
  6541                           ; Clear objects allocated to COMRAM (1 bytes)
  6542   00609E  6A5E               	clrf	__pbssCOMRAM& (0+255),c
  6543                           
  6544                           ;
  6545                           ; Setup IVTBASE
  6546                           ;
  6547   003FD5                     IVTBASEL        equ	16341
  6548   003FD6                     IVTBASEH        equ	16342
  6549   003FD7                     IVTBASEU        equ	16343
  6550   0060A0  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
  6551   0060A2  6ED5               	movwf	213,c
  6552   0060A4  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
  6553   0060A6  6ED6               	movwf	214,c
  6554   0060A8  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
  6555   0060AA  6ED7               	movwf	215,c
  6556   0060AC                     end_of_initialization:
  6557                           	callstack 0
  6558   0060AC                     __end_of__initialization:
  6559                           	callstack 0
  6560   0060AC  0100               	movlb	0
  6561   0060AE  EF03  F02E         	goto	_main	;jump to C main() function
  6562                           
  6563                           	psect	bssCOMRAM
  6564   00005E                     __pbssCOMRAM:
  6565                           	callstack 0
  6566   00005E                     rainbow_scroll_vertical@offset:
  6567                           	callstack 0
  6568   00005E                     	ds	1
  6569                           
  6570                           	psect	bssBANK0
  6571   0000D5                     __pbssBANK0:
  6572                           	callstack 0
  6573   0000D5                     floorf@F521:
  6574                           	callstack 0
  6575   0000D5                     	ds	4
  6576   0000D9                     ___fpclassifyf@F465:
  6577                           	callstack 0
  6578   0000D9                     	ds	4
  6579   0000DD                     _width:
  6580                           	callstack 0
  6581   0000DD                     	ds	2
  6582   0000DF                     _prec:
  6583                           	callstack 0
  6584   0000DF                     	ds	2
  6585   0000E1                     TMR1_handler@timer_1s:
  6586                           	callstack 0
  6587   0000E1                     	ds	2
  6588   0000E3                     _timer1ReloadVal:
  6589                           	callstack 0
  6590   0000E3                     	ds	2
  6591   0000E5                     _ADC_ThresholdCallback:
  6592                           	callstack 0
  6593   0000E5                     	ds	2
  6594   0000E7                     _ADC_ConversionDoneCallback:
  6595                           	callstack 0
  6596   0000E7                     	ds	2
  6597   0000E9                     _flags:
  6598                           	callstack 0
  6599   0000E9                     	ds	1
  6600   0000EA                     _flag_start:
  6601                           	callstack 0
  6602   0000EA                     	ds	1
  6603   0000EB                     _etat_courant:
  6604                           	callstack 0
  6605   0000EB                     	ds	1
  6606   0000EC                     _adc_busy_status:
  6607                           	callstack 0
  6608   0000EC                     	ds	1
  6609                           
  6610                           	psect	bssBANK2
  6611   000200                     __pbssBANK2:
  6612                           	callstack 0
  6613   000200                     _dbuf:
  6614                           	callstack 0
  6615   000200                     	ds	80
  6616                           
  6617                           	psect	bssBIGRAM
  6618   000250                     __pbssBIGRAM:
  6619                           	callstack 0
  6620   000250                     _matrix_tab:
  6621                           	callstack 0
  6622   000250                     	ds	432
  6623                           
  6624                           	psect	cstackBANK1
  6625   000100                     __pcstackBANK1:
  6626                           	callstack 0
  6627   000100                     ??_INTERRUPT_InterruptManager:
  6628                           
  6629                           ; 1 bytes @ 0x0
  6630   000100                     	ds	6
  6631   000106                     ?___fpclassifyf:
  6632                           	callstack 0
  6633   000106                     ?_ADC_ConversionResultGet:
  6634                           	callstack 0
  6635   000106                     ?___awdiv:
  6636                           	callstack 0
  6637   000106                     ?___awmod:
  6638                           	callstack 0
  6639   000106                     ?_read_prec_or_width:
  6640                           	callstack 0
  6641   000106                     ?___fladd:
  6642                           	callstack 0
  6643   000106                     ?_labs:
  6644                           	callstack 0
  6645   000106                     ?___flneg:
  6646                           	callstack 0
  6647   000106                     ?___xxtofl:
  6648                           	callstack 0
  6649   000106                     ADC_ChannelSelect@channel:
  6650                           	callstack 0
  6651   000106                     BP1_SetInterruptHandler@InterruptHandler:
  6652                           	callstack 0
  6653   000106                     BP2_SetInterruptHandler@InterruptHandler:
  6654                           	callstack 0
  6655   000106                     BP3_SetInterruptHandler@InterruptHandler:
  6656                           	callstack 0
  6657   000106                     INT0_SetInterruptHandler@InterruptHandler:
  6658                           	callstack 0
  6659   000106                     INT1_SetInterruptHandler@InterruptHandler:
  6660                           	callstack 0
  6661   000106                     INT2_SetInterruptHandler@InterruptHandler:
  6662                           	callstack 0
  6663   000106                     TMR1_OverflowCallbackRegister@CallbackHandler:
  6664                           	callstack 0
  6665   000106                     ___awdiv@dividend:
  6666                           	callstack 0
  6667   000106                     ___awmod@dividend:
  6668                           	callstack 0
  6669   000106                     read_prec_or_width@fmt:
  6670                           	callstack 0
  6671   000106                     memcpy@d1:
  6672                           	callstack 0
  6673   000106                     fputc@c:
  6674                           	callstack 0
  6675   000106                     strcpy@dest:
  6676                           	callstack 0
  6677   000106                     ___fleq@ff1:
  6678                           	callstack 0
  6679   000106                     ___flneg@f1:
  6680                           	callstack 0
  6681   000106                     ___fladd@b:
  6682                           	callstack 0
  6683   000106                     ___xxtofl@val:
  6684                           	callstack 0
  6685   000106                     ___fpclassifyf@x:
  6686                           	callstack 0
  6687   000106                     labs@a:
  6688                           	callstack 0
  6689   000106                     ??_TMR1_Initialize:
  6690   000106                     ??_LCD_Command:
  6691   000106                     ??_LCD_Char:
  6692   000106                     
  6693                           ; 1 bytes @ 0x6
  6694   000106                     	ds	1
  6695   000107                     LCD_Command@cmd:
  6696                           	callstack 0
  6697   000107                     LCD_Char@data:
  6698                           	callstack 0
  6699                           
  6700                           ; 1 bytes @ 0x7
  6701   000107                     	ds	1
  6702   000108                     LCD_SetCursor@column:
  6703                           	callstack 0
  6704   000108                     LCD_String@str:
  6705                           	callstack 0
  6706   000108                     ___awdiv@divisor:
  6707                           	callstack 0
  6708   000108                     ___awmod@divisor:
  6709                           	callstack 0
  6710   000108                     read_prec_or_width@ap:
  6711                           	callstack 0
  6712   000108                     memcpy@s1:
  6713                           	callstack 0
  6714   000108                     fputc@fp:
  6715                           	callstack 0
  6716   000108                     strcpy@src:
  6717                           	callstack 0
  6718   000108                     ??_LCD_Clear:
  6719   000108                     ??_ADC_ConversionResultGet:
  6720   000108                     
  6721                           ; 1 bytes @ 0x8
  6722   000108                     	ds	1
  6723   000109                     LCD_SetCursor@row_offsets:
  6724                           	callstack 0
  6725   000109                     ??_LCD_Init:
  6726                           
  6727                           ; 1 bytes @ 0x9
  6728   000109                     	ds	1
  6729   00010A                     ___awdiv@counter:
  6730                           	callstack 0
  6731   00010A                     ___awmod@counter:
  6732                           	callstack 0
  6733   00010A                     memcpy@n:
  6734                           	callstack 0
  6735   00010A                     strcpy@d:
  6736                           	callstack 0
  6737   00010A                     ___fleq@ff2:
  6738                           	callstack 0
  6739   00010A                     ___fladd@a:
  6740                           	callstack 0
  6741   00010A                     ??_fputc:
  6742   00010A                     ??___fpclassifyf:
  6743   00010A                     ??_labs:
  6744   00010A                     ??___xxtofl:
  6745   00010A                     ??_read_prec_or_width:
  6746                           
  6747                           ; 1 bytes @ 0xA
  6748   00010A                     	ds	1
  6749   00010B                     ___awdiv@sign:
  6750                           	callstack 0
  6751   00010B                     ___awmod@sign:
  6752                           	callstack 0
  6753                           
  6754                           ; 1 bytes @ 0xB
  6755   00010B                     	ds	1
  6756   00010C                     read_prec_or_width@c:
  6757                           	callstack 0
  6758   00010C                     ___awdiv@quotient:
  6759                           	callstack 0
  6760   00010C                     memcpy@d:
  6761                           	callstack 0
  6762   00010C                     
  6763                           ; 1 bytes @ 0xC
  6764   00010C                     	ds	1
  6765   00010D                     LCD_SetCursor@row:
  6766                           	callstack 0
  6767   00010D                     read_prec_or_width@n:
  6768                           	callstack 0
  6769                           
  6770                           ; 2 bytes @ 0xD
  6771   00010D                     	ds	1
  6772   00010E                     ___xxtofl@sign:
  6773                           	callstack 0
  6774   00010E                     ___fpclassifyf@e:
  6775                           	callstack 0
  6776   00010E                     memcpy@s:
  6777                           	callstack 0
  6778   00010E                     ??___fladd:
  6779   00010E                     ??___fleq:
  6780                           
  6781                           ; 1 bytes @ 0xE
  6782   00010E                     	ds	1
  6783   00010F                     ___xxtofl@exp:
  6784                           	callstack 0
  6785   00010F                     fputs@s:
  6786                           	callstack 0
  6787                           
  6788                           ; 2 bytes @ 0xF
  6789   00010F                     	ds	1
  6790   000110                     memcpy@tmp:
  6791                           	callstack 0
  6792   000110                     ___xxtofl@arg:
  6793                           	callstack 0
  6794   000110                     ___fpclassifyf@u:
  6795                           	callstack 0
  6796                           
  6797                           ; 4 bytes @ 0x10
  6798   000110                     	ds	1
  6799   000111                     fputs@fp:
  6800                           	callstack 0
  6801                           
  6802                           ; 2 bytes @ 0x11
  6803   000111                     	ds	1
  6804   000112                     ___fladd@signs:
  6805                           	callstack 0
  6806                           
  6807                           ; 1 bytes @ 0x12
  6808   000112                     	ds	1
  6809   000113                     ___fladd@aexp:
  6810                           	callstack 0
  6811   000113                     fputs@c:
  6812                           	callstack 0
  6813   000113                     
  6814                           ; 1 bytes @ 0x13
  6815   000113                     	ds	1
  6816   000114                     ?___flmul:
  6817                           	callstack 0
  6818   000114                     ___fladd@bexp:
  6819                           	callstack 0
  6820   000114                     fputs@i:
  6821                           	callstack 0
  6822   000114                     ___flmul@b:
  6823                           	callstack 0
  6824                           
  6825                           ; 4 bytes @ 0x14
  6826   000114                     	ds	1
  6827   000115                     ___fladd@grs:
  6828                           	callstack 0
  6829                           
  6830                           ; 1 bytes @ 0x15
  6831   000115                     	ds	1
  6832   000116                     pad@fp:
  6833                           	callstack 0
  6834                           
  6835                           ; 2 bytes @ 0x16
  6836   000116                     	ds	2
  6837   000118                     pad@buf:
  6838                           	callstack 0
  6839   000118                     ___flmul@a:
  6840                           	callstack 0
  6841                           
  6842                           ; 4 bytes @ 0x18
  6843   000118                     	ds	2
  6844   00011A                     pad@p:
  6845                           	callstack 0
  6846                           
  6847                           ; 2 bytes @ 0x1A
  6848   00011A                     	ds	2
  6849   00011C                     ??___flmul:
  6850   00011C                     ??_pad:
  6851                           
  6852                           ; 1 bytes @ 0x1C
  6853   00011C                     	ds	1
  6854   00011D                     pad@i:
  6855                           	callstack 0
  6856                           
  6857                           ; 2 bytes @ 0x1D
  6858   00011D                     	ds	3
  6859   000120                     ___flmul@sign:
  6860                           	callstack 0
  6861                           
  6862                           ; 1 bytes @ 0x20
  6863   000120                     	ds	1
  6864   000121                     ___flmul@grs:
  6865                           	callstack 0
  6866                           
  6867                           ; 4 bytes @ 0x21
  6868   000121                     	ds	4
  6869   000125                     ___flmul@aexp:
  6870                           	callstack 0
  6871                           
  6872                           ; 1 bytes @ 0x25
  6873   000125                     	ds	1
  6874   000126                     ___flmul@bexp:
  6875                           	callstack 0
  6876                           
  6877                           ; 1 bytes @ 0x26
  6878   000126                     	ds	1
  6879   000127                     ___flmul@prod:
  6880                           	callstack 0
  6881                           
  6882                           ; 4 bytes @ 0x27
  6883   000127                     	ds	4
  6884   00012B                     ___flmul@temp:
  6885                           	callstack 0
  6886                           
  6887                           ; 2 bytes @ 0x2B
  6888   00012B                     	ds	2
  6889   00012D                     ?___fldiv:
  6890                           	callstack 0
  6891   00012D                     ?___flsub:
  6892                           	callstack 0
  6893   00012D                     ___flge@ff1:
  6894                           	callstack 0
  6895   00012D                     ___flsub@b:
  6896                           	callstack 0
  6897   00012D                     ___fldiv@b:
  6898                           	callstack 0
  6899                           
  6900                           ; 4 bytes @ 0x2D
  6901   00012D                     	ds	4
  6902   000131                     ___flge@ff2:
  6903                           	callstack 0
  6904   000131                     ___flsub@a:
  6905                           	callstack 0
  6906   000131                     ___fldiv@a:
  6907                           	callstack 0
  6908                           
  6909                           ; 4 bytes @ 0x31
  6910   000131                     	ds	4
  6911   000135                     ??___fldiv:
  6912   000135                     ??___flge:
  6913                           
  6914                           ; 1 bytes @ 0x35
  6915   000135                     	ds	4
  6916   000139                     ___fldiv@rem:
  6917                           	callstack 0
  6918                           
  6919                           ; 4 bytes @ 0x39
  6920   000139                     	ds	4
  6921   00013D                     ___fldiv@sign:
  6922                           	callstack 0
  6923                           
  6924                           ; 1 bytes @ 0x3D
  6925   00013D                     	ds	1
  6926   00013E                     ___fldiv@new_exp:
  6927                           	callstack 0
  6928                           
  6929                           ; 2 bytes @ 0x3E
  6930   00013E                     	ds	2
  6931   000140                     ___fldiv@grs:
  6932                           	callstack 0
  6933                           
  6934                           ; 4 bytes @ 0x40
  6935   000140                     	ds	4
  6936   000144                     ___fldiv@bexp:
  6937                           	callstack 0
  6938                           
  6939                           ; 1 bytes @ 0x44
  6940   000144                     	ds	1
  6941   000145                     ___fldiv@aexp:
  6942                           	callstack 0
  6943                           
  6944                           ; 1 bytes @ 0x45
  6945   000145                     	ds	1
  6946   000146                     ?_lire_tension:
  6947                           	callstack 0
  6948   000146                     ?_floorf:
  6949                           	callstack 0
  6950   000146                     floorf@x:
  6951                           	callstack 0
  6952                           
  6953                           ; 4 bytes @ 0x46
  6954   000146                     	ds	4
  6955   00014A                     lire_tension@tension:
  6956                           	callstack 0
  6957   00014A                     ??_floorf:
  6958                           
  6959                           ; 1 bytes @ 0x4A
  6960   00014A                     	ds	4
  6961   00014E                     lire_tension@adc_val:
  6962                           	callstack 0
  6963                           
  6964                           ; 2 bytes @ 0x4E
  6965   00014E                     	ds	2
  6966   000150                     ?___fltol:
  6967                           	callstack 0
  6968   000150                     ___fltol@f1:
  6969                           	callstack 0
  6970   000150                     floorf@m:
  6971                           	callstack 0
  6972                           
  6973                           ; 4 bytes @ 0x50
  6974   000150                     	ds	4
  6975   000154                     floorf@e:
  6976                           	callstack 0
  6977   000154                     ??___fltol:
  6978                           
  6979                           ; 1 bytes @ 0x54
  6980   000154                     	ds	2
  6981   000156                     floorf@u:
  6982                           	callstack 0
  6983                           
  6984                           ; 4 bytes @ 0x56
  6985   000156                     	ds	2
  6986   000158                     ___fltol@sign1:
  6987                           	callstack 0
  6988                           
  6989                           ; 1 bytes @ 0x58
  6990   000158                     	ds	1
  6991   000159                     ___fltol@exp1:
  6992                           	callstack 0
  6993                           
  6994                           ; 1 bytes @ 0x59
  6995   000159                     	ds	1
  6996   00015A                     efgtoa@fp:
  6997                           	callstack 0
  6998                           
  6999                           ; 2 bytes @ 0x5A
  7000   00015A                     	ds	2
  7001   00015C                     efgtoa@f:
  7002                           	callstack 0
  7003                           
  7004                           ; 4 bytes @ 0x5C
  7005   00015C                     	ds	4
  7006   000160                     efgtoa@c:
  7007                           	callstack 0
  7008                           
  7009                           ; 1 bytes @ 0x60
  7010   000160                     	ds	1
  7011   000161                     ??_efgtoa:
  7012                           
  7013                           ; 1 bytes @ 0x61
  7014   000161                     	ds	2
  7015   000163                     efgtoa@t:
  7016                           	callstack 0
  7017                           
  7018                           ; 2 bytes @ 0x63
  7019   000163                     	ds	2
  7020   000165                     _efgtoa$2326:
  7021                           	callstack 0
  7022                           
  7023                           ; 2 bytes @ 0x65
  7024   000165                     	ds	2
  7025   000167                     _efgtoa$2332:
  7026                           	callstack 0
  7027                           
  7028                           ; 2 bytes @ 0x67
  7029   000167                     	ds	2
  7030   000169                     efgtoa@ne:
  7031                           	callstack 0
  7032                           
  7033                           ; 2 bytes @ 0x69
  7034   000169                     	ds	2
  7035   00016B                     efgtoa@pp:
  7036                           	callstack 0
  7037                           
  7038                           ; 1 bytes @ 0x6B
  7039   00016B                     	ds	1
  7040   00016C                     efgtoa@esign:
  7041                           	callstack 0
  7042                           
  7043                           ; 1 bytes @ 0x6C
  7044   00016C                     	ds	1
  7045   00016D                     efgtoa@mode:
  7046                           	callstack 0
  7047                           
  7048                           ; 1 bytes @ 0x6D
  7049   00016D                     	ds	1
  7050   00016E                     efgtoa@d:
  7051                           	callstack 0
  7052                           
  7053                           ; 2 bytes @ 0x6E
  7054   00016E                     	ds	2
  7055   000170                     efgtoa@m:
  7056                           	callstack 0
  7057                           
  7058                           ; 2 bytes @ 0x70
  7059   000170                     	ds	2
  7060   000172                     efgtoa@p:
  7061                           	callstack 0
  7062                           
  7063                           ; 2 bytes @ 0x72
  7064   000172                     	ds	2
  7065   000174                     efgtoa@nmode:
  7066                           	callstack 0
  7067                           
  7068                           ; 1 bytes @ 0x74
  7069   000174                     	ds	1
  7070   000175                     efgtoa@w:
  7071                           	callstack 0
  7072                           
  7073                           ; 2 bytes @ 0x75
  7074   000175                     	ds	2
  7075   000177                     efgtoa@ou:
  7076                           	callstack 0
  7077                           
  7078                           ; 4 bytes @ 0x77
  7079   000177                     	ds	4
  7080   00017B                     efgtoa@h:
  7081                           	callstack 0
  7082                           
  7083                           ; 4 bytes @ 0x7B
  7084   00017B                     	ds	4
  7085   00017F                     efgtoa@l:
  7086                           	callstack 0
  7087                           
  7088                           ; 4 bytes @ 0x7F
  7089   00017F                     	ds	4
  7090   000183                     efgtoa@e:
  7091                           	callstack 0
  7092                           
  7093                           ; 2 bytes @ 0x83
  7094   000183                     	ds	2
  7095   000185                     efgtoa@sign:
  7096                           	callstack 0
  7097                           
  7098                           ; 1 bytes @ 0x85
  7099   000185                     	ds	1
  7100   000186                     efgtoa@i:
  7101                           	callstack 0
  7102                           
  7103                           ; 2 bytes @ 0x86
  7104   000186                     	ds	2
  7105   000188                     efgtoa@n:
  7106                           	callstack 0
  7107                           
  7108                           ; 2 bytes @ 0x88
  7109   000188                     	ds	2
  7110   00018A                     efgtoa@g:
  7111                           	callstack 0
  7112                           
  7113                           ; 4 bytes @ 0x8A
  7114   00018A                     	ds	4
  7115   00018E                     efgtoa@u:
  7116                           	callstack 0
  7117                           
  7118                           ; 4 bytes @ 0x8E
  7119   00018E                     	ds	4
  7120   000192                     vfpfcnvrt@fp:
  7121                           	callstack 0
  7122                           
  7123                           ; 2 bytes @ 0x92
  7124   000192                     	ds	2
  7125   000194                     vfpfcnvrt@fmt:
  7126                           	callstack 0
  7127                           
  7128                           ; 2 bytes @ 0x94
  7129   000194                     	ds	2
  7130   000196                     vfpfcnvrt@ap:
  7131                           	callstack 0
  7132                           
  7133                           ; 2 bytes @ 0x96
  7134   000196                     	ds	2
  7135   000198                     ??_vfpfcnvrt:
  7136                           
  7137                           ; 1 bytes @ 0x98
  7138   000198                     	ds	2
  7139   00019A                     vfpfcnvrt@convarg:
  7140                           	callstack 0
  7141                           
  7142                           ; 4 bytes @ 0x9A
  7143   00019A                     	ds	4
  7144   00019E                     vfpfcnvrt@c:
  7145                           	callstack 0
  7146                           
  7147                           ; 1 bytes @ 0x9E
  7148   00019E                     	ds	1
  7149   00019F                     vfpfcnvrt@cp:
  7150                           	callstack 0
  7151                           
  7152                           ; 2 bytes @ 0x9F
  7153   00019F                     	ds	2
  7154   0001A1                     ?_vfprintf:
  7155                           	callstack 0
  7156   0001A1                     vfprintf@fp:
  7157                           	callstack 0
  7158                           
  7159                           ; 2 bytes @ 0xA1
  7160   0001A1                     	ds	2
  7161   0001A3                     vfprintf@fmt:
  7162                           	callstack 0
  7163                           
  7164                           ; 2 bytes @ 0xA3
  7165   0001A3                     	ds	2
  7166   0001A5                     vfprintf@ap:
  7167                           	callstack 0
  7168                           
  7169                           ; 2 bytes @ 0xA5
  7170   0001A5                     	ds	2
  7171   0001A7                     vfprintf@cfmt:
  7172                           	callstack 0
  7173   0001A7                     
  7174                           ; 1 bytes @ 0xA7
  7175   0001A7                     	ds	2
  7176   0001A9                     ?_sprintf:
  7177                           	callstack 0
  7178   0001A9                     sprintf@s:
  7179                           	callstack 0
  7180                           
  7181                           ; 2 bytes @ 0xA9
  7182   0001A9                     	ds	2
  7183   0001AB                     sprintf@fmt:
  7184                           	callstack 0
  7185                           
  7186                           ; 2 bytes @ 0xAB
  7187   0001AB                     	ds	6
  7188   0001B1                     sprintf@ap:
  7189                           	callstack 0
  7190   0001B1                     
  7191                           ; 1 bytes @ 0xB1
  7192   0001B1                     	ds	2
  7193   0001B3                     sprintf@f:
  7194                           	callstack 0
  7195                           
  7196                           ; 11 bytes @ 0xB3
  7197   0001B3                     	ds	11
  7198   0001BE                     ??_LCD_UpdateMenu:
  7199                           
  7200                           ; 1 bytes @ 0xBE
  7201   0001BE                     	ds	2
  7202   0001C0                     LCD_UpdateMenu@buffer:
  7203                           	callstack 0
  7204                           
  7205                           ; 16 bytes @ 0xC0
  7206   0001C0                     	ds	16
  7207   0001D0                     LCD_UpdateMenu@tension:
  7208                           	callstack 0
  7209                           
  7210                           ; 4 bytes @ 0xD0
  7211   0001D0                     	ds	4
  7212   0001D4                     LCD_UpdateMenu@courant:
  7213                           	callstack 0
  7214                           
  7215                           ; 2 bytes @ 0xD4
  7216   0001D4                     	ds	2
  7217   0001D6                     
  7218                           ; 1 bytes @ 0xD6
  7219                           
  7220                           	psect	cstackBANK0
  7221   000060                     __pcstackBANK0:
  7222                           	callstack 0
  7223   000060                     i2efgtoa@t:
  7224                           	callstack 0
  7225                           
  7226                           ; 2 bytes @ 0x0
  7227   000060                     	ds	2
  7228   000062                     i2_efgtoa$2326:
  7229                           	callstack 0
  7230                           
  7231                           ; 2 bytes @ 0x2
  7232   000062                     	ds	2
  7233   000064                     i2_efgtoa$2332:
  7234                           	callstack 0
  7235                           
  7236                           ; 2 bytes @ 0x4
  7237   000064                     	ds	2
  7238   000066                     i2efgtoa@ne:
  7239                           	callstack 0
  7240                           
  7241                           ; 2 bytes @ 0x6
  7242   000066                     	ds	2
  7243   000068                     i2efgtoa@pp:
  7244                           	callstack 0
  7245                           
  7246                           ; 1 bytes @ 0x8
  7247   000068                     	ds	1
  7248   000069                     i2efgtoa@esign:
  7249                           	callstack 0
  7250                           
  7251                           ; 1 bytes @ 0x9
  7252   000069                     	ds	1
  7253   00006A                     i2efgtoa@mode:
  7254                           	callstack 0
  7255                           
  7256                           ; 1 bytes @ 0xA
  7257   00006A                     	ds	1
  7258   00006B                     i2efgtoa@d:
  7259                           	callstack 0
  7260                           
  7261                           ; 2 bytes @ 0xB
  7262   00006B                     	ds	2
  7263   00006D                     i2efgtoa@m:
  7264                           	callstack 0
  7265                           
  7266                           ; 2 bytes @ 0xD
  7267   00006D                     	ds	2
  7268   00006F                     i2efgtoa@p:
  7269                           	callstack 0
  7270                           
  7271                           ; 2 bytes @ 0xF
  7272   00006F                     	ds	2
  7273   000071                     i2efgtoa@nmode:
  7274                           	callstack 0
  7275                           
  7276                           ; 1 bytes @ 0x11
  7277   000071                     	ds	1
  7278   000072                     i2efgtoa@w:
  7279                           	callstack 0
  7280                           
  7281                           ; 2 bytes @ 0x12
  7282   000072                     	ds	2
  7283   000074                     i2efgtoa@ou:
  7284                           	callstack 0
  7285                           
  7286                           ; 4 bytes @ 0x14
  7287   000074                     	ds	4
  7288   000078                     i2efgtoa@h:
  7289                           	callstack 0
  7290                           
  7291                           ; 4 bytes @ 0x18
  7292   000078                     	ds	4
  7293   00007C                     i2efgtoa@l:
  7294                           	callstack 0
  7295                           
  7296                           ; 4 bytes @ 0x1C
  7297   00007C                     	ds	4
  7298   000080                     i2efgtoa@e:
  7299                           	callstack 0
  7300                           
  7301                           ; 2 bytes @ 0x20
  7302   000080                     	ds	2
  7303   000082                     i2efgtoa@sign:
  7304                           	callstack 0
  7305                           
  7306                           ; 1 bytes @ 0x22
  7307   000082                     	ds	1
  7308   000083                     i2efgtoa@i:
  7309                           	callstack 0
  7310                           
  7311                           ; 2 bytes @ 0x23
  7312   000083                     	ds	2
  7313   000085                     i2efgtoa@n:
  7314                           	callstack 0
  7315                           
  7316                           ; 2 bytes @ 0x25
  7317   000085                     	ds	2
  7318   000087                     i2efgtoa@g:
  7319                           	callstack 0
  7320                           
  7321                           ; 4 bytes @ 0x27
  7322   000087                     	ds	4
  7323   00008B                     i2efgtoa@u:
  7324                           	callstack 0
  7325                           
  7326                           ; 4 bytes @ 0x2B
  7327   00008B                     	ds	4
  7328   00008F                     i2vfpfcnvrt@fp:
  7329                           	callstack 0
  7330                           
  7331                           ; 2 bytes @ 0x2F
  7332   00008F                     	ds	2
  7333   000091                     i2vfpfcnvrt@fmt:
  7334                           	callstack 0
  7335                           
  7336                           ; 2 bytes @ 0x31
  7337   000091                     	ds	2
  7338   000093                     i2vfpfcnvrt@ap:
  7339                           	callstack 0
  7340                           
  7341                           ; 2 bytes @ 0x33
  7342   000093                     	ds	2
  7343   000095                     ??i2_vfpfcnvrt:
  7344                           
  7345                           ; 1 bytes @ 0x35
  7346   000095                     	ds	2
  7347   000097                     i2vfpfcnvrt@convarg:
  7348                           	callstack 0
  7349                           
  7350                           ; 4 bytes @ 0x37
  7351   000097                     	ds	4
  7352   00009B                     i2vfpfcnvrt@c:
  7353                           	callstack 0
  7354                           
  7355                           ; 1 bytes @ 0x3B
  7356   00009B                     	ds	1
  7357   00009C                     i2vfpfcnvrt@cp:
  7358                           	callstack 0
  7359                           
  7360                           ; 2 bytes @ 0x3C
  7361   00009C                     	ds	2
  7362   00009E                     ?i2_vfprintf:
  7363                           	callstack 0
  7364   00009E                     i2vfprintf@fp:
  7365                           	callstack 0
  7366                           
  7367                           ; 2 bytes @ 0x3E
  7368   00009E                     	ds	2
  7369   0000A0                     i2vfprintf@fmt:
  7370                           	callstack 0
  7371                           
  7372                           ; 2 bytes @ 0x40
  7373   0000A0                     	ds	2
  7374   0000A2                     i2vfprintf@ap:
  7375                           	callstack 0
  7376                           
  7377                           ; 2 bytes @ 0x42
  7378   0000A2                     	ds	2
  7379   0000A4                     i2vfprintf@cfmt:
  7380                           	callstack 0
  7381                           
  7382                           ; 2 bytes @ 0x44
  7383   0000A4                     	ds	2
  7384   0000A6                     ?i2_sprintf:
  7385                           	callstack 0
  7386   0000A6                     i2sprintf@s:
  7387                           	callstack 0
  7388                           
  7389                           ; 2 bytes @ 0x46
  7390   0000A6                     	ds	2
  7391   0000A8                     i2sprintf@fmt:
  7392                           	callstack 0
  7393                           
  7394                           ; 2 bytes @ 0x48
  7395   0000A8                     	ds	6
  7396   0000AE                     i2sprintf@ap:
  7397                           	callstack 0
  7398                           
  7399                           ; 2 bytes @ 0x4E
  7400   0000AE                     	ds	2
  7401   0000B0                     i2sprintf@f:
  7402                           	callstack 0
  7403                           
  7404                           ; 11 bytes @ 0x50
  7405   0000B0                     	ds	11
  7406   0000BB                     ??i2_LCD_UpdateMenu:
  7407                           
  7408                           ; 1 bytes @ 0x5B
  7409   0000BB                     	ds	2
  7410   0000BD                     i2LCD_UpdateMenu@buffer:
  7411                           	callstack 0
  7412                           
  7413                           ; 16 bytes @ 0x5D
  7414   0000BD                     	ds	16
  7415   0000CD                     i2LCD_UpdateMenu@tension:
  7416                           	callstack 0
  7417                           
  7418                           ; 4 bytes @ 0x6D
  7419   0000CD                     	ds	4
  7420   0000D1                     i2LCD_UpdateMenu@courant:
  7421                           	callstack 0
  7422                           
  7423                           ; 2 bytes @ 0x71
  7424   0000D1                     	ds	2
  7425   0000D3                     ??_int_BP1:
  7426   0000D3                     ??_int_BP2:
  7427   0000D3                     ??_int_BP3:
  7428                           
  7429                           ; 1 bytes @ 0x73
  7430   0000D3                     	ds	2
  7431                           
  7432                           	psect	cstackCOMRAM
  7433   000001                     __pcstackCOMRAM:
  7434                           	callstack 0
  7435   000001                     ?i2_ADC_ConversionResultGet:
  7436                           	callstack 0
  7437   000001                     ?i2___awdiv:
  7438                           	callstack 0
  7439   000001                     ?i2___awmod:
  7440                           	callstack 0
  7441   000001                     ?i2_read_prec_or_width:
  7442                           	callstack 0
  7443   000001                     ?i2___fpclassifyf:
  7444                           	callstack 0
  7445   000001                     ?i2___flneg:
  7446                           	callstack 0
  7447   000001                     ?i2___fladd:
  7448                           	callstack 0
  7449   000001                     ?i2___xxtofl:
  7450                           	callstack 0
  7451   000001                     ?i2_labs:
  7452                           	callstack 0
  7453   000001                     send_bit@bit:
  7454                           	callstack 0
  7455   000001                     i2ADC_ChannelSelect@channel:
  7456                           	callstack 0
  7457   000001                     TMR1_CounterSet@timerVal:
  7458                           	callstack 0
  7459   000001                     i2___awdiv@dividend:
  7460                           	callstack 0
  7461   000001                     i2___awmod@dividend:
  7462                           	callstack 0
  7463   000001                     i2read_prec_or_width@fmt:
  7464                           	callstack 0
  7465   000001                     i2memcpy@d1:
  7466                           	callstack 0
  7467   000001                     i2fputc@c:
  7468                           	callstack 0
  7469   000001                     i2strcpy@dest:
  7470                           	callstack 0
  7471   000001                     i2___fleq@ff1:
  7472                           	callstack 0
  7473   000001                     i2___flneg@f1:
  7474                           	callstack 0
  7475   000001                     i2___fladd@b:
  7476                           	callstack 0
  7477   000001                     i2___xxtofl@val:
  7478                           	callstack 0
  7479   000001                     i2___fpclassifyf@x:
  7480                           	callstack 0
  7481   000001                     i2labs@a:
  7482                           	callstack 0
  7483   000001                     ??_TMR1_handler:
  7484   000001                     ??i2_LCD_Command:
  7485   000001                     ??i2_LCD_Char:
  7486   000001                     
  7487                           ; 1 bytes @ 0x0
  7488   000001                     	ds	1
  7489   000002                     send_byte@byte:
  7490                           	callstack 0
  7491   000002                     i2LCD_Command@cmd:
  7492                           	callstack 0
  7493   000002                     i2LCD_Char@data:
  7494                           	callstack 0
  7495   000002                     
  7496                           ; 1 bytes @ 0x1
  7497   000002                     	ds	1
  7498   000003                     TMR1_CounterSet@onState:
  7499                           	callstack 0
  7500   000003                     send_byte@i:
  7501                           	callstack 0
  7502   000003                     i2LCD_SetCursor@column:
  7503                           	callstack 0
  7504   000003                     i2LCD_String@str:
  7505                           	callstack 0
  7506   000003                     i2___awdiv@divisor:
  7507                           	callstack 0
  7508   000003                     i2___awmod@divisor:
  7509                           	callstack 0
  7510   000003                     i2read_prec_or_width@ap:
  7511                           	callstack 0
  7512   000003                     i2memcpy@s1:
  7513                           	callstack 0
  7514   000003                     i2fputc@fp:
  7515                           	callstack 0
  7516   000003                     i2strcpy@src:
  7517                           	callstack 0
  7518   000003                     ??i2_LCD_Clear:
  7519   000003                     ??i2_ADC_ConversionResultGet:
  7520                           
  7521                           ; 1 bytes @ 0x2
  7522   000003                     	ds	1
  7523   000004                     send_color@g:
  7524                           	callstack 0
  7525   000004                     i2LCD_SetCursor@row_offsets:
  7526                           	callstack 0
  7527   000004                     ??i2_LCD_Init:
  7528                           
  7529                           ; 1 bytes @ 0x3
  7530   000004                     	ds	1
  7531   000005                     send_color@b:
  7532                           	callstack 0
  7533   000005                     i2___awdiv@counter:
  7534                           	callstack 0
  7535   000005                     i2___awmod@counter:
  7536                           	callstack 0
  7537   000005                     i2memcpy@n:
  7538                           	callstack 0
  7539   000005                     i2strcpy@d:
  7540                           	callstack 0
  7541   000005                     i2___fleq@ff2:
  7542                           	callstack 0
  7543   000005                     i2___fladd@a:
  7544                           	callstack 0
  7545   000005                     ??i2___xxtofl:
  7546   000005                     ??i2_read_prec_or_width:
  7547   000005                     ??i2___fpclassifyf:
  7548   000005                     ??i2_labs:
  7549   000005                     ??i2_fputc:
  7550   000005                     
  7551                           ; 1 bytes @ 0x4
  7552   000005                     	ds	1
  7553   000006                     send_color@r:
  7554                           	callstack 0
  7555   000006                     i2___awdiv@sign:
  7556                           	callstack 0
  7557   000006                     i2___awmod@sign:
  7558                           	callstack 0
  7559   000006                     
  7560                           ; 1 bytes @ 0x5
  7561   000006                     	ds	1
  7562   000007                     i2read_prec_or_width@c:
  7563                           	callstack 0
  7564   000007                     i2___awdiv@quotient:
  7565                           	callstack 0
  7566   000007                     i2memcpy@d:
  7567                           	callstack 0
  7568   000007                     ??_send_leds:
  7569   000007                     
  7570                           ; 1 bytes @ 0x6
  7571   000007                     	ds	1
  7572   000008                     i2LCD_SetCursor@row:
  7573                           	callstack 0
  7574   000008                     i2read_prec_or_width@n:
  7575                           	callstack 0
  7576                           
  7577                           ; 2 bytes @ 0x7
  7578   000008                     	ds	1
  7579   000009                     i2___xxtofl@sign:
  7580                           	callstack 0
  7581   000009                     i2___fpclassifyf@e:
  7582                           	callstack 0
  7583   000009                     i2memcpy@s:
  7584                           	callstack 0
  7585   000009                     ??i2___fleq:
  7586   000009                     ??i2___fladd:
  7587                           
  7588                           ; 1 bytes @ 0x8
  7589   000009                     	ds	1
  7590   00000A                     i2___xxtofl@exp:
  7591                           	callstack 0
  7592   00000A                     i2fputs@s:
  7593                           	callstack 0
  7594                           
  7595                           ; 2 bytes @ 0x9
  7596   00000A                     	ds	1
  7597   00000B                     i2memcpy@tmp:
  7598                           	callstack 0
  7599   00000B                     i2___xxtofl@arg:
  7600                           	callstack 0
  7601   00000B                     i2___fpclassifyf@u:
  7602                           	callstack 0
  7603                           
  7604                           ; 4 bytes @ 0xA
  7605   00000B                     	ds	1
  7606   00000C                     i2fputs@fp:
  7607                           	callstack 0
  7608                           
  7609                           ; 2 bytes @ 0xB
  7610   00000C                     	ds	1
  7611   00000D                     i2___fladd@signs:
  7612                           	callstack 0
  7613                           
  7614                           ; 1 bytes @ 0xC
  7615   00000D                     	ds	1
  7616   00000E                     i2___fladd@aexp:
  7617                           	callstack 0
  7618   00000E                     i2fputs@c:
  7619                           	callstack 0
  7620   00000E                     
  7621                           ; 1 bytes @ 0xD
  7622   00000E                     	ds	1
  7623   00000F                     ?i2___flmul:
  7624                           	callstack 0
  7625   00000F                     i2___fladd@bexp:
  7626                           	callstack 0
  7627   00000F                     i2fputs@i:
  7628                           	callstack 0
  7629   00000F                     i2___flmul@b:
  7630                           	callstack 0
  7631                           
  7632                           ; 4 bytes @ 0xE
  7633   00000F                     	ds	1
  7634   000010                     i2___fladd@grs:
  7635                           	callstack 0
  7636                           
  7637                           ; 1 bytes @ 0xF
  7638   000010                     	ds	1
  7639   000011                     i2pad@fp:
  7640                           	callstack 0
  7641                           
  7642                           ; 2 bytes @ 0x10
  7643   000011                     	ds	2
  7644   000013                     send_leds@i:
  7645                           	callstack 0
  7646   000013                     i2pad@buf:
  7647                           	callstack 0
  7648   000013                     i2___flmul@a:
  7649                           	callstack 0
  7650                           
  7651                           ; 4 bytes @ 0x12
  7652   000013                     	ds	1
  7653   000014                     send_leds@j:
  7654                           	callstack 0
  7655                           
  7656                           ; 1 bytes @ 0x13
  7657   000014                     	ds	1
  7658   000015                     on_leds@g:
  7659                           	callstack 0
  7660   000015                     i2pad@p:
  7661                           	callstack 0
  7662   000015                     ??_off_leds:
  7663                           
  7664                           ; 1 bytes @ 0x14
  7665   000015                     	ds	1
  7666   000016                     on_leds@b:
  7667                           	callstack 0
  7668                           
  7669                           ; 1 bytes @ 0x15
  7670   000016                     	ds	1
  7671   000017                     ??_on_leds:
  7672   000017                     ??i2___flmul:
  7673   000017                     ??i2_pad:
  7674                           
  7675                           ; 1 bytes @ 0x16
  7676   000017                     	ds	1
  7677   000018                     i2pad@i:
  7678                           	callstack 0
  7679                           
  7680                           ; 2 bytes @ 0x17
  7681   000018                     	ds	1
  7682   000019                     off_leds@i:
  7683                           	callstack 0
  7684                           
  7685                           ; 1 bytes @ 0x18
  7686   000019                     	ds	1
  7687   00001A                     off_leds@j:
  7688                           	callstack 0
  7689                           
  7690                           ; 1 bytes @ 0x19
  7691   00001A                     	ds	1
  7692   00001B                     on_leds@r:
  7693                           	callstack 0
  7694   00001B                     i2___flmul@sign:
  7695                           	callstack 0
  7696                           
  7697                           ; 1 bytes @ 0x1A
  7698   00001B                     	ds	1
  7699   00001C                     on_leds@i:
  7700                           	callstack 0
  7701   00001C                     i2___flmul@grs:
  7702                           	callstack 0
  7703                           
  7704                           ; 4 bytes @ 0x1B
  7705   00001C                     	ds	1
  7706   00001D                     on_leds@j:
  7707                           	callstack 0
  7708                           
  7709                           ; 1 bytes @ 0x1C
  7710   00001D                     	ds	1
  7711   00001E                     ??_appliquer_action:
  7712                           
  7713                           ; 1 bytes @ 0x1D
  7714   00001E                     	ds	2
  7715   000020                     i2___flmul@aexp:
  7716                           	callstack 0
  7717                           
  7718                           ; 1 bytes @ 0x1F
  7719   000020                     	ds	1
  7720   000021                     i2___flmul@bexp:
  7721                           	callstack 0
  7722                           
  7723                           ; 1 bytes @ 0x20
  7724   000021                     	ds	1
  7725   000022                     appliquer_action@color:
  7726                           	callstack 0
  7727   000022                     i2___flmul@prod:
  7728                           	callstack 0
  7729                           
  7730                           ; 4 bytes @ 0x21
  7731   000022                     	ds	4
  7732   000026                     i2___flmul@temp:
  7733                           	callstack 0
  7734                           
  7735                           ; 2 bytes @ 0x25
  7736   000026                     	ds	2
  7737   000028                     ?i2___flsub:
  7738                           	callstack 0
  7739   000028                     ?i2___fldiv:
  7740                           	callstack 0
  7741   000028                     i2___flge@ff1:
  7742                           	callstack 0
  7743   000028                     i2___flsub@b:
  7744                           	callstack 0
  7745   000028                     i2___fldiv@b:
  7746                           	callstack 0
  7747                           
  7748                           ; 4 bytes @ 0x27
  7749   000028                     	ds	4
  7750   00002C                     i2___flge@ff2:
  7751                           	callstack 0
  7752   00002C                     i2___flsub@a:
  7753                           	callstack 0
  7754   00002C                     i2___fldiv@a:
  7755                           	callstack 0
  7756                           
  7757                           ; 4 bytes @ 0x2B
  7758   00002C                     	ds	4
  7759   000030                     ??i2___flge:
  7760   000030                     ??i2___fldiv:
  7761                           
  7762                           ; 1 bytes @ 0x2F
  7763   000030                     	ds	4
  7764   000034                     i2___fldiv@rem:
  7765                           	callstack 0
  7766                           
  7767                           ; 4 bytes @ 0x33
  7768   000034                     	ds	4
  7769   000038                     i2___fldiv@sign:
  7770                           	callstack 0
  7771                           
  7772                           ; 1 bytes @ 0x37
  7773   000038                     	ds	1
  7774   000039                     i2___fldiv@new_exp:
  7775                           	callstack 0
  7776                           
  7777                           ; 2 bytes @ 0x38
  7778   000039                     	ds	2
  7779   00003B                     i2___fldiv@grs:
  7780                           	callstack 0
  7781                           
  7782                           ; 4 bytes @ 0x3A
  7783   00003B                     	ds	4
  7784   00003F                     i2___fldiv@bexp:
  7785                           	callstack 0
  7786                           
  7787                           ; 1 bytes @ 0x3E
  7788   00003F                     	ds	1
  7789   000040                     i2___fldiv@aexp:
  7790                           	callstack 0
  7791                           
  7792                           ; 1 bytes @ 0x3F
  7793   000040                     	ds	1
  7794   000041                     ?i2_lire_tension:
  7795                           	callstack 0
  7796   000041                     ?i2_floorf:
  7797                           	callstack 0
  7798   000041                     i2floorf@x:
  7799                           	callstack 0
  7800                           
  7801                           ; 4 bytes @ 0x40
  7802   000041                     	ds	4
  7803   000045                     i2lire_tension@tension:
  7804                           	callstack 0
  7805   000045                     ??i2_floorf:
  7806                           
  7807                           ; 1 bytes @ 0x44
  7808   000045                     	ds	4
  7809   000049                     i2lire_tension@adc_val:
  7810                           	callstack 0
  7811                           
  7812                           ; 2 bytes @ 0x48
  7813   000049                     	ds	2
  7814   00004B                     ?i2___fltol:
  7815                           	callstack 0
  7816   00004B                     i2___fltol@f1:
  7817                           	callstack 0
  7818   00004B                     i2floorf@m:
  7819                           	callstack 0
  7820                           
  7821                           ; 4 bytes @ 0x4A
  7822   00004B                     	ds	4
  7823   00004F                     i2floorf@e:
  7824                           	callstack 0
  7825   00004F                     ??i2___fltol:
  7826                           
  7827                           ; 1 bytes @ 0x4E
  7828   00004F                     	ds	2
  7829   000051                     i2floorf@u:
  7830                           	callstack 0
  7831                           
  7832                           ; 4 bytes @ 0x50
  7833   000051                     	ds	2
  7834   000053                     i2___fltol@sign1:
  7835                           	callstack 0
  7836                           
  7837                           ; 1 bytes @ 0x52
  7838   000053                     	ds	1
  7839   000054                     i2___fltol@exp1:
  7840                           	callstack 0
  7841                           
  7842                           ; 1 bytes @ 0x53
  7843   000054                     	ds	1
  7844   000055                     i2efgtoa@fp:
  7845                           	callstack 0
  7846                           
  7847                           ; 2 bytes @ 0x54
  7848   000055                     	ds	2
  7849   000057                     i2efgtoa@f:
  7850                           	callstack 0
  7851                           
  7852                           ; 4 bytes @ 0x56
  7853   000057                     	ds	4
  7854   00005B                     i2efgtoa@c:
  7855                           	callstack 0
  7856                           
  7857                           ; 1 bytes @ 0x5A
  7858   00005B                     	ds	1
  7859   00005C                     ??i2_efgtoa:
  7860                           
  7861                           ; 1 bytes @ 0x5B
  7862   00005C                     	ds	2
  7863   00005E                     
  7864                           ; 1 bytes @ 0x5D
  7865 ;;
  7866 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  7867 ;;
  7868 ;; *************** function _main *****************
  7869 ;; Defined at:
  7870 ;;		line 413 in file "main.c"
  7871 ;; Parameters:    Size  Location     Type
  7872 ;;		None
  7873 ;; Auto vars:     Size  Location     Type
  7874 ;;  frame           1    0        unsigned char 
  7875 ;; Return value:  Size  Location     Type
  7876 ;;                  2  874[None  ] int 
  7877 ;; Registers used:
  7878 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7879 ;; Tracked objects:
  7880 ;;		On entry : 0/0
  7881 ;;		On exit  : 0/0
  7882 ;;		Unchanged: 0/0
  7883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7884 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7885 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7886 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7887 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7888 ;;Total ram usage:        0 bytes
  7889 ;; Hardware stack levels required when called: 22
  7890 ;; This function calls:
  7891 ;;		_ADC_Initialize
  7892 ;;		_BP1_SetInterruptHandler
  7893 ;;		_BP2_SetInterruptHandler
  7894 ;;		_BP3_SetInterruptHandler
  7895 ;;		_LCD_UpdateMenu
  7896 ;;		_SYSTEM_Initialize
  7897 ;;		_TMR1_OverflowCallbackRegister
  7898 ;; This function is called by:
  7899 ;;		Startup code after reset
  7900 ;; This function uses a non-reentrant model
  7901 ;;
  7902                           
  7903                           	psect	text0
  7904   005C06                     __ptext0:
  7905                           	callstack 0
  7906   005C06                     _main:
  7907                           	callstack 9
  7908   005C06                     
  7909                           ;main.c: 415:     SYSTEM_Initialize();
  7910   005C06  EC2D  F032         	call	_SYSTEM_Initialize	;wreg free
  7911                           
  7912                           ;main.c: 416:     ADC_Initialize();
  7913   005C0A  EC22  F02D         	call	_ADC_Initialize	;wreg free
  7914                           
  7915                           ;main.c: 417:     TMR1_OverflowCallbackRegister(TMR1_handler);
  7916   005C0E  0EAE               	movlw	low _TMR1_handler
  7917   005C10  0101               	movlb	1	; () banked
  7918   005C12  6F06               	movwf	TMR1_OverflowCallbackRegister@CallbackHandler& (0+255),b
  7919   005C14  0E5D               	movlw	high _TMR1_handler
  7920   005C16  6F07               	movwf	(TMR1_OverflowCallbackRegister@CallbackHandler+1)& (0+255),b
  7921   005C18  EC72  F032         	call	_TMR1_OverflowCallbackRegister	;wreg free
  7922                           
  7923                           ;main.c: 419:    BP1_SetInterruptHandler(int_BP1);
  7924   005C1C  0EE6               	movlw	low _int_BP1
  7925   005C1E  0101               	movlb	1	; () banked
  7926   005C20  6F06               	movwf	BP1_SetInterruptHandler@InterruptHandler& (0+255),b
  7927   005C22  0E59               	movlw	high _int_BP1
  7928   005C24  6F07               	movwf	(BP1_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  7929   005C26  EC81  F032         	call	_BP1_SetInterruptHandler	;wreg free
  7930                           
  7931                           ;main.c: 420:    BP2_SetInterruptHandler(int_BP2);
  7932   005C2A  0E10               	movlw	low _int_BP2
  7933   005C2C  0101               	movlb	1	; () banked
  7934   005C2E  6F06               	movwf	BP2_SetInterruptHandler@InterruptHandler& (0+255),b
  7935   005C30  0E43               	movlw	high _int_BP2
  7936   005C32  6F07               	movwf	(BP2_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  7937   005C34  EC7C  F032         	call	_BP2_SetInterruptHandler	;wreg free
  7938                           
  7939                           ;main.c: 421:    BP3_SetInterruptHandler(int_BP3);
  7940   005C38  0E62               	movlw	low _int_BP3
  7941   005C3A  0101               	movlb	1	; () banked
  7942   005C3C  6F06               	movwf	BP3_SetInterruptHandler@InterruptHandler& (0+255),b
  7943   005C3E  0E63               	movlw	high _int_BP3
  7944   005C40  6F07               	movwf	(BP3_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  7945   005C42  EC77  F032         	call	_BP3_SetInterruptHandler	;wreg free
  7946   005C46                     
  7947                           ;main.c: 423:     (INTCON0bits.GIE = 1);
  7948   005C46  8ED2               	bsf	210,7,c	;volatile
  7949   005C48                     
  7950                           ;main.c: 424:     TRISBbits.TRISB5 = 0;
  7951   005C48  9AC3               	bcf	195,5,c	;volatile
  7952   005C4A                     
  7953                           ;main.c: 425:     LATBbits.LATB5 = 0;
  7954   005C4A  9ABB               	bcf	187,5,c	;volatile
  7955   005C4C                     
  7956                           ;main.c: 426:     TRISAbits.TRISA0 = 0;
  7957   005C4C  90C2               	bcf	194,0,c	;volatile
  7958   005C4E                     
  7959                           ;main.c: 427:     LATAbits.LATA0 = 0;
  7960   005C4E  90BA               	bcf	186,0,c	;volatile
  7961   005C50                     
  7962                           ;main.c: 432:     LCD_UpdateMenu();
  7963   005C50  ECD8  F017         	call	_LCD_UpdateMenu	;wreg free
  7964   005C54                     l875:
  7965   005C54  EF2A  F02E         	goto	l875
  7966   005C58  EF0D  F000         	goto	start
  7967   005C5C                     __end_of_main:
  7968                           	callstack 0
  7969                           
  7970 ;; *************** function _TMR1_OverflowCallbackRegister *****************
  7971 ;; Defined at:
  7972 ;;		line 215 in file "mcc_generated_files/timer/src/tmr1.c"
  7973 ;; Parameters:    Size  Location     Type
  7974 ;;  CallbackHand    2    6[BANK1 ] PTR FTN()void 
  7975 ;;		 -> TMR1_handler(1), 
  7976 ;; Auto vars:     Size  Location     Type
  7977 ;;		None
  7978 ;; Return value:  Size  Location     Type
  7979 ;;                  1    wreg      void 
  7980 ;; Registers used:
  7981 ;;		wreg, status,2, status,0
  7982 ;; Tracked objects:
  7983 ;;		On entry : 0/0
  7984 ;;		On exit  : 0/0
  7985 ;;		Unchanged: 0/0
  7986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7987 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7988 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7989 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7990 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7991 ;;Total ram usage:        2 bytes
  7992 ;; Hardware stack levels used: 1
  7993 ;; Hardware stack levels required when called: 13
  7994 ;; This function calls:
  7995 ;;		Nothing
  7996 ;; This function is called by:
  7997 ;;		_main
  7998 ;; This function uses a non-reentrant model
  7999 ;;
  8000                           
  8001                           	psect	text1
  8002   0064E4                     __ptext1:
  8003                           	callstack 0
  8004   0064E4                     _TMR1_OverflowCallbackRegister:
  8005                           	callstack 17
  8006   0064E4                     
  8007                           ;mcc_generated_files/timer/src/tmr1.c: 215: void TMR1_OverflowCallbackRegister(void (*Ca
      +                          llbackHandler)(void));mcc_generated_files/timer/src/tmr1.c: 216: {;mcc_generated_files/t
      +                          imer/src/tmr1.c: 217:     TMR1_OverflowCallback = CallbackHandler;
  8008   0064E4  C106  F0ED         	movff	TMR1_OverflowCallbackRegister@CallbackHandler,_TMR1_OverflowCallback
  8009   0064E8  C107  F0EE         	movff	TMR1_OverflowCallbackRegister@CallbackHandler+1,_TMR1_OverflowCallback+1
  8010   0064EC  0012               	return		;funcret
  8011   0064EE                     __end_of_TMR1_OverflowCallbackRegister:
  8012                           	callstack 0
  8013                           
  8014 ;; *************** function _SYSTEM_Initialize *****************
  8015 ;; Defined at:
  8016 ;;		line 40 in file "mcc_generated_files/system/src/system.c"
  8017 ;; Parameters:    Size  Location     Type
  8018 ;;		None
  8019 ;; Auto vars:     Size  Location     Type
  8020 ;;		None
  8021 ;; Return value:  Size  Location     Type
  8022 ;;                  1    wreg      void 
  8023 ;; Registers used:
  8024 ;;		wreg, status,2, status,0, cstack
  8025 ;; Tracked objects:
  8026 ;;		On entry : 0/0
  8027 ;;		On exit  : 0/0
  8028 ;;		Unchanged: 0/0
  8029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8030 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8031 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8032 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8033 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8034 ;;Total ram usage:        0 bytes
  8035 ;; Hardware stack levels used: 1
  8036 ;; Hardware stack levels required when called: 15
  8037 ;; This function calls:
  8038 ;;		_ADC_Initialize
  8039 ;;		_CLOCK_Initialize
  8040 ;;		_INTERRUPT_Initialize
  8041 ;;		_PIN_MANAGER_Initialize
  8042 ;;		_TMR1_Initialize
  8043 ;; This function is called by:
  8044 ;;		_main
  8045 ;; This function uses a non-reentrant model
  8046 ;;
  8047                           
  8048                           	psect	text2
  8049   00645A                     __ptext2:
  8050                           	callstack 0
  8051   00645A                     _SYSTEM_Initialize:
  8052                           	callstack 15
  8053   00645A                     
  8054                           ;mcc_generated_files/system/src/system.c: 42:     CLOCK_Initialize();
  8055   00645A  EC63  F032         	call	_CLOCK_Initialize	;wreg free
  8056   00645E                     
  8057                           ;mcc_generated_files/system/src/system.c: 43:     PIN_MANAGER_Initialize();
  8058   00645E  EC9B  F02B         	call	_PIN_MANAGER_Initialize	;wreg free
  8059   006462                     
  8060                           ;mcc_generated_files/system/src/system.c: 44:     ADC_Initialize();
  8061   006462  EC22  F02D         	call	_ADC_Initialize	;wreg free
  8062   006466                     
  8063                           ;mcc_generated_files/system/src/system.c: 45:     TMR1_Initialize();
  8064   006466  EC18  F030         	call	_TMR1_Initialize	;wreg free
  8065   00646A                     
  8066                           ;mcc_generated_files/system/src/system.c: 46:     INTERRUPT_Initialize();
  8067   00646A  EC59  F030         	call	_INTERRUPT_Initialize	;wreg free
  8068   00646E  0012               	return		;funcret
  8069   006470                     __end_of_SYSTEM_Initialize:
  8070                           	callstack 0
  8071                           
  8072 ;; *************** function _TMR1_Initialize *****************
  8073 ;; Defined at:
  8074 ;;		line 48 in file "mcc_generated_files/timer/src/tmr1.c"
  8075 ;; Parameters:    Size  Location     Type
  8076 ;;		None
  8077 ;; Auto vars:     Size  Location     Type
  8078 ;;		None
  8079 ;; Return value:  Size  Location     Type
  8080 ;;                  1    wreg      void 
  8081 ;; Registers used:
  8082 ;;		wreg, status,2, status,0
  8083 ;; Tracked objects:
  8084 ;;		On entry : 0/0
  8085 ;;		On exit  : 0/0
  8086 ;;		Unchanged: 0/0
  8087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8088 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8089 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8090 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8091 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8092 ;;Total ram usage:        2 bytes
  8093 ;; Hardware stack levels used: 1
  8094 ;; Hardware stack levels required when called: 13
  8095 ;; This function calls:
  8096 ;;		Nothing
  8097 ;; This function is called by:
  8098 ;;		_SYSTEM_Initialize
  8099 ;; This function uses a non-reentrant model
  8100 ;;
  8101                           
  8102                           	psect	text3
  8103   006030                     __ptext3:
  8104                           	callstack 0
  8105   006030                     _TMR1_Initialize:
  8106                           	callstack 16
  8107   006030                     
  8108                           ;mcc_generated_files/timer/src/tmr1.c: 50:     T1CONbits.TMR1ON = 0U;
  8109   006030  90B2               	bcf	178,0,c	;volatile
  8110                           
  8111                           ;mcc_generated_files/timer/src/tmr1.c: 52:     T1GCON = (0 << 0x3)
  8112   006032  6AB3               	clrf	179,c	;volatile
  8113                           
  8114                           ;mcc_generated_files/timer/src/tmr1.c: 58:     T1GATE = (0 << 0x0);
  8115   006034  6AB4               	clrf	180,c	;volatile
  8116   006036                     
  8117                           ;mcc_generated_files/timer/src/tmr1.c: 60:     T1CLK = (4 << 0x0);
  8118   006036  0E04               	movlw	4
  8119   006038  6EB5               	movwf	181,c	;volatile
  8120                           
  8121                           ;mcc_generated_files/timer/src/tmr1.c: 62:     TMR1H = 0xF3;
  8122   00603A  0EF3               	movlw	243
  8123   00603C  6EB1               	movwf	177,c	;volatile
  8124                           
  8125                           ;mcc_generated_files/timer/src/tmr1.c: 63:     TMR1L = 0xE3;
  8126   00603E  0EE3               	movlw	227
  8127   006040  6EB0               	movwf	176,c	;volatile
  8128                           
  8129                           ;mcc_generated_files/timer/src/tmr1.c: 65:     timer1ReloadVal=((uint16_t)TMR1H << 8) | 
      +                          TMR1L;
  8130   006042  50B1               	movf	177,w,c	;volatile
  8131   006044  0101               	movlb	1	; () banked
  8132   006046  6F06               	movwf	??_TMR1_Initialize& (0+255),b
  8133   006048  50B0               	movf	176,w,c	;volatile
  8134   00604A  0100               	movlb	0	; () banked
  8135   00604C  6FE3               	movwf	_timer1ReloadVal& (0+255),b	;volatile
  8136   00604E  C106  F0E4         	movff	??_TMR1_Initialize,_timer1ReloadVal+1	;volatile
  8137   006052                     
  8138                           ; BSR set to: 0
  8139                           ;mcc_generated_files/timer/src/tmr1.c: 67:     TMR1_OverflowCallback = TMR1_DefaultOverf
      +                          lowCallback;
  8140   006052  0E4E               	movlw	low _TMR1_DefaultOverflowCallback
  8141   006054  6FED               	movwf	_TMR1_OverflowCallback& (0+255),b
  8142   006056  0E65               	movlw	high _TMR1_DefaultOverflowCallback
  8143   006058  6FEE               	movwf	(_TMR1_OverflowCallback+1)& (0+255),b
  8144   00605A                     
  8145                           ; BSR set to: 0
  8146                           ;mcc_generated_files/timer/src/tmr1.c: 68:     TMR1_GateCallback = TMR1_DefaultGateCallb
      +                          ack;
  8147   00605A  0E00               	movlw	0
  8148   00605C  0101               	movlb	1	; () banked
  8149   00605E  6FD6               	movwf	_TMR1_GateCallback& (0+255),b
  8150   006060  0E00               	movlw	0
  8151   006062  6FD7               	movwf	(_TMR1_GateCallback+1)& (0+255),b
  8152   006064                     
  8153                           ; BSR set to: 1
  8154                           ;mcc_generated_files/timer/src/tmr1.c: 70:  PIR4bits.TMR1IF = 0U;
  8155   006064  0139               	movlb	57	; () banked
  8156   006066  91A4               	bcf	164,0,b	;volatile
  8157   006068                     
  8158                           ; BSR set to: 57
  8159                           ;mcc_generated_files/timer/src/tmr1.c: 71:  PIE4bits.TMR1IE = 1U;
  8160   006068  8194               	bsf	148,0,b	;volatile
  8161   00606A                     
  8162                           ; BSR set to: 57
  8163                           ;mcc_generated_files/timer/src/tmr1.c: 72:  PIR4bits.TMR1GIF = 0U;
  8164   00606A  93A4               	bcf	164,1,b	;volatile
  8165                           
  8166                           ;mcc_generated_files/timer/src/tmr1.c: 74:     T1CON = (1 << 0x0)
  8167   00606C  0E05               	movlw	5
  8168   00606E  6EB2               	movwf	178,c	;volatile
  8169   006070                     
  8170                           ; BSR set to: 57
  8171   006070  0012               	return		;funcret
  8172   006072                     __end_of_TMR1_Initialize:
  8173                           	callstack 0
  8174                           
  8175 ;; *************** function _PIN_MANAGER_Initialize *****************
  8176 ;; Defined at:
  8177 ;;		line 41 in file "mcc_generated_files/system/src/pins.c"
  8178 ;; Parameters:    Size  Location     Type
  8179 ;;		None
  8180 ;; Auto vars:     Size  Location     Type
  8181 ;;		None
  8182 ;; Return value:  Size  Location     Type
  8183 ;;                  1    wreg      void 
  8184 ;; Registers used:
  8185 ;;		wreg, status,2, status,0, cstack
  8186 ;; Tracked objects:
  8187 ;;		On entry : 0/0
  8188 ;;		On exit  : 0/0
  8189 ;;		Unchanged: 0/0
  8190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8191 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8192 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8193 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8194 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8195 ;;Total ram usage:        0 bytes
  8196 ;; Hardware stack levels used: 1
  8197 ;; Hardware stack levels required when called: 14
  8198 ;; This function calls:
  8199 ;;		_BP1_SetInterruptHandler
  8200 ;;		_BP2_SetInterruptHandler
  8201 ;;		_BP3_SetInterruptHandler
  8202 ;; This function is called by:
  8203 ;;		_SYSTEM_Initialize
  8204 ;; This function uses a non-reentrant model
  8205 ;;
  8206                           
  8207                           	psect	text4
  8208   005736                     __ptext4:
  8209                           	callstack 0
  8210   005736                     _PIN_MANAGER_Initialize:
  8211                           	callstack 15
  8212   005736                     
  8213                           ;mcc_generated_files/system/src/pins.c: 46:     LATA = 0x0;
  8214   005736  6ABA               	clrf	186,c	;volatile
  8215                           
  8216                           ;mcc_generated_files/system/src/pins.c: 47:     LATB = 0x0;
  8217   005738  6ABB               	clrf	187,c	;volatile
  8218                           
  8219                           ;mcc_generated_files/system/src/pins.c: 48:     LATC = 0x0;
  8220   00573A  6ABC               	clrf	188,c	;volatile
  8221                           
  8222                           ;mcc_generated_files/system/src/pins.c: 52:     ODCONA = 0x0;
  8223   00573C  013A               	movlb	58	; () banked
  8224   00573E  6B42               	clrf	66,b	;volatile
  8225                           
  8226                           ;mcc_generated_files/system/src/pins.c: 53:     ODCONB = 0x0;
  8227   005740  6B52               	clrf	82,b	;volatile
  8228                           
  8229                           ;mcc_generated_files/system/src/pins.c: 54:     ODCONC = 0x0;
  8230   005742  6B62               	clrf	98,b	;volatile
  8231   005744                     
  8232                           ; BSR set to: 58
  8233                           ;mcc_generated_files/system/src/pins.c: 59:     TRISA = 0xFE;
  8234   005744  0EFE               	movlw	254
  8235   005746  6EC2               	movwf	194,c	;volatile
  8236                           
  8237                           ;mcc_generated_files/system/src/pins.c: 60:     TRISB = 0xDC;
  8238   005748  0EDC               	movlw	220
  8239   00574A  6EC3               	movwf	195,c	;volatile
  8240   00574C                     
  8241                           ; BSR set to: 58
  8242                           ;mcc_generated_files/system/src/pins.c: 61:     TRISC = 0x0;
  8243   00574C  6AC4               	clrf	196,c	;volatile
  8244                           
  8245                           ;mcc_generated_files/system/src/pins.c: 66:     ANSELA = 0xF0;
  8246   00574E  0EF0               	movlw	240
  8247   005750  6F40               	movwf	64,b	;volatile
  8248                           
  8249                           ;mcc_generated_files/system/src/pins.c: 67:     ANSELB = 0xDC;
  8250   005752  0EDC               	movlw	220
  8251   005754  6F50               	movwf	80,b	;volatile
  8252   005756                     
  8253                           ; BSR set to: 58
  8254                           ;mcc_generated_files/system/src/pins.c: 68:     ANSELC = 0x0;
  8255   005756  6B60               	clrf	96,b	;volatile
  8256   005758                     
  8257                           ; BSR set to: 58
  8258                           ;mcc_generated_files/system/src/pins.c: 73:     WPUA = 0x0;
  8259   005758  6B41               	clrf	65,b	;volatile
  8260   00575A                     
  8261                           ; BSR set to: 58
  8262                           ;mcc_generated_files/system/src/pins.c: 74:     WPUB = 0x0;
  8263   00575A  6B51               	clrf	81,b	;volatile
  8264   00575C                     
  8265                           ; BSR set to: 58
  8266                           ;mcc_generated_files/system/src/pins.c: 75:     WPUC = 0x0;
  8267   00575C  6B61               	clrf	97,b	;volatile
  8268   00575E                     
  8269                           ; BSR set to: 58
  8270                           ;mcc_generated_files/system/src/pins.c: 76:     WPUE = 0x0;
  8271   00575E  6B81               	clrf	129,b	;volatile
  8272   005760                     
  8273                           ; BSR set to: 58
  8274                           ;mcc_generated_files/system/src/pins.c: 82:     SLRCONA = 0xFF;
  8275   005760  6943               	setf	67,b	;volatile
  8276   005762                     
  8277                           ; BSR set to: 58
  8278                           ;mcc_generated_files/system/src/pins.c: 83:     SLRCONB = 0xFF;
  8279   005762  6953               	setf	83,b	;volatile
  8280   005764                     
  8281                           ; BSR set to: 58
  8282                           ;mcc_generated_files/system/src/pins.c: 84:     SLRCONC = 0xFF;
  8283   005764  6963               	setf	99,b	;volatile
  8284   005766                     
  8285                           ; BSR set to: 58
  8286                           ;mcc_generated_files/system/src/pins.c: 89:     INLVLA = 0xFF;
  8287   005766  6944               	setf	68,b	;volatile
  8288   005768                     
  8289                           ; BSR set to: 58
  8290                           ;mcc_generated_files/system/src/pins.c: 90:     INLVLB = 0xFF;
  8291   005768  6954               	setf	84,b	;volatile
  8292   00576A                     
  8293                           ; BSR set to: 58
  8294                           ;mcc_generated_files/system/src/pins.c: 91:     INLVLC = 0xFF;
  8295   00576A  6964               	setf	100,b	;volatile
  8296                           
  8297                           ;mcc_generated_files/system/src/pins.c: 92:     INLVLE = 0x8;
  8298   00576C  0E08               	movlw	8
  8299   00576E  6F84               	movwf	132,b	;volatile
  8300   005770                     
  8301                           ; BSR set to: 58
  8302                           ;mcc_generated_files/system/src/pins.c: 97:     RB1I2C = 0x0;
  8303   005770  6B5A               	clrf	90,b	;volatile
  8304   005772                     
  8305                           ; BSR set to: 58
  8306                           ;mcc_generated_files/system/src/pins.c: 98:     RB2I2C = 0x0;
  8307   005772  6B5B               	clrf	91,b	;volatile
  8308   005774                     
  8309                           ; BSR set to: 58
  8310                           ;mcc_generated_files/system/src/pins.c: 99:     RC3I2C = 0x0;
  8311   005774  6B6A               	clrf	106,b	;volatile
  8312   005776                     
  8313                           ; BSR set to: 58
  8314                           ;mcc_generated_files/system/src/pins.c: 100:     RC4I2C = 0x0;
  8315   005776  6B6B               	clrf	107,b	;volatile
  8316                           
  8317                           ;mcc_generated_files/system/src/pins.c: 108:     IOCAP = 0xE;
  8318   005778  0E0E               	movlw	14
  8319   00577A  6F45               	movwf	69,b	;volatile
  8320   00577C                     
  8321                           ; BSR set to: 58
  8322                           ;mcc_generated_files/system/src/pins.c: 109:     IOCAN = 0x0;
  8323   00577C  6B46               	clrf	70,b	;volatile
  8324   00577E                     
  8325                           ; BSR set to: 58
  8326                           ;mcc_generated_files/system/src/pins.c: 110:     IOCAF = 0x0;
  8327   00577E  6B47               	clrf	71,b	;volatile
  8328   005780                     
  8329                           ; BSR set to: 58
  8330                           ;mcc_generated_files/system/src/pins.c: 111:     IOCBP = 0x0;
  8331   005780  6B55               	clrf	85,b	;volatile
  8332   005782                     
  8333                           ; BSR set to: 58
  8334                           ;mcc_generated_files/system/src/pins.c: 112:     IOCBN = 0x0;
  8335   005782  6B56               	clrf	86,b	;volatile
  8336   005784                     
  8337                           ; BSR set to: 58
  8338                           ;mcc_generated_files/system/src/pins.c: 113:     IOCBF = 0x0;
  8339   005784  6B57               	clrf	87,b	;volatile
  8340   005786                     
  8341                           ; BSR set to: 58
  8342                           ;mcc_generated_files/system/src/pins.c: 114:     IOCCP = 0x0;
  8343   005786  6B65               	clrf	101,b	;volatile
  8344   005788                     
  8345                           ; BSR set to: 58
  8346                           ;mcc_generated_files/system/src/pins.c: 115:     IOCCN = 0x0;
  8347   005788  6B66               	clrf	102,b	;volatile
  8348   00578A                     
  8349                           ; BSR set to: 58
  8350                           ;mcc_generated_files/system/src/pins.c: 116:     IOCCF = 0x0;
  8351   00578A  6B67               	clrf	103,b	;volatile
  8352   00578C                     
  8353                           ; BSR set to: 58
  8354                           ;mcc_generated_files/system/src/pins.c: 117:     IOCEP = 0x0;
  8355   00578C  6B85               	clrf	133,b	;volatile
  8356   00578E                     
  8357                           ; BSR set to: 58
  8358                           ;mcc_generated_files/system/src/pins.c: 118:     IOCEN = 0x0;
  8359   00578E  6B86               	clrf	134,b	;volatile
  8360   005790                     
  8361                           ; BSR set to: 58
  8362                           ;mcc_generated_files/system/src/pins.c: 119:     IOCEF = 0x0;
  8363   005790  6B87               	clrf	135,b	;volatile
  8364   005792                     
  8365                           ; BSR set to: 58
  8366                           ;mcc_generated_files/system/src/pins.c: 121:     BP1_SetInterruptHandler(BP1_DefaultInte
      +                          rruptHandler);
  8367   005792  0E54               	movlw	low _BP1_DefaultInterruptHandler
  8368   005794  0101               	movlb	1	; () banked
  8369   005796  6F06               	movwf	BP1_SetInterruptHandler@InterruptHandler& (0+255),b
  8370   005798  0E65               	movlw	high _BP1_DefaultInterruptHandler
  8371   00579A  6F07               	movwf	(BP1_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  8372   00579C  EC81  F032         	call	_BP1_SetInterruptHandler	;wreg free
  8373   0057A0                     
  8374                           ;mcc_generated_files/system/src/pins.c: 122:     BP2_SetInterruptHandler(BP2_DefaultInte
      +                          rruptHandler);
  8375   0057A0  0E52               	movlw	low _BP2_DefaultInterruptHandler
  8376   0057A2  0101               	movlb	1	; () banked
  8377   0057A4  6F06               	movwf	BP2_SetInterruptHandler@InterruptHandler& (0+255),b
  8378   0057A6  0E65               	movlw	high _BP2_DefaultInterruptHandler
  8379   0057A8  6F07               	movwf	(BP2_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  8380   0057AA  EC7C  F032         	call	_BP2_SetInterruptHandler	;wreg free
  8381   0057AE                     
  8382                           ;mcc_generated_files/system/src/pins.c: 123:     BP3_SetInterruptHandler(BP3_DefaultInte
      +                          rruptHandler);
  8383   0057AE  0E50               	movlw	low _BP3_DefaultInterruptHandler
  8384   0057B0  0101               	movlb	1	; () banked
  8385   0057B2  6F06               	movwf	BP3_SetInterruptHandler@InterruptHandler& (0+255),b
  8386   0057B4  0E65               	movlw	high _BP3_DefaultInterruptHandler
  8387   0057B6  6F07               	movwf	(BP3_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  8388   0057B8  EC77  F032         	call	_BP3_SetInterruptHandler	;wreg free
  8389   0057BC                     
  8390                           ;mcc_generated_files/system/src/pins.c: 126:     PIE0bits.IOCIE = 1;
  8391   0057BC  0139               	movlb	57	; () banked
  8392   0057BE  8F90               	bsf	144,7,b	;volatile
  8393   0057C0                     
  8394                           ; BSR set to: 57
  8395   0057C0  0012               	return		;funcret
  8396   0057C2                     __end_of_PIN_MANAGER_Initialize:
  8397                           	callstack 0
  8398                           
  8399 ;; *************** function _BP3_SetInterruptHandler *****************
  8400 ;; Defined at:
  8401 ;;		line 226 in file "mcc_generated_files/system/src/pins.c"
  8402 ;; Parameters:    Size  Location     Type
  8403 ;;  InterruptHan    2    6[BANK1 ] PTR FTN()void 
  8404 ;;		 -> int_BP3(1), BP3_DefaultInterruptHandler(1), 
  8405 ;; Auto vars:     Size  Location     Type
  8406 ;;		None
  8407 ;; Return value:  Size  Location     Type
  8408 ;;                  1    wreg      void 
  8409 ;; Registers used:
  8410 ;;		wreg, status,2, status,0
  8411 ;; Tracked objects:
  8412 ;;		On entry : 0/0
  8413 ;;		On exit  : 0/0
  8414 ;;		Unchanged: 0/0
  8415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8416 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8417 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8418 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8419 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8420 ;;Total ram usage:        2 bytes
  8421 ;; Hardware stack levels used: 1
  8422 ;; Hardware stack levels required when called: 13
  8423 ;; This function calls:
  8424 ;;		Nothing
  8425 ;; This function is called by:
  8426 ;;		_PIN_MANAGER_Initialize
  8427 ;;		_main
  8428 ;; This function uses a non-reentrant model
  8429 ;;
  8430                           
  8431                           	psect	text5
  8432   0064EE                     __ptext5:
  8433                           	callstack 0
  8434   0064EE                     _BP3_SetInterruptHandler:
  8435                           	callstack 15
  8436   0064EE                     
  8437                           ;mcc_generated_files/system/src/pins.c: 227:     BP3_InterruptHandler = InterruptHandler
      +                          ;
  8438   0064EE  C106  F0F5         	movff	BP3_SetInterruptHandler@InterruptHandler,_BP3_InterruptHandler
  8439   0064F2  C107  F0F6         	movff	BP3_SetInterruptHandler@InterruptHandler+1,_BP3_InterruptHandler+1
  8440   0064F6  0012               	return		;funcret
  8441   0064F8                     __end_of_BP3_SetInterruptHandler:
  8442                           	callstack 0
  8443                           
  8444 ;; *************** function _BP2_SetInterruptHandler *****************
  8445 ;; Defined at:
  8446 ;;		line 196 in file "mcc_generated_files/system/src/pins.c"
  8447 ;; Parameters:    Size  Location     Type
  8448 ;;  InterruptHan    2    6[BANK1 ] PTR FTN()void 
  8449 ;;		 -> int_BP2(1), BP2_DefaultInterruptHandler(1), 
  8450 ;; Auto vars:     Size  Location     Type
  8451 ;;		None
  8452 ;; Return value:  Size  Location     Type
  8453 ;;                  1    wreg      void 
  8454 ;; Registers used:
  8455 ;;		wreg, status,2, status,0
  8456 ;; Tracked objects:
  8457 ;;		On entry : 0/0
  8458 ;;		On exit  : 0/0
  8459 ;;		Unchanged: 0/0
  8460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8461 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8462 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8463 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8464 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8465 ;;Total ram usage:        2 bytes
  8466 ;; Hardware stack levels used: 1
  8467 ;; Hardware stack levels required when called: 13
  8468 ;; This function calls:
  8469 ;;		Nothing
  8470 ;; This function is called by:
  8471 ;;		_PIN_MANAGER_Initialize
  8472 ;;		_main
  8473 ;; This function uses a non-reentrant model
  8474 ;;
  8475                           
  8476                           	psect	text6
  8477   0064F8                     __ptext6:
  8478                           	callstack 0
  8479   0064F8                     _BP2_SetInterruptHandler:
  8480                           	callstack 15
  8481   0064F8                     
  8482                           ;mcc_generated_files/system/src/pins.c: 197:     BP2_InterruptHandler = InterruptHandler
      +                          ;
  8483   0064F8  C106  F0F7         	movff	BP2_SetInterruptHandler@InterruptHandler,_BP2_InterruptHandler
  8484   0064FC  C107  F0F8         	movff	BP2_SetInterruptHandler@InterruptHandler+1,_BP2_InterruptHandler+1
  8485   006500  0012               	return		;funcret
  8486   006502                     __end_of_BP2_SetInterruptHandler:
  8487                           	callstack 0
  8488                           
  8489 ;; *************** function _BP1_SetInterruptHandler *****************
  8490 ;; Defined at:
  8491 ;;		line 166 in file "mcc_generated_files/system/src/pins.c"
  8492 ;; Parameters:    Size  Location     Type
  8493 ;;  InterruptHan    2    6[BANK1 ] PTR FTN()void 
  8494 ;;		 -> int_BP1(1), BP1_DefaultInterruptHandler(1), 
  8495 ;; Auto vars:     Size  Location     Type
  8496 ;;		None
  8497 ;; Return value:  Size  Location     Type
  8498 ;;                  1    wreg      void 
  8499 ;; Registers used:
  8500 ;;		wreg, status,2, status,0
  8501 ;; Tracked objects:
  8502 ;;		On entry : 0/0
  8503 ;;		On exit  : 0/0
  8504 ;;		Unchanged: 0/0
  8505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8506 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8507 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8508 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8509 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8510 ;;Total ram usage:        2 bytes
  8511 ;; Hardware stack levels used: 1
  8512 ;; Hardware stack levels required when called: 13
  8513 ;; This function calls:
  8514 ;;		Nothing
  8515 ;; This function is called by:
  8516 ;;		_PIN_MANAGER_Initialize
  8517 ;;		_main
  8518 ;; This function uses a non-reentrant model
  8519 ;;
  8520                           
  8521                           	psect	text7
  8522   006502                     __ptext7:
  8523                           	callstack 0
  8524   006502                     _BP1_SetInterruptHandler:
  8525                           	callstack 15
  8526   006502                     
  8527                           ;mcc_generated_files/system/src/pins.c: 167:     BP1_InterruptHandler = InterruptHandler
      +                          ;
  8528   006502  C106  F0F9         	movff	BP1_SetInterruptHandler@InterruptHandler,_BP1_InterruptHandler
  8529   006506  C107  F0FA         	movff	BP1_SetInterruptHandler@InterruptHandler+1,_BP1_InterruptHandler+1
  8530   00650A  0012               	return		;funcret
  8531   00650C                     __end_of_BP1_SetInterruptHandler:
  8532                           	callstack 0
  8533                           
  8534 ;; *************** function _INTERRUPT_Initialize *****************
  8535 ;; Defined at:
  8536 ;;		line 42 in file "mcc_generated_files/system/src/interrupt.c"
  8537 ;; Parameters:    Size  Location     Type
  8538 ;;		None
  8539 ;; Auto vars:     Size  Location     Type
  8540 ;;		None
  8541 ;; Return value:  Size  Location     Type
  8542 ;;                  1    wreg      void 
  8543 ;; Registers used:
  8544 ;;		wreg, status,2, status,0, cstack
  8545 ;; Tracked objects:
  8546 ;;		On entry : 0/0
  8547 ;;		On exit  : 0/0
  8548 ;;		Unchanged: 0/0
  8549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8550 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8551 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8552 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8553 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8554 ;;Total ram usage:        0 bytes
  8555 ;; Hardware stack levels used: 1
  8556 ;; Hardware stack levels required when called: 14
  8557 ;; This function calls:
  8558 ;;		_INT0_SetInterruptHandler
  8559 ;;		_INT1_SetInterruptHandler
  8560 ;;		_INT2_SetInterruptHandler
  8561 ;; This function is called by:
  8562 ;;		_SYSTEM_Initialize
  8563 ;; This function uses a non-reentrant model
  8564 ;;
  8565                           
  8566                           	psect	text8
  8567   0060B2                     __ptext8:
  8568                           	callstack 0
  8569   0060B2                     _INTERRUPT_Initialize:
  8570                           	callstack 15
  8571   0060B2                     
  8572                           ;mcc_generated_files/system/src/interrupt.c: 45:     INTCON0bits.IPEN = 0;
  8573   0060B2  9AD2               	bcf	210,5,c	;volatile
  8574                           
  8575                           ;mcc_generated_files/system/src/interrupt.c: 49:     (PIR1bits.INT0IF = 0);
  8576   0060B4  0139               	movlb	57	; () banked
  8577   0060B6  91A1               	bcf	161,0,b	;volatile
  8578                           
  8579                           ;mcc_generated_files/system/src/interrupt.c: 50:     (INTCON0bits.INT0EDG = 1);
  8580   0060B8  80D2               	bsf	210,0,c	;volatile
  8581   0060BA                     
  8582                           ; BSR set to: 57
  8583                           ;mcc_generated_files/system/src/interrupt.c: 52:     INT0_SetInterruptHandler(INT0_Defau
      +                          ltInterruptHandler);
  8584   0060BA  0E00               	movlw	0
  8585   0060BC  0101               	movlb	1	; () banked
  8586   0060BE  6F06               	movwf	INT0_SetInterruptHandler@InterruptHandler& (0+255),b
  8587   0060C0  0E00               	movlw	0
  8588   0060C2  6F07               	movwf	(INT0_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  8589   0060C4  EC90  F032         	call	_INT0_SetInterruptHandler	;wreg free
  8590   0060C8                     
  8591                           ;mcc_generated_files/system/src/interrupt.c: 57:     (PIR5bits.INT1IF = 0);
  8592   0060C8  0139               	movlb	57	; () banked
  8593   0060CA  91A5               	bcf	165,0,b	;volatile
  8594   0060CC                     
  8595                           ; BSR set to: 57
  8596                           ;mcc_generated_files/system/src/interrupt.c: 58:     (INTCON0bits.INT1EDG = 1);
  8597   0060CC  82D2               	bsf	210,1,c	;volatile
  8598                           
  8599                           ;mcc_generated_files/system/src/interrupt.c: 60:     INT1_SetInterruptHandler(INT1_Defau
      +                          ltInterruptHandler);
  8600   0060CE  0E00               	movlw	0
  8601   0060D0  0101               	movlb	1	; () banked
  8602   0060D2  6F06               	movwf	INT1_SetInterruptHandler@InterruptHandler& (0+255),b
  8603   0060D4  0E00               	movlw	0
  8604   0060D6  6F07               	movwf	(INT1_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  8605   0060D8  EC8B  F032         	call	_INT1_SetInterruptHandler	;wreg free
  8606   0060DC                     
  8607                           ;mcc_generated_files/system/src/interrupt.c: 65:     (PIR7bits.INT2IF = 0);
  8608   0060DC  0139               	movlb	57	; () banked
  8609   0060DE  9BA7               	bcf	167,5,b	;volatile
  8610   0060E0                     
  8611                           ; BSR set to: 57
  8612                           ;mcc_generated_files/system/src/interrupt.c: 66:     (INTCON0bits.INT2EDG = 1);
  8613   0060E0  84D2               	bsf	210,2,c	;volatile
  8614                           
  8615                           ;mcc_generated_files/system/src/interrupt.c: 68:     INT2_SetInterruptHandler(INT2_Defau
      +                          ltInterruptHandler);
  8616   0060E2  0E00               	movlw	0
  8617   0060E4  0101               	movlb	1	; () banked
  8618   0060E6  6F06               	movwf	INT2_SetInterruptHandler@InterruptHandler& (0+255),b
  8619   0060E8  0E00               	movlw	0
  8620   0060EA  6F07               	movwf	(INT2_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  8621   0060EC  EC86  F032         	call	_INT2_SetInterruptHandler	;wreg free
  8622   0060F0  0012               	return		;funcret
  8623   0060F2                     __end_of_INTERRUPT_Initialize:
  8624                           	callstack 0
  8625                           
  8626 ;; *************** function _INT2_SetInterruptHandler *****************
  8627 ;; Defined at:
  8628 ;;		line 175 in file "mcc_generated_files/system/src/interrupt.c"
  8629 ;; Parameters:    Size  Location     Type
  8630 ;;  InterruptHan    2    6[BANK1 ] PTR FTN()void 
  8631 ;;		 -> INT2_DefaultInterruptHandler(1), 
  8632 ;; Auto vars:     Size  Location     Type
  8633 ;;		None
  8634 ;; Return value:  Size  Location     Type
  8635 ;;                  1    wreg      void 
  8636 ;; Registers used:
  8637 ;;		wreg, status,2, status,0
  8638 ;; Tracked objects:
  8639 ;;		On entry : 0/0
  8640 ;;		On exit  : 0/0
  8641 ;;		Unchanged: 0/0
  8642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8643 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8644 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8645 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8646 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8647 ;;Total ram usage:        2 bytes
  8648 ;; Hardware stack levels used: 1
  8649 ;; Hardware stack levels required when called: 13
  8650 ;; This function calls:
  8651 ;;		Nothing
  8652 ;; This function is called by:
  8653 ;;		_INTERRUPT_Initialize
  8654 ;; This function uses a non-reentrant model
  8655 ;;
  8656                           
  8657                           	psect	text9
  8658   00650C                     __ptext9:
  8659                           	callstack 0
  8660   00650C                     _INT2_SetInterruptHandler:
  8661                           	callstack 15
  8662   00650C                     
  8663                           ;mcc_generated_files/system/src/interrupt.c: 176:     INT2_InterruptHandler = InterruptH
      +                          andler;
  8664   00650C  C106  F0EF         	movff	INT2_SetInterruptHandler@InterruptHandler,_INT2_InterruptHandler
  8665   006510  C107  F0F0         	movff	INT2_SetInterruptHandler@InterruptHandler+1,_INT2_InterruptHandler+1
  8666   006514  0012               	return		;funcret
  8667   006516                     __end_of_INT2_SetInterruptHandler:
  8668                           	callstack 0
  8669                           
  8670 ;; *************** function _INT1_SetInterruptHandler *****************
  8671 ;; Defined at:
  8672 ;;		line 149 in file "mcc_generated_files/system/src/interrupt.c"
  8673 ;; Parameters:    Size  Location     Type
  8674 ;;  InterruptHan    2    6[BANK1 ] PTR FTN()void 
  8675 ;;		 -> INT1_DefaultInterruptHandler(1), 
  8676 ;; Auto vars:     Size  Location     Type
  8677 ;;		None
  8678 ;; Return value:  Size  Location     Type
  8679 ;;                  1    wreg      void 
  8680 ;; Registers used:
  8681 ;;		wreg, status,2, status,0
  8682 ;; Tracked objects:
  8683 ;;		On entry : 0/0
  8684 ;;		On exit  : 0/0
  8685 ;;		Unchanged: 0/0
  8686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8687 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8688 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8689 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8690 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8691 ;;Total ram usage:        2 bytes
  8692 ;; Hardware stack levels used: 1
  8693 ;; Hardware stack levels required when called: 13
  8694 ;; This function calls:
  8695 ;;		Nothing
  8696 ;; This function is called by:
  8697 ;;		_INTERRUPT_Initialize
  8698 ;; This function uses a non-reentrant model
  8699 ;;
  8700                           
  8701                           	psect	text10
  8702   006516                     __ptext10:
  8703                           	callstack 0
  8704   006516                     _INT1_SetInterruptHandler:
  8705                           	callstack 15
  8706   006516                     
  8707                           ;mcc_generated_files/system/src/interrupt.c: 150:     INT1_InterruptHandler = InterruptH
      +                          andler;
  8708   006516  C106  F0F1         	movff	INT1_SetInterruptHandler@InterruptHandler,_INT1_InterruptHandler
  8709   00651A  C107  F0F2         	movff	INT1_SetInterruptHandler@InterruptHandler+1,_INT1_InterruptHandler+1
  8710   00651E  0012               	return		;funcret
  8711   006520                     __end_of_INT1_SetInterruptHandler:
  8712                           	callstack 0
  8713                           
  8714 ;; *************** function _INT0_SetInterruptHandler *****************
  8715 ;; Defined at:
  8716 ;;		line 123 in file "mcc_generated_files/system/src/interrupt.c"
  8717 ;; Parameters:    Size  Location     Type
  8718 ;;  InterruptHan    2    6[BANK1 ] PTR FTN()void 
  8719 ;;		 -> INT0_DefaultInterruptHandler(1), 
  8720 ;; Auto vars:     Size  Location     Type
  8721 ;;		None
  8722 ;; Return value:  Size  Location     Type
  8723 ;;                  1    wreg      void 
  8724 ;; Registers used:
  8725 ;;		wreg, status,2, status,0
  8726 ;; Tracked objects:
  8727 ;;		On entry : 0/0
  8728 ;;		On exit  : 0/0
  8729 ;;		Unchanged: 0/0
  8730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8731 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8732 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8733 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8734 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8735 ;;Total ram usage:        2 bytes
  8736 ;; Hardware stack levels used: 1
  8737 ;; Hardware stack levels required when called: 13
  8738 ;; This function calls:
  8739 ;;		Nothing
  8740 ;; This function is called by:
  8741 ;;		_INTERRUPT_Initialize
  8742 ;; This function uses a non-reentrant model
  8743 ;;
  8744                           
  8745                           	psect	text11
  8746   006520                     __ptext11:
  8747                           	callstack 0
  8748   006520                     _INT0_SetInterruptHandler:
  8749                           	callstack 15
  8750   006520                     
  8751                           ;mcc_generated_files/system/src/interrupt.c: 124:     INT0_InterruptHandler = InterruptH
      +                          andler;
  8752   006520  C106  F0F3         	movff	INT0_SetInterruptHandler@InterruptHandler,_INT0_InterruptHandler
  8753   006524  C107  F0F4         	movff	INT0_SetInterruptHandler@InterruptHandler+1,_INT0_InterruptHandler+1
  8754   006528  0012               	return		;funcret
  8755   00652A                     __end_of_INT0_SetInterruptHandler:
  8756                           	callstack 0
  8757                           
  8758 ;; *************** function _CLOCK_Initialize *****************
  8759 ;; Defined at:
  8760 ;;		line 39 in file "mcc_generated_files/system/src/clock.c"
  8761 ;; Parameters:    Size  Location     Type
  8762 ;;		None
  8763 ;; Auto vars:     Size  Location     Type
  8764 ;;		None
  8765 ;; Return value:  Size  Location     Type
  8766 ;;                  1    wreg      void 
  8767 ;; Registers used:
  8768 ;;		wreg, status,2
  8769 ;; Tracked objects:
  8770 ;;		On entry : 0/0
  8771 ;;		On exit  : 0/0
  8772 ;;		Unchanged: 0/0
  8773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8774 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8775 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8776 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8777 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8778 ;;Total ram usage:        0 bytes
  8779 ;; Hardware stack levels used: 1
  8780 ;; Hardware stack levels required when called: 13
  8781 ;; This function calls:
  8782 ;;		Nothing
  8783 ;; This function is called by:
  8784 ;;		_SYSTEM_Initialize
  8785 ;; This function uses a non-reentrant model
  8786 ;;
  8787                           
  8788                           	psect	text12
  8789   0064C6                     __ptext12:
  8790                           	callstack 0
  8791   0064C6                     _CLOCK_Initialize:
  8792                           	callstack 16
  8793   0064C6                     
  8794                           ;mcc_generated_files/system/src/clock.c: 42:     OSCCON1 = (0 << 0x0)
  8795   0064C6  0E60               	movlw	96
  8796   0064C8  0139               	movlb	57	; () banked
  8797   0064CA  6FD9               	movwf	217,b	;volatile
  8798   0064CC                     
  8799                           ; BSR set to: 57
  8800                           ;mcc_generated_files/system/src/clock.c: 44:     OSCCON3 = (0 << 0x6)
  8801   0064CC  6BDB               	clrf	219,b	;volatile
  8802   0064CE                     
  8803                           ; BSR set to: 57
  8804                           ;mcc_generated_files/system/src/clock.c: 46:     OSCEN = (0 << 0x7)
  8805   0064CE  6BDD               	clrf	221,b	;volatile
  8806                           
  8807                           ;mcc_generated_files/system/src/clock.c: 52:     OSCFRQ = (8 << 0x0);
  8808   0064D0  0E08               	movlw	8
  8809   0064D2  6FDF               	movwf	223,b	;volatile
  8810   0064D4                     
  8811                           ; BSR set to: 57
  8812                           ;mcc_generated_files/system/src/clock.c: 53:     OSCTUNE = (0 << 0x0);
  8813   0064D4  6BDE               	clrf	222,b	;volatile
  8814   0064D6                     
  8815                           ; BSR set to: 57
  8816   0064D6  0012               	return		;funcret
  8817   0064D8                     __end_of_CLOCK_Initialize:
  8818                           	callstack 0
  8819                           
  8820 ;; *************** function _ADC_Initialize *****************
  8821 ;; Defined at:
  8822 ;;		line 47 in file "mcc_generated_files/adc/src/adc.c"
  8823 ;; Parameters:    Size  Location     Type
  8824 ;;		None
  8825 ;; Auto vars:     Size  Location     Type
  8826 ;;		None
  8827 ;; Return value:  Size  Location     Type
  8828 ;;                  1    wreg      void 
  8829 ;; Registers used:
  8830 ;;		wreg, status,2, status,0
  8831 ;; Tracked objects:
  8832 ;;		On entry : 0/0
  8833 ;;		On exit  : 0/0
  8834 ;;		Unchanged: 0/0
  8835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8836 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8837 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8838 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8839 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8840 ;;Total ram usage:        0 bytes
  8841 ;; Hardware stack levels used: 1
  8842 ;; Hardware stack levels required when called: 13
  8843 ;; This function calls:
  8844 ;;		Nothing
  8845 ;; This function is called by:
  8846 ;;		_SYSTEM_Initialize
  8847 ;;		_main
  8848 ;; This function uses a non-reentrant model
  8849 ;;
  8850                           
  8851                           	psect	text13
  8852   005A44                     __ptext13:
  8853                           	callstack 0
  8854   005A44                     _ADC_Initialize:
  8855                           	callstack 16
  8856   005A44                     
  8857                           ;mcc_generated_files/adc/src/adc.c: 49:     ADCON0bits.ADON = 0;
  8858   005A44  013E               	movlb	62	; () banked
  8859   005A46  9FF8               	bcf	248,7,b	;volatile
  8860                           
  8861                           ;mcc_generated_files/adc/src/adc.c: 50:     ADLTHL = (0 << 0x0);
  8862   005A48  6BDE               	clrf	222,b	;volatile
  8863                           
  8864                           ;mcc_generated_files/adc/src/adc.c: 51:     ADLTHH = (0 << 0x0);
  8865   005A4A  6BDF               	clrf	223,b	;volatile
  8866                           
  8867                           ;mcc_generated_files/adc/src/adc.c: 52:     ADUTHL = (0 << 0x0);
  8868   005A4C  6BE0               	clrf	224,b	;volatile
  8869                           
  8870                           ;mcc_generated_files/adc/src/adc.c: 53:     ADUTHH = (0 << 0x0);
  8871   005A4E  6BE1               	clrf	225,b	;volatile
  8872                           
  8873                           ;mcc_generated_files/adc/src/adc.c: 54:     ADSTPTL = (0 << 0x0);
  8874   005A50  6BE4               	clrf	228,b	;volatile
  8875                           
  8876                           ;mcc_generated_files/adc/src/adc.c: 55:     ADSTPTH = (0 << 0x0);
  8877   005A52  6BE5               	clrf	229,b	;volatile
  8878                           
  8879                           ;mcc_generated_files/adc/src/adc.c: 56:     ADACCU = (0 << 0x0);
  8880   005A54  6BEA               	clrf	234,b	;volatile
  8881                           
  8882                           ;mcc_generated_files/adc/src/adc.c: 57:     ADRPT = (0 << 0x0);
  8883   005A56  6BEC               	clrf	236,b	;volatile
  8884                           
  8885                           ;mcc_generated_files/adc/src/adc.c: 58:     ADPCH = (0 << 0x0);
  8886   005A58  6BF1               	clrf	241,b	;volatile
  8887                           
  8888                           ;mcc_generated_files/adc/src/adc.c: 59:     ADACQL = (0 << 0x0);
  8889   005A5A  6BF3               	clrf	243,b	;volatile
  8890                           
  8891                           ;mcc_generated_files/adc/src/adc.c: 60:     ADACQH = (0 << 0x0);
  8892   005A5C  6BF4               	clrf	244,b	;volatile
  8893                           
  8894                           ;mcc_generated_files/adc/src/adc.c: 61:     ADCP = (0 << 0x7);
  8895   005A5E  6BD7               	clrf	215,b	;volatile
  8896                           
  8897                           ;mcc_generated_files/adc/src/adc.c: 62:     ADCAP = (0 << 0x0);
  8898   005A60  6BF5               	clrf	245,b	;volatile
  8899                           
  8900                           ;mcc_generated_files/adc/src/adc.c: 63:     ADPREL = (0 << 0x0);
  8901   005A62  6BF6               	clrf	246,b	;volatile
  8902                           
  8903                           ;mcc_generated_files/adc/src/adc.c: 64:     ADPREH = (0 << 0x0);
  8904   005A64  6BF7               	clrf	247,b	;volatile
  8905                           
  8906                           ;mcc_generated_files/adc/src/adc.c: 65:     ADCON1 = (0 << 0x0)
  8907   005A66  6BF9               	clrf	249,b	;volatile
  8908   005A68                     
  8909                           ; BSR set to: 62
  8910                           ;mcc_generated_files/adc/src/adc.c: 69:     ADCON2 = (0 << 0x0)
  8911   005A68  0E18               	movlw	24
  8912   005A6A  6FFA               	movwf	250,b	;volatile
  8913                           
  8914                           ;mcc_generated_files/adc/src/adc.c: 73:     ADCON3 = (0 << 0x0)
  8915   005A6C  0E10               	movlw	16
  8916   005A6E  6FFB               	movwf	251,b	;volatile
  8917   005A70                     
  8918                           ; BSR set to: 62
  8919                           ;mcc_generated_files/adc/src/adc.c: 76:     ADSTAT =(0 << 0x4);
  8920   005A70  6BFC               	clrf	252,b	;volatile
  8921   005A72                     
  8922                           ; BSR set to: 62
  8923                           ;mcc_generated_files/adc/src/adc.c: 77:     ADREF = (0 << 0x0)
  8924   005A72  6BFD               	clrf	253,b	;volatile
  8925                           
  8926                           ;mcc_generated_files/adc/src/adc.c: 79:     ADCLK = (31 << 0x0);
  8927   005A74  0E1F               	movlw	31
  8928   005A76  6FFF               	movwf	255,b	;volatile
  8929   005A78                     
  8930                           ; BSR set to: 62
  8931                           ;mcc_generated_files/adc/src/adc.c: 80:     ADACT = (0 << 0x0);
  8932   005A78  6BFE               	clrf	254,b	;volatile
  8933   005A7A                     
  8934                           ; BSR set to: 62
  8935                           ;mcc_generated_files/adc/src/adc.c: 82:     ADC_ConversionDoneCallback = ((void*)0);
  8936   005A7A  0E00               	movlw	0
  8937   005A7C  0100               	movlb	0	; () banked
  8938   005A7E  6FE7               	movwf	_ADC_ConversionDoneCallback& (0+255),b
  8939   005A80  0E00               	movlw	0
  8940   005A82  6FE8               	movwf	(_ADC_ConversionDoneCallback+1)& (0+255),b
  8941   005A84                     
  8942                           ; BSR set to: 0
  8943                           ;mcc_generated_files/adc/src/adc.c: 83:     ADC_ThresholdCallback = ((void*)0);
  8944   005A84  0E00               	movlw	0
  8945   005A86  6FE5               	movwf	_ADC_ThresholdCallback& (0+255),b
  8946   005A88  0E00               	movlw	0
  8947   005A8A  6FE6               	movwf	(_ADC_ThresholdCallback+1)& (0+255),b
  8948   005A8C                     
  8949                           ; BSR set to: 0
  8950                           ;mcc_generated_files/adc/src/adc.c: 84:     adc_busy_status = 0;
  8951   005A8C  6BEC               	clrf	_adc_busy_status& (0+255),b
  8952   005A8E                     
  8953                           ; BSR set to: 0
  8954                           ;mcc_generated_files/adc/src/adc.c: 86:     PIR1bits.ADIF = 0;
  8955   005A8E  0139               	movlb	57	; () banked
  8956   005A90  95A1               	bcf	161,2,b	;volatile
  8957   005A92                     
  8958                           ; BSR set to: 57
  8959                           ;mcc_generated_files/adc/src/adc.c: 87:     PIE1bits.ADIE = 0;
  8960   005A92  9591               	bcf	145,2,b	;volatile
  8961   005A94                     
  8962                           ; BSR set to: 57
  8963                           ;mcc_generated_files/adc/src/adc.c: 88:     PIR1bits.ADTIF = 0;
  8964   005A94  97A1               	bcf	161,3,b	;volatile
  8965   005A96                     
  8966                           ; BSR set to: 57
  8967                           ;mcc_generated_files/adc/src/adc.c: 89:     PIE1bits.ADTIE = 0;
  8968   005A96  9791               	bcf	145,3,b	;volatile
  8969                           
  8970                           ;mcc_generated_files/adc/src/adc.c: 90:     ADCON0 = (0 << 0x0)
  8971   005A98  0E84               	movlw	132
  8972   005A9A  013E               	movlb	62	; () banked
  8973   005A9C  6FF8               	movwf	248,b	;volatile
  8974   005A9E                     
  8975                           ; BSR set to: 62
  8976   005A9E  0012               	return		;funcret
  8977   005AA0                     __end_of_ADC_Initialize:
  8978                           	callstack 0
  8979                           
  8980 ;; *************** function _LCD_UpdateMenu *****************
  8981 ;; Defined at:
  8982 ;;		line 104 in file "main.c"
  8983 ;; Parameters:    Size  Location     Type
  8984 ;;		None
  8985 ;; Auto vars:     Size  Location     Type
  8986 ;;  tension         4  208[BANK1 ] float 
  8987 ;;  courant         2  212[BANK1 ] int 
  8988 ;;  buffer         16  192[BANK1 ] unsigned char [16]
  8989 ;; Return value:  Size  Location     Type
  8990 ;;                  1    wreg      void 
  8991 ;; Registers used:
  8992 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8993 ;; Tracked objects:
  8994 ;;		On entry : 0/0
  8995 ;;		On exit  : 0/0
  8996 ;;		Unchanged: 0/0
  8997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8998 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8999 ;;      Locals:         0       0      22       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9000 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9001 ;;      Totals:         0       0      24       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9002 ;;Total ram usage:       24 bytes
  9003 ;; Hardware stack levels used: 1
  9004 ;; Hardware stack levels required when called: 21
  9005 ;; This function calls:
  9006 ;;		_LCD_Char
  9007 ;;		_LCD_Init
  9008 ;;		_LCD_SetCursor
  9009 ;;		_LCD_String
  9010 ;;		___fltol
  9011 ;;		_lire_tension
  9012 ;;		_sprintf
  9013 ;; This function is called by:
  9014 ;;		_main
  9015 ;; This function uses a non-reentrant model
  9016 ;;
  9017                           
  9018                           	psect	text14
  9019   002FB0                     __ptext14:
  9020                           	callstack 0
  9021   002FB0                     _LCD_UpdateMenu:
  9022                           	callstack 9
  9023   002FB0                     
  9024                           ;main.c: 106:     char buffer[16];;main.c: 108:     LCD_Init();
  9025   002FB0  EC0D  F031         	call	_LCD_Init	;wreg free
  9026                           
  9027                           ;main.c: 109:     switch (etat_courant) {
  9028   002FB4  EF25  F019         	goto	l8102
  9029   002FB8                     l8018:
  9030                           
  9031                           ; BSR set to: 1
  9032                           ;main.c: 111:             LCD_SetCursor(0,0); LCD_String("Choix:");
  9033   002FB8  0E00               	movlw	0
  9034   002FBA  6F08               	movwf	LCD_SetCursor@column& (0+255),b
  9035   002FBC  0E00               	movlw	0
  9036   002FBE  ECC4  F02C         	call	_LCD_SetCursor
  9037   002FC2  0EDD               	movlw	low STR_1
  9038   002FC4  0101               	movlb	1	; () banked
  9039   002FC6  6F08               	movwf	LCD_String@str& (0+255),b
  9040   002FC8  0EFF               	movlw	high STR_1
  9041   002FCA  6F09               	movwf	(LCD_String@str+1)& (0+255),b
  9042   002FCC  ECE1  F02B         	call	_LCD_String	;wreg free
  9043   002FD0                     
  9044                           ;main.c: 112:             LCD_SetCursor(1,0); LCD_String("1.ICLED 2.Mesure");
  9045   002FD0  0E00               	movlw	0
  9046   002FD2  0101               	movlb	1	; () banked
  9047   002FD4  6F08               	movwf	LCD_SetCursor@column& (0+255),b
  9048   002FD6  0E01               	movlw	1
  9049   002FD8  ECC4  F02C         	call	_LCD_SetCursor
  9050   002FDC  0E07               	movlw	low STR_2
  9051   002FDE  0101               	movlb	1	; () banked
  9052   002FE0  6F08               	movwf	LCD_String@str& (0+255),b
  9053   002FE2  0EFF               	movlw	high STR_2
  9054   002FE4  6F09               	movwf	(LCD_String@str+1)& (0+255),b
  9055   002FE6  ECE1  F02B         	call	_LCD_String	;wreg free
  9056   002FEA                     
  9057                           ;main.c: 113:             LCD_SetCursor(2,0); LCD_String("3.? 2.Animation");
  9058   002FEA  0E00               	movlw	0
  9059   002FEC  0101               	movlb	1	; () banked
  9060   002FEE  6F08               	movwf	LCD_SetCursor@column& (0+255),b
  9061   002FF0  0E02               	movlw	2
  9062   002FF2  ECC4  F02C         	call	_LCD_SetCursor
  9063   002FF6  0E48               	movlw	low STR_3
  9064   002FF8  0101               	movlb	1	; () banked
  9065   002FFA  6F08               	movwf	LCD_String@str& (0+255),b
  9066   002FFC  0EFF               	movlw	high STR_3
  9067   002FFE  6F09               	movwf	(LCD_String@str+1)& (0+255),b
  9068   003000  ECE1  F02B         	call	_LCD_String	;wreg free
  9069                           
  9070                           ;main.c: 114:             break;
  9071   003004  EF6C  F019         	goto	l761
  9072   003008                     l8028:
  9073                           
  9074                           ; BSR set to: 1
  9075                           ;main.c: 117:             LCD_SetCursor(0,0); LCD_String("LED:");
  9076   003008  0E00               	movlw	0
  9077   00300A  6F08               	movwf	LCD_SetCursor@column& (0+255),b
  9078   00300C  0E00               	movlw	0
  9079   00300E  ECC4  F02C         	call	_LCD_SetCursor
  9080   003012  0EF2               	movlw	low STR_4
  9081   003014  0101               	movlb	1	; () banked
  9082   003016  6F08               	movwf	LCD_String@str& (0+255),b
  9083   003018  0EFF               	movlw	high STR_4
  9084   00301A  6F09               	movwf	(LCD_String@str+1)& (0+255),b
  9085   00301C  ECE1  F02B         	call	_LCD_String	;wreg free
  9086   003020                     
  9087                           ;main.c: 118:             LCD_SetCursor(1,0); LCD_String("1.R 2.G 3.B 4.O");
  9088   003020  0E00               	movlw	0
  9089   003022  0101               	movlb	1	; () banked
  9090   003024  6F08               	movwf	LCD_SetCursor@column& (0+255),b
  9091   003026  0E01               	movlw	1
  9092   003028  ECC4  F02C         	call	_LCD_SetCursor
  9093   00302C  0E28               	movlw	low STR_5
  9094   00302E  0101               	movlb	1	; () banked
  9095   003030  6F08               	movwf	LCD_String@str& (0+255),b
  9096   003032  0EFF               	movlw	high STR_5
  9097   003034  6F09               	movwf	(LCD_String@str+1)& (0+255),b
  9098   003036  ECE1  F02B         	call	_LCD_String	;wreg free
  9099                           
  9100                           ;main.c: 119:             break;
  9101   00303A  EF6C  F019         	goto	l761
  9102   00303E                     l8034:
  9103                           
  9104                           ; BSR set to: 1
  9105                           ;main.c: 122:             LCD_SetCursor(0,0); LCD_String("Mesure courant");
  9106   00303E  0E00               	movlw	0
  9107   003040  6F08               	movwf	LCD_SetCursor@column& (0+255),b
  9108   003042  0E00               	movlw	0
  9109   003044  ECC4  F02C         	call	_LCD_SetCursor
  9110   003048  0E85               	movlw	low STR_6
  9111   00304A  0101               	movlb	1	; () banked
  9112   00304C  6F08               	movwf	LCD_String@str& (0+255),b
  9113   00304E  0EFF               	movlw	high STR_6
  9114   003050  6F09               	movwf	(LCD_String@str+1)& (0+255),b
  9115   003052  ECE1  F02B         	call	_LCD_String	;wreg free
  9116                           
  9117                           ;main.c: 123:             break;
  9118   003056  EF6C  F019         	goto	l761
  9119   00305A                     l8038:
  9120                           
  9121                           ; BSR set to: 1
  9122                           ;main.c: 126:             LCD_SetCursor(0,0); LCD_String("Couleur: ROUGE");
  9123   00305A  0E00               	movlw	0
  9124   00305C  6F08               	movwf	LCD_SetCursor@column& (0+255),b
  9125   00305E  0E00               	movlw	0
  9126   003060  ECC4  F02C         	call	_LCD_SetCursor
  9127   003064  0E67               	movlw	low STR_7
  9128   003066  0101               	movlb	1	; () banked
  9129   003068  6F08               	movwf	LCD_String@str& (0+255),b
  9130   00306A  0EFF               	movlw	high STR_7
  9131   00306C  6F09               	movwf	(LCD_String@str+1)& (0+255),b
  9132   00306E  ECE1  F02B         	call	_LCD_String	;wreg free
  9133   003072                     
  9134                           ;main.c: 127:             LCD_SetCursor(1,15); LCD_Char('1');
  9135   003072  0E0F               	movlw	15
  9136   003074  0101               	movlb	1	; () banked
  9137   003076  6F08               	movwf	LCD_SetCursor@column& (0+255),b
  9138   003078  0E01               	movlw	1
  9139   00307A  ECC4  F02C         	call	_LCD_SetCursor
  9140   00307E  0E31               	movlw	49
  9141   003080  EC8D  F031         	call	_LCD_Char
  9142                           
  9143                           ;main.c: 128:             break;
  9144   003084  EF6C  F019         	goto	l761
  9145   003088                     l8046:
  9146                           
  9147                           ; BSR set to: 1
  9148                           ;main.c: 131:             LCD_SetCursor(0,0); LCD_String("Couleur: VERT");
  9149   003088  0E00               	movlw	0
  9150   00308A  6F08               	movwf	LCD_SetCursor@column& (0+255),b
  9151   00308C  0E00               	movlw	0
  9152   00308E  ECC4  F02C         	call	_LCD_SetCursor
  9153   003092  0EB0               	movlw	low STR_8
  9154   003094  0101               	movlb	1	; () banked
  9155   003096  6F08               	movwf	LCD_String@str& (0+255),b
  9156   003098  0EFF               	movlw	high STR_8
  9157   00309A  6F09               	movwf	(LCD_String@str+1)& (0+255),b
  9158   00309C  ECE1  F02B         	call	_LCD_String	;wreg free
  9159                           
  9160                           ;main.c: 132:             break;
  9161   0030A0  EF6C  F019         	goto	l761
  9162   0030A4                     l8050:
  9163                           
  9164                           ; BSR set to: 1
  9165                           ;main.c: 135:             LCD_SetCursor(0,0); LCD_String("Couleur: BLEU");
  9166   0030A4  0E00               	movlw	0
  9167   0030A6  6F08               	movwf	LCD_SetCursor@column& (0+255),b
  9168   0030A8  0E00               	movlw	0
  9169   0030AA  ECC4  F02C         	call	_LCD_SetCursor
  9170   0030AE  0EBE               	movlw	low STR_9
  9171   0030B0  0101               	movlb	1	; () banked
  9172   0030B2  6F08               	movwf	LCD_String@str& (0+255),b
  9173   0030B4  0EFF               	movlw	high STR_9
  9174   0030B6  6F09               	movwf	(LCD_String@str+1)& (0+255),b
  9175   0030B8  ECE1  F02B         	call	_LCD_String	;wreg free
  9176                           
  9177                           ;main.c: 136:             break;
  9178   0030BC  EF6C  F019         	goto	l761
  9179   0030C0                     l8054:
  9180                           
  9181                           ; BSR set to: 1
  9182                           ;main.c: 139:             LCD_SetCursor(0,0); LCD_String("Couleur: ORANGE");
  9183   0030C0  0E00               	movlw	0
  9184   0030C2  6F08               	movwf	LCD_SetCursor@column& (0+255),b
  9185   0030C4  0E00               	movlw	0
  9186   0030C6  ECC4  F02C         	call	_LCD_SetCursor
  9187   0030CA  0E18               	movlw	low STR_10
  9188   0030CC  0101               	movlb	1	; () banked
  9189   0030CE  6F08               	movwf	LCD_String@str& (0+255),b
  9190   0030D0  0EFF               	movlw	high STR_10
  9191   0030D2  6F09               	movwf	(LCD_String@str+1)& (0+255),b
  9192   0030D4  ECE1  F02B         	call	_LCD_String	;wreg free
  9193                           
  9194                           ;main.c: 140:             break;
  9195   0030D8  EF6C  F019         	goto	l761
  9196   0030DC                     l8058:
  9197                           
  9198                           ; BSR set to: 1
  9199                           ;main.c: 143:             LCD_SetCursor(0,0); LCD_String("Couleur: JAUNE");
  9200   0030DC  0E00               	movlw	0
  9201   0030DE  6F08               	movwf	LCD_SetCursor@column& (0+255),b
  9202   0030E0  0E00               	movlw	0
  9203   0030E2  ECC4  F02C         	call	_LCD_SetCursor
  9204   0030E6  0E76               	movlw	low STR_11
  9205   0030E8  0101               	movlb	1	; () banked
  9206   0030EA  6F08               	movwf	LCD_String@str& (0+255),b
  9207   0030EC  0EFF               	movlw	high STR_11
  9208   0030EE  6F09               	movwf	(LCD_String@str+1)& (0+255),b
  9209   0030F0  ECE1  F02B         	call	_LCD_String	;wreg free
  9210                           
  9211                           ;main.c: 144:             break;
  9212   0030F4  EF6C  F019         	goto	l761
  9213   0030F8                     l8062:
  9214                           
  9215                           ; BSR set to: 1
  9216                           ;main.c: 147:             LCD_SetCursor(0,0); LCD_String("Couleur: VIOLET");
  9217   0030F8  0E00               	movlw	0
  9218   0030FA  6F08               	movwf	LCD_SetCursor@column& (0+255),b
  9219   0030FC  0E00               	movlw	0
  9220   0030FE  ECC4  F02C         	call	_LCD_SetCursor
  9221   003102  0E38               	movlw	low STR_12
  9222   003104  0101               	movlb	1	; () banked
  9223   003106  6F08               	movwf	LCD_String@str& (0+255),b
  9224   003108  0EFF               	movlw	high STR_12
  9225   00310A  6F09               	movwf	(LCD_String@str+1)& (0+255),b
  9226   00310C  ECE1  F02B         	call	_LCD_String	;wreg free
  9227                           
  9228                           ;main.c: 148:             break;
  9229   003110  EF6C  F019         	goto	l761
  9230   003114                     l8066:
  9231                           
  9232                           ; BSR set to: 1
  9233                           ;main.c: 151:             LCD_SetCursor(0,0); LCD_String("Couleur: ROSE");
  9234   003114  0E00               	movlw	0
  9235   003116  6F08               	movwf	LCD_SetCursor@column& (0+255),b
  9236   003118  0E00               	movlw	0
  9237   00311A  ECC4  F02C         	call	_LCD_SetCursor
  9238   00311E  0EA2               	movlw	low STR_13
  9239   003120  0101               	movlb	1	; () banked
  9240   003122  6F08               	movwf	LCD_String@str& (0+255),b
  9241   003124  0EFF               	movlw	high STR_13
  9242   003126  6F09               	movwf	(LCD_String@str+1)& (0+255),b
  9243   003128  ECE1  F02B         	call	_LCD_String	;wreg free
  9244                           
  9245                           ;main.c: 152:             break;
  9246   00312C  EF6C  F019         	goto	l761
  9247   003130                     l8070:
  9248                           
  9249                           ; BSR set to: 1
  9250                           ;main.c: 155:             LCD_SetCursor(0,0); LCD_String("Couleur: BLANC");
  9251   003130  0E00               	movlw	0
  9252   003132  6F08               	movwf	LCD_SetCursor@column& (0+255),b
  9253   003134  0E00               	movlw	0
  9254   003136  ECC4  F02C         	call	_LCD_SetCursor
  9255   00313A  0E58               	movlw	low STR_14
  9256   00313C  0101               	movlb	1	; () banked
  9257   00313E  6F08               	movwf	LCD_String@str& (0+255),b
  9258   003140  0EFF               	movlw	high STR_14
  9259   003142  6F09               	movwf	(LCD_String@str+1)& (0+255),b
  9260   003144  ECE1  F02B         	call	_LCD_String	;wreg free
  9261                           
  9262                           ;main.c: 156:             break;
  9263   003148  EF6C  F019         	goto	l761
  9264   00314C                     l8074:
  9265                           
  9266                           ; BSR set to: 1
  9267                           ;main.c: 163:             LCD_SetCursor(0,0); LCD_String("ETEINDRE");
  9268   00314C  0E00               	movlw	0
  9269   00314E  6F08               	movwf	LCD_SetCursor@column& (0+255),b
  9270   003150  0E00               	movlw	0
  9271   003152  ECC4  F02C         	call	_LCD_SetCursor
  9272   003156  0ECC               	movlw	low STR_15
  9273   003158  0101               	movlb	1	; () banked
  9274   00315A  6F08               	movwf	LCD_String@str& (0+255),b
  9275   00315C  0EFF               	movlw	high STR_15
  9276   00315E  6F09               	movwf	(LCD_String@str+1)& (0+255),b
  9277   003160  ECE1  F02B         	call	_LCD_String	;wreg free
  9278                           
  9279                           ;main.c: 164:             break;
  9280   003164  EF6C  F019         	goto	l761
  9281   003168                     l8078:
  9282                           
  9283                           ; BSR set to: 1
  9284                           ;main.c: 167:             LCD_SetCursor(0,0);
  9285   003168  0E00               	movlw	0
  9286   00316A  6F08               	movwf	LCD_SetCursor@column& (0+255),b
  9287   00316C  0E00               	movlw	0
  9288   00316E  ECC4  F02C         	call	_LCD_SetCursor
  9289   003172                     
  9290                           ;main.c: 168:             LCD_String("V_Iled:");
  9291   003172  0ED5               	movlw	low STR_16
  9292   003174  0101               	movlb	1	; () banked
  9293   003176  6F08               	movwf	LCD_String@str& (0+255),b
  9294   003178  0EFF               	movlw	high STR_16
  9295   00317A  6F09               	movwf	(LCD_String@str+1)& (0+255),b
  9296   00317C  ECE1  F02B         	call	_LCD_String	;wreg free
  9297   003180                     
  9298                           ;main.c: 169:             LCD_SetCursor(1, 0);
  9299   003180  0E00               	movlw	0
  9300   003182  0101               	movlb	1	; () banked
  9301   003184  6F08               	movwf	LCD_SetCursor@column& (0+255),b
  9302   003186  0E01               	movlw	1
  9303   003188  ECC4  F02C         	call	_LCD_SetCursor
  9304   00318C                     
  9305                           ;main.c: 170:             float tension = lire_tension();
  9306   00318C  EC01  F02B         	call	_lire_tension	;wreg free
  9307   003190  C146  F1D0         	movff	?_lire_tension,LCD_UpdateMenu@tension
  9308   003194  C147  F1D1         	movff	?_lire_tension+1,LCD_UpdateMenu@tension+1
  9309   003198  C148  F1D2         	movff	?_lire_tension+2,LCD_UpdateMenu@tension+2
  9310   00319C  C149  F1D3         	movff	?_lire_tension+3,LCD_UpdateMenu@tension+3
  9311   0031A0                     
  9312                           ;main.c: 171:             sprintf(buffer, "%.2f V", tension);
  9313   0031A0  0EC0               	movlw	low LCD_UpdateMenu@buffer
  9314   0031A2  0101               	movlb	1	; () banked
  9315   0031A4  6FA9               	movwf	sprintf@s& (0+255),b
  9316   0031A6  0E01               	movlw	high LCD_UpdateMenu@buffer
  9317   0031A8  6FAA               	movwf	(sprintf@s+1)& (0+255),b
  9318   0031AA  0EEB               	movlw	low STR_17
  9319   0031AC  6FAB               	movwf	sprintf@fmt& (0+255),b
  9320   0031AE  0EFF               	movlw	high STR_17
  9321   0031B0  6FAC               	movwf	(sprintf@fmt+1)& (0+255),b
  9322   0031B2  C1D0  F1AD         	movff	LCD_UpdateMenu@tension,?_sprintf+4
  9323   0031B6  C1D1  F1AE         	movff	LCD_UpdateMenu@tension+1,?_sprintf+5
  9324   0031BA  C1D2  F1AF         	movff	LCD_UpdateMenu@tension+2,?_sprintf+6
  9325   0031BE  C1D3  F1B0         	movff	LCD_UpdateMenu@tension+3,?_sprintf+7
  9326   0031C2  ECAF  F02E         	call	_sprintf	;wreg free
  9327   0031C6                     
  9328                           ;main.c: 172:             LCD_String(buffer);
  9329   0031C6  0EC0               	movlw	low LCD_UpdateMenu@buffer
  9330   0031C8  0101               	movlb	1	; () banked
  9331   0031CA  6F08               	movwf	LCD_String@str& (0+255),b
  9332   0031CC  0E01               	movlw	high LCD_UpdateMenu@buffer
  9333   0031CE  6F09               	movwf	(LCD_String@str+1)& (0+255),b
  9334   0031D0  ECE1  F02B         	call	_LCD_String	;wreg free
  9335   0031D4                     
  9336                           ;main.c: 173:             LCD_SetCursor(2,0);
  9337   0031D4  0E00               	movlw	0
  9338   0031D6  0101               	movlb	1	; () banked
  9339   0031D8  6F08               	movwf	LCD_SetCursor@column& (0+255),b
  9340   0031DA  0E02               	movlw	2
  9341   0031DC  ECC4  F02C         	call	_LCD_SetCursor
  9342   0031E0                     
  9343                           ;main.c: 174:             LCD_String("Courent leds:");
  9344   0031E0  0E94               	movlw	low STR_18
  9345   0031E2  0101               	movlb	1	; () banked
  9346   0031E4  6F08               	movwf	LCD_String@str& (0+255),b
  9347   0031E6  0EFF               	movlw	high STR_18
  9348   0031E8  6F09               	movwf	(LCD_String@str+1)& (0+255),b
  9349   0031EA  ECE1  F02B         	call	_LCD_String	;wreg free
  9350   0031EE                     
  9351                           ;main.c: 175:             LCD_SetCursor(3,0);
  9352   0031EE  0E00               	movlw	0
  9353   0031F0  0101               	movlb	1	; () banked
  9354   0031F2  6F08               	movwf	LCD_SetCursor@column& (0+255),b
  9355   0031F4  0E03               	movlw	3
  9356   0031F6  ECC4  F02C         	call	_LCD_SetCursor
  9357   0031FA                     
  9358                           ;main.c: 176:             int courant = lire_tension() ;
  9359   0031FA  EC01  F02B         	call	_lire_tension	;wreg free
  9360   0031FE  C146  F150         	movff	?_lire_tension,___fltol@f1
  9361   003202  C147  F151         	movff	?_lire_tension+1,___fltol@f1+1
  9362   003206  C148  F152         	movff	?_lire_tension+2,___fltol@f1+2
  9363   00320A  C149  F153         	movff	?_lire_tension+3,___fltol@f1+3
  9364   00320E  EC25  F022         	call	___fltol	;wreg free
  9365   003212  C150  F1D4         	movff	?___fltol,LCD_UpdateMenu@courant
  9366   003216  C151  F1D5         	movff	?___fltol+1,LCD_UpdateMenu@courant+1
  9367   00321A                     
  9368                           ;main.c: 177:             sprintf(buffer, "%.3e A", courant);
  9369   00321A  0EC0               	movlw	low LCD_UpdateMenu@buffer
  9370   00321C  0101               	movlb	1	; () banked
  9371   00321E  6FA9               	movwf	sprintf@s& (0+255),b
  9372   003220  0E01               	movlw	high LCD_UpdateMenu@buffer
  9373   003222  6FAA               	movwf	(sprintf@s+1)& (0+255),b
  9374   003224  0EE4               	movlw	low STR_19
  9375   003226  6FAB               	movwf	sprintf@fmt& (0+255),b
  9376   003228  0EFF               	movlw	high STR_19
  9377   00322A  6FAC               	movwf	(sprintf@fmt+1)& (0+255),b
  9378   00322C  C1D4  F1AD         	movff	LCD_UpdateMenu@courant,?_sprintf+4
  9379   003230  C1D5  F1AE         	movff	LCD_UpdateMenu@courant+1,?_sprintf+5
  9380   003234  ECAF  F02E         	call	_sprintf	;wreg free
  9381                           
  9382                           ;main.c: 178:             LCD_String(buffer);
  9383   003238  0EC0               	movlw	low LCD_UpdateMenu@buffer
  9384   00323A  0101               	movlb	1	; () banked
  9385   00323C  6F08               	movwf	LCD_String@str& (0+255),b
  9386   00323E  0E01               	movlw	high LCD_UpdateMenu@buffer
  9387   003240  6F09               	movwf	(LCD_String@str+1)& (0+255),b
  9388   003242  ECE1  F02B         	call	_LCD_String	;wreg free
  9389                           
  9390                           ;main.c: 180:             break;
  9391   003246  EF6C  F019         	goto	l761
  9392   00324A                     l8102:
  9393   00324A  0100               	movlb	0	; () banked
  9394   00324C  51EB               	movf	_etat_courant& (0+255),w,b
  9395   00324E  0101               	movlb	1	; () banked
  9396   003250  6FBE               	movwf	??_LCD_UpdateMenu& (0+255),b
  9397   003252  6BBF               	clrf	(??_LCD_UpdateMenu+1)& (0+255),b
  9398                           
  9399                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9400                           ; Switch size 1, requested type "simple"
  9401                           ; Number of cases is 1, Range of values is 0 to 0
  9402                           ; switch strategies available:
  9403                           ; Name         Instructions Cycles
  9404                           ; simple_byte            4     3 (average)
  9405                           ;	Chosen strategy is simple_byte
  9406   003254  51BF               	movf	(??_LCD_UpdateMenu+1)& (0+255),w,b
  9407   003256  0A00               	xorlw	0	; case 0
  9408   003258  B4D8               	btfsc	status,2,c
  9409   00325A  EF31  F019         	goto	l8664
  9410   00325E  EF6C  F019         	goto	l761
  9411   003262                     l8664:
  9412                           
  9413                           ; BSR set to: 1
  9414                           ; Switch size 1, requested type "simple"
  9415                           ; Number of cases is 14, Range of values is 0 to 13
  9416                           ; switch strategies available:
  9417                           ; Name         Instructions Cycles
  9418                           ; simple_byte           43    22 (average)
  9419                           ;	Chosen strategy is simple_byte
  9420   003262  51BE               	movf	??_LCD_UpdateMenu& (0+255),w,b
  9421   003264  0A00               	xorlw	0	; case 0
  9422   003266  B4D8               	btfsc	status,2,c
  9423   003268  EFDC  F017         	goto	l8018
  9424   00326C  0A01               	xorlw	1	; case 1
  9425   00326E  B4D8               	btfsc	status,2,c
  9426   003270  EF04  F018         	goto	l8028
  9427   003274  0A03               	xorlw	3	; case 2
  9428   003276  B4D8               	btfsc	status,2,c
  9429   003278  EF1F  F018         	goto	l8034
  9430   00327C  0A01               	xorlw	1	; case 3
  9431   00327E  B4D8               	btfsc	status,2,c
  9432   003280  EF6C  F019         	goto	l761
  9433   003284  0A07               	xorlw	7	; case 4
  9434   003286  B4D8               	btfsc	status,2,c
  9435   003288  EF2D  F018         	goto	l8038
  9436   00328C  0A01               	xorlw	1	; case 5
  9437   00328E  B4D8               	btfsc	status,2,c
  9438   003290  EF44  F018         	goto	l8046
  9439   003294  0A03               	xorlw	3	; case 6
  9440   003296  B4D8               	btfsc	status,2,c
  9441   003298  EF52  F018         	goto	l8050
  9442   00329C  0A01               	xorlw	1	; case 7
  9443   00329E  B4D8               	btfsc	status,2,c
  9444   0032A0  EF60  F018         	goto	l8054
  9445   0032A4  0A0F               	xorlw	15	; case 8
  9446   0032A6  B4D8               	btfsc	status,2,c
  9447   0032A8  EF6E  F018         	goto	l8058
  9448   0032AC  0A01               	xorlw	1	; case 9
  9449   0032AE  B4D8               	btfsc	status,2,c
  9450   0032B0  EF7C  F018         	goto	l8062
  9451   0032B4  0A03               	xorlw	3	; case 10
  9452   0032B6  B4D8               	btfsc	status,2,c
  9453   0032B8  EF8A  F018         	goto	l8066
  9454   0032BC  0A01               	xorlw	1	; case 11
  9455   0032BE  B4D8               	btfsc	status,2,c
  9456   0032C0  EF98  F018         	goto	l8070
  9457   0032C4  0A07               	xorlw	7	; case 12
  9458   0032C6  B4D8               	btfsc	status,2,c
  9459   0032C8  EFA6  F018         	goto	l8074
  9460   0032CC  0A01               	xorlw	1	; case 13
  9461   0032CE  B4D8               	btfsc	status,2,c
  9462   0032D0  EFB4  F018         	goto	l8078
  9463   0032D4  EF6C  F019         	goto	l761
  9464   0032D8                     l761:
  9465   0032D8  0012               	return		;funcret
  9466   0032DA                     __end_of_LCD_UpdateMenu:
  9467                           	callstack 0
  9468                           
  9469 ;; *************** function _sprintf *****************
  9470 ;; Defined at:
  9471 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\nf_sprintf.c"
  9472 ;; Parameters:    Size  Location     Type
  9473 ;;  s               2  169[BANK1 ] PTR unsigned char 
  9474 ;;		 -> LCD_UpdateMenu@buffer(16), 
  9475 ;;  fmt             2  171[BANK1 ] PTR const unsigned char 
  9476 ;;		 -> STR_19(7), STR_17(7), 
  9477 ;; Auto vars:     Size  Location     Type
  9478 ;;  f              11  179[BANK1 ] struct _IO_FILE
  9479 ;;  ap              2  177[BANK1 ] PTR void [1]
  9480 ;;		 -> ?_sprintf(2), 
  9481 ;;  ret             2    0        int 
  9482 ;; Return value:  Size  Location     Type
  9483 ;;                  2  169[BANK1 ] int 
  9484 ;; Registers used:
  9485 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9486 ;; Tracked objects:
  9487 ;;		On entry : 0/0
  9488 ;;		On exit  : 0/0
  9489 ;;		Unchanged: 0/0
  9490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9491 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9492 ;;      Locals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9493 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9494 ;;      Totals:         0       0      21       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9495 ;;Total ram usage:       21 bytes
  9496 ;; Hardware stack levels used: 1
  9497 ;; Hardware stack levels required when called: 20
  9498 ;; This function calls:
  9499 ;;		_vfprintf
  9500 ;; This function is called by:
  9501 ;;		_LCD_UpdateMenu
  9502 ;; This function uses a non-reentrant model
  9503 ;;
  9504                           
  9505                           	psect	text15
  9506   005D5E                     __ptext15:
  9507                           	callstack 0
  9508   005D5E                     _sprintf:
  9509                           	callstack 9
  9510   005D5E  0EAD               	movlw	low (?_sprintf+4)
  9511   005D60  0101               	movlb	1	; () banked
  9512   005D62  6FB1               	movwf	sprintf@ap& (0+255),b
  9513   005D64  0E01               	movlw	high (?_sprintf+4)
  9514   005D66  6FB2               	movwf	(sprintf@ap+1)& (0+255),b
  9515   005D68  C1A9  F1B3         	movff	sprintf@s,sprintf@f
  9516   005D6C  C1AA  F1B4         	movff	sprintf@s+1,sprintf@f+1
  9517   005D70                     
  9518                           ; BSR set to: 1
  9519   005D70  0E00               	movlw	0
  9520   005D72  6FB6               	movwf	(sprintf@f+3)& (0+255),b
  9521   005D74  0E00               	movlw	0
  9522   005D76  6FB5               	movwf	(sprintf@f+2)& (0+255),b
  9523   005D78                     
  9524                           ; BSR set to: 1
  9525   005D78  0E00               	movlw	0
  9526   005D7A  6FBD               	movwf	(sprintf@f+10)& (0+255),b
  9527   005D7C  0E00               	movlw	0
  9528   005D7E  6FBC               	movwf	(sprintf@f+9)& (0+255),b
  9529   005D80                     
  9530                           ; BSR set to: 1
  9531   005D80  0EB3               	movlw	low sprintf@f
  9532   005D82  6FA1               	movwf	vfprintf@fp& (0+255),b
  9533   005D84  0E01               	movlw	high sprintf@f
  9534   005D86  6FA2               	movwf	(vfprintf@fp+1)& (0+255),b
  9535   005D88  C1AB  F1A3         	movff	sprintf@fmt,vfprintf@fmt
  9536   005D8C  C1AC  F1A4         	movff	sprintf@fmt+1,vfprintf@fmt+1
  9537   005D90  0EB1               	movlw	low sprintf@ap
  9538   005D92  6FA5               	movwf	vfprintf@ap& (0+255),b
  9539   005D94  0E01               	movlw	high sprintf@ap
  9540   005D96  6FA6               	movwf	(vfprintf@ap+1)& (0+255),b
  9541   005D98  ECAB  F02D         	call	_vfprintf	;wreg free
  9542   005D9C  0101               	movlb	1	; () banked
  9543   005D9E  51B5               	movf	(sprintf@f+2)& (0+255),w,b
  9544   005DA0  25A9               	addwf	sprintf@s& (0+255),w,b
  9545   005DA2  6ED9               	movwf	fsr2l,c
  9546   005DA4  51B6               	movf	(sprintf@f+3)& (0+255),w,b
  9547   005DA6  21AA               	addwfc	(sprintf@s+1)& (0+255),w,b
  9548   005DA8  6EDA               	movwf	fsr2h,c
  9549   005DAA  6ADF               	clrf	indf2,c
  9550   005DAC                     
  9551                           ; BSR set to: 1
  9552   005DAC  0012               	return		;funcret
  9553   005DAE                     __end_of_sprintf:
  9554                           	callstack 0
  9555                           
  9556 ;; *************** function _vfprintf *****************
  9557 ;; Defined at:
  9558 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  9559 ;; Parameters:    Size  Location     Type
  9560 ;;  fp              2  161[BANK1 ] PTR struct _IO_FILE
  9561 ;;		 -> sprintf@f(11), 
  9562 ;;  fmt             2  163[BANK1 ] PTR const unsigned char 
  9563 ;;		 -> STR_19(7), STR_17(7), 
  9564 ;;  ap              2  165[BANK1 ] PTR PTR void 
  9565 ;;		 -> sprintf@ap(2), 
  9566 ;; Auto vars:     Size  Location     Type
  9567 ;;  cfmt            2  167[BANK1 ] PTR unsigned char 
  9568 ;;		 -> STR_19(7), STR_17(7), 
  9569 ;; Return value:  Size  Location     Type
  9570 ;;                  2  161[BANK1 ] int 
  9571 ;; Registers used:
  9572 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9573 ;; Tracked objects:
  9574 ;;		On entry : 0/0
  9575 ;;		On exit  : 0/0
  9576 ;;		Unchanged: 0/0
  9577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9578 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9579 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9580 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9581 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9582 ;;Total ram usage:        8 bytes
  9583 ;; Hardware stack levels used: 1
  9584 ;; Hardware stack levels required when called: 19
  9585 ;; This function calls:
  9586 ;;		_vfpfcnvrt
  9587 ;; This function is called by:
  9588 ;;		_sprintf
  9589 ;; This function uses a non-reentrant model
  9590 ;;
  9591                           
  9592                           	psect	text16
  9593   005B56                     __ptext16:
  9594                           	callstack 0
  9595   005B56                     _vfprintf:
  9596                           	callstack 9
  9597   005B56                     
  9598                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v3.00\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  9599   005B56  C1A3  F1A7         	movff	vfprintf@fmt,vfprintf@cfmt
  9600   005B5A  C1A4  F1A8         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  9601                           
  9602                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  9603   005B5E  EFC0  F02D         	goto	l7756
  9604   005B62                     l7754:
  9605                           
  9606                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  9607   005B62  C1A1  F192         	movff	vfprintf@fp,vfpfcnvrt@fp
  9608   005B66  C1A2  F193         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  9609   005B6A  0EA7               	movlw	low vfprintf@cfmt
  9610   005B6C  0101               	movlb	1	; () banked
  9611   005B6E  6F94               	movwf	vfpfcnvrt@fmt& (0+255),b
  9612   005B70  0E01               	movlw	high vfprintf@cfmt
  9613   005B72  6F95               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  9614   005B74  C1A5  F196         	movff	vfprintf@ap,vfpfcnvrt@ap
  9615   005B78  C1A6  F197         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  9616   005B7C  ECE3  F01A         	call	_vfpfcnvrt	;wreg free
  9617   005B80                     l7756:
  9618                           
  9619                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  9620   005B80  0060  F69F  FFF6   	movff	vfprintf@cfmt,tblptrl
  9621   005B86  0060  F6A3  FFF7   	movff	vfprintf@cfmt+1,tblptrh
  9622   005B8C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9623   005B8C  6AF8               	clrf	tblptru,c
  9624   005B8E                     	endif
  9625   005B8E                     	if	0	;tblptru may be non-zero
  9626   005B8E                     	endif
  9627   005B8E  0008               	tblrd		*
  9628   005B90  50F5               	movf	tablat,w,c
  9629   005B92  0900               	iorlw	0
  9630   005B94  A4D8               	btfss	status,2,c
  9631   005B96  EFCF  F02D         	goto	u8581
  9632   005B9A  EFD1  F02D         	goto	u8580
  9633   005B9E                     u8581:
  9634   005B9E  EFB1  F02D         	goto	l7754
  9635   005BA2                     u8580:
  9636   005BA2                     
  9637                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  9638   005BA2  0E00               	movlw	0
  9639   005BA4  0101               	movlb	1	; () banked
  9640   005BA6  6FA2               	movwf	(?_vfprintf+1)& (0+255),b
  9641   005BA8  0E00               	movlw	0
  9642   005BAA  6FA1               	movwf	?_vfprintf& (0+255),b
  9643   005BAC                     
  9644                           ; BSR set to: 1
  9645   005BAC  0012               	return		;funcret
  9646   005BAE                     __end_of_vfprintf:
  9647                           	callstack 0
  9648                           
  9649 ;; *************** function _vfpfcnvrt *****************
  9650 ;; Defined at:
  9651 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  9652 ;; Parameters:    Size  Location     Type
  9653 ;;  fp              2  146[BANK1 ] PTR struct _IO_FILE
  9654 ;;		 -> sprintf@f(11), 
  9655 ;;  fmt             2  148[BANK1 ] PTR PTR unsigned char 
  9656 ;;		 -> vfprintf@cfmt(2), 
  9657 ;;  ap              2  150[BANK1 ] PTR PTR void 
  9658 ;;		 -> sprintf@ap(2), 
  9659 ;; Auto vars:     Size  Location     Type
  9660 ;;  convarg         4  154[BANK1 ] struct .
  9661 ;;  cp              2  159[BANK1 ] PTR unsigned char 
  9662 ;;		 -> STR_19(7), STR_17(7), 
  9663 ;;  c               1  158[BANK1 ] unsigned char 
  9664 ;;  done            1    0        _Bool 
  9665 ;; Return value:  Size  Location     Type
  9666 ;;                  1    wreg      void 
  9667 ;; Registers used:
  9668 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9669 ;; Tracked objects:
  9670 ;;		On entry : 0/0
  9671 ;;		On exit  : 0/0
  9672 ;;		Unchanged: 0/0
  9673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9674 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9675 ;;      Locals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9676 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9677 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9678 ;;Total ram usage:       15 bytes
  9679 ;; Hardware stack levels used: 1
  9680 ;; Hardware stack levels required when called: 18
  9681 ;; This function calls:
  9682 ;;		_efgtoa
  9683 ;;		_fputc
  9684 ;;		_read_prec_or_width
  9685 ;; This function is called by:
  9686 ;;		_vfprintf
  9687 ;; This function uses a non-reentrant model
  9688 ;;
  9689                           
  9690                           	psect	text17
  9691   0035C6                     __ptext17:
  9692                           	callstack 0
  9693   0035C6                     _vfpfcnvrt:
  9694                           	callstack 9
  9695   0035C6                     
  9696                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  9697   0035C6  0060  F653  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  9698   0035CC  0060  F657  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  9699   0035D2  006F FF7B FFF6     	movff	postinc2,tblptrl
  9700   0035D8  006F FF77 FFF7     	movff	postdec2,tblptrh
  9701   0035DE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9702   0035DE  6AF8               	clrf	tblptru,c
  9703   0035E0                     	endif
  9704   0035E0                     	if	0	;tblptru may be non-zero
  9705   0035E0                     	endif
  9706   0035E0  0008               	tblrd		*
  9707   0035E2  50F5               	movf	tablat,w,c
  9708   0035E4  0A25               	xorlw	37
  9709   0035E6  A4D8               	btfss	status,2,c
  9710   0035E8  EFF8  F01A         	goto	u8331
  9711   0035EC  EFFA  F01A         	goto	u8330
  9712   0035F0                     u8331:
  9713   0035F0  EF36  F01C         	goto	l7510
  9714   0035F4                     u8330:
  9715   0035F4                     
  9716                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  9717   0035F4  0060  F653  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  9718   0035FA  0060  F657  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  9719   003600  2ADE               	incf	postinc2,f,c
  9720   003602  0E00               	movlw	0
  9721   003604  22DD               	addwfc	postdec2,f,c
  9722   003606                     
  9723                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  9724   003606  0E00               	movlw	0
  9725   003608  0100               	movlb	0	; () banked
  9726   00360A  6FDE               	movwf	(_width+1)& (0+255),b
  9727   00360C  0E00               	movlw	0
  9728   00360E  6FDD               	movwf	_width& (0+255),b
  9729   003610  C0DD  F0E9         	movff	_width,_flags
  9730   003614                     
  9731                           ; BSR set to: 0
  9732                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  9733   003614  69DF               	setf	_prec& (0+255),b
  9734   003616  69E0               	setf	(_prec+1)& (0+255),b
  9735   003618                     
  9736                           ; BSR set to: 0
  9737                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1265:         if 
      +                          ((*fmt)[0] == '.') {
  9738   003618  0060  F653  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  9739   00361E  0060  F657  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  9740   003624  006F FF7B FFF6     	movff	postinc2,tblptrl
  9741   00362A  006F FF77 FFF7     	movff	postdec2,tblptrh
  9742   003630                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9743   003630  6AF8               	clrf	tblptru,c
  9744   003632                     	endif
  9745   003632                     	if	0	;tblptru may be non-zero
  9746   003632                     	endif
  9747   003632  0008               	tblrd		*
  9748   003634  50F5               	movf	tablat,w,c
  9749   003636  0A2E               	xorlw	46
  9750   003638  A4D8               	btfss	status,2,c
  9751   00363A  EF21  F01B         	goto	u8341
  9752   00363E  EF23  F01B         	goto	u8340
  9753   003642                     u8341:
  9754   003642  EF3A  F01B         	goto	l7472
  9755   003646                     u8340:
  9756   003646                     
  9757                           ; BSR set to: 0
  9758                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1266:            
      +                           ++*fmt;
  9759   003646  0060  F653  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  9760   00364C  0060  F657  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  9761   003652  2ADE               	incf	postinc2,f,c
  9762   003654  0E00               	movlw	0
  9763   003656  22DD               	addwfc	postdec2,f,c
  9764   003658                     
  9765                           ; BSR set to: 0
  9766                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1267:    prec = r
      +                          ead_prec_or_width(fmt, ap);
  9767   003658  C194  F106         	movff	vfpfcnvrt@fmt,read_prec_or_width@fmt
  9768   00365C  C195  F107         	movff	vfpfcnvrt@fmt+1,read_prec_or_width@fmt+1
  9769   003660  C196  F108         	movff	vfpfcnvrt@ap,read_prec_or_width@ap
  9770   003664  C197  F109         	movff	vfpfcnvrt@ap+1,read_prec_or_width@ap+1
  9771   003668  EC30  F025         	call	_read_prec_or_width	;wreg free
  9772   00366C  C106  F0DF         	movff	?_read_prec_or_width,_prec
  9773   003670  C107  F0E0         	movff	?_read_prec_or_width+1,_prec+1
  9774   003674                     l7472:
  9775                           
  9776                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1689:   cp = *fmt
      +                          ;
  9777   003674  0060  F653  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  9778   00367A  0060  F657  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  9779   003680  006F FF78  F19F    	movff	postinc2,vfpfcnvrt@cp
  9780   003686  006F FF74  F1A0    	movff	postdec2,vfpfcnvrt@cp+1
  9781   00368C                     
  9782                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1690:   c = *cp;
  9783   00368C  0060  F67F  FFF6   	movff	vfpfcnvrt@cp,tblptrl
  9784   003692  0060  F683  FFF7   	movff	vfpfcnvrt@cp+1,tblptrh
  9785   003698                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9786   003698  6AF8               	clrf	tblptru,c
  9787   00369A                     	endif
  9788   00369A                     	if	0	;tblptru may be non-zero
  9789   00369A                     	endif
  9790   00369A  0008               	tblrd		*
  9791   00369C  006F FFD4  F19E    	movff	tablat,vfpfcnvrt@c
  9792                           
  9793                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1691:   switch(c)
      +                           {
  9794   0036A2  EF5E  F01B         	goto	l7482
  9795   0036A6                     l7476:
  9796                           
  9797                           ; BSR set to: 1
  9798                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1695:     cp++;
  9799   0036A6  4B9F               	infsnz	vfpfcnvrt@cp& (0+255),f,b
  9800   0036A8  2BA0               	incf	(vfpfcnvrt@cp+1)& (0+255),f,b
  9801                           
  9802                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1696:     break;
  9803   0036AA  EF72  F01B         	goto	l7484
  9804   0036AE                     l7478:
  9805                           
  9806                           ; BSR set to: 1
  9807                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1721:     c = 'l'
      +                          ;
  9808   0036AE  0E6C               	movlw	108
  9809   0036B0  6F9E               	movwf	vfpfcnvrt@c& (0+255),b
  9810                           
  9811                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1722:     break;
  9812   0036B2  EF72  F01B         	goto	l7484
  9813   0036B6                     l1674:
  9814                           
  9815                           ; BSR set to: 1
  9816                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1724:     c = 0;
  9817   0036B6  6B9E               	clrf	vfpfcnvrt@c& (0+255),b
  9818                           
  9819                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1725:     break;
  9820   0036B8  EF72  F01B         	goto	l7484
  9821   0036BC                     l7482:
  9822   0036BC  0101               	movlb	1	; () banked
  9823   0036BE  519E               	movf	vfpfcnvrt@c& (0+255),w,b
  9824                           
  9825                           ; Switch size 1, requested type "simple"
  9826                           ; Number of cases is 4, Range of values is 76 to 108
  9827                           ; switch strategies available:
  9828                           ; Name         Instructions Cycles
  9829                           ; simple_byte           13     7 (average)
  9830                           ;	Chosen strategy is simple_byte
  9831   0036C0  0A4C               	xorlw	76	; case 76
  9832   0036C2  B4D8               	btfsc	status,2,c
  9833   0036C4  EF53  F01B         	goto	l7476
  9834   0036C8  0A29               	xorlw	41	; case 101
  9835   0036CA  B4D8               	btfsc	status,2,c
  9836   0036CC  EF57  F01B         	goto	l7478
  9837   0036D0  0A03               	xorlw	3	; case 102
  9838   0036D2  B4D8               	btfsc	status,2,c
  9839   0036D4  EF57  F01B         	goto	l7478
  9840   0036D8  0A0A               	xorlw	10	; case 108
  9841   0036DA  B4D8               	btfsc	status,2,c
  9842   0036DC  EF53  F01B         	goto	l7476
  9843   0036E0  EF5B  F01B         	goto	l1674
  9844   0036E4                     l7484:
  9845                           
  9846                           ; BSR set to: 1
  9847   0036E4  0060  F67F  FFF6   	movff	vfpfcnvrt@cp,tblptrl
  9848   0036EA  0060  F683  FFF7   	movff	vfpfcnvrt@cp+1,tblptrh
  9849   0036F0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9850   0036F0  6AF8               	clrf	tblptru,c
  9851   0036F2                     	endif
  9852   0036F2                     	if	0	;tblptru may be non-zero
  9853   0036F2                     	endif
  9854   0036F2  0008               	tblrd		*
  9855   0036F4  50F5               	movf	tablat,w,c
  9856   0036F6  0A65               	xorlw	101
  9857   0036F8  B4D8               	btfsc	status,2,c
  9858   0036FA  EF81  F01B         	goto	u8351
  9859   0036FE  EF83  F01B         	goto	u8350
  9860   003702                     u8351:
  9861   003702  EFDE  F01B         	goto	l7494
  9862   003706                     u8350:
  9863   003706                     
  9864                           ; BSR set to: 1
  9865   003706  0060  F67F  FFF6   	movff	vfpfcnvrt@cp,tblptrl
  9866   00370C  0060  F683  FFF7   	movff	vfpfcnvrt@cp+1,tblptrh
  9867   003712                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9868   003712  6AF8               	clrf	tblptru,c
  9869   003714                     	endif
  9870   003714                     	if	0	;tblptru may be non-zero
  9871   003714                     	endif
  9872   003714  0008               	tblrd		*
  9873   003716  50F5               	movf	tablat,w,c
  9874   003718  0A66               	xorlw	102
  9875   00371A  A4D8               	btfss	status,2,c
  9876   00371C  EF92  F01B         	goto	u8361
  9877   003720  EF94  F01B         	goto	u8360
  9878   003724                     u8361:
  9879   003724  EF2B  F01C         	goto	l7506
  9880   003728                     u8360:
  9881   003728  EFDE  F01B         	goto	l7494
  9882   00372C                     l7488:
  9883                           
  9884                           ; BSR set to: 1
  9885                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1756:      convar
      +                          g.f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  9886   00372C  0060  F65B  FFD9   	movff	vfpfcnvrt@ap,fsr2l
  9887   003732  0060  F65F  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
  9888   003738  006F FF7C  F198    	movff	indf2,??_vfpfcnvrt
  9889   00373E  0E04               	movlw	4
  9890   003740  26DE               	addwf	postinc2,f,c
  9891   003742  006F FF7C  F199    	movff	indf2,??_vfpfcnvrt+1
  9892   003748  0E00               	movlw	0
  9893   00374A  22DD               	addwfc	postdec2,f,c
  9894   00374C  0060  F663  FFD9   	movff	??_vfpfcnvrt,fsr2l
  9895   003752  0060  F667  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
  9896   003758  006F FF78  F19A    	movff	postinc2,vfpfcnvrt@convarg
  9897   00375E  006F FF78  F19B    	movff	postinc2,vfpfcnvrt@convarg+1
  9898   003764  006F FF78  F19C    	movff	postinc2,vfpfcnvrt@convarg+2
  9899   00376A  006F FF78  F19D    	movff	postinc2,vfpfcnvrt@convarg+3
  9900                           
  9901                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1757:      break;
  9902   003770  EFE9  F01B         	goto	l7496
  9903   003774                     l7490:
  9904                           
  9905                           ; BSR set to: 1
  9906                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1759:      convar
      +                          g.f = (long double)(*(long double *)__va_arg(*(long double **)ap, (long double)0));
  9907   003774  0060  F65B  FFD9   	movff	vfpfcnvrt@ap,fsr2l
  9908   00377A  0060  F65F  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
  9909   003780  006F FF7C  F198    	movff	indf2,??_vfpfcnvrt
  9910   003786  0E04               	movlw	4
  9911   003788  26DE               	addwf	postinc2,f,c
  9912   00378A  006F FF7C  F199    	movff	indf2,??_vfpfcnvrt+1
  9913   003790  0E00               	movlw	0
  9914   003792  22DD               	addwfc	postdec2,f,c
  9915   003794  0060  F663  FFD9   	movff	??_vfpfcnvrt,fsr2l
  9916   00379A  0060  F667  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
  9917   0037A0  006F FF78  F19A    	movff	postinc2,vfpfcnvrt@convarg
  9918   0037A6  006F FF78  F19B    	movff	postinc2,vfpfcnvrt@convarg+1
  9919   0037AC  006F FF78  F19C    	movff	postinc2,vfpfcnvrt@convarg+2
  9920   0037B2  006F FF78  F19D    	movff	postinc2,vfpfcnvrt@convarg+3
  9921                           
  9922                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1760:      break;
  9923   0037B8  EFE9  F01B         	goto	l7496
  9924   0037BC                     l7494:
  9925                           
  9926                           ; BSR set to: 1
  9927   0037BC  519E               	movf	vfpfcnvrt@c& (0+255),w,b
  9928                           
  9929                           ; Switch size 1, requested type "simple"
  9930                           ; Number of cases is 2, Range of values is 76 to 108
  9931                           ; switch strategies available:
  9932                           ; Name         Instructions Cycles
  9933                           ; simple_byte            7     4 (average)
  9934                           ;	Chosen strategy is simple_byte
  9935   0037BE  0A4C               	xorlw	76	; case 76
  9936   0037C0  B4D8               	btfsc	status,2,c
  9937   0037C2  EFBA  F01B         	goto	l7490
  9938   0037C6  0A20               	xorlw	32	; case 108
  9939   0037C8  B4D8               	btfsc	status,2,c
  9940   0037CA  EF96  F01B         	goto	l7488
  9941   0037CE  EFE9  F01B         	goto	l7496
  9942   0037D2                     l7496:
  9943                           
  9944                           ; BSR set to: 1
  9945                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1762:    *fmt = c
      +                          p+1;
  9946   0037D2  0E01               	movlw	1
  9947   0037D4  259F               	addwf	vfpfcnvrt@cp& (0+255),w,b
  9948   0037D6  6F98               	movwf	??_vfpfcnvrt& (0+255),b
  9949   0037D8  0E00               	movlw	0
  9950   0037DA  21A0               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  9951   0037DC  6F99               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  9952   0037DE  0060  F653  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  9953   0037E4  0060  F657  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  9954   0037EA  0060  F663  FFDE   	movff	??_vfpfcnvrt,postinc2
  9955   0037F0  0060  F667  FFDD   	movff	??_vfpfcnvrt+1,postdec2
  9956                           
  9957                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1763:    switch (
      +                          *cp) {
  9958   0037F6  EF18  F01C         	goto	l7504
  9959   0037FA                     l7498:
  9960                           
  9961                           ; BSR set to: 1
  9962                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1790:      return
      +                           (void) efgtoa(fp, convarg.f, *cp);;	Return value of _vfpfcnvrt is never used
  9963   0037FA  C192  F15A         	movff	vfpfcnvrt@fp,efgtoa@fp
  9964   0037FE  C193  F15B         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  9965   003802  C19A  F15C         	movff	vfpfcnvrt@convarg,efgtoa@f
  9966   003806  C19B  F15D         	movff	vfpfcnvrt@convarg+1,efgtoa@f+1
  9967   00380A  C19C  F15E         	movff	vfpfcnvrt@convarg+2,efgtoa@f+2
  9968   00380E  C19D  F15F         	movff	vfpfcnvrt@convarg+3,efgtoa@f+3
  9969   003812  0060  F67F  FFF6   	movff	vfpfcnvrt@cp,tblptrl
  9970   003818  0060  F683  FFF7   	movff	vfpfcnvrt@cp+1,tblptrh
  9971   00381E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9972   00381E  6AF8               	clrf	tblptru,c
  9973   003820                     	endif
  9974   003820                     	if	0	;tblptru may be non-zero
  9975   003820                     	endif
  9976   003820  0008               	tblrd		*
  9977   003822  006F FFD4  F160    	movff	tablat,efgtoa@c
  9978   003828  EC0F  F000         	call	_efgtoa	;wreg free
  9979   00382C  EF50  F01C         	goto	l1685
  9980   003830                     l7504:
  9981                           
  9982                           ; BSR set to: 1
  9983   003830  0060  F67F  FFF6   	movff	vfpfcnvrt@cp,tblptrl
  9984   003836  0060  F683  FFF7   	movff	vfpfcnvrt@cp+1,tblptrh
  9985   00383C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9986   00383C  6AF8               	clrf	tblptru,c
  9987   00383E                     	endif
  9988   00383E                     	if	0	;tblptru may be non-zero
  9989   00383E                     	endif
  9990   00383E  0008               	tblrd		*
  9991   003840  50F5               	movf	tablat,w,c
  9992                           
  9993                           ; Switch size 1, requested type "simple"
  9994                           ; Number of cases is 2, Range of values is 101 to 102
  9995                           ; switch strategies available:
  9996                           ; Name         Instructions Cycles
  9997                           ; simple_byte            7     4 (average)
  9998                           ;	Chosen strategy is simple_byte
  9999   003842  0A65               	xorlw	101	; case 101
 10000   003844  B4D8               	btfsc	status,2,c
 10001   003846  EFFD  F01B         	goto	l7498
 10002   00384A  0A03               	xorlw	3	; case 102
 10003   00384C  B4D8               	btfsc	status,2,c
 10004   00384E  EFFD  F01B         	goto	l7498
 10005   003852  EF2B  F01C         	goto	l7506
 10006   003856                     l7506:
 10007                           
 10008                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
 10009   003856  0060  F653  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
 10010   00385C  0060  F657  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
 10011   003862  2ADE               	incf	postinc2,f,c
 10012   003864  0E00               	movlw	0
 10013   003866  22DD               	addwfc	postdec2,f,c
 10014   003868  EF50  F01C         	goto	l1685
 10015   00386C                     l7510:
 10016                           
 10017                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
 10018   00386C  0060  F653  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
 10019   003872  0060  F657  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
 10020   003878  006F FF7B FFF6     	movff	postinc2,tblptrl
 10021   00387E  006F FF77 FFF7     	movff	postdec2,tblptrh
 10022   003884                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 10023   003884  6AF8               	clrf	tblptru,c
 10024   003886                     	endif
 10025   003886                     	if	0	;tblptru may be non-zero
 10026   003886                     	endif
 10027   003886  0008               	tblrd		*
 10028   003888  50F5               	movf	tablat,w,c
 10029   00388A  0101               	movlb	1	; () banked
 10030   00388C  6F06               	movwf	fputc@c& (0+255),b
 10031   00388E  6B07               	clrf	(fputc@c+1)& (0+255),b
 10032   003890  C192  F108         	movff	vfpfcnvrt@fp,fputc@fp
 10033   003894  C193  F109         	movff	vfpfcnvrt@fp+1,fputc@fp+1
 10034   003898  EC93  F026         	call	_fputc	;wreg free
 10035   00389C  EF2B  F01C         	goto	l7506
 10036   0038A0                     l1685:
 10037   0038A0  0012               	return		;funcret
 10038   0038A2                     __end_of_vfpfcnvrt:
 10039                           	callstack 0
 10040                           
 10041 ;; *************** function _read_prec_or_width *****************
 10042 ;; Defined at:
 10043 ;;		line 1158 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
 10044 ;; Parameters:    Size  Location     Type
 10045 ;;  fmt             2    6[BANK1 ] PTR PTR const unsigned c
 10046 ;;		 -> vfprintf@cfmt(2), 
 10047 ;;  ap              2    8[BANK1 ] PTR PTR void [1]
 10048 ;;		 -> sprintf@ap(2), 
 10049 ;; Auto vars:     Size  Location     Type
 10050 ;;  c               1   12[BANK1 ] unsigned char 
 10051 ;;  n               2   13[BANK1 ] int 
 10052 ;; Return value:  Size  Location     Type
 10053 ;;                  2    6[BANK1 ] int 
 10054 ;; Registers used:
 10055 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 10056 ;; Tracked objects:
 10057 ;;		On entry : 0/0
 10058 ;;		On exit  : 0/0
 10059 ;;		Unchanged: 0/0
 10060 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10061 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10062 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10063 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10064 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10065 ;;Total ram usage:        9 bytes
 10066 ;; Hardware stack levels used: 1
 10067 ;; Hardware stack levels required when called: 13
 10068 ;; This function calls:
 10069 ;;		Nothing
 10070 ;; This function is called by:
 10071 ;;		_vfpfcnvrt
 10072 ;; This function uses a non-reentrant model
 10073 ;;
 10074                           
 10075                           	psect	text18
 10076   004A60                     __ptext18:
 10077                           	callstack 0
 10078   004A60                     _read_prec_or_width:
 10079                           	callstack 13
 10080   004A60                     
 10081                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1159:     int n =
      +                           0;
 10082   004A60  0E00               	movlw	0
 10083   004A62  0101               	movlb	1	; () banked
 10084   004A64  6F0E               	movwf	(read_prec_or_width@n+1)& (0+255),b
 10085   004A66  0E00               	movlw	0
 10086   004A68  6F0D               	movwf	read_prec_or_width@n& (0+255),b
 10087   004A6A                     
 10088                           ; BSR set to: 1
 10089                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1160:     if ((*f
      +                          mt)[0] == '*') {
 10090   004A6A  0060  F41B  FFD9   	movff	read_prec_or_width@fmt,fsr2l
 10091   004A70  0060  F41F  FFDA   	movff	read_prec_or_width@fmt+1,fsr2h
 10092   004A76  006F FF7B FFF6     	movff	postinc2,tblptrl
 10093   004A7C  006F FF77 FFF7     	movff	postdec2,tblptrh
 10094   004A82                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 10095   004A82  6AF8               	clrf	tblptru,c
 10096   004A84                     	endif
 10097   004A84                     	if	0	;tblptru may be non-zero
 10098   004A84                     	endif
 10099   004A84  0008               	tblrd		*
 10100   004A86  50F5               	movf	tablat,w,c
 10101   004A88  0A2A               	xorlw	42
 10102   004A8A  A4D8               	btfss	status,2,c
 10103   004A8C  EF4A  F025         	goto	u8231
 10104   004A90  EF4C  F025         	goto	u8230
 10105   004A94                     u8231:
 10106   004A94  EF8D  F025         	goto	l7384
 10107   004A98                     u8230:
 10108   004A98                     
 10109                           ; BSR set to: 1
 10110                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1161:         ++*
      +                          fmt;
 10111   004A98  0060  F41B  FFD9   	movff	read_prec_or_width@fmt,fsr2l
 10112   004A9E  0060  F41F  FFDA   	movff	read_prec_or_width@fmt+1,fsr2h
 10113   004AA4  2ADE               	incf	postinc2,f,c
 10114   004AA6  0E00               	movlw	0
 10115   004AA8  22DD               	addwfc	postdec2,f,c
 10116                           
 10117                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1162:         n =
      +                           (*(int *)__va_arg(*(int **)*ap, (int)0));
 10118   004AAA  0060  F423  FFD9   	movff	read_prec_or_width@ap,fsr2l
 10119   004AB0  0060  F427  FFDA   	movff	read_prec_or_width@ap+1,fsr2h
 10120   004AB6  006F FF7C  F10A    	movff	indf2,??_read_prec_or_width
 10121   004ABC  0E02               	movlw	2
 10122   004ABE  26DE               	addwf	postinc2,f,c
 10123   004AC0  006F FF7C  F10B    	movff	indf2,??_read_prec_or_width+1
 10124   004AC6  0E00               	movlw	0
 10125   004AC8  22DD               	addwfc	postdec2,f,c
 10126   004ACA  0060  F42B  FFD9   	movff	??_read_prec_or_width,fsr2l
 10127   004AD0  0060  F42F  FFDA   	movff	??_read_prec_or_width+1,fsr2h
 10128   004AD6  006F FF78  F10D    	movff	postinc2,read_prec_or_width@n
 10129   004ADC  006F FF74  F10E    	movff	postdec2,read_prec_or_width@n+1
 10130                           
 10131                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1163:     } else 
      +                          {
 10132   004AE2  EFA6  F025         	goto	l1659
 10133   004AE6                     l7380:
 10134                           
 10135                           ; BSR set to: 1
 10136                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1166:            
      +                           n = n * 10 + c;
 10137   004AE6  0E0A               	movlw	10
 10138   004AE8  030D               	mulwf	read_prec_or_width@n& (0+255),b
 10139   004AEA  006F FFCC  F10A    	movff	prodl,??_read_prec_or_width
 10140   004AF0  006F FFD0  F10B    	movff	prodh,??_read_prec_or_width+1
 10141   004AF6  030E               	mulwf	(read_prec_or_width@n+1)& (0+255),b
 10142   004AF8  50F3               	movf	prodl,w,c
 10143   004AFA  270B               	addwf	(??_read_prec_or_width+1)& (0+255),f,b
 10144   004AFC  510C               	movf	read_prec_or_width@c& (0+255),w,b
 10145   004AFE  250A               	addwf	??_read_prec_or_width& (0+255),w,b
 10146   004B00  6F0D               	movwf	read_prec_or_width@n& (0+255),b
 10147   004B02  0E00               	movlw	0
 10148   004B04  210B               	addwfc	(??_read_prec_or_width+1)& (0+255),w,b
 10149   004B06  6F0E               	movwf	(read_prec_or_width@n+1)& (0+255),b
 10150   004B08                     
 10151                           ; BSR set to: 1
 10152                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1167:            
      +                           ++*fmt;
 10153   004B08  0060  F41B  FFD9   	movff	read_prec_or_width@fmt,fsr2l
 10154   004B0E  0060  F41F  FFDA   	movff	read_prec_or_width@fmt+1,fsr2h
 10155   004B14  2ADE               	incf	postinc2,f,c
 10156   004B16  0E00               	movlw	0
 10157   004B18  22DD               	addwfc	postdec2,f,c
 10158   004B1A                     l7384:
 10159                           
 10160                           ; BSR set to: 1
 10161                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1165:         whi
      +                          le ((c = ((unsigned)(*fmt)[0]) - '0') < 10) {
 10162   004B1A  0060  F41B  FFD9   	movff	read_prec_or_width@fmt,fsr2l
 10163   004B20  0060  F41F  FFDA   	movff	read_prec_or_width@fmt+1,fsr2h
 10164   004B26  006F FF7B FFF6     	movff	postinc2,tblptrl
 10165   004B2C  006F FF77 FFF7     	movff	postdec2,tblptrh
 10166   004B32                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 10167   004B32  6AF8               	clrf	tblptru,c
 10168   004B34                     	endif
 10169   004B34                     	if	0	;tblptru may be non-zero
 10170   004B34                     	endif
 10171   004B34  0008               	tblrd		*
 10172   004B36  50F5               	movf	tablat,w,c
 10173   004B38  0FD0               	addlw	208
 10174   004B3A  6F0C               	movwf	read_prec_or_width@c& (0+255),b
 10175   004B3C  0E09               	movlw	9
 10176   004B3E  650C               	cpfsgt	read_prec_or_width@c& (0+255),b
 10177   004B40  EFA4  F025         	goto	u8241
 10178   004B44  EFA6  F025         	goto	u8240
 10179   004B48                     u8241:
 10180   004B48  EF73  F025         	goto	l7380
 10181   004B4C                     u8240:
 10182   004B4C                     l1659:
 10183                           
 10184                           ; BSR set to: 1
 10185                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1170:     return 
      +                          n;
 10186   004B4C  C10D  F106         	movff	read_prec_or_width@n,?_read_prec_or_width
 10187   004B50  C10E  F107         	movff	read_prec_or_width@n+1,?_read_prec_or_width+1
 10188   004B54                     
 10189                           ; BSR set to: 1
 10190   004B54  0012               	return		;funcret
 10191   004B56                     __end_of_read_prec_or_width:
 10192                           	callstack 0
 10193                           
 10194 ;; *************** function _efgtoa *****************
 10195 ;; Defined at:
 10196 ;;		line 587 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
 10197 ;; Parameters:    Size  Location     Type
 10198 ;;  fp              2   90[BANK1 ] PTR struct _IO_FILE
 10199 ;;		 -> sprintf@f(11), 
 10200 ;;  f               4   92[BANK1 ] PTR struct _IO_FILE
 10201 ;;  c               1   96[BANK1 ] unsigned char 
 10202 ;; Auto vars:     Size  Location     Type
 10203 ;;  u               4  142[BANK1 ] struct flui
 10204 ;;  g               4  138[BANK1 ] struct flui
 10205 ;;  l               4  127[BANK1 ] struct flui
 10206 ;;  h               4  123[BANK1 ] struct flui
 10207 ;;  ou              4  119[BANK1 ] struct flui
 10208 ;;  n               2  136[BANK1 ] int 
 10209 ;;  i               2  134[BANK1 ] int 
 10210 ;;  e               2  131[BANK1 ] int 
 10211 ;;  w               2  117[BANK1 ] int 
 10212 ;;  p               2  114[BANK1 ] int 
 10213 ;;  m               2  112[BANK1 ] int 
 10214 ;;  d               2  110[BANK1 ] int 
 10215 ;;  ne              2  105[BANK1 ] int 
 10216 ;;  t               2   99[BANK1 ] int 
 10217 ;;  sign            1  133[BANK1 ] unsigned char 
 10218 ;;  nmode           1  116[BANK1 ] unsigned char 
 10219 ;;  mode            1  109[BANK1 ] unsigned char 
 10220 ;;  esign           1  108[BANK1 ] unsigned char 
 10221 ;;  pp              1  107[BANK1 ] unsigned char 
 10222 ;; Return value:  Size  Location     Type
 10223 ;;                  1    wreg      void 
 10224 ;; Registers used:
 10225 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10226 ;; Tracked objects:
 10227 ;;		On entry : 0/0
 10228 ;;		On exit  : 0/0
 10229 ;;		Unchanged: 0/0
 10230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10231 ;;      Params:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10232 ;;      Locals:         0       0      47       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10233 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10234 ;;      Totals:         0       0      56       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10235 ;;Total ram usage:       56 bytes
 10236 ;; Hardware stack levels used: 1
 10237 ;; Hardware stack levels required when called: 17
 10238 ;; This function calls:
 10239 ;;		___awdiv
 10240 ;;		___awmod
 10241 ;;		___fladd
 10242 ;;		___fldiv
 10243 ;;		___fleq
 10244 ;;		___flge
 10245 ;;		___flmul
 10246 ;;		___flneg
 10247 ;;		___flsub
 10248 ;;		___fltol
 10249 ;;		___fpclassifyf
 10250 ;;		_floorf
 10251 ;;		_labs
 10252 ;;		_memcpy
 10253 ;;		_pad
 10254 ;;		_strcpy
 10255 ;; This function is called by:
 10256 ;;		_vfpfcnvrt
 10257 ;; This function uses a non-reentrant model
 10258 ;;
 10259                           
 10260                           	psect	text19
 10261   00001E                     __ptext19:
 10262                           	callstack 0
 10263   00001E                     _efgtoa:
 10264                           	callstack 9
 10265   00001E                     
 10266                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 587: static void 
      +                          efgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v3.00\pic\sources
      +                          \c99\common\doprnt.c: 588: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common
      +                          \doprnt.c: 589:     char mode, nmode, pp, sign, esign;;C:\Program Files\Microchip\xc8\v3
      +                          .00\pic\sources\c99\common\doprnt.c: 590:     int d, e, i, m, n, ne, p, t, w;;C:\Program
      +                           Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 591:     long double h, l;
 10267   00001E  0101               	movlb	1	; () banked
 10268   000020  6B85               	clrf	efgtoa@sign& (0+255),b
 10269                           
 10270                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 596:     g.f = f;
 10271   000022  C15C  F18A         	movff	efgtoa@f,efgtoa@g
 10272   000026  C15D  F18B         	movff	efgtoa@f+1,efgtoa@g+1
 10273   00002A  C15E  F18C         	movff	efgtoa@f+2,efgtoa@g+2
 10274   00002E  C15F  F18D         	movff	efgtoa@f+3,efgtoa@g+3
 10275   000032                     
 10276                           ; BSR set to: 1
 10277                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 597:     if (g.f 
      +                          < 0.0) {
 10278   000032  BF8D               	btfsc	(efgtoa@g+3)& (0+255),7,b
 10279   000034  EF20  F000         	goto	u7850
 10280   000038  EF1E  F000         	goto	u7851
 10281   00003C                     u7851:
 10282   00003C  EF34  F000         	goto	l7118
 10283   000040                     u7850:
 10284   000040                     
 10285                           ; BSR set to: 1
 10286                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 598:         sign
      +                           = 1;
 10287   000040  0E01               	movlw	1
 10288   000042  6F85               	movwf	efgtoa@sign& (0+255),b
 10289   000044                     
 10290                           ; BSR set to: 1
 10291                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 599:         g.f 
      +                          = -g.f;
 10292   000044  C18A  F106         	movff	efgtoa@g,___flneg@f1
 10293   000048  C18B  F107         	movff	efgtoa@g+1,___flneg@f1+1
 10294   00004C  C18C  F108         	movff	efgtoa@g+2,___flneg@f1+2
 10295   000050  C18D  F109         	movff	efgtoa@g+3,___flneg@f1+3
 10296   000054  ECB7  F030         	call	___flneg	;wreg free
 10297   000058  C106  F18A         	movff	?___flneg,efgtoa@g
 10298   00005C  C107  F18B         	movff	?___flneg+1,efgtoa@g+1
 10299   000060  C108  F18C         	movff	?___flneg+2,efgtoa@g+2
 10300   000064  C109  F18D         	movff	?___flneg+3,efgtoa@g+3
 10301   000068                     l7118:
 10302                           
 10303                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 603:     n = 0;
 10304   000068  0E00               	movlw	0
 10305   00006A  0101               	movlb	1	; () banked
 10306   00006C  6F89               	movwf	(efgtoa@n+1)& (0+255),b
 10307   00006E  0E00               	movlw	0
 10308   000070  6F88               	movwf	efgtoa@n& (0+255),b
 10309   000072                     
 10310                           ; BSR set to: 1
 10311                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 604:     w = widt
      +                          h;
 10312   000072  C0DD  F175         	movff	_width,efgtoa@w
 10313   000076  C0DE  F176         	movff	_width+1,efgtoa@w+1
 10314   00007A                     
 10315                           ; BSR set to: 1
 10316                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 605:     if (sign
 10317   00007A  5185               	movf	efgtoa@sign& (0+255),w,b
 10318   00007C  B4D8               	btfsc	status,2,c
 10319   00007E  EF43  F000         	goto	u7861
 10320   000082  EF45  F000         	goto	u7860
 10321   000086                     u7861:
 10322   000086  EF59  F000         	goto	l7132
 10323   00008A                     u7860:
 10324   00008A                     
 10325                           ; BSR set to: 1
 10326                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 609:    ) {;C:\Pr
      +                          ogram Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 610:   sign = sign ? '-
      +                          ' : '+';
 10327   00008A  5185               	movf	efgtoa@sign& (0+255),w,b
 10328   00008C  A4D8               	btfss	status,2,c
 10329   00008E  EF4B  F000         	goto	u7871
 10330   000092  EF4D  F000         	goto	u7870
 10331   000096                     u7871:
 10332   000096  EF53  F000         	goto	l7128
 10333   00009A                     u7870:
 10334   00009A                     
 10335                           ; BSR set to: 1
 10336   00009A  0E00               	movlw	0
 10337   00009C  6F66               	movwf	(_efgtoa$2326+1)& (0+255),b
 10338   00009E  0E2B               	movlw	43
 10339   0000A0  6F65               	movwf	_efgtoa$2326& (0+255),b
 10340   0000A2  EF57  F000         	goto	l7130
 10341   0000A6                     l7128:
 10342                           
 10343                           ; BSR set to: 1
 10344   0000A6  0E00               	movlw	0
 10345   0000A8  6F66               	movwf	(_efgtoa$2326+1)& (0+255),b
 10346   0000AA  0E2D               	movlw	45
 10347   0000AC  6F65               	movwf	_efgtoa$2326& (0+255),b
 10348   0000AE                     l7130:
 10349                           
 10350                           ; BSR set to: 1
 10351   0000AE  C165  F185         	movff	_efgtoa$2326,efgtoa@sign
 10352   0000B2                     l7132:
 10353                           
 10354                           ; BSR set to: 1
 10355                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 619:     if (( __
      +                          fpclassifyf(g.f) == 1 )) {
 10356   0000B2  C18A  F106         	movff	efgtoa@g,___fpclassifyf@x
 10357   0000B6  C18B  F107         	movff	efgtoa@g+1,___fpclassifyf@x+1
 10358   0000BA  C18C  F108         	movff	efgtoa@g+2,___fpclassifyf@x+2
 10359   0000BE  C18D  F109         	movff	efgtoa@g+3,___fpclassifyf@x+3
 10360   0000C2  EC31  F024         	call	___fpclassifyf	;wreg free
 10361   0000C6  0101               	movlb	1	; () banked
 10362   0000C8  0506               	decf	?___fpclassifyf& (0+255),w,b
 10363   0000CA  1107               	iorwf	(?___fpclassifyf+1)& (0+255),w,b
 10364   0000CC  A4D8               	btfss	status,2,c
 10365   0000CE  EF6B  F000         	goto	u7881
 10366   0000D2  EF6D  F000         	goto	u7880
 10367   0000D6                     u7881:
 10368   0000D6  EF9F  F000         	goto	l7150
 10369   0000DA                     u7880:
 10370   0000DA                     
 10371                           ; BSR set to: 1
 10372                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 620:   if (sign) 
      +                          {
 10373   0000DA  5185               	movf	efgtoa@sign& (0+255),w,b
 10374   0000DC  B4D8               	btfsc	status,2,c
 10375   0000DE  EF73  F000         	goto	u7891
 10376   0000E2  EF75  F000         	goto	u7890
 10377   0000E6                     u7891:
 10378   0000E6  EF7E  F000         	goto	l7142
 10379   0000EA                     u7890:
 10380   0000EA                     
 10381                           ; BSR set to: 1
 10382                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 621:    dbuf[0] =
      +                           sign;
 10383   0000EA  C185  F200         	movff	efgtoa@sign,_dbuf
 10384   0000EE                     
 10385                           ; BSR set to: 1
 10386                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 622:    w--;
 10387   0000EE  0775               	decf	efgtoa@w& (0+255),f,b
 10388   0000F0  A0D8               	btfss	status,0,c
 10389   0000F2  0776               	decf	(efgtoa@w+1)& (0+255),f,b
 10390   0000F4                     
 10391                           ; BSR set to: 1
 10392                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 623:    n = 1;
 10393   0000F4  0E00               	movlw	0
 10394   0000F6  6F89               	movwf	(efgtoa@n+1)& (0+255),b
 10395   0000F8  0E01               	movlw	1
 10396   0000FA  6F88               	movwf	efgtoa@n& (0+255),b
 10397   0000FC                     l7142:
 10398                           
 10399                           ; BSR set to: 1
 10400                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 631:   {;C:\Progr
      +                          am Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 632:             strcpy(&d
      +                          buf[n], "inf");
 10401   0000FC  0E00               	movlw	low _dbuf
 10402   0000FE  2588               	addwf	efgtoa@n& (0+255),w,b
 10403   000100  6F06               	movwf	strcpy@dest& (0+255),b
 10404   000102  0E02               	movlw	high _dbuf
 10405   000104  2189               	addwfc	(efgtoa@n+1)& (0+255),w,b
 10406   000106  6F07               	movwf	(strcpy@dest+1)& (0+255),b
 10407   000108  0EF7               	movlw	low STR_20
 10408   00010A  6F08               	movwf	strcpy@src& (0+255),b
 10409   00010C  0EFF               	movlw	high STR_20
 10410   00010E  6F09               	movwf	(strcpy@src+1)& (0+255),b
 10411   000110  EC6B  F02F         	call	_strcpy	;wreg free
 10412   000114                     l7144:
 10413                           
 10414                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 633:         };C:
      +                          \Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 634:         w -= ((
      +                          sizeof("inf")/sizeof("inf"[0]))-1);
 10415   000114  0101               	movlb	1	; () banked
 10416   000116  0EFD               	movlw	253
 10417   000118  2775               	addwf	efgtoa@w& (0+255),f,b
 10418   00011A  0EFF               	movlw	255
 10419   00011C  2376               	addwfc	(efgtoa@w+1)& (0+255),f,b
 10420   00011E                     
 10421                           ; BSR set to: 1
 10422                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 635:         retu
      +                          rn (void) pad(fp, &dbuf[0], w);
 10423   00011E  C15A  F116         	movff	efgtoa@fp,pad@fp
 10424   000122  C15B  F117         	movff	efgtoa@fp+1,pad@fp+1
 10425   000126  0E00               	movlw	low _dbuf
 10426   000128  6F18               	movwf	pad@buf& (0+255),b
 10427   00012A  0E02               	movlw	high _dbuf
 10428   00012C  6F19               	movwf	(pad@buf+1)& (0+255),b
 10429   00012E  C175  F11A         	movff	efgtoa@w,pad@p
 10430   000132  C176  F11B         	movff	efgtoa@w+1,pad@p+1
 10431   000136  EC1B  F02C         	call	_pad	;wreg free
 10432   00013A  EFAD  F005         	goto	l1601
 10433   00013E                     l7150:
 10434                           
 10435                           ; BSR set to: 1
 10436                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 637:     if (( __
      +                          fpclassifyf(g.f) == 0 )) {
 10437   00013E  C18A  F106         	movff	efgtoa@g,___fpclassifyf@x
 10438   000142  C18B  F107         	movff	efgtoa@g+1,___fpclassifyf@x+1
 10439   000146  C18C  F108         	movff	efgtoa@g+2,___fpclassifyf@x+2
 10440   00014A  C18D  F109         	movff	efgtoa@g+3,___fpclassifyf@x+3
 10441   00014E  EC31  F024         	call	___fpclassifyf	;wreg free
 10442   000152  0101               	movlb	1	; () banked
 10443   000154  5106               	movf	?___fpclassifyf& (0+255),w,b
 10444   000156  1107               	iorwf	(?___fpclassifyf+1)& (0+255),w,b
 10445   000158  A4D8               	btfss	status,2,c
 10446   00015A  EFB1  F000         	goto	u7901
 10447   00015E  EFB3  F000         	goto	u7900
 10448   000162                     u7901:
 10449   000162  EFD2  F000         	goto	l7168
 10450   000166                     u7900:
 10451   000166                     
 10452                           ; BSR set to: 1
 10453                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 638:   if (sign) 
      +                          {
 10454   000166  5185               	movf	efgtoa@sign& (0+255),w,b
 10455   000168  B4D8               	btfsc	status,2,c
 10456   00016A  EFB9  F000         	goto	u7911
 10457   00016E  EFBB  F000         	goto	u7910
 10458   000172                     u7911:
 10459   000172  EFC4  F000         	goto	l7160
 10460   000176                     u7910:
 10461   000176                     
 10462                           ; BSR set to: 1
 10463                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 639:    dbuf[0] =
      +                           sign;
 10464   000176  C185  F200         	movff	efgtoa@sign,_dbuf
 10465   00017A                     
 10466                           ; BSR set to: 1
 10467                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 640:    w--;
 10468   00017A  0775               	decf	efgtoa@w& (0+255),f,b
 10469   00017C  A0D8               	btfss	status,0,c
 10470   00017E  0776               	decf	(efgtoa@w+1)& (0+255),f,b
 10471   000180                     
 10472                           ; BSR set to: 1
 10473                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 641:    n = 1;
 10474   000180  0E00               	movlw	0
 10475   000182  6F89               	movwf	(efgtoa@n+1)& (0+255),b
 10476   000184  0E01               	movlw	1
 10477   000186  6F88               	movwf	efgtoa@n& (0+255),b
 10478   000188                     l7160:
 10479                           
 10480                           ; BSR set to: 1
 10481                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 649:   {;C:\Progr
      +                          am Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 650:             strcpy(&d
      +                          buf[n], "nan");
 10482   000188  0E00               	movlw	low _dbuf
 10483   00018A  2588               	addwf	efgtoa@n& (0+255),w,b
 10484   00018C  6F06               	movwf	strcpy@dest& (0+255),b
 10485   00018E  0E02               	movlw	high _dbuf
 10486   000190  2189               	addwfc	(efgtoa@n+1)& (0+255),w,b
 10487   000192  6F07               	movwf	(strcpy@dest+1)& (0+255),b
 10488   000194  0EFB               	movlw	low STR_23
 10489   000196  6F08               	movwf	strcpy@src& (0+255),b
 10490   000198  0EFF               	movlw	high STR_23
 10491   00019A  6F09               	movwf	(strcpy@src+1)& (0+255),b
 10492   00019C  EC6B  F02F         	call	_strcpy	;wreg free
 10493   0001A0  EF8A  F000         	goto	l7144
 10494   0001A4                     l7168:
 10495                           
 10496                           ; BSR set to: 1
 10497                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 657:     u.f = 1.
      +                          0;
 10498   0001A4  0E00               	movlw	0
 10499   0001A6  6F8E               	movwf	efgtoa@u& (0+255),b
 10500   0001A8  0E00               	movlw	0
 10501   0001AA  6F8F               	movwf	(efgtoa@u+1)& (0+255),b
 10502   0001AC  0E80               	movlw	128
 10503   0001AE  6F90               	movwf	(efgtoa@u+2)& (0+255),b
 10504   0001B0  0E3F               	movlw	63
 10505   0001B2  6F91               	movwf	(efgtoa@u+3)& (0+255),b
 10506                           
 10507                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 658:     e = 0;
 10508   0001B4  0E00               	movlw	0
 10509   0001B6  6F84               	movwf	(efgtoa@e+1)& (0+255),b
 10510   0001B8  0E00               	movlw	0
 10511   0001BA  6F83               	movwf	efgtoa@e& (0+255),b
 10512   0001BC                     
 10513                           ; BSR set to: 1
 10514                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 659:  if (!(g.f =
      +                          = 0.0)) {
 10515   0001BC  C18A  F106         	movff	efgtoa@g,___fleq@ff1
 10516   0001C0  C18B  F107         	movff	efgtoa@g+1,___fleq@ff1+1
 10517   0001C4  C18C  F108         	movff	efgtoa@g+2,___fleq@ff1+2
 10518   0001C8  C18D  F109         	movff	efgtoa@g+3,___fleq@ff1+3
 10519   0001CC  0E00               	movlw	0
 10520   0001CE  6F0A               	movwf	___fleq@ff2& (0+255),b
 10521   0001D0  0E00               	movlw	0
 10522   0001D2  6F0B               	movwf	(___fleq@ff2+1)& (0+255),b
 10523   0001D4  0E00               	movlw	0
 10524   0001D6  6F0C               	movwf	(___fleq@ff2+2)& (0+255),b
 10525   0001D8  0E00               	movlw	0
 10526   0001DA  6F0D               	movwf	(___fleq@ff2+3)& (0+255),b
 10527   0001DC  EC00  F02A         	call	___fleq	;wreg free
 10528   0001E0  0101               	movlb	1	; () banked
 10529   0001E2  B0D8               	btfsc	status,0,c
 10530   0001E4  EFF6  F000         	goto	u7921
 10531   0001E8  EFF8  F000         	goto	u7920
 10532   0001EC                     u7921:
 10533   0001EC  EFDA  F001         	goto	l1604
 10534   0001F0                     u7920:
 10535   0001F0  EF04  F001         	goto	l7176
 10536   0001F4                     l1606:
 10537                           
 10538                           ; BSR set to: 1
 10539                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 661:    u = ou;
 10540   0001F4  C177  F18E         	movff	efgtoa@ou,efgtoa@u
 10541   0001F8  C178  F18F         	movff	efgtoa@ou+1,efgtoa@u+1
 10542   0001FC  C179  F190         	movff	efgtoa@ou+2,efgtoa@u+2
 10543   000200  C17A  F191         	movff	efgtoa@ou+3,efgtoa@u+3
 10544   000204                     
 10545                           ; BSR set to: 1
 10546                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 662:    ++e;
 10547   000204  4B83               	infsnz	efgtoa@e& (0+255),f,b
 10548   000206  2B84               	incf	(efgtoa@e+1)& (0+255),f,b
 10549   000208                     l7176:
 10550                           
 10551                           ; BSR set to: 1
 10552                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 660:   while ((la
      +                          bs((g).u-((ou.f = u.f*10.0,ou)).u) <= 1) || g.f > ou.f) {
 10553   000208  C18E  F114         	movff	efgtoa@u,___flmul@b
 10554   00020C  C18F  F115         	movff	efgtoa@u+1,___flmul@b+1
 10555   000210  C190  F116         	movff	efgtoa@u+2,___flmul@b+2
 10556   000214  C191  F117         	movff	efgtoa@u+3,___flmul@b+3
 10557   000218  0E00               	movlw	0
 10558   00021A  6F18               	movwf	___flmul@a& (0+255),b
 10559   00021C  0E00               	movlw	0
 10560   00021E  6F19               	movwf	(___flmul@a+1)& (0+255),b
 10561   000220  0E20               	movlw	32
 10562   000222  6F1A               	movwf	(___flmul@a+2)& (0+255),b
 10563   000224  0E41               	movlw	65
 10564   000226  6F1B               	movwf	(___flmul@a+3)& (0+255),b
 10565   000228  ECFC  F00F         	call	___flmul	;wreg free
 10566   00022C  C114  F177         	movff	?___flmul,efgtoa@ou
 10567   000230  C115  F178         	movff	?___flmul+1,efgtoa@ou+1
 10568   000234  C116  F179         	movff	?___flmul+2,efgtoa@ou+2
 10569   000238  C117  F17A         	movff	?___flmul+3,efgtoa@ou+3
 10570   00023C  0101               	movlb	1	; () banked
 10571   00023E  5177               	movf	efgtoa@ou& (0+255),w,b
 10572   000240  5D8A               	subwf	efgtoa@g& (0+255),w,b
 10573   000242  6F06               	movwf	labs@a& (0+255),b
 10574   000244  5178               	movf	(efgtoa@ou+1)& (0+255),w,b
 10575   000246  598B               	subwfb	(efgtoa@g+1)& (0+255),w,b
 10576   000248  6F07               	movwf	(labs@a+1)& (0+255),b
 10577   00024A  5179               	movf	(efgtoa@ou+2)& (0+255),w,b
 10578   00024C  598C               	subwfb	(efgtoa@g+2)& (0+255),w,b
 10579   00024E  6F08               	movwf	(labs@a+2)& (0+255),b
 10580   000250  517A               	movf	(efgtoa@ou+3)& (0+255),w,b
 10581   000252  598D               	subwfb	(efgtoa@g+3)& (0+255),w,b
 10582   000254  6F09               	movwf	(labs@a+3)& (0+255),b
 10583   000256  ECD7  F02D         	call	_labs	;wreg free
 10584   00025A  0101               	movlb	1	; () banked
 10585   00025C  BF09               	btfsc	(?_labs+3)& (0+255),7,b
 10586   00025E  EF3C  F001         	goto	u7931
 10587   000262  5109               	movf	(?_labs+3)& (0+255),w,b
 10588   000264  1108               	iorwf	(?_labs+2)& (0+255),w,b
 10589   000266  1107               	iorwf	(?_labs+1)& (0+255),w,b
 10590   000268  E109               	bnz	u7930
 10591   00026A  0E02               	movlw	2
 10592   00026C  5D06               	subwf	?_labs& (0+255),w,b
 10593   00026E  A0D8               	btfss	status,0,c
 10594   000270  EF3C  F001         	goto	u7931
 10595   000274  EF3E  F001         	goto	u7930
 10596   000278                     u7931:
 10597   000278  EFFA  F000         	goto	l1606
 10598   00027C                     u7930:
 10599   00027C                     
 10600                           ; BSR set to: 1
 10601   00027C  C177  F12D         	movff	efgtoa@ou,___flge@ff1
 10602   000280  C178  F12E         	movff	efgtoa@ou+1,___flge@ff1+1
 10603   000284  C179  F12F         	movff	efgtoa@ou+2,___flge@ff1+2
 10604   000288  C17A  F130         	movff	efgtoa@ou+3,___flge@ff1+3
 10605   00028C  C18A  F131         	movff	efgtoa@g,___flge@ff2
 10606   000290  C18B  F132         	movff	efgtoa@g+1,___flge@ff2+1
 10607   000294  C18C  F133         	movff	efgtoa@g+2,___flge@ff2+2
 10608   000298  C18D  F134         	movff	efgtoa@g+3,___flge@ff2+3
 10609   00029C  ECA9  F022         	call	___flge	;wreg free
 10610   0002A0  0101               	movlb	1	; () banked
 10611   0002A2  A0D8               	btfss	status,0,c
 10612   0002A4  EF56  F001         	goto	u7941
 10613   0002A8  EF58  F001         	goto	u7940
 10614   0002AC                     u7941:
 10615   0002AC  EFFA  F000         	goto	l1606
 10616   0002B0                     u7940:
 10617   0002B0                     
 10618                           ; BSR set to: 1
 10619                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 664:   if ((labs(
      +                          (g).u-(u).u) <= 1)) {
 10620   0002B0  518E               	movf	efgtoa@u& (0+255),w,b
 10621   0002B2  5D8A               	subwf	efgtoa@g& (0+255),w,b
 10622   0002B4  6F06               	movwf	labs@a& (0+255),b
 10623   0002B6  518F               	movf	(efgtoa@u+1)& (0+255),w,b
 10624   0002B8  598B               	subwfb	(efgtoa@g+1)& (0+255),w,b
 10625   0002BA  6F07               	movwf	(labs@a+1)& (0+255),b
 10626   0002BC  5190               	movf	(efgtoa@u+2)& (0+255),w,b
 10627   0002BE  598C               	subwfb	(efgtoa@g+2)& (0+255),w,b
 10628   0002C0  6F08               	movwf	(labs@a+2)& (0+255),b
 10629   0002C2  5191               	movf	(efgtoa@u+3)& (0+255),w,b
 10630   0002C4  598D               	subwfb	(efgtoa@g+3)& (0+255),w,b
 10631   0002C6  6F09               	movwf	(labs@a+3)& (0+255),b
 10632   0002C8  ECD7  F02D         	call	_labs	;wreg free
 10633   0002CC  0101               	movlb	1	; () banked
 10634   0002CE  BF09               	btfsc	(?_labs+3)& (0+255),7,b
 10635   0002D0  EF77  F001         	goto	u7950
 10636   0002D4  5109               	movf	(?_labs+3)& (0+255),w,b
 10637   0002D6  1108               	iorwf	(?_labs+2)& (0+255),w,b
 10638   0002D8  1107               	iorwf	(?_labs+1)& (0+255),w,b
 10639   0002DA  E107               	bnz	u7951
 10640   0002DC  0E02               	movlw	2
 10641   0002DE  5D06               	subwf	?_labs& (0+255),w,b
 10642   0002E0  B0D8               	btfsc	status,0,c
 10643   0002E2  EF75  F001         	goto	u7951
 10644   0002E6  EF77  F001         	goto	u7950
 10645   0002EA                     u7951:
 10646   0002EA  EFC0  F001         	goto	l7194
 10647   0002EE                     u7950:
 10648   0002EE                     l7184:
 10649                           
 10650                           ; BSR set to: 1
 10651                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 665:    g = u;
 10652   0002EE  C18E  F18A         	movff	efgtoa@u,efgtoa@g
 10653   0002F2  C18F  F18B         	movff	efgtoa@u+1,efgtoa@g+1
 10654   0002F6  C190  F18C         	movff	efgtoa@u+2,efgtoa@g+2
 10655   0002FA  C191  F18D         	movff	efgtoa@u+3,efgtoa@g+3
 10656                           
 10657                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 666:   }
 10658   0002FE  EFDA  F001         	goto	l1604
 10659   000302                     l7186:
 10660                           
 10661                           ; BSR set to: 1
 10662                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 669:     u.f = u.
      +                          f/10.0;
 10663   000302  C18E  F12D         	movff	efgtoa@u,___fldiv@b
 10664   000306  C18F  F12E         	movff	efgtoa@u+1,___fldiv@b+1
 10665   00030A  C190  F12F         	movff	efgtoa@u+2,___fldiv@b+2
 10666   00030E  C191  F130         	movff	efgtoa@u+3,___fldiv@b+3
 10667   000312  0E00               	movlw	0
 10668   000314  6F31               	movwf	___fldiv@a& (0+255),b
 10669   000316  0E00               	movlw	0
 10670   000318  6F32               	movwf	(___fldiv@a+1)& (0+255),b
 10671   00031A  0E20               	movlw	32
 10672   00031C  6F33               	movwf	(___fldiv@a+2)& (0+255),b
 10673   00031E  0E41               	movlw	65
 10674   000320  6F34               	movwf	(___fldiv@a+3)& (0+255),b
 10675   000322  EC47  F014         	call	___fldiv	;wreg free
 10676   000326  C12D  F18E         	movff	?___fldiv,efgtoa@u
 10677   00032A  C12E  F18F         	movff	?___fldiv+1,efgtoa@u+1
 10678   00032E  C12F  F190         	movff	?___fldiv+2,efgtoa@u+2
 10679   000332  C130  F191         	movff	?___fldiv+3,efgtoa@u+3
 10680   000336                     
 10681                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 670:     --e;
 10682   000336  0101               	movlb	1	; () banked
 10683   000338  0783               	decf	efgtoa@e& (0+255),f,b
 10684   00033A  A0D8               	btfss	status,0,c
 10685   00033C  0784               	decf	(efgtoa@e+1)& (0+255),f,b
 10686   00033E                     
 10687                           ; BSR set to: 1
 10688                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 671:     if ((lab
      +                          s((g).u-(u).u) <= 1)) {
 10689   00033E  518E               	movf	efgtoa@u& (0+255),w,b
 10690   000340  5D8A               	subwf	efgtoa@g& (0+255),w,b
 10691   000342  6F06               	movwf	labs@a& (0+255),b
 10692   000344  518F               	movf	(efgtoa@u+1)& (0+255),w,b
 10693   000346  598B               	subwfb	(efgtoa@g+1)& (0+255),w,b
 10694   000348  6F07               	movwf	(labs@a+1)& (0+255),b
 10695   00034A  5190               	movf	(efgtoa@u+2)& (0+255),w,b
 10696   00034C  598C               	subwfb	(efgtoa@g+2)& (0+255),w,b
 10697   00034E  6F08               	movwf	(labs@a+2)& (0+255),b
 10698   000350  5191               	movf	(efgtoa@u+3)& (0+255),w,b
 10699   000352  598D               	subwfb	(efgtoa@g+3)& (0+255),w,b
 10700   000354  6F09               	movwf	(labs@a+3)& (0+255),b
 10701   000356  ECD7  F02D         	call	_labs	;wreg free
 10702   00035A  0101               	movlb	1	; () banked
 10703   00035C  BF09               	btfsc	(?_labs+3)& (0+255),7,b
 10704   00035E  EFBE  F001         	goto	u7960
 10705   000362  5109               	movf	(?_labs+3)& (0+255),w,b
 10706   000364  1108               	iorwf	(?_labs+2)& (0+255),w,b
 10707   000366  1107               	iorwf	(?_labs+1)& (0+255),w,b
 10708   000368  E107               	bnz	u7961
 10709   00036A  0E02               	movlw	2
 10710   00036C  5D06               	subwf	?_labs& (0+255),w,b
 10711   00036E  B0D8               	btfsc	status,0,c
 10712   000370  EFBC  F001         	goto	u7961
 10713   000374  EFBE  F001         	goto	u7960
 10714   000378                     u7961:
 10715   000378  EFC0  F001         	goto	l7194
 10716   00037C                     u7960:
 10717   00037C  EF77  F001         	goto	l7184
 10718   000380                     l7194:
 10719                           
 10720                           ; BSR set to: 1
 10721                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 668:    while (g.
      +                          f < u.f) {
 10722   000380  C18A  F12D         	movff	efgtoa@g,___flge@ff1
 10723   000384  C18B  F12E         	movff	efgtoa@g+1,___flge@ff1+1
 10724   000388  C18C  F12F         	movff	efgtoa@g+2,___flge@ff1+2
 10725   00038C  C18D  F130         	movff	efgtoa@g+3,___flge@ff1+3
 10726   000390  C18E  F131         	movff	efgtoa@u,___flge@ff2
 10727   000394  C18F  F132         	movff	efgtoa@u+1,___flge@ff2+1
 10728   000398  C190  F133         	movff	efgtoa@u+2,___flge@ff2+2
 10729   00039C  C191  F134         	movff	efgtoa@u+3,___flge@ff2+3
 10730   0003A0  ECA9  F022         	call	___flge	;wreg free
 10731   0003A4  0101               	movlb	1	; () banked
 10732   0003A6  A0D8               	btfss	status,0,c
 10733   0003A8  EFD8  F001         	goto	u7971
 10734   0003AC  EFDA  F001         	goto	u7970
 10735   0003B0                     u7971:
 10736   0003B0  EF81  F001         	goto	l7186
 10737   0003B4                     u7970:
 10738   0003B4                     l1604:
 10739                           
 10740                           ; BSR set to: 1
 10741                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 683:  mode = c;
 10742   0003B4  C160  F16D         	movff	efgtoa@c,efgtoa@mode
 10743                           
 10744                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 685:     nmode = 
      +                          mode;
 10745   0003B8  C16D  F174         	movff	efgtoa@mode,efgtoa@nmode
 10746   0003BC                     
 10747                           ; BSR set to: 1
 10748                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 695:  {;C:\Progra
      +                          m Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 696:         p = (prec < 0)
      +                           ? 6 : prec;
 10749   0003BC  0100               	movlb	0	; () banked
 10750   0003BE  BFE0               	btfsc	(_prec+1)& (0+255),7,b
 10751   0003C0  EFE4  F001         	goto	u7981
 10752   0003C4  EFE6  F001         	goto	u7980
 10753   0003C8                     u7981:
 10754   0003C8  EFEC  F001         	goto	l7200
 10755   0003CC                     u7980:
 10756   0003CC                     
 10757                           ; BSR set to: 0
 10758   0003CC  C0DF  F172         	movff	_prec,efgtoa@p
 10759   0003D0  C0E0  F173         	movff	_prec+1,efgtoa@p+1
 10760   0003D4  EFF1  F001         	goto	l7202
 10761   0003D8                     l7200:
 10762                           
 10763                           ; BSR set to: 0
 10764   0003D8  0E00               	movlw	0
 10765   0003DA  0101               	movlb	1	; () banked
 10766   0003DC  6F73               	movwf	(efgtoa@p+1)& (0+255),b
 10767   0003DE  0E06               	movlw	6
 10768   0003E0  6F72               	movwf	efgtoa@p& (0+255),b
 10769   0003E2                     l7202:
 10770                           
 10771                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 697:     };C:\Pro
      +                          gram Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 711:     m = p;
 10772   0003E2  C172  F170         	movff	efgtoa@p,efgtoa@m
 10773   0003E6  C173  F171         	movff	efgtoa@p+1,efgtoa@m+1
 10774   0003EA                     
 10775                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 715:  {;C:\Progra
      +                          m Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 716:         ++m;
 10776   0003EA  0101               	movlb	1	; () banked
 10777   0003EC  4B70               	infsnz	efgtoa@m& (0+255),f,b
 10778   0003EE  2B71               	incf	(efgtoa@m+1)& (0+255),f,b
 10779   0003F0                     
 10780                           ; BSR set to: 1
 10781                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 717:     };C:\Pro
      +                          gram Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 721:     if (nmode == 'f
      +                          ') {
 10782   0003F0  0E66               	movlw	102
 10783   0003F2  1974               	xorwf	efgtoa@nmode& (0+255),w,b
 10784   0003F4  A4D8               	btfss	status,2,c
 10785   0003F6  EFFF  F001         	goto	u7991
 10786   0003FA  EF01  F002         	goto	u7990
 10787   0003FE                     u7991:
 10788   0003FE  EF21  F002         	goto	l7216
 10789   000402                     u7990:
 10790   000402                     
 10791                           ; BSR set to: 1
 10792                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 722:         if (
      +                          e < 0) {
 10793   000402  BF84               	btfsc	(efgtoa@e+1)& (0+255),7,b
 10794   000404  EF08  F002         	goto	u8000
 10795   000408  EF06  F002         	goto	u8001
 10796   00040C                     u8001:
 10797   00040C  EF14  F002         	goto	l7212
 10798   000410                     u8000:
 10799   000410                     
 10800                           ; BSR set to: 1
 10801                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 723:             
      +                          u.f = 1.0;
 10802   000410  0E00               	movlw	0
 10803   000412  6F8E               	movwf	efgtoa@u& (0+255),b
 10804   000414  0E00               	movlw	0
 10805   000416  6F8F               	movwf	(efgtoa@u+1)& (0+255),b
 10806   000418  0E80               	movlw	128
 10807   00041A  6F90               	movwf	(efgtoa@u+2)& (0+255),b
 10808   00041C  0E3F               	movlw	63
 10809   00041E  6F91               	movwf	(efgtoa@u+3)& (0+255),b
 10810                           
 10811                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 724:             
      +                          e = 0;
 10812   000420  0E00               	movlw	0
 10813   000422  6F84               	movwf	(efgtoa@e+1)& (0+255),b
 10814   000424  0E00               	movlw	0
 10815   000426  6F83               	movwf	efgtoa@e& (0+255),b
 10816   000428                     l7212:
 10817                           
 10818                           ; BSR set to: 1
 10819                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 726:         if (
      +                          !(mode == 'g')) {
 10820   000428  0E67               	movlw	103
 10821   00042A  196D               	xorwf	efgtoa@mode& (0+255),w,b
 10822   00042C  B4D8               	btfsc	status,2,c
 10823   00042E  EF1B  F002         	goto	u8011
 10824   000432  EF1D  F002         	goto	u8010
 10825   000436                     u8011:
 10826   000436  EF21  F002         	goto	l7216
 10827   00043A                     u8010:
 10828   00043A                     
 10829                           ; BSR set to: 1
 10830                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 727:             
      +                          m += e;
 10831   00043A  5183               	movf	efgtoa@e& (0+255),w,b
 10832   00043C  2770               	addwf	efgtoa@m& (0+255),f,b
 10833   00043E  5184               	movf	(efgtoa@e+1)& (0+255),w,b
 10834   000440  2371               	addwfc	(efgtoa@m+1)& (0+255),f,b
 10835   000442                     l7216:
 10836                           
 10837                           ; BSR set to: 1
 10838                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 733:     i = 0;
 10839   000442  0E00               	movlw	0
 10840   000444  6F87               	movwf	(efgtoa@i+1)& (0+255),b
 10841   000446  0E00               	movlw	0
 10842   000448  6F86               	movwf	efgtoa@i& (0+255),b
 10843   00044A                     
 10844                           ; BSR set to: 1
 10845                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 734:     h = g.f;
 10846   00044A  C18A  F17B         	movff	efgtoa@g,efgtoa@h
 10847   00044E  C18B  F17C         	movff	efgtoa@g+1,efgtoa@h+1
 10848   000452  C18C  F17D         	movff	efgtoa@g+2,efgtoa@h+2
 10849   000456  C18D  F17E         	movff	efgtoa@g+3,efgtoa@h+3
 10850   00045A                     
 10851                           ; BSR set to: 1
 10852                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 735:     ou = u;
 10853   00045A  C18E  F177         	movff	efgtoa@u,efgtoa@ou
 10854   00045E  C18F  F178         	movff	efgtoa@u+1,efgtoa@ou+1
 10855   000462  C190  F179         	movff	efgtoa@u+2,efgtoa@ou+2
 10856   000466  C191  F17A         	movff	efgtoa@u+3,efgtoa@ou+3
 10857                           
 10858                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 736:     while (i
      +                           < m) {
 10859   00046A  EFB3  F002         	goto	l7230
 10860   00046E                     l7222:
 10861                           
 10862                           ; BSR set to: 1
 10863                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 737:         l = 
      +                          floorf(h/u.f);
 10864   00046E  C17B  F12D         	movff	efgtoa@h,___fldiv@b
 10865   000472  C17C  F12E         	movff	efgtoa@h+1,___fldiv@b+1
 10866   000476  C17D  F12F         	movff	efgtoa@h+2,___fldiv@b+2
 10867   00047A  C17E  F130         	movff	efgtoa@h+3,___fldiv@b+3
 10868   00047E  C18E  F131         	movff	efgtoa@u,___fldiv@a
 10869   000482  C18F  F132         	movff	efgtoa@u+1,___fldiv@a+1
 10870   000486  C190  F133         	movff	efgtoa@u+2,___fldiv@a+2
 10871   00048A  C191  F134         	movff	efgtoa@u+3,___fldiv@a+3
 10872   00048E  EC47  F014         	call	___fldiv	;wreg free
 10873   000492  C12D  F146         	movff	?___fldiv,floorf@x
 10874   000496  C12E  F147         	movff	?___fldiv+1,floorf@x+1
 10875   00049A  C12F  F148         	movff	?___fldiv+2,floorf@x+2
 10876   00049E  C130  F149         	movff	?___fldiv+3,floorf@x+3
 10877   0004A2  ECBE  F01D         	call	_floorf	;wreg free
 10878   0004A6  C146  F17F         	movff	?_floorf,efgtoa@l
 10879   0004AA  C147  F180         	movff	?_floorf+1,efgtoa@l+1
 10880   0004AE  C148  F181         	movff	?_floorf+2,efgtoa@l+2
 10881   0004B2  C149  F182         	movff	?_floorf+3,efgtoa@l+3
 10882                           
 10883                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 738:         d = 
      +                          (int)l;
 10884   0004B6  C17F  F150         	movff	efgtoa@l,___fltol@f1
 10885   0004BA  C180  F151         	movff	efgtoa@l+1,___fltol@f1+1
 10886   0004BE  C181  F152         	movff	efgtoa@l+2,___fltol@f1+2
 10887   0004C2  C182  F153         	movff	efgtoa@l+3,___fltol@f1+3
 10888   0004C6  EC25  F022         	call	___fltol	;wreg free
 10889   0004CA  C150  F16E         	movff	?___fltol,efgtoa@d
 10890   0004CE  C151  F16F         	movff	?___fltol+1,efgtoa@d+1
 10891   0004D2                     
 10892                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 739:         h -=
      +                           l*u.f;
 10893   0004D2  C17B  F12D         	movff	efgtoa@h,___flsub@b
 10894   0004D6  C17C  F12E         	movff	efgtoa@h+1,___flsub@b+1
 10895   0004DA  C17D  F12F         	movff	efgtoa@h+2,___flsub@b+2
 10896   0004DE  C17E  F130         	movff	efgtoa@h+3,___flsub@b+3
 10897   0004E2  C17F  F118         	movff	efgtoa@l,___flmul@a
 10898   0004E6  C180  F119         	movff	efgtoa@l+1,___flmul@a+1
 10899   0004EA  C181  F11A         	movff	efgtoa@l+2,___flmul@a+2
 10900   0004EE  C182  F11B         	movff	efgtoa@l+3,___flmul@a+3
 10901   0004F2  C18E  F114         	movff	efgtoa@u,___flmul@b
 10902   0004F6  C18F  F115         	movff	efgtoa@u+1,___flmul@b+1
 10903   0004FA  C190  F116         	movff	efgtoa@u+2,___flmul@b+2
 10904   0004FE  C191  F117         	movff	efgtoa@u+3,___flmul@b+3
 10905   000502  ECFC  F00F         	call	___flmul	;wreg free
 10906   000506  C114  F131         	movff	?___flmul,___flsub@a
 10907   00050A  C115  F132         	movff	?___flmul+1,___flsub@a+1
 10908   00050E  C116  F133         	movff	?___flmul+2,___flsub@a+2
 10909   000512  C117  F134         	movff	?___flmul+3,___flsub@a+3
 10910   000516  EC47  F02F         	call	___flsub	;wreg free
 10911   00051A  C12D  F17B         	movff	?___flsub,efgtoa@h
 10912   00051E  C12E  F17C         	movff	?___flsub+1,efgtoa@h+1
 10913   000522  C12F  F17D         	movff	?___flsub+2,efgtoa@h+2
 10914   000526  C130  F17E         	movff	?___flsub+3,efgtoa@h+3
 10915   00052A                     
 10916                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 740:         u.f 
      +                          = u.f/10.0;
 10917   00052A  C18E  F12D         	movff	efgtoa@u,___fldiv@b
 10918   00052E  C18F  F12E         	movff	efgtoa@u+1,___fldiv@b+1
 10919   000532  C190  F12F         	movff	efgtoa@u+2,___fldiv@b+2
 10920   000536  C191  F130         	movff	efgtoa@u+3,___fldiv@b+3
 10921   00053A  0E00               	movlw	0
 10922   00053C  0101               	movlb	1	; () banked
 10923   00053E  6F31               	movwf	___fldiv@a& (0+255),b
 10924   000540  0E00               	movlw	0
 10925   000542  6F32               	movwf	(___fldiv@a+1)& (0+255),b
 10926   000544  0E20               	movlw	32
 10927   000546  6F33               	movwf	(___fldiv@a+2)& (0+255),b
 10928   000548  0E41               	movlw	65
 10929   00054A  6F34               	movwf	(___fldiv@a+3)& (0+255),b
 10930   00054C  EC47  F014         	call	___fldiv	;wreg free
 10931   000550  C12D  F18E         	movff	?___fldiv,efgtoa@u
 10932   000554  C12E  F18F         	movff	?___fldiv+1,efgtoa@u+1
 10933   000558  C12F  F190         	movff	?___fldiv+2,efgtoa@u+2
 10934   00055C  C130  F191         	movff	?___fldiv+3,efgtoa@u+3
 10935   000560                     
 10936                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 741:         ++i;
 10937   000560  0101               	movlb	1	; () banked
 10938   000562  4B86               	infsnz	efgtoa@i& (0+255),f,b
 10939   000564  2B87               	incf	(efgtoa@i+1)& (0+255),f,b
 10940   000566                     l7230:
 10941                           
 10942                           ; BSR set to: 1
 10943                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 736:     while (i
      +                           < m) {
 10944   000566  5170               	movf	efgtoa@m& (0+255),w,b
 10945   000568  5D86               	subwf	efgtoa@i& (0+255),w,b
 10946   00056A  5187               	movf	(efgtoa@i+1)& (0+255),w,b
 10947   00056C  0A80               	xorlw	128
 10948   00056E  6F61               	movwf	??_efgtoa& (0+255),b
 10949   000570  5171               	movf	(efgtoa@m+1)& (0+255),w,b
 10950   000572  0A80               	xorlw	128
 10951   000574  5961               	subwfb	??_efgtoa& (0+255),w,b
 10952   000576  A0D8               	btfss	status,0,c
 10953   000578  EFC0  F002         	goto	u8021
 10954   00057C  EFC2  F002         	goto	u8020
 10955   000580                     u8021:
 10956   000580  EF37  F002         	goto	l7222
 10957   000584                     u8020:
 10958   000584                     
 10959                           ; BSR set to: 1
 10960                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 745:     l = u.f*
      +                          5.0;
 10961   000584  C18E  F114         	movff	efgtoa@u,___flmul@b
 10962   000588  C18F  F115         	movff	efgtoa@u+1,___flmul@b+1
 10963   00058C  C190  F116         	movff	efgtoa@u+2,___flmul@b+2
 10964   000590  C191  F117         	movff	efgtoa@u+3,___flmul@b+3
 10965   000594  0E00               	movlw	0
 10966   000596  6F18               	movwf	___flmul@a& (0+255),b
 10967   000598  0E00               	movlw	0
 10968   00059A  6F19               	movwf	(___flmul@a+1)& (0+255),b
 10969   00059C  0EA0               	movlw	160
 10970   00059E  6F1A               	movwf	(___flmul@a+2)& (0+255),b
 10971   0005A0  0E40               	movlw	64
 10972   0005A2  6F1B               	movwf	(___flmul@a+3)& (0+255),b
 10973   0005A4  ECFC  F00F         	call	___flmul	;wreg free
 10974   0005A8  C114  F17F         	movff	?___flmul,efgtoa@l
 10975   0005AC  C115  F180         	movff	?___flmul+1,efgtoa@l+1
 10976   0005B0  C116  F181         	movff	?___flmul+2,efgtoa@l+2
 10977   0005B4  C117  F182         	movff	?___flmul+3,efgtoa@l+3
 10978   0005B8                     
 10979                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 746:     if (h < 
      +                          l) {
 10980   0005B8  C17B  F12D         	movff	efgtoa@h,___flge@ff1
 10981   0005BC  C17C  F12E         	movff	efgtoa@h+1,___flge@ff1+1
 10982   0005C0  C17D  F12F         	movff	efgtoa@h+2,___flge@ff1+2
 10983   0005C4  C17E  F130         	movff	efgtoa@h+3,___flge@ff1+3
 10984   0005C8  C17F  F131         	movff	efgtoa@l,___flge@ff2
 10985   0005CC  C180  F132         	movff	efgtoa@l+1,___flge@ff2+1
 10986   0005D0  C181  F133         	movff	efgtoa@l+2,___flge@ff2+2
 10987   0005D4  C182  F134         	movff	efgtoa@l+3,___flge@ff2+3
 10988   0005D8  ECA9  F022         	call	___flge	;wreg free
 10989   0005DC  0101               	movlb	1	; () banked
 10990   0005DE  B0D8               	btfsc	status,0,c
 10991   0005E0  EFF4  F002         	goto	u8031
 10992   0005E4  EFF6  F002         	goto	u8030
 10993   0005E8                     u8031:
 10994   0005E8  EF00  F003         	goto	l7238
 10995   0005EC                     u8030:
 10996   0005EC                     
 10997                           ; BSR set to: 1
 10998                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 747:         l = 
      +                          0.0;
 10999   0005EC  0E00               	movlw	0
 11000   0005EE  6F7F               	movwf	efgtoa@l& (0+255),b
 11001   0005F0  0E00               	movlw	0
 11002   0005F2  6F80               	movwf	(efgtoa@l+1)& (0+255),b
 11003   0005F4  0E00               	movlw	0
 11004   0005F6  6F81               	movwf	(efgtoa@l+2)& (0+255),b
 11005   0005F8  0E00               	movlw	0
 11006   0005FA  6F82               	movwf	(efgtoa@l+3)& (0+255),b
 11007                           
 11008                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 748:     } else {
 11009   0005FC  EF29  F003         	goto	l7244
 11010   000600                     l7238:
 11011                           
 11012                           ; BSR set to: 1
 11013                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 750:         if (
      +                          (h == l) && !(d % 2)) {
 11014   000600  C17B  F106         	movff	efgtoa@h,___fleq@ff1
 11015   000604  C17C  F107         	movff	efgtoa@h+1,___fleq@ff1+1
 11016   000608  C17D  F108         	movff	efgtoa@h+2,___fleq@ff1+2
 11017   00060C  C17E  F109         	movff	efgtoa@h+3,___fleq@ff1+3
 11018   000610  C17F  F10A         	movff	efgtoa@l,___fleq@ff2
 11019   000614  C180  F10B         	movff	efgtoa@l+1,___fleq@ff2+1
 11020   000618  C181  F10C         	movff	efgtoa@l+2,___fleq@ff2+2
 11021   00061C  C182  F10D         	movff	efgtoa@l+3,___fleq@ff2+3
 11022   000620  EC00  F02A         	call	___fleq	;wreg free
 11023   000624  0101               	movlb	1	; () banked
 11024   000626  A0D8               	btfss	status,0,c
 11025   000628  EF18  F003         	goto	u8041
 11026   00062C  EF1A  F003         	goto	u8040
 11027   000630                     u8041:
 11028   000630  EF29  F003         	goto	l7244
 11029   000634                     u8040:
 11030   000634                     
 11031                           ; BSR set to: 1
 11032   000634  B16E               	btfsc	efgtoa@d& (0+255),0,b
 11033   000636  EF1F  F003         	goto	u8051
 11034   00063A  EF21  F003         	goto	u8050
 11035   00063E                     u8051:
 11036   00063E  EF29  F003         	goto	l7244
 11037   000642                     u8050:
 11038   000642                     
 11039                           ; BSR set to: 1
 11040                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 751:             
      +                          l = 0.0;
 11041   000642  0E00               	movlw	0
 11042   000644  6F7F               	movwf	efgtoa@l& (0+255),b
 11043   000646  0E00               	movlw	0
 11044   000648  6F80               	movwf	(efgtoa@l+1)& (0+255),b
 11045   00064A  0E00               	movlw	0
 11046   00064C  6F81               	movwf	(efgtoa@l+2)& (0+255),b
 11047   00064E  0E00               	movlw	0
 11048   000650  6F82               	movwf	(efgtoa@l+3)& (0+255),b
 11049   000652                     l7244:
 11050                           
 11051                           ; BSR set to: 1
 11052                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 756:     h = g.f 
      +                          + l;
 11053   000652  C18A  F106         	movff	efgtoa@g,___fladd@b
 11054   000656  C18B  F107         	movff	efgtoa@g+1,___fladd@b+1
 11055   00065A  C18C  F108         	movff	efgtoa@g+2,___fladd@b+2
 11056   00065E  C18D  F109         	movff	efgtoa@g+3,___fladd@b+3
 11057   000662  C17F  F10A         	movff	efgtoa@l,___fladd@a
 11058   000666  C180  F10B         	movff	efgtoa@l+1,___fladd@a+1
 11059   00066A  C181  F10C         	movff	efgtoa@l+2,___fladd@a+2
 11060   00066E  C182  F10D         	movff	efgtoa@l+3,___fladd@a+3
 11061   000672  EC45  F00B         	call	___fladd	;wreg free
 11062   000676  C106  F17B         	movff	?___fladd,efgtoa@h
 11063   00067A  C107  F17C         	movff	?___fladd+1,efgtoa@h+1
 11064   00067E  C108  F17D         	movff	?___fladd+2,efgtoa@h+2
 11065   000682  C109  F17E         	movff	?___fladd+3,efgtoa@h+3
 11066   000686                     
 11067                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 758:  if (h >= (o
      +                          u.f*10.0)) {
 11068   000686  C17B  F12D         	movff	efgtoa@h,___flge@ff1
 11069   00068A  C17C  F12E         	movff	efgtoa@h+1,___flge@ff1+1
 11070   00068E  C17D  F12F         	movff	efgtoa@h+2,___flge@ff1+2
 11071   000692  C17E  F130         	movff	efgtoa@h+3,___flge@ff1+3
 11072   000696  0E00               	movlw	0
 11073   000698  0101               	movlb	1	; () banked
 11074   00069A  6F18               	movwf	___flmul@a& (0+255),b
 11075   00069C  0E00               	movlw	0
 11076   00069E  6F19               	movwf	(___flmul@a+1)& (0+255),b
 11077   0006A0  0E20               	movlw	32
 11078   0006A2  6F1A               	movwf	(___flmul@a+2)& (0+255),b
 11079   0006A4  0E41               	movlw	65
 11080   0006A6  6F1B               	movwf	(___flmul@a+3)& (0+255),b
 11081   0006A8  C177  F114         	movff	efgtoa@ou,___flmul@b
 11082   0006AC  C178  F115         	movff	efgtoa@ou+1,___flmul@b+1
 11083   0006B0  C179  F116         	movff	efgtoa@ou+2,___flmul@b+2
 11084   0006B4  C17A  F117         	movff	efgtoa@ou+3,___flmul@b+3
 11085   0006B8  ECFC  F00F         	call	___flmul	;wreg free
 11086   0006BC  C114  F131         	movff	?___flmul,___flge@ff2
 11087   0006C0  C115  F132         	movff	?___flmul+1,___flge@ff2+1
 11088   0006C4  C116  F133         	movff	?___flmul+2,___flge@ff2+2
 11089   0006C8  C117  F134         	movff	?___flmul+3,___flge@ff2+3
 11090   0006CC  ECA9  F022         	call	___flge	;wreg free
 11091   0006D0  0101               	movlb	1	; () banked
 11092   0006D2  A0D8               	btfss	status,0,c
 11093   0006D4  EF6E  F003         	goto	u8061
 11094   0006D8  EF70  F003         	goto	u8060
 11095   0006DC                     u8061:
 11096   0006DC  EF98  F003         	goto	l7256
 11097   0006E0                     u8060:
 11098   0006E0                     
 11099                           ; BSR set to: 1
 11100                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 759:   e++;
 11101   0006E0  4B83               	infsnz	efgtoa@e& (0+255),f,b
 11102   0006E2  2B84               	incf	(efgtoa@e+1)& (0+255),f,b
 11103   0006E4                     
 11104                           ; BSR set to: 1
 11105                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 760:   ou.f *= 10
      +                          .0;
 11106   0006E4  C177  F114         	movff	efgtoa@ou,___flmul@b
 11107   0006E8  C178  F115         	movff	efgtoa@ou+1,___flmul@b+1
 11108   0006EC  C179  F116         	movff	efgtoa@ou+2,___flmul@b+2
 11109   0006F0  C17A  F117         	movff	efgtoa@ou+3,___flmul@b+3
 11110   0006F4  0E00               	movlw	0
 11111   0006F6  6F18               	movwf	___flmul@a& (0+255),b
 11112   0006F8  0E00               	movlw	0
 11113   0006FA  6F19               	movwf	(___flmul@a+1)& (0+255),b
 11114   0006FC  0E20               	movlw	32
 11115   0006FE  6F1A               	movwf	(___flmul@a+2)& (0+255),b
 11116   000700  0E41               	movlw	65
 11117   000702  6F1B               	movwf	(___flmul@a+3)& (0+255),b
 11118   000704  ECFC  F00F         	call	___flmul	;wreg free
 11119   000708  C114  F177         	movff	?___flmul,efgtoa@ou
 11120   00070C  C115  F178         	movff	?___flmul+1,efgtoa@ou+1
 11121   000710  C116  F179         	movff	?___flmul+2,efgtoa@ou+2
 11122   000714  C117  F17A         	movff	?___flmul+3,efgtoa@ou+3
 11123   000718                     
 11124                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 762:   if (nmode 
      +                          == 'f') {
 11125   000718  0E66               	movlw	102
 11126   00071A  0101               	movlb	1	; () banked
 11127   00071C  1974               	xorwf	efgtoa@nmode& (0+255),w,b
 11128   00071E  A4D8               	btfss	status,2,c
 11129   000720  EF94  F003         	goto	u8071
 11130   000724  EF96  F003         	goto	u8070
 11131   000728                     u8071:
 11132   000728  EF98  F003         	goto	l7256
 11133   00072C                     u8070:
 11134   00072C                     
 11135                           ; BSR set to: 1
 11136                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 764:    m++;
 11137   00072C  4B70               	infsnz	efgtoa@m& (0+255),f,b
 11138   00072E  2B71               	incf	(efgtoa@m+1)& (0+255),f,b
 11139   000730                     l7256:
 11140                           
 11141                           ; BSR set to: 1
 11142                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 770:     u = ou;
 11143   000730  C177  F18E         	movff	efgtoa@ou,efgtoa@u
 11144   000734  C178  F18F         	movff	efgtoa@ou+1,efgtoa@u+1
 11145   000738  C179  F190         	movff	efgtoa@ou+2,efgtoa@u+2
 11146   00073C  C17A  F191         	movff	efgtoa@ou+3,efgtoa@u+3
 11147   000740                     
 11148                           ; BSR set to: 1
 11149                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 772:     ne = (nm
      +                          ode == 'e') ? 0 : e;
 11150   000740  0E65               	movlw	101
 11151   000742  1974               	xorwf	efgtoa@nmode& (0+255),w,b
 11152   000744  B4D8               	btfsc	status,2,c
 11153   000746  EFA7  F003         	goto	u8081
 11154   00074A  EFA9  F003         	goto	u8080
 11155   00074E                     u8081:
 11156   00074E  EFAF  F003         	goto	l7262
 11157   000752                     u8080:
 11158   000752                     
 11159                           ; BSR set to: 1
 11160   000752  C183  F169         	movff	efgtoa@e,efgtoa@ne
 11161   000756  C184  F16A         	movff	efgtoa@e+1,efgtoa@ne+1
 11162   00075A  EFB3  F003         	goto	l7264
 11163   00075E                     l7262:
 11164                           
 11165                           ; BSR set to: 1
 11166   00075E  0E00               	movlw	0
 11167   000760  6F6A               	movwf	(efgtoa@ne+1)& (0+255),b
 11168   000762  0E00               	movlw	0
 11169   000764  6F69               	movwf	efgtoa@ne& (0+255),b
 11170   000766                     l7264:
 11171                           
 11172                           ; BSR set to: 1
 11173                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 776:     pp = 0;
 11174   000766  6B6B               	clrf	efgtoa@pp& (0+255),b
 11175                           
 11176                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 777:     t = 0;
 11177   000768  0E00               	movlw	0
 11178   00076A  6F64               	movwf	(efgtoa@t+1)& (0+255),b
 11179   00076C  0E00               	movlw	0
 11180   00076E  6F63               	movwf	efgtoa@t& (0+255),b
 11181                           
 11182                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 778:     i = 0;
 11183   000770  0E00               	movlw	0
 11184   000772  6F87               	movwf	(efgtoa@i+1)& (0+255),b
 11185   000774  0E00               	movlw	0
 11186   000776  6F86               	movwf	efgtoa@i& (0+255),b
 11187                           
 11188                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 779:     while ((
      +                          i < m) && (n < (80 - 5))) {
 11189   000778  EFA4  F004         	goto	l7306
 11190   00077C                     l7266:
 11191                           
 11192                           ; BSR set to: 1
 11193                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 780:         l = 
      +                          floorf(h/u.f);
 11194   00077C  C17B  F12D         	movff	efgtoa@h,___fldiv@b
 11195   000780  C17C  F12E         	movff	efgtoa@h+1,___fldiv@b+1
 11196   000784  C17D  F12F         	movff	efgtoa@h+2,___fldiv@b+2
 11197   000788  C17E  F130         	movff	efgtoa@h+3,___fldiv@b+3
 11198   00078C  C18E  F131         	movff	efgtoa@u,___fldiv@a
 11199   000790  C18F  F132         	movff	efgtoa@u+1,___fldiv@a+1
 11200   000794  C190  F133         	movff	efgtoa@u+2,___fldiv@a+2
 11201   000798  C191  F134         	movff	efgtoa@u+3,___fldiv@a+3
 11202   00079C  EC47  F014         	call	___fldiv	;wreg free
 11203   0007A0  C12D  F146         	movff	?___fldiv,floorf@x
 11204   0007A4  C12E  F147         	movff	?___fldiv+1,floorf@x+1
 11205   0007A8  C12F  F148         	movff	?___fldiv+2,floorf@x+2
 11206   0007AC  C130  F149         	movff	?___fldiv+3,floorf@x+3
 11207   0007B0  ECBE  F01D         	call	_floorf	;wreg free
 11208   0007B4  C146  F17F         	movff	?_floorf,efgtoa@l
 11209   0007B8  C147  F180         	movff	?_floorf+1,efgtoa@l+1
 11210   0007BC  C148  F181         	movff	?_floorf+2,efgtoa@l+2
 11211   0007C0  C149  F182         	movff	?_floorf+3,efgtoa@l+3
 11212                           
 11213                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 781:         d = 
      +                          (int)l > 9 ? 9 : (int)l;
 11214   0007C4  C17F  F150         	movff	efgtoa@l,___fltol@f1
 11215   0007C8  C180  F151         	movff	efgtoa@l+1,___fltol@f1+1
 11216   0007CC  C181  F152         	movff	efgtoa@l+2,___fltol@f1+2
 11217   0007D0  C182  F153         	movff	efgtoa@l+3,___fltol@f1+3
 11218   0007D4  EC25  F022         	call	___fltol	;wreg free
 11219   0007D8  0101               	movlb	1	; () banked
 11220   0007DA  BF51               	btfsc	(?___fltol+1)& (0+255),7,b
 11221   0007DC  EFFB  F003         	goto	u8090
 11222   0007E0  5151               	movf	(?___fltol+1)& (0+255),w,b
 11223   0007E2  E107               	bnz	u8091
 11224   0007E4  0E0A               	movlw	10
 11225   0007E6  5D50               	subwf	?___fltol& (0+255),w,b
 11226   0007E8  B0D8               	btfsc	status,0,c
 11227   0007EA  EFF9  F003         	goto	u8091
 11228   0007EE  EFFB  F003         	goto	u8090
 11229   0007F2                     u8091:
 11230   0007F2  EF0B  F004         	goto	l7270
 11231   0007F6                     u8090:
 11232   0007F6                     
 11233                           ; BSR set to: 1
 11234   0007F6  C17F  F150         	movff	efgtoa@l,___fltol@f1
 11235   0007FA  C180  F151         	movff	efgtoa@l+1,___fltol@f1+1
 11236   0007FE  C181  F152         	movff	efgtoa@l+2,___fltol@f1+2
 11237   000802  C182  F153         	movff	efgtoa@l+3,___fltol@f1+3
 11238   000806  EC25  F022         	call	___fltol	;wreg free
 11239   00080A  C150  F16E         	movff	?___fltol,efgtoa@d
 11240   00080E  C151  F16F         	movff	?___fltol+1,efgtoa@d+1
 11241   000812  EF0F  F004         	goto	l1638
 11242   000816                     l7270:
 11243                           
 11244                           ; BSR set to: 1
 11245   000816  0E00               	movlw	0
 11246   000818  6F6F               	movwf	(efgtoa@d+1)& (0+255),b
 11247   00081A  0E09               	movlw	9
 11248   00081C  6F6E               	movwf	efgtoa@d& (0+255),b
 11249   00081E                     l1638:
 11250                           
 11251                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 792:   {;C:\Progr
      +                          am Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 793:             if (!pp &
      +                          & (ne < 0)) {
 11252   00081E  0101               	movlb	1	; () banked
 11253   000820  516B               	movf	efgtoa@pp& (0+255),w,b
 11254   000822  A4D8               	btfss	status,2,c
 11255   000824  EF16  F004         	goto	u8101
 11256   000828  EF18  F004         	goto	u8100
 11257   00082C                     u8101:
 11258   00082C  EF40  F004         	goto	l7290
 11259   000830                     u8100:
 11260   000830                     
 11261                           ; BSR set to: 1
 11262   000830  BF6A               	btfsc	(efgtoa@ne+1)& (0+255),7,b
 11263   000832  EF1F  F004         	goto	u8110
 11264   000836  EF1D  F004         	goto	u8111
 11265   00083A                     u8111:
 11266   00083A  EF40  F004         	goto	l7290
 11267   00083E                     u8110:
 11268   00083E                     
 11269                           ; BSR set to: 1
 11270                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 794:             
      +                              dbuf[n++] = '.';
 11271   00083E  0E00               	movlw	low _dbuf
 11272   000840  2588               	addwf	efgtoa@n& (0+255),w,b
 11273   000842  6ED9               	movwf	fsr2l,c
 11274   000844  0E02               	movlw	high _dbuf
 11275   000846  2189               	addwfc	(efgtoa@n+1)& (0+255),w,b
 11276   000848  6EDA               	movwf	fsr2h,c
 11277   00084A  0E2E               	movlw	46
 11278   00084C  6EDF               	movwf	indf2,c
 11279   00084E                     
 11280                           ; BSR set to: 1
 11281   00084E  4B88               	infsnz	efgtoa@n& (0+255),f,b
 11282   000850  2B89               	incf	(efgtoa@n+1)& (0+255),f,b
 11283   000852                     
 11284                           ; BSR set to: 1
 11285                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 795:             
      +                              --w;
 11286   000852  0775               	decf	efgtoa@w& (0+255),f,b
 11287   000854  A0D8               	btfss	status,0,c
 11288   000856  0776               	decf	(efgtoa@w+1)& (0+255),f,b
 11289   000858                     
 11290                           ; BSR set to: 1
 11291                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 796:             
      +                              pp = 1;
 11292   000858  0E01               	movlw	1
 11293   00085A  6F6B               	movwf	efgtoa@pp& (0+255),b
 11294   00085C  EF40  F004         	goto	l7290
 11295   000860                     l7282:
 11296                           
 11297                           ; BSR set to: 1
 11298                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 799:             
      +                              dbuf[n++] = '0';
 11299   000860  0E00               	movlw	low _dbuf
 11300   000862  2588               	addwf	efgtoa@n& (0+255),w,b
 11301   000864  6ED9               	movwf	fsr2l,c
 11302   000866  0E02               	movlw	high _dbuf
 11303   000868  2189               	addwfc	(efgtoa@n+1)& (0+255),w,b
 11304   00086A  6EDA               	movwf	fsr2h,c
 11305   00086C  0E30               	movlw	48
 11306   00086E  6EDF               	movwf	indf2,c
 11307   000870                     
 11308                           ; BSR set to: 1
 11309   000870  4B88               	infsnz	efgtoa@n& (0+255),f,b
 11310   000872  2B89               	incf	(efgtoa@n+1)& (0+255),f,b
 11311   000874                     
 11312                           ; BSR set to: 1
 11313                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 800:             
      +                              --w;
 11314   000874  0775               	decf	efgtoa@w& (0+255),f,b
 11315   000876  A0D8               	btfss	status,0,c
 11316   000878  0776               	decf	(efgtoa@w+1)& (0+255),f,b
 11317   00087A                     
 11318                           ; BSR set to: 1
 11319                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 801:             
      +                              --t;
 11320   00087A  0763               	decf	efgtoa@t& (0+255),f,b
 11321   00087C  A0D8               	btfss	status,0,c
 11322   00087E  0764               	decf	(efgtoa@t+1)& (0+255),f,b
 11323   000880                     l7290:
 11324                           
 11325                           ; BSR set to: 1
 11326                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 798:             
      +                          while (t) {
 11327   000880  5163               	movf	efgtoa@t& (0+255),w,b
 11328   000882  1164               	iorwf	(efgtoa@t+1)& (0+255),w,b
 11329   000884  A4D8               	btfss	status,2,c
 11330   000886  EF47  F004         	goto	u8121
 11331   00088A  EF49  F004         	goto	u8120
 11332   00088E                     u8121:
 11333   00088E  EF30  F004         	goto	l7282
 11334   000892                     u8120:
 11335   000892                     
 11336                           ; BSR set to: 1
 11337                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 803:             
      +                          dbuf[n++] = (char)((int)'0' + d);
 11338   000892  0E00               	movlw	low _dbuf
 11339   000894  2588               	addwf	efgtoa@n& (0+255),w,b
 11340   000896  6ED9               	movwf	fsr2l,c
 11341   000898  0E02               	movlw	high _dbuf
 11342   00089A  2189               	addwfc	(efgtoa@n+1)& (0+255),w,b
 11343   00089C  6EDA               	movwf	fsr2h,c
 11344   00089E  516E               	movf	efgtoa@d& (0+255),w,b
 11345   0008A0  0F30               	addlw	48
 11346   0008A2  6EDF               	movwf	indf2,c
 11347   0008A4                     
 11348                           ; BSR set to: 1
 11349   0008A4  4B88               	infsnz	efgtoa@n& (0+255),f,b
 11350   0008A6  2B89               	incf	(efgtoa@n+1)& (0+255),f,b
 11351   0008A8                     
 11352                           ; BSR set to: 1
 11353                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 804:             
      +                          --w;
 11354   0008A8  0775               	decf	efgtoa@w& (0+255),f,b
 11355   0008AA  A0D8               	btfss	status,0,c
 11356   0008AC  0776               	decf	(efgtoa@w+1)& (0+255),f,b
 11357   0008AE                     
 11358                           ; BSR set to: 1
 11359                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 805:         };C:
      +                          \Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 806:         h -= l*
      +                          u.f;
 11360   0008AE  C17B  F12D         	movff	efgtoa@h,___flsub@b
 11361   0008B2  C17C  F12E         	movff	efgtoa@h+1,___flsub@b+1
 11362   0008B6  C17D  F12F         	movff	efgtoa@h+2,___flsub@b+2
 11363   0008BA  C17E  F130         	movff	efgtoa@h+3,___flsub@b+3
 11364   0008BE  C17F  F118         	movff	efgtoa@l,___flmul@a
 11365   0008C2  C180  F119         	movff	efgtoa@l+1,___flmul@a+1
 11366   0008C6  C181  F11A         	movff	efgtoa@l+2,___flmul@a+2
 11367   0008CA  C182  F11B         	movff	efgtoa@l+3,___flmul@a+3
 11368   0008CE  C18E  F114         	movff	efgtoa@u,___flmul@b
 11369   0008D2  C18F  F115         	movff	efgtoa@u+1,___flmul@b+1
 11370   0008D6  C190  F116         	movff	efgtoa@u+2,___flmul@b+2
 11371   0008DA  C191  F117         	movff	efgtoa@u+3,___flmul@b+3
 11372   0008DE  ECFC  F00F         	call	___flmul	;wreg free
 11373   0008E2  C114  F131         	movff	?___flmul,___flsub@a
 11374   0008E6  C115  F132         	movff	?___flmul+1,___flsub@a+1
 11375   0008EA  C116  F133         	movff	?___flmul+2,___flsub@a+2
 11376   0008EE  C117  F134         	movff	?___flmul+3,___flsub@a+3
 11377   0008F2  EC47  F02F         	call	___flsub	;wreg free
 11378   0008F6  C12D  F17B         	movff	?___flsub,efgtoa@h
 11379   0008FA  C12E  F17C         	movff	?___flsub+1,efgtoa@h+1
 11380   0008FE  C12F  F17D         	movff	?___flsub+2,efgtoa@h+2
 11381   000902  C130  F17E         	movff	?___flsub+3,efgtoa@h+3
 11382   000906                     
 11383                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 807:         u.f 
      +                          = u.f/10.0;
 11384   000906  C18E  F12D         	movff	efgtoa@u,___fldiv@b
 11385   00090A  C18F  F12E         	movff	efgtoa@u+1,___fldiv@b+1
 11386   00090E  C190  F12F         	movff	efgtoa@u+2,___fldiv@b+2
 11387   000912  C191  F130         	movff	efgtoa@u+3,___fldiv@b+3
 11388   000916  0E00               	movlw	0
 11389   000918  0101               	movlb	1	; () banked
 11390   00091A  6F31               	movwf	___fldiv@a& (0+255),b
 11391   00091C  0E00               	movlw	0
 11392   00091E  6F32               	movwf	(___fldiv@a+1)& (0+255),b
 11393   000920  0E20               	movlw	32
 11394   000922  6F33               	movwf	(___fldiv@a+2)& (0+255),b
 11395   000924  0E41               	movlw	65
 11396   000926  6F34               	movwf	(___fldiv@a+3)& (0+255),b
 11397   000928  EC47  F014         	call	___fldiv	;wreg free
 11398   00092C  C12D  F18E         	movff	?___fldiv,efgtoa@u
 11399   000930  C12E  F18F         	movff	?___fldiv+1,efgtoa@u+1
 11400   000934  C12F  F190         	movff	?___fldiv+2,efgtoa@u+2
 11401   000938  C130  F191         	movff	?___fldiv+3,efgtoa@u+3
 11402   00093C                     
 11403                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 808:         --ne
      +                          ;
 11404   00093C  0101               	movlb	1	; () banked
 11405   00093E  0769               	decf	efgtoa@ne& (0+255),f,b
 11406   000940  A0D8               	btfss	status,0,c
 11407   000942  076A               	decf	(efgtoa@ne+1)& (0+255),f,b
 11408   000944                     
 11409                           ; BSR set to: 1
 11410                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 809:         ++i;
 11411   000944  4B86               	infsnz	efgtoa@i& (0+255),f,b
 11412   000946  2B87               	incf	(efgtoa@i+1)& (0+255),f,b
 11413   000948                     l7306:
 11414                           
 11415                           ; BSR set to: 1
 11416                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 779:     while ((
      +                          i < m) && (n < (80 - 5))) {
 11417   000948  5170               	movf	efgtoa@m& (0+255),w,b
 11418   00094A  5D86               	subwf	efgtoa@i& (0+255),w,b
 11419   00094C  5187               	movf	(efgtoa@i+1)& (0+255),w,b
 11420   00094E  0A80               	xorlw	128
 11421   000950  6F61               	movwf	??_efgtoa& (0+255),b
 11422   000952  5171               	movf	(efgtoa@m+1)& (0+255),w,b
 11423   000954  0A80               	xorlw	128
 11424   000956  5961               	subwfb	??_efgtoa& (0+255),w,b
 11425   000958  B0D8               	btfsc	status,0,c
 11426   00095A  EFB1  F004         	goto	u8131
 11427   00095E  EFB3  F004         	goto	u8130
 11428   000962                     u8131:
 11429   000962  EFC1  F004         	goto	l7310
 11430   000966                     u8130:
 11431   000966                     
 11432                           ; BSR set to: 1
 11433   000966  BF89               	btfsc	(efgtoa@n+1)& (0+255),7,b
 11434   000968  EFBF  F004         	goto	u8141
 11435   00096C  5189               	movf	(efgtoa@n+1)& (0+255),w,b
 11436   00096E  E109               	bnz	u8140
 11437   000970  0E4B               	movlw	75
 11438   000972  5D88               	subwf	efgtoa@n& (0+255),w,b
 11439   000974  A0D8               	btfss	status,0,c
 11440   000976  EFBF  F004         	goto	u8141
 11441   00097A  EFC1  F004         	goto	u8140
 11442   00097E                     u8141:
 11443   00097E  EFBE  F003         	goto	l7266
 11444   000982                     u8140:
 11445   000982                     l7310:
 11446                           
 11447                           ; BSR set to: 1
 11448                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 816:  i = sizeof(
      +                          dbuf) - 1;
 11449   000982  0E00               	movlw	0
 11450   000984  6F87               	movwf	(efgtoa@i+1)& (0+255),b
 11451   000986  0E4F               	movlw	79
 11452   000988  6F86               	movwf	efgtoa@i& (0+255),b
 11453   00098A                     
 11454                           ; BSR set to: 1
 11455                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 817:     dbuf[i] 
      +                          = '\0';
 11456   00098A  0E00               	movlw	low _dbuf
 11457   00098C  2586               	addwf	efgtoa@i& (0+255),w,b
 11458   00098E  6ED9               	movwf	fsr2l,c
 11459   000990  0E02               	movlw	high _dbuf
 11460   000992  2187               	addwfc	(efgtoa@i+1)& (0+255),w,b
 11461   000994  6EDA               	movwf	fsr2h,c
 11462   000996  6ADF               	clrf	indf2,c
 11463   000998                     
 11464                           ; BSR set to: 1
 11465                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 821:     if (nmod
      +                          e == 'e') {
 11466   000998  0E65               	movlw	101
 11467   00099A  1974               	xorwf	efgtoa@nmode& (0+255),w,b
 11468   00099C  A4D8               	btfss	status,2,c
 11469   00099E  EFD3  F004         	goto	u8151
 11470   0009A2  EFD5  F004         	goto	u8150
 11471   0009A6                     u8151:
 11472   0009A6  EF5A  F005         	goto	l7358
 11473   0009AA                     u8150:
 11474   0009AA                     
 11475                           ; BSR set to: 1
 11476                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 822:         esig
      +                          n = 0;
 11477   0009AA  6B6C               	clrf	efgtoa@esign& (0+255),b
 11478   0009AC                     
 11479                           ; BSR set to: 1
 11480                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 823:         if (
      +                          e < 0) {
 11481   0009AC  BF84               	btfsc	(efgtoa@e+1)& (0+255),7,b
 11482   0009AE  EFDD  F004         	goto	u8160
 11483   0009B2  EFDB  F004         	goto	u8161
 11484   0009B6                     u8161:
 11485   0009B6  EFE3  F004         	goto	l7324
 11486   0009BA                     u8160:
 11487   0009BA                     
 11488                           ; BSR set to: 1
 11489                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 824:             
      +                          esign = 1;
 11490   0009BA  0E01               	movlw	1
 11491   0009BC  6F6C               	movwf	efgtoa@esign& (0+255),b
 11492   0009BE                     
 11493                           ; BSR set to: 1
 11494                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 825:             
      +                          e = -e;
 11495   0009BE  6D83               	negf	efgtoa@e& (0+255),b
 11496   0009C0  1F84               	comf	(efgtoa@e+1)& (0+255),f,b
 11497   0009C2  B0D8               	btfsc	status,0,c
 11498   0009C4  2B84               	incf	(efgtoa@e+1)& (0+255),f,b
 11499   0009C6                     l7324:
 11500                           
 11501                           ; BSR set to: 1
 11502                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 827:         p = 
      +                          2;
 11503   0009C6  0E00               	movlw	0
 11504   0009C8  6F73               	movwf	(efgtoa@p+1)& (0+255),b
 11505   0009CA  0E02               	movlw	2
 11506   0009CC  6F72               	movwf	efgtoa@p& (0+255),b
 11507                           
 11508                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 828:         whil
      +                          e (e || (0 < p)) {
 11509   0009CE  EF15  F005         	goto	l7336
 11510   0009D2                     l7326:
 11511                           
 11512                           ; BSR set to: 1
 11513                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 829:             
      +                          --i;
 11514   0009D2  0786               	decf	efgtoa@i& (0+255),f,b
 11515   0009D4  A0D8               	btfss	status,0,c
 11516   0009D6  0787               	decf	(efgtoa@i+1)& (0+255),f,b
 11517   0009D8                     
 11518                           ; BSR set to: 1
 11519                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 830:             
      +                          dbuf[i] = '0' + (e % 10);
 11520   0009D8  0E00               	movlw	low _dbuf
 11521   0009DA  2586               	addwf	efgtoa@i& (0+255),w,b
 11522   0009DC  6ED9               	movwf	fsr2l,c
 11523   0009DE  0E02               	movlw	high _dbuf
 11524   0009E0  2187               	addwfc	(efgtoa@i+1)& (0+255),w,b
 11525   0009E2  6EDA               	movwf	fsr2h,c
 11526   0009E4  C183  F106         	movff	efgtoa@e,___awmod@dividend
 11527   0009E8  C184  F107         	movff	efgtoa@e+1,___awmod@dividend+1
 11528   0009EC  0E00               	movlw	0
 11529   0009EE  6F09               	movwf	(___awmod@divisor+1)& (0+255),b
 11530   0009F0  0E0A               	movlw	10
 11531   0009F2  6F08               	movwf	___awmod@divisor& (0+255),b
 11532   0009F4  EC51  F029         	call	___awmod	;wreg free
 11533   0009F8  0101               	movlb	1	; () banked
 11534   0009FA  5106               	movf	?___awmod& (0+255),w,b
 11535   0009FC  0F30               	addlw	48
 11536   0009FE  6EDF               	movwf	indf2,c
 11537   000A00                     
 11538                           ; BSR set to: 1
 11539                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 831:             
      +                          e = e / 10;
 11540   000A00  C183  F106         	movff	efgtoa@e,___awdiv@dividend
 11541   000A04  C184  F107         	movff	efgtoa@e+1,___awdiv@dividend+1
 11542   000A08  0E00               	movlw	0
 11543   000A0A  6F09               	movwf	(___awdiv@divisor+1)& (0+255),b
 11544   000A0C  0E0A               	movlw	10
 11545   000A0E  6F08               	movwf	___awdiv@divisor& (0+255),b
 11546   000A10  ECD0  F027         	call	___awdiv	;wreg free
 11547   000A14  C106  F183         	movff	?___awdiv,efgtoa@e
 11548   000A18  C107  F184         	movff	?___awdiv+1,efgtoa@e+1
 11549   000A1C                     
 11550                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 832:             
      +                          --p;
 11551   000A1C  0101               	movlb	1	; () banked
 11552   000A1E  0772               	decf	efgtoa@p& (0+255),f,b
 11553   000A20  A0D8               	btfss	status,0,c
 11554   000A22  0773               	decf	(efgtoa@p+1)& (0+255),f,b
 11555   000A24                     
 11556                           ; BSR set to: 1
 11557                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 833:             
      +                          --w;
 11558   000A24  0775               	decf	efgtoa@w& (0+255),f,b
 11559   000A26  A0D8               	btfss	status,0,c
 11560   000A28  0776               	decf	(efgtoa@w+1)& (0+255),f,b
 11561   000A2A                     l7336:
 11562                           
 11563                           ; BSR set to: 1
 11564                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 828:         whil
      +                          e (e || (0 < p)) {
 11565   000A2A  5183               	movf	efgtoa@e& (0+255),w,b
 11566   000A2C  1184               	iorwf	(efgtoa@e+1)& (0+255),w,b
 11567   000A2E  A4D8               	btfss	status,2,c
 11568   000A30  EF1C  F005         	goto	u8171
 11569   000A34  EF1E  F005         	goto	u8170
 11570   000A38                     u8171:
 11571   000A38  EFE9  F004         	goto	l7326
 11572   000A3C                     u8170:
 11573   000A3C                     
 11574                           ; BSR set to: 1
 11575   000A3C  BF73               	btfsc	(efgtoa@p+1)& (0+255),7,b
 11576   000A3E  EF2B  F005         	goto	u8180
 11577   000A42  5173               	movf	(efgtoa@p+1)& (0+255),w,b
 11578   000A44  E106               	bnz	u8181
 11579   000A46  0572               	decf	efgtoa@p& (0+255),w,b
 11580   000A48  B0D8               	btfsc	status,0,c
 11581   000A4A  EF29  F005         	goto	u8181
 11582   000A4E  EF2B  F005         	goto	u8180
 11583   000A52                     u8181:
 11584   000A52  EFE9  F004         	goto	l7326
 11585   000A56                     u8180:
 11586   000A56                     
 11587                           ; BSR set to: 1
 11588                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 835:         --i;
 11589   000A56  0786               	decf	efgtoa@i& (0+255),f,b
 11590   000A58  A0D8               	btfss	status,0,c
 11591   000A5A  0787               	decf	(efgtoa@i+1)& (0+255),f,b
 11592   000A5C                     
 11593                           ; BSR set to: 1
 11594                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 836:         dbuf
      +                          [i] = esign ? '-' : '+';
 11595   000A5C  516C               	movf	efgtoa@esign& (0+255),w,b
 11596   000A5E  A4D8               	btfss	status,2,c
 11597   000A60  EF34  F005         	goto	u8191
 11598   000A64  EF36  F005         	goto	u8190
 11599   000A68                     u8191:
 11600   000A68  EF3C  F005         	goto	l7346
 11601   000A6C                     u8190:
 11602   000A6C                     
 11603                           ; BSR set to: 1
 11604   000A6C  0E00               	movlw	0
 11605   000A6E  6F68               	movwf	(_efgtoa$2332+1)& (0+255),b
 11606   000A70  0E2B               	movlw	43
 11607   000A72  6F67               	movwf	_efgtoa$2332& (0+255),b
 11608   000A74  EF40  F005         	goto	l7348
 11609   000A78                     l7346:
 11610                           
 11611                           ; BSR set to: 1
 11612   000A78  0E00               	movlw	0
 11613   000A7A  6F68               	movwf	(_efgtoa$2332+1)& (0+255),b
 11614   000A7C  0E2D               	movlw	45
 11615   000A7E  6F67               	movwf	_efgtoa$2332& (0+255),b
 11616   000A80                     l7348:
 11617                           
 11618                           ; BSR set to: 1
 11619   000A80  0E00               	movlw	low _dbuf
 11620   000A82  2586               	addwf	efgtoa@i& (0+255),w,b
 11621   000A84  6ED9               	movwf	fsr2l,c
 11622   000A86  0E02               	movlw	high _dbuf
 11623   000A88  2187               	addwfc	(efgtoa@i+1)& (0+255),w,b
 11624   000A8A  6EDA               	movwf	fsr2h,c
 11625   000A8C  0060  F59F  FFDF   	movff	_efgtoa$2332,indf2
 11626   000A92                     
 11627                           ; BSR set to: 1
 11628                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 837:         --w;
 11629   000A92  0775               	decf	efgtoa@w& (0+255),f,b
 11630   000A94  A0D8               	btfss	status,0,c
 11631   000A96  0776               	decf	(efgtoa@w+1)& (0+255),f,b
 11632   000A98                     
 11633                           ; BSR set to: 1
 11634                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 838:         --i;
 11635   000A98  0786               	decf	efgtoa@i& (0+255),f,b
 11636   000A9A  A0D8               	btfss	status,0,c
 11637   000A9C  0787               	decf	(efgtoa@i+1)& (0+255),f,b
 11638   000A9E                     
 11639                           ; BSR set to: 1
 11640                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 842:   dbuf[i] = 
      +                          'e';
 11641   000A9E  0E00               	movlw	low _dbuf
 11642   000AA0  2586               	addwf	efgtoa@i& (0+255),w,b
 11643   000AA2  6ED9               	movwf	fsr2l,c
 11644   000AA4  0E02               	movlw	high _dbuf
 11645   000AA6  2187               	addwfc	(efgtoa@i+1)& (0+255),w,b
 11646   000AA8  6EDA               	movwf	fsr2h,c
 11647   000AAA  0E65               	movlw	101
 11648   000AAC  6EDF               	movwf	indf2,c
 11649   000AAE                     
 11650                           ; BSR set to: 1
 11651                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 844:         --w;
 11652   000AAE  0775               	decf	efgtoa@w& (0+255),f,b
 11653   000AB0  A0D8               	btfss	status,0,c
 11654   000AB2  0776               	decf	(efgtoa@w+1)& (0+255),f,b
 11655   000AB4                     l7358:
 11656                           
 11657                           ; BSR set to: 1
 11658                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 848:  memcpy(&dbu
      +                          f[i-n], &dbuf[0], (size_t)n);
 11659   000AB4  0E00               	movlw	low _dbuf
 11660   000AB6  6F61               	movwf	??_efgtoa& (0+255),b
 11661   000AB8  0E02               	movlw	high _dbuf
 11662   000ABA  6F62               	movwf	(??_efgtoa+1)& (0+255),b
 11663   000ABC  5188               	movf	efgtoa@n& (0+255),w,b
 11664   000ABE  5F61               	subwf	??_efgtoa& (0+255),f,b
 11665   000AC0  5189               	movf	(efgtoa@n+1)& (0+255),w,b
 11666   000AC2  5B62               	subwfb	(??_efgtoa+1)& (0+255),f,b
 11667   000AC4  5186               	movf	efgtoa@i& (0+255),w,b
 11668   000AC6  2561               	addwf	??_efgtoa& (0+255),w,b
 11669   000AC8  6F06               	movwf	memcpy@d1& (0+255),b
 11670   000ACA  5187               	movf	(efgtoa@i+1)& (0+255),w,b
 11671   000ACC  2162               	addwfc	(??_efgtoa+1)& (0+255),w,b
 11672   000ACE  6F07               	movwf	(memcpy@d1+1)& (0+255),b
 11673   000AD0  0E00               	movlw	low _dbuf
 11674   000AD2  6F08               	movwf	memcpy@s1& (0+255),b
 11675   000AD4  0E02               	movlw	high _dbuf
 11676   000AD6  6F09               	movwf	(memcpy@s1+1)& (0+255),b
 11677   000AD8  C188  F10A         	movff	efgtoa@n,memcpy@n
 11678   000ADC  C189  F10B         	movff	efgtoa@n+1,memcpy@n+1
 11679   000AE0  EC50  F02D         	call	_memcpy	;wreg free
 11680   000AE4                     
 11681                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 849:  n = i-n;
 11682   000AE4  0101               	movlb	1	; () banked
 11683   000AE6  5188               	movf	efgtoa@n& (0+255),w,b
 11684   000AE8  5D86               	subwf	efgtoa@i& (0+255),w,b
 11685   000AEA  6F88               	movwf	efgtoa@n& (0+255),b
 11686   000AEC  5189               	movf	(efgtoa@n+1)& (0+255),w,b
 11687   000AEE  5987               	subwfb	(efgtoa@i+1)& (0+255),w,b
 11688   000AF0  6F89               	movwf	(efgtoa@n+1)& (0+255),b
 11689   000AF2                     
 11690                           ; BSR set to: 1
 11691                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 850:  i = sign ==
      +                           0 ? 0 : 1;
 11692   000AF2  5185               	movf	efgtoa@sign& (0+255),w,b
 11693   000AF4  A4D8               	btfss	status,2,c
 11694   000AF6  EF7F  F005         	goto	u8201
 11695   000AFA  EF82  F005         	goto	u8200
 11696   000AFE                     u8201:
 11697   000AFE  0E01               	movlw	1
 11698   000B00  EF83  F005         	goto	u8210
 11699   000B04                     u8200:
 11700   000B04  0E00               	movlw	0
 11701   000B06                     u8210:
 11702   000B06  6F86               	movwf	efgtoa@i& (0+255),b
 11703   000B08  6B87               	clrf	(efgtoa@i+1)& (0+255),b
 11704   000B0A                     
 11705                           ; BSR set to: 1
 11706                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 861:  if (sign) {
 11707   000B0A  5185               	movf	efgtoa@sign& (0+255),w,b
 11708   000B0C  B4D8               	btfsc	status,2,c
 11709   000B0E  EF8B  F005         	goto	u8221
 11710   000B12  EF8D  F005         	goto	u8220
 11711   000B16                     u8221:
 11712   000B16  EF99  F005         	goto	l7368
 11713   000B1A                     u8220:
 11714   000B1A                     
 11715                           ; BSR set to: 1
 11716                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 862:   dbuf[--n] 
      +                          = sign;
 11717   000B1A  0788               	decf	efgtoa@n& (0+255),f,b
 11718   000B1C  A0D8               	btfss	status,0,c
 11719   000B1E  0789               	decf	(efgtoa@n+1)& (0+255),f,b
 11720   000B20  0E00               	movlw	low _dbuf
 11721   000B22  2588               	addwf	efgtoa@n& (0+255),w,b
 11722   000B24  6ED9               	movwf	fsr2l,c
 11723   000B26  0E02               	movlw	high _dbuf
 11724   000B28  2189               	addwfc	(efgtoa@n+1)& (0+255),w,b
 11725   000B2A  6EDA               	movwf	fsr2h,c
 11726   000B2C  0060  F617  FFDF   	movff	efgtoa@sign,indf2
 11727   000B32                     l7368:
 11728                           
 11729                           ; BSR set to: 1
 11730                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 864:  w -= i;
 11731   000B32  5186               	movf	efgtoa@i& (0+255),w,b
 11732   000B34  5F75               	subwf	efgtoa@w& (0+255),f,b
 11733   000B36  5187               	movf	(efgtoa@i+1)& (0+255),w,b
 11734   000B38  5B76               	subwfb	(efgtoa@w+1)& (0+255),f,b
 11735   000B3A                     
 11736                           ; BSR set to: 1
 11737                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 867:     return (
      +                          void) pad(fp, &dbuf[n], w);
 11738   000B3A  C15A  F116         	movff	efgtoa@fp,pad@fp
 11739   000B3E  C15B  F117         	movff	efgtoa@fp+1,pad@fp+1
 11740   000B42  0E00               	movlw	low _dbuf
 11741   000B44  2588               	addwf	efgtoa@n& (0+255),w,b
 11742   000B46  6F18               	movwf	pad@buf& (0+255),b
 11743   000B48  0E02               	movlw	high _dbuf
 11744   000B4A  2189               	addwfc	(efgtoa@n+1)& (0+255),w,b
 11745   000B4C  6F19               	movwf	(pad@buf+1)& (0+255),b
 11746   000B4E  C175  F11A         	movff	efgtoa@w,pad@p
 11747   000B52  C176  F11B         	movff	efgtoa@w+1,pad@p+1
 11748   000B56  EC1B  F02C         	call	_pad	;wreg free
 11749   000B5A                     l1601:
 11750   000B5A  0012               	return		;funcret
 11751   000B5C                     __end_of_efgtoa:
 11752                           	callstack 0
 11753                           
 11754 ;; *************** function _strcpy *****************
 11755 ;; Defined at:
 11756 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\strcpy.c"
 11757 ;; Parameters:    Size  Location     Type
 11758 ;;  dest            2    6[BANK1 ] PTR unsigned char 
 11759 ;;		 -> dbuf(80), 
 11760 ;;  src             2    8[BANK1 ] PTR const unsigned char 
 11761 ;;		 -> STR_23(4), STR_20(4), 
 11762 ;; Auto vars:     Size  Location     Type
 11763 ;;  d               2   10[BANK1 ] PTR unsigned char 
 11764 ;;		 -> dbuf(80), 
 11765 ;; Return value:  Size  Location     Type
 11766 ;;                  2    6[BANK1 ] PTR unsigned char 
 11767 ;; Registers used:
 11768 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 11769 ;; Tracked objects:
 11770 ;;		On entry : 0/0
 11771 ;;		On exit  : 0/0
 11772 ;;		Unchanged: 0/0
 11773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11774 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11775 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11776 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11777 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11778 ;;Total ram usage:        6 bytes
 11779 ;; Hardware stack levels used: 1
 11780 ;; Hardware stack levels required when called: 13
 11781 ;; This function calls:
 11782 ;;		Nothing
 11783 ;; This function is called by:
 11784 ;;		_efgtoa
 11785 ;; This function uses a non-reentrant model
 11786 ;;
 11787                           
 11788                           	psect	text20
 11789   005ED6                     __ptext20:
 11790                           	callstack 0
 11791   005ED6                     _strcpy:
 11792                           	callstack 12
 11793   005ED6  C106  F10A         	movff	strcpy@dest,strcpy@d
 11794   005EDA  C107  F10B         	movff	strcpy@dest+1,strcpy@d+1
 11795   005EDE                     l6938:
 11796   005EDE  0060  F423  FFF6   	movff	strcpy@src,tblptrl
 11797   005EE4  0060  F427  FFF7   	movff	strcpy@src+1,tblptrh
 11798   005EEA  0101               	movlb	1	; () banked
 11799   005EEC  4B08               	infsnz	strcpy@src& (0+255),f,b
 11800   005EEE  2B09               	incf	(strcpy@src+1)& (0+255),f,b
 11801   005EF0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 11802   005EF0  6AF8               	clrf	tblptru,c
 11803   005EF2                     	endif
 11804   005EF2                     	if	0	;tblptru may be non-zero
 11805   005EF2                     	endif
 11806   005EF2  0060  F42B  FFD9   	movff	strcpy@d,fsr2l
 11807   005EF8  0060  F42F  FFDA   	movff	strcpy@d+1,fsr2h
 11808   005EFE  4B0A               	infsnz	strcpy@d& (0+255),f,b
 11809   005F00  2B0B               	incf	(strcpy@d+1)& (0+255),f,b
 11810   005F02  0008               	tblrd		*
 11811   005F04  006F FFD7 FFDF     	movff	tablat,indf2
 11812   005F0A  50DF               	movf	indf2,w,c
 11813   005F0C  A4D8               	btfss	status,2,c
 11814   005F0E  EF8B  F02F         	goto	u7571
 11815   005F12  EF8D  F02F         	goto	u7570
 11816   005F16                     u7571:
 11817   005F16  EF6F  F02F         	goto	l6938
 11818   005F1A                     u7570:
 11819   005F1A                     
 11820                           ; BSR set to: 1
 11821   005F1A  0012               	return		;funcret
 11822   005F1C                     __end_of_strcpy:
 11823                           	callstack 0
 11824                           
 11825 ;; *************** function _pad *****************
 11826 ;; Defined at:
 11827 ;;		line 193 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
 11828 ;; Parameters:    Size  Location     Type
 11829 ;;  fp              2   22[BANK1 ] PTR struct _IO_FILE
 11830 ;;		 -> sprintf@f(11), 
 11831 ;;  buf             2   24[BANK1 ] PTR unsigned char 
 11832 ;;		 -> dbuf(80), 
 11833 ;;  p               2   26[BANK1 ] int 
 11834 ;; Auto vars:     Size  Location     Type
 11835 ;;  i               2   29[BANK1 ] int 
 11836 ;; Return value:  Size  Location     Type
 11837 ;;                  1    wreg      void 
 11838 ;; Registers used:
 11839 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 11840 ;; Tracked objects:
 11841 ;;		On entry : 0/0
 11842 ;;		On exit  : 0/0
 11843 ;;		Unchanged: 0/0
 11844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11845 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11846 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11847 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11848 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11849 ;;Total ram usage:        9 bytes
 11850 ;; Hardware stack levels used: 1
 11851 ;; Hardware stack levels required when called: 16
 11852 ;; This function calls:
 11853 ;;		_fputc
 11854 ;;		_fputs
 11855 ;; This function is called by:
 11856 ;;		_efgtoa
 11857 ;; This function uses a non-reentrant model
 11858 ;;
 11859                           
 11860                           	psect	text21
 11861   005836                     __ptext21:
 11862                           	callstack 0
 11863   005836                     _pad:
 11864                           	callstack 9
 11865   005836                     
 11866                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 193: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\com
      +                          mon\doprnt.c: 194: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.
      +                          c: 195:     int i;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c:
      +                           205:  if (p < 0) {
 11867   005836  0101               	movlb	1	; () banked
 11868   005838  BF1B               	btfsc	(pad@p+1)& (0+255),7,b
 11869   00583A  EF23  F02C         	goto	u7480
 11870   00583E  EF21  F02C         	goto	u7481
 11871   005842                     u7481:
 11872   005842  EF27  F02C         	goto	l1586
 11873   005846                     u7480:
 11874   005846                     
 11875                           ; BSR set to: 1
 11876                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 206:   p = 0;
 11877   005846  0E00               	movlw	0
 11878   005848  6F1B               	movwf	(pad@p+1)& (0+255),b
 11879   00584A  0E00               	movlw	0
 11880   00584C  6F1A               	movwf	pad@p& (0+255),b
 11881   00584E                     l1586:
 11882                           
 11883                           ; BSR set to: 1
 11884                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 208:     i = 0;
 11885   00584E  0E00               	movlw	0
 11886   005850  6F1E               	movwf	(pad@i+1)& (0+255),b
 11887   005852  0E00               	movlw	0
 11888   005854  6F1D               	movwf	pad@i& (0+255),b
 11889                           
 11890                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
 11891   005856  EF3A  F02C         	goto	l6910
 11892   00585A                     l6906:
 11893                           
 11894                           ; BSR set to: 1
 11895                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 210:         fput
      +                          c(' ', fp);
 11896   00585A  0E00               	movlw	0
 11897   00585C  6F07               	movwf	(fputc@c+1)& (0+255),b
 11898   00585E  0E20               	movlw	32
 11899   005860  6F06               	movwf	fputc@c& (0+255),b
 11900   005862  C116  F108         	movff	pad@fp,fputc@fp
 11901   005866  C117  F109         	movff	pad@fp+1,fputc@fp+1
 11902   00586A  EC93  F026         	call	_fputc	;wreg free
 11903   00586E                     
 11904                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 211:         ++i;
 11905   00586E  0101               	movlb	1	; () banked
 11906   005870  4B1D               	infsnz	pad@i& (0+255),f,b
 11907   005872  2B1E               	incf	(pad@i+1)& (0+255),f,b
 11908   005874                     l6910:
 11909                           
 11910                           ; BSR set to: 1
 11911                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
 11912   005874  511A               	movf	pad@p& (0+255),w,b
 11913   005876  5D1D               	subwf	pad@i& (0+255),w,b
 11914   005878  511E               	movf	(pad@i+1)& (0+255),w,b
 11915   00587A  0A80               	xorlw	128
 11916   00587C  6F1C               	movwf	??_pad& (0+255),b
 11917   00587E  511B               	movf	(pad@p+1)& (0+255),w,b
 11918   005880  0A80               	xorlw	128
 11919   005882  591C               	subwfb	??_pad& (0+255),w,b
 11920   005884  A0D8               	btfss	status,0,c
 11921   005886  EF47  F02C         	goto	u7491
 11922   00588A  EF49  F02C         	goto	u7490
 11923   00588E                     u7491:
 11924   00588E  EF2D  F02C         	goto	l6906
 11925   005892                     u7490:
 11926   005892                     
 11927                           ; BSR set to: 1
 11928                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 218:         fput
      +                          s((const char *)buf, fp);
 11929   005892  C118  F10F         	movff	pad@buf,fputs@s
 11930   005896  C119  F110         	movff	pad@buf+1,fputs@s+1
 11931   00589A  C116  F111         	movff	pad@fp,fputs@fp
 11932   00589E  C117  F112         	movff	pad@fp+1,fputs@fp+1
 11933   0058A2  EC23  F02F         	call	_fputs	;wreg free
 11934   0058A6  0012               	return		;funcret
 11935   0058A8                     __end_of_pad:
 11936                           	callstack 0
 11937                           
 11938 ;; *************** function _fputs *****************
 11939 ;; Defined at:
 11940 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\nf_fputs.c"
 11941 ;; Parameters:    Size  Location     Type
 11942 ;;  s               2   15[BANK1 ] PTR const unsigned char 
 11943 ;;		 -> dbuf(80), 
 11944 ;;  fp              2   17[BANK1 ] PTR struct _IO_FILE
 11945 ;;		 -> sprintf@f(11), 
 11946 ;; Auto vars:     Size  Location     Type
 11947 ;;  i               2   20[BANK1 ] int 
 11948 ;;  c               1   19[BANK1 ] unsigned char 
 11949 ;; Return value:  Size  Location     Type
 11950 ;;                  2   15[BANK1 ] int 
 11951 ;; Registers used:
 11952 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 11953 ;; Tracked objects:
 11954 ;;		On entry : 0/0
 11955 ;;		On exit  : 0/0
 11956 ;;		Unchanged: 0/0
 11957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11958 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11959 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11960 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11961 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11962 ;;Total ram usage:        7 bytes
 11963 ;; Hardware stack levels used: 1
 11964 ;; Hardware stack levels required when called: 15
 11965 ;; This function calls:
 11966 ;;		_fputc
 11967 ;; This function is called by:
 11968 ;;		_pad
 11969 ;; This function uses a non-reentrant model
 11970 ;;
 11971                           
 11972                           	psect	text22
 11973   005E46                     __ptext22:
 11974                           	callstack 0
 11975   005E46                     _fputs:
 11976                           	callstack 9
 11977   005E46  0E00               	movlw	0
 11978   005E48  0101               	movlb	1	; () banked
 11979   005E4A  6F15               	movwf	(fputs@i+1)& (0+255),b
 11980   005E4C  0E00               	movlw	0
 11981   005E4E  6F14               	movwf	fputs@i& (0+255),b
 11982   005E50  EF36  F02F         	goto	l6374
 11983   005E54                     l6370:
 11984                           
 11985                           ; BSR set to: 1
 11986   005E54  C113  F106         	movff	fputs@c,fputc@c
 11987   005E58  6B07               	clrf	(fputc@c+1)& (0+255),b
 11988   005E5A  C111  F108         	movff	fputs@fp,fputc@fp
 11989   005E5E  C112  F109         	movff	fputs@fp+1,fputc@fp+1
 11990   005E62  EC93  F026         	call	_fputc	;wreg free
 11991   005E66  0101               	movlb	1	; () banked
 11992   005E68  4B14               	infsnz	fputs@i& (0+255),f,b
 11993   005E6A  2B15               	incf	(fputs@i+1)& (0+255),f,b
 11994   005E6C                     l6374:
 11995                           
 11996                           ; BSR set to: 1
 11997   005E6C  5114               	movf	fputs@i& (0+255),w,b
 11998   005E6E  250F               	addwf	fputs@s& (0+255),w,b
 11999   005E70  6ED9               	movwf	fsr2l,c
 12000   005E72  5115               	movf	(fputs@i+1)& (0+255),w,b
 12001   005E74  2110               	addwfc	(fputs@s+1)& (0+255),w,b
 12002   005E76  6EDA               	movwf	fsr2h,c
 12003   005E78  50DF               	movf	indf2,w,c
 12004   005E7A  6F13               	movwf	fputs@c& (0+255),b
 12005   005E7C  5113               	movf	fputs@c& (0+255),w,b
 12006   005E7E  A4D8               	btfss	status,2,c
 12007   005E80  EF44  F02F         	goto	u6711
 12008   005E84  EF46  F02F         	goto	u6710
 12009   005E88                     u6711:
 12010   005E88  EF2A  F02F         	goto	l6370
 12011   005E8C                     u6710:
 12012   005E8C                     
 12013                           ; BSR set to: 1
 12014   005E8C  0012               	return		;funcret
 12015   005E8E                     __end_of_fputs:
 12016                           	callstack 0
 12017                           
 12018 ;; *************** function _fputc *****************
 12019 ;; Defined at:
 12020 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\nf_fputc.c"
 12021 ;; Parameters:    Size  Location     Type
 12022 ;;  c               2    6[BANK1 ] int 
 12023 ;;  fp              2    8[BANK1 ] PTR struct _IO_FILE
 12024 ;;		 -> sprintf@f(11), 
 12025 ;; Auto vars:     Size  Location     Type
 12026 ;;		None
 12027 ;; Return value:  Size  Location     Type
 12028 ;;                  2    6[BANK1 ] int 
 12029 ;; Registers used:
 12030 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 12031 ;; Tracked objects:
 12032 ;;		On entry : 0/0
 12033 ;;		On exit  : 0/0
 12034 ;;		Unchanged: 0/0
 12035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12036 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12037 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12038 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12039 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12040 ;;Total ram usage:        9 bytes
 12041 ;; Hardware stack levels used: 1
 12042 ;; Hardware stack levels required when called: 14
 12043 ;; This function calls:
 12044 ;;		_putch
 12045 ;; This function is called by:
 12046 ;;		_pad
 12047 ;;		_vfpfcnvrt
 12048 ;;		_fputs
 12049 ;; This function uses a non-reentrant model
 12050 ;;
 12051                           
 12052                           	psect	text23
 12053   004D26                     __ptext23:
 12054                           	callstack 0
 12055   004D26                     _fputc:
 12056                           	callstack 12
 12057   004D26  0101               	movlb	1	; () banked
 12058   004D28  5108               	movf	fputc@fp& (0+255),w,b
 12059   004D2A  1109               	iorwf	(fputc@fp+1)& (0+255),w,b
 12060   004D2C  B4D8               	btfsc	status,2,c
 12061   004D2E  EF9B  F026         	goto	u5881
 12062   004D32  EF9D  F026         	goto	u5880
 12063   004D36                     u5881:
 12064   004D36  EFA6  F026         	goto	l5878
 12065   004D3A                     u5880:
 12066   004D3A                     
 12067                           ; BSR set to: 1
 12068   004D3A  5108               	movf	fputc@fp& (0+255),w,b
 12069   004D3C  1109               	iorwf	(fputc@fp+1)& (0+255),w,b
 12070   004D3E  A4D8               	btfss	status,2,c
 12071   004D40  EFA4  F026         	goto	u5891
 12072   004D44  EFA6  F026         	goto	u5890
 12073   004D48                     u5891:
 12074   004D48  EFAB  F026         	goto	l5880
 12075   004D4C                     u5890:
 12076   004D4C                     l5878:
 12077                           
 12078                           ; BSR set to: 1
 12079   004D4C  5106               	movf	fputc@c& (0+255),w,b
 12080   004D4E  ECA6  F032         	call	_putch
 12081   004D52  EFFF  F026         	goto	l1741
 12082   004D56                     l5880:
 12083                           
 12084                           ; BSR set to: 1
 12085   004D56  EE20 F009          	lfsr	2,9
 12086   004D5A  5108               	movf	fputc@fp& (0+255),w,b
 12087   004D5C  26D9               	addwf	fsr2l,f,c
 12088   004D5E  5109               	movf	(fputc@fp+1)& (0+255),w,b
 12089   004D60  22DA               	addwfc	fsr2h,f,c
 12090   004D62  50DE               	movf	postinc2,w,c
 12091   004D64  10DE               	iorwf	postinc2,w,c
 12092   004D66  B4D8               	btfsc	status,2,c
 12093   004D68  EFB8  F026         	goto	u5901
 12094   004D6C  EFBA  F026         	goto	u5900
 12095   004D70                     u5901:
 12096   004D70  EFD5  F026         	goto	l5884
 12097   004D74                     u5900:
 12098   004D74                     
 12099                           ; BSR set to: 1
 12100   004D74  EE20 F009          	lfsr	2,9
 12101   004D78  5108               	movf	fputc@fp& (0+255),w,b
 12102   004D7A  26D9               	addwf	fsr2l,f,c
 12103   004D7C  5109               	movf	(fputc@fp+1)& (0+255),w,b
 12104   004D7E  22DA               	addwfc	fsr2h,f,c
 12105   004D80  EE10 F002          	lfsr	1,2
 12106   004D84  5108               	movf	fputc@fp& (0+255),w,b
 12107   004D86  26E1               	addwf	fsr1l,f,c
 12108   004D88  5109               	movf	(fputc@fp+1)& (0+255),w,b
 12109   004D8A  22E2               	addwfc	fsr1h,f,c
 12110   004D8C  50DE               	movf	postinc2,w,c
 12111   004D8E  5CE6               	subwf	postinc1,w,c
 12112   004D90  50E6               	movf	postinc1,w,c
 12113   004D92  0A80               	xorlw	128
 12114   004D94  6F0E               	movwf	(??_fputc+4)& (0+255),b
 12115   004D96  50DE               	movf	postinc2,w,c
 12116   004D98  0A80               	xorlw	128
 12117   004D9A  590E               	subwfb	(??_fputc+4)& (0+255),w,b
 12118   004D9C  B0D8               	btfsc	status,0,c
 12119   004D9E  EFD3  F026         	goto	u5911
 12120   004DA2  EFD5  F026         	goto	u5910
 12121   004DA6                     u5911:
 12122   004DA6  EFFF  F026         	goto	l1741
 12123   004DAA                     u5910:
 12124   004DAA                     l5884:
 12125                           
 12126                           ; BSR set to: 1
 12127   004DAA  EE20 F002          	lfsr	2,2
 12128   004DAE  5108               	movf	fputc@fp& (0+255),w,b
 12129   004DB0  26D9               	addwf	fsr2l,f,c
 12130   004DB2  5109               	movf	(fputc@fp+1)& (0+255),w,b
 12131   004DB4  22DA               	addwfc	fsr2h,f,c
 12132   004DB6  006F FF78  F10A    	movff	postinc2,??_fputc
 12133   004DBC  006F FF74  F10B    	movff	postdec2,??_fputc+1
 12134   004DC2  0060  F423  FFD9   	movff	fputc@fp,fsr2l
 12135   004DC8  0060  F427  FFDA   	movff	fputc@fp+1,fsr2h
 12136   004DCE  006F FF78  F10C    	movff	postinc2,??_fputc+2
 12137   004DD4  006F FF74  F10D    	movff	postdec2,??_fputc+3
 12138   004DDA  510A               	movf	??_fputc& (0+255),w,b
 12139   004DDC  250C               	addwf	(??_fputc+2)& (0+255),w,b
 12140   004DDE  6ED9               	movwf	fsr2l,c
 12141   004DE0  510B               	movf	(??_fputc+1)& (0+255),w,b
 12142   004DE2  210D               	addwfc	(??_fputc+3)& (0+255),w,b
 12143   004DE4  6EDA               	movwf	fsr2h,c
 12144   004DE6  0060  F41B  FFDF   	movff	fputc@c,indf2
 12145   004DEC  EE20 F002          	lfsr	2,2
 12146   004DF0  5108               	movf	fputc@fp& (0+255),w,b
 12147   004DF2  26D9               	addwf	fsr2l,f,c
 12148   004DF4  5109               	movf	(fputc@fp+1)& (0+255),w,b
 12149   004DF6  22DA               	addwfc	fsr2h,f,c
 12150   004DF8  2ADE               	incf	postinc2,f,c
 12151   004DFA  0E00               	movlw	0
 12152   004DFC  22DD               	addwfc	postdec2,f,c
 12153   004DFE                     l1741:
 12154   004DFE  0012               	return		;funcret
 12155   004E00                     __end_of_fputc:
 12156                           	callstack 0
 12157                           
 12158 ;; *************** function _putch *****************
 12159 ;; Defined at:
 12160 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\putch.c"
 12161 ;; Parameters:    Size  Location     Type
 12162 ;;  c               1    wreg     unsigned char 
 12163 ;; Auto vars:     Size  Location     Type
 12164 ;;  c               1    0[COMRAM] unsigned char 
 12165 ;; Return value:  Size  Location     Type
 12166 ;;                  1    wreg      void 
 12167 ;; Registers used:
 12168 ;;		wreg
 12169 ;; Tracked objects:
 12170 ;;		On entry : 0/0
 12171 ;;		On exit  : 0/0
 12172 ;;		Unchanged: 0/0
 12173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12174 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12175 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12176 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12177 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12178 ;;Total ram usage:        0 bytes
 12179 ;; Hardware stack levels used: 1
 12180 ;; Hardware stack levels required when called: 13
 12181 ;; This function calls:
 12182 ;;		Nothing
 12183 ;; This function is called by:
 12184 ;;		_fputc
 12185 ;; This function uses a non-reentrant model
 12186 ;;
 12187                           
 12188                           	psect	text24
 12189   00654C                     __ptext24:
 12190                           	callstack 0
 12191   00654C                     _putch:
 12192                           	callstack 12
 12193   00654C  0012               	return		;funcret
 12194   00654E                     __end_of_putch:
 12195                           	callstack 0
 12196                           
 12197 ;; *************** function _memcpy *****************
 12198 ;; Defined at:
 12199 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\memcpy.c"
 12200 ;; Parameters:    Size  Location     Type
 12201 ;;  d1              2    6[BANK1 ] PTR void 
 12202 ;;		 -> dbuf(80), 
 12203 ;;  s1              2    8[BANK1 ] PTR const void 
 12204 ;;		 -> dbuf(80), 
 12205 ;;  n               2   10[BANK1 ] unsigned int 
 12206 ;; Auto vars:     Size  Location     Type
 12207 ;;  s               2   14[BANK1 ] PTR const unsigned char 
 12208 ;;		 -> dbuf(80), 
 12209 ;;  d               2   12[BANK1 ] PTR unsigned char 
 12210 ;;		 -> dbuf(80), 
 12211 ;;  tmp             1   16[BANK1 ] unsigned char 
 12212 ;; Return value:  Size  Location     Type
 12213 ;;                  2    6[BANK1 ] PTR void 
 12214 ;; Registers used:
 12215 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12216 ;; Tracked objects:
 12217 ;;		On entry : 0/0
 12218 ;;		On exit  : 0/0
 12219 ;;		Unchanged: 0/0
 12220 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12221 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12222 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12223 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12224 ;;      Totals:         0       0      11       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12225 ;;Total ram usage:       11 bytes
 12226 ;; Hardware stack levels used: 1
 12227 ;; Hardware stack levels required when called: 13
 12228 ;; This function calls:
 12229 ;;		Nothing
 12230 ;; This function is called by:
 12231 ;;		_efgtoa
 12232 ;; This function uses a non-reentrant model
 12233 ;;
 12234                           
 12235                           	psect	text25
 12236   005AA0                     __ptext25:
 12237                           	callstack 0
 12238   005AA0                     _memcpy:
 12239                           	callstack 12
 12240   005AA0  C108  F10E         	movff	memcpy@s1,memcpy@s
 12241   005AA4  C109  F10F         	movff	memcpy@s1+1,memcpy@s+1
 12242   005AA8  C106  F10C         	movff	memcpy@d1,memcpy@d
 12243   005AAC  C107  F10D         	movff	memcpy@d1+1,memcpy@d+1
 12244   005AB0  EF6F  F02D         	goto	l6986
 12245   005AB4                     l6978:
 12246                           
 12247                           ; BSR set to: 1
 12248   005AB4  0060  F43B  FFD9   	movff	memcpy@s,fsr2l
 12249   005ABA  0060  F43F  FFDA   	movff	memcpy@s+1,fsr2h
 12250   005AC0  50DF               	movf	indf2,w,c
 12251   005AC2  6F10               	movwf	memcpy@tmp& (0+255),b
 12252   005AC4                     
 12253                           ; BSR set to: 1
 12254   005AC4  4B0E               	infsnz	memcpy@s& (0+255),f,b
 12255   005AC6  2B0F               	incf	(memcpy@s+1)& (0+255),f,b
 12256   005AC8                     
 12257                           ; BSR set to: 1
 12258   005AC8  0060  F433  FFD9   	movff	memcpy@d,fsr2l
 12259   005ACE  0060  F437  FFDA   	movff	memcpy@d+1,fsr2h
 12260   005AD4  0060  F443  FFDF   	movff	memcpy@tmp,indf2
 12261   005ADA                     
 12262                           ; BSR set to: 1
 12263   005ADA  4B0C               	infsnz	memcpy@d& (0+255),f,b
 12264   005ADC  2B0D               	incf	(memcpy@d+1)& (0+255),f,b
 12265   005ADE                     l6986:
 12266   005ADE  0101               	movlb	1	; () banked
 12267   005AE0  070A               	decf	memcpy@n& (0+255),f,b
 12268   005AE2  A0D8               	btfss	status,0,c
 12269   005AE4  070B               	decf	(memcpy@n+1)& (0+255),f,b
 12270   005AE6  290A               	incf	memcpy@n& (0+255),w,b
 12271   005AE8  E106               	bnz	u7691
 12272   005AEA  290B               	incf	(memcpy@n+1)& (0+255),w,b
 12273   005AEC  A4D8               	btfss	status,2,c
 12274   005AEE  EF7B  F02D         	goto	u7691
 12275   005AF2  EF7D  F02D         	goto	u7690
 12276   005AF6                     u7691:
 12277   005AF6  EF5A  F02D         	goto	l6978
 12278   005AFA                     u7690:
 12279   005AFA                     
 12280                           ; BSR set to: 1
 12281   005AFA  0012               	return		;funcret
 12282   005AFC                     __end_of_memcpy:
 12283                           	callstack 0
 12284                           
 12285 ;; *************** function _labs *****************
 12286 ;; Defined at:
 12287 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\labs.c"
 12288 ;; Parameters:    Size  Location     Type
 12289 ;;  a               4    6[BANK1 ] long 
 12290 ;; Auto vars:     Size  Location     Type
 12291 ;;		None
 12292 ;; Return value:  Size  Location     Type
 12293 ;;                  4    6[BANK1 ] long 
 12294 ;; Registers used:
 12295 ;;		wreg, status,2, status,0
 12296 ;; Tracked objects:
 12297 ;;		On entry : 0/0
 12298 ;;		On exit  : 0/0
 12299 ;;		Unchanged: 0/0
 12300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12301 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12302 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12303 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12304 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12305 ;;Total ram usage:        8 bytes
 12306 ;; Hardware stack levels used: 1
 12307 ;; Hardware stack levels required when called: 13
 12308 ;; This function calls:
 12309 ;;		Nothing
 12310 ;; This function is called by:
 12311 ;;		_efgtoa
 12312 ;; This function uses a non-reentrant model
 12313 ;;
 12314                           
 12315                           	psect	text26
 12316   005BAE                     __ptext26:
 12317                           	callstack 0
 12318   005BAE                     _labs:
 12319                           	callstack 12
 12320   005BAE  0101               	movlb	1	; () banked
 12321   005BB0  BF09               	btfsc	(labs@a+3)& (0+255),7,b
 12322   005BB2  EFDD  F02D         	goto	u7581
 12323   005BB6  EFDF  F02D         	goto	u7580
 12324   005BBA                     u7581:
 12325   005BBA  EFE9  F02D         	goto	l6944
 12326   005BBE                     u7580:
 12327   005BBE                     
 12328                           ; BSR set to: 1
 12329   005BBE  C106  F106         	movff	labs@a,?_labs
 12330   005BC2  C107  F107         	movff	labs@a+1,?_labs+1
 12331   005BC6  C108  F108         	movff	labs@a+2,?_labs+2
 12332   005BCA  C109  F109         	movff	labs@a+3,?_labs+3
 12333   005BCE  EF02  F02E         	goto	l1723
 12334   005BD2                     l6944:
 12335                           
 12336                           ; BSR set to: 1
 12337   005BD2  C106  F10A         	movff	labs@a,??_labs
 12338   005BD6  C107  F10B         	movff	labs@a+1,??_labs+1
 12339   005BDA  C108  F10C         	movff	labs@a+2,??_labs+2
 12340   005BDE  C109  F10D         	movff	labs@a+3,??_labs+3
 12341   005BE2  1F0A               	comf	??_labs& (0+255),f,b
 12342   005BE4  1F0B               	comf	(??_labs+1)& (0+255),f,b
 12343   005BE6  1F0C               	comf	(??_labs+2)& (0+255),f,b
 12344   005BE8  1F0D               	comf	(??_labs+3)& (0+255),f,b
 12345   005BEA  2B0A               	incf	??_labs& (0+255),f,b
 12346   005BEC  0E00               	movlw	0
 12347   005BEE  230B               	addwfc	(??_labs+1)& (0+255),f,b
 12348   005BF0  230C               	addwfc	(??_labs+2)& (0+255),f,b
 12349   005BF2  230D               	addwfc	(??_labs+3)& (0+255),f,b
 12350   005BF4  C10A  F106         	movff	??_labs,?_labs
 12351   005BF8  C10B  F107         	movff	??_labs+1,?_labs+1
 12352   005BFC  C10C  F108         	movff	??_labs+2,?_labs+2
 12353   005C00  C10D  F109         	movff	??_labs+3,?_labs+3
 12354   005C04                     l1723:
 12355                           
 12356                           ; BSR set to: 1
 12357   005C04  0012               	return		;funcret
 12358   005C06                     __end_of_labs:
 12359                           	callstack 0
 12360                           
 12361 ;; *************** function _floorf *****************
 12362 ;; Defined at:
 12363 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\floorf.c"
 12364 ;; Parameters:    Size  Location     Type
 12365 ;;  x               4   70[BANK1 ] float 
 12366 ;; Auto vars:     Size  Location     Type
 12367 ;;  u               4   86[BANK1 ] struct .
 12368 ;;  m               4   80[BANK1 ] unsigned long 
 12369 ;;  e               2   84[BANK1 ] int 
 12370 ;; Return value:  Size  Location     Type
 12371 ;;                  4   70[BANK1 ] float 
 12372 ;; Registers used:
 12373 ;;		wreg, status,2, status,0
 12374 ;; Tracked objects:
 12375 ;;		On entry : 0/0
 12376 ;;		On exit  : 0/0
 12377 ;;		Unchanged: 0/0
 12378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12379 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12380 ;;      Locals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12381 ;;      Temps:          0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12382 ;;      Totals:         0       0      20       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12383 ;;Total ram usage:       20 bytes
 12384 ;; Hardware stack levels used: 1
 12385 ;; Hardware stack levels required when called: 13
 12386 ;; This function calls:
 12387 ;;		Nothing
 12388 ;; This function is called by:
 12389 ;;		_efgtoa
 12390 ;; This function uses a non-reentrant model
 12391 ;;
 12392                           
 12393                           	psect	text27
 12394   003B7C                     __ptext27:
 12395                           	callstack 0
 12396   003B7C                     _floorf:
 12397                           	callstack 12
 12398   003B7C  C0D5  F156         	movff	floorf@F521,floorf@u
 12399   003B80  C0D6  F157         	movff	floorf@F521+1,floorf@u+1
 12400   003B84  C0D7  F158         	movff	floorf@F521+2,floorf@u+2
 12401   003B88  C0D8  F159         	movff	floorf@F521+3,floorf@u+3
 12402   003B8C  C146  F156         	movff	floorf@x,floorf@u
 12403   003B90  C147  F157         	movff	floorf@x+1,floorf@u+1
 12404   003B94  C148  F158         	movff	floorf@x+2,floorf@u+2
 12405   003B98  C149  F159         	movff	floorf@x+3,floorf@u+3
 12406   003B9C  0E81               	movlw	129
 12407   003B9E  0101               	movlb	1	; () banked
 12408   003BA0  6F4A               	movwf	??_floorf& (0+255),b
 12409   003BA2  0EFF               	movlw	255
 12410   003BA4  6F4B               	movwf	(??_floorf+1)& (0+255),b
 12411   003BA6  C156  F14C         	movff	floorf@u,??_floorf+2
 12412   003BAA  C157  F14D         	movff	floorf@u+1,??_floorf+3
 12413   003BAE  C158  F14E         	movff	floorf@u+2,??_floorf+4
 12414   003BB2  C159  F14F         	movff	floorf@u+3,??_floorf+5
 12415   003BB6  0E18               	movlw	24
 12416   003BB8  EFE3  F01D         	goto	u7590
 12417   003BBC                     u7595:
 12418   003BBC  90D8               	bcf	status,0,c
 12419   003BBE  334F               	rrcf	(??_floorf+5)& (0+255),f,b
 12420   003BC0  334E               	rrcf	(??_floorf+4)& (0+255),f,b
 12421   003BC2  334D               	rrcf	(??_floorf+3)& (0+255),f,b
 12422   003BC4  334C               	rrcf	(??_floorf+2)& (0+255),f,b
 12423   003BC6                     u7590:
 12424   003BC6  2EE8               	decfsz	wreg,f,c
 12425   003BC8  EFDE  F01D         	goto	u7595
 12426   003BCC  514C               	movf	(??_floorf+2)& (0+255),w,b
 12427   003BCE  254A               	addwf	??_floorf& (0+255),w,b
 12428   003BD0  6F54               	movwf	floorf@e& (0+255),b
 12429   003BD2  0E00               	movlw	0
 12430   003BD4  214B               	addwfc	(??_floorf+1)& (0+255),w,b
 12431   003BD6  6F55               	movwf	(floorf@e+1)& (0+255),b
 12432   003BD8  BF55               	btfsc	(floorf@e+1)& (0+255),7,b
 12433   003BDA  EFF8  F01D         	goto	u7601
 12434   003BDE  5155               	movf	(floorf@e+1)& (0+255),w,b
 12435   003BE0  E109               	bnz	u7600
 12436   003BE2  0E17               	movlw	23
 12437   003BE4  5D54               	subwf	floorf@e& (0+255),w,b
 12438   003BE6  A0D8               	btfss	status,0,c
 12439   003BE8  EFF8  F01D         	goto	u7601
 12440   003BEC  EFFA  F01D         	goto	u7600
 12441   003BF0                     u7601:
 12442   003BF0  EF04  F01E         	goto	l6954
 12443   003BF4                     u7600:
 12444   003BF4                     l6952:
 12445                           
 12446                           ; BSR set to: 1
 12447   003BF4  C146  F146         	movff	floorf@x,?_floorf
 12448   003BF8  C147  F147         	movff	floorf@x+1,?_floorf+1
 12449   003BFC  C148  F148         	movff	floorf@x+2,?_floorf+2
 12450   003C00  C149  F149         	movff	floorf@x+3,?_floorf+3
 12451   003C04  EFC8  F01E         	goto	l1709
 12452   003C08                     l6954:
 12453                           
 12454                           ; BSR set to: 1
 12455   003C08  BF55               	btfsc	(floorf@e+1)& (0+255),7,b
 12456   003C0A  EF09  F01E         	goto	u7611
 12457   003C0E  EF0B  F01E         	goto	u7610
 12458   003C12                     u7611:
 12459   003C12  EF7C  F01E         	goto	l6964
 12460   003C16                     u7610:
 12461   003C16                     
 12462                           ; BSR set to: 1
 12463   003C16  C154  F14A         	movff	floorf@e,??_floorf
 12464   003C1A  0EFF               	movlw	255
 12465   003C1C  6F4B               	movwf	(??_floorf+1)& (0+255),b
 12466   003C1E  0EFF               	movlw	255
 12467   003C20  6F4C               	movwf	(??_floorf+2)& (0+255),b
 12468   003C22  0E7F               	movlw	127
 12469   003C24  6F4D               	movwf	(??_floorf+3)& (0+255),b
 12470   003C26  0E00               	movlw	0
 12471   003C28  6F4E               	movwf	(??_floorf+4)& (0+255),b
 12472   003C2A                     u7625:
 12473   003C2A  674A               	tstfsz	??_floorf& (0+255),b
 12474   003C2C  EF1A  F01E         	goto	u7626
 12475   003C30  EF22  F01E         	goto	u7627
 12476   003C34                     u7626:
 12477   003C34  354E               	rlcf	(??_floorf+4)& (0+255),w,b
 12478   003C36  334E               	rrcf	(??_floorf+4)& (0+255),f,b
 12479   003C38  334D               	rrcf	(??_floorf+3)& (0+255),f,b
 12480   003C3A  334C               	rrcf	(??_floorf+2)& (0+255),f,b
 12481   003C3C  334B               	rrcf	(??_floorf+1)& (0+255),f,b
 12482   003C3E  2F4A               	decfsz	??_floorf& (0+255),f,b
 12483   003C40  EF15  F01E         	goto	u7625
 12484   003C44                     u7627:
 12485   003C44  C14B  F150         	movff	??_floorf+1,floorf@m
 12486   003C48  C14C  F151         	movff	??_floorf+2,floorf@m+1
 12487   003C4C  C14D  F152         	movff	??_floorf+3,floorf@m+2
 12488   003C50  C14E  F153         	movff	??_floorf+4,floorf@m+3
 12489   003C54  0101               	movlb	1	; () banked
 12490   003C56  5150               	movf	floorf@m& (0+255),w,b
 12491   003C58  1556               	andwf	floorf@u& (0+255),w,b
 12492   003C5A  6F4A               	movwf	??_floorf& (0+255),b
 12493   003C5C  5151               	movf	(floorf@m+1)& (0+255),w,b
 12494   003C5E  1557               	andwf	(floorf@u+1)& (0+255),w,b
 12495   003C60  6F4B               	movwf	(??_floorf+1)& (0+255),b
 12496   003C62  5152               	movf	(floorf@m+2)& (0+255),w,b
 12497   003C64  1558               	andwf	(floorf@u+2)& (0+255),w,b
 12498   003C66  6F4C               	movwf	(??_floorf+2)& (0+255),b
 12499   003C68  5153               	movf	(floorf@m+3)& (0+255),w,b
 12500   003C6A  1559               	andwf	(floorf@u+3)& (0+255),w,b
 12501   003C6C  6F4D               	movwf	(??_floorf+3)& (0+255),b
 12502   003C6E  514A               	movf	??_floorf& (0+255),w,b
 12503   003C70  114B               	iorwf	(??_floorf+1)& (0+255),w,b
 12504   003C72  114C               	iorwf	(??_floorf+2)& (0+255),w,b
 12505   003C74  114D               	iorwf	(??_floorf+3)& (0+255),w,b
 12506   003C76  A4D8               	btfss	status,2,c
 12507   003C78  EF40  F01E         	goto	u7631
 12508   003C7C  EF42  F01E         	goto	u7630
 12509   003C80                     u7631:
 12510   003C80  EF44  F01E         	goto	l6960
 12511   003C84                     u7630:
 12512   003C84  EFFA  F01D         	goto	l6952
 12513   003C88                     l6960:
 12514                           
 12515                           ; BSR set to: 1
 12516   003C88  C156  F14A         	movff	floorf@u,??_floorf
 12517   003C8C  C157  F14B         	movff	floorf@u+1,??_floorf+1
 12518   003C90  C158  F14C         	movff	floorf@u+2,??_floorf+2
 12519   003C94  C159  F14D         	movff	floorf@u+3,??_floorf+3
 12520   003C98  0E20               	movlw	32
 12521   003C9A  EF54  F01E         	goto	u7640
 12522   003C9E                     u7645:
 12523   003C9E  90D8               	bcf	status,0,c
 12524   003CA0  334D               	rrcf	(??_floorf+3)& (0+255),f,b
 12525   003CA2  334C               	rrcf	(??_floorf+2)& (0+255),f,b
 12526   003CA4  334B               	rrcf	(??_floorf+1)& (0+255),f,b
 12527   003CA6  334A               	rrcf	??_floorf& (0+255),f,b
 12528   003CA8                     u7640:
 12529   003CA8  2EE8               	decfsz	wreg,f,c
 12530   003CAA  EF4F  F01E         	goto	u7645
 12531   003CAE  514A               	movf	??_floorf& (0+255),w,b
 12532   003CB0  114B               	iorwf	(??_floorf+1)& (0+255),w,b
 12533   003CB2  114C               	iorwf	(??_floorf+2)& (0+255),w,b
 12534   003CB4  114D               	iorwf	(??_floorf+3)& (0+255),w,b
 12535   003CB6  B4D8               	btfsc	status,2,c
 12536   003CB8  EF60  F01E         	goto	u7651
 12537   003CBC  EF62  F01E         	goto	u7650
 12538   003CC0                     u7651:
 12539   003CC0  EF6A  F01E         	goto	l1712
 12540   003CC4                     u7650:
 12541   003CC4                     
 12542                           ; BSR set to: 1
 12543   003CC4  5150               	movf	floorf@m& (0+255),w,b
 12544   003CC6  2756               	addwf	floorf@u& (0+255),f,b
 12545   003CC8  5151               	movf	(floorf@m+1)& (0+255),w,b
 12546   003CCA  2357               	addwfc	(floorf@u+1)& (0+255),f,b
 12547   003CCC  5152               	movf	(floorf@m+2)& (0+255),w,b
 12548   003CCE  2358               	addwfc	(floorf@u+2)& (0+255),f,b
 12549   003CD0  5153               	movf	(floorf@m+3)& (0+255),w,b
 12550   003CD2  2359               	addwfc	(floorf@u+3)& (0+255),f,b
 12551   003CD4                     l1712:
 12552                           
 12553                           ; BSR set to: 1
 12554   003CD4  1D50               	comf	floorf@m& (0+255),w,b
 12555   003CD6  6F4A               	movwf	??_floorf& (0+255),b
 12556   003CD8  1D51               	comf	(floorf@m+1)& (0+255),w,b
 12557   003CDA  6F4B               	movwf	(??_floorf+1)& (0+255),b
 12558   003CDC  1D52               	comf	(floorf@m+2)& (0+255),w,b
 12559   003CDE  6F4C               	movwf	(??_floorf+2)& (0+255),b
 12560   003CE0  1D53               	comf	(floorf@m+3)& (0+255),w,b
 12561   003CE2  6F4D               	movwf	(??_floorf+3)& (0+255),b
 12562   003CE4  514A               	movf	??_floorf& (0+255),w,b
 12563   003CE6  1756               	andwf	floorf@u& (0+255),f,b
 12564   003CE8  514B               	movf	(??_floorf+1)& (0+255),w,b
 12565   003CEA  1757               	andwf	(floorf@u+1)& (0+255),f,b
 12566   003CEC  514C               	movf	(??_floorf+2)& (0+255),w,b
 12567   003CEE  1758               	andwf	(floorf@u+2)& (0+255),f,b
 12568   003CF0  514D               	movf	(??_floorf+3)& (0+255),w,b
 12569   003CF2  1759               	andwf	(floorf@u+3)& (0+255),f,b
 12570   003CF4  EFC0  F01E         	goto	l6972
 12571   003CF8                     l6964:
 12572                           
 12573                           ; BSR set to: 1
 12574   003CF8  C156  F14A         	movff	floorf@u,??_floorf
 12575   003CFC  C157  F14B         	movff	floorf@u+1,??_floorf+1
 12576   003D00  C158  F14C         	movff	floorf@u+2,??_floorf+2
 12577   003D04  C159  F14D         	movff	floorf@u+3,??_floorf+3
 12578   003D08  0E20               	movlw	32
 12579   003D0A  EF8C  F01E         	goto	u7660
 12580   003D0E                     u7665:
 12581   003D0E  90D8               	bcf	status,0,c
 12582   003D10  334D               	rrcf	(??_floorf+3)& (0+255),f,b
 12583   003D12  334C               	rrcf	(??_floorf+2)& (0+255),f,b
 12584   003D14  334B               	rrcf	(??_floorf+1)& (0+255),f,b
 12585   003D16  334A               	rrcf	??_floorf& (0+255),f,b
 12586   003D18                     u7660:
 12587   003D18  2EE8               	decfsz	wreg,f,c
 12588   003D1A  EF87  F01E         	goto	u7665
 12589   003D1E  514A               	movf	??_floorf& (0+255),w,b
 12590   003D20  114B               	iorwf	(??_floorf+1)& (0+255),w,b
 12591   003D22  114C               	iorwf	(??_floorf+2)& (0+255),w,b
 12592   003D24  114D               	iorwf	(??_floorf+3)& (0+255),w,b
 12593   003D26  A4D8               	btfss	status,2,c
 12594   003D28  EF98  F01E         	goto	u7671
 12595   003D2C  EF9A  F01E         	goto	u7670
 12596   003D30                     u7671:
 12597   003D30  EFA4  F01E         	goto	l6968
 12598   003D34                     u7670:
 12599   003D34                     
 12600                           ; BSR set to: 1
 12601   003D34  0E00               	movlw	0
 12602   003D36  6F56               	movwf	floorf@u& (0+255),b
 12603   003D38  0E00               	movlw	0
 12604   003D3A  6F57               	movwf	(floorf@u+1)& (0+255),b
 12605   003D3C  0E00               	movlw	0
 12606   003D3E  6F58               	movwf	(floorf@u+2)& (0+255),b
 12607   003D40  0E00               	movlw	0
 12608   003D42  6F59               	movwf	(floorf@u+3)& (0+255),b
 12609   003D44  EFC0  F01E         	goto	l6972
 12610   003D48                     l6968:
 12611                           
 12612                           ; BSR set to: 1
 12613   003D48  90D8               	bcf	status,0,c
 12614   003D4A  3556               	rlcf	floorf@u& (0+255),w,b
 12615   003D4C  6F4A               	movwf	??_floorf& (0+255),b
 12616   003D4E  3557               	rlcf	(floorf@u+1)& (0+255),w,b
 12617   003D50  6F4B               	movwf	(??_floorf+1)& (0+255),b
 12618   003D52  3558               	rlcf	(floorf@u+2)& (0+255),w,b
 12619   003D54  6F4C               	movwf	(??_floorf+2)& (0+255),b
 12620   003D56  3559               	rlcf	(floorf@u+3)& (0+255),w,b
 12621   003D58  6F4D               	movwf	(??_floorf+3)& (0+255),b
 12622   003D5A  514A               	movf	??_floorf& (0+255),w,b
 12623   003D5C  114B               	iorwf	(??_floorf+1)& (0+255),w,b
 12624   003D5E  114C               	iorwf	(??_floorf+2)& (0+255),w,b
 12625   003D60  114D               	iorwf	(??_floorf+3)& (0+255),w,b
 12626   003D62  B4D8               	btfsc	status,2,c
 12627   003D64  EFB6  F01E         	goto	u7681
 12628   003D68  EFB8  F01E         	goto	u7680
 12629   003D6C                     u7681:
 12630   003D6C  EFC0  F01E         	goto	l6972
 12631   003D70                     u7680:
 12632   003D70                     
 12633                           ; BSR set to: 1
 12634   003D70  0E00               	movlw	0
 12635   003D72  6F56               	movwf	floorf@u& (0+255),b
 12636   003D74  0E00               	movlw	0
 12637   003D76  6F57               	movwf	(floorf@u+1)& (0+255),b
 12638   003D78  0E80               	movlw	128
 12639   003D7A  6F58               	movwf	(floorf@u+2)& (0+255),b
 12640   003D7C  0EBF               	movlw	191
 12641   003D7E  6F59               	movwf	(floorf@u+3)& (0+255),b
 12642   003D80                     l6972:
 12643                           
 12644                           ; BSR set to: 1
 12645   003D80  C156  F146         	movff	floorf@u,?_floorf
 12646   003D84  C157  F147         	movff	floorf@u+1,?_floorf+1
 12647   003D88  C158  F148         	movff	floorf@u+2,?_floorf+2
 12648   003D8C  C159  F149         	movff	floorf@u+3,?_floorf+3
 12649   003D90                     l1709:
 12650                           
 12651                           ; BSR set to: 1
 12652   003D90  0012               	return		;funcret
 12653   003D92                     __end_of_floorf:
 12654                           	callstack 0
 12655                           
 12656 ;; *************** function ___fpclassifyf *****************
 12657 ;; Defined at:
 12658 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\__fpclassifyf.c"
 12659 ;; Parameters:    Size  Location     Type
 12660 ;;  x               4    6[BANK1 ] float 
 12661 ;; Auto vars:     Size  Location     Type
 12662 ;;  u               4   16[BANK1 ] struct .
 12663 ;;  e               2   14[BANK1 ] int 
 12664 ;; Return value:  Size  Location     Type
 12665 ;;                  2    6[BANK1 ] int 
 12666 ;; Registers used:
 12667 ;;		wreg, status,2, status,0
 12668 ;; Tracked objects:
 12669 ;;		On entry : 0/0
 12670 ;;		On exit  : 0/0
 12671 ;;		Unchanged: 0/0
 12672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12673 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12674 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12675 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12676 ;;      Totals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12677 ;;Total ram usage:       14 bytes
 12678 ;; Hardware stack levels used: 1
 12679 ;; Hardware stack levels required when called: 13
 12680 ;; This function calls:
 12681 ;;		Nothing
 12682 ;; This function is called by:
 12683 ;;		_efgtoa
 12684 ;; This function uses a non-reentrant model
 12685 ;;
 12686                           
 12687                           	psect	text28
 12688   004862                     __ptext28:
 12689                           	callstack 0
 12690   004862                     ___fpclassifyf:
 12691                           	callstack 12
 12692   004862  C0D9  F110         	movff	___fpclassifyf@F465,___fpclassifyf@u
 12693   004866  C0DA  F111         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
 12694   00486A  C0DB  F112         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
 12695   00486E  C0DC  F113         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
 12696   004872  C106  F110         	movff	___fpclassifyf@x,___fpclassifyf@u
 12697   004876  C107  F111         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
 12698   00487A  C108  F112         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
 12699   00487E  C109  F113         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
 12700   004882  C110  F10A         	movff	___fpclassifyf@u,??___fpclassifyf
 12701   004886  C111  F10B         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
 12702   00488A  C112  F10C         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
 12703   00488E  C113  F10D         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
 12704   004892  0E18               	movlw	24
 12705   004894  EF52  F024         	goto	u7500
 12706   004898                     u7505:
 12707   004898  0101               	movlb	1	; () banked
 12708   00489A  90D8               	bcf	status,0,c
 12709   00489C  330D               	rrcf	(??___fpclassifyf+3)& (0+255),f,b
 12710   00489E  330C               	rrcf	(??___fpclassifyf+2)& (0+255),f,b
 12711   0048A0  330B               	rrcf	(??___fpclassifyf+1)& (0+255),f,b
 12712   0048A2  330A               	rrcf	??___fpclassifyf& (0+255),f,b
 12713   0048A4                     u7500:
 12714   0048A4  2EE8               	decfsz	wreg,f,c
 12715   0048A6  EF4C  F024         	goto	u7505
 12716   0048AA  510A               	movf	??___fpclassifyf& (0+255),w,b
 12717   0048AC  6F0E               	movwf	___fpclassifyf@e& (0+255),b
 12718   0048AE  6B0F               	clrf	(___fpclassifyf@e+1)& (0+255),b
 12719   0048B0  510E               	movf	___fpclassifyf@e& (0+255),w,b
 12720   0048B2  110F               	iorwf	(___fpclassifyf@e+1)& (0+255),w,b
 12721   0048B4  A4D8               	btfss	status,2,c
 12722   0048B6  EF5F  F024         	goto	u7511
 12723   0048BA  EF61  F024         	goto	u7510
 12724   0048BE                     u7511:
 12725   0048BE  EF81  F024         	goto	l6926
 12726   0048C2                     u7510:
 12727   0048C2                     
 12728                           ; BSR set to: 1
 12729   0048C2  90D8               	bcf	status,0,c
 12730   0048C4  3510               	rlcf	___fpclassifyf@u& (0+255),w,b
 12731   0048C6  6F0A               	movwf	??___fpclassifyf& (0+255),b
 12732   0048C8  3511               	rlcf	(___fpclassifyf@u+1)& (0+255),w,b
 12733   0048CA  6F0B               	movwf	(??___fpclassifyf+1)& (0+255),b
 12734   0048CC  3512               	rlcf	(___fpclassifyf@u+2)& (0+255),w,b
 12735   0048CE  6F0C               	movwf	(??___fpclassifyf+2)& (0+255),b
 12736   0048D0  3513               	rlcf	(___fpclassifyf@u+3)& (0+255),w,b
 12737   0048D2  6F0D               	movwf	(??___fpclassifyf+3)& (0+255),b
 12738   0048D4  510A               	movf	??___fpclassifyf& (0+255),w,b
 12739   0048D6  110B               	iorwf	(??___fpclassifyf+1)& (0+255),w,b
 12740   0048D8  110C               	iorwf	(??___fpclassifyf+2)& (0+255),w,b
 12741   0048DA  110D               	iorwf	(??___fpclassifyf+3)& (0+255),w,b
 12742   0048DC  A4D8               	btfss	status,2,c
 12743   0048DE  EF73  F024         	goto	u7521
 12744   0048E2  EF75  F024         	goto	u7520
 12745   0048E6                     u7521:
 12746   0048E6  EF7B  F024         	goto	l6922
 12747   0048EA                     u7520:
 12748   0048EA                     
 12749                           ; BSR set to: 1
 12750   0048EA  0E00               	movlw	0
 12751   0048EC  6F07               	movwf	(?___fpclassifyf+1)& (0+255),b
 12752   0048EE  0E02               	movlw	2
 12753   0048F0  6F06               	movwf	?___fpclassifyf& (0+255),b
 12754   0048F2  EFB0  F024         	goto	l1702
 12755   0048F6                     l6922:
 12756                           
 12757                           ; BSR set to: 1
 12758   0048F6  0E00               	movlw	0
 12759   0048F8  6F07               	movwf	(?___fpclassifyf+1)& (0+255),b
 12760   0048FA  0E03               	movlw	3
 12761   0048FC  6F06               	movwf	?___fpclassifyf& (0+255),b
 12762   0048FE  EFB0  F024         	goto	l1702
 12763   004902                     l6926:
 12764                           
 12765                           ; BSR set to: 1
 12766   004902  290E               	incf	___fpclassifyf@e& (0+255),w,b
 12767   004904  110F               	iorwf	(___fpclassifyf@e+1)& (0+255),w,b
 12768   004906  A4D8               	btfss	status,2,c
 12769   004908  EF88  F024         	goto	u7531
 12770   00490C  EF8A  F024         	goto	u7530
 12771   004910                     u7531:
 12772   004910  EFAC  F024         	goto	l6932
 12773   004914                     u7530:
 12774   004914                     
 12775                           ; BSR set to: 1
 12776   004914  C110  F10A         	movff	___fpclassifyf@u,??___fpclassifyf
 12777   004918  C111  F10B         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
 12778   00491C  C112  F10C         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
 12779   004920  C113  F10D         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
 12780   004924  0E09               	movlw	9
 12781   004926                     u7545:
 12782   004926  90D8               	bcf	status,0,c
 12783   004928  370A               	rlcf	??___fpclassifyf& (0+255),f,b
 12784   00492A  370B               	rlcf	(??___fpclassifyf+1)& (0+255),f,b
 12785   00492C  370C               	rlcf	(??___fpclassifyf+2)& (0+255),f,b
 12786   00492E  370D               	rlcf	(??___fpclassifyf+3)& (0+255),f,b
 12787   004930  2EE8               	decfsz	wreg,f,c
 12788   004932  EF93  F024         	goto	u7545
 12789   004936  510A               	movf	??___fpclassifyf& (0+255),w,b
 12790   004938  110B               	iorwf	(??___fpclassifyf+1)& (0+255),w,b
 12791   00493A  110C               	iorwf	(??___fpclassifyf+2)& (0+255),w,b
 12792   00493C  110D               	iorwf	(??___fpclassifyf+3)& (0+255),w,b
 12793   00493E  B4D8               	btfsc	status,2,c
 12794   004940  EFA4  F024         	goto	u7551
 12795   004944  EFA7  F024         	goto	u7550
 12796   004948                     u7551:
 12797   004948  0E01               	movlw	1
 12798   00494A  EFA8  F024         	goto	u7560
 12799   00494E                     u7550:
 12800   00494E  0E00               	movlw	0
 12801   004950                     u7560:
 12802   004950  6F06               	movwf	?___fpclassifyf& (0+255),b
 12803   004952  6B07               	clrf	(?___fpclassifyf+1)& (0+255),b
 12804   004954  EFB0  F024         	goto	l1702
 12805   004958                     l6932:
 12806                           
 12807                           ; BSR set to: 1
 12808   004958  0E00               	movlw	0
 12809   00495A  6F07               	movwf	(?___fpclassifyf+1)& (0+255),b
 12810   00495C  0E04               	movlw	4
 12811   00495E  6F06               	movwf	?___fpclassifyf& (0+255),b
 12812   004960                     l1702:
 12813                           
 12814                           ; BSR set to: 1
 12815   004960  0012               	return		;funcret
 12816   004962                     __end_of___fpclassifyf:
 12817                           	callstack 0
 12818                           
 12819 ;; *************** function ___fltol *****************
 12820 ;; Defined at:
 12821 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\fltol.c"
 12822 ;; Parameters:    Size  Location     Type
 12823 ;;  f1              4   80[BANK1 ] int 
 12824 ;; Auto vars:     Size  Location     Type
 12825 ;;  exp1            1   89[BANK1 ] unsigned char 
 12826 ;;  sign1           1   88[BANK1 ] unsigned char 
 12827 ;; Return value:  Size  Location     Type
 12828 ;;                  4   80[BANK1 ] long 
 12829 ;; Registers used:
 12830 ;;		wreg, status,2, status,0
 12831 ;; Tracked objects:
 12832 ;;		On entry : 0/0
 12833 ;;		On exit  : 0/0
 12834 ;;		Unchanged: 0/0
 12835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12836 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12837 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12838 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12839 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12840 ;;Total ram usage:       10 bytes
 12841 ;; Hardware stack levels used: 1
 12842 ;; Hardware stack levels required when called: 13
 12843 ;; This function calls:
 12844 ;;		Nothing
 12845 ;; This function is called by:
 12846 ;;		_LCD_UpdateMenu
 12847 ;;		_efgtoa
 12848 ;;		_lire_courant
 12849 ;; This function uses a non-reentrant model
 12850 ;;
 12851                           
 12852                           	psect	text29
 12853   00444A                     __ptext29:
 12854                           	callstack 0
 12855   00444A                     ___fltol:
 12856                           	callstack 12
 12857   00444A  0101               	movlb	1	; () banked
 12858   00444C  3552               	rlcf	(___fltol@f1+2)& (0+255),w,b
 12859   00444E  3553               	rlcf	(___fltol@f1+3)& (0+255),w,b
 12860   004450  6F59               	movwf	___fltol@exp1& (0+255),b
 12861   004452  5159               	movf	___fltol@exp1& (0+255),w,b
 12862   004454  A4D8               	btfss	status,2,c
 12863   004456  EF2F  F022         	goto	u7411
 12864   00445A  EF31  F022         	goto	u7410
 12865   00445E                     u7411:
 12866   00445E  EF3B  F022         	goto	l6864
 12867   004462                     u7410:
 12868   004462                     l6860:
 12869                           
 12870                           ; BSR set to: 1
 12871   004462  0E00               	movlw	0
 12872   004464  6F50               	movwf	?___fltol& (0+255),b
 12873   004466  0E00               	movlw	0
 12874   004468  6F51               	movwf	(?___fltol+1)& (0+255),b
 12875   00446A  0E00               	movlw	0
 12876   00446C  6F52               	movwf	(?___fltol+2)& (0+255),b
 12877   00446E  0E00               	movlw	0
 12878   004470  6F53               	movwf	(?___fltol+3)& (0+255),b
 12879   004472  EFA8  F022         	goto	l1178
 12880   004476                     l6864:
 12881                           
 12882                           ; BSR set to: 1
 12883   004476  C150  F154         	movff	___fltol@f1,??___fltol
 12884   00447A  C151  F155         	movff	___fltol@f1+1,??___fltol+1
 12885   00447E  C152  F156         	movff	___fltol@f1+2,??___fltol+2
 12886   004482  C153  F157         	movff	___fltol@f1+3,??___fltol+3
 12887   004486  0E20               	movlw	32
 12888   004488  EF4B  F022         	goto	u7420
 12889   00448C                     u7425:
 12890   00448C  90D8               	bcf	status,0,c
 12891   00448E  3357               	rrcf	(??___fltol+3)& (0+255),f,b
 12892   004490  3356               	rrcf	(??___fltol+2)& (0+255),f,b
 12893   004492  3355               	rrcf	(??___fltol+1)& (0+255),f,b
 12894   004494  3354               	rrcf	??___fltol& (0+255),f,b
 12895   004496                     u7420:
 12896   004496  2EE8               	decfsz	wreg,f,c
 12897   004498  EF46  F022         	goto	u7425
 12898   00449C  5154               	movf	??___fltol& (0+255),w,b
 12899   00449E  6F58               	movwf	___fltol@sign1& (0+255),b
 12900   0044A0                     
 12901                           ; BSR set to: 1
 12902   0044A0  8F52               	bsf	(___fltol@f1+2)& (0+255),7,b
 12903   0044A2                     
 12904                           ; BSR set to: 1
 12905   0044A2  0EFF               	movlw	255
 12906   0044A4  1750               	andwf	___fltol@f1& (0+255),f,b
 12907   0044A6  0EFF               	movlw	255
 12908   0044A8  1751               	andwf	(___fltol@f1+1)& (0+255),f,b
 12909   0044AA  0EFF               	movlw	255
 12910   0044AC  1752               	andwf	(___fltol@f1+2)& (0+255),f,b
 12911   0044AE  0E00               	movlw	0
 12912   0044B0  1753               	andwf	(___fltol@f1+3)& (0+255),f,b
 12913   0044B2                     
 12914                           ; BSR set to: 1
 12915   0044B2  0E96               	movlw	150
 12916   0044B4  5F59               	subwf	___fltol@exp1& (0+255),f,b
 12917   0044B6                     
 12918                           ; BSR set to: 1
 12919   0044B6  BF59               	btfsc	___fltol@exp1& (0+255),7,b
 12920   0044B8  EF62  F022         	goto	u7430
 12921   0044BC  EF60  F022         	goto	u7431
 12922   0044C0                     u7431:
 12923   0044C0  EF78  F022         	goto	l6884
 12924   0044C4                     u7430:
 12925   0044C4                     
 12926                           ; BSR set to: 1
 12927   0044C4  5159               	movf	___fltol@exp1& (0+255),w,b
 12928   0044C6  0A80               	xorlw	128
 12929   0044C8  0F97               	addlw	151
 12930   0044CA  B0D8               	btfsc	status,0,c
 12931   0044CC  EF6A  F022         	goto	u7441
 12932   0044D0  EF6C  F022         	goto	u7440
 12933   0044D4                     u7441:
 12934   0044D4  EF6E  F022         	goto	l6880
 12935   0044D8                     u7440:
 12936   0044D8  EF31  F022         	goto	l6860
 12937   0044DC                     l6880:
 12938                           
 12939                           ; BSR set to: 1
 12940   0044DC  90D8               	bcf	status,0,c
 12941   0044DE  3353               	rrcf	(___fltol@f1+3)& (0+255),f,b
 12942   0044E0  3352               	rrcf	(___fltol@f1+2)& (0+255),f,b
 12943   0044E2  3351               	rrcf	(___fltol@f1+1)& (0+255),f,b
 12944   0044E4  3350               	rrcf	___fltol@f1& (0+255),f,b
 12945   0044E6                     
 12946                           ; BSR set to: 1
 12947   0044E6  3F59               	incfsz	___fltol@exp1& (0+255),f,b
 12948   0044E8  EF6E  F022         	goto	l6880
 12949   0044EC  EF90  F022         	goto	l6894
 12950   0044F0                     l6884:
 12951                           
 12952                           ; BSR set to: 1
 12953   0044F0  0E1F               	movlw	31
 12954   0044F2  6559               	cpfsgt	___fltol@exp1& (0+255),b
 12955   0044F4  EF7E  F022         	goto	u7451
 12956   0044F8  EF80  F022         	goto	u7450
 12957   0044FC                     u7451:
 12958   0044FC  EF88  F022         	goto	l6892
 12959   004500                     u7450:
 12960   004500  EF31  F022         	goto	l6860
 12961   004504                     l6890:
 12962                           
 12963                           ; BSR set to: 1
 12964   004504  90D8               	bcf	status,0,c
 12965   004506  3750               	rlcf	___fltol@f1& (0+255),f,b
 12966   004508  3751               	rlcf	(___fltol@f1+1)& (0+255),f,b
 12967   00450A  3752               	rlcf	(___fltol@f1+2)& (0+255),f,b
 12968   00450C  3753               	rlcf	(___fltol@f1+3)& (0+255),f,b
 12969   00450E  0759               	decf	___fltol@exp1& (0+255),f,b
 12970   004510                     l6892:
 12971                           
 12972                           ; BSR set to: 1
 12973   004510  5159               	movf	___fltol@exp1& (0+255),w,b
 12974   004512  A4D8               	btfss	status,2,c
 12975   004514  EF8E  F022         	goto	u7461
 12976   004518  EF90  F022         	goto	u7460
 12977   00451C                     u7461:
 12978   00451C  EF82  F022         	goto	l6890
 12979   004520                     u7460:
 12980   004520                     l6894:
 12981                           
 12982                           ; BSR set to: 1
 12983   004520  5158               	movf	___fltol@sign1& (0+255),w,b
 12984   004522  B4D8               	btfsc	status,2,c
 12985   004524  EF96  F022         	goto	u7471
 12986   004528  EF98  F022         	goto	u7470
 12987   00452C                     u7471:
 12988   00452C  EFA0  F022         	goto	l6898
 12989   004530                     u7470:
 12990   004530                     
 12991                           ; BSR set to: 1
 12992   004530  1F53               	comf	(___fltol@f1+3)& (0+255),f,b
 12993   004532  1F52               	comf	(___fltol@f1+2)& (0+255),f,b
 12994   004534  1F51               	comf	(___fltol@f1+1)& (0+255),f,b
 12995   004536  6D50               	negf	___fltol@f1& (0+255),b
 12996   004538  0E00               	movlw	0
 12997   00453A  2351               	addwfc	(___fltol@f1+1)& (0+255),f,b
 12998   00453C  2352               	addwfc	(___fltol@f1+2)& (0+255),f,b
 12999   00453E  2353               	addwfc	(___fltol@f1+3)& (0+255),f,b
 13000   004540                     l6898:
 13001                           
 13002                           ; BSR set to: 1
 13003   004540  C150  F150         	movff	___fltol@f1,?___fltol
 13004   004544  C151  F151         	movff	___fltol@f1+1,?___fltol+1
 13005   004548  C152  F152         	movff	___fltol@f1+2,?___fltol+2
 13006   00454C  C153  F153         	movff	___fltol@f1+3,?___fltol+3
 13007   004550                     l1178:
 13008                           
 13009                           ; BSR set to: 1
 13010   004550  0012               	return		;funcret
 13011   004552                     __end_of___fltol:
 13012                           	callstack 0
 13013                           
 13014 ;; *************** function ___flsub *****************
 13015 ;; Defined at:
 13016 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\sprcadd.c"
 13017 ;; Parameters:    Size  Location     Type
 13018 ;;  b               4   45[BANK1 ] long 
 13019 ;;  a               4   49[BANK1 ] long 
 13020 ;; Auto vars:     Size  Location     Type
 13021 ;;		None
 13022 ;; Return value:  Size  Location     Type
 13023 ;;                  4   45[BANK1 ] long 
 13024 ;; Registers used:
 13025 ;;		wreg, status,2, status,0, cstack
 13026 ;; Tracked objects:
 13027 ;;		On entry : 0/0
 13028 ;;		On exit  : 0/0
 13029 ;;		Unchanged: 0/0
 13030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13031 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13032 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13033 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13034 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13035 ;;Total ram usage:        8 bytes
 13036 ;; Hardware stack levels used: 1
 13037 ;; Hardware stack levels required when called: 14
 13038 ;; This function calls:
 13039 ;;		___fladd
 13040 ;; This function is called by:
 13041 ;;		_efgtoa
 13042 ;; This function uses a non-reentrant model
 13043 ;;
 13044                           
 13045                           	psect	text30
 13046   005E8E                     __ptext30:
 13047                           	callstack 0
 13048   005E8E                     ___flsub:
 13049                           	callstack 11
 13050   005E8E  0E00               	movlw	0
 13051   005E90  0101               	movlb	1	; () banked
 13052   005E92  1B31               	xorwf	___flsub@a& (0+255),f,b
 13053   005E94  0E00               	movlw	0
 13054   005E96  1B32               	xorwf	(___flsub@a+1)& (0+255),f,b
 13055   005E98  0E00               	movlw	0
 13056   005E9A  1B33               	xorwf	(___flsub@a+2)& (0+255),f,b
 13057   005E9C  0E80               	movlw	128
 13058   005E9E  1B34               	xorwf	(___flsub@a+3)& (0+255),f,b
 13059   005EA0                     
 13060                           ; BSR set to: 1
 13061   005EA0  C12D  F106         	movff	___flsub@b,___fladd@b
 13062   005EA4  C12E  F107         	movff	___flsub@b+1,___fladd@b+1
 13063   005EA8  C12F  F108         	movff	___flsub@b+2,___fladd@b+2
 13064   005EAC  C130  F109         	movff	___flsub@b+3,___fladd@b+3
 13065   005EB0  C131  F10A         	movff	___flsub@a,___fladd@a
 13066   005EB4  C132  F10B         	movff	___flsub@a+1,___fladd@a+1
 13067   005EB8  C133  F10C         	movff	___flsub@a+2,___fladd@a+2
 13068   005EBC  C134  F10D         	movff	___flsub@a+3,___fladd@a+3
 13069   005EC0  EC45  F00B         	call	___fladd	;wreg free
 13070   005EC4  C106  F12D         	movff	?___fladd,?___flsub
 13071   005EC8  C107  F12E         	movff	?___fladd+1,?___flsub+1
 13072   005ECC  C108  F12F         	movff	?___fladd+2,?___flsub+2
 13073   005ED0  C109  F130         	movff	?___fladd+3,?___flsub+3
 13074   005ED4  0012               	return		;funcret
 13075   005ED6                     __end_of___flsub:
 13076                           	callstack 0
 13077                           
 13078 ;; *************** function ___fladd *****************
 13079 ;; Defined at:
 13080 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\sprcadd.c"
 13081 ;; Parameters:    Size  Location     Type
 13082 ;;  b               4    6[BANK1 ] long 
 13083 ;;  a               4   10[BANK1 ] long 
 13084 ;; Auto vars:     Size  Location     Type
 13085 ;;  grs             1   21[BANK1 ] unsigned char 
 13086 ;;  bexp            1   20[BANK1 ] unsigned char 
 13087 ;;  aexp            1   19[BANK1 ] unsigned char 
 13088 ;;  signs           1   18[BANK1 ] unsigned char 
 13089 ;; Return value:  Size  Location     Type
 13090 ;;                  4    6[BANK1 ] unsigned char 
 13091 ;; Registers used:
 13092 ;;		wreg, status,2, status,0
 13093 ;; Tracked objects:
 13094 ;;		On entry : 0/0
 13095 ;;		On exit  : 0/0
 13096 ;;		Unchanged: 0/0
 13097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13098 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13099 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13100 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13101 ;;      Totals:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13102 ;;Total ram usage:       16 bytes
 13103 ;; Hardware stack levels used: 1
 13104 ;; Hardware stack levels required when called: 13
 13105 ;; This function calls:
 13106 ;;		Nothing
 13107 ;; This function is called by:
 13108 ;;		___flsub
 13109 ;;		_efgtoa
 13110 ;; This function uses a non-reentrant model
 13111 ;;
 13112                           
 13113                           	psect	text31
 13114   00168A                     __ptext31:
 13115                           	callstack 0
 13116   00168A                     ___fladd:
 13117                           	callstack 11
 13118   00168A  0101               	movlb	1	; () banked
 13119   00168C  5109               	movf	(___fladd@b+3)& (0+255),w,b
 13120   00168E  0B80               	andlw	128
 13121   001690  6F12               	movwf	___fladd@signs& (0+255),b
 13122   001692  5109               	movf	(___fladd@b+3)& (0+255),w,b
 13123   001694  2509               	addwf	(___fladd@b+3)& (0+255),w,b
 13124   001696  6F14               	movwf	___fladd@bexp& (0+255),b
 13125   001698                     
 13126                           ; BSR set to: 1
 13127   001698  AF08               	btfss	(___fladd@b+2)& (0+255),7,b
 13128   00169A  EF51  F00B         	goto	u6321
 13129   00169E  EF53  F00B         	goto	u6320
 13130   0016A2                     u6321:
 13131   0016A2  EF54  F00B         	goto	l6180
 13132   0016A6                     u6320:
 13133   0016A6                     
 13134                           ; BSR set to: 1
 13135   0016A6  8114               	bsf	___fladd@bexp& (0+255),0,b
 13136   0016A8                     l6180:
 13137                           
 13138                           ; BSR set to: 1
 13139   0016A8  5114               	movf	___fladd@bexp& (0+255),w,b
 13140   0016AA  B4D8               	btfsc	status,2,c
 13141   0016AC  EF5A  F00B         	goto	u6331
 13142   0016B0  EF5C  F00B         	goto	u6330
 13143   0016B4                     u6331:
 13144   0016B4  EF70  F00B         	goto	l6190
 13145   0016B8                     u6330:
 13146   0016B8                     
 13147                           ; BSR set to: 1
 13148   0016B8  2914               	incf	___fladd@bexp& (0+255),w,b
 13149   0016BA  A4D8               	btfss	status,2,c
 13150   0016BC  EF62  F00B         	goto	u6341
 13151   0016C0  EF64  F00B         	goto	u6340
 13152   0016C4                     u6341:
 13153   0016C4  EF6C  F00B         	goto	l6186
 13154   0016C8                     u6340:
 13155   0016C8                     
 13156                           ; BSR set to: 1
 13157   0016C8  0E00               	movlw	0
 13158   0016CA  6F06               	movwf	___fladd@b& (0+255),b
 13159   0016CC  0E00               	movlw	0
 13160   0016CE  6F07               	movwf	(___fladd@b+1)& (0+255),b
 13161   0016D0  0E00               	movlw	0
 13162   0016D2  6F08               	movwf	(___fladd@b+2)& (0+255),b
 13163   0016D4  0E00               	movlw	0
 13164   0016D6  6F09               	movwf	(___fladd@b+3)& (0+255),b
 13165   0016D8                     l6186:
 13166                           
 13167                           ; BSR set to: 1
 13168   0016D8  8F08               	bsf	(___fladd@b+2)& (0+255),7,b
 13169   0016DA                     
 13170                           ; BSR set to: 1
 13171   0016DA  6B09               	clrf	(___fladd@b+3)& (0+255),b
 13172   0016DC  EF78  F00B         	goto	l6192
 13173   0016E0                     l6190:
 13174                           
 13175                           ; BSR set to: 1
 13176   0016E0  0E00               	movlw	0
 13177   0016E2  6F06               	movwf	___fladd@b& (0+255),b
 13178   0016E4  0E00               	movlw	0
 13179   0016E6  6F07               	movwf	(___fladd@b+1)& (0+255),b
 13180   0016E8  0E00               	movlw	0
 13181   0016EA  6F08               	movwf	(___fladd@b+2)& (0+255),b
 13182   0016EC  0E00               	movlw	0
 13183   0016EE  6F09               	movwf	(___fladd@b+3)& (0+255),b
 13184   0016F0                     l6192:
 13185                           
 13186                           ; BSR set to: 1
 13187   0016F0  510D               	movf	(___fladd@a+3)& (0+255),w,b
 13188   0016F2  0B80               	andlw	128
 13189   0016F4  6F13               	movwf	___fladd@aexp& (0+255),b
 13190   0016F6                     
 13191                           ; BSR set to: 1
 13192   0016F6  5112               	movf	___fladd@signs& (0+255),w,b
 13193   0016F8  1913               	xorwf	___fladd@aexp& (0+255),w,b
 13194   0016FA  B4D8               	btfsc	status,2,c
 13195   0016FC  EF82  F00B         	goto	u6351
 13196   001700  EF84  F00B         	goto	u6350
 13197   001704                     u6351:
 13198   001704  EF85  F00B         	goto	l6198
 13199   001708                     u6350:
 13200   001708                     
 13201                           ; BSR set to: 1
 13202   001708  8D12               	bsf	___fladd@signs& (0+255),6,b
 13203   00170A                     l6198:
 13204                           
 13205                           ; BSR set to: 1
 13206   00170A  510D               	movf	(___fladd@a+3)& (0+255),w,b
 13207   00170C  250D               	addwf	(___fladd@a+3)& (0+255),w,b
 13208   00170E  6F13               	movwf	___fladd@aexp& (0+255),b
 13209   001710                     
 13210                           ; BSR set to: 1
 13211   001710  AF0C               	btfss	(___fladd@a+2)& (0+255),7,b
 13212   001712  EF8D  F00B         	goto	u6361
 13213   001716  EF8F  F00B         	goto	u6360
 13214   00171A                     u6361:
 13215   00171A  EF90  F00B         	goto	l6204
 13216   00171E                     u6360:
 13217   00171E                     
 13218                           ; BSR set to: 1
 13219   00171E  8113               	bsf	___fladd@aexp& (0+255),0,b
 13220   001720                     l6204:
 13221                           
 13222                           ; BSR set to: 1
 13223   001720  5113               	movf	___fladd@aexp& (0+255),w,b
 13224   001722  B4D8               	btfsc	status,2,c
 13225   001724  EF96  F00B         	goto	u6371
 13226   001728  EF98  F00B         	goto	u6370
 13227   00172C                     u6371:
 13228   00172C  EFAC  F00B         	goto	l6214
 13229   001730                     u6370:
 13230   001730                     
 13231                           ; BSR set to: 1
 13232   001730  2913               	incf	___fladd@aexp& (0+255),w,b
 13233   001732  A4D8               	btfss	status,2,c
 13234   001734  EF9E  F00B         	goto	u6381
 13235   001738  EFA0  F00B         	goto	u6380
 13236   00173C                     u6381:
 13237   00173C  EFA8  F00B         	goto	l6210
 13238   001740                     u6380:
 13239   001740                     
 13240                           ; BSR set to: 1
 13241   001740  0E00               	movlw	0
 13242   001742  6F0A               	movwf	___fladd@a& (0+255),b
 13243   001744  0E00               	movlw	0
 13244   001746  6F0B               	movwf	(___fladd@a+1)& (0+255),b
 13245   001748  0E00               	movlw	0
 13246   00174A  6F0C               	movwf	(___fladd@a+2)& (0+255),b
 13247   00174C  0E00               	movlw	0
 13248   00174E  6F0D               	movwf	(___fladd@a+3)& (0+255),b
 13249   001750                     l6210:
 13250                           
 13251                           ; BSR set to: 1
 13252   001750  8F0C               	bsf	(___fladd@a+2)& (0+255),7,b
 13253   001752                     
 13254                           ; BSR set to: 1
 13255   001752  6B0D               	clrf	(___fladd@a+3)& (0+255),b
 13256   001754  EFB4  F00B         	goto	l6216
 13257   001758                     l6214:
 13258                           
 13259                           ; BSR set to: 1
 13260   001758  0E00               	movlw	0
 13261   00175A  6F0A               	movwf	___fladd@a& (0+255),b
 13262   00175C  0E00               	movlw	0
 13263   00175E  6F0B               	movwf	(___fladd@a+1)& (0+255),b
 13264   001760  0E00               	movlw	0
 13265   001762  6F0C               	movwf	(___fladd@a+2)& (0+255),b
 13266   001764  0E00               	movlw	0
 13267   001766  6F0D               	movwf	(___fladd@a+3)& (0+255),b
 13268   001768                     l6216:
 13269                           
 13270                           ; BSR set to: 1
 13271   001768  5114               	movf	___fladd@bexp& (0+255),w,b
 13272   00176A  5D13               	subwf	___fladd@aexp& (0+255),w,b
 13273   00176C  B0D8               	btfsc	status,0,c
 13274   00176E  EFBB  F00B         	goto	u6391
 13275   001772  EFBD  F00B         	goto	u6390
 13276   001776                     u6391:
 13277   001776  EFE4  F00B         	goto	l6252
 13278   00177A                     u6390:
 13279   00177A                     
 13280                           ; BSR set to: 1
 13281   00177A  AD12               	btfss	___fladd@signs& (0+255),6,b
 13282   00177C  EFC2  F00B         	goto	u6401
 13283   001780  EFC4  F00B         	goto	u6400
 13284   001784                     u6401:
 13285   001784  EFC6  F00B         	goto	l6222
 13286   001788                     u6400:
 13287   001788                     
 13288                           ; BSR set to: 1
 13289   001788  0E80               	movlw	128
 13290   00178A  1B12               	xorwf	___fladd@signs& (0+255),f,b
 13291   00178C                     l6222:
 13292                           
 13293                           ; BSR set to: 1
 13294   00178C  C114  F115         	movff	___fladd@bexp,___fladd@grs
 13295   001790                     
 13296                           ; BSR set to: 1
 13297   001790  C113  F114         	movff	___fladd@aexp,___fladd@bexp
 13298   001794                     
 13299                           ; BSR set to: 1
 13300   001794  C115  F113         	movff	___fladd@grs,___fladd@aexp
 13301   001798                     
 13302                           ; BSR set to: 1
 13303   001798  C106  F115         	movff	___fladd@b,___fladd@grs
 13304   00179C                     
 13305                           ; BSR set to: 1
 13306   00179C  C10A  F106         	movff	___fladd@a,___fladd@b
 13307   0017A0                     
 13308                           ; BSR set to: 1
 13309   0017A0  C115  F10A         	movff	___fladd@grs,___fladd@a
 13310   0017A4                     
 13311                           ; BSR set to: 1
 13312   0017A4  C107  F115         	movff	___fladd@b+1,___fladd@grs
 13313   0017A8                     
 13314                           ; BSR set to: 1
 13315   0017A8  C10B  F107         	movff	___fladd@a+1,___fladd@b+1
 13316   0017AC                     
 13317                           ; BSR set to: 1
 13318   0017AC  C115  F10B         	movff	___fladd@grs,___fladd@a+1
 13319   0017B0                     
 13320                           ; BSR set to: 1
 13321   0017B0  C108  F115         	movff	___fladd@b+2,___fladd@grs
 13322   0017B4                     
 13323                           ; BSR set to: 1
 13324   0017B4  C10C  F108         	movff	___fladd@a+2,___fladd@b+2
 13325   0017B8                     
 13326                           ; BSR set to: 1
 13327   0017B8  C115  F10C         	movff	___fladd@grs,___fladd@a+2
 13328   0017BC                     
 13329                           ; BSR set to: 1
 13330   0017BC  C109  F115         	movff	___fladd@b+3,___fladd@grs
 13331   0017C0                     
 13332                           ; BSR set to: 1
 13333   0017C0  C10D  F109         	movff	___fladd@a+3,___fladd@b+3
 13334   0017C4                     
 13335                           ; BSR set to: 1
 13336   0017C4  C115  F10D         	movff	___fladd@grs,___fladd@a+3
 13337   0017C8                     l6252:
 13338                           
 13339                           ; BSR set to: 1
 13340   0017C8  6B15               	clrf	___fladd@grs& (0+255),b
 13341   0017CA  5114               	movf	___fladd@bexp& (0+255),w,b
 13342   0017CC  C113  F10E         	movff	___fladd@aexp,??___fladd
 13343   0017D0  6B0F               	clrf	(??___fladd+1)& (0+255),b
 13344   0017D2  5F0E               	subwf	??___fladd& (0+255),f,b
 13345   0017D4  0E00               	movlw	0
 13346   0017D6  5B0F               	subwfb	(??___fladd+1)& (0+255),f,b
 13347   0017D8  BF0F               	btfsc	(??___fladd+1)& (0+255),7,b
 13348   0017DA  EFF8  F00B         	goto	u6411
 13349   0017DE  510F               	movf	(??___fladd+1)& (0+255),w,b
 13350   0017E0  E109               	bnz	u6410
 13351   0017E2  0E1A               	movlw	26
 13352   0017E4  5D0E               	subwf	??___fladd& (0+255),w,b
 13353   0017E6  A0D8               	btfss	status,0,c
 13354   0017E8  EFF8  F00B         	goto	u6411
 13355   0017EC  EFFA  F00B         	goto	u6410
 13356   0017F0                     u6411:
 13357   0017F0  EF31  F00C         	goto	l1410
 13358   0017F4                     u6410:
 13359   0017F4                     
 13360                           ; BSR set to: 1
 13361   0017F4  5106               	movf	___fladd@b& (0+255),w,b
 13362   0017F6  1107               	iorwf	(___fladd@b+1)& (0+255),w,b
 13363   0017F8  1108               	iorwf	(___fladd@b+2)& (0+255),w,b
 13364   0017FA  1109               	iorwf	(___fladd@b+3)& (0+255),w,b
 13365   0017FC  A4D8               	btfss	status,2,c
 13366   0017FE  EF03  F00C         	goto	u6421
 13367   001802  EF06  F00C         	goto	u6420
 13368   001806                     u6421:
 13369   001806  0E01               	movlw	1
 13370   001808  EF07  F00C         	goto	u6430
 13371   00180C                     u6420:
 13372   00180C  0E00               	movlw	0
 13373   00180E                     u6430:
 13374   00180E  6F15               	movwf	___fladd@grs& (0+255),b
 13375   001810                     
 13376                           ; BSR set to: 1
 13377   001810  0E00               	movlw	0
 13378   001812  6F06               	movwf	___fladd@b& (0+255),b
 13379   001814  0E00               	movlw	0
 13380   001816  6F07               	movwf	(___fladd@b+1)& (0+255),b
 13381   001818  0E00               	movlw	0
 13382   00181A  6F08               	movwf	(___fladd@b+2)& (0+255),b
 13383   00181C  0E00               	movlw	0
 13384   00181E  6F09               	movwf	(___fladd@b+3)& (0+255),b
 13385   001820                     
 13386                           ; BSR set to: 1
 13387   001820  C113  F114         	movff	___fladd@aexp,___fladd@bexp
 13388   001824  EF3A  F00C         	goto	l1409
 13389   001828                     l1411:
 13390                           
 13391                           ; BSR set to: 1
 13392   001828  A115               	btfss	___fladd@grs& (0+255),0,b
 13393   00182A  EF19  F00C         	goto	u6441
 13394   00182E  EF1B  F00C         	goto	u6440
 13395   001832                     u6441:
 13396   001832  EF21  F00C         	goto	l6262
 13397   001836                     u6440:
 13398   001836                     
 13399                           ; BSR set to: 1
 13400   001836  90D8               	bcf	status,0,c
 13401   001838  3115               	rrcf	___fladd@grs& (0+255),w,b
 13402   00183A  0901               	iorlw	1
 13403   00183C  6F15               	movwf	___fladd@grs& (0+255),b
 13404   00183E  EF23  F00C         	goto	l6264
 13405   001842                     l6262:
 13406                           
 13407                           ; BSR set to: 1
 13408   001842  90D8               	bcf	status,0,c
 13409   001844  3315               	rrcf	___fladd@grs& (0+255),f,b
 13410   001846                     l6264:
 13411                           
 13412                           ; BSR set to: 1
 13413   001846  A106               	btfss	___fladd@b& (0+255),0,b
 13414   001848  EF28  F00C         	goto	u6451
 13415   00184C  EF2A  F00C         	goto	u6450
 13416   001850                     u6451:
 13417   001850  EF2B  F00C         	goto	l6268
 13418   001854                     u6450:
 13419   001854                     
 13420                           ; BSR set to: 1
 13421   001854  8F15               	bsf	___fladd@grs& (0+255),7,b
 13422   001856                     l6268:
 13423                           
 13424                           ; BSR set to: 1
 13425   001856  3509               	rlcf	(___fladd@b+3)& (0+255),w,b
 13426   001858  3309               	rrcf	(___fladd@b+3)& (0+255),f,b
 13427   00185A  3308               	rrcf	(___fladd@b+2)& (0+255),f,b
 13428   00185C  3307               	rrcf	(___fladd@b+1)& (0+255),f,b
 13429   00185E  3306               	rrcf	___fladd@b& (0+255),f,b
 13430   001860                     
 13431                           ; BSR set to: 1
 13432   001860  2B14               	incf	___fladd@bexp& (0+255),f,b
 13433   001862                     l1410:
 13434                           
 13435                           ; BSR set to: 1
 13436   001862  5113               	movf	___fladd@aexp& (0+255),w,b
 13437   001864  5D14               	subwf	___fladd@bexp& (0+255),w,b
 13438   001866  A0D8               	btfss	status,0,c
 13439   001868  EF38  F00C         	goto	u6461
 13440   00186C  EF3A  F00C         	goto	u6460
 13441   001870                     u6461:
 13442   001870  EF14  F00C         	goto	l1411
 13443   001874                     u6460:
 13444   001874                     l1409:
 13445                           
 13446                           ; BSR set to: 1
 13447   001874  BD12               	btfsc	___fladd@signs& (0+255),6,b
 13448   001876  EF3F  F00C         	goto	u6471
 13449   00187A  EF41  F00C         	goto	u6470
 13450   00187E                     u6471:
 13451   00187E  EF81  F00C         	goto	l6296
 13452   001882                     u6470:
 13453   001882                     
 13454                           ; BSR set to: 1
 13455   001882  5114               	movf	___fladd@bexp& (0+255),w,b
 13456   001884  A4D8               	btfss	status,2,c
 13457   001886  EF47  F00C         	goto	u6481
 13458   00188A  EF49  F00C         	goto	u6480
 13459   00188E                     u6481:
 13460   00188E  EF53  F00C         	goto	l6278
 13461   001892                     u6480:
 13462   001892                     
 13463                           ; BSR set to: 1
 13464   001892  0E00               	movlw	0
 13465   001894  6F06               	movwf	?___fladd& (0+255),b
 13466   001896  0E00               	movlw	0
 13467   001898  6F07               	movwf	(?___fladd+1)& (0+255),b
 13468   00189A  0E00               	movlw	0
 13469   00189C  6F08               	movwf	(?___fladd+2)& (0+255),b
 13470   00189E  0E00               	movlw	0
 13471   0018A0  6F09               	movwf	(?___fladd+3)& (0+255),b
 13472   0018A2  EFA0  F00D         	goto	l1418
 13473   0018A6                     l6278:
 13474                           
 13475                           ; BSR set to: 1
 13476   0018A6  510A               	movf	___fladd@a& (0+255),w,b
 13477   0018A8  2706               	addwf	___fladd@b& (0+255),f,b
 13478   0018AA  510B               	movf	(___fladd@a+1)& (0+255),w,b
 13479   0018AC  2307               	addwfc	(___fladd@b+1)& (0+255),f,b
 13480   0018AE  510C               	movf	(___fladd@a+2)& (0+255),w,b
 13481   0018B0  2308               	addwfc	(___fladd@b+2)& (0+255),f,b
 13482   0018B2  510D               	movf	(___fladd@a+3)& (0+255),w,b
 13483   0018B4  2309               	addwfc	(___fladd@b+3)& (0+255),f,b
 13484   0018B6                     
 13485                           ; BSR set to: 1
 13486   0018B6  A109               	btfss	(___fladd@b+3)& (0+255),0,b
 13487   0018B8  EF60  F00C         	goto	u6491
 13488   0018BC  EF62  F00C         	goto	u6490
 13489   0018C0                     u6491:
 13490   0018C0  EF0E  F00D         	goto	l1423
 13491   0018C4                     u6490:
 13492   0018C4                     
 13493                           ; BSR set to: 1
 13494   0018C4  A115               	btfss	___fladd@grs& (0+255),0,b
 13495   0018C6  EF67  F00C         	goto	u6501
 13496   0018CA  EF69  F00C         	goto	u6500
 13497   0018CE                     u6501:
 13498   0018CE  EF6F  F00C         	goto	l6286
 13499   0018D2                     u6500:
 13500   0018D2                     
 13501                           ; BSR set to: 1
 13502   0018D2  90D8               	bcf	status,0,c
 13503   0018D4  3115               	rrcf	___fladd@grs& (0+255),w,b
 13504   0018D6  0901               	iorlw	1
 13505   0018D8  6F15               	movwf	___fladd@grs& (0+255),b
 13506   0018DA  EF71  F00C         	goto	l6288
 13507   0018DE                     l6286:
 13508                           
 13509                           ; BSR set to: 1
 13510   0018DE  90D8               	bcf	status,0,c
 13511   0018E0  3315               	rrcf	___fladd@grs& (0+255),f,b
 13512   0018E2                     l6288:
 13513                           
 13514                           ; BSR set to: 1
 13515   0018E2  A106               	btfss	___fladd@b& (0+255),0,b
 13516   0018E4  EF76  F00C         	goto	u6511
 13517   0018E8  EF78  F00C         	goto	u6510
 13518   0018EC                     u6511:
 13519   0018EC  EF79  F00C         	goto	l6292
 13520   0018F0                     u6510:
 13521   0018F0                     
 13522                           ; BSR set to: 1
 13523   0018F0  8F15               	bsf	___fladd@grs& (0+255),7,b
 13524   0018F2                     l6292:
 13525                           
 13526                           ; BSR set to: 1
 13527   0018F2  3509               	rlcf	(___fladd@b+3)& (0+255),w,b
 13528   0018F4  3309               	rrcf	(___fladd@b+3)& (0+255),f,b
 13529   0018F6  3308               	rrcf	(___fladd@b+2)& (0+255),f,b
 13530   0018F8  3307               	rrcf	(___fladd@b+1)& (0+255),f,b
 13531   0018FA  3306               	rrcf	___fladd@b& (0+255),f,b
 13532   0018FC                     
 13533                           ; BSR set to: 1
 13534   0018FC  2B14               	incf	___fladd@bexp& (0+255),f,b
 13535   0018FE  EF0E  F00D         	goto	l1423
 13536   001902                     l6296:
 13537                           
 13538                           ; BSR set to: 1
 13539   001902  510A               	movf	___fladd@a& (0+255),w,b
 13540   001904  5D06               	subwf	___fladd@b& (0+255),w,b
 13541   001906  510B               	movf	(___fladd@a+1)& (0+255),w,b
 13542   001908  5907               	subwfb	(___fladd@b+1)& (0+255),w,b
 13543   00190A  510C               	movf	(___fladd@a+2)& (0+255),w,b
 13544   00190C  5908               	subwfb	(___fladd@b+2)& (0+255),w,b
 13545   00190E  5109               	movf	(___fladd@b+3)& (0+255),w,b
 13546   001910  0A80               	xorlw	128
 13547   001912  6F0E               	movwf	??___fladd& (0+255),b
 13548   001914  510D               	movf	(___fladd@a+3)& (0+255),w,b
 13549   001916  0A80               	xorlw	128
 13550   001918  590E               	subwfb	??___fladd& (0+255),w,b
 13551   00191A  B0D8               	btfsc	status,0,c
 13552   00191C  EF92  F00C         	goto	u6521
 13553   001920  EF94  F00C         	goto	u6520
 13554   001924                     u6521:
 13555   001924  EFBF  F00C         	goto	l6306
 13556   001928                     u6520:
 13557   001928                     
 13558                           ; BSR set to: 1
 13559   001928  5106               	movf	___fladd@b& (0+255),w,b
 13560   00192A  5D0A               	subwf	___fladd@a& (0+255),w,b
 13561   00192C  6F0E               	movwf	??___fladd& (0+255),b
 13562   00192E  5107               	movf	(___fladd@b+1)& (0+255),w,b
 13563   001930  590B               	subwfb	(___fladd@a+1)& (0+255),w,b
 13564   001932  6F0F               	movwf	(??___fladd+1)& (0+255),b
 13565   001934  5108               	movf	(___fladd@b+2)& (0+255),w,b
 13566   001936  590C               	subwfb	(___fladd@a+2)& (0+255),w,b
 13567   001938  6F10               	movwf	(??___fladd+2)& (0+255),b
 13568   00193A  5109               	movf	(___fladd@b+3)& (0+255),w,b
 13569   00193C  590D               	subwfb	(___fladd@a+3)& (0+255),w,b
 13570   00193E  6F11               	movwf	(??___fladd+3)& (0+255),b
 13571   001940  0EFF               	movlw	255
 13572   001942  250E               	addwf	??___fladd& (0+255),w,b
 13573   001944  6F06               	movwf	___fladd@b& (0+255),b
 13574   001946  0EFF               	movlw	255
 13575   001948  210F               	addwfc	(??___fladd+1)& (0+255),w,b
 13576   00194A  6F07               	movwf	(___fladd@b+1)& (0+255),b
 13577   00194C  0EFF               	movlw	255
 13578   00194E  2110               	addwfc	(??___fladd+2)& (0+255),w,b
 13579   001950  6F08               	movwf	(___fladd@b+2)& (0+255),b
 13580   001952  0EFF               	movlw	255
 13581   001954  2111               	addwfc	(??___fladd+3)& (0+255),w,b
 13582   001956  6F09               	movwf	(___fladd@b+3)& (0+255),b
 13583   001958  0E80               	movlw	128
 13584   00195A  1B12               	xorwf	___fladd@signs& (0+255),f,b
 13585   00195C                     
 13586                           ; BSR set to: 1
 13587   00195C  6D15               	negf	___fladd@grs& (0+255),b
 13588   00195E                     
 13589                           ; BSR set to: 1
 13590   00195E  5115               	movf	___fladd@grs& (0+255),w,b
 13591   001960  A4D8               	btfss	status,2,c
 13592   001962  EFB5  F00C         	goto	u6531
 13593   001966  EFB7  F00C         	goto	u6530
 13594   00196A                     u6531:
 13595   00196A  EFC7  F00C         	goto	l1426
 13596   00196E                     u6530:
 13597   00196E                     
 13598                           ; BSR set to: 1
 13599   00196E  0E01               	movlw	1
 13600   001970  2706               	addwf	___fladd@b& (0+255),f,b
 13601   001972  0E00               	movlw	0
 13602   001974  2307               	addwfc	(___fladd@b+1)& (0+255),f,b
 13603   001976  2308               	addwfc	(___fladd@b+2)& (0+255),f,b
 13604   001978  2309               	addwfc	(___fladd@b+3)& (0+255),f,b
 13605   00197A  EFC7  F00C         	goto	l1426
 13606   00197E                     l6306:
 13607                           
 13608                           ; BSR set to: 1
 13609   00197E  510A               	movf	___fladd@a& (0+255),w,b
 13610   001980  5F06               	subwf	___fladd@b& (0+255),f,b
 13611   001982  510B               	movf	(___fladd@a+1)& (0+255),w,b
 13612   001984  5B07               	subwfb	(___fladd@b+1)& (0+255),f,b
 13613   001986  510C               	movf	(___fladd@a+2)& (0+255),w,b
 13614   001988  5B08               	subwfb	(___fladd@b+2)& (0+255),f,b
 13615   00198A  510D               	movf	(___fladd@a+3)& (0+255),w,b
 13616   00198C  5B09               	subwfb	(___fladd@b+3)& (0+255),f,b
 13617   00198E                     l1426:
 13618                           
 13619                           ; BSR set to: 1
 13620   00198E  5106               	movf	___fladd@b& (0+255),w,b
 13621   001990  1107               	iorwf	(___fladd@b+1)& (0+255),w,b
 13622   001992  1108               	iorwf	(___fladd@b+2)& (0+255),w,b
 13623   001994  1109               	iorwf	(___fladd@b+3)& (0+255),w,b
 13624   001996  A4D8               	btfss	status,2,c
 13625   001998  EFD0  F00C         	goto	u6541
 13626   00199C  EFD2  F00C         	goto	u6540
 13627   0019A0                     u6541:
 13628   0019A0  EF07  F00D         	goto	l6330
 13629   0019A4                     u6540:
 13630   0019A4                     
 13631                           ; BSR set to: 1
 13632   0019A4  5115               	movf	___fladd@grs& (0+255),w,b
 13633   0019A6  A4D8               	btfss	status,2,c
 13634   0019A8  EFD8  F00C         	goto	u6551
 13635   0019AC  EFDA  F00C         	goto	u6550
 13636   0019B0                     u6551:
 13637   0019B0  EF07  F00D         	goto	l6330
 13638   0019B4                     u6550:
 13639   0019B4                     
 13640                           ; BSR set to: 1
 13641   0019B4  0E00               	movlw	0
 13642   0019B6  6F06               	movwf	?___fladd& (0+255),b
 13643   0019B8  0E00               	movlw	0
 13644   0019BA  6F07               	movwf	(?___fladd+1)& (0+255),b
 13645   0019BC  0E00               	movlw	0
 13646   0019BE  6F08               	movwf	(?___fladd+2)& (0+255),b
 13647   0019C0  0E00               	movlw	0
 13648   0019C2  6F09               	movwf	(?___fladd+3)& (0+255),b
 13649   0019C4  EFA0  F00D         	goto	l1418
 13650   0019C8                     l6314:
 13651                           
 13652                           ; BSR set to: 1
 13653   0019C8  90D8               	bcf	status,0,c
 13654   0019CA  3706               	rlcf	___fladd@b& (0+255),f,b
 13655   0019CC  3707               	rlcf	(___fladd@b+1)& (0+255),f,b
 13656   0019CE  3708               	rlcf	(___fladd@b+2)& (0+255),f,b
 13657   0019D0  3709               	rlcf	(___fladd@b+3)& (0+255),f,b
 13658   0019D2                     
 13659                           ; BSR set to: 1
 13660   0019D2  AF15               	btfss	___fladd@grs& (0+255),7,b
 13661   0019D4  EFEE  F00C         	goto	u6561
 13662   0019D8  EFF0  F00C         	goto	u6560
 13663   0019DC                     u6561:
 13664   0019DC  EFF1  F00C         	goto	l6320
 13665   0019E0                     u6560:
 13666   0019E0                     
 13667                           ; BSR set to: 1
 13668   0019E0  8106               	bsf	___fladd@b& (0+255),0,b
 13669   0019E2                     l6320:
 13670                           
 13671                           ; BSR set to: 1
 13672   0019E2  A115               	btfss	___fladd@grs& (0+255),0,b
 13673   0019E4  EFF6  F00C         	goto	u6571
 13674   0019E8  EFF8  F00C         	goto	u6570
 13675   0019EC                     u6571:
 13676   0019EC  EFFC  F00C         	goto	l6324
 13677   0019F0                     u6570:
 13678   0019F0                     
 13679                           ; BSR set to: 1
 13680   0019F0  80D8               	bsf	status,0,c
 13681   0019F2  3715               	rlcf	___fladd@grs& (0+255),f,b
 13682   0019F4  EFFE  F00C         	goto	l6326
 13683   0019F8                     l6324:
 13684                           
 13685                           ; BSR set to: 1
 13686   0019F8  90D8               	bcf	status,0,c
 13687   0019FA  3715               	rlcf	___fladd@grs& (0+255),f,b
 13688   0019FC                     l6326:
 13689                           
 13690                           ; BSR set to: 1
 13691   0019FC  5114               	movf	___fladd@bexp& (0+255),w,b
 13692   0019FE  B4D8               	btfsc	status,2,c
 13693   001A00  EF04  F00D         	goto	u6581
 13694   001A04  EF06  F00D         	goto	u6580
 13695   001A08                     u6581:
 13696   001A08  EF07  F00D         	goto	l6330
 13697   001A0C                     u6580:
 13698   001A0C                     
 13699                           ; BSR set to: 1
 13700   001A0C  0714               	decf	___fladd@bexp& (0+255),f,b
 13701   001A0E                     l6330:
 13702                           
 13703                           ; BSR set to: 1
 13704   001A0E  AF08               	btfss	(___fladd@b+2)& (0+255),7,b
 13705   001A10  EF0C  F00D         	goto	u6591
 13706   001A14  EF0E  F00D         	goto	u6590
 13707   001A18                     u6591:
 13708   001A18  EFE4  F00C         	goto	l6314
 13709   001A1C                     u6590:
 13710   001A1C                     l1423:
 13711                           
 13712                           ; BSR set to: 1
 13713   001A1C  6B13               	clrf	___fladd@aexp& (0+255),b
 13714   001A1E  AF15               	btfss	___fladd@grs& (0+255),7,b
 13715   001A20  EF14  F00D         	goto	u6601
 13716   001A24  EF16  F00D         	goto	u6600
 13717   001A28                     u6601:
 13718   001A28  EF2E  F00D         	goto	l1435
 13719   001A2C                     u6600:
 13720   001A2C                     
 13721                           ; BSR set to: 1
 13722   001A2C  C115  F10E         	movff	___fladd@grs,??___fladd
 13723   001A30  0E7F               	movlw	127
 13724   001A32  170E               	andwf	??___fladd& (0+255),f,b
 13725   001A34  B4D8               	btfsc	status,2,c
 13726   001A36  EF1F  F00D         	goto	u6611
 13727   001A3A  EF21  F00D         	goto	u6610
 13728   001A3E                     u6611:
 13729   001A3E  EF25  F00D         	goto	l1436
 13730   001A42                     u6610:
 13731   001A42                     l6334:
 13732                           
 13733                           ; BSR set to: 1
 13734   001A42  0E01               	movlw	1
 13735   001A44  6F13               	movwf	___fladd@aexp& (0+255),b
 13736   001A46  EF2E  F00D         	goto	l1435
 13737   001A4A                     l1436:
 13738                           
 13739                           ; BSR set to: 1
 13740   001A4A  A106               	btfss	___fladd@b& (0+255),0,b
 13741   001A4C  EF2A  F00D         	goto	u6621
 13742   001A50  EF2C  F00D         	goto	u6620
 13743   001A54                     u6621:
 13744   001A54  EF2E  F00D         	goto	l1435
 13745   001A58                     u6620:
 13746   001A58  EF21  F00D         	goto	l6334
 13747   001A5C                     l1435:
 13748                           
 13749                           ; BSR set to: 1
 13750   001A5C  5113               	movf	___fladd@aexp& (0+255),w,b
 13751   001A5E  B4D8               	btfsc	status,2,c
 13752   001A60  EF34  F00D         	goto	u6631
 13753   001A64  EF36  F00D         	goto	u6630
 13754   001A68                     u6631:
 13755   001A68  EF61  F00D         	goto	l6346
 13756   001A6C                     u6630:
 13757   001A6C                     
 13758                           ; BSR set to: 1
 13759   001A6C  0E01               	movlw	1
 13760   001A6E  2706               	addwf	___fladd@b& (0+255),f,b
 13761   001A70  0E00               	movlw	0
 13762   001A72  2307               	addwfc	(___fladd@b+1)& (0+255),f,b
 13763   001A74  2308               	addwfc	(___fladd@b+2)& (0+255),f,b
 13764   001A76  2309               	addwfc	(___fladd@b+3)& (0+255),f,b
 13765   001A78                     
 13766                           ; BSR set to: 1
 13767   001A78  A109               	btfss	(___fladd@b+3)& (0+255),0,b
 13768   001A7A  EF41  F00D         	goto	u6641
 13769   001A7E  EF43  F00D         	goto	u6640
 13770   001A82                     u6641:
 13771   001A82  EF61  F00D         	goto	l6346
 13772   001A86                     u6640:
 13773   001A86                     
 13774                           ; BSR set to: 1
 13775   001A86  C106  F10E         	movff	___fladd@b,??___fladd
 13776   001A8A  C107  F10F         	movff	___fladd@b+1,??___fladd+1
 13777   001A8E  C108  F110         	movff	___fladd@b+2,??___fladd+2
 13778   001A92  C109  F111         	movff	___fladd@b+3,??___fladd+3
 13779   001A96  3511               	rlcf	(??___fladd+3)& (0+255),w,b
 13780   001A98  3311               	rrcf	(??___fladd+3)& (0+255),f,b
 13781   001A9A  3310               	rrcf	(??___fladd+2)& (0+255),f,b
 13782   001A9C  330F               	rrcf	(??___fladd+1)& (0+255),f,b
 13783   001A9E  330E               	rrcf	??___fladd& (0+255),f,b
 13784   001AA0  C10E  F106         	movff	??___fladd,___fladd@b
 13785   001AA4  C10F  F107         	movff	??___fladd+1,___fladd@b+1
 13786   001AA8  C110  F108         	movff	??___fladd+2,___fladd@b+2
 13787   001AAC  C111  F109         	movff	??___fladd+3,___fladd@b+3
 13788   001AB0  2914               	incf	___fladd@bexp& (0+255),w,b
 13789   001AB2  B4D8               	btfsc	status,2,c
 13790   001AB4  EF5E  F00D         	goto	u6651
 13791   001AB8  EF60  F00D         	goto	u6650
 13792   001ABC                     u6651:
 13793   001ABC  EF61  F00D         	goto	l6346
 13794   001AC0                     u6650:
 13795   001AC0                     
 13796                           ; BSR set to: 1
 13797   001AC0  2B14               	incf	___fladd@bexp& (0+255),f,b
 13798   001AC2                     l6346:
 13799                           
 13800                           ; BSR set to: 1
 13801   001AC2  2914               	incf	___fladd@bexp& (0+255),w,b
 13802   001AC4  B4D8               	btfsc	status,2,c
 13803   001AC6  EF67  F00D         	goto	u6661
 13804   001ACA  EF69  F00D         	goto	u6660
 13805   001ACE                     u6661:
 13806   001ACE  EF71  F00D         	goto	l6350
 13807   001AD2                     u6660:
 13808   001AD2                     
 13809                           ; BSR set to: 1
 13810   001AD2  5114               	movf	___fladd@bexp& (0+255),w,b
 13811   001AD4  A4D8               	btfss	status,2,c
 13812   001AD6  EF6F  F00D         	goto	u6671
 13813   001ADA  EF71  F00D         	goto	u6670
 13814   001ADE                     u6671:
 13815   001ADE  EF82  F00D         	goto	l1442
 13816   001AE2                     u6670:
 13817   001AE2                     l6350:
 13818                           
 13819                           ; BSR set to: 1
 13820   001AE2  0E00               	movlw	0
 13821   001AE4  6F06               	movwf	___fladd@b& (0+255),b
 13822   001AE6  0E00               	movlw	0
 13823   001AE8  6F07               	movwf	(___fladd@b+1)& (0+255),b
 13824   001AEA  0E00               	movlw	0
 13825   001AEC  6F08               	movwf	(___fladd@b+2)& (0+255),b
 13826   001AEE  0E00               	movlw	0
 13827   001AF0  6F09               	movwf	(___fladd@b+3)& (0+255),b
 13828   001AF2  5114               	movf	___fladd@bexp& (0+255),w,b
 13829   001AF4  A4D8               	btfss	status,2,c
 13830   001AF6  EF7F  F00D         	goto	u6681
 13831   001AFA  EF81  F00D         	goto	u6680
 13832   001AFE                     u6681:
 13833   001AFE  EF82  F00D         	goto	l1442
 13834   001B02                     u6680:
 13835   001B02                     
 13836                           ; BSR set to: 1
 13837   001B02  6B12               	clrf	___fladd@signs& (0+255),b
 13838   001B04                     l1442:
 13839                           
 13840                           ; BSR set to: 1
 13841   001B04  A114               	btfss	___fladd@bexp& (0+255),0,b
 13842   001B06  EF87  F00D         	goto	u6691
 13843   001B0A  EF89  F00D         	goto	u6690
 13844   001B0E                     u6691:
 13845   001B0E  EF8C  F00D         	goto	l6356
 13846   001B12                     u6690:
 13847   001B12                     
 13848                           ; BSR set to: 1
 13849   001B12  8F08               	bsf	(___fladd@b+2)& (0+255),7,b
 13850   001B14  EF8D  F00D         	goto	l6358
 13851   001B18                     l6356:
 13852                           
 13853                           ; BSR set to: 1
 13854   001B18  9F08               	bcf	(___fladd@b+2)& (0+255),7,b
 13855   001B1A                     l6358:
 13856                           
 13857                           ; BSR set to: 1
 13858   001B1A  90D8               	bcf	status,0,c
 13859   001B1C  3114               	rrcf	___fladd@bexp& (0+255),w,b
 13860   001B1E  6F09               	movwf	(___fladd@b+3)& (0+255),b
 13861   001B20                     
 13862                           ; BSR set to: 1
 13863   001B20  AF12               	btfss	___fladd@signs& (0+255),7,b
 13864   001B22  EF95  F00D         	goto	u6701
 13865   001B26  EF97  F00D         	goto	u6700
 13866   001B2A                     u6701:
 13867   001B2A  EF98  F00D         	goto	l6364
 13868   001B2E                     u6700:
 13869   001B2E                     
 13870                           ; BSR set to: 1
 13871   001B2E  8F09               	bsf	(___fladd@b+3)& (0+255),7,b
 13872   001B30                     l6364:
 13873                           
 13874                           ; BSR set to: 1
 13875   001B30  C106  F106         	movff	___fladd@b,?___fladd
 13876   001B34  C107  F107         	movff	___fladd@b+1,?___fladd+1
 13877   001B38  C108  F108         	movff	___fladd@b+2,?___fladd+2
 13878   001B3C  C109  F109         	movff	___fladd@b+3,?___fladd+3
 13879   001B40                     l1418:
 13880                           
 13881                           ; BSR set to: 1
 13882   001B40  0012               	return		;funcret
 13883   001B42                     __end_of___fladd:
 13884                           	callstack 0
 13885                           
 13886 ;; *************** function ___flneg *****************
 13887 ;; Defined at:
 13888 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\flneg.c"
 13889 ;; Parameters:    Size  Location     Type
 13890 ;;  f1              4    6[BANK1 ] unsigned char 
 13891 ;; Auto vars:     Size  Location     Type
 13892 ;;		None
 13893 ;; Return value:  Size  Location     Type
 13894 ;;                  4    6[BANK1 ] unsigned char 
 13895 ;; Registers used:
 13896 ;;		wreg, status,2, status,0
 13897 ;; Tracked objects:
 13898 ;;		On entry : 0/0
 13899 ;;		On exit  : 0/0
 13900 ;;		Unchanged: 0/0
 13901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13902 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13903 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13904 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13905 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13906 ;;Total ram usage:        4 bytes
 13907 ;; Hardware stack levels used: 1
 13908 ;; Hardware stack levels required when called: 13
 13909 ;; This function calls:
 13910 ;;		Nothing
 13911 ;; This function is called by:
 13912 ;;		_efgtoa
 13913 ;; This function uses a non-reentrant model
 13914 ;;
 13915                           
 13916                           	psect	text32
 13917   00616E                     __ptext32:
 13918                           	callstack 0
 13919   00616E                     ___flneg:
 13920                           	callstack 12
 13921   00616E  0101               	movlb	1	; () banked
 13922   006170  5106               	movf	___flneg@f1& (0+255),w,b
 13923   006172  1107               	iorwf	(___flneg@f1+1)& (0+255),w,b
 13924   006174  1108               	iorwf	(___flneg@f1+2)& (0+255),w,b
 13925   006176  1109               	iorwf	(___flneg@f1+3)& (0+255),w,b
 13926   006178  B4D8               	btfsc	status,2,c
 13927   00617A  EFC1  F030         	goto	u7401
 13928   00617E  EFC3  F030         	goto	u7400
 13929   006182                     u7401:
 13930   006182  EFCB  F030         	goto	l6854
 13931   006186                     u7400:
 13932   006186                     
 13933                           ; BSR set to: 1
 13934   006186  0E00               	movlw	0
 13935   006188  1B06               	xorwf	___flneg@f1& (0+255),f,b
 13936   00618A  0E00               	movlw	0
 13937   00618C  1B07               	xorwf	(___flneg@f1+1)& (0+255),f,b
 13938   00618E  0E00               	movlw	0
 13939   006190  1B08               	xorwf	(___flneg@f1+2)& (0+255),f,b
 13940   006192  0E80               	movlw	128
 13941   006194  1B09               	xorwf	(___flneg@f1+3)& (0+255),f,b
 13942   006196                     l6854:
 13943                           
 13944                           ; BSR set to: 1
 13945   006196  C106  F106         	movff	___flneg@f1,?___flneg
 13946   00619A  C107  F107         	movff	___flneg@f1+1,?___flneg+1
 13947   00619E  C108  F108         	movff	___flneg@f1+2,?___flneg+2
 13948   0061A2  C109  F109         	movff	___flneg@f1+3,?___flneg+3
 13949   0061A6                     
 13950                           ; BSR set to: 1
 13951   0061A6  0012               	return		;funcret
 13952   0061A8                     __end_of___flneg:
 13953                           	callstack 0
 13954                           
 13955 ;; *************** function ___flge *****************
 13956 ;; Defined at:
 13957 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\flge.c"
 13958 ;; Parameters:    Size  Location     Type
 13959 ;;  ff1             4   45[BANK1 ] unsigned char 
 13960 ;;  ff2             4   49[BANK1 ] unsigned char 
 13961 ;; Auto vars:     Size  Location     Type
 13962 ;;		None
 13963 ;; Return value:  Size  Location     Type
 13964 ;;		None               void
 13965 ;; Registers used:
 13966 ;;		wreg, status,2, status,0
 13967 ;; Tracked objects:
 13968 ;;		On entry : 0/0
 13969 ;;		On exit  : 0/0
 13970 ;;		Unchanged: 0/0
 13971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13972 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13973 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13974 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13975 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13976 ;;Total ram usage:       12 bytes
 13977 ;; Hardware stack levels used: 1
 13978 ;; Hardware stack levels required when called: 13
 13979 ;; This function calls:
 13980 ;;		Nothing
 13981 ;; This function is called by:
 13982 ;;		_efgtoa
 13983 ;; This function uses a non-reentrant model
 13984 ;;
 13985                           
 13986                           	psect	text33
 13987   004552                     __ptext33:
 13988                           	callstack 0
 13989   004552                     ___flge:
 13990                           	callstack 12
 13991   004552  0E00               	movlw	0
 13992   004554  0101               	movlb	1	; () banked
 13993   004556  152D               	andwf	___flge@ff1& (0+255),w,b
 13994   004558  6F35               	movwf	??___flge& (0+255),b
 13995   00455A  0E00               	movlw	0
 13996   00455C  152E               	andwf	(___flge@ff1+1)& (0+255),w,b
 13997   00455E  6F36               	movwf	(??___flge+1)& (0+255),b
 13998   004560  0E80               	movlw	128
 13999   004562  152F               	andwf	(___flge@ff1+2)& (0+255),w,b
 14000   004564  6F37               	movwf	(??___flge+2)& (0+255),b
 14001   004566  0E7F               	movlw	127
 14002   004568  1530               	andwf	(___flge@ff1+3)& (0+255),w,b
 14003   00456A  6F38               	movwf	(??___flge+3)& (0+255),b
 14004   00456C  5135               	movf	??___flge& (0+255),w,b
 14005   00456E  1136               	iorwf	(??___flge+1)& (0+255),w,b
 14006   004570  1137               	iorwf	(??___flge+2)& (0+255),w,b
 14007   004572  1138               	iorwf	(??___flge+3)& (0+255),w,b
 14008   004574  A4D8               	btfss	status,2,c
 14009   004576  EFBF  F022         	goto	u7351
 14010   00457A  EFC1  F022         	goto	u7350
 14011   00457E                     u7351:
 14012   00457E  EFC9  F022         	goto	l6832
 14013   004582                     u7350:
 14014   004582                     
 14015                           ; BSR set to: 1
 14016   004582  0E00               	movlw	0
 14017   004584  6F2D               	movwf	___flge@ff1& (0+255),b
 14018   004586  0E00               	movlw	0
 14019   004588  6F2E               	movwf	(___flge@ff1+1)& (0+255),b
 14020   00458A  0E00               	movlw	0
 14021   00458C  6F2F               	movwf	(___flge@ff1+2)& (0+255),b
 14022   00458E  0E00               	movlw	0
 14023   004590  6F30               	movwf	(___flge@ff1+3)& (0+255),b
 14024   004592                     l6832:
 14025                           
 14026                           ; BSR set to: 1
 14027   004592  0E00               	movlw	0
 14028   004594  1531               	andwf	___flge@ff2& (0+255),w,b
 14029   004596  6F35               	movwf	??___flge& (0+255),b
 14030   004598  0E00               	movlw	0
 14031   00459A  1532               	andwf	(___flge@ff2+1)& (0+255),w,b
 14032   00459C  6F36               	movwf	(??___flge+1)& (0+255),b
 14033   00459E  0E80               	movlw	128
 14034   0045A0  1533               	andwf	(___flge@ff2+2)& (0+255),w,b
 14035   0045A2  6F37               	movwf	(??___flge+2)& (0+255),b
 14036   0045A4  0E7F               	movlw	127
 14037   0045A6  1534               	andwf	(___flge@ff2+3)& (0+255),w,b
 14038   0045A8  6F38               	movwf	(??___flge+3)& (0+255),b
 14039   0045AA  5135               	movf	??___flge& (0+255),w,b
 14040   0045AC  1136               	iorwf	(??___flge+1)& (0+255),w,b
 14041   0045AE  1137               	iorwf	(??___flge+2)& (0+255),w,b
 14042   0045B0  1138               	iorwf	(??___flge+3)& (0+255),w,b
 14043   0045B2  A4D8               	btfss	status,2,c
 14044   0045B4  EFDE  F022         	goto	u7361
 14045   0045B8  EFE0  F022         	goto	u7360
 14046   0045BC                     u7361:
 14047   0045BC  EFE8  F022         	goto	l6836
 14048   0045C0                     u7360:
 14049   0045C0                     
 14050                           ; BSR set to: 1
 14051   0045C0  0E00               	movlw	0
 14052   0045C2  6F31               	movwf	___flge@ff2& (0+255),b
 14053   0045C4  0E00               	movlw	0
 14054   0045C6  6F32               	movwf	(___flge@ff2+1)& (0+255),b
 14055   0045C8  0E00               	movlw	0
 14056   0045CA  6F33               	movwf	(___flge@ff2+2)& (0+255),b
 14057   0045CC  0E00               	movlw	0
 14058   0045CE  6F34               	movwf	(___flge@ff2+3)& (0+255),b
 14059   0045D0                     l6836:
 14060                           
 14061                           ; BSR set to: 1
 14062   0045D0  AF30               	btfss	(___flge@ff1+3)& (0+255),7,b
 14063   0045D2  EFED  F022         	goto	u7371
 14064   0045D6  EFEF  F022         	goto	u7370
 14065   0045DA                     u7371:
 14066   0045DA  EFF8  F022         	goto	l6840
 14067   0045DE                     u7370:
 14068   0045DE                     
 14069                           ; BSR set to: 1
 14070   0045DE  6D2D               	negf	___flge@ff1& (0+255),b
 14071   0045E0  1F2E               	comf	(___flge@ff1+1)& (0+255),f,b
 14072   0045E2  B0D8               	btfsc	status,0,c
 14073   0045E4  2B2E               	incf	(___flge@ff1+1)& (0+255),f,b
 14074   0045E6  1F2F               	comf	(___flge@ff1+2)& (0+255),f,b
 14075   0045E8  B0D8               	btfsc	status,0,c
 14076   0045EA  2B2F               	incf	(___flge@ff1+2)& (0+255),f,b
 14077   0045EC  0E80               	movlw	128
 14078   0045EE  5730               	subfwb	(___flge@ff1+3)& (0+255),f,b
 14079   0045F0                     l6840:
 14080                           
 14081                           ; BSR set to: 1
 14082   0045F0  AF34               	btfss	(___flge@ff2+3)& (0+255),7,b
 14083   0045F2  EFFD  F022         	goto	u7381
 14084   0045F6  EFFF  F022         	goto	u7380
 14085   0045FA                     u7381:
 14086   0045FA  EF08  F023         	goto	l1146
 14087   0045FE                     u7380:
 14088   0045FE                     
 14089                           ; BSR set to: 1
 14090   0045FE  6D31               	negf	___flge@ff2& (0+255),b
 14091   004600  1F32               	comf	(___flge@ff2+1)& (0+255),f,b
 14092   004602  B0D8               	btfsc	status,0,c
 14093   004604  2B32               	incf	(___flge@ff2+1)& (0+255),f,b
 14094   004606  1F33               	comf	(___flge@ff2+2)& (0+255),f,b
 14095   004608  B0D8               	btfsc	status,0,c
 14096   00460A  2B33               	incf	(___flge@ff2+2)& (0+255),f,b
 14097   00460C  0E80               	movlw	128
 14098   00460E  5734               	subfwb	(___flge@ff2+3)& (0+255),f,b
 14099   004610                     l1146:
 14100                           
 14101                           ; BSR set to: 1
 14102   004610  0E00               	movlw	0
 14103   004612  1B2D               	xorwf	___flge@ff1& (0+255),f,b
 14104   004614  0E00               	movlw	0
 14105   004616  1B2E               	xorwf	(___flge@ff1+1)& (0+255),f,b
 14106   004618  0E00               	movlw	0
 14107   00461A  1B2F               	xorwf	(___flge@ff1+2)& (0+255),f,b
 14108   00461C  0E80               	movlw	128
 14109   00461E  1B30               	xorwf	(___flge@ff1+3)& (0+255),f,b
 14110   004620  0E00               	movlw	0
 14111   004622  1B31               	xorwf	___flge@ff2& (0+255),f,b
 14112   004624  0E00               	movlw	0
 14113   004626  1B32               	xorwf	(___flge@ff2+1)& (0+255),f,b
 14114   004628  0E00               	movlw	0
 14115   00462A  1B33               	xorwf	(___flge@ff2+2)& (0+255),f,b
 14116   00462C  0E80               	movlw	128
 14117   00462E  1B34               	xorwf	(___flge@ff2+3)& (0+255),f,b
 14118   004630  5131               	movf	___flge@ff2& (0+255),w,b
 14119   004632  5D2D               	subwf	___flge@ff1& (0+255),w,b
 14120   004634  5132               	movf	(___flge@ff2+1)& (0+255),w,b
 14121   004636  592E               	subwfb	(___flge@ff1+1)& (0+255),w,b
 14122   004638  5133               	movf	(___flge@ff2+2)& (0+255),w,b
 14123   00463A  592F               	subwfb	(___flge@ff1+2)& (0+255),w,b
 14124   00463C  5134               	movf	(___flge@ff2+3)& (0+255),w,b
 14125   00463E  5930               	subwfb	(___flge@ff1+3)& (0+255),w,b
 14126   004640  B0D8               	btfsc	status,0,c
 14127   004642  EF25  F023         	goto	u7391
 14128   004646  EF27  F023         	goto	u7390
 14129   00464A                     u7391:
 14130   00464A  EF2A  F023         	goto	l6846
 14131   00464E                     u7390:
 14132   00464E                     
 14133                           ; BSR set to: 1
 14134   00464E  90D8               	bcf	status,0,c
 14135   004650  EF2B  F023         	goto	l1151
 14136   004654                     l6846:
 14137                           
 14138                           ; BSR set to: 1
 14139   004654  80D8               	bsf	status,0,c
 14140   004656                     l1151:
 14141                           
 14142                           ; BSR set to: 1
 14143   004656  0012               	return		;funcret
 14144   004658                     __end_of___flge:
 14145                           	callstack 0
 14146                           
 14147 ;; *************** function ___fleq *****************
 14148 ;; Defined at:
 14149 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\fleq.c"
 14150 ;; Parameters:    Size  Location     Type
 14151 ;;  ff1             4    6[BANK1 ] unsigned char 
 14152 ;;  ff2             4   10[BANK1 ] unsigned char 
 14153 ;; Auto vars:     Size  Location     Type
 14154 ;;		None
 14155 ;; Return value:  Size  Location     Type
 14156 ;;		None               void
 14157 ;; Registers used:
 14158 ;;		wreg, status,2, status,0
 14159 ;; Tracked objects:
 14160 ;;		On entry : 0/0
 14161 ;;		On exit  : 0/0
 14162 ;;		Unchanged: 0/0
 14163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14164 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14165 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14166 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14167 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14168 ;;Total ram usage:       12 bytes
 14169 ;; Hardware stack levels used: 1
 14170 ;; Hardware stack levels required when called: 13
 14171 ;; This function calls:
 14172 ;;		Nothing
 14173 ;; This function is called by:
 14174 ;;		_efgtoa
 14175 ;; This function uses a non-reentrant model
 14176 ;;
 14177                           
 14178                           	psect	text34
 14179   005400                     __ptext34:
 14180                           	callstack 0
 14181   005400                     ___fleq:
 14182                           	callstack 12
 14183   005400  0E00               	movlw	0
 14184   005402  0101               	movlb	1	; () banked
 14185   005404  1506               	andwf	___fleq@ff1& (0+255),w,b
 14186   005406  6F0E               	movwf	??___fleq& (0+255),b
 14187   005408  0E00               	movlw	0
 14188   00540A  1507               	andwf	(___fleq@ff1+1)& (0+255),w,b
 14189   00540C  6F0F               	movwf	(??___fleq+1)& (0+255),b
 14190   00540E  0E80               	movlw	128
 14191   005410  1508               	andwf	(___fleq@ff1+2)& (0+255),w,b
 14192   005412  6F10               	movwf	(??___fleq+2)& (0+255),b
 14193   005414  0E7F               	movlw	127
 14194   005416  1509               	andwf	(___fleq@ff1+3)& (0+255),w,b
 14195   005418  6F11               	movwf	(??___fleq+3)& (0+255),b
 14196   00541A  510E               	movf	??___fleq& (0+255),w,b
 14197   00541C  110F               	iorwf	(??___fleq+1)& (0+255),w,b
 14198   00541E  1110               	iorwf	(??___fleq+2)& (0+255),w,b
 14199   005420  1111               	iorwf	(??___fleq+3)& (0+255),w,b
 14200   005422  A4D8               	btfss	status,2,c
 14201   005424  EF16  F02A         	goto	u7321
 14202   005428  EF18  F02A         	goto	u7320
 14203   00542C                     u7321:
 14204   00542C  EF20  F02A         	goto	l6816
 14205   005430                     u7320:
 14206   005430                     
 14207                           ; BSR set to: 1
 14208   005430  0E00               	movlw	0
 14209   005432  6F06               	movwf	___fleq@ff1& (0+255),b
 14210   005434  0E00               	movlw	0
 14211   005436  6F07               	movwf	(___fleq@ff1+1)& (0+255),b
 14212   005438  0E00               	movlw	0
 14213   00543A  6F08               	movwf	(___fleq@ff1+2)& (0+255),b
 14214   00543C  0E00               	movlw	0
 14215   00543E  6F09               	movwf	(___fleq@ff1+3)& (0+255),b
 14216   005440                     l6816:
 14217                           
 14218                           ; BSR set to: 1
 14219   005440  0E00               	movlw	0
 14220   005442  150A               	andwf	___fleq@ff2& (0+255),w,b
 14221   005444  6F0E               	movwf	??___fleq& (0+255),b
 14222   005446  0E00               	movlw	0
 14223   005448  150B               	andwf	(___fleq@ff2+1)& (0+255),w,b
 14224   00544A  6F0F               	movwf	(??___fleq+1)& (0+255),b
 14225   00544C  0E80               	movlw	128
 14226   00544E  150C               	andwf	(___fleq@ff2+2)& (0+255),w,b
 14227   005450  6F10               	movwf	(??___fleq+2)& (0+255),b
 14228   005452  0E7F               	movlw	127
 14229   005454  150D               	andwf	(___fleq@ff2+3)& (0+255),w,b
 14230   005456  6F11               	movwf	(??___fleq+3)& (0+255),b
 14231   005458  510E               	movf	??___fleq& (0+255),w,b
 14232   00545A  110F               	iorwf	(??___fleq+1)& (0+255),w,b
 14233   00545C  1110               	iorwf	(??___fleq+2)& (0+255),w,b
 14234   00545E  1111               	iorwf	(??___fleq+3)& (0+255),w,b
 14235   005460  A4D8               	btfss	status,2,c
 14236   005462  EF35  F02A         	goto	u7331
 14237   005466  EF37  F02A         	goto	u7330
 14238   00546A                     u7331:
 14239   00546A  EF3F  F02A         	goto	l6820
 14240   00546E                     u7330:
 14241   00546E                     
 14242                           ; BSR set to: 1
 14243   00546E  0E00               	movlw	0
 14244   005470  6F0A               	movwf	___fleq@ff2& (0+255),b
 14245   005472  0E00               	movlw	0
 14246   005474  6F0B               	movwf	(___fleq@ff2+1)& (0+255),b
 14247   005476  0E00               	movlw	0
 14248   005478  6F0C               	movwf	(___fleq@ff2+2)& (0+255),b
 14249   00547A  0E00               	movlw	0
 14250   00547C  6F0D               	movwf	(___fleq@ff2+3)& (0+255),b
 14251   00547E                     l6820:
 14252                           
 14253                           ; BSR set to: 1
 14254   00547E  510A               	movf	___fleq@ff2& (0+255),w,b
 14255   005480  1906               	xorwf	___fleq@ff1& (0+255),w,b
 14256   005482  E10F               	bnz	u7340
 14257   005484  510B               	movf	(___fleq@ff2+1)& (0+255),w,b
 14258   005486  1907               	xorwf	(___fleq@ff1+1)& (0+255),w,b
 14259   005488  E10C               	bnz	u7340
 14260   00548A  510C               	movf	(___fleq@ff2+2)& (0+255),w,b
 14261   00548C  1908               	xorwf	(___fleq@ff1+2)& (0+255),w,b
 14262   00548E  E109               	bnz	u7340
 14263   005490  510D               	movf	(___fleq@ff2+3)& (0+255),w,b
 14264   005492  1909               	xorwf	(___fleq@ff1+3)& (0+255),w,b
 14265   005494  B4D8               	btfsc	status,2,c
 14266   005496  EF4F  F02A         	goto	u7341
 14267   00549A  EF51  F02A         	goto	u7340
 14268   00549E                     u7341:
 14269   00549E  EF54  F02A         	goto	l6824
 14270   0054A2                     u7340:
 14271   0054A2                     
 14272                           ; BSR set to: 1
 14273   0054A2  90D8               	bcf	status,0,c
 14274   0054A4  EF55  F02A         	goto	l1140
 14275   0054A8                     l6824:
 14276                           
 14277                           ; BSR set to: 1
 14278   0054A8  80D8               	bsf	status,0,c
 14279   0054AA                     l1140:
 14280                           
 14281                           ; BSR set to: 1
 14282   0054AA  0012               	return		;funcret
 14283   0054AC                     __end_of___fleq:
 14284                           	callstack 0
 14285                           
 14286 ;; *************** function ___awmod *****************
 14287 ;; Defined at:
 14288 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\awmod.c"
 14289 ;; Parameters:    Size  Location     Type
 14290 ;;  dividend        2    6[BANK1 ] int 
 14291 ;;  divisor         2    8[BANK1 ] int 
 14292 ;; Auto vars:     Size  Location     Type
 14293 ;;  sign            1   11[BANK1 ] unsigned char 
 14294 ;;  counter         1   10[BANK1 ] unsigned char 
 14295 ;; Return value:  Size  Location     Type
 14296 ;;                  2    6[BANK1 ] int 
 14297 ;; Registers used:
 14298 ;;		wreg, status,2, status,0
 14299 ;; Tracked objects:
 14300 ;;		On entry : 0/0
 14301 ;;		On exit  : 0/0
 14302 ;;		Unchanged: 0/0
 14303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14304 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14305 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14306 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14307 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14308 ;;Total ram usage:        6 bytes
 14309 ;; Hardware stack levels used: 1
 14310 ;; Hardware stack levels required when called: 13
 14311 ;; This function calls:
 14312 ;;		Nothing
 14313 ;; This function is called by:
 14314 ;;		_efgtoa
 14315 ;; This function uses a non-reentrant model
 14316 ;;
 14317                           
 14318                           	psect	text35
 14319   0052A2                     __ptext35:
 14320                           	callstack 0
 14321   0052A2                     ___awmod:
 14322                           	callstack 12
 14323   0052A2  0101               	movlb	1	; () banked
 14324   0052A4  6B0B               	clrf	___awmod@sign& (0+255),b
 14325   0052A6                     
 14326                           ; BSR set to: 1
 14327   0052A6  BF07               	btfsc	(___awmod@dividend+1)& (0+255),7,b
 14328   0052A8  EF5A  F029         	goto	u7260
 14329   0052AC  EF58  F029         	goto	u7261
 14330   0052B0                     u7261:
 14331   0052B0  EF60  F029         	goto	l6784
 14332   0052B4                     u7260:
 14333   0052B4                     
 14334                           ; BSR set to: 1
 14335   0052B4  6D06               	negf	___awmod@dividend& (0+255),b
 14336   0052B6  1F07               	comf	(___awmod@dividend+1)& (0+255),f,b
 14337   0052B8  B0D8               	btfsc	status,0,c
 14338   0052BA  2B07               	incf	(___awmod@dividend+1)& (0+255),f,b
 14339   0052BC                     
 14340                           ; BSR set to: 1
 14341   0052BC  0E01               	movlw	1
 14342   0052BE  6F0B               	movwf	___awmod@sign& (0+255),b
 14343   0052C0                     l6784:
 14344                           
 14345                           ; BSR set to: 1
 14346   0052C0  BF09               	btfsc	(___awmod@divisor+1)& (0+255),7,b
 14347   0052C2  EF67  F029         	goto	u7270
 14348   0052C6  EF65  F029         	goto	u7271
 14349   0052CA                     u7271:
 14350   0052CA  EF6B  F029         	goto	l6788
 14351   0052CE                     u7270:
 14352   0052CE                     
 14353                           ; BSR set to: 1
 14354   0052CE  6D08               	negf	___awmod@divisor& (0+255),b
 14355   0052D0  1F09               	comf	(___awmod@divisor+1)& (0+255),f,b
 14356   0052D2  B0D8               	btfsc	status,0,c
 14357   0052D4  2B09               	incf	(___awmod@divisor+1)& (0+255),f,b
 14358   0052D6                     l6788:
 14359                           
 14360                           ; BSR set to: 1
 14361   0052D6  5108               	movf	___awmod@divisor& (0+255),w,b
 14362   0052D8  1109               	iorwf	(___awmod@divisor+1)& (0+255),w,b
 14363   0052DA  B4D8               	btfsc	status,2,c
 14364   0052DC  EF72  F029         	goto	u7281
 14365   0052E0  EF74  F029         	goto	u7280
 14366   0052E4                     u7281:
 14367   0052E4  EF98  F029         	goto	l6804
 14368   0052E8                     u7280:
 14369   0052E8                     
 14370                           ; BSR set to: 1
 14371   0052E8  0E01               	movlw	1
 14372   0052EA  6F0A               	movwf	___awmod@counter& (0+255),b
 14373   0052EC  EF7C  F029         	goto	l6794
 14374   0052F0                     l6792:
 14375                           
 14376                           ; BSR set to: 1
 14377   0052F0  90D8               	bcf	status,0,c
 14378   0052F2  3708               	rlcf	___awmod@divisor& (0+255),f,b
 14379   0052F4  3709               	rlcf	(___awmod@divisor+1)& (0+255),f,b
 14380   0052F6  2B0A               	incf	___awmod@counter& (0+255),f,b
 14381   0052F8                     l6794:
 14382                           
 14383                           ; BSR set to: 1
 14384   0052F8  AF09               	btfss	(___awmod@divisor+1)& (0+255),7,b
 14385   0052FA  EF81  F029         	goto	u7291
 14386   0052FE  EF83  F029         	goto	u7290
 14387   005302                     u7291:
 14388   005302  EF78  F029         	goto	l6792
 14389   005306                     u7290:
 14390   005306                     l6796:
 14391                           
 14392                           ; BSR set to: 1
 14393   005306  5108               	movf	___awmod@divisor& (0+255),w,b
 14394   005308  5D06               	subwf	___awmod@dividend& (0+255),w,b
 14395   00530A  5109               	movf	(___awmod@divisor+1)& (0+255),w,b
 14396   00530C  5907               	subwfb	(___awmod@dividend+1)& (0+255),w,b
 14397   00530E  A0D8               	btfss	status,0,c
 14398   005310  EF8C  F029         	goto	u7301
 14399   005314  EF8E  F029         	goto	u7300
 14400   005318                     u7301:
 14401   005318  EF92  F029         	goto	l6800
 14402   00531C                     u7300:
 14403   00531C                     
 14404                           ; BSR set to: 1
 14405   00531C  5108               	movf	___awmod@divisor& (0+255),w,b
 14406   00531E  5F06               	subwf	___awmod@dividend& (0+255),f,b
 14407   005320  5109               	movf	(___awmod@divisor+1)& (0+255),w,b
 14408   005322  5B07               	subwfb	(___awmod@dividend+1)& (0+255),f,b
 14409   005324                     l6800:
 14410                           
 14411                           ; BSR set to: 1
 14412   005324  90D8               	bcf	status,0,c
 14413   005326  3309               	rrcf	(___awmod@divisor+1)& (0+255),f,b
 14414   005328  3308               	rrcf	___awmod@divisor& (0+255),f,b
 14415   00532A                     
 14416                           ; BSR set to: 1
 14417   00532A  2F0A               	decfsz	___awmod@counter& (0+255),f,b
 14418   00532C  EF83  F029         	goto	l6796
 14419   005330                     l6804:
 14420                           
 14421                           ; BSR set to: 1
 14422   005330  510B               	movf	___awmod@sign& (0+255),w,b
 14423   005332  B4D8               	btfsc	status,2,c
 14424   005334  EF9E  F029         	goto	u7311
 14425   005338  EFA0  F029         	goto	u7310
 14426   00533C                     u7311:
 14427   00533C  EFA4  F029         	goto	l6808
 14428   005340                     u7310:
 14429   005340                     
 14430                           ; BSR set to: 1
 14431   005340  6D06               	negf	___awmod@dividend& (0+255),b
 14432   005342  1F07               	comf	(___awmod@dividend+1)& (0+255),f,b
 14433   005344  B0D8               	btfsc	status,0,c
 14434   005346  2B07               	incf	(___awmod@dividend+1)& (0+255),f,b
 14435   005348                     l6808:
 14436                           
 14437                           ; BSR set to: 1
 14438   005348  C106  F106         	movff	___awmod@dividend,?___awmod
 14439   00534C  C107  F107         	movff	___awmod@dividend+1,?___awmod+1
 14440   005350                     
 14441                           ; BSR set to: 1
 14442   005350  0012               	return		;funcret
 14443   005352                     __end_of___awmod:
 14444                           	callstack 0
 14445                           
 14446 ;; *************** function ___awdiv *****************
 14447 ;; Defined at:
 14448 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\awdiv.c"
 14449 ;; Parameters:    Size  Location     Type
 14450 ;;  dividend        2    6[BANK1 ] int 
 14451 ;;  divisor         2    8[BANK1 ] int 
 14452 ;; Auto vars:     Size  Location     Type
 14453 ;;  quotient        2   12[BANK1 ] int 
 14454 ;;  sign            1   11[BANK1 ] unsigned char 
 14455 ;;  counter         1   10[BANK1 ] unsigned char 
 14456 ;; Return value:  Size  Location     Type
 14457 ;;                  2    6[BANK1 ] int 
 14458 ;; Registers used:
 14459 ;;		wreg, status,2, status,0
 14460 ;; Tracked objects:
 14461 ;;		On entry : 0/0
 14462 ;;		On exit  : 0/0
 14463 ;;		Unchanged: 0/0
 14464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14465 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14466 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14467 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14468 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14469 ;;Total ram usage:        8 bytes
 14470 ;; Hardware stack levels used: 1
 14471 ;; Hardware stack levels required when called: 13
 14472 ;; This function calls:
 14473 ;;		Nothing
 14474 ;; This function is called by:
 14475 ;;		_efgtoa
 14476 ;; This function uses a non-reentrant model
 14477 ;;
 14478                           
 14479                           	psect	text36
 14480   004FA0                     __ptext36:
 14481                           	callstack 0
 14482   004FA0                     ___awdiv:
 14483                           	callstack 12
 14484   004FA0  0101               	movlb	1	; () banked
 14485   004FA2  6B0B               	clrf	___awdiv@sign& (0+255),b
 14486   004FA4                     
 14487                           ; BSR set to: 1
 14488   004FA4  BF09               	btfsc	(___awdiv@divisor+1)& (0+255),7,b
 14489   004FA6  EFD9  F027         	goto	u7200
 14490   004FAA  EFD7  F027         	goto	u7201
 14491   004FAE                     u7201:
 14492   004FAE  EFDF  F027         	goto	l6740
 14493   004FB2                     u7200:
 14494   004FB2                     
 14495                           ; BSR set to: 1
 14496   004FB2  6D08               	negf	___awdiv@divisor& (0+255),b
 14497   004FB4  1F09               	comf	(___awdiv@divisor+1)& (0+255),f,b
 14498   004FB6  B0D8               	btfsc	status,0,c
 14499   004FB8  2B09               	incf	(___awdiv@divisor+1)& (0+255),f,b
 14500   004FBA                     
 14501                           ; BSR set to: 1
 14502   004FBA  0E01               	movlw	1
 14503   004FBC  6F0B               	movwf	___awdiv@sign& (0+255),b
 14504   004FBE                     l6740:
 14505                           
 14506                           ; BSR set to: 1
 14507   004FBE  BF07               	btfsc	(___awdiv@dividend+1)& (0+255),7,b
 14508   004FC0  EFE6  F027         	goto	u7210
 14509   004FC4  EFE4  F027         	goto	u7211
 14510   004FC8                     u7211:
 14511   004FC8  EFEC  F027         	goto	l6746
 14512   004FCC                     u7210:
 14513   004FCC                     
 14514                           ; BSR set to: 1
 14515   004FCC  6D06               	negf	___awdiv@dividend& (0+255),b
 14516   004FCE  1F07               	comf	(___awdiv@dividend+1)& (0+255),f,b
 14517   004FD0  B0D8               	btfsc	status,0,c
 14518   004FD2  2B07               	incf	(___awdiv@dividend+1)& (0+255),f,b
 14519   004FD4                     
 14520                           ; BSR set to: 1
 14521   004FD4  0E01               	movlw	1
 14522   004FD6  1B0B               	xorwf	___awdiv@sign& (0+255),f,b
 14523   004FD8                     l6746:
 14524                           
 14525                           ; BSR set to: 1
 14526   004FD8  0E00               	movlw	0
 14527   004FDA  6F0D               	movwf	(___awdiv@quotient+1)& (0+255),b
 14528   004FDC  0E00               	movlw	0
 14529   004FDE  6F0C               	movwf	___awdiv@quotient& (0+255),b
 14530   004FE0                     
 14531                           ; BSR set to: 1
 14532   004FE0  5108               	movf	___awdiv@divisor& (0+255),w,b
 14533   004FE2  1109               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 14534   004FE4  B4D8               	btfsc	status,2,c
 14535   004FE6  EFF7  F027         	goto	u7221
 14536   004FEA  EFF9  F027         	goto	u7220
 14537   004FEE                     u7221:
 14538   004FEE  EF21  F028         	goto	l6768
 14539   004FF2                     u7220:
 14540   004FF2                     
 14541                           ; BSR set to: 1
 14542   004FF2  0E01               	movlw	1
 14543   004FF4  6F0A               	movwf	___awdiv@counter& (0+255),b
 14544   004FF6  EF01  F028         	goto	l6754
 14545   004FFA                     l6752:
 14546                           
 14547                           ; BSR set to: 1
 14548   004FFA  90D8               	bcf	status,0,c
 14549   004FFC  3708               	rlcf	___awdiv@divisor& (0+255),f,b
 14550   004FFE  3709               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 14551   005000  2B0A               	incf	___awdiv@counter& (0+255),f,b
 14552   005002                     l6754:
 14553                           
 14554                           ; BSR set to: 1
 14555   005002  AF09               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 14556   005004  EF06  F028         	goto	u7231
 14557   005008  EF08  F028         	goto	u7230
 14558   00500C                     u7231:
 14559   00500C  EFFD  F027         	goto	l6752
 14560   005010                     u7230:
 14561   005010                     l6756:
 14562                           
 14563                           ; BSR set to: 1
 14564   005010  90D8               	bcf	status,0,c
 14565   005012  370C               	rlcf	___awdiv@quotient& (0+255),f,b
 14566   005014  370D               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 14567   005016                     
 14568                           ; BSR set to: 1
 14569   005016  5108               	movf	___awdiv@divisor& (0+255),w,b
 14570   005018  5D06               	subwf	___awdiv@dividend& (0+255),w,b
 14571   00501A  5109               	movf	(___awdiv@divisor+1)& (0+255),w,b
 14572   00501C  5907               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 14573   00501E  A0D8               	btfss	status,0,c
 14574   005020  EF14  F028         	goto	u7241
 14575   005024  EF16  F028         	goto	u7240
 14576   005028                     u7241:
 14577   005028  EF1B  F028         	goto	l6764
 14578   00502C                     u7240:
 14579   00502C                     
 14580                           ; BSR set to: 1
 14581   00502C  5108               	movf	___awdiv@divisor& (0+255),w,b
 14582   00502E  5F06               	subwf	___awdiv@dividend& (0+255),f,b
 14583   005030  5109               	movf	(___awdiv@divisor+1)& (0+255),w,b
 14584   005032  5B07               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 14585   005034                     
 14586                           ; BSR set to: 1
 14587   005034  810C               	bsf	___awdiv@quotient& (0+255),0,b
 14588   005036                     l6764:
 14589                           
 14590                           ; BSR set to: 1
 14591   005036  90D8               	bcf	status,0,c
 14592   005038  3309               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 14593   00503A  3308               	rrcf	___awdiv@divisor& (0+255),f,b
 14594   00503C                     
 14595                           ; BSR set to: 1
 14596   00503C  2F0A               	decfsz	___awdiv@counter& (0+255),f,b
 14597   00503E  EF08  F028         	goto	l6756
 14598   005042                     l6768:
 14599                           
 14600                           ; BSR set to: 1
 14601   005042  510B               	movf	___awdiv@sign& (0+255),w,b
 14602   005044  B4D8               	btfsc	status,2,c
 14603   005046  EF27  F028         	goto	u7251
 14604   00504A  EF29  F028         	goto	u7250
 14605   00504E                     u7251:
 14606   00504E  EF2D  F028         	goto	l6772
 14607   005052                     u7250:
 14608   005052                     
 14609                           ; BSR set to: 1
 14610   005052  6D0C               	negf	___awdiv@quotient& (0+255),b
 14611   005054  1F0D               	comf	(___awdiv@quotient+1)& (0+255),f,b
 14612   005056  B0D8               	btfsc	status,0,c
 14613   005058  2B0D               	incf	(___awdiv@quotient+1)& (0+255),f,b
 14614   00505A                     l6772:
 14615                           
 14616                           ; BSR set to: 1
 14617   00505A  C10C  F106         	movff	___awdiv@quotient,?___awdiv
 14618   00505E  C10D  F107         	movff	___awdiv@quotient+1,?___awdiv+1
 14619   005062                     
 14620                           ; BSR set to: 1
 14621   005062  0012               	return		;funcret
 14622   005064                     __end_of___awdiv:
 14623                           	callstack 0
 14624                           
 14625 ;; *************** function _lire_tension *****************
 14626 ;; Defined at:
 14627 ;;		line 307 in file "main.c"
 14628 ;; Parameters:    Size  Location     Type
 14629 ;;		None
 14630 ;; Auto vars:     Size  Location     Type
 14631 ;;  tension         4   74[BANK1 ] float 
 14632 ;;  adc_val         2   78[BANK1 ] short 
 14633 ;; Return value:  Size  Location     Type
 14634 ;;                  4   70[BANK1 ] float 
 14635 ;; Registers used:
 14636 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 14637 ;; Tracked objects:
 14638 ;;		On entry : 0/0
 14639 ;;		On exit  : 0/0
 14640 ;;		Unchanged: 0/0
 14641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14642 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14643 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14644 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14645 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14646 ;;Total ram usage:       10 bytes
 14647 ;; Hardware stack levels used: 1
 14648 ;; Hardware stack levels required when called: 14
 14649 ;; This function calls:
 14650 ;;		_ADC_ChannelSelect
 14651 ;;		_ADC_ConversionResultGet
 14652 ;;		_ADC_ConversionStart
 14653 ;;		___fldiv
 14654 ;;		___flmul
 14655 ;;		___xxtofl
 14656 ;; This function is called by:
 14657 ;;		_LCD_UpdateMenu
 14658 ;;		_lire_courant
 14659 ;; This function uses a non-reentrant model
 14660 ;;
 14661                           
 14662                           	psect	text37
 14663   005602                     __ptext37:
 14664                           	callstack 0
 14665   005602                     _lire_tension:
 14666                           	callstack 15
 14667   005602                     
 14668                           ;main.c: 309:     ADC_ChannelSelect(ADC_CHANNEL_ANA4);
 14669   005602  0E04               	movlw	4
 14670   005604  EC6C  F032         	call	_ADC_ChannelSelect
 14671   005608                     
 14672                           ;main.c: 310:     ADC_ConversionStart();
 14673   005608  EC9A  F032         	call	_ADC_ConversionStart	;wreg free
 14674   00560C                     
 14675                           ;main.c: 311:     adc_result_t adc_val = ADC_ConversionResultGet();
 14676   00560C  ECD5  F031         	call	_ADC_ConversionResultGet	;wreg free
 14677   005610  C106  F14E         	movff	?_ADC_ConversionResultGet,lire_tension@adc_val
 14678   005614  C107  F14F         	movff	?_ADC_ConversionResultGet+1,lire_tension@adc_val+1
 14679   005618                     
 14680                           ;main.c: 313:    float tension = (adc_val * 5.f) / 4095.0f;
 14681   005618  0E00               	movlw	0
 14682   00561A  0101               	movlb	1	; () banked
 14683   00561C  6F18               	movwf	___flmul@a& (0+255),b
 14684   00561E  0E00               	movlw	0
 14685   005620  6F19               	movwf	(___flmul@a+1)& (0+255),b
 14686   005622  0EA0               	movlw	160
 14687   005624  6F1A               	movwf	(___flmul@a+2)& (0+255),b
 14688   005626  0E40               	movlw	64
 14689   005628  6F1B               	movwf	(___flmul@a+3)& (0+255),b
 14690   00562A  C14E  F106         	movff	lire_tension@adc_val,___xxtofl@val
 14691   00562E  C14F  F107         	movff	lire_tension@adc_val+1,___xxtofl@val+1
 14692   005632  0E00               	movlw	0
 14693   005634  BF07               	btfsc	(___xxtofl@val+1)& (0+255),7,b
 14694   005636  0EFF               	movlw	-1
 14695   005638  6F08               	movwf	(___xxtofl@val+2)& (0+255),b
 14696   00563A  6F09               	movwf	(___xxtofl@val+3)& (0+255),b
 14697   00563C  0E01               	movlw	1
 14698   00563E  ECD2  F01F         	call	___xxtofl
 14699   005642  C106  F114         	movff	?___xxtofl,___flmul@b
 14700   005646  C107  F115         	movff	?___xxtofl+1,___flmul@b+1
 14701   00564A  C108  F116         	movff	?___xxtofl+2,___flmul@b+2
 14702   00564E  C109  F117         	movff	?___xxtofl+3,___flmul@b+3
 14703   005652  ECFC  F00F         	call	___flmul	;wreg free
 14704   005656  C114  F12D         	movff	?___flmul,___fldiv@b
 14705   00565A  C115  F12E         	movff	?___flmul+1,___fldiv@b+1
 14706   00565E  C116  F12F         	movff	?___flmul+2,___fldiv@b+2
 14707   005662  C117  F130         	movff	?___flmul+3,___fldiv@b+3
 14708   005666  0E00               	movlw	0
 14709   005668  0101               	movlb	1	; () banked
 14710   00566A  6F31               	movwf	___fldiv@a& (0+255),b
 14711   00566C  0EF0               	movlw	240
 14712   00566E  6F32               	movwf	(___fldiv@a+1)& (0+255),b
 14713   005670  0E7F               	movlw	127
 14714   005672  6F33               	movwf	(___fldiv@a+2)& (0+255),b
 14715   005674  0E45               	movlw	69
 14716   005676  6F34               	movwf	(___fldiv@a+3)& (0+255),b
 14717   005678  EC47  F014         	call	___fldiv	;wreg free
 14718   00567C  C12D  F14A         	movff	?___fldiv,lire_tension@tension
 14719   005680  C12E  F14B         	movff	?___fldiv+1,lire_tension@tension+1
 14720   005684  C12F  F14C         	movff	?___fldiv+2,lire_tension@tension+2
 14721   005688  C130  F14D         	movff	?___fldiv+3,lire_tension@tension+3
 14722   00568C                     
 14723                           ;main.c: 314:     return tension;
 14724   00568C  C14A  F146         	movff	lire_tension@tension,?_lire_tension
 14725   005690  C14B  F147         	movff	lire_tension@tension+1,?_lire_tension+1
 14726   005694  C14C  F148         	movff	lire_tension@tension+2,?_lire_tension+2
 14727   005698  C14D  F149         	movff	lire_tension@tension+3,?_lire_tension+3
 14728   00569C  0012               	return		;funcret
 14729   00569E                     __end_of_lire_tension:
 14730                           	callstack 0
 14731                           
 14732 ;; *************** function ___xxtofl *****************
 14733 ;; Defined at:
 14734 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\xxtofl.c"
 14735 ;; Parameters:    Size  Location     Type
 14736 ;;  sign            1    wreg     unsigned char 
 14737 ;;  val             4    6[BANK1 ] long 
 14738 ;; Auto vars:     Size  Location     Type
 14739 ;;  sign            1   14[BANK1 ] unsigned char 
 14740 ;;  arg             4   16[BANK1 ] unsigned long 
 14741 ;;  exp             1   15[BANK1 ] unsigned char 
 14742 ;; Return value:  Size  Location     Type
 14743 ;;                  4    6[BANK1 ] unsigned char 
 14744 ;; Registers used:
 14745 ;;		wreg, status,2, status,0
 14746 ;; Tracked objects:
 14747 ;;		On entry : 0/0
 14748 ;;		On exit  : 0/0
 14749 ;;		Unchanged: 0/0
 14750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14751 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14752 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14753 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14754 ;;      Totals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14755 ;;Total ram usage:       14 bytes
 14756 ;; Hardware stack levels used: 1
 14757 ;; Hardware stack levels required when called: 13
 14758 ;; This function calls:
 14759 ;;		Nothing
 14760 ;; This function is called by:
 14761 ;;		_lire_tension
 14762 ;;		_lire_courant
 14763 ;; This function uses a non-reentrant model
 14764 ;;
 14765                           
 14766                           	psect	text38
 14767   003FA4                     __ptext38:
 14768                           	callstack 0
 14769   003FA4                     ___xxtofl:
 14770                           	callstack 15
 14771                           
 14772                           ;incstack = 0
 14773                           ;___xxtofl@sign stored from wreg
 14774   003FA4  0101               	movlb	1	; () banked
 14775   003FA6  6F0E               	movwf	___xxtofl@sign& (0+255),b
 14776   003FA8  0101               	movlb	1	; () banked
 14777   003FAA  510E               	movf	___xxtofl@sign& (0+255),w,b
 14778   003FAC  B4D8               	btfsc	status,2,c
 14779   003FAE  EFDB  F01F         	goto	u8481
 14780   003FB2  EFDD  F01F         	goto	u8480
 14781   003FB6                     u8481:
 14782   003FB6  EFFF  F01F         	goto	l1536
 14783   003FBA                     u8480:
 14784   003FBA                     
 14785                           ; BSR set to: 1
 14786   003FBA  BF09               	btfsc	(___xxtofl@val+3)& (0+255),7,b
 14787   003FBC  EFE4  F01F         	goto	u8490
 14788   003FC0  EFE2  F01F         	goto	u8491
 14789   003FC4                     u8491:
 14790   003FC4  EFFF  F01F         	goto	l1536
 14791   003FC8                     u8490:
 14792   003FC8                     
 14793                           ; BSR set to: 1
 14794   003FC8  C106  F10A         	movff	___xxtofl@val,??___xxtofl
 14795   003FCC  C107  F10B         	movff	___xxtofl@val+1,??___xxtofl+1
 14796   003FD0  C108  F10C         	movff	___xxtofl@val+2,??___xxtofl+2
 14797   003FD4  C109  F10D         	movff	___xxtofl@val+3,??___xxtofl+3
 14798   003FD8  1F0A               	comf	??___xxtofl& (0+255),f,b
 14799   003FDA  1F0B               	comf	(??___xxtofl+1)& (0+255),f,b
 14800   003FDC  1F0C               	comf	(??___xxtofl+2)& (0+255),f,b
 14801   003FDE  1F0D               	comf	(??___xxtofl+3)& (0+255),f,b
 14802   003FE0  2B0A               	incf	??___xxtofl& (0+255),f,b
 14803   003FE2  0E00               	movlw	0
 14804   003FE4  230B               	addwfc	(??___xxtofl+1)& (0+255),f,b
 14805   003FE6  230C               	addwfc	(??___xxtofl+2)& (0+255),f,b
 14806   003FE8  230D               	addwfc	(??___xxtofl+3)& (0+255),f,b
 14807   003FEA  C10A  F110         	movff	??___xxtofl,___xxtofl@arg
 14808   003FEE  C10B  F111         	movff	??___xxtofl+1,___xxtofl@arg+1
 14809   003FF2  C10C  F112         	movff	??___xxtofl+2,___xxtofl@arg+2
 14810   003FF6  C10D  F113         	movff	??___xxtofl+3,___xxtofl@arg+3
 14811   003FFA  EF07  F020         	goto	l7712
 14812   003FFE                     l1536:
 14813                           
 14814                           ; BSR set to: 1
 14815   003FFE  C106  F110         	movff	___xxtofl@val,___xxtofl@arg
 14816   004002  C107  F111         	movff	___xxtofl@val+1,___xxtofl@arg+1
 14817   004006  C108  F112         	movff	___xxtofl@val+2,___xxtofl@arg+2
 14818   00400A  C109  F113         	movff	___xxtofl@val+3,___xxtofl@arg+3
 14819   00400E                     l7712:
 14820                           
 14821                           ; BSR set to: 1
 14822   00400E  5106               	movf	___xxtofl@val& (0+255),w,b
 14823   004010  1107               	iorwf	(___xxtofl@val+1)& (0+255),w,b
 14824   004012  1108               	iorwf	(___xxtofl@val+2)& (0+255),w,b
 14825   004014  1109               	iorwf	(___xxtofl@val+3)& (0+255),w,b
 14826   004016  A4D8               	btfss	status,2,c
 14827   004018  EF10  F020         	goto	u8501
 14828   00401C  EF12  F020         	goto	u8500
 14829   004020                     u8501:
 14830   004020  EF1C  F020         	goto	l7718
 14831   004024                     u8500:
 14832   004024                     
 14833                           ; BSR set to: 1
 14834   004024  0E00               	movlw	0
 14835   004026  6F06               	movwf	?___xxtofl& (0+255),b
 14836   004028  0E00               	movlw	0
 14837   00402A  6F07               	movwf	(?___xxtofl+1)& (0+255),b
 14838   00402C  0E00               	movlw	0
 14839   00402E  6F08               	movwf	(?___xxtofl+2)& (0+255),b
 14840   004030  0E00               	movlw	0
 14841   004032  6F09               	movwf	(?___xxtofl+3)& (0+255),b
 14842   004034  EFAD  F020         	goto	l1539
 14843   004038                     l7718:
 14844                           
 14845                           ; BSR set to: 1
 14846   004038  0E96               	movlw	150
 14847   00403A  6F0F               	movwf	___xxtofl@exp& (0+255),b
 14848   00403C  EF26  F020         	goto	l7722
 14849   004040                     l7720:
 14850                           
 14851                           ; BSR set to: 1
 14852   004040  2B0F               	incf	___xxtofl@exp& (0+255),f,b
 14853   004042  90D8               	bcf	status,0,c
 14854   004044  3313               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 14855   004046  3312               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 14856   004048  3311               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 14857   00404A  3310               	rrcf	___xxtofl@arg& (0+255),f,b
 14858   00404C                     l7722:
 14859                           
 14860                           ; BSR set to: 1
 14861   00404C  0E00               	movlw	0
 14862   00404E  1510               	andwf	___xxtofl@arg& (0+255),w,b
 14863   004050  6F0A               	movwf	??___xxtofl& (0+255),b
 14864   004052  0E00               	movlw	0
 14865   004054  1511               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 14866   004056  6F0B               	movwf	(??___xxtofl+1)& (0+255),b
 14867   004058  0E00               	movlw	0
 14868   00405A  1512               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 14869   00405C  6F0C               	movwf	(??___xxtofl+2)& (0+255),b
 14870   00405E  0EFE               	movlw	254
 14871   004060  1513               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 14872   004062  6F0D               	movwf	(??___xxtofl+3)& (0+255),b
 14873   004064  510A               	movf	??___xxtofl& (0+255),w,b
 14874   004066  110B               	iorwf	(??___xxtofl+1)& (0+255),w,b
 14875   004068  110C               	iorwf	(??___xxtofl+2)& (0+255),w,b
 14876   00406A  110D               	iorwf	(??___xxtofl+3)& (0+255),w,b
 14877   00406C  A4D8               	btfss	status,2,c
 14878   00406E  EF3B  F020         	goto	u8511
 14879   004072  EF3D  F020         	goto	u8510
 14880   004076                     u8511:
 14881   004076  EF20  F020         	goto	l7720
 14882   00407A                     u8510:
 14883   00407A  EF4B  F020         	goto	l1543
 14884   00407E                     l7724:
 14885                           
 14886                           ; BSR set to: 1
 14887   00407E  2B0F               	incf	___xxtofl@exp& (0+255),f,b
 14888   004080                     
 14889                           ; BSR set to: 1
 14890   004080  0E01               	movlw	1
 14891   004082  2710               	addwf	___xxtofl@arg& (0+255),f,b
 14892   004084  0E00               	movlw	0
 14893   004086  2311               	addwfc	(___xxtofl@arg+1)& (0+255),f,b
 14894   004088  2312               	addwfc	(___xxtofl@arg+2)& (0+255),f,b
 14895   00408A  2313               	addwfc	(___xxtofl@arg+3)& (0+255),f,b
 14896   00408C                     
 14897                           ; BSR set to: 1
 14898   00408C  90D8               	bcf	status,0,c
 14899   00408E  3313               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 14900   004090  3312               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 14901   004092  3311               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 14902   004094  3310               	rrcf	___xxtofl@arg& (0+255),f,b
 14903   004096                     l1543:
 14904                           
 14905                           ; BSR set to: 1
 14906   004096  0E00               	movlw	0
 14907   004098  1510               	andwf	___xxtofl@arg& (0+255),w,b
 14908   00409A  6F0A               	movwf	??___xxtofl& (0+255),b
 14909   00409C  0E00               	movlw	0
 14910   00409E  1511               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 14911   0040A0  6F0B               	movwf	(??___xxtofl+1)& (0+255),b
 14912   0040A2  0E00               	movlw	0
 14913   0040A4  1512               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 14914   0040A6  6F0C               	movwf	(??___xxtofl+2)& (0+255),b
 14915   0040A8  0EFF               	movlw	255
 14916   0040AA  1513               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 14917   0040AC  6F0D               	movwf	(??___xxtofl+3)& (0+255),b
 14918   0040AE  510A               	movf	??___xxtofl& (0+255),w,b
 14919   0040B0  110B               	iorwf	(??___xxtofl+1)& (0+255),w,b
 14920   0040B2  110C               	iorwf	(??___xxtofl+2)& (0+255),w,b
 14921   0040B4  110D               	iorwf	(??___xxtofl+3)& (0+255),w,b
 14922   0040B6  A4D8               	btfss	status,2,c
 14923   0040B8  EF60  F020         	goto	u8521
 14924   0040BC  EF62  F020         	goto	u8520
 14925   0040C0                     u8521:
 14926   0040C0  EF3F  F020         	goto	l7724
 14927   0040C4                     u8520:
 14928   0040C4  EF6A  F020         	goto	l7732
 14929   0040C8                     l7730:
 14930                           
 14931                           ; BSR set to: 1
 14932   0040C8  070F               	decf	___xxtofl@exp& (0+255),f,b
 14933   0040CA  90D8               	bcf	status,0,c
 14934   0040CC  3710               	rlcf	___xxtofl@arg& (0+255),f,b
 14935   0040CE  3711               	rlcf	(___xxtofl@arg+1)& (0+255),f,b
 14936   0040D0  3712               	rlcf	(___xxtofl@arg+2)& (0+255),f,b
 14937   0040D2  3713               	rlcf	(___xxtofl@arg+3)& (0+255),f,b
 14938   0040D4                     l7732:
 14939                           
 14940                           ; BSR set to: 1
 14941   0040D4  BF12               	btfsc	(___xxtofl@arg+2)& (0+255),7,b
 14942   0040D6  EF6F  F020         	goto	u8531
 14943   0040DA  EF71  F020         	goto	u8530
 14944   0040DE                     u8531:
 14945   0040DE  EF79  F020         	goto	l1550
 14946   0040E2                     u8530:
 14947   0040E2                     
 14948                           ; BSR set to: 1
 14949   0040E2  0E02               	movlw	2
 14950   0040E4  610F               	cpfslt	___xxtofl@exp& (0+255),b
 14951   0040E6  EF77  F020         	goto	u8541
 14952   0040EA  EF79  F020         	goto	u8540
 14953   0040EE                     u8541:
 14954   0040EE  EF64  F020         	goto	l7730
 14955   0040F2                     u8540:
 14956   0040F2                     l1550:
 14957                           
 14958                           ; BSR set to: 1
 14959   0040F2  B10F               	btfsc	___xxtofl@exp& (0+255),0,b
 14960   0040F4  EF7E  F020         	goto	u8551
 14961   0040F8  EF80  F020         	goto	u8550
 14962   0040FC                     u8551:
 14963   0040FC  EF81  F020         	goto	l7738
 14964   004100                     u8550:
 14965   004100                     
 14966                           ; BSR set to: 1
 14967   004100  9F12               	bcf	(___xxtofl@arg+2)& (0+255),7,b
 14968   004102                     l7738:
 14969                           
 14970                           ; BSR set to: 1
 14971   004102  90D8               	bcf	status,0,c
 14972   004104  330F               	rrcf	___xxtofl@exp& (0+255),f,b
 14973   004106                     
 14974                           ; BSR set to: 1
 14975   004106  C10F  F10A         	movff	___xxtofl@exp,??___xxtofl
 14976   00410A  6B0B               	clrf	(??___xxtofl+1)& (0+255),b
 14977   00410C  6B0C               	clrf	(??___xxtofl+2)& (0+255),b
 14978   00410E  6B0D               	clrf	(??___xxtofl+3)& (0+255),b
 14979   004110  C10A  F10D         	movff	??___xxtofl,??___xxtofl+3
 14980   004114  6B0C               	clrf	(??___xxtofl+2)& (0+255),b
 14981   004116  6B0B               	clrf	(??___xxtofl+1)& (0+255),b
 14982   004118  6B0A               	clrf	??___xxtofl& (0+255),b
 14983   00411A  510A               	movf	??___xxtofl& (0+255),w,b
 14984   00411C  1310               	iorwf	___xxtofl@arg& (0+255),f,b
 14985   00411E  510B               	movf	(??___xxtofl+1)& (0+255),w,b
 14986   004120  1311               	iorwf	(___xxtofl@arg+1)& (0+255),f,b
 14987   004122  510C               	movf	(??___xxtofl+2)& (0+255),w,b
 14988   004124  1312               	iorwf	(___xxtofl@arg+2)& (0+255),f,b
 14989   004126  510D               	movf	(??___xxtofl+3)& (0+255),w,b
 14990   004128  1313               	iorwf	(___xxtofl@arg+3)& (0+255),f,b
 14991   00412A                     
 14992                           ; BSR set to: 1
 14993   00412A  510E               	movf	___xxtofl@sign& (0+255),w,b
 14994   00412C  B4D8               	btfsc	status,2,c
 14995   00412E  EF9B  F020         	goto	u8561
 14996   004132  EF9D  F020         	goto	u8560
 14997   004136                     u8561:
 14998   004136  EFA5  F020         	goto	l7748
 14999   00413A                     u8560:
 15000   00413A                     
 15001                           ; BSR set to: 1
 15002   00413A  BF09               	btfsc	(___xxtofl@val+3)& (0+255),7,b
 15003   00413C  EFA4  F020         	goto	u8570
 15004   004140  EFA2  F020         	goto	u8571
 15005   004144                     u8571:
 15006   004144  EFA5  F020         	goto	l7748
 15007   004148                     u8570:
 15008   004148                     
 15009                           ; BSR set to: 1
 15010   004148  8F13               	bsf	(___xxtofl@arg+3)& (0+255),7,b
 15011   00414A                     l7748:
 15012                           
 15013                           ; BSR set to: 1
 15014   00414A  C110  F106         	movff	___xxtofl@arg,?___xxtofl
 15015   00414E  C111  F107         	movff	___xxtofl@arg+1,?___xxtofl+1
 15016   004152  C112  F108         	movff	___xxtofl@arg+2,?___xxtofl+2
 15017   004156  C113  F109         	movff	___xxtofl@arg+3,?___xxtofl+3
 15018   00415A                     l1539:
 15019                           
 15020                           ; BSR set to: 1
 15021   00415A  0012               	return		;funcret
 15022   00415C                     __end_of___xxtofl:
 15023                           	callstack 0
 15024                           
 15025 ;; *************** function ___flmul *****************
 15026 ;; Defined at:
 15027 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\sprcmul.c"
 15028 ;; Parameters:    Size  Location     Type
 15029 ;;  b               4   20[BANK1 ] unsigned char 
 15030 ;;  a               4   24[BANK1 ] unsigned char 
 15031 ;; Auto vars:     Size  Location     Type
 15032 ;;  prod            4   39[BANK1 ] struct .
 15033 ;;  grs             4   33[BANK1 ] unsigned long 
 15034 ;;  temp            2   43[BANK1 ] struct .
 15035 ;;  bexp            1   38[BANK1 ] unsigned char 
 15036 ;;  aexp            1   37[BANK1 ] unsigned char 
 15037 ;;  sign            1   32[BANK1 ] unsigned char 
 15038 ;; Return value:  Size  Location     Type
 15039 ;;                  4   20[BANK1 ] unsigned char 
 15040 ;; Registers used:
 15041 ;;		wreg, status,2, status,0, prodl, prodh
 15042 ;; Tracked objects:
 15043 ;;		On entry : 0/0
 15044 ;;		On exit  : 0/0
 15045 ;;		Unchanged: 0/0
 15046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15047 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15048 ;;      Locals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15049 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15050 ;;      Totals:         0       0      25       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15051 ;;Total ram usage:       25 bytes
 15052 ;; Hardware stack levels used: 1
 15053 ;; Hardware stack levels required when called: 13
 15054 ;; This function calls:
 15055 ;;		Nothing
 15056 ;; This function is called by:
 15057 ;;		_lire_tension
 15058 ;;		_efgtoa
 15059 ;; This function uses a non-reentrant model
 15060 ;;
 15061                           
 15062                           	psect	text39
 15063   001FF8                     __ptext39:
 15064                           	callstack 0
 15065   001FF8                     ___flmul:
 15066                           	callstack 12
 15067   001FF8  0101               	movlb	1	; () banked
 15068   001FFA  5117               	movf	(___flmul@b+3)& (0+255),w,b
 15069   001FFC  0B80               	andlw	128
 15070   001FFE  6F20               	movwf	___flmul@sign& (0+255),b
 15071   002000  5117               	movf	(___flmul@b+3)& (0+255),w,b
 15072   002002  2517               	addwf	(___flmul@b+3)& (0+255),w,b
 15073   002004  6F26               	movwf	___flmul@bexp& (0+255),b
 15074   002006                     
 15075                           ; BSR set to: 1
 15076   002006  AF16               	btfss	(___flmul@b+2)& (0+255),7,b
 15077   002008  EF08  F010         	goto	u7011
 15078   00200C  EF0A  F010         	goto	u7010
 15079   002010                     u7011:
 15080   002010  EF0B  F010         	goto	l6604
 15081   002014                     u7010:
 15082   002014                     
 15083                           ; BSR set to: 1
 15084   002014  8126               	bsf	___flmul@bexp& (0+255),0,b
 15085   002016                     l6604:
 15086                           
 15087                           ; BSR set to: 1
 15088   002016  5126               	movf	___flmul@bexp& (0+255),w,b
 15089   002018  B4D8               	btfsc	status,2,c
 15090   00201A  EF11  F010         	goto	u7021
 15091   00201E  EF13  F010         	goto	u7020
 15092   002022                     u7021:
 15093   002022  EF26  F010         	goto	l6612
 15094   002026                     u7020:
 15095   002026                     
 15096                           ; BSR set to: 1
 15097   002026  2926               	incf	___flmul@bexp& (0+255),w,b
 15098   002028  A4D8               	btfss	status,2,c
 15099   00202A  EF19  F010         	goto	u7031
 15100   00202E  EF1B  F010         	goto	u7030
 15101   002032                     u7031:
 15102   002032  EF23  F010         	goto	l6610
 15103   002036                     u7030:
 15104   002036                     
 15105                           ; BSR set to: 1
 15106   002036  0E00               	movlw	0
 15107   002038  6F14               	movwf	___flmul@b& (0+255),b
 15108   00203A  0E00               	movlw	0
 15109   00203C  6F15               	movwf	(___flmul@b+1)& (0+255),b
 15110   00203E  0E00               	movlw	0
 15111   002040  6F16               	movwf	(___flmul@b+2)& (0+255),b
 15112   002042  0E00               	movlw	0
 15113   002044  6F17               	movwf	(___flmul@b+3)& (0+255),b
 15114   002046                     l6610:
 15115                           
 15116                           ; BSR set to: 1
 15117   002046  8F16               	bsf	(___flmul@b+2)& (0+255),7,b
 15118   002048  EF2E  F010         	goto	l6614
 15119   00204C                     l6612:
 15120                           
 15121                           ; BSR set to: 1
 15122   00204C  0E00               	movlw	0
 15123   00204E  6F14               	movwf	___flmul@b& (0+255),b
 15124   002050  0E00               	movlw	0
 15125   002052  6F15               	movwf	(___flmul@b+1)& (0+255),b
 15126   002054  0E00               	movlw	0
 15127   002056  6F16               	movwf	(___flmul@b+2)& (0+255),b
 15128   002058  0E00               	movlw	0
 15129   00205A  6F17               	movwf	(___flmul@b+3)& (0+255),b
 15130   00205C                     l6614:
 15131                           
 15132                           ; BSR set to: 1
 15133   00205C  511B               	movf	(___flmul@a+3)& (0+255),w,b
 15134   00205E  0B80               	andlw	128
 15135   002060  1B20               	xorwf	___flmul@sign& (0+255),f,b
 15136   002062                     
 15137                           ; BSR set to: 1
 15138   002062  511B               	movf	(___flmul@a+3)& (0+255),w,b
 15139   002064  251B               	addwf	(___flmul@a+3)& (0+255),w,b
 15140   002066  6F25               	movwf	___flmul@aexp& (0+255),b
 15141   002068                     
 15142                           ; BSR set to: 1
 15143   002068  AF1A               	btfss	(___flmul@a+2)& (0+255),7,b
 15144   00206A  EF39  F010         	goto	u7041
 15145   00206E  EF3B  F010         	goto	u7040
 15146   002072                     u7041:
 15147   002072  EF3C  F010         	goto	l6622
 15148   002076                     u7040:
 15149   002076                     
 15150                           ; BSR set to: 1
 15151   002076  8125               	bsf	___flmul@aexp& (0+255),0,b
 15152   002078                     l6622:
 15153                           
 15154                           ; BSR set to: 1
 15155   002078  5125               	movf	___flmul@aexp& (0+255),w,b
 15156   00207A  B4D8               	btfsc	status,2,c
 15157   00207C  EF42  F010         	goto	u7051
 15158   002080  EF44  F010         	goto	u7050
 15159   002084                     u7051:
 15160   002084  EF57  F010         	goto	l6630
 15161   002088                     u7050:
 15162   002088                     
 15163                           ; BSR set to: 1
 15164   002088  2925               	incf	___flmul@aexp& (0+255),w,b
 15165   00208A  A4D8               	btfss	status,2,c
 15166   00208C  EF4A  F010         	goto	u7061
 15167   002090  EF4C  F010         	goto	u7060
 15168   002094                     u7061:
 15169   002094  EF54  F010         	goto	l6628
 15170   002098                     u7060:
 15171   002098                     
 15172                           ; BSR set to: 1
 15173   002098  0E00               	movlw	0
 15174   00209A  6F18               	movwf	___flmul@a& (0+255),b
 15175   00209C  0E00               	movlw	0
 15176   00209E  6F19               	movwf	(___flmul@a+1)& (0+255),b
 15177   0020A0  0E00               	movlw	0
 15178   0020A2  6F1A               	movwf	(___flmul@a+2)& (0+255),b
 15179   0020A4  0E00               	movlw	0
 15180   0020A6  6F1B               	movwf	(___flmul@a+3)& (0+255),b
 15181   0020A8                     l6628:
 15182                           
 15183                           ; BSR set to: 1
 15184   0020A8  8F1A               	bsf	(___flmul@a+2)& (0+255),7,b
 15185   0020AA  EF5F  F010         	goto	l1495
 15186   0020AE                     l6630:
 15187                           
 15188                           ; BSR set to: 1
 15189   0020AE  0E00               	movlw	0
 15190   0020B0  6F18               	movwf	___flmul@a& (0+255),b
 15191   0020B2  0E00               	movlw	0
 15192   0020B4  6F19               	movwf	(___flmul@a+1)& (0+255),b
 15193   0020B6  0E00               	movlw	0
 15194   0020B8  6F1A               	movwf	(___flmul@a+2)& (0+255),b
 15195   0020BA  0E00               	movlw	0
 15196   0020BC  6F1B               	movwf	(___flmul@a+3)& (0+255),b
 15197   0020BE                     l1495:
 15198                           
 15199                           ; BSR set to: 1
 15200   0020BE  5125               	movf	___flmul@aexp& (0+255),w,b
 15201   0020C0  B4D8               	btfsc	status,2,c
 15202   0020C2  EF65  F010         	goto	u7071
 15203   0020C6  EF67  F010         	goto	u7070
 15204   0020CA                     u7071:
 15205   0020CA  EF6F  F010         	goto	l6634
 15206   0020CE                     u7070:
 15207   0020CE                     
 15208                           ; BSR set to: 1
 15209   0020CE  5126               	movf	___flmul@bexp& (0+255),w,b
 15210   0020D0  A4D8               	btfss	status,2,c
 15211   0020D2  EF6D  F010         	goto	u7081
 15212   0020D6  EF6F  F010         	goto	u7080
 15213   0020DA                     u7081:
 15214   0020DA  EF79  F010         	goto	l6638
 15215   0020DE                     u7080:
 15216   0020DE                     l6634:
 15217                           
 15218                           ; BSR set to: 1
 15219   0020DE  0E00               	movlw	0
 15220   0020E0  6F14               	movwf	?___flmul& (0+255),b
 15221   0020E2  0E00               	movlw	0
 15222   0020E4  6F15               	movwf	(?___flmul+1)& (0+255),b
 15223   0020E6  0E00               	movlw	0
 15224   0020E8  6F16               	movwf	(?___flmul+2)& (0+255),b
 15225   0020EA  0E00               	movlw	0
 15226   0020EC  6F17               	movwf	(?___flmul+3)& (0+255),b
 15227   0020EE  EF21  F012         	goto	l1499
 15228   0020F2                     l6638:
 15229                           
 15230                           ; BSR set to: 1
 15231   0020F2  511A               	movf	(___flmul@a+2)& (0+255),w,b
 15232   0020F4  0314               	mulwf	___flmul@b& (0+255),b
 15233   0020F6  006F FFCC  F12B    	movff	prodl,___flmul@temp
 15234   0020FC  006F FFD0  F12C    	movff	prodh,___flmul@temp+1
 15235   002102                     
 15236                           ; BSR set to: 1
 15237   002102  512B               	movf	___flmul@temp& (0+255),w,b
 15238   002104  6F21               	movwf	___flmul@grs& (0+255),b
 15239   002106  6B22               	clrf	(___flmul@grs+1)& (0+255),b
 15240   002108  6B23               	clrf	(___flmul@grs+2)& (0+255),b
 15241   00210A  6B24               	clrf	(___flmul@grs+3)& (0+255),b
 15242   00210C                     
 15243                           ; BSR set to: 1
 15244   00210C  512C               	movf	(___flmul@temp+1)& (0+255),w,b
 15245   00210E  6F27               	movwf	___flmul@prod& (0+255),b
 15246   002110  6B28               	clrf	(___flmul@prod+1)& (0+255),b
 15247   002112  6B29               	clrf	(___flmul@prod+2)& (0+255),b
 15248   002114  6B2A               	clrf	(___flmul@prod+3)& (0+255),b
 15249   002116  5119               	movf	(___flmul@a+1)& (0+255),w,b
 15250   002118  0315               	mulwf	(___flmul@b+1)& (0+255),b
 15251   00211A  006F FFCC  F12B    	movff	prodl,___flmul@temp
 15252   002120  006F FFD0  F12C    	movff	prodh,___flmul@temp+1
 15253   002126                     
 15254                           ; BSR set to: 1
 15255   002126  512B               	movf	___flmul@temp& (0+255),w,b
 15256   002128  2721               	addwf	___flmul@grs& (0+255),f,b
 15257   00212A  0E00               	movlw	0
 15258   00212C  2322               	addwfc	(___flmul@grs+1)& (0+255),f,b
 15259   00212E  2323               	addwfc	(___flmul@grs+2)& (0+255),f,b
 15260   002130  2324               	addwfc	(___flmul@grs+3)& (0+255),f,b
 15261   002132                     
 15262                           ; BSR set to: 1
 15263   002132  512C               	movf	(___flmul@temp+1)& (0+255),w,b
 15264   002134  2727               	addwf	___flmul@prod& (0+255),f,b
 15265   002136  0E00               	movlw	0
 15266   002138  2328               	addwfc	(___flmul@prod+1)& (0+255),f,b
 15267   00213A  2329               	addwfc	(___flmul@prod+2)& (0+255),f,b
 15268   00213C  232A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 15269   00213E  5118               	movf	___flmul@a& (0+255),w,b
 15270   002140  0316               	mulwf	(___flmul@b+2)& (0+255),b
 15271   002142  006F FFCC  F12B    	movff	prodl,___flmul@temp
 15272   002148  006F FFD0  F12C    	movff	prodh,___flmul@temp+1
 15273   00214E                     
 15274                           ; BSR set to: 1
 15275   00214E  512B               	movf	___flmul@temp& (0+255),w,b
 15276   002150  2721               	addwf	___flmul@grs& (0+255),f,b
 15277   002152  0E00               	movlw	0
 15278   002154  2322               	addwfc	(___flmul@grs+1)& (0+255),f,b
 15279   002156  2323               	addwfc	(___flmul@grs+2)& (0+255),f,b
 15280   002158  2324               	addwfc	(___flmul@grs+3)& (0+255),f,b
 15281   00215A                     
 15282                           ; BSR set to: 1
 15283   00215A  512C               	movf	(___flmul@temp+1)& (0+255),w,b
 15284   00215C  2727               	addwf	___flmul@prod& (0+255),f,b
 15285   00215E  0E00               	movlw	0
 15286   002160  2328               	addwfc	(___flmul@prod+1)& (0+255),f,b
 15287   002162  2329               	addwfc	(___flmul@prod+2)& (0+255),f,b
 15288   002164  232A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 15289   002166                     
 15290                           ; BSR set to: 1
 15291   002166  C123  F124         	movff	___flmul@grs+2,___flmul@grs+3
 15292   00216A  C122  F123         	movff	___flmul@grs+1,___flmul@grs+2
 15293   00216E  C121  F122         	movff	___flmul@grs,___flmul@grs+1
 15294   002172  6B21               	clrf	___flmul@grs& (0+255),b
 15295   002174                     
 15296                           ; BSR set to: 1
 15297   002174  5118               	movf	___flmul@a& (0+255),w,b
 15298   002176  0315               	mulwf	(___flmul@b+1)& (0+255),b
 15299   002178  006F FFCC  F12B    	movff	prodl,___flmul@temp
 15300   00217E  006F FFD0  F12C    	movff	prodh,___flmul@temp+1
 15301   002184                     
 15302                           ; BSR set to: 1
 15303   002184  512B               	movf	___flmul@temp& (0+255),w,b
 15304   002186  2721               	addwf	___flmul@grs& (0+255),f,b
 15305   002188  512C               	movf	(___flmul@temp+1)& (0+255),w,b
 15306   00218A  2322               	addwfc	(___flmul@grs+1)& (0+255),f,b
 15307   00218C  0E00               	movlw	0
 15308   00218E  2323               	addwfc	(___flmul@grs+2)& (0+255),f,b
 15309   002190  0E00               	movlw	0
 15310   002192  2324               	addwfc	(___flmul@grs+3)& (0+255),f,b
 15311   002194                     
 15312                           ; BSR set to: 1
 15313   002194  5119               	movf	(___flmul@a+1)& (0+255),w,b
 15314   002196  0314               	mulwf	___flmul@b& (0+255),b
 15315   002198  006F FFCC  F12B    	movff	prodl,___flmul@temp
 15316   00219E  006F FFD0  F12C    	movff	prodh,___flmul@temp+1
 15317   0021A4                     
 15318                           ; BSR set to: 1
 15319   0021A4  512B               	movf	___flmul@temp& (0+255),w,b
 15320   0021A6  2721               	addwf	___flmul@grs& (0+255),f,b
 15321   0021A8  512C               	movf	(___flmul@temp+1)& (0+255),w,b
 15322   0021AA  2322               	addwfc	(___flmul@grs+1)& (0+255),f,b
 15323   0021AC  0E00               	movlw	0
 15324   0021AE  2323               	addwfc	(___flmul@grs+2)& (0+255),f,b
 15325   0021B0  0E00               	movlw	0
 15326   0021B2  2324               	addwfc	(___flmul@grs+3)& (0+255),f,b
 15327   0021B4                     
 15328                           ; BSR set to: 1
 15329   0021B4  C123  F124         	movff	___flmul@grs+2,___flmul@grs+3
 15330   0021B8  C122  F123         	movff	___flmul@grs+1,___flmul@grs+2
 15331   0021BC  C121  F122         	movff	___flmul@grs,___flmul@grs+1
 15332   0021C0  6B21               	clrf	___flmul@grs& (0+255),b
 15333   0021C2  5118               	movf	___flmul@a& (0+255),w,b
 15334   0021C4  0314               	mulwf	___flmul@b& (0+255),b
 15335   0021C6  006F FFCC  F12B    	movff	prodl,___flmul@temp
 15336   0021CC  006F FFD0  F12C    	movff	prodh,___flmul@temp+1
 15337   0021D2                     
 15338                           ; BSR set to: 1
 15339   0021D2  512B               	movf	___flmul@temp& (0+255),w,b
 15340   0021D4  2721               	addwf	___flmul@grs& (0+255),f,b
 15341   0021D6  512C               	movf	(___flmul@temp+1)& (0+255),w,b
 15342   0021D8  2322               	addwfc	(___flmul@grs+1)& (0+255),f,b
 15343   0021DA  0E00               	movlw	0
 15344   0021DC  2323               	addwfc	(___flmul@grs+2)& (0+255),f,b
 15345   0021DE  0E00               	movlw	0
 15346   0021E0  2324               	addwfc	(___flmul@grs+3)& (0+255),f,b
 15347   0021E2                     
 15348                           ; BSR set to: 1
 15349   0021E2  511A               	movf	(___flmul@a+2)& (0+255),w,b
 15350   0021E4  0315               	mulwf	(___flmul@b+1)& (0+255),b
 15351   0021E6  006F FFCC  F12B    	movff	prodl,___flmul@temp
 15352   0021EC  006F FFD0  F12C    	movff	prodh,___flmul@temp+1
 15353   0021F2  512B               	movf	___flmul@temp& (0+255),w,b
 15354   0021F4  2727               	addwf	___flmul@prod& (0+255),f,b
 15355   0021F6  512C               	movf	(___flmul@temp+1)& (0+255),w,b
 15356   0021F8  2328               	addwfc	(___flmul@prod+1)& (0+255),f,b
 15357   0021FA  0E00               	movlw	0
 15358   0021FC  2329               	addwfc	(___flmul@prod+2)& (0+255),f,b
 15359   0021FE  0E00               	movlw	0
 15360   002200  232A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 15361   002202                     
 15362                           ; BSR set to: 1
 15363   002202  5119               	movf	(___flmul@a+1)& (0+255),w,b
 15364   002204  0316               	mulwf	(___flmul@b+2)& (0+255),b
 15365   002206  006F FFCC  F12B    	movff	prodl,___flmul@temp
 15366   00220C  006F FFD0  F12C    	movff	prodh,___flmul@temp+1
 15367   002212                     
 15368                           ; BSR set to: 1
 15369   002212  512B               	movf	___flmul@temp& (0+255),w,b
 15370   002214  2727               	addwf	___flmul@prod& (0+255),f,b
 15371   002216  512C               	movf	(___flmul@temp+1)& (0+255),w,b
 15372   002218  2328               	addwfc	(___flmul@prod+1)& (0+255),f,b
 15373   00221A  0E00               	movlw	0
 15374   00221C  2329               	addwfc	(___flmul@prod+2)& (0+255),f,b
 15375   00221E  0E00               	movlw	0
 15376   002220  232A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 15377   002222  511A               	movf	(___flmul@a+2)& (0+255),w,b
 15378   002224  0316               	mulwf	(___flmul@b+2)& (0+255),b
 15379   002226  006F FFCC  F12B    	movff	prodl,___flmul@temp
 15380   00222C  006F FFD0  F12C    	movff	prodh,___flmul@temp+1
 15381   002232                     
 15382                           ; BSR set to: 1
 15383   002232  512B               	movf	___flmul@temp& (0+255),w,b
 15384   002234  6F1C               	movwf	??___flmul& (0+255),b
 15385   002236  512C               	movf	(___flmul@temp+1)& (0+255),w,b
 15386   002238  6F1D               	movwf	(??___flmul+1)& (0+255),b
 15387   00223A  6B1E               	clrf	(??___flmul+2)& (0+255),b
 15388   00223C  6B1F               	clrf	(??___flmul+3)& (0+255),b
 15389   00223E  C11E  F11F         	movff	??___flmul+2,??___flmul+3
 15390   002242  C11D  F11E         	movff	??___flmul+1,??___flmul+2
 15391   002246  C11C  F11D         	movff	??___flmul,??___flmul+1
 15392   00224A  6B1C               	clrf	??___flmul& (0+255),b
 15393   00224C  511C               	movf	??___flmul& (0+255),w,b
 15394   00224E  2727               	addwf	___flmul@prod& (0+255),f,b
 15395   002250  511D               	movf	(??___flmul+1)& (0+255),w,b
 15396   002252  2328               	addwfc	(___flmul@prod+1)& (0+255),f,b
 15397   002254  511E               	movf	(??___flmul+2)& (0+255),w,b
 15398   002256  2329               	addwfc	(___flmul@prod+2)& (0+255),f,b
 15399   002258  511F               	movf	(??___flmul+3)& (0+255),w,b
 15400   00225A  232A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 15401   00225C                     
 15402                           ; BSR set to: 1
 15403   00225C  C121  F11C         	movff	___flmul@grs,??___flmul
 15404   002260  C122  F11D         	movff	___flmul@grs+1,??___flmul+1
 15405   002264  C123  F11E         	movff	___flmul@grs+2,??___flmul+2
 15406   002268  C124  F11F         	movff	___flmul@grs+3,??___flmul+3
 15407   00226C  0E19               	movlw	25
 15408   00226E  EF3E  F011         	goto	u7090
 15409   002272                     u7095:
 15410   002272  90D8               	bcf	status,0,c
 15411   002274  331F               	rrcf	(??___flmul+3)& (0+255),f,b
 15412   002276  331E               	rrcf	(??___flmul+2)& (0+255),f,b
 15413   002278  331D               	rrcf	(??___flmul+1)& (0+255),f,b
 15414   00227A  331C               	rrcf	??___flmul& (0+255),f,b
 15415   00227C                     u7090:
 15416   00227C  2EE8               	decfsz	wreg,f,c
 15417   00227E  EF39  F011         	goto	u7095
 15418   002282  511C               	movf	??___flmul& (0+255),w,b
 15419   002284  2727               	addwf	___flmul@prod& (0+255),f,b
 15420   002286  511D               	movf	(??___flmul+1)& (0+255),w,b
 15421   002288  2328               	addwfc	(___flmul@prod+1)& (0+255),f,b
 15422   00228A  511E               	movf	(??___flmul+2)& (0+255),w,b
 15423   00228C  2329               	addwfc	(___flmul@prod+2)& (0+255),f,b
 15424   00228E  511F               	movf	(??___flmul+3)& (0+255),w,b
 15425   002290  232A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 15426   002292                     
 15427                           ; BSR set to: 1
 15428   002292  C123  F124         	movff	___flmul@grs+2,___flmul@grs+3
 15429   002296  C122  F123         	movff	___flmul@grs+1,___flmul@grs+2
 15430   00229A  C121  F122         	movff	___flmul@grs,___flmul@grs+1
 15431   00229E  6B21               	clrf	___flmul@grs& (0+255),b
 15432   0022A0                     
 15433                           ; BSR set to: 1
 15434   0022A0  5125               	movf	___flmul@aexp& (0+255),w,b
 15435   0022A2  C126  F11C         	movff	___flmul@bexp,??___flmul
 15436   0022A6  6B1D               	clrf	(??___flmul+1)& (0+255),b
 15437   0022A8  271C               	addwf	??___flmul& (0+255),f,b
 15438   0022AA  0E00               	movlw	0
 15439   0022AC  231D               	addwfc	(??___flmul+1)& (0+255),f,b
 15440   0022AE  0E82               	movlw	130
 15441   0022B0  251C               	addwf	??___flmul& (0+255),w,b
 15442   0022B2  6F2B               	movwf	___flmul@temp& (0+255),b
 15443   0022B4  0EFF               	movlw	255
 15444   0022B6  211D               	addwfc	(??___flmul+1)& (0+255),w,b
 15445   0022B8  6F2C               	movwf	(___flmul@temp+1)& (0+255),b
 15446   0022BA  EF74  F011         	goto	l6686
 15447   0022BE                     l6680:
 15448                           
 15449                           ; BSR set to: 1
 15450   0022BE  90D8               	bcf	status,0,c
 15451   0022C0  3727               	rlcf	___flmul@prod& (0+255),f,b
 15452   0022C2  3728               	rlcf	(___flmul@prod+1)& (0+255),f,b
 15453   0022C4  3729               	rlcf	(___flmul@prod+2)& (0+255),f,b
 15454   0022C6  372A               	rlcf	(___flmul@prod+3)& (0+255),f,b
 15455   0022C8                     
 15456                           ; BSR set to: 1
 15457   0022C8  AF24               	btfss	(___flmul@grs+3)& (0+255),7,b
 15458   0022CA  EF69  F011         	goto	u7101
 15459   0022CE  EF6B  F011         	goto	u7100
 15460   0022D2                     u7101:
 15461   0022D2  EF6C  F011         	goto	l1502
 15462   0022D6                     u7100:
 15463   0022D6                     
 15464                           ; BSR set to: 1
 15465   0022D6  8127               	bsf	___flmul@prod& (0+255),0,b
 15466   0022D8                     l1502:
 15467                           
 15468                           ; BSR set to: 1
 15469   0022D8  90D8               	bcf	status,0,c
 15470   0022DA  3721               	rlcf	___flmul@grs& (0+255),f,b
 15471   0022DC  3722               	rlcf	(___flmul@grs+1)& (0+255),f,b
 15472   0022DE  3723               	rlcf	(___flmul@grs+2)& (0+255),f,b
 15473   0022E0  3724               	rlcf	(___flmul@grs+3)& (0+255),f,b
 15474   0022E2  072B               	decf	___flmul@temp& (0+255),f,b
 15475   0022E4  A0D8               	btfss	status,0,c
 15476   0022E6  072C               	decf	(___flmul@temp+1)& (0+255),f,b
 15477   0022E8                     l6686:
 15478                           
 15479                           ; BSR set to: 1
 15480   0022E8  AF29               	btfss	(___flmul@prod+2)& (0+255),7,b
 15481   0022EA  EF79  F011         	goto	u7111
 15482   0022EE  EF7B  F011         	goto	u7110
 15483   0022F2                     u7111:
 15484   0022F2  EF5F  F011         	goto	l6680
 15485   0022F6                     u7110:
 15486   0022F6                     
 15487                           ; BSR set to: 1
 15488   0022F6  6B25               	clrf	___flmul@aexp& (0+255),b
 15489   0022F8  AF24               	btfss	(___flmul@grs+3)& (0+255),7,b
 15490   0022FA  EF81  F011         	goto	u7121
 15491   0022FE  EF83  F011         	goto	u7120
 15492   002302                     u7121:
 15493   002302  EFA7  F011         	goto	l1504
 15494   002306                     u7120:
 15495   002306                     
 15496                           ; BSR set to: 1
 15497   002306  0EFF               	movlw	255
 15498   002308  1521               	andwf	___flmul@grs& (0+255),w,b
 15499   00230A  6F1C               	movwf	??___flmul& (0+255),b
 15500   00230C  0EFF               	movlw	255
 15501   00230E  1522               	andwf	(___flmul@grs+1)& (0+255),w,b
 15502   002310  6F1D               	movwf	(??___flmul+1)& (0+255),b
 15503   002312  0EFF               	movlw	255
 15504   002314  1523               	andwf	(___flmul@grs+2)& (0+255),w,b
 15505   002316  6F1E               	movwf	(??___flmul+2)& (0+255),b
 15506   002318  0E7F               	movlw	127
 15507   00231A  1524               	andwf	(___flmul@grs+3)& (0+255),w,b
 15508   00231C  6F1F               	movwf	(??___flmul+3)& (0+255),b
 15509   00231E  511C               	movf	??___flmul& (0+255),w,b
 15510   002320  111D               	iorwf	(??___flmul+1)& (0+255),w,b
 15511   002322  111E               	iorwf	(??___flmul+2)& (0+255),w,b
 15512   002324  111F               	iorwf	(??___flmul+3)& (0+255),w,b
 15513   002326  B4D8               	btfsc	status,2,c
 15514   002328  EF98  F011         	goto	u7131
 15515   00232C  EF9A  F011         	goto	u7130
 15516   002330                     u7131:
 15517   002330  EF9E  F011         	goto	l1505
 15518   002334                     u7130:
 15519   002334                     l6690:
 15520                           
 15521                           ; BSR set to: 1
 15522   002334  0E01               	movlw	1
 15523   002336  6F25               	movwf	___flmul@aexp& (0+255),b
 15524   002338  EFA7  F011         	goto	l1504
 15525   00233C                     l1505:
 15526                           
 15527                           ; BSR set to: 1
 15528   00233C  A127               	btfss	___flmul@prod& (0+255),0,b
 15529   00233E  EFA3  F011         	goto	u7141
 15530   002342  EFA5  F011         	goto	u7140
 15531   002346                     u7141:
 15532   002346  EFA7  F011         	goto	l1504
 15533   00234A                     u7140:
 15534   00234A  EF9A  F011         	goto	l6690
 15535   00234E                     l1504:
 15536                           
 15537                           ; BSR set to: 1
 15538   00234E  5125               	movf	___flmul@aexp& (0+255),w,b
 15539   002350  B4D8               	btfsc	status,2,c
 15540   002352  EFAD  F011         	goto	u7151
 15541   002356  EFAF  F011         	goto	u7150
 15542   00235A                     u7151:
 15543   00235A  EFD3  F011         	goto	l6702
 15544   00235E                     u7150:
 15545   00235E                     
 15546                           ; BSR set to: 1
 15547   00235E  0E01               	movlw	1
 15548   002360  2727               	addwf	___flmul@prod& (0+255),f,b
 15549   002362  0E00               	movlw	0
 15550   002364  2328               	addwfc	(___flmul@prod+1)& (0+255),f,b
 15551   002366  2329               	addwfc	(___flmul@prod+2)& (0+255),f,b
 15552   002368  232A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 15553   00236A                     
 15554                           ; BSR set to: 1
 15555   00236A  A12A               	btfss	(___flmul@prod+3)& (0+255),0,b
 15556   00236C  EFBA  F011         	goto	u7161
 15557   002370  EFBC  F011         	goto	u7160
 15558   002374                     u7161:
 15559   002374  EFD3  F011         	goto	l6702
 15560   002378                     u7160:
 15561   002378                     
 15562                           ; BSR set to: 1
 15563   002378  C127  F11C         	movff	___flmul@prod,??___flmul
 15564   00237C  C128  F11D         	movff	___flmul@prod+1,??___flmul+1
 15565   002380  C129  F11E         	movff	___flmul@prod+2,??___flmul+2
 15566   002384  C12A  F11F         	movff	___flmul@prod+3,??___flmul+3
 15567   002388  351F               	rlcf	(??___flmul+3)& (0+255),w,b
 15568   00238A  331F               	rrcf	(??___flmul+3)& (0+255),f,b
 15569   00238C  331E               	rrcf	(??___flmul+2)& (0+255),f,b
 15570   00238E  331D               	rrcf	(??___flmul+1)& (0+255),f,b
 15571   002390  331C               	rrcf	??___flmul& (0+255),f,b
 15572   002392  C11C  F127         	movff	??___flmul,___flmul@prod
 15573   002396  C11D  F128         	movff	??___flmul+1,___flmul@prod+1
 15574   00239A  C11E  F129         	movff	??___flmul+2,___flmul@prod+2
 15575   00239E  C11F  F12A         	movff	??___flmul+3,___flmul@prod+3
 15576   0023A2                     
 15577                           ; BSR set to: 1
 15578   0023A2  4B2B               	infsnz	___flmul@temp& (0+255),f,b
 15579   0023A4  2B2C               	incf	(___flmul@temp+1)& (0+255),f,b
 15580   0023A6                     l6702:
 15581                           
 15582                           ; BSR set to: 1
 15583   0023A6  BF2C               	btfsc	(___flmul@temp+1)& (0+255),7,b
 15584   0023A8  EFDE  F011         	goto	u7171
 15585   0023AC  512C               	movf	(___flmul@temp+1)& (0+255),w,b
 15586   0023AE  E108               	bnz	u7170
 15587   0023B0  292B               	incf	___flmul@temp& (0+255),w,b
 15588   0023B2  A0D8               	btfss	status,0,c
 15589   0023B4  EFDE  F011         	goto	u7171
 15590   0023B8  EFE0  F011         	goto	u7170
 15591   0023BC                     u7171:
 15592   0023BC  EFEA  F011         	goto	l6706
 15593   0023C0                     u7170:
 15594   0023C0                     
 15595                           ; BSR set to: 1
 15596   0023C0  0E00               	movlw	0
 15597   0023C2  6F27               	movwf	___flmul@prod& (0+255),b
 15598   0023C4  0E00               	movlw	0
 15599   0023C6  6F28               	movwf	(___flmul@prod+1)& (0+255),b
 15600   0023C8  0E80               	movlw	128
 15601   0023CA  6F29               	movwf	(___flmul@prod+2)& (0+255),b
 15602   0023CC  0E7F               	movlw	127
 15603   0023CE  6F2A               	movwf	(___flmul@prod+3)& (0+255),b
 15604   0023D0  EF17  F012         	goto	l6720
 15605   0023D4                     l6706:
 15606                           
 15607                           ; BSR set to: 1
 15608   0023D4  BF2C               	btfsc	(___flmul@temp+1)& (0+255),7,b
 15609   0023D6  EFF7  F011         	goto	u7180
 15610   0023DA  512C               	movf	(___flmul@temp+1)& (0+255),w,b
 15611   0023DC  E106               	bnz	u7181
 15612   0023DE  052B               	decf	___flmul@temp& (0+255),w,b
 15613   0023E0  B0D8               	btfsc	status,0,c
 15614   0023E2  EFF5  F011         	goto	u7181
 15615   0023E6  EFF7  F011         	goto	u7180
 15616   0023EA                     u7181:
 15617   0023EA  EF02  F012         	goto	l1512
 15618   0023EE                     u7180:
 15619   0023EE                     
 15620                           ; BSR set to: 1
 15621   0023EE  0E00               	movlw	0
 15622   0023F0  6F27               	movwf	___flmul@prod& (0+255),b
 15623   0023F2  0E00               	movlw	0
 15624   0023F4  6F28               	movwf	(___flmul@prod+1)& (0+255),b
 15625   0023F6  0E00               	movlw	0
 15626   0023F8  6F29               	movwf	(___flmul@prod+2)& (0+255),b
 15627   0023FA  0E00               	movlw	0
 15628   0023FC  6F2A               	movwf	(___flmul@prod+3)& (0+255),b
 15629   0023FE                     
 15630                           ; BSR set to: 1
 15631   0023FE  6B20               	clrf	___flmul@sign& (0+255),b
 15632   002400  EF17  F012         	goto	l6720
 15633   002404                     l1512:
 15634                           
 15635                           ; BSR set to: 1
 15636   002404  C12B  F126         	movff	___flmul@temp,___flmul@bexp
 15637   002408                     
 15638                           ; BSR set to: 1
 15639   002408  0EFF               	movlw	255
 15640   00240A  1727               	andwf	___flmul@prod& (0+255),f,b
 15641   00240C  0EFF               	movlw	255
 15642   00240E  1728               	andwf	(___flmul@prod+1)& (0+255),f,b
 15643   002410  0E7F               	movlw	127
 15644   002412  1729               	andwf	(___flmul@prod+2)& (0+255),f,b
 15645   002414  0E00               	movlw	0
 15646   002416  172A               	andwf	(___flmul@prod+3)& (0+255),f,b
 15647   002418                     
 15648                           ; BSR set to: 1
 15649   002418  A126               	btfss	___flmul@bexp& (0+255),0,b
 15650   00241A  EF11  F012         	goto	u7191
 15651   00241E  EF13  F012         	goto	u7190
 15652   002422                     u7191:
 15653   002422  EF14  F012         	goto	l6718
 15654   002426                     u7190:
 15655   002426                     
 15656                           ; BSR set to: 1
 15657   002426  8F29               	bsf	(___flmul@prod+2)& (0+255),7,b
 15658   002428                     l6718:
 15659                           
 15660                           ; BSR set to: 1
 15661   002428  90D8               	bcf	status,0,c
 15662   00242A  3126               	rrcf	___flmul@bexp& (0+255),w,b
 15663   00242C  6F2A               	movwf	(___flmul@prod+3)& (0+255),b
 15664   00242E                     l6720:
 15665                           
 15666                           ; BSR set to: 1
 15667   00242E  5120               	movf	___flmul@sign& (0+255),w,b
 15668   002430  132A               	iorwf	(___flmul@prod+3)& (0+255),f,b
 15669   002432                     
 15670                           ; BSR set to: 1
 15671   002432  C127  F114         	movff	___flmul@prod,?___flmul
 15672   002436  C128  F115         	movff	___flmul@prod+1,?___flmul+1
 15673   00243A  C129  F116         	movff	___flmul@prod+2,?___flmul+2
 15674   00243E  C12A  F117         	movff	___flmul@prod+3,?___flmul+3
 15675   002442                     l1499:
 15676                           
 15677                           ; BSR set to: 1
 15678   002442  0012               	return		;funcret
 15679   002444                     __end_of___flmul:
 15680                           	callstack 0
 15681                           
 15682 ;; *************** function ___fldiv *****************
 15683 ;; Defined at:
 15684 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\sprcdiv.c"
 15685 ;; Parameters:    Size  Location     Type
 15686 ;;  b               4   45[BANK1 ] unsigned char 
 15687 ;;  a               4   49[BANK1 ] unsigned char 
 15688 ;; Auto vars:     Size  Location     Type
 15689 ;;  grs             4   64[BANK1 ] unsigned long 
 15690 ;;  rem             4   57[BANK1 ] unsigned long 
 15691 ;;  new_exp         2   62[BANK1 ] short 
 15692 ;;  aexp            1   69[BANK1 ] unsigned char 
 15693 ;;  bexp            1   68[BANK1 ] unsigned char 
 15694 ;;  sign            1   61[BANK1 ] unsigned char 
 15695 ;; Return value:  Size  Location     Type
 15696 ;;                  4   45[BANK1 ] unsigned char 
 15697 ;; Registers used:
 15698 ;;		wreg, status,2, status,0
 15699 ;; Tracked objects:
 15700 ;;		On entry : 0/0
 15701 ;;		On exit  : 0/0
 15702 ;;		Unchanged: 0/0
 15703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15704 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15705 ;;      Locals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15706 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15707 ;;      Totals:         0       0      25       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15708 ;;Total ram usage:       25 bytes
 15709 ;; Hardware stack levels used: 1
 15710 ;; Hardware stack levels required when called: 13
 15711 ;; This function calls:
 15712 ;;		Nothing
 15713 ;; This function is called by:
 15714 ;;		_lire_tension
 15715 ;;		_efgtoa
 15716 ;; This function uses a non-reentrant model
 15717 ;;
 15718                           
 15719                           	psect	text40
 15720   00288E                     __ptext40:
 15721                           	callstack 0
 15722   00288E                     ___fldiv:
 15723                           	callstack 12
 15724   00288E  0101               	movlb	1	; () banked
 15725   002890  5130               	movf	(___fldiv@b+3)& (0+255),w,b
 15726   002892  0B80               	andlw	128
 15727   002894  6F3D               	movwf	___fldiv@sign& (0+255),b
 15728   002896  5130               	movf	(___fldiv@b+3)& (0+255),w,b
 15729   002898  2530               	addwf	(___fldiv@b+3)& (0+255),w,b
 15730   00289A  6F44               	movwf	___fldiv@bexp& (0+255),b
 15731   00289C                     
 15732                           ; BSR set to: 1
 15733   00289C  AF2F               	btfss	(___fldiv@b+2)& (0+255),7,b
 15734   00289E  EF53  F014         	goto	u6781
 15735   0028A2  EF55  F014         	goto	u6780
 15736   0028A6                     u6781:
 15737   0028A6  EF56  F014         	goto	l6468
 15738   0028AA                     u6780:
 15739   0028AA                     
 15740                           ; BSR set to: 1
 15741   0028AA  8144               	bsf	___fldiv@bexp& (0+255),0,b
 15742   0028AC                     l6468:
 15743                           
 15744                           ; BSR set to: 1
 15745   0028AC  5144               	movf	___fldiv@bexp& (0+255),w,b
 15746   0028AE  B4D8               	btfsc	status,2,c
 15747   0028B0  EF5C  F014         	goto	u6791
 15748   0028B4  EF5E  F014         	goto	u6790
 15749   0028B8                     u6791:
 15750   0028B8  EF72  F014         	goto	l6478
 15751   0028BC                     u6790:
 15752   0028BC                     
 15753                           ; BSR set to: 1
 15754   0028BC  2944               	incf	___fldiv@bexp& (0+255),w,b
 15755   0028BE  A4D8               	btfss	status,2,c
 15756   0028C0  EF64  F014         	goto	u6801
 15757   0028C4  EF66  F014         	goto	u6800
 15758   0028C8                     u6801:
 15759   0028C8  EF6E  F014         	goto	l6474
 15760   0028CC                     u6800:
 15761   0028CC                     
 15762                           ; BSR set to: 1
 15763   0028CC  0E00               	movlw	0
 15764   0028CE  6F2D               	movwf	___fldiv@b& (0+255),b
 15765   0028D0  0E00               	movlw	0
 15766   0028D2  6F2E               	movwf	(___fldiv@b+1)& (0+255),b
 15767   0028D4  0E00               	movlw	0
 15768   0028D6  6F2F               	movwf	(___fldiv@b+2)& (0+255),b
 15769   0028D8  0E00               	movlw	0
 15770   0028DA  6F30               	movwf	(___fldiv@b+3)& (0+255),b
 15771   0028DC                     l6474:
 15772                           
 15773                           ; BSR set to: 1
 15774   0028DC  8F2F               	bsf	(___fldiv@b+2)& (0+255),7,b
 15775   0028DE                     
 15776                           ; BSR set to: 1
 15777   0028DE  6B30               	clrf	(___fldiv@b+3)& (0+255),b
 15778   0028E0  EF7A  F014         	goto	l6480
 15779   0028E4                     l6478:
 15780                           
 15781                           ; BSR set to: 1
 15782   0028E4  0E00               	movlw	0
 15783   0028E6  6F2D               	movwf	___fldiv@b& (0+255),b
 15784   0028E8  0E00               	movlw	0
 15785   0028EA  6F2E               	movwf	(___fldiv@b+1)& (0+255),b
 15786   0028EC  0E00               	movlw	0
 15787   0028EE  6F2F               	movwf	(___fldiv@b+2)& (0+255),b
 15788   0028F0  0E00               	movlw	0
 15789   0028F2  6F30               	movwf	(___fldiv@b+3)& (0+255),b
 15790   0028F4                     l6480:
 15791                           
 15792                           ; BSR set to: 1
 15793   0028F4  5134               	movf	(___fldiv@a+3)& (0+255),w,b
 15794   0028F6  0B80               	andlw	128
 15795   0028F8  1B3D               	xorwf	___fldiv@sign& (0+255),f,b
 15796   0028FA                     
 15797                           ; BSR set to: 1
 15798   0028FA  5134               	movf	(___fldiv@a+3)& (0+255),w,b
 15799   0028FC  2534               	addwf	(___fldiv@a+3)& (0+255),w,b
 15800   0028FE  6F45               	movwf	___fldiv@aexp& (0+255),b
 15801   002900                     
 15802                           ; BSR set to: 1
 15803   002900  AF33               	btfss	(___fldiv@a+2)& (0+255),7,b
 15804   002902  EF85  F014         	goto	u6811
 15805   002906  EF87  F014         	goto	u6810
 15806   00290A                     u6811:
 15807   00290A  EF88  F014         	goto	l6488
 15808   00290E                     u6810:
 15809   00290E                     
 15810                           ; BSR set to: 1
 15811   00290E  8145               	bsf	___fldiv@aexp& (0+255),0,b
 15812   002910                     l6488:
 15813                           
 15814                           ; BSR set to: 1
 15815   002910  5145               	movf	___fldiv@aexp& (0+255),w,b
 15816   002912  B4D8               	btfsc	status,2,c
 15817   002914  EF8E  F014         	goto	u6821
 15818   002918  EF90  F014         	goto	u6820
 15819   00291C                     u6821:
 15820   00291C  EFA4  F014         	goto	l6498
 15821   002920                     u6820:
 15822   002920                     
 15823                           ; BSR set to: 1
 15824   002920  2945               	incf	___fldiv@aexp& (0+255),w,b
 15825   002922  A4D8               	btfss	status,2,c
 15826   002924  EF96  F014         	goto	u6831
 15827   002928  EF98  F014         	goto	u6830
 15828   00292C                     u6831:
 15829   00292C  EFA0  F014         	goto	l6494
 15830   002930                     u6830:
 15831   002930                     
 15832                           ; BSR set to: 1
 15833   002930  0E00               	movlw	0
 15834   002932  6F31               	movwf	___fldiv@a& (0+255),b
 15835   002934  0E00               	movlw	0
 15836   002936  6F32               	movwf	(___fldiv@a+1)& (0+255),b
 15837   002938  0E00               	movlw	0
 15838   00293A  6F33               	movwf	(___fldiv@a+2)& (0+255),b
 15839   00293C  0E00               	movlw	0
 15840   00293E  6F34               	movwf	(___fldiv@a+3)& (0+255),b
 15841   002940                     l6494:
 15842                           
 15843                           ; BSR set to: 1
 15844   002940  8F33               	bsf	(___fldiv@a+2)& (0+255),7,b
 15845   002942                     
 15846                           ; BSR set to: 1
 15847   002942  6B34               	clrf	(___fldiv@a+3)& (0+255),b
 15848   002944  EFAC  F014         	goto	l6500
 15849   002948                     l6498:
 15850                           
 15851                           ; BSR set to: 1
 15852   002948  0E00               	movlw	0
 15853   00294A  6F31               	movwf	___fldiv@a& (0+255),b
 15854   00294C  0E00               	movlw	0
 15855   00294E  6F32               	movwf	(___fldiv@a+1)& (0+255),b
 15856   002950  0E00               	movlw	0
 15857   002952  6F33               	movwf	(___fldiv@a+2)& (0+255),b
 15858   002954  0E00               	movlw	0
 15859   002956  6F34               	movwf	(___fldiv@a+3)& (0+255),b
 15860   002958                     l6500:
 15861                           
 15862                           ; BSR set to: 1
 15863   002958  5131               	movf	___fldiv@a& (0+255),w,b
 15864   00295A  1132               	iorwf	(___fldiv@a+1)& (0+255),w,b
 15865   00295C  1133               	iorwf	(___fldiv@a+2)& (0+255),w,b
 15866   00295E  1134               	iorwf	(___fldiv@a+3)& (0+255),w,b
 15867   002960  A4D8               	btfss	status,2,c
 15868   002962  EFB5  F014         	goto	u6841
 15869   002966  EFB7  F014         	goto	u6840
 15870   00296A                     u6841:
 15871   00296A  EFCF  F014         	goto	l6512
 15872   00296E                     u6840:
 15873   00296E                     
 15874                           ; BSR set to: 1
 15875   00296E  0E00               	movlw	0
 15876   002970  6F2D               	movwf	___fldiv@b& (0+255),b
 15877   002972  0E00               	movlw	0
 15878   002974  6F2E               	movwf	(___fldiv@b+1)& (0+255),b
 15879   002976  0E00               	movlw	0
 15880   002978  6F2F               	movwf	(___fldiv@b+2)& (0+255),b
 15881   00297A  0E00               	movlw	0
 15882   00297C  6F30               	movwf	(___fldiv@b+3)& (0+255),b
 15883   00297E                     
 15884                           ; BSR set to: 1
 15885   00297E  0E80               	movlw	128
 15886   002980  132F               	iorwf	(___fldiv@b+2)& (0+255),f,b
 15887   002982  0E7F               	movlw	127
 15888   002984  1330               	iorwf	(___fldiv@b+3)& (0+255),f,b
 15889   002986                     l6506:
 15890                           
 15891                           ; BSR set to: 1
 15892   002986  513D               	movf	___fldiv@sign& (0+255),w,b
 15893   002988  1330               	iorwf	(___fldiv@b+3)& (0+255),f,b
 15894   00298A                     
 15895                           ; BSR set to: 1
 15896   00298A  C12D  F12D         	movff	___fldiv@b,?___fldiv
 15897   00298E  C12E  F12E         	movff	___fldiv@b+1,?___fldiv+1
 15898   002992  C12F  F12F         	movff	___fldiv@b+2,?___fldiv+2
 15899   002996  C130  F130         	movff	___fldiv@b+3,?___fldiv+3
 15900   00299A  EF0F  F016         	goto	l1463
 15901   00299E                     l6512:
 15902                           
 15903                           ; BSR set to: 1
 15904   00299E  5144               	movf	___fldiv@bexp& (0+255),w,b
 15905   0029A0  A4D8               	btfss	status,2,c
 15906   0029A2  EFD5  F014         	goto	u6851
 15907   0029A6  EFD7  F014         	goto	u6850
 15908   0029AA                     u6851:
 15909   0029AA  EFE1  F014         	goto	l6520
 15910   0029AE                     u6850:
 15911   0029AE                     
 15912                           ; BSR set to: 1
 15913   0029AE  0E00               	movlw	0
 15914   0029B0  6F2D               	movwf	?___fldiv& (0+255),b
 15915   0029B2  0E00               	movlw	0
 15916   0029B4  6F2E               	movwf	(?___fldiv+1)& (0+255),b
 15917   0029B6  0E00               	movlw	0
 15918   0029B8  6F2F               	movwf	(?___fldiv+2)& (0+255),b
 15919   0029BA  0E00               	movlw	0
 15920   0029BC  6F30               	movwf	(?___fldiv+3)& (0+255),b
 15921   0029BE  EF0F  F016         	goto	l1463
 15922   0029C2                     l6520:
 15923                           
 15924                           ; BSR set to: 1
 15925   0029C2  5145               	movf	___fldiv@aexp& (0+255),w,b
 15926   0029C4  C144  F135         	movff	___fldiv@bexp,??___fldiv
 15927   0029C8  6B36               	clrf	(??___fldiv+1)& (0+255),b
 15928   0029CA  5F35               	subwf	??___fldiv& (0+255),f,b
 15929   0029CC  0E00               	movlw	0
 15930   0029CE  5B36               	subwfb	(??___fldiv+1)& (0+255),f,b
 15931   0029D0  0E7F               	movlw	127
 15932   0029D2  2535               	addwf	??___fldiv& (0+255),w,b
 15933   0029D4  6F3E               	movwf	___fldiv@new_exp& (0+255),b
 15934   0029D6  0E00               	movlw	0
 15935   0029D8  2136               	addwfc	(??___fldiv+1)& (0+255),w,b
 15936   0029DA  6F3F               	movwf	(___fldiv@new_exp+1)& (0+255),b
 15937   0029DC                     
 15938                           ; BSR set to: 1
 15939   0029DC  C12D  F139         	movff	___fldiv@b,___fldiv@rem
 15940   0029E0  C12E  F13A         	movff	___fldiv@b+1,___fldiv@rem+1
 15941   0029E4  C12F  F13B         	movff	___fldiv@b+2,___fldiv@rem+2
 15942   0029E8  C130  F13C         	movff	___fldiv@b+3,___fldiv@rem+3
 15943   0029EC                     
 15944                           ; BSR set to: 1
 15945   0029EC  0E00               	movlw	0
 15946   0029EE  6F2D               	movwf	___fldiv@b& (0+255),b
 15947   0029F0  0E00               	movlw	0
 15948   0029F2  6F2E               	movwf	(___fldiv@b+1)& (0+255),b
 15949   0029F4  0E00               	movlw	0
 15950   0029F6  6F2F               	movwf	(___fldiv@b+2)& (0+255),b
 15951   0029F8  0E00               	movlw	0
 15952   0029FA  6F30               	movwf	(___fldiv@b+3)& (0+255),b
 15953   0029FC                     
 15954                           ; BSR set to: 1
 15955   0029FC  0E00               	movlw	0
 15956   0029FE  6F40               	movwf	___fldiv@grs& (0+255),b
 15957   002A00  0E00               	movlw	0
 15958   002A02  6F41               	movwf	(___fldiv@grs+1)& (0+255),b
 15959   002A04  0E00               	movlw	0
 15960   002A06  6F42               	movwf	(___fldiv@grs+2)& (0+255),b
 15961   002A08  0E00               	movlw	0
 15962   002A0A  6F43               	movwf	(___fldiv@grs+3)& (0+255),b
 15963   002A0C                     
 15964                           ; BSR set to: 1
 15965   002A0C  6B45               	clrf	___fldiv@aexp& (0+255),b
 15966   002A0E  EF41  F015         	goto	l1465
 15967   002A12                     l6530:
 15968                           
 15969                           ; BSR set to: 1
 15970   002A12  5145               	movf	___fldiv@aexp& (0+255),w,b
 15971   002A14  B4D8               	btfsc	status,2,c
 15972   002A16  EF0F  F015         	goto	u6861
 15973   002A1A  EF11  F015         	goto	u6860
 15974   002A1E                     u6861:
 15975   002A1E  EF28  F015         	goto	l6538
 15976   002A22                     u6860:
 15977   002A22                     
 15978                           ; BSR set to: 1
 15979   002A22  90D8               	bcf	status,0,c
 15980   002A24  3739               	rlcf	___fldiv@rem& (0+255),f,b
 15981   002A26  373A               	rlcf	(___fldiv@rem+1)& (0+255),f,b
 15982   002A28  373B               	rlcf	(___fldiv@rem+2)& (0+255),f,b
 15983   002A2A  373C               	rlcf	(___fldiv@rem+3)& (0+255),f,b
 15984   002A2C  90D8               	bcf	status,0,c
 15985   002A2E  372D               	rlcf	___fldiv@b& (0+255),f,b
 15986   002A30  372E               	rlcf	(___fldiv@b+1)& (0+255),f,b
 15987   002A32  372F               	rlcf	(___fldiv@b+2)& (0+255),f,b
 15988   002A34  3730               	rlcf	(___fldiv@b+3)& (0+255),f,b
 15989   002A36                     
 15990                           ; BSR set to: 1
 15991   002A36  AF43               	btfss	(___fldiv@grs+3)& (0+255),7,b
 15992   002A38  EF20  F015         	goto	u6871
 15993   002A3C  EF22  F015         	goto	u6870
 15994   002A40                     u6871:
 15995   002A40  EF23  F015         	goto	l1468
 15996   002A44                     u6870:
 15997   002A44                     
 15998                           ; BSR set to: 1
 15999   002A44  812D               	bsf	___fldiv@b& (0+255),0,b
 16000   002A46                     l1468:
 16001                           
 16002                           ; BSR set to: 1
 16003   002A46  90D8               	bcf	status,0,c
 16004   002A48  3740               	rlcf	___fldiv@grs& (0+255),f,b
 16005   002A4A  3741               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 16006   002A4C  3742               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 16007   002A4E  3743               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 16008   002A50                     l6538:
 16009                           
 16010                           ; BSR set to: 1
 16011   002A50  5131               	movf	___fldiv@a& (0+255),w,b
 16012   002A52  5D39               	subwf	___fldiv@rem& (0+255),w,b
 16013   002A54  5132               	movf	(___fldiv@a+1)& (0+255),w,b
 16014   002A56  593A               	subwfb	(___fldiv@rem+1)& (0+255),w,b
 16015   002A58  5133               	movf	(___fldiv@a+2)& (0+255),w,b
 16016   002A5A  593B               	subwfb	(___fldiv@rem+2)& (0+255),w,b
 16017   002A5C  5134               	movf	(___fldiv@a+3)& (0+255),w,b
 16018   002A5E  593C               	subwfb	(___fldiv@rem+3)& (0+255),w,b
 16019   002A60  A0D8               	btfss	status,0,c
 16020   002A62  EF35  F015         	goto	u6881
 16021   002A66  EF37  F015         	goto	u6880
 16022   002A6A                     u6881:
 16023   002A6A  EF40  F015         	goto	l6544
 16024   002A6E                     u6880:
 16025   002A6E                     
 16026                           ; BSR set to: 1
 16027   002A6E  8D43               	bsf	(___fldiv@grs+3)& (0+255),6,b
 16028   002A70                     
 16029                           ; BSR set to: 1
 16030   002A70  5131               	movf	___fldiv@a& (0+255),w,b
 16031   002A72  5F39               	subwf	___fldiv@rem& (0+255),f,b
 16032   002A74  5132               	movf	(___fldiv@a+1)& (0+255),w,b
 16033   002A76  5B3A               	subwfb	(___fldiv@rem+1)& (0+255),f,b
 16034   002A78  5133               	movf	(___fldiv@a+2)& (0+255),w,b
 16035   002A7A  5B3B               	subwfb	(___fldiv@rem+2)& (0+255),f,b
 16036   002A7C  5134               	movf	(___fldiv@a+3)& (0+255),w,b
 16037   002A7E  5B3C               	subwfb	(___fldiv@rem+3)& (0+255),f,b
 16038   002A80                     l6544:
 16039                           
 16040                           ; BSR set to: 1
 16041   002A80  2B45               	incf	___fldiv@aexp& (0+255),f,b
 16042   002A82                     l1465:
 16043                           
 16044                           ; BSR set to: 1
 16045   002A82  0E19               	movlw	25
 16046   002A84  6545               	cpfsgt	___fldiv@aexp& (0+255),b
 16047   002A86  EF47  F015         	goto	u6891
 16048   002A8A  EF49  F015         	goto	u6890
 16049   002A8E                     u6891:
 16050   002A8E  EF09  F015         	goto	l6530
 16051   002A92                     u6890:
 16052   002A92                     
 16053                           ; BSR set to: 1
 16054   002A92  5139               	movf	___fldiv@rem& (0+255),w,b
 16055   002A94  113A               	iorwf	(___fldiv@rem+1)& (0+255),w,b
 16056   002A96  113B               	iorwf	(___fldiv@rem+2)& (0+255),w,b
 16057   002A98  113C               	iorwf	(___fldiv@rem+3)& (0+255),w,b
 16058   002A9A  B4D8               	btfsc	status,2,c
 16059   002A9C  EF52  F015         	goto	u6901
 16060   002AA0  EF54  F015         	goto	u6900
 16061   002AA4                     u6901:
 16062   002AA4  EF6C  F015         	goto	l6556
 16063   002AA8                     u6900:
 16064   002AA8                     
 16065                           ; BSR set to: 1
 16066   002AA8  8140               	bsf	___fldiv@grs& (0+255),0,b
 16067   002AAA  EF6C  F015         	goto	l6556
 16068   002AAE                     l6550:
 16069                           
 16070                           ; BSR set to: 1
 16071   002AAE  90D8               	bcf	status,0,c
 16072   002AB0  372D               	rlcf	___fldiv@b& (0+255),f,b
 16073   002AB2  372E               	rlcf	(___fldiv@b+1)& (0+255),f,b
 16074   002AB4  372F               	rlcf	(___fldiv@b+2)& (0+255),f,b
 16075   002AB6  3730               	rlcf	(___fldiv@b+3)& (0+255),f,b
 16076   002AB8                     
 16077                           ; BSR set to: 1
 16078   002AB8  AF43               	btfss	(___fldiv@grs+3)& (0+255),7,b
 16079   002ABA  EF61  F015         	goto	u6911
 16080   002ABE  EF63  F015         	goto	u6910
 16081   002AC2                     u6911:
 16082   002AC2  EF64  F015         	goto	l1474
 16083   002AC6                     u6910:
 16084   002AC6                     
 16085                           ; BSR set to: 1
 16086   002AC6  812D               	bsf	___fldiv@b& (0+255),0,b
 16087   002AC8                     l1474:
 16088                           
 16089                           ; BSR set to: 1
 16090   002AC8  90D8               	bcf	status,0,c
 16091   002ACA  3740               	rlcf	___fldiv@grs& (0+255),f,b
 16092   002ACC  3741               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 16093   002ACE  3742               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 16094   002AD0  3743               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 16095   002AD2  073E               	decf	___fldiv@new_exp& (0+255),f,b
 16096   002AD4  A0D8               	btfss	status,0,c
 16097   002AD6  073F               	decf	(___fldiv@new_exp+1)& (0+255),f,b
 16098   002AD8                     l6556:
 16099                           
 16100                           ; BSR set to: 1
 16101   002AD8  AF2F               	btfss	(___fldiv@b+2)& (0+255),7,b
 16102   002ADA  EF71  F015         	goto	u6921
 16103   002ADE  EF73  F015         	goto	u6920
 16104   002AE2                     u6921:
 16105   002AE2  EF57  F015         	goto	l6550
 16106   002AE6                     u6920:
 16107   002AE6                     
 16108                           ; BSR set to: 1
 16109   002AE6  6B45               	clrf	___fldiv@aexp& (0+255),b
 16110   002AE8  AF43               	btfss	(___fldiv@grs+3)& (0+255),7,b
 16111   002AEA  EF79  F015         	goto	u6931
 16112   002AEE  EF7B  F015         	goto	u6930
 16113   002AF2                     u6931:
 16114   002AF2  EF9F  F015         	goto	l1476
 16115   002AF6                     u6930:
 16116   002AF6                     
 16117                           ; BSR set to: 1
 16118   002AF6  0EFF               	movlw	255
 16119   002AF8  1540               	andwf	___fldiv@grs& (0+255),w,b
 16120   002AFA  6F35               	movwf	??___fldiv& (0+255),b
 16121   002AFC  0EFF               	movlw	255
 16122   002AFE  1541               	andwf	(___fldiv@grs+1)& (0+255),w,b
 16123   002B00  6F36               	movwf	(??___fldiv+1)& (0+255),b
 16124   002B02  0EFF               	movlw	255
 16125   002B04  1542               	andwf	(___fldiv@grs+2)& (0+255),w,b
 16126   002B06  6F37               	movwf	(??___fldiv+2)& (0+255),b
 16127   002B08  0E7F               	movlw	127
 16128   002B0A  1543               	andwf	(___fldiv@grs+3)& (0+255),w,b
 16129   002B0C  6F38               	movwf	(??___fldiv+3)& (0+255),b
 16130   002B0E  5135               	movf	??___fldiv& (0+255),w,b
 16131   002B10  1136               	iorwf	(??___fldiv+1)& (0+255),w,b
 16132   002B12  1137               	iorwf	(??___fldiv+2)& (0+255),w,b
 16133   002B14  1138               	iorwf	(??___fldiv+3)& (0+255),w,b
 16134   002B16  B4D8               	btfsc	status,2,c
 16135   002B18  EF90  F015         	goto	u6941
 16136   002B1C  EF92  F015         	goto	u6940
 16137   002B20                     u6941:
 16138   002B20  EF96  F015         	goto	l1477
 16139   002B24                     u6940:
 16140   002B24                     l6560:
 16141                           
 16142                           ; BSR set to: 1
 16143   002B24  0E01               	movlw	1
 16144   002B26  6F45               	movwf	___fldiv@aexp& (0+255),b
 16145   002B28  EF9F  F015         	goto	l1476
 16146   002B2C                     l1477:
 16147                           
 16148                           ; BSR set to: 1
 16149   002B2C  A12D               	btfss	___fldiv@b& (0+255),0,b
 16150   002B2E  EF9B  F015         	goto	u6951
 16151   002B32  EF9D  F015         	goto	u6950
 16152   002B36                     u6951:
 16153   002B36  EF9F  F015         	goto	l1476
 16154   002B3A                     u6950:
 16155   002B3A  EF92  F015         	goto	l6560
 16156   002B3E                     l1476:
 16157                           
 16158                           ; BSR set to: 1
 16159   002B3E  5145               	movf	___fldiv@aexp& (0+255),w,b
 16160   002B40  B4D8               	btfsc	status,2,c
 16161   002B42  EFA5  F015         	goto	u6961
 16162   002B46  EFA7  F015         	goto	u6960
 16163   002B4A                     u6961:
 16164   002B4A  EFCB  F015         	goto	l6572
 16165   002B4E                     u6960:
 16166   002B4E                     
 16167                           ; BSR set to: 1
 16168   002B4E  0E01               	movlw	1
 16169   002B50  272D               	addwf	___fldiv@b& (0+255),f,b
 16170   002B52  0E00               	movlw	0
 16171   002B54  232E               	addwfc	(___fldiv@b+1)& (0+255),f,b
 16172   002B56  232F               	addwfc	(___fldiv@b+2)& (0+255),f,b
 16173   002B58  2330               	addwfc	(___fldiv@b+3)& (0+255),f,b
 16174   002B5A                     
 16175                           ; BSR set to: 1
 16176   002B5A  A130               	btfss	(___fldiv@b+3)& (0+255),0,b
 16177   002B5C  EFB2  F015         	goto	u6971
 16178   002B60  EFB4  F015         	goto	u6970
 16179   002B64                     u6971:
 16180   002B64  EFCB  F015         	goto	l6572
 16181   002B68                     u6970:
 16182   002B68                     
 16183                           ; BSR set to: 1
 16184   002B68  C12D  F135         	movff	___fldiv@b,??___fldiv
 16185   002B6C  C12E  F136         	movff	___fldiv@b+1,??___fldiv+1
 16186   002B70  C12F  F137         	movff	___fldiv@b+2,??___fldiv+2
 16187   002B74  C130  F138         	movff	___fldiv@b+3,??___fldiv+3
 16188   002B78  3538               	rlcf	(??___fldiv+3)& (0+255),w,b
 16189   002B7A  3338               	rrcf	(??___fldiv+3)& (0+255),f,b
 16190   002B7C  3337               	rrcf	(??___fldiv+2)& (0+255),f,b
 16191   002B7E  3336               	rrcf	(??___fldiv+1)& (0+255),f,b
 16192   002B80  3335               	rrcf	??___fldiv& (0+255),f,b
 16193   002B82  C135  F12D         	movff	??___fldiv,___fldiv@b
 16194   002B86  C136  F12E         	movff	??___fldiv+1,___fldiv@b+1
 16195   002B8A  C137  F12F         	movff	??___fldiv+2,___fldiv@b+2
 16196   002B8E  C138  F130         	movff	??___fldiv+3,___fldiv@b+3
 16197   002B92                     
 16198                           ; BSR set to: 1
 16199   002B92  4B3E               	infsnz	___fldiv@new_exp& (0+255),f,b
 16200   002B94  2B3F               	incf	(___fldiv@new_exp+1)& (0+255),f,b
 16201   002B96                     l6572:
 16202                           
 16203                           ; BSR set to: 1
 16204   002B96  BF3F               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 16205   002B98  EFD6  F015         	goto	u6981
 16206   002B9C  513F               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 16207   002B9E  E108               	bnz	u6980
 16208   002BA0  293E               	incf	___fldiv@new_exp& (0+255),w,b
 16209   002BA2  A0D8               	btfss	status,0,c
 16210   002BA4  EFD6  F015         	goto	u6981
 16211   002BA8  EFD8  F015         	goto	u6980
 16212   002BAC                     u6981:
 16213   002BAC  EFE3  F015         	goto	l6576
 16214   002BB0                     u6980:
 16215   002BB0                     
 16216                           ; BSR set to: 1
 16217   002BB0  0E00               	movlw	0
 16218   002BB2  6F3F               	movwf	(___fldiv@new_exp+1)& (0+255),b
 16219   002BB4  693E               	setf	___fldiv@new_exp& (0+255),b
 16220   002BB6  0E00               	movlw	0
 16221   002BB8  6F2D               	movwf	___fldiv@b& (0+255),b
 16222   002BBA  0E00               	movlw	0
 16223   002BBC  6F2E               	movwf	(___fldiv@b+1)& (0+255),b
 16224   002BBE  0E00               	movlw	0
 16225   002BC0  6F2F               	movwf	(___fldiv@b+2)& (0+255),b
 16226   002BC2  0E00               	movlw	0
 16227   002BC4  6F30               	movwf	(___fldiv@b+3)& (0+255),b
 16228   002BC6                     l6576:
 16229                           
 16230                           ; BSR set to: 1
 16231   002BC6  BF3F               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 16232   002BC8  EFF0  F015         	goto	u6990
 16233   002BCC  513F               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 16234   002BCE  E106               	bnz	u6991
 16235   002BD0  053E               	decf	___fldiv@new_exp& (0+255),w,b
 16236   002BD2  B0D8               	btfsc	status,0,c
 16237   002BD4  EFEE  F015         	goto	u6991
 16238   002BD8  EFF0  F015         	goto	u6990
 16239   002BDC                     u6991:
 16240   002BDC  EFFD  F015         	goto	l6582
 16241   002BE0                     u6990:
 16242   002BE0                     
 16243                           ; BSR set to: 1
 16244   002BE0  0E00               	movlw	0
 16245   002BE2  6F3F               	movwf	(___fldiv@new_exp+1)& (0+255),b
 16246   002BE4  0E00               	movlw	0
 16247   002BE6  6F3E               	movwf	___fldiv@new_exp& (0+255),b
 16248   002BE8  0E00               	movlw	0
 16249   002BEA  6F2D               	movwf	___fldiv@b& (0+255),b
 16250   002BEC  0E00               	movlw	0
 16251   002BEE  6F2E               	movwf	(___fldiv@b+1)& (0+255),b
 16252   002BF0  0E00               	movlw	0
 16253   002BF2  6F2F               	movwf	(___fldiv@b+2)& (0+255),b
 16254   002BF4  0E00               	movlw	0
 16255   002BF6  6F30               	movwf	(___fldiv@b+3)& (0+255),b
 16256   002BF8                     
 16257                           ; BSR set to: 1
 16258   002BF8  6B3D               	clrf	___fldiv@sign& (0+255),b
 16259   002BFA                     l6582:
 16260                           
 16261                           ; BSR set to: 1
 16262   002BFA  C13E  F144         	movff	___fldiv@new_exp,___fldiv@bexp
 16263   002BFE                     
 16264                           ; BSR set to: 1
 16265   002BFE  A144               	btfss	___fldiv@bexp& (0+255),0,b
 16266   002C00  EF04  F016         	goto	u7001
 16267   002C04  EF06  F016         	goto	u7000
 16268   002C08                     u7001:
 16269   002C08  EF09  F016         	goto	l6588
 16270   002C0C                     u7000:
 16271   002C0C                     
 16272                           ; BSR set to: 1
 16273   002C0C  8F2F               	bsf	(___fldiv@b+2)& (0+255),7,b
 16274   002C0E  EF0A  F016         	goto	l6590
 16275   002C12                     l6588:
 16276                           
 16277                           ; BSR set to: 1
 16278   002C12  9F2F               	bcf	(___fldiv@b+2)& (0+255),7,b
 16279   002C14                     l6590:
 16280                           
 16281                           ; BSR set to: 1
 16282   002C14  90D8               	bcf	status,0,c
 16283   002C16  3144               	rrcf	___fldiv@bexp& (0+255),w,b
 16284   002C18  6F30               	movwf	(___fldiv@b+3)& (0+255),b
 16285   002C1A  EFC3  F014         	goto	l6506
 16286   002C1E                     l1463:
 16287                           
 16288                           ; BSR set to: 1
 16289   002C1E  0012               	return		;funcret
 16290   002C20                     __end_of___fldiv:
 16291                           	callstack 0
 16292                           
 16293 ;; *************** function _ADC_ConversionStart *****************
 16294 ;; Defined at:
 16295 ;;		line 144 in file "mcc_generated_files/adc/src/adc.c"
 16296 ;; Parameters:    Size  Location     Type
 16297 ;;		None
 16298 ;; Auto vars:     Size  Location     Type
 16299 ;;		None
 16300 ;; Return value:  Size  Location     Type
 16301 ;;                  1    wreg      void 
 16302 ;; Registers used:
 16303 ;;		None
 16304 ;; Tracked objects:
 16305 ;;		On entry : 0/0
 16306 ;;		On exit  : 0/0
 16307 ;;		Unchanged: 0/0
 16308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16309 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16310 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16311 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16312 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16313 ;;Total ram usage:        0 bytes
 16314 ;; Hardware stack levels used: 1
 16315 ;; Hardware stack levels required when called: 13
 16316 ;; This function calls:
 16317 ;;		Nothing
 16318 ;; This function is called by:
 16319 ;;		_lire_tension
 16320 ;; This function uses a non-reentrant model
 16321 ;;
 16322                           
 16323                           	psect	text41
 16324   006534                     __ptext41:
 16325                           	callstack 0
 16326   006534                     _ADC_ConversionStart:
 16327                           	callstack 15
 16328   006534                     
 16329                           ;mcc_generated_files/adc/src/adc.c: 146:     ADCON0bits.ADGO = 1;
 16330   006534  013E               	movlb	62	; () banked
 16331   006536  81F8               	bsf	248,0,b	;volatile
 16332   006538                     
 16333                           ; BSR set to: 62
 16334   006538  0012               	return		;funcret
 16335   00653A                     __end_of_ADC_ConversionStart:
 16336                           	callstack 0
 16337                           
 16338 ;; *************** function _ADC_ConversionResultGet *****************
 16339 ;; Defined at:
 16340 ;;		line 159 in file "mcc_generated_files/adc/src/adc.c"
 16341 ;; Parameters:    Size  Location     Type
 16342 ;;		None
 16343 ;; Auto vars:     Size  Location     Type
 16344 ;;		None
 16345 ;; Return value:  Size  Location     Type
 16346 ;;                  2    6[BANK1 ] short 
 16347 ;; Registers used:
 16348 ;;		wreg, status,2, status,0
 16349 ;; Tracked objects:
 16350 ;;		On entry : 0/0
 16351 ;;		On exit  : 0/0
 16352 ;;		Unchanged: 0/0
 16353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16354 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16355 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16356 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16357 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16358 ;;Total ram usage:        4 bytes
 16359 ;; Hardware stack levels used: 1
 16360 ;; Hardware stack levels required when called: 13
 16361 ;; This function calls:
 16362 ;;		Nothing
 16363 ;; This function is called by:
 16364 ;;		_lire_tension
 16365 ;; This function uses a non-reentrant model
 16366 ;;
 16367                           
 16368                           	psect	text42
 16369   0063AA                     __ptext42:
 16370                           	callstack 0
 16371   0063AA                     _ADC_ConversionResultGet:
 16372                           	callstack 15
 16373   0063AA                     
 16374                           ;mcc_generated_files/adc/src/adc.c: 161:     return ((adc_result_t)((ADRESH << 8) + ADRE
      +                          SL));
 16375   0063AA  013E               	movlb	62	; () banked
 16376   0063AC  51F0               	movf	240,w,b	;volatile
 16377   0063AE  0101               	movlb	1	; () banked
 16378   0063B0  6F09               	movwf	(??_ADC_ConversionResultGet+1)& (0+255),b
 16379   0063B2  6B08               	clrf	??_ADC_ConversionResultGet& (0+255),b
 16380   0063B4  013E               	movlb	62	; () banked
 16381   0063B6  51EF               	movf	239,w,b	;volatile
 16382   0063B8  0101               	movlb	1	; () banked
 16383   0063BA  2508               	addwf	??_ADC_ConversionResultGet& (0+255),w,b
 16384   0063BC  6F06               	movwf	?_ADC_ConversionResultGet& (0+255),b
 16385   0063BE  013E               	movlb	62	; () banked
 16386   0063C0  0E00               	movlw	0
 16387   0063C2  0101               	movlb	1	; () banked
 16388   0063C4  2109               	addwfc	(??_ADC_ConversionResultGet+1)& (0+255),w,b
 16389   0063C6  6F07               	movwf	(?_ADC_ConversionResultGet+1)& (0+255),b
 16390   0063C8                     
 16391                           ; BSR set to: 1
 16392   0063C8  0012               	return		;funcret
 16393   0063CA                     __end_of_ADC_ConversionResultGet:
 16394                           	callstack 0
 16395                           
 16396 ;; *************** function _ADC_ChannelSelect *****************
 16397 ;; Defined at:
 16398 ;;		line 139 in file "mcc_generated_files/adc/src/adc.c"
 16399 ;; Parameters:    Size  Location     Type
 16400 ;;  channel         1    wreg     enum E15638
 16401 ;; Auto vars:     Size  Location     Type
 16402 ;;  channel         1    6[BANK1 ] enum E15638
 16403 ;; Return value:  Size  Location     Type
 16404 ;;                  1    wreg      void 
 16405 ;; Registers used:
 16406 ;;		wreg
 16407 ;; Tracked objects:
 16408 ;;		On entry : 0/0
 16409 ;;		On exit  : 0/0
 16410 ;;		Unchanged: 0/0
 16411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16412 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16413 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16414 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16415 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16416 ;;Total ram usage:        1 bytes
 16417 ;; Hardware stack levels used: 1
 16418 ;; Hardware stack levels required when called: 13
 16419 ;; This function calls:
 16420 ;;		Nothing
 16421 ;; This function is called by:
 16422 ;;		_lire_tension
 16423 ;; This function uses a non-reentrant model
 16424 ;;
 16425                           
 16426                           	psect	text43
 16427   0064D8                     __ptext43:
 16428                           	callstack 0
 16429   0064D8                     _ADC_ChannelSelect:
 16430                           	callstack 15
 16431                           
 16432                           ; BSR set to: 1
 16433                           ;incstack = 0
 16434                           ;ADC_ChannelSelect@channel stored from wreg
 16435   0064D8  0101               	movlb	1	; () banked
 16436   0064DA  6F06               	movwf	ADC_ChannelSelect@channel& (0+255),b
 16437   0064DC                     
 16438                           ;mcc_generated_files/adc/src/adc.c: 139: void ADC_ChannelSelect(adc_channel_t channel);m
      +                          cc_generated_files/adc/src/adc.c: 140: {;mcc_generated_files/adc/src/adc.c: 141:    ADPC
      +                          H = channel;
 16439   0064DC  0060  F41B  FEF1   	movff	ADC_ChannelSelect@channel,16113	;volatile
 16440   0064E2  0012               	return		;funcret
 16441   0064E4                     __end_of_ADC_ChannelSelect:
 16442                           	callstack 0
 16443                           
 16444 ;; *************** function _LCD_String *****************
 16445 ;; Defined at:
 16446 ;;		line 35 in file "LCM_S01604DSF.c"
 16447 ;; Parameters:    Size  Location     Type
 16448 ;;  str             2    8[BANK1 ] PTR const unsigned char 
 16449 ;;		 -> STR_18(14), LCD_UpdateMenu@buffer(16), STR_16(8), STR_15(9), 
 16450 ;;		 -> STR_14(15), STR_13(14), STR_12(16), STR_11(15), 
 16451 ;;		 -> STR_10(16), STR_9(14), STR_8(14), STR_7(15), 
 16452 ;;		 -> STR_6(15), STR_5(16), STR_4(5), STR_3(16), 
 16453 ;;		 -> STR_2(17), STR_1(7), 
 16454 ;; Auto vars:     Size  Location     Type
 16455 ;;		None
 16456 ;; Return value:  Size  Location     Type
 16457 ;;                  1    wreg      void 
 16458 ;; Registers used:
 16459 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 16460 ;; Tracked objects:
 16461 ;;		On entry : 0/0
 16462 ;;		On exit  : 0/0
 16463 ;;		Unchanged: 0/0
 16464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16465 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16466 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16467 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16468 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16469 ;;Total ram usage:        2 bytes
 16470 ;; Hardware stack levels used: 1
 16471 ;; Hardware stack levels required when called: 15
 16472 ;; This function calls:
 16473 ;;		_LCD_Char
 16474 ;; This function is called by:
 16475 ;;		_LCD_UpdateMenu
 16476 ;; This function uses a non-reentrant model
 16477 ;;
 16478                           
 16479                           	psect	text44
 16480   0057C2                     __ptext44:
 16481                           	callstack 0
 16482   0057C2                     _LCD_String:
 16483                           	callstack 14
 16484   0057C2                     
 16485                           ;LCM_S01604DSF.c: 36:     while (*str) {
 16486   0057C2  EFFD  F02B         	goto	l7768
 16487   0057C6                     l7764:
 16488                           
 16489                           ;LCM_S01604DSF.c: 37:         LCD_Char(*str++);
 16490   0057C6  0060  F423  FFF6   	movff	LCD_String@str,tblptrl
 16491   0057CC  0060  F427  FFF7   	movff	LCD_String@str+1,tblptrh
 16492   0057D2  0E00               	movlw	low (__mediumconst shr (0+16))
 16493   0057D4  6EF8               	movwf	tblptru,c
 16494   0057D6  0E0F               	movlw	(high __ramtop+-1)
 16495   0057D8  64F7               	cpfsgt	tblptrh,c
 16496   0057DA  D003               	bra	u8597
 16497   0057DC  0008               	tblrd		*
 16498   0057DE  50F5               	movf	tablat,w,c
 16499   0057E0  D007               	bra	u8590
 16500   0057E2                     u8597:
 16501   0057E2  006F FFDB FFE9     	movff	tblptrl,fsr0l
 16502   0057E8  006F FFDF FFEA     	movff	tblptrh,fsr0h
 16503   0057EE  50EF               	movf	indf0,w,c
 16504   0057F0                     u8590:
 16505   0057F0  EC8D  F031         	call	_LCD_Char
 16506   0057F4  0101               	movlb	1	; () banked
 16507   0057F6  4B08               	infsnz	LCD_String@str& (0+255),f,b
 16508   0057F8  2B09               	incf	(LCD_String@str+1)& (0+255),f,b
 16509   0057FA                     l7768:
 16510                           
 16511                           ;LCM_S01604DSF.c: 36:     while (*str) {
 16512   0057FA  0060  F423  FFF6   	movff	LCD_String@str,tblptrl
 16513   005800  0060  F427  FFF7   	movff	LCD_String@str+1,tblptrh
 16514   005806  0E00               	movlw	low (__mediumconst shr (0+16))
 16515   005808  6EF8               	movwf	tblptru,c
 16516   00580A  0E0F               	movlw	(high __ramtop+-1)
 16517   00580C  64F7               	cpfsgt	tblptrh,c
 16518   00580E  D003               	bra	u8607
 16519   005810  0008               	tblrd		*
 16520   005812  50F5               	movf	tablat,w,c
 16521   005814  D007               	bra	u8600
 16522   005816                     u8607:
 16523   005816  006F FFDB FFE9     	movff	tblptrl,fsr0l
 16524   00581C  006F FFDF FFEA     	movff	tblptrh,fsr0h
 16525   005822  50EF               	movf	indf0,w,c
 16526   005824                     u8600:
 16527   005824  0900               	iorlw	0
 16528   005826  A4D8               	btfss	status,2,c
 16529   005828  EF18  F02C         	goto	u8611
 16530   00582C  EF1A  F02C         	goto	u8610
 16531   005830                     u8611:
 16532   005830  EFE3  F02B         	goto	l7764
 16533   005834                     u8610:
 16534   005834  0012               	return		;funcret
 16535   005836                     __end_of_LCD_String:
 16536                           	callstack 0
 16537                           
 16538 ;; *************** function _LCD_Char *****************
 16539 ;; Defined at:
 16540 ;;		line 28 in file "LCM_S01604DSF.c"
 16541 ;; Parameters:    Size  Location     Type
 16542 ;;  data            1    wreg     unsigned char 
 16543 ;; Auto vars:     Size  Location     Type
 16544 ;;  data            1    7[BANK1 ] unsigned char 
 16545 ;; Return value:  Size  Location     Type
 16546 ;;                  1    wreg      void 
 16547 ;; Registers used:
 16548 ;;		wreg, cstack
 16549 ;; Tracked objects:
 16550 ;;		On entry : 0/0
 16551 ;;		On exit  : 0/0
 16552 ;;		Unchanged: 0/0
 16553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16554 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16555 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16556 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16557 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16558 ;;Total ram usage:        2 bytes
 16559 ;; Hardware stack levels used: 1
 16560 ;; Hardware stack levels required when called: 14
 16561 ;; This function calls:
 16562 ;;		_LCD_EnablePulse
 16563 ;; This function is called by:
 16564 ;;		_LCD_String
 16565 ;;		_LCD_UpdateMenu
 16566 ;; This function uses a non-reentrant model
 16567 ;;
 16568                           
 16569                           	psect	text45
 16570   00631A                     __ptext45:
 16571                           	callstack 0
 16572   00631A                     _LCD_Char:
 16573                           	callstack 14
 16574                           
 16575                           ;incstack = 0
 16576                           ;LCD_Char@data stored from wreg
 16577   00631A  0101               	movlb	1	; () banked
 16578   00631C  6F07               	movwf	LCD_Char@data& (0+255),b
 16579   00631E  82BB               	bsf	187,1,c	;volatile
 16580   006320                     
 16581                           ;LCM_S01604DSF.c: 30:     LATC = data;
 16582   006320  0060  F41F  FFBC   	movff	LCD_Char@data,16316	;volatile
 16583   006326                     
 16584                           ;LCM_S01604DSF.c: 31:     LCD_EnablePulse();
 16585   006326  EC04  F032         	call	_LCD_EnablePulse	;wreg free
 16586   00632A                     
 16587                           ;LCM_S01604DSF.c: 32:     _delay((unsigned long)((1)*(64000000UL/4000.0)));
 16588   00632A  0E15               	movlw	21
 16589   00632C  0101               	movlb	1	; () banked
 16590   00632E  6F06               	movwf	??_LCD_Char& (0+255),b
 16591   006330  0EC6               	movlw	198
 16592   006332                     u9317:
 16593   006332  2EE8               	decfsz	wreg,f,c
 16594   006334  D7FE               	bra	u9317
 16595   006336  2F06               	decfsz	??_LCD_Char& (0+255),f,b
 16596   006338  D7FC               	bra	u9317
 16597   00633A  0000               	nop	
 16598   00633C  0012               	return		;funcret
 16599   00633E                     __end_of_LCD_Char:
 16600                           	callstack 0
 16601                           
 16602 ;; *************** function _LCD_SetCursor *****************
 16603 ;; Defined at:
 16604 ;;		line 41 in file "LCM_S01604DSF.c"
 16605 ;; Parameters:    Size  Location     Type
 16606 ;;  row             1    wreg     unsigned char 
 16607 ;;  column          1    8[BANK1 ] unsigned char 
 16608 ;; Auto vars:     Size  Location     Type
 16609 ;;  row             1   13[BANK1 ] unsigned char 
 16610 ;;  row_offsets     4    9[BANK1 ] const unsigned char [4]
 16611 ;; Return value:  Size  Location     Type
 16612 ;;                  1    wreg      void 
 16613 ;; Registers used:
 16614 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 16615 ;; Tracked objects:
 16616 ;;		On entry : 0/0
 16617 ;;		On exit  : 0/0
 16618 ;;		Unchanged: 0/0
 16619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16620 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16621 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16622 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16623 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16624 ;;Total ram usage:        6 bytes
 16625 ;; Hardware stack levels used: 1
 16626 ;; Hardware stack levels required when called: 15
 16627 ;; This function calls:
 16628 ;;		_LCD_Command
 16629 ;; This function is called by:
 16630 ;;		_LCD_UpdateMenu
 16631 ;; This function uses a non-reentrant model
 16632 ;;
 16633                           
 16634                           	psect	text46
 16635   005988                     __ptext46:
 16636                           	callstack 0
 16637   005988                     _LCD_SetCursor:
 16638                           	callstack 14
 16639                           
 16640                           ;incstack = 0
 16641                           ;LCD_SetCursor@row stored from wreg
 16642   005988  0101               	movlb	1	; () banked
 16643   00598A  6F0D               	movwf	LCD_SetCursor@row& (0+255),b
 16644   00598C                     
 16645                           ;LCM_S01604DSF.c: 42:     const uint8_t row_offsets[] = {0x00, 0x40, 0x10, 0x50};
 16646   00598C  0E03               	movlw	low LCD_SetCursor@F16382
 16647   00598E  6EF6               	movwf	tblptrl,c
 16648   005990                     	if	1	;There is more than 1 active tblptr byte
 16649   005990  0EFF               	movlw	high LCD_SetCursor@F16382
 16650   005992  6EF7               	movwf	tblptrh,c
 16651   005994                     	endif
 16652   005994                     	if	1	;There are 3 active tblptr bytes
 16653   005994  0E00               	movlw	low (LCD_SetCursor@F16382 shr (0+16))
 16654   005996  6EF8               	movwf	tblptru,c
 16655   005998                     	endif
 16656   005998  0009               	tblrd		*+
 16657   00599A  006F FFD4  F109    	movff	tablat,LCD_SetCursor@row_offsets
 16658   0059A0  0009               	tblrd		*+
 16659   0059A2  006F FFD4  F10A    	movff	tablat,LCD_SetCursor@row_offsets+1
 16660   0059A8  0009               	tblrd		*+
 16661   0059AA  006F FFD4  F10B    	movff	tablat,LCD_SetCursor@row_offsets+2
 16662   0059B0  000A               	tblrd		*-
 16663   0059B2  006F FFD4  F10C    	movff	tablat,LCD_SetCursor@row_offsets+3
 16664   0059B8                     
 16665                           ;LCM_S01604DSF.c: 43:     if (row > 3) row = 3;
 16666   0059B8  0E03               	movlw	3
 16667   0059BA  0101               	movlb	1	; () banked
 16668   0059BC  650D               	cpfsgt	LCD_SetCursor@row& (0+255),b
 16669   0059BE  EFE3  F02C         	goto	u8621
 16670   0059C2  EFE5  F02C         	goto	u8620
 16671   0059C6                     u8621:
 16672   0059C6  EFE7  F02C         	goto	l7776
 16673   0059CA                     u8620:
 16674   0059CA                     
 16675                           ; BSR set to: 1
 16676   0059CA  0E03               	movlw	3
 16677   0059CC  6F0D               	movwf	LCD_SetCursor@row& (0+255),b
 16678   0059CE                     l7776:
 16679                           
 16680                           ; BSR set to: 1
 16681                           ;LCM_S01604DSF.c: 44:     LCD_Command(0x80 | (row_offsets[row] + column));
 16682   0059CE  0E09               	movlw	low LCD_SetCursor@row_offsets
 16683   0059D0  250D               	addwf	LCD_SetCursor@row& (0+255),w,b
 16684   0059D2  6ED9               	movwf	fsr2l,c
 16685   0059D4  6ADA               	clrf	fsr2h,c
 16686   0059D6  0E01               	movlw	high LCD_SetCursor@row_offsets
 16687   0059D8  22DA               	addwfc	fsr2h,f,c
 16688   0059DA  50DF               	movf	indf2,w,c
 16689   0059DC  2508               	addwf	LCD_SetCursor@column& (0+255),w,b
 16690   0059DE  0980               	iorlw	128
 16691   0059E0  EC9F  F031         	call	_LCD_Command
 16692   0059E4  0012               	return		;funcret
 16693   0059E6                     __end_of_LCD_SetCursor:
 16694                           	callstack 0
 16695                           
 16696 ;; *************** function _LCD_Init *****************
 16697 ;; Defined at:
 16698 ;;		line 52 in file "LCM_S01604DSF.c"
 16699 ;; Parameters:    Size  Location     Type
 16700 ;;		None
 16701 ;; Auto vars:     Size  Location     Type
 16702 ;;		None
 16703 ;; Return value:  Size  Location     Type
 16704 ;;                  1    wreg      void 
 16705 ;; Registers used:
 16706 ;;		wreg, cstack
 16707 ;; Tracked objects:
 16708 ;;		On entry : 0/0
 16709 ;;		On exit  : 0/0
 16710 ;;		Unchanged: 0/0
 16711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16712 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16713 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16714 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16715 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16716 ;;Total ram usage:        2 bytes
 16717 ;; Hardware stack levels used: 1
 16718 ;; Hardware stack levels required when called: 16
 16719 ;; This function calls:
 16720 ;;		_LCD_Clear
 16721 ;;		_LCD_Command
 16722 ;; This function is called by:
 16723 ;;		_LCD_UpdateMenu
 16724 ;; This function uses a non-reentrant model
 16725 ;;
 16726                           
 16727                           	psect	text47
 16728   00621A                     __ptext47:
 16729                           	callstack 0
 16730   00621A                     _LCD_Init:
 16731                           	callstack 13
 16732   00621A  92BB               	bcf	187,1,c	;volatile
 16733   00621C  90BB               	bcf	187,0,c	;volatile
 16734   00621E                     
 16735                           ;LCM_S01604DSF.c: 56:     _delay((unsigned long)((20)*(64000000UL/4000.0)));
 16736   00621E  0E02               	movlw	2
 16737   006220  0101               	movlb	1	; () banked
 16738   006222  6F0A               	movwf	(??_LCD_Init+1)& (0+255),b
 16739   006224  0EA0               	movlw	160
 16740   006226  6F09               	movwf	??_LCD_Init& (0+255),b
 16741   006228  0E92               	movlw	146
 16742   00622A                     u9327:
 16743   00622A  2EE8               	decfsz	wreg,f,c
 16744   00622C  D7FE               	bra	u9327
 16745   00622E  2F09               	decfsz	??_LCD_Init& (0+255),f,b
 16746   006230  D7FC               	bra	u9327
 16747   006232  2F0A               	decfsz	(??_LCD_Init+1)& (0+255),f,b
 16748   006234  D7FA               	bra	u9327
 16749   006236  0000               	nop	
 16750   006238                     
 16751                           ;LCM_S01604DSF.c: 58:     LCD_Command(0x38);
 16752   006238  0E38               	movlw	56
 16753   00623A  EC9F  F031         	call	_LCD_Command
 16754   00623E                     
 16755                           ;LCM_S01604DSF.c: 59:     LCD_Command(0x0C);
 16756   00623E  0E0C               	movlw	12
 16757   006240  EC9F  F031         	call	_LCD_Command
 16758   006244                     
 16759                           ;LCM_S01604DSF.c: 60:     LCD_Command(0x06);
 16760   006244  0E06               	movlw	6
 16761   006246  EC9F  F031         	call	_LCD_Command
 16762   00624A                     
 16763                           ;LCM_S01604DSF.c: 61:     LCD_Clear();
 16764   00624A  EC20  F032         	call	_LCD_Clear	;wreg free
 16765   00624E  0012               	return		;funcret
 16766   006250                     __end_of_LCD_Init:
 16767                           	callstack 0
 16768                           
 16769 ;; *************** function _LCD_Clear *****************
 16770 ;; Defined at:
 16771 ;;		line 47 in file "LCM_S01604DSF.c"
 16772 ;; Parameters:    Size  Location     Type
 16773 ;;		None
 16774 ;; Auto vars:     Size  Location     Type
 16775 ;;		None
 16776 ;; Return value:  Size  Location     Type
 16777 ;;                  1    wreg      void 
 16778 ;; Registers used:
 16779 ;;		wreg, cstack
 16780 ;; Tracked objects:
 16781 ;;		On entry : 0/0
 16782 ;;		On exit  : 0/0
 16783 ;;		Unchanged: 0/0
 16784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16785 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16786 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16787 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16788 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16789 ;;Total ram usage:        1 bytes
 16790 ;; Hardware stack levels used: 1
 16791 ;; Hardware stack levels required when called: 15
 16792 ;; This function calls:
 16793 ;;		_LCD_Command
 16794 ;; This function is called by:
 16795 ;;		_LCD_Init
 16796 ;; This function uses a non-reentrant model
 16797 ;;
 16798                           
 16799                           	psect	text48
 16800   006440                     __ptext48:
 16801                           	callstack 0
 16802   006440                     _LCD_Clear:
 16803                           	callstack 13
 16804   006440                     
 16805                           ;LCM_S01604DSF.c: 48:     LCD_Command(0x01);
 16806   006440  0E01               	movlw	1
 16807   006442  EC9F  F031         	call	_LCD_Command
 16808   006446                     
 16809                           ;LCM_S01604DSF.c: 49:     _delay((unsigned long)((2)*(64000000UL/4000.0)));
 16810   006446  0E2A               	movlw	42
 16811   006448  0101               	movlb	1	; () banked
 16812   00644A  6F08               	movwf	??_LCD_Clear& (0+255),b
 16813   00644C  0E8D               	movlw	141
 16814   00644E                     u9337:
 16815   00644E  2EE8               	decfsz	wreg,f,c
 16816   006450  D7FE               	bra	u9337
 16817   006452  2F08               	decfsz	??_LCD_Clear& (0+255),f,b
 16818   006454  D7FC               	bra	u9337
 16819   006456  D000               	nop2	
 16820   006458  0012               	return		;funcret
 16821   00645A                     __end_of_LCD_Clear:
 16822                           	callstack 0
 16823                           
 16824 ;; *************** function _LCD_Command *****************
 16825 ;; Defined at:
 16826 ;;		line 21 in file "LCM_S01604DSF.c"
 16827 ;; Parameters:    Size  Location     Type
 16828 ;;  cmd             1    wreg     unsigned char 
 16829 ;; Auto vars:     Size  Location     Type
 16830 ;;  cmd             1    7[BANK1 ] unsigned char 
 16831 ;; Return value:  Size  Location     Type
 16832 ;;                  1    wreg      void 
 16833 ;; Registers used:
 16834 ;;		wreg, cstack
 16835 ;; Tracked objects:
 16836 ;;		On entry : 0/0
 16837 ;;		On exit  : 0/0
 16838 ;;		Unchanged: 0/0
 16839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16840 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16841 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16842 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16843 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16844 ;;Total ram usage:        2 bytes
 16845 ;; Hardware stack levels used: 1
 16846 ;; Hardware stack levels required when called: 14
 16847 ;; This function calls:
 16848 ;;		_LCD_EnablePulse
 16849 ;; This function is called by:
 16850 ;;		_LCD_SetCursor
 16851 ;;		_LCD_Clear
 16852 ;;		_LCD_Init
 16853 ;; This function uses a non-reentrant model
 16854 ;;
 16855                           
 16856                           	psect	text49
 16857   00633E                     __ptext49:
 16858                           	callstack 0
 16859   00633E                     _LCD_Command:
 16860                           	callstack 14
 16861                           
 16862                           ;incstack = 0
 16863                           ;LCD_Command@cmd stored from wreg
 16864   00633E  0101               	movlb	1	; () banked
 16865   006340  6F07               	movwf	LCD_Command@cmd& (0+255),b
 16866   006342  92BB               	bcf	187,1,c	;volatile
 16867   006344                     
 16868                           ;LCM_S01604DSF.c: 23:     LATC = cmd;
 16869   006344  0060  F41F  FFBC   	movff	LCD_Command@cmd,16316	;volatile
 16870   00634A                     
 16871                           ;LCM_S01604DSF.c: 24:     LCD_EnablePulse();
 16872   00634A  EC04  F032         	call	_LCD_EnablePulse	;wreg free
 16873   00634E                     
 16874                           ;LCM_S01604DSF.c: 25:     _delay((unsigned long)((2)*(64000000UL/4000.0)));
 16875   00634E  0E2A               	movlw	42
 16876   006350  0101               	movlb	1	; () banked
 16877   006352  6F06               	movwf	??_LCD_Command& (0+255),b
 16878   006354  0E8D               	movlw	141
 16879   006356                     u9347:
 16880   006356  2EE8               	decfsz	wreg,f,c
 16881   006358  D7FE               	bra	u9347
 16882   00635A  2F06               	decfsz	??_LCD_Command& (0+255),f,b
 16883   00635C  D7FC               	bra	u9347
 16884   00635E  D000               	nop2	
 16885   006360  0012               	return		;funcret
 16886   006362                     __end_of_LCD_Command:
 16887                           	callstack 0
 16888                           
 16889 ;; *************** function _LCD_EnablePulse *****************
 16890 ;; Defined at:
 16891 ;;		line 14 in file "LCM_S01604DSF.c"
 16892 ;; Parameters:    Size  Location     Type
 16893 ;;		None
 16894 ;; Auto vars:     Size  Location     Type
 16895 ;;		None
 16896 ;; Return value:  Size  Location     Type
 16897 ;;                  1    wreg      void 
 16898 ;; Registers used:
 16899 ;;		wreg
 16900 ;; Tracked objects:
 16901 ;;		On entry : 0/0
 16902 ;;		On exit  : 0/0
 16903 ;;		Unchanged: 0/0
 16904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16905 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16906 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16907 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16908 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16909 ;;Total ram usage:        0 bytes
 16910 ;; Hardware stack levels used: 1
 16911 ;; Hardware stack levels required when called: 13
 16912 ;; This function calls:
 16913 ;;		Nothing
 16914 ;; This function is called by:
 16915 ;;		_LCD_Command
 16916 ;;		_LCD_Char
 16917 ;; This function uses a non-reentrant model
 16918 ;;
 16919                           
 16920                           	psect	text50
 16921   006408                     __ptext50:
 16922                           	callstack 0
 16923   006408                     _LCD_EnablePulse:
 16924                           	callstack 14
 16925   006408  80BB               	bsf	187,0,c	;volatile
 16926   00640A                     
 16927                           ;LCM_S01604DSF.c: 16:     _delay((unsigned long)((1)*(64000000UL/4000000.0)));
 16928   00640A  0E05               	movlw	5
 16929   00640C                     u9357:
 16930   00640C  2EE8               	decfsz	wreg,f,c
 16931   00640E  D7FE               	bra	u9357
 16932   006410  0000               	nop	
 16933   006412  90BB               	bcf	187,0,c	;volatile
 16934   006414                     
 16935                           ;LCM_S01604DSF.c: 18:     _delay((unsigned long)((100)*(64000000UL/4000000.0)));
 16936   006414  0EE4               	movlw	228
 16937   006416                     u9367:
 16938   006416  D000               	nop2	
 16939   006418  D000               	nop2	
 16940   00641A  2EE8               	decfsz	wreg,f,c
 16941   00641C  D7FC               	bra	u9367
 16942   00641E  D000               	nop2	
 16943   006420  D000               	nop2	
 16944   006422  0012               	return		;funcret
 16945   006424                     __end_of_LCD_EnablePulse:
 16946                           	callstack 0
 16947                           
 16948 ;; *************** function _INTERRUPT_InterruptManager *****************
 16949 ;; Defined at:
 16950 ;;		line 80 in file "mcc_generated_files/system/src/interrupt.c"
 16951 ;; Parameters:    Size  Location     Type
 16952 ;;		None
 16953 ;; Auto vars:     Size  Location     Type
 16954 ;;		None
 16955 ;; Return value:  Size  Location     Type
 16956 ;;                  1    wreg      void 
 16957 ;; Registers used:
 16958 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
 16959 ;; Tracked objects:
 16960 ;;		On entry : 0/0
 16961 ;;		On exit  : 0/0
 16962 ;;		Unchanged: 0/0
 16963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16964 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16965 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16966 ;;      Temps:          0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16967 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16968 ;;Total ram usage:        6 bytes
 16969 ;; Hardware stack levels used: 1
 16970 ;; Hardware stack levels required when called: 12
 16971 ;; This function calls:
 16972 ;;		_ADC_ISR
 16973 ;;		_ADC_ThresholdISR
 16974 ;;		_PIN_MANAGER_IOC
 16975 ;;		_TMR1_OverflowISR
 16976 ;; This function is called by:
 16977 ;;		Interrupt level 2
 16978 ;; This function uses a non-reentrant model
 16979 ;;
 16980                           
 16981                           	psect	text51
 16982   004C4A                     __ptext51:
 16983                           	callstack 0
 16984   004C4A                     _INTERRUPT_InterruptManager:
 16985                           	callstack 9
 16986                           
 16987                           ;incstack = 0
 16988   004C4A  006F FFE8  F100    	movff	pclath,??_INTERRUPT_InterruptManager
 16989   004C50  006F FFEC  F101    	movff	pclatu,??_INTERRUPT_InterruptManager+1
 16990   004C56  006F FFD8  F102    	movff	tblptrl,??_INTERRUPT_InterruptManager+2
 16991   004C5C  006F FFDC  F103    	movff	tblptrh,??_INTERRUPT_InterruptManager+3
 16992   004C62  006F FFE0  F104    	movff	tblptru,??_INTERRUPT_InterruptManager+4
 16993   004C68  006F FFD4  F105    	movff	tablat,??_INTERRUPT_InterruptManager+5
 16994   004C6E                     
 16995                           ;mcc_generated_files/system/src/interrupt.c: 83:     if(PIE0bits.IOCIE == 1 && PIR0bits.
      +                          IOCIF == 1)
 16996   004C6E  0139               	movlb	57	; () banked
 16997   004C70  AF90               	btfss	144,7,b	;volatile
 16998   004C72  EF3D  F026         	goto	i2u923_41
 16999   004C76  EF3F  F026         	goto	i2u923_40
 17000   004C7A                     i2u923_41:
 17001   004C7A  EF4A  F026         	goto	i2l542
 17002   004C7E                     i2u923_40:
 17003   004C7E                     
 17004                           ; BSR set to: 57
 17005   004C7E  AFA0               	btfss	160,7,b	;volatile
 17006   004C80  EF44  F026         	goto	i2u924_41
 17007   004C84  EF46  F026         	goto	i2u924_40
 17008   004C88                     i2u924_41:
 17009   004C88  EF4A  F026         	goto	i2l542
 17010   004C8C                     i2u924_40:
 17011   004C8C                     
 17012                           ; BSR set to: 57
 17013                           ;mcc_generated_files/system/src/interrupt.c: 84:     {;mcc_generated_files/system/src/in
      +                          terrupt.c: 85:         PIN_MANAGER_IOC();
 17014   004C8C  EC98  F030         	call	_PIN_MANAGER_IOC	;wreg free
 17015                           
 17016                           ;mcc_generated_files/system/src/interrupt.c: 86:     }
 17017   004C90  EF80  F026         	goto	i2l550
 17018   004C94                     i2l542:
 17019                           
 17020                           ; BSR set to: 57
 17021   004C94  A591               	btfss	145,2,b	;volatile
 17022   004C96  EF4F  F026         	goto	i2u925_41
 17023   004C9A  EF51  F026         	goto	i2u925_40
 17024   004C9E                     i2u925_41:
 17025   004C9E  EF5C  F026         	goto	i2l544
 17026   004CA2                     i2u925_40:
 17027   004CA2                     
 17028                           ; BSR set to: 57
 17029   004CA2  A5A1               	btfss	161,2,b	;volatile
 17030   004CA4  EF56  F026         	goto	i2u926_41
 17031   004CA8  EF58  F026         	goto	i2u926_40
 17032   004CAC                     i2u926_41:
 17033   004CAC  EF5C  F026         	goto	i2l544
 17034   004CB0                     i2u926_40:
 17035   004CB0                     
 17036                           ; BSR set to: 57
 17037                           ;mcc_generated_files/system/src/interrupt.c: 88:     {;mcc_generated_files/system/src/in
      +                          terrupt.c: 89:         ADC_ISR();
 17038   004CB0  ECA3  F032         	call	_ADC_ISR	;wreg free
 17039                           
 17040                           ;mcc_generated_files/system/src/interrupt.c: 90:     }
 17041   004CB4  EF80  F026         	goto	i2l550
 17042   004CB8                     i2l544:
 17043                           
 17044                           ; BSR set to: 57
 17045   004CB8  A791               	btfss	145,3,b	;volatile
 17046   004CBA  EF61  F026         	goto	i2u927_41
 17047   004CBE  EF63  F026         	goto	i2u927_40
 17048   004CC2                     i2u927_41:
 17049   004CC2  EF6E  F026         	goto	i2l546
 17050   004CC6                     i2u927_40:
 17051   004CC6                     
 17052                           ; BSR set to: 57
 17053   004CC6  A7A1               	btfss	161,3,b	;volatile
 17054   004CC8  EF68  F026         	goto	i2u928_41
 17055   004CCC  EF6A  F026         	goto	i2u928_40
 17056   004CD0                     i2u928_41:
 17057   004CD0  EF6E  F026         	goto	i2l546
 17058   004CD4                     i2u928_40:
 17059   004CD4                     
 17060                           ; BSR set to: 57
 17061                           ;mcc_generated_files/system/src/interrupt.c: 92:     {;mcc_generated_files/system/src/in
      +                          terrupt.c: 93:         ADC_ThresholdISR();
 17062   004CD4  ECA0  F032         	call	_ADC_ThresholdISR	;wreg free
 17063                           
 17064                           ;mcc_generated_files/system/src/interrupt.c: 94:     }
 17065   004CD8  EF80  F026         	goto	i2l550
 17066   004CDC                     i2l546:
 17067                           
 17068                           ; BSR set to: 57
 17069   004CDC  A194               	btfss	148,0,b	;volatile
 17070   004CDE  EF73  F026         	goto	i2u929_41
 17071   004CE2  EF75  F026         	goto	i2u929_40
 17072   004CE6                     i2u929_41:
 17073   004CE6  EF80  F026         	goto	i2l545
 17074   004CEA                     i2u929_40:
 17075   004CEA                     
 17076                           ; BSR set to: 57
 17077   004CEA  A1A4               	btfss	164,0,b	;volatile
 17078   004CEC  EF7A  F026         	goto	i2u930_41
 17079   004CF0  EF7C  F026         	goto	i2u930_40
 17080   004CF4                     i2u930_41:
 17081   004CF4  EF80  F026         	goto	i2l545
 17082   004CF8                     i2u930_40:
 17083   004CF8                     
 17084                           ; BSR set to: 57
 17085                           ;mcc_generated_files/system/src/interrupt.c: 96:     {;mcc_generated_files/system/src/in
      +                          terrupt.c: 97:         TMR1_OverflowISR();
 17086   004CF8  EC79  F030         	call	_TMR1_OverflowISR	;wreg free
 17087                           
 17088                           ;mcc_generated_files/system/src/interrupt.c: 98:     }
 17089   004CFC  EF80  F026         	goto	i2l550
 17090   004D00                     i2l545:
 17091   004D00                     i2l550:
 17092   004D00  0060  F417  FFF5   	movff	??_INTERRUPT_InterruptManager+5,tablat
 17093   004D06  0060  F413  FFF8   	movff	??_INTERRUPT_InterruptManager+4,tblptru
 17094   004D0C  0060  F40F  FFF7   	movff	??_INTERRUPT_InterruptManager+3,tblptrh
 17095   004D12  0060  F40B  FFF6   	movff	??_INTERRUPT_InterruptManager+2,tblptrl
 17096   004D18  0060  F407  FFFB   	movff	??_INTERRUPT_InterruptManager+1,pclatu
 17097   004D1E  0060  F403  FFFA   	movff	??_INTERRUPT_InterruptManager,pclath
 17098   004D24  0011               	retfie		f
 17099   004D26                     __end_of_INTERRUPT_InterruptManager:
 17100                           	callstack 0
 17101                           
 17102 ;; *************** function _TMR1_OverflowISR *****************
 17103 ;; Defined at:
 17104 ;;		line 191 in file "mcc_generated_files/timer/src/tmr1.c"
 17105 ;; Parameters:    Size  Location     Type
 17106 ;;		None
 17107 ;; Auto vars:     Size  Location     Type
 17108 ;;		None
 17109 ;; Return value:  Size  Location     Type
 17110 ;;                  1    wreg      void 
 17111 ;; Registers used:
 17112 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 17113 ;; Tracked objects:
 17114 ;;		On entry : 0/0
 17115 ;;		On exit  : 0/0
 17116 ;;		Unchanged: 0/0
 17117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17118 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17119 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17120 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17121 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17122 ;;Total ram usage:        0 bytes
 17123 ;; Hardware stack levels used: 1
 17124 ;; Hardware stack levels required when called: 1
 17125 ;; This function calls:
 17126 ;;		NULL
 17127 ;;		_TMR1_CounterSet
 17128 ;;		_TMR1_DefaultOverflowCallback
 17129 ;;		_TMR1_handler
 17130 ;; This function is called by:
 17131 ;;		_INTERRUPT_InterruptManager
 17132 ;; This function uses a non-reentrant model
 17133 ;;
 17134                           
 17135                           	psect	text52
 17136   0060F2                     __ptext52:
 17137                           	callstack 0
 17138   0060F2                     _TMR1_OverflowISR:
 17139                           	callstack 19
 17140   0060F2                     
 17141                           ;mcc_generated_files/timer/src/tmr1.c: 194:     TMR1_CounterSet(timer1ReloadVal);
 17142   0060F2  C0E3  F001         	movff	_timer1ReloadVal,TMR1_CounterSet@timerVal	;volatile
 17143   0060F6  C0E4  F002         	movff	_timer1ReloadVal+1,TMR1_CounterSet@timerVal+1	;volatile
 17144   0060FA  EC8E  F02F         	call	_TMR1_CounterSet	;wreg free
 17145   0060FE                     
 17146                           ;mcc_generated_files/timer/src/tmr1.c: 197:     if(((void*)0) != TMR1_OverflowCallback)
 17147   0060FE  0100               	movlb	0	; () banked
 17148   006100  51ED               	movf	_TMR1_OverflowCallback& (0+255),w,b
 17149   006102  11EE               	iorwf	(_TMR1_OverflowCallback+1)& (0+255),w,b
 17150   006104  B4D8               	btfsc	status,2,c
 17151   006106  EF87  F030         	goto	i2u877_41
 17152   00610A  EF89  F030         	goto	i2u877_40
 17153   00610E                     i2u877_41:
 17154   00610E  EF95  F030         	goto	i2l8012
 17155   006112                     i2u877_40:
 17156   006112                     
 17157                           ; BSR set to: 0
 17158                           ;mcc_generated_files/timer/src/tmr1.c: 198:     {;mcc_generated_files/timer/src/tmr1.c: 
      +                          199:         TMR1_OverflowCallback();
 17159   006112  D802               	call	i2u878_48
 17160   006114  EF95  F030         	goto	i2u878_49
 17161   006118                     i2u878_48:
 17162   006118  0005               	push	
 17163   00611A  6EFA               	movwf	pclath,c
 17164   00611C  51ED               	movf	_TMR1_OverflowCallback& (0+255),w,b
 17165   00611E  6EFD               	movwf	tosl,c
 17166   006120  51EE               	movf	(_TMR1_OverflowCallback+1)& (0+255),w,b
 17167   006122  6EFE               	movwf	tosh,c
 17168   006124  6AFF               	clrf	tosu,c
 17169   006126  50FA               	movf	pclath,w,c
 17170   006128  0012               	return		;indir
 17171   00612A                     i2u878_49:
 17172   00612A                     i2l8012:
 17173                           
 17174                           ;mcc_generated_files/timer/src/tmr1.c: 201:     PIR4bits.TMR1IF = 0U;
 17175   00612A  0139               	movlb	57	; () banked
 17176   00612C  91A4               	bcf	164,0,b	;volatile
 17177   00612E                     
 17178                           ; BSR set to: 57
 17179   00612E  0012               	return		;funcret
 17180   006130                     __end_of_TMR1_OverflowISR:
 17181                           	callstack 0
 17182                           
 17183 ;; *************** function _TMR1_DefaultOverflowCallback *****************
 17184 ;; Defined at:
 17185 ;;		line 226 in file "mcc_generated_files/timer/src/tmr1.c"
 17186 ;; Parameters:    Size  Location     Type
 17187 ;;		None
 17188 ;; Auto vars:     Size  Location     Type
 17189 ;;		None
 17190 ;; Return value:  Size  Location     Type
 17191 ;;                  1    wreg      void 
 17192 ;; Registers used:
 17193 ;;		None
 17194 ;; Tracked objects:
 17195 ;;		On entry : 0/0
 17196 ;;		On exit  : 0/0
 17197 ;;		Unchanged: 0/0
 17198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17199 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17200 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17201 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17202 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17203 ;;Total ram usage:        0 bytes
 17204 ;; Hardware stack levels used: 1
 17205 ;; This function calls:
 17206 ;;		Nothing
 17207 ;; This function is called by:
 17208 ;;		_TMR1_Initialize
 17209 ;;		_TMR1_OverflowISR
 17210 ;; This function uses a non-reentrant model
 17211 ;;
 17212                           
 17213                           	psect	text53
 17214   00654E                     __ptext53:
 17215                           	callstack 0
 17216   00654E                     _TMR1_DefaultOverflowCallback:
 17217                           	callstack 19
 17218   00654E  0012               	return		;funcret
 17219   006550                     __end_of_TMR1_DefaultOverflowCallback:
 17220                           	callstack 0
 17221                           
 17222 ;; *************** function _TMR1_handler *****************
 17223 ;; Defined at:
 17224 ;;		line 400 in file "main.c"
 17225 ;; Parameters:    Size  Location     Type
 17226 ;;		None
 17227 ;; Auto vars:     Size  Location     Type
 17228 ;;		None
 17229 ;; Return value:  Size  Location     Type
 17230 ;;                  1    wreg      void 
 17231 ;; Registers used:
 17232 ;;		wreg, status,2, status,0
 17233 ;; Tracked objects:
 17234 ;;		On entry : 0/0
 17235 ;;		On exit  : 0/0
 17236 ;;		Unchanged: 0/0
 17237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17238 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17239 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17240 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17241 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17242 ;;Total ram usage:        2 bytes
 17243 ;; Hardware stack levels used: 1
 17244 ;; This function calls:
 17245 ;;		Nothing
 17246 ;; This function is called by:
 17247 ;;		_main
 17248 ;;		_TMR1_OverflowISR
 17249 ;; This function uses a non-reentrant model
 17250 ;;
 17251                           
 17252                           	psect	text54
 17253   005DAE                     __ptext54:
 17254                           	callstack 0
 17255   005DAE                     _TMR1_handler:
 17256                           	callstack 19
 17257   005DAE                     
 17258                           ;main.c: 402:     static uint16_t timer_1s = 0;;main.c: 404:     if( timer_1s ++ > 10){
 17259   005DAE  0100               	movlb	0	; () banked
 17260   005DB0  51E1               	movf	TMR1_handler@timer_1s& (0+255),w,b
 17261   005DB2  6E01               	movwf	??_TMR1_handler^0,c
 17262   005DB4  51E2               	movf	(TMR1_handler@timer_1s+1)& (0+255),w,b
 17263   005DB6  6E02               	movwf	(??_TMR1_handler+1)^0,c
 17264   005DB8  4BE1               	infsnz	TMR1_handler@timer_1s& (0+255),f,b
 17265   005DBA  2BE2               	incf	(TMR1_handler@timer_1s+1)& (0+255),f,b
 17266   005DBC  5002               	movf	(??_TMR1_handler+1)^0,w,c
 17267   005DBE  E109               	bnz	i2u872_40
 17268   005DC0  0E0B               	movlw	11
 17269   005DC2  5C01               	subwf	??_TMR1_handler^0,w,c
 17270   005DC4  A0D8               	btfss	status,0,c
 17271   005DC6  EFE7  F02E         	goto	i2u872_41
 17272   005DCA  EFE9  F02E         	goto	i2u872_40
 17273   005DCE                     i2u872_41:
 17274   005DCE  EFFD  F02E         	goto	i2l870
 17275   005DD2                     i2u872_40:
 17276   005DD2                     
 17277                           ; BSR set to: 0
 17278                           ;main.c: 405:         timer_1s = 0;
 17279   005DD2  0E00               	movlw	0
 17280   005DD4  6FE2               	movwf	(TMR1_handler@timer_1s+1)& (0+255),b
 17281   005DD6  0E00               	movlw	0
 17282   005DD8  6FE1               	movwf	TMR1_handler@timer_1s& (0+255),b
 17283   005DDA                     
 17284                           ; BSR set to: 0
 17285   005DDA  B0BA               	btfsc	186,0,c	;volatile
 17286   005DDC  EFF2  F02E         	goto	i2u873_41
 17287   005DE0  EFF5  F02E         	goto	i2u873_40
 17288   005DE4                     i2u873_41:
 17289   005DE4  0E01               	movlw	1
 17290   005DE6  EFF6  F02E         	goto	i2u873_46
 17291   005DEA                     i2u873_40:
 17292   005DEA  0E00               	movlw	0
 17293   005DEC                     i2u873_46:
 17294   005DEC  0AFF               	xorlw	255
 17295   005DEE  6E01               	movwf	??_TMR1_handler^0,c
 17296   005DF0  50BA               	movf	186,w,c	;volatile
 17297   005DF2  1801               	xorwf	??_TMR1_handler^0,w,c
 17298   005DF4  0BFE               	andlw	-2
 17299   005DF6  1801               	xorwf	??_TMR1_handler^0,w,c
 17300   005DF8  6EBA               	movwf	186,c	;volatile
 17301   005DFA                     i2l870:
 17302                           
 17303                           ; BSR set to: 0
 17304   005DFA  0012               	return		;funcret
 17305   005DFC                     __end_of_TMR1_handler:
 17306                           	callstack 0
 17307                           
 17308 ;; *************** function _TMR1_CounterSet *****************
 17309 ;; Defined at:
 17310 ;;		line 122 in file "mcc_generated_files/timer/src/tmr1.c"
 17311 ;; Parameters:    Size  Location     Type
 17312 ;;  timerVal        2    0[COMRAM] unsigned short 
 17313 ;; Auto vars:     Size  Location     Type
 17314 ;;  onState         1    2[COMRAM] _Bool 
 17315 ;; Return value:  Size  Location     Type
 17316 ;;                  1    wreg      void 
 17317 ;; Registers used:
 17318 ;;		wreg, status,2
 17319 ;; Tracked objects:
 17320 ;;		On entry : 0/0
 17321 ;;		On exit  : 0/0
 17322 ;;		Unchanged: 0/0
 17323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17324 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17325 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17326 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17327 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17328 ;;Total ram usage:        3 bytes
 17329 ;; Hardware stack levels used: 1
 17330 ;; This function calls:
 17331 ;;		Nothing
 17332 ;; This function is called by:
 17333 ;;		_TMR1_OverflowISR
 17334 ;;		_TMR1_Reload
 17335 ;; This function uses a non-reentrant model
 17336 ;;
 17337                           
 17338                           	psect	text55
 17339   005F1C                     __ptext55:
 17340                           	callstack 0
 17341   005F1C                     _TMR1_CounterSet:
 17342                           	callstack 19
 17343   005F1C                     
 17344                           ;mcc_generated_files/timer/src/tmr1.c: 122: void TMR1_CounterSet(uint16_t timerVal);mcc_
      +                          generated_files/timer/src/tmr1.c: 123: {;mcc_generated_files/timer/src/tmr1.c: 124:     
      +                          if (1U == T1CONbits.nT1SYNC)
 17345   005F1C  A4B2               	btfss	178,2,c	;volatile
 17346   005F1E  EF93  F02F         	goto	i2u869_41
 17347   005F22  EF95  F02F         	goto	i2u869_40
 17348   005F26                     i2u869_41:
 17349   005F26  EFAB  F02F         	goto	i2l7938
 17350   005F2A                     i2u869_40:
 17351   005F2A                     
 17352                           ;mcc_generated_files/timer/src/tmr1.c: 125:     {;mcc_generated_files/timer/src/tmr1.c: 
      +                          126:         _Bool onState = T1CONbits.TMR1ON;
 17353   005F2A  B0B2               	btfsc	178,0,c	;volatile
 17354   005F2C  EF9A  F02F         	goto	i2u870_41
 17355   005F30  EF9D  F02F         	goto	i2u870_40
 17356   005F34                     i2u870_41:
 17357   005F34  0E01               	movlw	1
 17358   005F36  EF9E  F02F         	goto	i2u870_46
 17359   005F3A                     i2u870_40:
 17360   005F3A  0E00               	movlw	0
 17361   005F3C                     i2u870_46:
 17362   005F3C  6E03               	movwf	TMR1_CounterSet@onState^0,c
 17363                           
 17364                           ;mcc_generated_files/timer/src/tmr1.c: 128:         TMR1H = (uint8_t)(timerVal >> 8U);
 17365   005F3E  5002               	movf	(TMR1_CounterSet@timerVal+1)^0,w,c
 17366   005F40  6EB1               	movwf	177,c	;volatile
 17367   005F42                     
 17368                           ;mcc_generated_files/timer/src/tmr1.c: 129:         TMR1L = (uint8_t)timerVal;
 17369   005F42  0060  F007  FFB0   	movff	TMR1_CounterSet@timerVal,16304	;volatile
 17370   005F48                     
 17371                           ;mcc_generated_files/timer/src/tmr1.c: 131:         T1CONbits.TMR1ON = onState;
 17372   005F48  B003               	btfsc	TMR1_CounterSet@onState^0,0,c
 17373   005F4A  D002               	bra	i2u871_45
 17374   005F4C  90B2               	bcf	178,0,c	;volatile
 17375   005F4E  D001               	bra	i2u871_46
 17376   005F50                     i2u871_45:
 17377   005F50  80B2               	bsf	178,0,c	;volatile
 17378   005F52                     i2u871_46:
 17379                           
 17380                           ;mcc_generated_files/timer/src/tmr1.c: 132:     }
 17381   005F52  EFB0  F02F         	goto	i2l639
 17382   005F56                     i2l7938:
 17383                           
 17384                           ;mcc_generated_files/timer/src/tmr1.c: 134:     {;mcc_generated_files/timer/src/tmr1.c: 
      +                          135:         TMR1H = (uint8_t)(timerVal >> 8U);
 17385   005F56  5002               	movf	(TMR1_CounterSet@timerVal+1)^0,w,c
 17386   005F58  6EB1               	movwf	177,c	;volatile
 17387   005F5A                     
 17388                           ;mcc_generated_files/timer/src/tmr1.c: 136:         TMR1L = (uint8_t)timerVal;
 17389   005F5A  0060  F007  FFB0   	movff	TMR1_CounterSet@timerVal,16304	;volatile
 17390   005F60                     i2l639:
 17391   005F60  0012               	return		;funcret
 17392   005F62                     __end_of_TMR1_CounterSet:
 17393                           	callstack 0
 17394                           
 17395 ;; *************** function _PIN_MANAGER_IOC *****************
 17396 ;; Defined at:
 17397 ;;		line 129 in file "mcc_generated_files/system/src/pins.c"
 17398 ;; Parameters:    Size  Location     Type
 17399 ;;		None
 17400 ;; Auto vars:     Size  Location     Type
 17401 ;;		None
 17402 ;; Return value:  Size  Location     Type
 17403 ;;                  1    wreg      void 
 17404 ;; Registers used:
 17405 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
 17406 ;; Tracked objects:
 17407 ;;		On entry : 0/0
 17408 ;;		On exit  : 0/0
 17409 ;;		Unchanged: 0/0
 17410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17411 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17412 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17413 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17414 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17415 ;;Total ram usage:        0 bytes
 17416 ;; Hardware stack levels used: 1
 17417 ;; Hardware stack levels required when called: 11
 17418 ;; This function calls:
 17419 ;;		_BP1_ISR
 17420 ;;		_BP2_ISR
 17421 ;;		_BP3_ISR
 17422 ;; This function is called by:
 17423 ;;		_INTERRUPT_InterruptManager
 17424 ;; This function uses a non-reentrant model
 17425 ;;
 17426                           
 17427                           	psect	text56
 17428   006130                     __ptext56:
 17429                           	callstack 0
 17430   006130                     _PIN_MANAGER_IOC:
 17431                           	callstack 9
 17432   006130                     
 17433                           ;mcc_generated_files/system/src/pins.c: 132:     if(IOCAFbits.IOCAF1 == 1)
 17434   006130  013A               	movlb	58	; () banked
 17435   006132  A347               	btfss	71,1,b	;volatile
 17436   006134  EF9E  F030         	goto	i2u920_41
 17437   006138  EFA0  F030         	goto	i2u920_40
 17438   00613C                     i2u920_41:
 17439   00613C  EFA2  F030         	goto	i2l8552
 17440   006140                     i2u920_40:
 17441   006140                     
 17442                           ; BSR set to: 58
 17443                           ;mcc_generated_files/system/src/pins.c: 133:     {;mcc_generated_files/system/src/pins.c
      +                          : 134:         BP1_ISR();
 17444   006140  EC74  F031         	call	_BP1_ISR	;wreg free
 17445   006144                     i2l8552:
 17446                           
 17447                           ;mcc_generated_files/system/src/pins.c: 137:     if(IOCAFbits.IOCAF2 == 1)
 17448   006144  013A               	movlb	58	; () banked
 17449   006146  A547               	btfss	71,2,b	;volatile
 17450   006148  EFA8  F030         	goto	i2u921_41
 17451   00614C  EFAA  F030         	goto	i2u921_40
 17452   006150                     i2u921_41:
 17453   006150  EFAC  F030         	goto	i2l8556
 17454   006154                     i2u921_40:
 17455   006154                     
 17456                           ; BSR set to: 58
 17457                           ;mcc_generated_files/system/src/pins.c: 138:     {;mcc_generated_files/system/src/pins.c
      +                          : 139:         BP2_ISR();
 17458   006154  EC5B  F031         	call	_BP2_ISR	;wreg free
 17459   006158                     i2l8556:
 17460                           
 17461                           ;mcc_generated_files/system/src/pins.c: 142:     if(IOCAFbits.IOCAF3 == 1)
 17462   006158  013A               	movlb	58	; () banked
 17463   00615A  A747               	btfss	71,3,b	;volatile
 17464   00615C  EFB2  F030         	goto	i2u922_41
 17465   006160  EFB4  F030         	goto	i2u922_40
 17466   006164                     i2u922_41:
 17467   006164  EFB6  F030         	goto	i2l454
 17468   006168                     i2u922_40:
 17469   006168                     
 17470                           ; BSR set to: 58
 17471                           ;mcc_generated_files/system/src/pins.c: 143:     {;mcc_generated_files/system/src/pins.c
      +                          : 144:         BP3_ISR();
 17472   006168  EC42  F031         	call	_BP3_ISR	;wreg free
 17473   00616C                     i2l454:
 17474   00616C  0012               	return		;funcret
 17475   00616E                     __end_of_PIN_MANAGER_IOC:
 17476                           	callstack 0
 17477                           
 17478 ;; *************** function _BP3_ISR *****************
 17479 ;; Defined at:
 17480 ;;		line 211 in file "mcc_generated_files/system/src/pins.c"
 17481 ;; Parameters:    Size  Location     Type
 17482 ;;		None
 17483 ;; Auto vars:     Size  Location     Type
 17484 ;;		None
 17485 ;; Return value:  Size  Location     Type
 17486 ;;                  1    wreg      void 
 17487 ;; Registers used:
 17488 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
 17489 ;; Tracked objects:
 17490 ;;		On entry : 0/0
 17491 ;;		On exit  : 0/0
 17492 ;;		Unchanged: 0/0
 17493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17494 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17495 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17496 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17497 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17498 ;;Total ram usage:        0 bytes
 17499 ;; Hardware stack levels used: 1
 17500 ;; Hardware stack levels required when called: 10
 17501 ;; This function calls:
 17502 ;;		NULL
 17503 ;;		_BP3_DefaultInterruptHandler
 17504 ;;		_int_BP3
 17505 ;; This function is called by:
 17506 ;;		_PIN_MANAGER_IOC
 17507 ;; This function uses a non-reentrant model
 17508 ;;
 17509                           
 17510                           	psect	text57
 17511   006284                     __ptext57:
 17512                           	callstack 0
 17513   006284                     _BP3_ISR:
 17514                           	callstack 9
 17515   006284                     
 17516                           ;mcc_generated_files/system/src/pins.c: 216:     if(BP3_InterruptHandler)
 17517   006284  0100               	movlb	0	; () banked
 17518   006286  51F5               	movf	_BP3_InterruptHandler& (0+255),w,b
 17519   006288  11F6               	iorwf	(_BP3_InterruptHandler+1)& (0+255),w,b
 17520   00628A  B4D8               	btfsc	status,2,c
 17521   00628C  EF4A  F031         	goto	i2u918_41
 17522   006290  EF4C  F031         	goto	i2u918_40
 17523   006294                     i2u918_41:
 17524   006294  EF58  F031         	goto	i2l8546
 17525   006298                     i2u918_40:
 17526   006298                     
 17527                           ; BSR set to: 0
 17528                           ;mcc_generated_files/system/src/pins.c: 217:     {;mcc_generated_files/system/src/pins.c
      +                          : 218:         BP3_InterruptHandler();
 17529   006298  D802               	call	i2u919_48
 17530   00629A  EF58  F031         	goto	i2u919_49
 17531   00629E                     i2u919_48:
 17532   00629E  0005               	push	
 17533   0062A0  6EFA               	movwf	pclath,c
 17534   0062A2  51F5               	movf	_BP3_InterruptHandler& (0+255),w,b
 17535   0062A4  6EFD               	movwf	tosl,c
 17536   0062A6  51F6               	movf	(_BP3_InterruptHandler+1)& (0+255),w,b
 17537   0062A8  6EFE               	movwf	tosh,c
 17538   0062AA  6AFF               	clrf	tosu,c
 17539   0062AC  50FA               	movf	pclath,w,c
 17540   0062AE  0012               	return		;indir
 17541   0062B0                     i2u919_49:
 17542   0062B0                     i2l8546:
 17543                           
 17544                           ;mcc_generated_files/system/src/pins.c: 220:     IOCAFbits.IOCAF3 = 0;
 17545   0062B0  013A               	movlb	58	; () banked
 17546   0062B2  9747               	bcf	71,3,b	;volatile
 17547   0062B4                     
 17548                           ; BSR set to: 58
 17549   0062B4  0012               	return		;funcret
 17550   0062B6                     __end_of_BP3_ISR:
 17551                           	callstack 0
 17552                           
 17553 ;; *************** function _BP3_DefaultInterruptHandler *****************
 17554 ;; Defined at:
 17555 ;;		line 233 in file "mcc_generated_files/system/src/pins.c"
 17556 ;; Parameters:    Size  Location     Type
 17557 ;;		None
 17558 ;; Auto vars:     Size  Location     Type
 17559 ;;		None
 17560 ;; Return value:  Size  Location     Type
 17561 ;;                  1    wreg      void 
 17562 ;; Registers used:
 17563 ;;		None
 17564 ;; Tracked objects:
 17565 ;;		On entry : 0/0
 17566 ;;		On exit  : 0/0
 17567 ;;		Unchanged: 0/0
 17568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17569 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17570 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17571 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17572 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17573 ;;Total ram usage:        0 bytes
 17574 ;; Hardware stack levels used: 1
 17575 ;; This function calls:
 17576 ;;		Nothing
 17577 ;; This function is called by:
 17578 ;;		_PIN_MANAGER_Initialize
 17579 ;;		_BP3_ISR
 17580 ;; This function uses a non-reentrant model
 17581 ;;
 17582                           
 17583                           	psect	text58
 17584   006550                     __ptext58:
 17585                           	callstack 0
 17586   006550                     _BP3_DefaultInterruptHandler:
 17587                           	callstack 18
 17588   006550  0012               	return		;funcret
 17589   006552                     __end_of_BP3_DefaultInterruptHandler:
 17590                           	callstack 0
 17591                           
 17592 ;; *************** function _int_BP3 *****************
 17593 ;; Defined at:
 17594 ;;		line 376 in file "main.c"
 17595 ;; Parameters:    Size  Location     Type
 17596 ;;		None
 17597 ;; Auto vars:     Size  Location     Type
 17598 ;;		None
 17599 ;; Return value:  Size  Location     Type
 17600 ;;                  1    wreg      void 
 17601 ;; Registers used:
 17602 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 17603 ;; Tracked objects:
 17604 ;;		On entry : 0/0
 17605 ;;		On exit  : 0/0
 17606 ;;		Unchanged: 0/0
 17607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17608 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17609 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17610 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17611 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17612 ;;Total ram usage:        2 bytes
 17613 ;; Hardware stack levels used: 1
 17614 ;; Hardware stack levels required when called: 9
 17615 ;; This function calls:
 17616 ;;		_appliquer_action
 17617 ;;		i2_LCD_UpdateMenu
 17618 ;; This function is called by:
 17619 ;;		_main
 17620 ;;		_BP3_ISR
 17621 ;; This function uses a non-reentrant model
 17622 ;;
 17623                           
 17624                           	psect	text59
 17625   006362                     __ptext59:
 17626                           	callstack 0
 17627   006362                     _int_BP3:
 17628                           	callstack 9
 17629   006362                     
 17630                           ;main.c: 377:     _delay((unsigned long)((40)*(64000000U/4000.0)));
 17631   006362  0E04               	movlw	4
 17632   006364  0100               	movlb	0	; () banked
 17633   006366  6FD4               	movwf	(??_int_BP3+1)& (0+255),b
 17634   006368  0E40               	movlw	64
 17635   00636A  6FD3               	movwf	??_int_BP3& (0+255),b
 17636   00636C  0E26               	movlw	38
 17637   00636E                     i2u937_47:
 17638   00636E  2EE8               	decfsz	wreg,f,c
 17639   006370  D7FE               	bra	i2u937_47
 17640   006372  2FD3               	decfsz	??_int_BP3& (0+255),f,b
 17641   006374  D7FC               	bra	i2u937_47
 17642   006376  2FD4               	decfsz	(??_int_BP3+1)& (0+255),f,b
 17643   006378  D7FA               	bra	i2u937_47
 17644   00637A  0000               	nop	
 17645   00637C                     
 17646                           ;main.c: 378:     appliquer_action();
 17647   00637C  EC56  F02A         	call	_appliquer_action	;wreg free
 17648   006380                     
 17649                           ;main.c: 379:     LCD_UpdateMenu();
 17650   006380  EC6D  F019         	call	i2_LCD_UpdateMenu	;wreg free
 17651   006384  0012               	return		;funcret
 17652   006386                     __end_of_int_BP3:
 17653                           	callstack 0
 17654                           
 17655 ;; *************** function _appliquer_action *****************
 17656 ;; Defined at:
 17657 ;;		line 385 in file "main.c"
 17658 ;; Parameters:    Size  Location     Type
 17659 ;;		None
 17660 ;; Auto vars:     Size  Location     Type
 17661 ;;  color           3   33[COMRAM] struct GRB
 17662 ;; Return value:  Size  Location     Type
 17663 ;;                  1    wreg      void 
 17664 ;; Registers used:
 17665 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 17666 ;; Tracked objects:
 17667 ;;		On entry : 0/0
 17668 ;;		On exit  : 0/0
 17669 ;;		Unchanged: 0/0
 17670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17671 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17672 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17673 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17674 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17675 ;;Total ram usage:        7 bytes
 17676 ;; Hardware stack levels used: 1
 17677 ;; Hardware stack levels required when called: 5
 17678 ;; This function calls:
 17679 ;;		_off_leds
 17680 ;;		_on_leds
 17681 ;; This function is called by:
 17682 ;;		_int_BP3
 17683 ;; This function uses a non-reentrant model
 17684 ;;
 17685                           
 17686                           	psect	text60
 17687   0054AC                     __ptext60:
 17688                           	callstack 0
 17689   0054AC                     _appliquer_action:
 17690                           	callstack 12
 17691   0054AC                     
 17692                           ;main.c: 386:     if (etat_courant >= ICLED_COULEUR1 && etat_courant <= ICLED_COULEUR8) 
      +                          {
 17693   0054AC  0E03               	movlw	3
 17694   0054AE  0100               	movlb	0	; () banked
 17695   0054B0  65EB               	cpfsgt	_etat_courant& (0+255),b
 17696   0054B2  EF5D  F02A         	goto	i2u829_41
 17697   0054B6  EF5F  F02A         	goto	i2u829_40
 17698   0054BA                     i2u829_41:
 17699   0054BA  EF93  F02A         	goto	i2l7450
 17700   0054BE                     i2u829_40:
 17701   0054BE                     
 17702                           ; BSR set to: 0
 17703   0054BE  0E0C               	movlw	12
 17704   0054C0  61EB               	cpfslt	_etat_courant& (0+255),b
 17705   0054C2  EF65  F02A         	goto	i2u830_41
 17706   0054C6  EF67  F02A         	goto	i2u830_40
 17707   0054CA                     i2u830_41:
 17708   0054CA  EF93  F02A         	goto	i2l7450
 17709   0054CE                     i2u830_40:
 17710   0054CE                     
 17711                           ; BSR set to: 0
 17712                           ;main.c: 387:         GRB color = COLORS_TAB[etat_courant - ICLED_COULEUR1];
 17713   0054CE  51EB               	movf	_etat_courant& (0+255),w,b
 17714   0054D0  0D03               	mullw	3
 17715   0054D2  006F FFCC  F01E    	movff	prodl,??_appliquer_action
 17716   0054D8  006F FFD0  F01F    	movff	prodh,??_appliquer_action+1
 17717   0054DE  0EF4               	movlw	244
 17718   0054E0  241E               	addwf	??_appliquer_action^0,w,c
 17719   0054E2  6E20               	movwf	(??_appliquer_action+2)^0,c
 17720   0054E4  0EFF               	movlw	255
 17721   0054E6  201F               	addwfc	(??_appliquer_action+1)^0,w,c
 17722   0054E8  6E21               	movwf	(??_appliquer_action+3)^0,c
 17723   0054EA  0EEB               	movlw	low _COLORS_TAB
 17724   0054EC  2420               	addwf	(??_appliquer_action+2)^0,w,c
 17725   0054EE  6EF6               	movwf	tblptrl,c
 17726   0054F0  0EFE               	movlw	high _COLORS_TAB
 17727   0054F2  2021               	addwfc	(??_appliquer_action+3)^0,w,c
 17728   0054F4  6EF7               	movwf	tblptrh,c
 17729   0054F6                     	if	1	;There are 3 active tblptr bytes
 17730   0054F6  6AF8               	clrf	tblptru,c
 17731   0054F8  0E00               	movlw	low (__mediumconst shr (0+16))
 17732   0054FA  22F8               	addwfc	tblptru,f,c
 17733   0054FC                     	endif
 17734   0054FC  0009               	tblrd		*+
 17735   0054FE  006F FFD4  F022    	movff	tablat,appliquer_action@color
 17736   005504  0009               	tblrd		*+
 17737   005506  006F FFD4  F023    	movff	tablat,appliquer_action@color+1
 17738   00550C  000A               	tblrd		*-
 17739   00550E  006F FFD4  F024    	movff	tablat,appliquer_action@color+2
 17740   005514                     
 17741                           ; BSR set to: 0
 17742                           ;main.c: 388:         on_leds(color.red, color.green, color.blue);
 17743   005514  C022  F015         	movff	appliquer_action@color,on_leds@g
 17744   005518  C024  F016         	movff	appliquer_action@color+2,on_leds@b
 17745   00551C  5023               	movf	(appliquer_action@color+1)^0,w,c
 17746   00551E  EC6C  F027         	call	_on_leds
 17747                           
 17748                           ;main.c: 389:     } else if (etat_courant == Eteindre) {
 17749   005522  EFAB  F02A         	goto	i2l862
 17750   005526                     i2l7450:
 17751                           
 17752                           ; BSR set to: 0
 17753   005526  0E0C               	movlw	12
 17754   005528  19EB               	xorwf	_etat_courant& (0+255),w,b
 17755   00552A  A4D8               	btfss	status,2,c
 17756   00552C  EF9A  F02A         	goto	i2u831_41
 17757   005530  EF9C  F02A         	goto	i2u831_40
 17758   005534                     i2u831_41:
 17759   005534  EFA0  F02A         	goto	i2l7454
 17760   005538                     i2u831_40:
 17761   005538                     
 17762                           ; BSR set to: 0
 17763                           ;main.c: 390:         off_leds();
 17764   005538  ECF4  F028         	call	_off_leds	;wreg free
 17765                           
 17766                           ;main.c: 391:     } else if (etat_courant == MENU_COURANT) {
 17767   00553C  EFAB  F02A         	goto	i2l862
 17768   005540                     i2l7454:
 17769                           
 17770                           ; BSR set to: 0
 17771   005540  0E02               	movlw	2
 17772   005542  19EB               	xorwf	_etat_courant& (0+255),w,b
 17773   005544  A4D8               	btfss	status,2,c
 17774   005546  EFA7  F02A         	goto	i2u832_41
 17775   00554A  EFA9  F02A         	goto	i2u832_40
 17776   00554E                     i2u832_41:
 17777   00554E  EFAB  F02A         	goto	i2l862
 17778   005552                     i2u832_40:
 17779   005552                     
 17780                           ; BSR set to: 0
 17781                           ;main.c: 392:         etat_courant = MESURE_COURANT;
 17782   005552  0E0D               	movlw	13
 17783   005554  6FEB               	movwf	_etat_courant& (0+255),b
 17784   005556                     i2l862:
 17785   005556  0012               	return		;funcret
 17786   005558                     __end_of_appliquer_action:
 17787                           	callstack 0
 17788                           
 17789 ;; *************** function _on_leds *****************
 17790 ;; Defined at:
 17791 ;;		line 222 in file "main.c"
 17792 ;; Parameters:    Size  Location     Type
 17793 ;;  r               1    wreg     unsigned char 
 17794 ;;  g               1   20[COMRAM] unsigned char 
 17795 ;;  b               1   21[COMRAM] unsigned char 
 17796 ;; Auto vars:     Size  Location     Type
 17797 ;;  r               1   26[COMRAM] unsigned char 
 17798 ;;  j               1   28[COMRAM] unsigned char 
 17799 ;;  i               1   27[COMRAM] unsigned char 
 17800 ;; Return value:  Size  Location     Type
 17801 ;;                  1    wreg      void 
 17802 ;; Registers used:
 17803 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17804 ;; Tracked objects:
 17805 ;;		On entry : 0/0
 17806 ;;		On exit  : 0/0
 17807 ;;		Unchanged: 0/0
 17808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17809 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17810 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17811 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17812 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17813 ;;Total ram usage:        9 bytes
 17814 ;; Hardware stack levels used: 1
 17815 ;; Hardware stack levels required when called: 4
 17816 ;; This function calls:
 17817 ;;		_send_leds
 17818 ;; This function is called by:
 17819 ;;		_appliquer_action
 17820 ;; This function uses a non-reentrant model
 17821 ;;
 17822                           
 17823                           	psect	text61
 17824   004ED8                     __ptext61:
 17825                           	callstack 0
 17826   004ED8                     _on_leds:
 17827                           	callstack 12
 17828                           
 17829                           ;incstack = 0
 17830                           ;on_leds@r stored from wreg
 17831   004ED8  6E1B               	movwf	on_leds@r^0,c
 17832   004EDA                     
 17833                           ;main.c: 223:     uint8_t i = 0;
 17834   004EDA  6A1C               	clrf	on_leds@i^0,c
 17835                           
 17836                           ;main.c: 225:     for(i = 0 ; i< 12 ; i++ ){
 17837   004EDC  6A1C               	clrf	on_leds@i^0,c
 17838   004EDE                     i2l777:
 17839                           
 17840                           ;main.c: 226:         for(j= 0 ; j< 12 ; j++ ){
 17841   004EDE  6A1D               	clrf	on_leds@j^0,c
 17842   004EE0                     i2l7098:
 17843                           
 17844                           ;main.c: 227:             matrix_tab[i][j].red = r;
 17845   004EE0  501D               	movf	on_leds@j^0,w,c
 17846   004EE2  0D03               	mullw	3
 17847   004EE4  006F FFCC  F017    	movff	prodl,??_on_leds
 17848   004EEA  006F FFD0  F018    	movff	prodh,??_on_leds+1
 17849   004EF0  501C               	movf	on_leds@i^0,w,c
 17850   004EF2  0D24               	mullw	36
 17851   004EF4  0E51               	movlw	low (_matrix_tab+1)
 17852   004EF6  24F3               	addwf	243,w,c
 17853   004EF8  6E19               	movwf	(??_on_leds+2)^0,c
 17854   004EFA  0E02               	movlw	high (_matrix_tab+1)
 17855   004EFC  20F4               	addwfc	prodh,w,c
 17856   004EFE  6E1A               	movwf	(??_on_leds+3)^0,c
 17857   004F00  5017               	movf	??_on_leds^0,w,c
 17858   004F02  2419               	addwf	(??_on_leds+2)^0,w,c
 17859   004F04  6ED9               	movwf	fsr2l,c
 17860   004F06  5018               	movf	(??_on_leds+1)^0,w,c
 17861   004F08  201A               	addwfc	(??_on_leds+3)^0,w,c
 17862   004F0A  6EDA               	movwf	fsr2h,c
 17863   004F0C  0060  F06F  FFDF   	movff	on_leds@r,indf2
 17864                           
 17865                           ;main.c: 228:             matrix_tab[i][j].green = g;
 17866   004F12  501D               	movf	on_leds@j^0,w,c
 17867   004F14  0D03               	mullw	3
 17868   004F16  006F FFCC  F017    	movff	prodl,??_on_leds
 17869   004F1C  006F FFD0  F018    	movff	prodh,??_on_leds+1
 17870   004F22  501C               	movf	on_leds@i^0,w,c
 17871   004F24  0D24               	mullw	36
 17872   004F26  0E50               	movlw	low _matrix_tab
 17873   004F28  24F3               	addwf	243,w,c
 17874   004F2A  6E19               	movwf	(??_on_leds+2)^0,c
 17875   004F2C  0E02               	movlw	high _matrix_tab
 17876   004F2E  20F4               	addwfc	prodh,w,c
 17877   004F30  6E1A               	movwf	(??_on_leds+3)^0,c
 17878   004F32  5017               	movf	??_on_leds^0,w,c
 17879   004F34  2419               	addwf	(??_on_leds+2)^0,w,c
 17880   004F36  6ED9               	movwf	fsr2l,c
 17881   004F38  5018               	movf	(??_on_leds+1)^0,w,c
 17882   004F3A  201A               	addwfc	(??_on_leds+3)^0,w,c
 17883   004F3C  6EDA               	movwf	fsr2h,c
 17884   004F3E  0060  F057  FFDF   	movff	on_leds@g,indf2
 17885                           
 17886                           ;main.c: 229:             matrix_tab[i][j].blue = b;
 17887   004F44  501D               	movf	on_leds@j^0,w,c
 17888   004F46  0D03               	mullw	3
 17889   004F48  006F FFCC  F017    	movff	prodl,??_on_leds
 17890   004F4E  006F FFD0  F018    	movff	prodh,??_on_leds+1
 17891   004F54  501C               	movf	on_leds@i^0,w,c
 17892   004F56  0D24               	mullw	36
 17893   004F58  0E52               	movlw	low (_matrix_tab+2)
 17894   004F5A  24F3               	addwf	243,w,c
 17895   004F5C  6E19               	movwf	(??_on_leds+2)^0,c
 17896   004F5E  0E02               	movlw	high (_matrix_tab+2)
 17897   004F60  20F4               	addwfc	prodh,w,c
 17898   004F62  6E1A               	movwf	(??_on_leds+3)^0,c
 17899   004F64  5017               	movf	??_on_leds^0,w,c
 17900   004F66  2419               	addwf	(??_on_leds+2)^0,w,c
 17901   004F68  6ED9               	movwf	fsr2l,c
 17902   004F6A  5018               	movf	(??_on_leds+1)^0,w,c
 17903   004F6C  201A               	addwfc	(??_on_leds+3)^0,w,c
 17904   004F6E  6EDA               	movwf	fsr2h,c
 17905   004F70  0060  F05B  FFDF   	movff	on_leds@b,indf2
 17906   004F76                     
 17907                           ;main.c: 230:         }
 17908   004F76  2A1D               	incf	on_leds@j^0,f,c
 17909   004F78  0E0B               	movlw	11
 17910   004F7A  641D               	cpfsgt	on_leds@j^0,c
 17911   004F7C  EFC2  F027         	goto	i2u783_41
 17912   004F80  EFC4  F027         	goto	i2u783_40
 17913   004F84                     i2u783_41:
 17914   004F84  EF70  F027         	goto	i2l7098
 17915   004F88                     i2u783_40:
 17916   004F88                     
 17917                           ;main.c: 231:     }
 17918   004F88  2A1C               	incf	on_leds@i^0,f,c
 17919   004F8A  0E0B               	movlw	11
 17920   004F8C  641C               	cpfsgt	on_leds@i^0,c
 17921   004F8E  EFCB  F027         	goto	i2u784_41
 17922   004F92  EFCD  F027         	goto	i2u784_40
 17923   004F96                     i2u784_41:
 17924   004F96  EF6F  F027         	goto	i2l777
 17925   004F9A                     i2u784_40:
 17926   004F9A                     
 17927                           ;main.c: 232:      send_leds();
 17928   004F9A  EC32  F028         	call	_send_leds	;wreg free
 17929   004F9E  0012               	return		;funcret
 17930   004FA0                     __end_of_on_leds:
 17931                           	callstack 0
 17932                           
 17933 ;; *************** function _off_leds *****************
 17934 ;; Defined at:
 17935 ;;		line 207 in file "main.c"
 17936 ;; Parameters:    Size  Location     Type
 17937 ;;		None
 17938 ;; Auto vars:     Size  Location     Type
 17939 ;;  j               1   25[COMRAM] unsigned char 
 17940 ;;  i               1   24[COMRAM] unsigned char 
 17941 ;; Return value:  Size  Location     Type
 17942 ;;                  1    wreg      void 
 17943 ;; Registers used:
 17944 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17945 ;; Tracked objects:
 17946 ;;		On entry : 0/0
 17947 ;;		On exit  : 0/0
 17948 ;;		Unchanged: 0/0
 17949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17950 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17951 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17952 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17953 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17954 ;;Total ram usage:        6 bytes
 17955 ;; Hardware stack levels used: 1
 17956 ;; Hardware stack levels required when called: 4
 17957 ;; This function calls:
 17958 ;;		_send_leds
 17959 ;; This function is called by:
 17960 ;;		_appliquer_action
 17961 ;; This function uses a non-reentrant model
 17962 ;;
 17963                           
 17964                           	psect	text62
 17965   0051E8                     __ptext62:
 17966                           	callstack 0
 17967   0051E8                     _off_leds:
 17968                           	callstack 12
 17969   0051E8                     
 17970                           ;main.c: 208:     uint8_t i = 0;
 17971   0051E8  6A19               	clrf	off_leds@i^0,c
 17972                           
 17973                           ;main.c: 211:     for(i = 0 ; i< 12 ; i++ ){
 17974   0051EA  6A19               	clrf	off_leds@i^0,c
 17975   0051EC                     i2l770:
 17976                           
 17977                           ;main.c: 212:         for(j= 0 ; j< 12 ; j++ ){
 17978   0051EC  6A1A               	clrf	off_leds@j^0,c
 17979   0051EE                     i2l7076:
 17980                           
 17981                           ;main.c: 213:             matrix_tab[i][j].red = 0;
 17982   0051EE  501A               	movf	off_leds@j^0,w,c
 17983   0051F0  0D03               	mullw	3
 17984   0051F2  006F FFCC  F015    	movff	prodl,??_off_leds
 17985   0051F8  006F FFD0  F016    	movff	prodh,??_off_leds+1
 17986   0051FE  5019               	movf	off_leds@i^0,w,c
 17987   005200  0D24               	mullw	36
 17988   005202  0E51               	movlw	low (_matrix_tab+1)
 17989   005204  24F3               	addwf	243,w,c
 17990   005206  6E17               	movwf	(??_off_leds+2)^0,c
 17991   005208  0E02               	movlw	high (_matrix_tab+1)
 17992   00520A  20F4               	addwfc	prodh,w,c
 17993   00520C  6E18               	movwf	(??_off_leds+3)^0,c
 17994   00520E  5015               	movf	??_off_leds^0,w,c
 17995   005210  2417               	addwf	(??_off_leds+2)^0,w,c
 17996   005212  6ED9               	movwf	fsr2l,c
 17997   005214  5016               	movf	(??_off_leds+1)^0,w,c
 17998   005216  2018               	addwfc	(??_off_leds+3)^0,w,c
 17999   005218  6EDA               	movwf	fsr2h,c
 18000   00521A  6ADF               	clrf	indf2,c
 18001                           
 18002                           ;main.c: 214:             matrix_tab[i][j].green = 0;
 18003   00521C  501A               	movf	off_leds@j^0,w,c
 18004   00521E  0D03               	mullw	3
 18005   005220  006F FFCC  F015    	movff	prodl,??_off_leds
 18006   005226  006F FFD0  F016    	movff	prodh,??_off_leds+1
 18007   00522C  5019               	movf	off_leds@i^0,w,c
 18008   00522E  0D24               	mullw	36
 18009   005230  0E50               	movlw	low _matrix_tab
 18010   005232  24F3               	addwf	243,w,c
 18011   005234  6E17               	movwf	(??_off_leds+2)^0,c
 18012   005236  0E02               	movlw	high _matrix_tab
 18013   005238  20F4               	addwfc	prodh,w,c
 18014   00523A  6E18               	movwf	(??_off_leds+3)^0,c
 18015   00523C  5015               	movf	??_off_leds^0,w,c
 18016   00523E  2417               	addwf	(??_off_leds+2)^0,w,c
 18017   005240  6ED9               	movwf	fsr2l,c
 18018   005242  5016               	movf	(??_off_leds+1)^0,w,c
 18019   005244  2018               	addwfc	(??_off_leds+3)^0,w,c
 18020   005246  6EDA               	movwf	fsr2h,c
 18021   005248  6ADF               	clrf	indf2,c
 18022                           
 18023                           ;main.c: 215:             matrix_tab[i][j].blue = 0;
 18024   00524A  501A               	movf	off_leds@j^0,w,c
 18025   00524C  0D03               	mullw	3
 18026   00524E  006F FFCC  F015    	movff	prodl,??_off_leds
 18027   005254  006F FFD0  F016    	movff	prodh,??_off_leds+1
 18028   00525A  5019               	movf	off_leds@i^0,w,c
 18029   00525C  0D24               	mullw	36
 18030   00525E  0E52               	movlw	low (_matrix_tab+2)
 18031   005260  24F3               	addwf	243,w,c
 18032   005262  6E17               	movwf	(??_off_leds+2)^0,c
 18033   005264  0E02               	movlw	high (_matrix_tab+2)
 18034   005266  20F4               	addwfc	prodh,w,c
 18035   005268  6E18               	movwf	(??_off_leds+3)^0,c
 18036   00526A  5015               	movf	??_off_leds^0,w,c
 18037   00526C  2417               	addwf	(??_off_leds+2)^0,w,c
 18038   00526E  6ED9               	movwf	fsr2l,c
 18039   005270  5016               	movf	(??_off_leds+1)^0,w,c
 18040   005272  2018               	addwfc	(??_off_leds+3)^0,w,c
 18041   005274  6EDA               	movwf	fsr2h,c
 18042   005276  6ADF               	clrf	indf2,c
 18043   005278                     
 18044                           ;main.c: 216:         }
 18045   005278  2A1A               	incf	off_leds@j^0,f,c
 18046   00527A  0E0B               	movlw	11
 18047   00527C  641A               	cpfsgt	off_leds@j^0,c
 18048   00527E  EF43  F029         	goto	i2u781_41
 18049   005282  EF45  F029         	goto	i2u781_40
 18050   005286                     i2u781_41:
 18051   005286  EFF7  F028         	goto	i2l7076
 18052   00528A                     i2u781_40:
 18053   00528A                     
 18054                           ;main.c: 217:     }
 18055   00528A  2A19               	incf	off_leds@i^0,f,c
 18056   00528C  0E0B               	movlw	11
 18057   00528E  6419               	cpfsgt	off_leds@i^0,c
 18058   005290  EF4C  F029         	goto	i2u782_41
 18059   005294  EF4E  F029         	goto	i2u782_40
 18060   005298                     i2u782_41:
 18061   005298  EFF6  F028         	goto	i2l770
 18062   00529C                     i2u782_40:
 18063   00529C                     
 18064                           ;main.c: 218:      send_leds();
 18065   00529C  EC32  F028         	call	_send_leds	;wreg free
 18066   0052A0  0012               	return		;funcret
 18067   0052A2                     __end_of_off_leds:
 18068                           	callstack 0
 18069                           
 18070 ;; *************** function _send_leds *****************
 18071 ;; Defined at:
 18072 ;;		line 236 in file "main.c"
 18073 ;; Parameters:    Size  Location     Type
 18074 ;;		None
 18075 ;; Auto vars:     Size  Location     Type
 18076 ;;  j               1   19[COMRAM] unsigned char 
 18077 ;;  i               1   18[COMRAM] unsigned char 
 18078 ;; Return value:  Size  Location     Type
 18079 ;;                  1    wreg      void 
 18080 ;; Registers used:
 18081 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18082 ;; Tracked objects:
 18083 ;;		On entry : 0/0
 18084 ;;		On exit  : 0/0
 18085 ;;		Unchanged: 0/0
 18086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18087 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18088 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18089 ;;      Temps:         12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18090 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18091 ;;Total ram usage:       14 bytes
 18092 ;; Hardware stack levels used: 1
 18093 ;; Hardware stack levels required when called: 3
 18094 ;; This function calls:
 18095 ;;		_send_color
 18096 ;;		_ws2812_reset
 18097 ;; This function is called by:
 18098 ;;		_off_leds
 18099 ;;		_on_leds
 18100 ;;		_rainbow_scroll_vertical
 18101 ;; This function uses a non-reentrant model
 18102 ;;
 18103                           
 18104                           	psect	text63
 18105   005064                     __ptext63:
 18106                           	callstack 0
 18107   005064                     _send_leds:
 18108                           	callstack 12
 18109   005064                     
 18110                           ;main.c: 237:     uint8_t i = 0;
 18111   005064  6A13               	clrf	send_leds@i^0,c
 18112                           
 18113                           ;main.c: 240:     for(i = 0 ; i< 12 ; i++ ){
 18114   005066  6A13               	clrf	send_leds@i^0,c
 18115   005068                     i2l784:
 18116                           
 18117                           ;main.c: 241:         for(j= 0 ; j< 12 ; j++ ){
 18118   005068  6A14               	clrf	send_leds@j^0,c
 18119   00506A                     i2l6450:
 18120                           
 18121                           ;main.c: 242:             send_color(matrix_tab[i][j].red,matrix_tab[i][j].green, matrix
      +                          _tab[i][j].blue);
 18122   00506A  5014               	movf	send_leds@j^0,w,c
 18123   00506C  0D03               	mullw	3
 18124   00506E  006F FFCC  F007    	movff	prodl,??_send_leds
 18125   005074  006F FFD0  F008    	movff	prodh,??_send_leds+1
 18126   00507A  5013               	movf	send_leds@i^0,w,c
 18127   00507C  0D24               	mullw	36
 18128   00507E  0E50               	movlw	low _matrix_tab
 18129   005080  24F3               	addwf	243,w,c
 18130   005082  6E09               	movwf	(??_send_leds+2)^0,c
 18131   005084  0E02               	movlw	high _matrix_tab
 18132   005086  20F4               	addwfc	prodh,w,c
 18133   005088  6E0A               	movwf	(??_send_leds+3)^0,c
 18134   00508A  5007               	movf	??_send_leds^0,w,c
 18135   00508C  2409               	addwf	(??_send_leds+2)^0,w,c
 18136   00508E  6ED9               	movwf	fsr2l,c
 18137   005090  5008               	movf	(??_send_leds+1)^0,w,c
 18138   005092  200A               	addwfc	(??_send_leds+3)^0,w,c
 18139   005094  6EDA               	movwf	fsr2h,c
 18140   005096  50DF               	movf	indf2,w,c
 18141   005098  6E04               	movwf	send_color@g^0,c
 18142   00509A  5014               	movf	send_leds@j^0,w,c
 18143   00509C  0D03               	mullw	3
 18144   00509E  006F FFCC  F00B    	movff	prodl,??_send_leds+4
 18145   0050A4  006F FFD0  F00C    	movff	prodh,??_send_leds+5
 18146   0050AA  5013               	movf	send_leds@i^0,w,c
 18147   0050AC  0D24               	mullw	36
 18148   0050AE  0E52               	movlw	low (_matrix_tab+2)
 18149   0050B0  24F3               	addwf	243,w,c
 18150   0050B2  6E0D               	movwf	(??_send_leds+6)^0,c
 18151   0050B4  0E02               	movlw	high (_matrix_tab+2)
 18152   0050B6  20F4               	addwfc	prodh,w,c
 18153   0050B8  6E0E               	movwf	(??_send_leds+7)^0,c
 18154   0050BA  500B               	movf	(??_send_leds+4)^0,w,c
 18155   0050BC  240D               	addwf	(??_send_leds+6)^0,w,c
 18156   0050BE  6ED9               	movwf	fsr2l,c
 18157   0050C0  500C               	movf	(??_send_leds+5)^0,w,c
 18158   0050C2  200E               	addwfc	(??_send_leds+7)^0,w,c
 18159   0050C4  6EDA               	movwf	fsr2h,c
 18160   0050C6  50DF               	movf	indf2,w,c
 18161   0050C8  6E05               	movwf	send_color@b^0,c
 18162   0050CA  5014               	movf	send_leds@j^0,w,c
 18163   0050CC  0D03               	mullw	3
 18164   0050CE  006F FFCC  F00F    	movff	prodl,??_send_leds+8
 18165   0050D4  006F FFD0  F010    	movff	prodh,??_send_leds+9
 18166   0050DA  5013               	movf	send_leds@i^0,w,c
 18167   0050DC  0D24               	mullw	36
 18168   0050DE  0E51               	movlw	low (_matrix_tab+1)
 18169   0050E0  24F3               	addwf	243,w,c
 18170   0050E2  6E11               	movwf	(??_send_leds+10)^0,c
 18171   0050E4  0E02               	movlw	high (_matrix_tab+1)
 18172   0050E6  20F4               	addwfc	prodh,w,c
 18173   0050E8  6E12               	movwf	(??_send_leds+11)^0,c
 18174   0050EA  500F               	movf	(??_send_leds+8)^0,w,c
 18175   0050EC  2411               	addwf	(??_send_leds+10)^0,w,c
 18176   0050EE  6ED9               	movwf	fsr2l,c
 18177   0050F0  5010               	movf	(??_send_leds+9)^0,w,c
 18178   0050F2  2012               	addwfc	(??_send_leds+11)^0,w,c
 18179   0050F4  6EDA               	movwf	fsr2h,c
 18180   0050F6  50DF               	movf	indf2,w,c
 18181   0050F8  EC38  F032         	call	_send_color
 18182   0050FC                     
 18183                           ;main.c: 243:         }
 18184   0050FC  2A14               	incf	send_leds@j^0,f,c
 18185   0050FE  0E0B               	movlw	11
 18186   005100  6414               	cpfsgt	send_leds@j^0,c
 18187   005102  EF85  F028         	goto	i2u676_41
 18188   005106  EF87  F028         	goto	i2u676_40
 18189   00510A                     i2u676_41:
 18190   00510A  EF35  F028         	goto	i2l6450
 18191   00510E                     i2u676_40:
 18192   00510E                     
 18193                           ;main.c: 244:     }
 18194   00510E  2A13               	incf	send_leds@i^0,f,c
 18195   005110  0E0B               	movlw	11
 18196   005112  6413               	cpfsgt	send_leds@i^0,c
 18197   005114  EF8E  F028         	goto	i2u677_41
 18198   005118  EF90  F028         	goto	i2u677_40
 18199   00511C                     i2u677_41:
 18200   00511C  EF34  F028         	goto	i2l784
 18201   005120                     i2u677_40:
 18202   005120                     
 18203                           ;main.c: 245:      ws2812_reset();
 18204   005120  EC59  F032         	call	_ws2812_reset	;wreg free
 18205   005124  0012               	return		;funcret
 18206   005126                     __end_of_send_leds:
 18207                           	callstack 0
 18208                           
 18209 ;; *************** function _ws2812_reset *****************
 18210 ;; Defined at:
 18211 ;;		line 299 in file "main.c"
 18212 ;; Parameters:    Size  Location     Type
 18213 ;;		None
 18214 ;; Auto vars:     Size  Location     Type
 18215 ;;		None
 18216 ;; Return value:  Size  Location     Type
 18217 ;;                  1    wreg      void 
 18218 ;; Registers used:
 18219 ;;		wreg
 18220 ;; Tracked objects:
 18221 ;;		On entry : 0/0
 18222 ;;		On exit  : 0/0
 18223 ;;		Unchanged: 0/0
 18224 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18225 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18226 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18227 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18228 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18229 ;;Total ram usage:        0 bytes
 18230 ;; Hardware stack levels used: 1
 18231 ;; This function calls:
 18232 ;;		Nothing
 18233 ;; This function is called by:
 18234 ;;		_send_leds
 18235 ;; This function uses a non-reentrant model
 18236 ;;
 18237                           
 18238                           	psect	text64
 18239   0064B2                     __ptext64:
 18240                           	callstack 0
 18241   0064B2                     _ws2812_reset:
 18242                           	callstack 14
 18243   0064B2                     
 18244                           ;main.c: 300:     LATBbits.LATB5 = 0;
 18245   0064B2  9ABB               	bcf	187,5,c	;volatile
 18246   0064B4                     
 18247                           ;main.c: 301:     _delay((unsigned long)((80)*(64000000U/4000000.0)));
 18248   0064B4  0EB6               	movlw	182
 18249   0064B6                     i2u938_47:
 18250   0064B6  D000               	nop2	
 18251   0064B8  D000               	nop2	
 18252   0064BA  2EE8               	decfsz	wreg,f,c
 18253   0064BC  D7FC               	bra	i2u938_47
 18254   0064BE  D000               	nop2	
 18255   0064C0  D000               	nop2	
 18256   0064C2  D000               	nop2	
 18257   0064C4  0012               	return		;funcret
 18258   0064C6                     __end_of_ws2812_reset:
 18259                           	callstack 0
 18260                           
 18261 ;; *************** function _send_color *****************
 18262 ;; Defined at:
 18263 ;;		line 293 in file "main.c"
 18264 ;; Parameters:    Size  Location     Type
 18265 ;;  r               1    wreg     unsigned char 
 18266 ;;  g               1    3[COMRAM] unsigned char 
 18267 ;;  b               1    4[COMRAM] unsigned char 
 18268 ;; Auto vars:     Size  Location     Type
 18269 ;;  r               1    5[COMRAM] unsigned char 
 18270 ;; Return value:  Size  Location     Type
 18271 ;;                  1    wreg      void 
 18272 ;; Registers used:
 18273 ;;		wreg, status,2, status,0, cstack
 18274 ;; Tracked objects:
 18275 ;;		On entry : 0/0
 18276 ;;		On exit  : 0/0
 18277 ;;		Unchanged: 0/0
 18278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18279 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18280 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18281 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18282 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18283 ;;Total ram usage:        3 bytes
 18284 ;; Hardware stack levels used: 1
 18285 ;; Hardware stack levels required when called: 2
 18286 ;; This function calls:
 18287 ;;		_send_byte
 18288 ;; This function is called by:
 18289 ;;		_send_leds
 18290 ;; This function uses a non-reentrant model
 18291 ;;
 18292                           
 18293                           	psect	text65
 18294   006470                     __ptext65:
 18295                           	callstack 0
 18296   006470                     _send_color:
 18297                           	callstack 12
 18298                           
 18299                           ;incstack = 0
 18300                           ;send_color@r stored from wreg
 18301   006470  6E06               	movwf	send_color@r^0,c
 18302   006472                     
 18303                           ;main.c: 294:     send_byte(g);
 18304   006472  5004               	movf	send_color@g^0,w,c
 18305   006474  ECC3  F031         	call	_send_byte
 18306                           
 18307                           ;main.c: 295:     send_byte(r);
 18308   006478  5006               	movf	send_color@r^0,w,c
 18309   00647A  ECC3  F031         	call	_send_byte
 18310                           
 18311                           ;main.c: 296:     send_byte(b);
 18312   00647E  5005               	movf	send_color@b^0,w,c
 18313   006480  ECC3  F031         	call	_send_byte
 18314   006484  0012               	return		;funcret
 18315   006486                     __end_of_send_color:
 18316                           	callstack 0
 18317                           
 18318 ;; *************** function _send_byte *****************
 18319 ;; Defined at:
 18320 ;;		line 284 in file "main.c"
 18321 ;; Parameters:    Size  Location     Type
 18322 ;;  byte            1    wreg     unsigned char 
 18323 ;; Auto vars:     Size  Location     Type
 18324 ;;  byte            1    1[COMRAM] unsigned char 
 18325 ;;  i               1    2[COMRAM] unsigned char 
 18326 ;; Return value:  Size  Location     Type
 18327 ;;                  1    wreg      void 
 18328 ;; Registers used:
 18329 ;;		wreg, status,2, status,0, cstack
 18330 ;; Tracked objects:
 18331 ;;		On entry : 0/0
 18332 ;;		On exit  : 0/0
 18333 ;;		Unchanged: 0/0
 18334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18335 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18336 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18337 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18338 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18339 ;;Total ram usage:        2 bytes
 18340 ;; Hardware stack levels used: 1
 18341 ;; Hardware stack levels required when called: 1
 18342 ;; This function calls:
 18343 ;;		_send_bit
 18344 ;; This function is called by:
 18345 ;;		_send_color
 18346 ;; This function uses a non-reentrant model
 18347 ;;
 18348                           
 18349                           	psect	text66
 18350   006386                     __ptext66:
 18351                           	callstack 0
 18352   006386                     _send_byte:
 18353                           	callstack 12
 18354                           
 18355                           ;incstack = 0
 18356                           ;send_byte@byte stored from wreg
 18357   006386  6E02               	movwf	send_byte@byte^0,c
 18358   006388                     
 18359                           ;main.c: 285:     for (uint8_t i = 0; i < 8; i++) {
 18360   006388  6A03               	clrf	send_byte@i^0,c
 18361   00638A                     i2l5866:
 18362                           
 18363                           ;main.c: 286:         send_bit(byte & 0x80);
 18364   00638A  5002               	movf	send_byte@byte^0,w,c
 18365   00638C  0B80               	andlw	128
 18366   00638E  ECD4  F030         	call	_send_bit
 18367   006392                     
 18368                           ;main.c: 287:         byte <<= 1;
 18369   006392  90D8               	bcf	status,0,c
 18370   006394  3602               	rlcf	send_byte@byte^0,f,c
 18371   006396                     
 18372                           ;main.c: 288:     }
 18373   006396  2A03               	incf	send_byte@i^0,f,c
 18374   006398  0E07               	movlw	7
 18375   00639A  6403               	cpfsgt	send_byte@i^0,c
 18376   00639C  EFD2  F031         	goto	i2u587_41
 18377   0063A0  EFD4  F031         	goto	i2u587_40
 18378   0063A4                     i2u587_41:
 18379   0063A4  EFC5  F031         	goto	i2l5866
 18380   0063A8                     i2u587_40:
 18381   0063A8  0012               	return		;funcret
 18382   0063AA                     __end_of_send_byte:
 18383                           	callstack 0
 18384                           
 18385 ;; *************** function _send_bit *****************
 18386 ;; Defined at:
 18387 ;;		line 270 in file "main.c"
 18388 ;; Parameters:    Size  Location     Type
 18389 ;;  bit             1    wreg     unsigned char 
 18390 ;; Auto vars:     Size  Location     Type
 18391 ;;  bit             1    0[COMRAM] unsigned char 
 18392 ;; Return value:  Size  Location     Type
 18393 ;;                  1    wreg      void 
 18394 ;; Registers used:
 18395 ;;		wreg, status,2, cstack
 18396 ;; Tracked objects:
 18397 ;;		On entry : 0/0
 18398 ;;		On exit  : 0/0
 18399 ;;		Unchanged: 0/0
 18400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18401 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18402 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18403 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18404 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18405 ;;Total ram usage:        1 bytes
 18406 ;; Hardware stack levels used: 1
 18407 ;; This function calls:
 18408 ;;		Nothing
 18409 ;; This function is called by:
 18410 ;;		_send_byte
 18411 ;; This function uses a non-reentrant model
 18412 ;;
 18413                           
 18414                           	psect	text67
 18415   0061A8                     __ptext67:
 18416                           	callstack 0
 18417   0061A8                     _send_bit:
 18418                           	callstack 12
 18419                           
 18420                           ;incstack = 0
 18421                           ;send_bit@bit stored from wreg
 18422   0061A8  6E01               	movwf	send_bit@bit^0,c
 18423   0061AA                     
 18424                           ;main.c: 271:     if (bit) {
 18425   0061AA  5001               	movf	send_bit@bit^0,w,c
 18426   0061AC  B4D8               	btfsc	status,2,c
 18427   0061AE  EFDB  F030         	goto	i2u494_41
 18428   0061B2  EFDD  F030         	goto	i2u494_40
 18429   0061B6                     i2u494_41:
 18430   0061B6  EFE8  F030         	goto	i2l800
 18431   0061BA                     i2u494_40:
 18432   0061BA                     
 18433                           ;main.c: 272:         LATBbits.LATB5 = 1;
 18434   0061BA  8ABB               	bsf	187,5,c	;volatile
 18435   0061BC                     
 18436                           ;main.c: 273:         _delay((unsigned long)((0.7)*(64000000U/4000000.0)));
 18437   0061BC  0E03               	movlw	3
 18438   0061BE                     i2u939_47:
 18439   0061BE  2EE8               	decfsz	wreg,f,c
 18440   0061C0  D7FE               	bra	i2u939_47
 18441   0061C2  D000               	nop2	
 18442   0061C4                     
 18443                           ;main.c: 274:         LATBbits.LATB5 = 0;
 18444   0061C4  9ABB               	bcf	187,5,c	;volatile
 18445                           
 18446                           ;main.c: 275:         _delay((unsigned long)((0.6)*(64000000U/4000000.0)));
 18447   0061C6  0E03               	movlw	3
 18448   0061C8                     i2u940_47:
 18449   0061C8  2EE8               	decfsz	wreg,f,c
 18450   0061CA  D7FE               	bra	i2u940_47
 18451                           
 18452                           ;main.c: 276:     } else {
 18453   0061CC  EFF0  F030         	goto	i2l802
 18454   0061D0                     i2l800:
 18455                           
 18456                           ;main.c: 277:         LATBbits.LATB5 = 1;
 18457   0061D0  8ABB               	bsf	187,5,c	;volatile
 18458                           
 18459                           ;main.c: 278:         _delay((unsigned long)((0.35)*(64000000U/4000000.0)));
 18460   0061D2  D000               	nop2		;2 cycle nop
 18461   0061D4  D000               	nop2		;2 cycle nop
 18462   0061D6  0000               	nop	
 18463                           
 18464                           ;main.c: 279:         LATBbits.LATB5 = 0;
 18465   0061D8  9ABB               	bcf	187,5,c	;volatile
 18466   0061DA                     
 18467                           ;main.c: 280:         _delay((unsigned long)((0.8)*(64000000U/4000000.0)));
 18468   0061DA  0E04               	movlw	4
 18469   0061DC                     i2u941_47:
 18470   0061DC  2EE8               	decfsz	wreg,f,c
 18471   0061DE  D7FE               	bra	i2u941_47
 18472   0061E0                     i2l802:
 18473   0061E0  0012               	return		;funcret
 18474   0061E2                     __end_of_send_bit:
 18475                           	callstack 0
 18476                           
 18477 ;; *************** function _BP2_ISR *****************
 18478 ;; Defined at:
 18479 ;;		line 181 in file "mcc_generated_files/system/src/pins.c"
 18480 ;; Parameters:    Size  Location     Type
 18481 ;;		None
 18482 ;; Auto vars:     Size  Location     Type
 18483 ;;		None
 18484 ;; Return value:  Size  Location     Type
 18485 ;;                  1    wreg      void 
 18486 ;; Registers used:
 18487 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
 18488 ;; Tracked objects:
 18489 ;;		On entry : 0/0
 18490 ;;		On exit  : 0/0
 18491 ;;		Unchanged: 0/0
 18492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18493 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18494 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18495 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18496 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18497 ;;Total ram usage:        0 bytes
 18498 ;; Hardware stack levels used: 1
 18499 ;; Hardware stack levels required when called: 10
 18500 ;; This function calls:
 18501 ;;		NULL
 18502 ;;		_BP2_DefaultInterruptHandler
 18503 ;;		_int_BP2
 18504 ;; This function is called by:
 18505 ;;		_PIN_MANAGER_IOC
 18506 ;; This function uses a non-reentrant model
 18507 ;;
 18508                           
 18509                           	psect	text68
 18510   0062B6                     __ptext68:
 18511                           	callstack 0
 18512   0062B6                     _BP2_ISR:
 18513                           	callstack 9
 18514   0062B6                     
 18515                           ;mcc_generated_files/system/src/pins.c: 186:     if(BP2_InterruptHandler)
 18516   0062B6  0100               	movlb	0	; () banked
 18517   0062B8  51F7               	movf	_BP2_InterruptHandler& (0+255),w,b
 18518   0062BA  11F8               	iorwf	(_BP2_InterruptHandler+1)& (0+255),w,b
 18519   0062BC  B4D8               	btfsc	status,2,c
 18520   0062BE  EF63  F031         	goto	i2u916_41
 18521   0062C2  EF65  F031         	goto	i2u916_40
 18522   0062C6                     i2u916_41:
 18523   0062C6  EF71  F031         	goto	i2l8540
 18524   0062CA                     i2u916_40:
 18525   0062CA                     
 18526                           ; BSR set to: 0
 18527                           ;mcc_generated_files/system/src/pins.c: 187:     {;mcc_generated_files/system/src/pins.c
      +                          : 188:         BP2_InterruptHandler();
 18528   0062CA  D802               	call	i2u917_48
 18529   0062CC  EF71  F031         	goto	i2u917_49
 18530   0062D0                     i2u917_48:
 18531   0062D0  0005               	push	
 18532   0062D2  6EFA               	movwf	pclath,c
 18533   0062D4  51F7               	movf	_BP2_InterruptHandler& (0+255),w,b
 18534   0062D6  6EFD               	movwf	tosl,c
 18535   0062D8  51F8               	movf	(_BP2_InterruptHandler+1)& (0+255),w,b
 18536   0062DA  6EFE               	movwf	tosh,c
 18537   0062DC  6AFF               	clrf	tosu,c
 18538   0062DE  50FA               	movf	pclath,w,c
 18539   0062E0  0012               	return		;indir
 18540   0062E2                     i2u917_49:
 18541   0062E2                     i2l8540:
 18542                           
 18543                           ;mcc_generated_files/system/src/pins.c: 190:     IOCAFbits.IOCAF2 = 0;
 18544   0062E2  013A               	movlb	58	; () banked
 18545   0062E4  9547               	bcf	71,2,b	;volatile
 18546   0062E6                     
 18547                           ; BSR set to: 58
 18548   0062E6  0012               	return		;funcret
 18549   0062E8                     __end_of_BP2_ISR:
 18550                           	callstack 0
 18551                           
 18552 ;; *************** function _BP2_DefaultInterruptHandler *****************
 18553 ;; Defined at:
 18554 ;;		line 203 in file "mcc_generated_files/system/src/pins.c"
 18555 ;; Parameters:    Size  Location     Type
 18556 ;;		None
 18557 ;; Auto vars:     Size  Location     Type
 18558 ;;		None
 18559 ;; Return value:  Size  Location     Type
 18560 ;;                  1    wreg      void 
 18561 ;; Registers used:
 18562 ;;		None
 18563 ;; Tracked objects:
 18564 ;;		On entry : 0/0
 18565 ;;		On exit  : 0/0
 18566 ;;		Unchanged: 0/0
 18567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18568 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18569 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18570 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18571 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18572 ;;Total ram usage:        0 bytes
 18573 ;; Hardware stack levels used: 1
 18574 ;; This function calls:
 18575 ;;		Nothing
 18576 ;; This function is called by:
 18577 ;;		_PIN_MANAGER_Initialize
 18578 ;;		_BP2_ISR
 18579 ;; This function uses a non-reentrant model
 18580 ;;
 18581                           
 18582                           	psect	text69
 18583   006552                     __ptext69:
 18584                           	callstack 0
 18585   006552                     _BP2_DefaultInterruptHandler:
 18586                           	callstack 18
 18587   006552  0012               	return		;funcret
 18588   006554                     __end_of_BP2_DefaultInterruptHandler:
 18589                           	callstack 0
 18590                           
 18591 ;; *************** function _int_BP2 *****************
 18592 ;; Defined at:
 18593 ;;		line 346 in file "main.c"
 18594 ;; Parameters:    Size  Location     Type
 18595 ;;		None
 18596 ;; Auto vars:     Size  Location     Type
 18597 ;;		None
 18598 ;; Return value:  Size  Location     Type
 18599 ;;                  1    wreg      void 
 18600 ;; Registers used:
 18601 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18602 ;; Tracked objects:
 18603 ;;		On entry : 0/0
 18604 ;;		On exit  : 0/0
 18605 ;;		Unchanged: 0/0
 18606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18607 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18608 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18609 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18610 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18611 ;;Total ram usage:        2 bytes
 18612 ;; Hardware stack levels used: 1
 18613 ;; Hardware stack levels required when called: 9
 18614 ;; This function calls:
 18615 ;;		i2_LCD_UpdateMenu
 18616 ;; This function is called by:
 18617 ;;		_main
 18618 ;;		_BP2_ISR
 18619 ;; This function uses a non-reentrant model
 18620 ;;
 18621                           
 18622                           	psect	text70
 18623   004310                     __ptext70:
 18624                           	callstack 0
 18625   004310                     _int_BP2:
 18626                           	callstack 9
 18627   004310                     
 18628                           ;main.c: 347:     _delay((unsigned long)((40)*(64000000U/4000.0)));
 18629   004310  0E04               	movlw	4
 18630   004312  0100               	movlb	0	; () banked
 18631   004314  6FD4               	movwf	(??_int_BP2+1)& (0+255),b
 18632   004316  0E40               	movlw	64
 18633   004318  6FD3               	movwf	??_int_BP2& (0+255),b
 18634   00431A  0E26               	movlw	38
 18635   00431C                     i2u942_47:
 18636   00431C  2EE8               	decfsz	wreg,f,c
 18637   00431E  D7FE               	bra	i2u942_47
 18638   004320  2FD3               	decfsz	??_int_BP2& (0+255),f,b
 18639   004322  D7FC               	bra	i2u942_47
 18640   004324  2FD4               	decfsz	(??_int_BP2+1)& (0+255),f,b
 18641   004326  D7FA               	bra	i2u942_47
 18642   004328  0000               	nop	
 18643   00432A                     
 18644                           ;main.c: 349:      if (etat_courant == MENU_ICLED) {
 18645   00432A  0100               	movlb	0	; () banked
 18646   00432C  05EB               	decf	_etat_courant& (0+255),w,b
 18647   00432E  A4D8               	btfss	status,2,c
 18648   004330  EF9C  F021         	goto	i2u903_41
 18649   004334  EF9E  F021         	goto	i2u903_40
 18650   004338                     i2u903_41:
 18651   004338  EFA2  F021         	goto	i2l8482
 18652   00433C                     i2u903_40:
 18653   00433C                     
 18654                           ; BSR set to: 0
 18655                           ;main.c: 350:         etat_courant = ICLED_COULEUR1;
 18656   00433C  0E04               	movlw	4
 18657   00433E  6FEB               	movwf	_etat_courant& (0+255),b
 18658                           
 18659                           ;main.c: 351:     } else if (etat_courant == ICLED_COULEUR1) {
 18660   004340  EF22  F022         	goto	i2l8522
 18661   004344                     i2l8482:
 18662                           
 18663                           ; BSR set to: 0
 18664   004344  0E04               	movlw	4
 18665   004346  19EB               	xorwf	_etat_courant& (0+255),w,b
 18666   004348  A4D8               	btfss	status,2,c
 18667   00434A  EFA9  F021         	goto	i2u904_41
 18668   00434E  EFAB  F021         	goto	i2u904_40
 18669   004352                     i2u904_41:
 18670   004352  EFAF  F021         	goto	i2l8486
 18671   004356                     i2u904_40:
 18672   004356                     
 18673                           ; BSR set to: 0
 18674                           ;main.c: 352:         etat_courant = ICLED_COULEUR2;
 18675   004356  0E05               	movlw	5
 18676   004358  6FEB               	movwf	_etat_courant& (0+255),b
 18677                           
 18678                           ;main.c: 353:     } else if (etat_courant == ICLED_COULEUR2) {
 18679   00435A  EF22  F022         	goto	i2l8522
 18680   00435E                     i2l8486:
 18681                           
 18682                           ; BSR set to: 0
 18683   00435E  0E05               	movlw	5
 18684   004360  19EB               	xorwf	_etat_courant& (0+255),w,b
 18685   004362  A4D8               	btfss	status,2,c
 18686   004364  EFB6  F021         	goto	i2u905_41
 18687   004368  EFB8  F021         	goto	i2u905_40
 18688   00436C                     i2u905_41:
 18689   00436C  EFBC  F021         	goto	i2l8490
 18690   004370                     i2u905_40:
 18691   004370                     
 18692                           ; BSR set to: 0
 18693                           ;main.c: 354:         etat_courant = ICLED_COULEUR3;
 18694   004370  0E06               	movlw	6
 18695   004372  6FEB               	movwf	_etat_courant& (0+255),b
 18696                           
 18697                           ;main.c: 355:     } else if (etat_courant == ICLED_COULEUR3) {
 18698   004374  EF22  F022         	goto	i2l8522
 18699   004378                     i2l8490:
 18700                           
 18701                           ; BSR set to: 0
 18702   004378  0E06               	movlw	6
 18703   00437A  19EB               	xorwf	_etat_courant& (0+255),w,b
 18704   00437C  A4D8               	btfss	status,2,c
 18705   00437E  EFC3  F021         	goto	i2u906_41
 18706   004382  EFC5  F021         	goto	i2u906_40
 18707   004386                     i2u906_41:
 18708   004386  EFC9  F021         	goto	i2l8494
 18709   00438A                     i2u906_40:
 18710   00438A                     
 18711                           ; BSR set to: 0
 18712                           ;main.c: 356:         etat_courant = ICLED_COULEUR4;
 18713   00438A  0E07               	movlw	7
 18714   00438C  6FEB               	movwf	_etat_courant& (0+255),b
 18715                           
 18716                           ;main.c: 357:     } else if (etat_courant == ICLED_COULEUR4) {
 18717   00438E  EF22  F022         	goto	i2l8522
 18718   004392                     i2l8494:
 18719                           
 18720                           ; BSR set to: 0
 18721   004392  0E07               	movlw	7
 18722   004394  19EB               	xorwf	_etat_courant& (0+255),w,b
 18723   004396  A4D8               	btfss	status,2,c
 18724   004398  EFD0  F021         	goto	i2u907_41
 18725   00439C  EFD2  F021         	goto	i2u907_40
 18726   0043A0                     i2u907_41:
 18727   0043A0  EFD6  F021         	goto	i2l8498
 18728   0043A4                     i2u907_40:
 18729   0043A4                     
 18730                           ; BSR set to: 0
 18731                           ;main.c: 358:         etat_courant = ICLED_COULEUR5;
 18732   0043A4  0E08               	movlw	8
 18733   0043A6  6FEB               	movwf	_etat_courant& (0+255),b
 18734                           
 18735                           ;main.c: 359:     } else if (etat_courant == ICLED_COULEUR5) {
 18736   0043A8  EF22  F022         	goto	i2l8522
 18737   0043AC                     i2l8498:
 18738                           
 18739                           ; BSR set to: 0
 18740   0043AC  0E08               	movlw	8
 18741   0043AE  19EB               	xorwf	_etat_courant& (0+255),w,b
 18742   0043B0  A4D8               	btfss	status,2,c
 18743   0043B2  EFDD  F021         	goto	i2u908_41
 18744   0043B6  EFDF  F021         	goto	i2u908_40
 18745   0043BA                     i2u908_41:
 18746   0043BA  EFE3  F021         	goto	i2l8502
 18747   0043BE                     i2u908_40:
 18748   0043BE                     
 18749                           ; BSR set to: 0
 18750                           ;main.c: 360:         etat_courant = ICLED_COULEUR6;
 18751   0043BE  0E09               	movlw	9
 18752   0043C0  6FEB               	movwf	_etat_courant& (0+255),b
 18753                           
 18754                           ;main.c: 361:     } else if (etat_courant == ICLED_COULEUR6) {
 18755   0043C2  EF22  F022         	goto	i2l8522
 18756   0043C6                     i2l8502:
 18757                           
 18758                           ; BSR set to: 0
 18759   0043C6  0E09               	movlw	9
 18760   0043C8  19EB               	xorwf	_etat_courant& (0+255),w,b
 18761   0043CA  A4D8               	btfss	status,2,c
 18762   0043CC  EFEA  F021         	goto	i2u909_41
 18763   0043D0  EFEC  F021         	goto	i2u909_40
 18764   0043D4                     i2u909_41:
 18765   0043D4  EFF0  F021         	goto	i2l8506
 18766   0043D8                     i2u909_40:
 18767   0043D8                     
 18768                           ; BSR set to: 0
 18769                           ;main.c: 362:         etat_courant = ICLED_COULEUR7;
 18770   0043D8  0E0A               	movlw	10
 18771   0043DA  6FEB               	movwf	_etat_courant& (0+255),b
 18772                           
 18773                           ;main.c: 363:     } else if (etat_courant == ICLED_COULEUR7) {
 18774   0043DC  EF22  F022         	goto	i2l8522
 18775   0043E0                     i2l8506:
 18776                           
 18777                           ; BSR set to: 0
 18778   0043E0  0E0A               	movlw	10
 18779   0043E2  19EB               	xorwf	_etat_courant& (0+255),w,b
 18780   0043E4  A4D8               	btfss	status,2,c
 18781   0043E6  EFF7  F021         	goto	i2u910_41
 18782   0043EA  EFF9  F021         	goto	i2u910_40
 18783   0043EE                     i2u910_41:
 18784   0043EE  EFFD  F021         	goto	i2l8510
 18785   0043F2                     i2u910_40:
 18786   0043F2                     
 18787                           ; BSR set to: 0
 18788                           ;main.c: 364:         etat_courant = ICLED_COULEUR8;
 18789   0043F2  0E0B               	movlw	11
 18790   0043F4  6FEB               	movwf	_etat_courant& (0+255),b
 18791                           
 18792                           ;main.c: 365:     } else if (etat_courant == ICLED_COULEUR8) {
 18793   0043F6  EF22  F022         	goto	i2l8522
 18794   0043FA                     i2l8510:
 18795                           
 18796                           ; BSR set to: 0
 18797   0043FA  0E0B               	movlw	11
 18798   0043FC  19EB               	xorwf	_etat_courant& (0+255),w,b
 18799   0043FE  A4D8               	btfss	status,2,c
 18800   004400  EF04  F022         	goto	i2u911_41
 18801   004404  EF06  F022         	goto	i2u911_40
 18802   004408                     i2u911_41:
 18803   004408  EF0A  F022         	goto	i2l8514
 18804   00440C                     i2u911_40:
 18805   00440C                     
 18806                           ; BSR set to: 0
 18807                           ;main.c: 366:         etat_courant = Eteindre;
 18808   00440C  0E0C               	movlw	12
 18809   00440E  6FEB               	movwf	_etat_courant& (0+255),b
 18810                           
 18811                           ;main.c: 367:     } else if (etat_courant == Eteindre) {
 18812   004410  EF22  F022         	goto	i2l8522
 18813   004414                     i2l8514:
 18814                           
 18815                           ; BSR set to: 0
 18816   004414  0E0C               	movlw	12
 18817   004416  19EB               	xorwf	_etat_courant& (0+255),w,b
 18818   004418  A4D8               	btfss	status,2,c
 18819   00441A  EF11  F022         	goto	i2u912_41
 18820   00441E  EF13  F022         	goto	i2u912_40
 18821   004422                     i2u912_41:
 18822   004422  EF16  F022         	goto	i2l8518
 18823   004426                     i2u912_40:
 18824   004426                     
 18825                           ; BSR set to: 0
 18826                           ;main.c: 368:         etat_courant = MENU_PRINCIPAL;
 18827   004426  6BEB               	clrf	_etat_courant& (0+255),b
 18828                           
 18829                           ;main.c: 369:     } else if (etat_courant == MENU_PRINCIPAL) {
 18830   004428  EF22  F022         	goto	i2l8522
 18831   00442C                     i2l8518:
 18832                           
 18833                           ; BSR set to: 0
 18834   00442C  51EB               	movf	_etat_courant& (0+255),w,b
 18835   00442E  A4D8               	btfss	status,2,c
 18836   004430  EF1C  F022         	goto	i2u913_41
 18837   004434  EF1E  F022         	goto	i2u913_40
 18838   004438                     i2u913_41:
 18839   004438  EF22  F022         	goto	i2l845
 18840   00443C                     i2u913_40:
 18841   00443C                     
 18842                           ; BSR set to: 0
 18843                           ;main.c: 370:         etat_courant = MENU_COURANT;
 18844   00443C  0E02               	movlw	2
 18845   00443E  6FEB               	movwf	_etat_courant& (0+255),b
 18846   004440  EF22  F022         	goto	i2l8522
 18847   004444                     i2l845:
 18848   004444                     i2l8522:
 18849                           
 18850                           ; BSR set to: 0
 18851                           ;main.c: 373:     LCD_UpdateMenu();
 18852   004444  EC6D  F019         	call	i2_LCD_UpdateMenu	;wreg free
 18853   004448  0012               	return		;funcret
 18854   00444A                     __end_of_int_BP2:
 18855                           	callstack 0
 18856                           
 18857 ;; *************** function _BP1_ISR *****************
 18858 ;; Defined at:
 18859 ;;		line 151 in file "mcc_generated_files/system/src/pins.c"
 18860 ;; Parameters:    Size  Location     Type
 18861 ;;		None
 18862 ;; Auto vars:     Size  Location     Type
 18863 ;;		None
 18864 ;; Return value:  Size  Location     Type
 18865 ;;                  1    wreg      void 
 18866 ;; Registers used:
 18867 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
 18868 ;; Tracked objects:
 18869 ;;		On entry : 0/0
 18870 ;;		On exit  : 0/0
 18871 ;;		Unchanged: 0/0
 18872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18873 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18874 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18875 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18876 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18877 ;;Total ram usage:        0 bytes
 18878 ;; Hardware stack levels used: 1
 18879 ;; Hardware stack levels required when called: 10
 18880 ;; This function calls:
 18881 ;;		NULL
 18882 ;;		_BP1_DefaultInterruptHandler
 18883 ;;		_int_BP1
 18884 ;; This function is called by:
 18885 ;;		_PIN_MANAGER_IOC
 18886 ;; This function uses a non-reentrant model
 18887 ;;
 18888                           
 18889                           	psect	text71
 18890   0062E8                     __ptext71:
 18891                           	callstack 0
 18892   0062E8                     _BP1_ISR:
 18893                           	callstack 9
 18894   0062E8                     
 18895                           ;mcc_generated_files/system/src/pins.c: 156:     if(BP1_InterruptHandler)
 18896   0062E8  0100               	movlb	0	; () banked
 18897   0062EA  51F9               	movf	_BP1_InterruptHandler& (0+255),w,b
 18898   0062EC  11FA               	iorwf	(_BP1_InterruptHandler+1)& (0+255),w,b
 18899   0062EE  B4D8               	btfsc	status,2,c
 18900   0062F0  EF7C  F031         	goto	i2u914_41
 18901   0062F4  EF7E  F031         	goto	i2u914_40
 18902   0062F8                     i2u914_41:
 18903   0062F8  EF8A  F031         	goto	i2l8534
 18904   0062FC                     i2u914_40:
 18905   0062FC                     
 18906                           ; BSR set to: 0
 18907                           ;mcc_generated_files/system/src/pins.c: 157:     {;mcc_generated_files/system/src/pins.c
      +                          : 158:         BP1_InterruptHandler();
 18908   0062FC  D802               	call	i2u915_48
 18909   0062FE  EF8A  F031         	goto	i2u915_49
 18910   006302                     i2u915_48:
 18911   006302  0005               	push	
 18912   006304  6EFA               	movwf	pclath,c
 18913   006306  51F9               	movf	_BP1_InterruptHandler& (0+255),w,b
 18914   006308  6EFD               	movwf	tosl,c
 18915   00630A  51FA               	movf	(_BP1_InterruptHandler+1)& (0+255),w,b
 18916   00630C  6EFE               	movwf	tosh,c
 18917   00630E  6AFF               	clrf	tosu,c
 18918   006310  50FA               	movf	pclath,w,c
 18919   006312  0012               	return		;indir
 18920   006314                     i2u915_49:
 18921   006314                     i2l8534:
 18922                           
 18923                           ;mcc_generated_files/system/src/pins.c: 160:     IOCAFbits.IOCAF1 = 0;
 18924   006314  013A               	movlb	58	; () banked
 18925   006316  9347               	bcf	71,1,b	;volatile
 18926   006318                     
 18927                           ; BSR set to: 58
 18928   006318  0012               	return		;funcret
 18929   00631A                     __end_of_BP1_ISR:
 18930                           	callstack 0
 18931                           
 18932 ;; *************** function _BP1_DefaultInterruptHandler *****************
 18933 ;; Defined at:
 18934 ;;		line 173 in file "mcc_generated_files/system/src/pins.c"
 18935 ;; Parameters:    Size  Location     Type
 18936 ;;		None
 18937 ;; Auto vars:     Size  Location     Type
 18938 ;;		None
 18939 ;; Return value:  Size  Location     Type
 18940 ;;                  1    wreg      void 
 18941 ;; Registers used:
 18942 ;;		None
 18943 ;; Tracked objects:
 18944 ;;		On entry : 0/0
 18945 ;;		On exit  : 0/0
 18946 ;;		Unchanged: 0/0
 18947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18948 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18949 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18950 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18951 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18952 ;;Total ram usage:        0 bytes
 18953 ;; Hardware stack levels used: 1
 18954 ;; This function calls:
 18955 ;;		Nothing
 18956 ;; This function is called by:
 18957 ;;		_PIN_MANAGER_Initialize
 18958 ;;		_BP1_ISR
 18959 ;; This function uses a non-reentrant model
 18960 ;;
 18961                           
 18962                           	psect	text72
 18963   006554                     __ptext72:
 18964                           	callstack 0
 18965   006554                     _BP1_DefaultInterruptHandler:
 18966                           	callstack 18
 18967   006554  0012               	return		;funcret
 18968   006556                     __end_of_BP1_DefaultInterruptHandler:
 18969                           	callstack 0
 18970                           
 18971 ;; *************** function _int_BP1 *****************
 18972 ;; Defined at:
 18973 ;;		line 326 in file "main.c"
 18974 ;; Parameters:    Size  Location     Type
 18975 ;;		None
 18976 ;; Auto vars:     Size  Location     Type
 18977 ;;		None
 18978 ;; Return value:  Size  Location     Type
 18979 ;;                  1    wreg      void 
 18980 ;; Registers used:
 18981 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18982 ;; Tracked objects:
 18983 ;;		On entry : 0/0
 18984 ;;		On exit  : 0/0
 18985 ;;		Unchanged: 0/0
 18986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18987 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18988 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18989 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18990 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18991 ;;Total ram usage:        2 bytes
 18992 ;; Hardware stack levels used: 1
 18993 ;; Hardware stack levels required when called: 9
 18994 ;; This function calls:
 18995 ;;		i2_LCD_UpdateMenu
 18996 ;; This function is called by:
 18997 ;;		_main
 18998 ;;		_BP1_ISR
 18999 ;; This function uses a non-reentrant model
 19000 ;;
 19001                           
 19002                           	psect	text73
 19003   0059E6                     __ptext73:
 19004                           	callstack 0
 19005   0059E6                     _int_BP1:
 19006                           	callstack 9
 19007   0059E6                     
 19008                           ;main.c: 327:     _delay((unsigned long)((40)*(64000000U/4000.0)));
 19009   0059E6  0E04               	movlw	4
 19010   0059E8  0100               	movlb	0	; () banked
 19011   0059EA  6FD4               	movwf	(??_int_BP1+1)& (0+255),b
 19012   0059EC  0E40               	movlw	64
 19013   0059EE  6FD3               	movwf	??_int_BP1& (0+255),b
 19014   0059F0  0E26               	movlw	38
 19015   0059F2                     i2u943_47:
 19016   0059F2  2EE8               	decfsz	wreg,f,c
 19017   0059F4  D7FE               	bra	i2u943_47
 19018   0059F6  2FD3               	decfsz	??_int_BP1& (0+255),f,b
 19019   0059F8  D7FC               	bra	i2u943_47
 19020   0059FA  2FD4               	decfsz	(??_int_BP1+1)& (0+255),f,b
 19021   0059FC  D7FA               	bra	i2u943_47
 19022   0059FE  0000               	nop	
 19023                           
 19024                           ;main.c: 329:     switch (etat_courant) {
 19025   005A00  EF09  F02D         	goto	i2l8468
 19026   005A04                     i2l8464:
 19027                           
 19028                           ; BSR set to: 0
 19029                           ;main.c: 331:             etat_courant = MENU_ICLED;
 19030   005A04  0E01               	movlw	1
 19031   005A06  6FEB               	movwf	_etat_courant& (0+255),b
 19032                           
 19033                           ;main.c: 332:             break;
 19034   005A08  EF1F  F02D         	goto	i2l8470
 19035   005A0C                     i2l825:
 19036                           
 19037                           ; BSR set to: 0
 19038                           ;main.c: 335:             etat_courant = MENU_PRINCIPAL;
 19039   005A0C  6BEB               	clrf	_etat_courant& (0+255),b
 19040                           
 19041                           ;main.c: 336:             break;
 19042   005A0E  EF1F  F02D         	goto	i2l8470
 19043   005A12                     i2l8468:
 19044   005A12  0100               	movlb	0	; () banked
 19045   005A14  51EB               	movf	_etat_courant& (0+255),w,b
 19046   005A16  6FD3               	movwf	??_int_BP1& (0+255),b
 19047   005A18  6BD4               	clrf	(??_int_BP1+1)& (0+255),b
 19048                           
 19049                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 19050                           ; Switch size 1, requested type "simple"
 19051                           ; Number of cases is 1, Range of values is 0 to 0
 19052                           ; switch strategies available:
 19053                           ; Name         Instructions Cycles
 19054                           ; simple_byte            4     3 (average)
 19055                           ;	Chosen strategy is simple_byte
 19056   005A1A  51D4               	movf	(??_int_BP1+1)& (0+255),w,b
 19057   005A1C  0A00               	xorlw	0	; case 0
 19058   005A1E  B4D8               	btfsc	status,2,c
 19059   005A20  EF14  F02D         	goto	i2l8666
 19060   005A24  EF06  F02D         	goto	i2l825
 19061   005A28                     i2l8666:
 19062                           
 19063                           ; BSR set to: 0
 19064                           ; Switch size 1, requested type "simple"
 19065                           ; Number of cases is 2, Range of values is 0 to 12
 19066                           ; switch strategies available:
 19067                           ; Name         Instructions Cycles
 19068                           ; simple_byte            7     4 (average)
 19069                           ;	Chosen strategy is simple_byte
 19070   005A28  51D3               	movf	??_int_BP1& (0+255),w,b
 19071   005A2A  0A00               	xorlw	0	; case 0
 19072   005A2C  B4D8               	btfsc	status,2,c
 19073   005A2E  EF02  F02D         	goto	i2l8464
 19074   005A32  0A0C               	xorlw	12	; case 12
 19075   005A34  B4D8               	btfsc	status,2,c
 19076   005A36  EF06  F02D         	goto	i2l825
 19077   005A3A  EF06  F02D         	goto	i2l825
 19078   005A3E                     i2l8470:
 19079                           
 19080                           ; BSR set to: 0
 19081                           ;main.c: 343:     LCD_UpdateMenu();
 19082   005A3E  EC6D  F019         	call	i2_LCD_UpdateMenu	;wreg free
 19083   005A42  0012               	return		;funcret
 19084   005A44                     __end_of_int_BP1:
 19085                           	callstack 0
 19086                           
 19087 ;; *************** function i2_LCD_UpdateMenu *****************
 19088 ;; Defined at:
 19089 ;;		line 104 in file "main.c"
 19090 ;; Parameters:    Size  Location     Type
 19091 ;;		None
 19092 ;; Auto vars:     Size  Location     Type
 19093 ;;  buffer         16   93[BANK0 ] unsigned char [16]
 19094 ;;  tension         4  109[BANK0 ] float 
 19095 ;;  courant         2  113[BANK0 ] int 
 19096 ;; Return value:  Size  Location     Type
 19097 ;;                  1    wreg      void 
 19098 ;; Registers used:
 19099 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19100 ;; Tracked objects:
 19101 ;;		On entry : 0/0
 19102 ;;		On exit  : 0/0
 19103 ;;		Unchanged: 0/0
 19104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19105 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19106 ;;      Locals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19107 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19108 ;;      Totals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19109 ;;Total ram usage:       24 bytes
 19110 ;; Hardware stack levels used: 1
 19111 ;; Hardware stack levels required when called: 8
 19112 ;; This function calls:
 19113 ;;		i2_LCD_Char
 19114 ;;		i2_LCD_Init
 19115 ;;		i2_LCD_SetCursor
 19116 ;;		i2_LCD_String
 19117 ;;		i2___fltol
 19118 ;;		i2_lire_tension
 19119 ;;		i2_sprintf
 19120 ;; This function is called by:
 19121 ;;		_int_BP1
 19122 ;;		_int_BP2
 19123 ;;		_int_BP3
 19124 ;; This function uses a non-reentrant model
 19125 ;;
 19126                           
 19127                           	psect	text74
 19128   0032DA                     __ptext74:
 19129                           	callstack 0
 19130   0032DA                     i2_LCD_UpdateMenu:
 19131                           	callstack 9
 19132   0032DA                     
 19133                           ;main.c: 106:     char buffer[16];;main.c: 108:     LCD_Init();
 19134   0032DA  EC28  F031         	call	i2_LCD_Init	;wreg free
 19135                           
 19136                           ;main.c: 109:     switch (etat_courant) {
 19137   0032DE  EF9C  F01A         	goto	i2l8456
 19138   0032E2                     i2l8372:
 19139                           
 19140                           ; BSR set to: 0
 19141                           ;main.c: 111:             LCD_SetCursor(0,0); LCD_String("Choix:");
 19142   0032E2  0E00               	movlw	0
 19143   0032E4  6E03               	movwf	i2LCD_SetCursor@column^0,c
 19144   0032E6  0E00               	movlw	0
 19145   0032E8  EC84  F02E         	call	i2_LCD_SetCursor
 19146   0032EC  0EDD               	movlw	low STR_1
 19147   0032EE  6E03               	movwf	i2LCD_String@str^0,c
 19148   0032F0  0EFF               	movlw	high STR_1
 19149   0032F2  6E04               	movwf	(i2LCD_String@str+1)^0,c
 19150   0032F4  EC54  F02C         	call	i2_LCD_String	;wreg free
 19151   0032F8                     
 19152                           ;main.c: 112:             LCD_SetCursor(1,0); LCD_String("1.ICLED 2.Mesure");
 19153   0032F8  0E00               	movlw	0
 19154   0032FA  6E03               	movwf	i2LCD_SetCursor@column^0,c
 19155   0032FC  0E01               	movlw	1
 19156   0032FE  EC84  F02E         	call	i2_LCD_SetCursor
 19157   003302  0E07               	movlw	low STR_2
 19158   003304  6E03               	movwf	i2LCD_String@str^0,c
 19159   003306  0EFF               	movlw	high STR_2
 19160   003308  6E04               	movwf	(i2LCD_String@str+1)^0,c
 19161   00330A  EC54  F02C         	call	i2_LCD_String	;wreg free
 19162   00330E                     
 19163                           ;main.c: 113:             LCD_SetCursor(2,0); LCD_String("3.? 2.Animation");
 19164   00330E  0E00               	movlw	0
 19165   003310  6E03               	movwf	i2LCD_SetCursor@column^0,c
 19166   003312  0E02               	movlw	2
 19167   003314  EC84  F02E         	call	i2_LCD_SetCursor
 19168   003318  0E48               	movlw	low STR_3
 19169   00331A  6E03               	movwf	i2LCD_String@str^0,c
 19170   00331C  0EFF               	movlw	high STR_3
 19171   00331E  6E04               	movwf	(i2LCD_String@str+1)^0,c
 19172   003320  EC54  F02C         	call	i2_LCD_String	;wreg free
 19173                           
 19174                           ;main.c: 114:             break;
 19175   003324  EFE2  F01A         	goto	i2l761
 19176   003328                     i2l8382:
 19177                           
 19178                           ; BSR set to: 0
 19179                           ;main.c: 117:             LCD_SetCursor(0,0); LCD_String("LED:");
 19180   003328  0E00               	movlw	0
 19181   00332A  6E03               	movwf	i2LCD_SetCursor@column^0,c
 19182   00332C  0E00               	movlw	0
 19183   00332E  EC84  F02E         	call	i2_LCD_SetCursor
 19184   003332  0EF2               	movlw	low STR_4
 19185   003334  6E03               	movwf	i2LCD_String@str^0,c
 19186   003336  0EFF               	movlw	high STR_4
 19187   003338  6E04               	movwf	(i2LCD_String@str+1)^0,c
 19188   00333A  EC54  F02C         	call	i2_LCD_String	;wreg free
 19189   00333E                     
 19190                           ;main.c: 118:             LCD_SetCursor(1,0); LCD_String("1.R 2.G 3.B 4.O");
 19191   00333E  0E00               	movlw	0
 19192   003340  6E03               	movwf	i2LCD_SetCursor@column^0,c
 19193   003342  0E01               	movlw	1
 19194   003344  EC84  F02E         	call	i2_LCD_SetCursor
 19195   003348  0E28               	movlw	low STR_5
 19196   00334A  6E03               	movwf	i2LCD_String@str^0,c
 19197   00334C  0EFF               	movlw	high STR_5
 19198   00334E  6E04               	movwf	(i2LCD_String@str+1)^0,c
 19199   003350  EC54  F02C         	call	i2_LCD_String	;wreg free
 19200                           
 19201                           ;main.c: 119:             break;
 19202   003354  EFE2  F01A         	goto	i2l761
 19203   003358                     i2l8388:
 19204                           
 19205                           ; BSR set to: 0
 19206                           ;main.c: 122:             LCD_SetCursor(0,0); LCD_String("Mesure courant");
 19207   003358  0E00               	movlw	0
 19208   00335A  6E03               	movwf	i2LCD_SetCursor@column^0,c
 19209   00335C  0E00               	movlw	0
 19210   00335E  EC84  F02E         	call	i2_LCD_SetCursor
 19211   003362  0E85               	movlw	low STR_6
 19212   003364  6E03               	movwf	i2LCD_String@str^0,c
 19213   003366  0EFF               	movlw	high STR_6
 19214   003368  6E04               	movwf	(i2LCD_String@str+1)^0,c
 19215   00336A  EC54  F02C         	call	i2_LCD_String	;wreg free
 19216                           
 19217                           ;main.c: 123:             break;
 19218   00336E  EFE2  F01A         	goto	i2l761
 19219   003372                     i2l8392:
 19220                           
 19221                           ; BSR set to: 0
 19222                           ;main.c: 126:             LCD_SetCursor(0,0); LCD_String("Couleur: ROUGE");
 19223   003372  0E00               	movlw	0
 19224   003374  6E03               	movwf	i2LCD_SetCursor@column^0,c
 19225   003376  0E00               	movlw	0
 19226   003378  EC84  F02E         	call	i2_LCD_SetCursor
 19227   00337C  0E67               	movlw	low STR_7
 19228   00337E  6E03               	movwf	i2LCD_String@str^0,c
 19229   003380  0EFF               	movlw	high STR_7
 19230   003382  6E04               	movwf	(i2LCD_String@str+1)^0,c
 19231   003384  EC54  F02C         	call	i2_LCD_String	;wreg free
 19232   003388                     
 19233                           ;main.c: 127:             LCD_SetCursor(1,15); LCD_Char('1');
 19234   003388  0E0F               	movlw	15
 19235   00338A  6E03               	movwf	i2LCD_SetCursor@column^0,c
 19236   00338C  0E01               	movlw	1
 19237   00338E  EC84  F02E         	call	i2_LCD_SetCursor
 19238   003392  0E31               	movlw	49
 19239   003394  ECE5  F031         	call	i2_LCD_Char
 19240                           
 19241                           ;main.c: 128:             break;
 19242   003398  EFE2  F01A         	goto	i2l761
 19243   00339C                     i2l8400:
 19244                           
 19245                           ; BSR set to: 0
 19246                           ;main.c: 131:             LCD_SetCursor(0,0); LCD_String("Couleur: VERT");
 19247   00339C  0E00               	movlw	0
 19248   00339E  6E03               	movwf	i2LCD_SetCursor@column^0,c
 19249   0033A0  0E00               	movlw	0
 19250   0033A2  EC84  F02E         	call	i2_LCD_SetCursor
 19251   0033A6  0EB0               	movlw	low STR_8
 19252   0033A8  6E03               	movwf	i2LCD_String@str^0,c
 19253   0033AA  0EFF               	movlw	high STR_8
 19254   0033AC  6E04               	movwf	(i2LCD_String@str+1)^0,c
 19255   0033AE  EC54  F02C         	call	i2_LCD_String	;wreg free
 19256                           
 19257                           ;main.c: 132:             break;
 19258   0033B2  EFE2  F01A         	goto	i2l761
 19259   0033B6                     i2l8404:
 19260                           
 19261                           ; BSR set to: 0
 19262                           ;main.c: 135:             LCD_SetCursor(0,0); LCD_String("Couleur: BLEU");
 19263   0033B6  0E00               	movlw	0
 19264   0033B8  6E03               	movwf	i2LCD_SetCursor@column^0,c
 19265   0033BA  0E00               	movlw	0
 19266   0033BC  EC84  F02E         	call	i2_LCD_SetCursor
 19267   0033C0  0EBE               	movlw	low STR_9
 19268   0033C2  6E03               	movwf	i2LCD_String@str^0,c
 19269   0033C4  0EFF               	movlw	high STR_9
 19270   0033C6  6E04               	movwf	(i2LCD_String@str+1)^0,c
 19271   0033C8  EC54  F02C         	call	i2_LCD_String	;wreg free
 19272                           
 19273                           ;main.c: 136:             break;
 19274   0033CC  EFE2  F01A         	goto	i2l761
 19275   0033D0                     i2l8408:
 19276                           
 19277                           ; BSR set to: 0
 19278                           ;main.c: 139:             LCD_SetCursor(0,0); LCD_String("Couleur: ORANGE");
 19279   0033D0  0E00               	movlw	0
 19280   0033D2  6E03               	movwf	i2LCD_SetCursor@column^0,c
 19281   0033D4  0E00               	movlw	0
 19282   0033D6  EC84  F02E         	call	i2_LCD_SetCursor
 19283   0033DA  0E18               	movlw	low STR_10
 19284   0033DC  6E03               	movwf	i2LCD_String@str^0,c
 19285   0033DE  0EFF               	movlw	high STR_10
 19286   0033E0  6E04               	movwf	(i2LCD_String@str+1)^0,c
 19287   0033E2  EC54  F02C         	call	i2_LCD_String	;wreg free
 19288                           
 19289                           ;main.c: 140:             break;
 19290   0033E6  EFE2  F01A         	goto	i2l761
 19291   0033EA                     i2l8412:
 19292                           
 19293                           ; BSR set to: 0
 19294                           ;main.c: 143:             LCD_SetCursor(0,0); LCD_String("Couleur: JAUNE");
 19295   0033EA  0E00               	movlw	0
 19296   0033EC  6E03               	movwf	i2LCD_SetCursor@column^0,c
 19297   0033EE  0E00               	movlw	0
 19298   0033F0  EC84  F02E         	call	i2_LCD_SetCursor
 19299   0033F4  0E76               	movlw	low STR_11
 19300   0033F6  6E03               	movwf	i2LCD_String@str^0,c
 19301   0033F8  0EFF               	movlw	high STR_11
 19302   0033FA  6E04               	movwf	(i2LCD_String@str+1)^0,c
 19303   0033FC  EC54  F02C         	call	i2_LCD_String	;wreg free
 19304                           
 19305                           ;main.c: 144:             break;
 19306   003400  EFE2  F01A         	goto	i2l761
 19307   003404                     i2l8416:
 19308                           
 19309                           ; BSR set to: 0
 19310                           ;main.c: 147:             LCD_SetCursor(0,0); LCD_String("Couleur: VIOLET");
 19311   003404  0E00               	movlw	0
 19312   003406  6E03               	movwf	i2LCD_SetCursor@column^0,c
 19313   003408  0E00               	movlw	0
 19314   00340A  EC84  F02E         	call	i2_LCD_SetCursor
 19315   00340E  0E38               	movlw	low STR_12
 19316   003410  6E03               	movwf	i2LCD_String@str^0,c
 19317   003412  0EFF               	movlw	high STR_12
 19318   003414  6E04               	movwf	(i2LCD_String@str+1)^0,c
 19319   003416  EC54  F02C         	call	i2_LCD_String	;wreg free
 19320                           
 19321                           ;main.c: 148:             break;
 19322   00341A  EFE2  F01A         	goto	i2l761
 19323   00341E                     i2l8420:
 19324                           
 19325                           ; BSR set to: 0
 19326                           ;main.c: 151:             LCD_SetCursor(0,0); LCD_String("Couleur: ROSE");
 19327   00341E  0E00               	movlw	0
 19328   003420  6E03               	movwf	i2LCD_SetCursor@column^0,c
 19329   003422  0E00               	movlw	0
 19330   003424  EC84  F02E         	call	i2_LCD_SetCursor
 19331   003428  0EA2               	movlw	low STR_13
 19332   00342A  6E03               	movwf	i2LCD_String@str^0,c
 19333   00342C  0EFF               	movlw	high STR_13
 19334   00342E  6E04               	movwf	(i2LCD_String@str+1)^0,c
 19335   003430  EC54  F02C         	call	i2_LCD_String	;wreg free
 19336                           
 19337                           ;main.c: 152:             break;
 19338   003434  EFE2  F01A         	goto	i2l761
 19339   003438                     i2l8424:
 19340                           
 19341                           ; BSR set to: 0
 19342                           ;main.c: 155:             LCD_SetCursor(0,0); LCD_String("Couleur: BLANC");
 19343   003438  0E00               	movlw	0
 19344   00343A  6E03               	movwf	i2LCD_SetCursor@column^0,c
 19345   00343C  0E00               	movlw	0
 19346   00343E  EC84  F02E         	call	i2_LCD_SetCursor
 19347   003442  0E58               	movlw	low STR_14
 19348   003444  6E03               	movwf	i2LCD_String@str^0,c
 19349   003446  0EFF               	movlw	high STR_14
 19350   003448  6E04               	movwf	(i2LCD_String@str+1)^0,c
 19351   00344A  EC54  F02C         	call	i2_LCD_String	;wreg free
 19352                           
 19353                           ;main.c: 156:             break;
 19354   00344E  EFE2  F01A         	goto	i2l761
 19355   003452                     i2l8428:
 19356                           
 19357                           ; BSR set to: 0
 19358                           ;main.c: 163:             LCD_SetCursor(0,0); LCD_String("ETEINDRE");
 19359   003452  0E00               	movlw	0
 19360   003454  6E03               	movwf	i2LCD_SetCursor@column^0,c
 19361   003456  0E00               	movlw	0
 19362   003458  EC84  F02E         	call	i2_LCD_SetCursor
 19363   00345C  0ECC               	movlw	low STR_15
 19364   00345E  6E03               	movwf	i2LCD_String@str^0,c
 19365   003460  0EFF               	movlw	high STR_15
 19366   003462  6E04               	movwf	(i2LCD_String@str+1)^0,c
 19367   003464  EC54  F02C         	call	i2_LCD_String	;wreg free
 19368                           
 19369                           ;main.c: 164:             break;
 19370   003468  EFE2  F01A         	goto	i2l761
 19371   00346C                     i2l8432:
 19372                           
 19373                           ; BSR set to: 0
 19374                           ;main.c: 167:             LCD_SetCursor(0,0);
 19375   00346C  0E00               	movlw	0
 19376   00346E  6E03               	movwf	i2LCD_SetCursor@column^0,c
 19377   003470  0E00               	movlw	0
 19378   003472  EC84  F02E         	call	i2_LCD_SetCursor
 19379   003476                     
 19380                           ;main.c: 168:             LCD_String("V_Iled:");
 19381   003476  0ED5               	movlw	low STR_16
 19382   003478  6E03               	movwf	i2LCD_String@str^0,c
 19383   00347A  0EFF               	movlw	high STR_16
 19384   00347C  6E04               	movwf	(i2LCD_String@str+1)^0,c
 19385   00347E  EC54  F02C         	call	i2_LCD_String	;wreg free
 19386   003482                     
 19387                           ;main.c: 169:             LCD_SetCursor(1, 0);
 19388   003482  0E00               	movlw	0
 19389   003484  6E03               	movwf	i2LCD_SetCursor@column^0,c
 19390   003486  0E01               	movlw	1
 19391   003488  EC84  F02E         	call	i2_LCD_SetCursor
 19392   00348C                     
 19393                           ;main.c: 170:             float tension = lire_tension();
 19394   00348C  EC4F  F02B         	call	i2_lire_tension	;wreg free
 19395   003490  C041  F0CD         	movff	?i2_lire_tension,i2LCD_UpdateMenu@tension
 19396   003494  C042  F0CE         	movff	?i2_lire_tension+1,i2LCD_UpdateMenu@tension+1
 19397   003498  C043  F0CF         	movff	?i2_lire_tension+2,i2LCD_UpdateMenu@tension+2
 19398   00349C  C044  F0D0         	movff	?i2_lire_tension+3,i2LCD_UpdateMenu@tension+3
 19399   0034A0                     
 19400                           ;main.c: 171:             sprintf(buffer, "%.2f V", tension);
 19401   0034A0  0EBD               	movlw	low i2LCD_UpdateMenu@buffer
 19402   0034A2  0100               	movlb	0	; () banked
 19403   0034A4  6FA6               	movwf	i2sprintf@s& (0+255),b
 19404   0034A6  6BA7               	clrf	(i2sprintf@s+1)& (0+255),b
 19405   0034A8  0EEB               	movlw	low STR_17
 19406   0034AA  6FA8               	movwf	i2sprintf@fmt& (0+255),b
 19407   0034AC  0EFF               	movlw	high STR_17
 19408   0034AE  6FA9               	movwf	(i2sprintf@fmt+1)& (0+255),b
 19409   0034B0  C0CD  F0AA         	movff	i2LCD_UpdateMenu@tension,?i2_sprintf+4
 19410   0034B4  C0CE  F0AB         	movff	i2LCD_UpdateMenu@tension+1,?i2_sprintf+5
 19411   0034B8  C0CF  F0AC         	movff	i2LCD_UpdateMenu@tension+2,?i2_sprintf+6
 19412   0034BC  C0D0  F0AD         	movff	i2LCD_UpdateMenu@tension+3,?i2_sprintf+7
 19413   0034C0  ECFE  F02E         	call	i2_sprintf	;wreg free
 19414   0034C4                     
 19415                           ;main.c: 172:             LCD_String(buffer);
 19416   0034C4  0EBD               	movlw	low i2LCD_UpdateMenu@buffer
 19417   0034C6  6E03               	movwf	i2LCD_String@str^0,c
 19418   0034C8  6A04               	clrf	(i2LCD_String@str+1)^0,c
 19419   0034CA  EC54  F02C         	call	i2_LCD_String	;wreg free
 19420   0034CE                     
 19421                           ;main.c: 173:             LCD_SetCursor(2,0);
 19422   0034CE  0E00               	movlw	0
 19423   0034D0  6E03               	movwf	i2LCD_SetCursor@column^0,c
 19424   0034D2  0E02               	movlw	2
 19425   0034D4  EC84  F02E         	call	i2_LCD_SetCursor
 19426   0034D8                     
 19427                           ;main.c: 174:             LCD_String("Courent leds:");
 19428   0034D8  0E94               	movlw	low STR_18
 19429   0034DA  6E03               	movwf	i2LCD_String@str^0,c
 19430   0034DC  0EFF               	movlw	high STR_18
 19431   0034DE  6E04               	movwf	(i2LCD_String@str+1)^0,c
 19432   0034E0  EC54  F02C         	call	i2_LCD_String	;wreg free
 19433   0034E4                     
 19434                           ;main.c: 175:             LCD_SetCursor(3,0);
 19435   0034E4  0E00               	movlw	0
 19436   0034E6  6E03               	movwf	i2LCD_SetCursor@column^0,c
 19437   0034E8  0E03               	movlw	3
 19438   0034EA  EC84  F02E         	call	i2_LCD_SetCursor
 19439   0034EE                     
 19440                           ;main.c: 176:             int courant = lire_tension() ;
 19441   0034EE  EC4F  F02B         	call	i2_lire_tension	;wreg free
 19442   0034F2  C041  F04B         	movff	?i2_lire_tension,i2___fltol@f1
 19443   0034F6  C042  F04C         	movff	?i2_lire_tension+1,i2___fltol@f1+1
 19444   0034FA  C043  F04D         	movff	?i2_lire_tension+2,i2___fltol@f1+2
 19445   0034FE  C044  F04E         	movff	?i2_lire_tension+3,i2___fltol@f1+3
 19446   003502  EC2C  F023         	call	i2___fltol	;wreg free
 19447   003506  C04B  F0D1         	movff	?i2___fltol,i2LCD_UpdateMenu@courant
 19448   00350A  C04C  F0D2         	movff	?i2___fltol+1,i2LCD_UpdateMenu@courant+1
 19449   00350E                     
 19450                           ;main.c: 177:             sprintf(buffer, "%.3e A", courant);
 19451   00350E  0EBD               	movlw	low i2LCD_UpdateMenu@buffer
 19452   003510  0100               	movlb	0	; () banked
 19453   003512  6FA6               	movwf	i2sprintf@s& (0+255),b
 19454   003514  6BA7               	clrf	(i2sprintf@s+1)& (0+255),b
 19455   003516  0EE4               	movlw	low STR_19
 19456   003518  6FA8               	movwf	i2sprintf@fmt& (0+255),b
 19457   00351A  0EFF               	movlw	high STR_19
 19458   00351C  6FA9               	movwf	(i2sprintf@fmt+1)& (0+255),b
 19459   00351E  C0D1  F0AA         	movff	i2LCD_UpdateMenu@courant,?i2_sprintf+4
 19460   003522  C0D2  F0AB         	movff	i2LCD_UpdateMenu@courant+1,?i2_sprintf+5
 19461   003526  ECFE  F02E         	call	i2_sprintf	;wreg free
 19462                           
 19463                           ;main.c: 178:             LCD_String(buffer);
 19464   00352A  0EBD               	movlw	low i2LCD_UpdateMenu@buffer
 19465   00352C  6E03               	movwf	i2LCD_String@str^0,c
 19466   00352E  6A04               	clrf	(i2LCD_String@str+1)^0,c
 19467   003530  EC54  F02C         	call	i2_LCD_String	;wreg free
 19468                           
 19469                           ;main.c: 180:             break;
 19470   003534  EFE2  F01A         	goto	i2l761
 19471   003538                     i2l8456:
 19472   003538  0100               	movlb	0	; () banked
 19473   00353A  51EB               	movf	_etat_courant& (0+255),w,b
 19474   00353C  6FBB               	movwf	??i2_LCD_UpdateMenu& (0+255),b
 19475   00353E  6BBC               	clrf	(??i2_LCD_UpdateMenu+1)& (0+255),b
 19476                           
 19477                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 19478                           ; Switch size 1, requested type "simple"
 19479                           ; Number of cases is 1, Range of values is 0 to 0
 19480                           ; switch strategies available:
 19481                           ; Name         Instructions Cycles
 19482                           ; simple_byte            4     3 (average)
 19483                           ;	Chosen strategy is simple_byte
 19484   003540  51BC               	movf	(??i2_LCD_UpdateMenu+1)& (0+255),w,b
 19485   003542  0A00               	xorlw	0	; case 0
 19486   003544  B4D8               	btfsc	status,2,c
 19487   003546  EFA7  F01A         	goto	i2l8668
 19488   00354A  EFE2  F01A         	goto	i2l761
 19489   00354E                     i2l8668:
 19490                           
 19491                           ; BSR set to: 0
 19492                           ; Switch size 1, requested type "simple"
 19493                           ; Number of cases is 14, Range of values is 0 to 13
 19494                           ; switch strategies available:
 19495                           ; Name         Instructions Cycles
 19496                           ; simple_byte           43    22 (average)
 19497                           ;	Chosen strategy is simple_byte
 19498   00354E  51BB               	movf	??i2_LCD_UpdateMenu& (0+255),w,b
 19499   003550  0A00               	xorlw	0	; case 0
 19500   003552  B4D8               	btfsc	status,2,c
 19501   003554  EF71  F019         	goto	i2l8372
 19502   003558  0A01               	xorlw	1	; case 1
 19503   00355A  B4D8               	btfsc	status,2,c
 19504   00355C  EF94  F019         	goto	i2l8382
 19505   003560  0A03               	xorlw	3	; case 2
 19506   003562  B4D8               	btfsc	status,2,c
 19507   003564  EFAC  F019         	goto	i2l8388
 19508   003568  0A01               	xorlw	1	; case 3
 19509   00356A  B4D8               	btfsc	status,2,c
 19510   00356C  EFE2  F01A         	goto	i2l761
 19511   003570  0A07               	xorlw	7	; case 4
 19512   003572  B4D8               	btfsc	status,2,c
 19513   003574  EFB9  F019         	goto	i2l8392
 19514   003578  0A01               	xorlw	1	; case 5
 19515   00357A  B4D8               	btfsc	status,2,c
 19516   00357C  EFCE  F019         	goto	i2l8400
 19517   003580  0A03               	xorlw	3	; case 6
 19518   003582  B4D8               	btfsc	status,2,c
 19519   003584  EFDB  F019         	goto	i2l8404
 19520   003588  0A01               	xorlw	1	; case 7
 19521   00358A  B4D8               	btfsc	status,2,c
 19522   00358C  EFE8  F019         	goto	i2l8408
 19523   003590  0A0F               	xorlw	15	; case 8
 19524   003592  B4D8               	btfsc	status,2,c
 19525   003594  EFF5  F019         	goto	i2l8412
 19526   003598  0A01               	xorlw	1	; case 9
 19527   00359A  B4D8               	btfsc	status,2,c
 19528   00359C  EF02  F01A         	goto	i2l8416
 19529   0035A0  0A03               	xorlw	3	; case 10
 19530   0035A2  B4D8               	btfsc	status,2,c
 19531   0035A4  EF0F  F01A         	goto	i2l8420
 19532   0035A8  0A01               	xorlw	1	; case 11
 19533   0035AA  B4D8               	btfsc	status,2,c
 19534   0035AC  EF1C  F01A         	goto	i2l8424
 19535   0035B0  0A07               	xorlw	7	; case 12
 19536   0035B2  B4D8               	btfsc	status,2,c
 19537   0035B4  EF29  F01A         	goto	i2l8428
 19538   0035B8  0A01               	xorlw	1	; case 13
 19539   0035BA  B4D8               	btfsc	status,2,c
 19540   0035BC  EF36  F01A         	goto	i2l8432
 19541   0035C0  EFE2  F01A         	goto	i2l761
 19542   0035C4                     i2l761:
 19543   0035C4  0012               	return		;funcret
 19544   0035C6                     __end_ofi2_LCD_UpdateMenu:
 19545                           	callstack 0
 19546                           
 19547 ;; *************** function i2_sprintf *****************
 19548 ;; Defined at:
 19549 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\nf_sprintf.c"
 19550 ;; Parameters:    Size  Location     Type
 19551 ;;  s               2   70[BANK0 ] PTR unsigned char 
 19552 ;;		 -> i2LCD_UpdateMenu@buffer(16), LCD_UpdateMenu@buffer(16), 
 19553 ;;  fmt             2   72[BANK0 ] PTR const unsigned char 
 19554 ;;		 -> STR_19(7), STR_17(7), 
 19555 ;; Auto vars:     Size  Location     Type
 19556 ;;  f              11   80[BANK0 ] struct _IO_FILE
 19557 ;;  ap              2   78[BANK0 ] PTR void [1]
 19558 ;;		 -> ?i2_sprintf(2), ?_sprintf(2), 
 19559 ;;  ret             2    0        int 
 19560 ;; Return value:  Size  Location     Type
 19561 ;;                  2   70[BANK0 ] int 
 19562 ;; Registers used:
 19563 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19564 ;; Tracked objects:
 19565 ;;		On entry : 0/0
 19566 ;;		On exit  : 0/0
 19567 ;;		Unchanged: 0/0
 19568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19569 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19570 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19571 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19572 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19573 ;;Total ram usage:       21 bytes
 19574 ;; Hardware stack levels used: 1
 19575 ;; Hardware stack levels required when called: 7
 19576 ;; This function calls:
 19577 ;;		i2_vfprintf
 19578 ;; This function is called by:
 19579 ;;		i2_LCD_UpdateMenu
 19580 ;; This function uses a non-reentrant model
 19581 ;;
 19582                           
 19583                           	psect	text75
 19584   005DFC                     __ptext75:
 19585                           	callstack 0
 19586   005DFC                     i2_sprintf:
 19587                           	callstack 9
 19588   005DFC  0EAA               	movlw	low (?i2_sprintf+4)
 19589   005DFE  0100               	movlb	0	; () banked
 19590   005E00  6FAE               	movwf	i2sprintf@ap& (0+255),b
 19591   005E02  6BAF               	clrf	(i2sprintf@ap+1)& (0+255),b
 19592   005E04  C0A6  F0B0         	movff	i2sprintf@s,i2sprintf@f
 19593   005E08  C0A7  F0B1         	movff	i2sprintf@s+1,i2sprintf@f+1
 19594   005E0C                     
 19595                           ; BSR set to: 0
 19596   005E0C  0E00               	movlw	0
 19597   005E0E  6FB3               	movwf	(i2sprintf@f+3)& (0+255),b
 19598   005E10  0E00               	movlw	0
 19599   005E12  6FB2               	movwf	(i2sprintf@f+2)& (0+255),b
 19600   005E14                     
 19601                           ; BSR set to: 0
 19602   005E14  0E00               	movlw	0
 19603   005E16  6FBA               	movwf	(i2sprintf@f+10)& (0+255),b
 19604   005E18  0E00               	movlw	0
 19605   005E1A  6FB9               	movwf	(i2sprintf@f+9)& (0+255),b
 19606   005E1C                     
 19607                           ; BSR set to: 0
 19608   005E1C  0EB0               	movlw	low i2sprintf@f
 19609   005E1E  6F9E               	movwf	i2vfprintf@fp& (0+255),b
 19610   005E20  6B9F               	clrf	(i2vfprintf@fp+1)& (0+255),b
 19611   005E22  C0A8  F0A0         	movff	i2sprintf@fmt,i2vfprintf@fmt
 19612   005E26  C0A9  F0A1         	movff	i2sprintf@fmt+1,i2vfprintf@fmt+1
 19613   005E2A  0EAE               	movlw	low i2sprintf@ap
 19614   005E2C  6FA2               	movwf	i2vfprintf@ap& (0+255),b
 19615   005E2E  6BA3               	clrf	(i2vfprintf@ap+1)& (0+255),b
 19616   005E30  EC2E  F02E         	call	i2_vfprintf	;wreg free
 19617   005E34  0100               	movlb	0	; () banked
 19618   005E36  51B2               	movf	(i2sprintf@f+2)& (0+255),w,b
 19619   005E38  25A6               	addwf	i2sprintf@s& (0+255),w,b
 19620   005E3A  6ED9               	movwf	fsr2l,c
 19621   005E3C  51B3               	movf	(i2sprintf@f+3)& (0+255),w,b
 19622   005E3E  21A7               	addwfc	(i2sprintf@s+1)& (0+255),w,b
 19623   005E40  6EDA               	movwf	fsr2h,c
 19624   005E42  6ADF               	clrf	indf2,c
 19625   005E44                     
 19626                           ; BSR set to: 0
 19627   005E44  0012               	return		;funcret
 19628   005E46                     __end_ofi2_sprintf:
 19629                           	callstack 0
 19630                           
 19631 ;; *************** function i2_vfprintf *****************
 19632 ;; Defined at:
 19633 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
 19634 ;; Parameters:    Size  Location     Type
 19635 ;;  fp              2   62[BANK0 ] PTR struct _IO_FILE
 19636 ;;		 -> i2sprintf@f(11), sprintf@f(11), 
 19637 ;;  fmt             2   64[BANK0 ] PTR const unsigned char 
 19638 ;;		 -> STR_19(7), STR_17(7), 
 19639 ;;  ap              2   66[BANK0 ] PTR PTR void 
 19640 ;;		 -> i2sprintf@ap(2), sprintf@ap(2), 
 19641 ;; Auto vars:     Size  Location     Type
 19642 ;;  cfmt            2   68[BANK0 ] PTR unsigned char 
 19643 ;;		 -> STR_19(7), STR_17(7), 
 19644 ;; Return value:  Size  Location     Type
 19645 ;;                  2   62[BANK0 ] int 
 19646 ;; Registers used:
 19647 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19648 ;; Tracked objects:
 19649 ;;		On entry : 0/0
 19650 ;;		On exit  : 0/0
 19651 ;;		Unchanged: 0/0
 19652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19653 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19654 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19655 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19656 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19657 ;;Total ram usage:        8 bytes
 19658 ;; Hardware stack levels used: 1
 19659 ;; Hardware stack levels required when called: 6
 19660 ;; This function calls:
 19661 ;;		i2_vfpfcnvrt
 19662 ;; This function is called by:
 19663 ;;		i2_sprintf
 19664 ;; This function uses a non-reentrant model
 19665 ;;
 19666                           
 19667                           	psect	text76
 19668   005C5C                     __ptext76:
 19669                           	callstack 0
 19670   005C5C                     i2_vfprintf:
 19671                           	callstack 9
 19672   005C5C                     
 19673                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v3.00\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
 19674   005C5C  C0A0  F0A4         	movff	i2vfprintf@fmt,i2vfprintf@cfmt
 19675   005C60  C0A1  F0A5         	movff	i2vfprintf@fmt+1,i2vfprintf@cfmt+1
 19676                           
 19677                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
 19678   005C64  EF42  F02E         	goto	i2l8352
 19679   005C68                     i2l8350:
 19680                           
 19681                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
 19682   005C68  C09E  F08F         	movff	i2vfprintf@fp,i2vfpfcnvrt@fp
 19683   005C6C  C09F  F090         	movff	i2vfprintf@fp+1,i2vfpfcnvrt@fp+1
 19684   005C70  0EA4               	movlw	low i2vfprintf@cfmt
 19685   005C72  0100               	movlb	0	; () banked
 19686   005C74  6F91               	movwf	i2vfpfcnvrt@fmt& (0+255),b
 19687   005C76  6B92               	clrf	(i2vfpfcnvrt@fmt+1)& (0+255),b
 19688   005C78  C0A2  F093         	movff	i2vfprintf@ap,i2vfpfcnvrt@ap
 19689   005C7C  C0A3  F094         	movff	i2vfprintf@ap+1,i2vfpfcnvrt@ap+1
 19690   005C80  EC51  F01C         	call	i2_vfpfcnvrt	;wreg free
 19691   005C84                     i2l8352:
 19692                           
 19693                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
 19694   005C84  0060  F293  FFF6   	movff	i2vfprintf@cfmt,tblptrl
 19695   005C8A  0060  F297  FFF7   	movff	i2vfprintf@cfmt+1,tblptrh
 19696   005C90                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 19697   005C90  6AF8               	clrf	tblptru,c
 19698   005C92                     	endif
 19699   005C92                     	if	0	;tblptru may be non-zero
 19700   005C92                     	endif
 19701   005C92  0008               	tblrd		*
 19702   005C94  50F5               	movf	tablat,w,c
 19703   005C96  0900               	iorlw	0
 19704   005C98  A4D8               	btfss	status,2,c
 19705   005C9A  EF51  F02E         	goto	i2u902_41
 19706   005C9E  EF53  F02E         	goto	i2u902_40
 19707   005CA2                     i2u902_41:
 19708   005CA2  EF34  F02E         	goto	i2l8350
 19709   005CA6                     i2u902_40:
 19710   005CA6                     
 19711                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1835:  return 0;
 19712   005CA6  0E00               	movlw	0
 19713   005CA8  0100               	movlb	0	; () banked
 19714   005CAA  6F9F               	movwf	(?i2_vfprintf+1)& (0+255),b
 19715   005CAC  0E00               	movlw	0
 19716   005CAE  6F9E               	movwf	?i2_vfprintf& (0+255),b
 19717   005CB0                     
 19718                           ; BSR set to: 0
 19719   005CB0  0012               	return		;funcret
 19720   005CB2                     __end_ofi2_vfprintf:
 19721                           	callstack 0
 19722                           
 19723 ;; *************** function i2_vfpfcnvrt *****************
 19724 ;; Defined at:
 19725 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
 19726 ;; Parameters:    Size  Location     Type
 19727 ;;  fp              2   47[BANK0 ] PTR struct _IO_FILE
 19728 ;;		 -> i2sprintf@f(11), sprintf@f(11), 
 19729 ;;  fmt             2   49[BANK0 ] PTR PTR unsigned char 
 19730 ;;		 -> i2vfprintf@cfmt(2), vfprintf@cfmt(2), 
 19731 ;;  ap              2   51[BANK0 ] PTR PTR void 
 19732 ;;		 -> i2sprintf@ap(2), sprintf@ap(2), 
 19733 ;; Auto vars:     Size  Location     Type
 19734 ;;  convarg         4   55[BANK0 ] struct .
 19735 ;;  cp              2   60[BANK0 ] PTR unsigned char 
 19736 ;;		 -> STR_19(7), STR_17(7), 
 19737 ;;  c               1   59[BANK0 ] unsigned char 
 19738 ;;  done            1    0        _Bool 
 19739 ;; Return value:  Size  Location     Type
 19740 ;;                  1    wreg      void 
 19741 ;; Registers used:
 19742 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19743 ;; Tracked objects:
 19744 ;;		On entry : 0/0
 19745 ;;		On exit  : 0/0
 19746 ;;		Unchanged: 0/0
 19747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19748 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19749 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19750 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19751 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19752 ;;Total ram usage:       15 bytes
 19753 ;; Hardware stack levels used: 1
 19754 ;; Hardware stack levels required when called: 5
 19755 ;; This function calls:
 19756 ;;		i2_efgtoa
 19757 ;;		i2_fputc
 19758 ;;		i2_read_prec_or_width
 19759 ;; This function is called by:
 19760 ;;		i2_vfprintf
 19761 ;; This function uses a non-reentrant model
 19762 ;;
 19763                           
 19764                           	psect	text77
 19765   0038A2                     __ptext77:
 19766                           	callstack 0
 19767   0038A2                     i2_vfpfcnvrt:
 19768                           	callstack 9
 19769   0038A2                     
 19770                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
 19771   0038A2  0060  F247  FFD9   	movff	i2vfpfcnvrt@fmt,fsr2l
 19772   0038A8  0060  F24B  FFDA   	movff	i2vfpfcnvrt@fmt+1,fsr2h
 19773   0038AE  006F FF7B FFF6     	movff	postinc2,tblptrl
 19774   0038B4  006F FF77 FFF7     	movff	postdec2,tblptrh
 19775   0038BA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 19776   0038BA  6AF8               	clrf	tblptru,c
 19777   0038BC                     	endif
 19778   0038BC                     	if	0	;tblptru may be non-zero
 19779   0038BC                     	endif
 19780   0038BC  0008               	tblrd		*
 19781   0038BE  50F5               	movf	tablat,w,c
 19782   0038C0  0A25               	xorlw	37
 19783   0038C2  A4D8               	btfss	status,2,c
 19784   0038C4  EF66  F01C         	goto	i2u898_41
 19785   0038C8  EF68  F01C         	goto	i2u898_40
 19786   0038CC                     i2u898_41:
 19787   0038CC  EFA4  F01D         	goto	i2l8342
 19788   0038D0                     i2u898_40:
 19789   0038D0                     
 19790                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
 19791   0038D0  0060  F247  FFD9   	movff	i2vfpfcnvrt@fmt,fsr2l
 19792   0038D6  0060  F24B  FFDA   	movff	i2vfpfcnvrt@fmt+1,fsr2h
 19793   0038DC  2ADE               	incf	postinc2,f,c
 19794   0038DE  0E00               	movlw	0
 19795   0038E0  22DD               	addwfc	postdec2,f,c
 19796   0038E2                     
 19797                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
 19798   0038E2  0E00               	movlw	0
 19799   0038E4  0100               	movlb	0	; () banked
 19800   0038E6  6FDE               	movwf	(_width+1)& (0+255),b
 19801   0038E8  0E00               	movlw	0
 19802   0038EA  6FDD               	movwf	_width& (0+255),b
 19803   0038EC  C0DD  F0E9         	movff	_width,_flags
 19804   0038F0                     
 19805                           ; BSR set to: 0
 19806                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
 19807   0038F0  69DF               	setf	_prec& (0+255),b
 19808   0038F2  69E0               	setf	(_prec+1)& (0+255),b
 19809   0038F4                     
 19810                           ; BSR set to: 0
 19811                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1265:         if 
      +                          ((*fmt)[0] == '.') {
 19812   0038F4  0060  F247  FFD9   	movff	i2vfpfcnvrt@fmt,fsr2l
 19813   0038FA  0060  F24B  FFDA   	movff	i2vfpfcnvrt@fmt+1,fsr2h
 19814   003900  006F FF7B FFF6     	movff	postinc2,tblptrl
 19815   003906  006F FF77 FFF7     	movff	postdec2,tblptrh
 19816   00390C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 19817   00390C  6AF8               	clrf	tblptru,c
 19818   00390E                     	endif
 19819   00390E                     	if	0	;tblptru may be non-zero
 19820   00390E                     	endif
 19821   00390E  0008               	tblrd		*
 19822   003910  50F5               	movf	tablat,w,c
 19823   003912  0A2E               	xorlw	46
 19824   003914  A4D8               	btfss	status,2,c
 19825   003916  EF8F  F01C         	goto	i2u899_41
 19826   00391A  EF91  F01C         	goto	i2u899_40
 19827   00391E                     i2u899_41:
 19828   00391E  EFA8  F01C         	goto	i2l8304
 19829   003922                     i2u899_40:
 19830   003922                     
 19831                           ; BSR set to: 0
 19832                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1266:            
      +                           ++*fmt;
 19833   003922  0060  F247  FFD9   	movff	i2vfpfcnvrt@fmt,fsr2l
 19834   003928  0060  F24B  FFDA   	movff	i2vfpfcnvrt@fmt+1,fsr2h
 19835   00392E  2ADE               	incf	postinc2,f,c
 19836   003930  0E00               	movlw	0
 19837   003932  22DD               	addwfc	postdec2,f,c
 19838   003934                     
 19839                           ; BSR set to: 0
 19840                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1267:    prec = r
      +                          ead_prec_or_width(fmt, ap);
 19841   003934  C091  F001         	movff	i2vfpfcnvrt@fmt,i2read_prec_or_width@fmt
 19842   003938  C092  F002         	movff	i2vfpfcnvrt@fmt+1,i2read_prec_or_width@fmt+1
 19843   00393C  C093  F003         	movff	i2vfpfcnvrt@ap,i2read_prec_or_width@ap
 19844   003940  C094  F004         	movff	i2vfpfcnvrt@ap+1,i2read_prec_or_width@ap+1
 19845   003944  ECAB  F025         	call	i2_read_prec_or_width	;wreg free
 19846   003948  C001  F0DF         	movff	?i2_read_prec_or_width,_prec
 19847   00394C  C002  F0E0         	movff	?i2_read_prec_or_width+1,_prec+1
 19848   003950                     i2l8304:
 19849                           
 19850                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1689:   cp = *fmt
      +                          ;
 19851   003950  0060  F247  FFD9   	movff	i2vfpfcnvrt@fmt,fsr2l
 19852   003956  0060  F24B  FFDA   	movff	i2vfpfcnvrt@fmt+1,fsr2h
 19853   00395C  006F FF78  F09C    	movff	postinc2,i2vfpfcnvrt@cp
 19854   003962  006F FF74  F09D    	movff	postdec2,i2vfpfcnvrt@cp+1
 19855   003968                     
 19856                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1690:   c = *cp;
 19857   003968  0060  F273  FFF6   	movff	i2vfpfcnvrt@cp,tblptrl
 19858   00396E  0060  F277  FFF7   	movff	i2vfpfcnvrt@cp+1,tblptrh
 19859   003974                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 19860   003974  6AF8               	clrf	tblptru,c
 19861   003976                     	endif
 19862   003976                     	if	0	;tblptru may be non-zero
 19863   003976                     	endif
 19864   003976  0008               	tblrd		*
 19865   003978  006F FFD4  F09B    	movff	tablat,i2vfpfcnvrt@c
 19866                           
 19867                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1691:   switch(c)
      +                           {
 19868   00397E  EFCC  F01C         	goto	i2l8314
 19869   003982                     i2l8308:
 19870                           
 19871                           ; BSR set to: 0
 19872                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1695:     cp++;
 19873   003982  4B9C               	infsnz	i2vfpfcnvrt@cp& (0+255),f,b
 19874   003984  2B9D               	incf	(i2vfpfcnvrt@cp+1)& (0+255),f,b
 19875                           
 19876                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1696:     break;
 19877   003986  EFE0  F01C         	goto	i2l8316
 19878   00398A                     i2l8310:
 19879                           
 19880                           ; BSR set to: 0
 19881                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1721:     c = 'l'
      +                          ;
 19882   00398A  0E6C               	movlw	108
 19883   00398C  6F9B               	movwf	i2vfpfcnvrt@c& (0+255),b
 19884                           
 19885                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1722:     break;
 19886   00398E  EFE0  F01C         	goto	i2l8316
 19887   003992                     i2l1674:
 19888                           
 19889                           ; BSR set to: 0
 19890                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1724:     c = 0;
 19891   003992  6B9B               	clrf	i2vfpfcnvrt@c& (0+255),b
 19892                           
 19893                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1725:     break;
 19894   003994  EFE0  F01C         	goto	i2l8316
 19895   003998                     i2l8314:
 19896   003998  0100               	movlb	0	; () banked
 19897   00399A  519B               	movf	i2vfpfcnvrt@c& (0+255),w,b
 19898                           
 19899                           ; Switch size 1, requested type "simple"
 19900                           ; Number of cases is 4, Range of values is 76 to 108
 19901                           ; switch strategies available:
 19902                           ; Name         Instructions Cycles
 19903                           ; simple_byte           13     7 (average)
 19904                           ;	Chosen strategy is simple_byte
 19905   00399C  0A4C               	xorlw	76	; case 76
 19906   00399E  B4D8               	btfsc	status,2,c
 19907   0039A0  EFC1  F01C         	goto	i2l8308
 19908   0039A4  0A29               	xorlw	41	; case 101
 19909   0039A6  B4D8               	btfsc	status,2,c
 19910   0039A8  EFC5  F01C         	goto	i2l8310
 19911   0039AC  0A03               	xorlw	3	; case 102
 19912   0039AE  B4D8               	btfsc	status,2,c
 19913   0039B0  EFC5  F01C         	goto	i2l8310
 19914   0039B4  0A0A               	xorlw	10	; case 108
 19915   0039B6  B4D8               	btfsc	status,2,c
 19916   0039B8  EFC1  F01C         	goto	i2l8308
 19917   0039BC  EFC9  F01C         	goto	i2l1674
 19918   0039C0                     i2l8316:
 19919                           
 19920                           ; BSR set to: 0
 19921   0039C0  0060  F273  FFF6   	movff	i2vfpfcnvrt@cp,tblptrl
 19922   0039C6  0060  F277  FFF7   	movff	i2vfpfcnvrt@cp+1,tblptrh
 19923   0039CC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 19924   0039CC  6AF8               	clrf	tblptru,c
 19925   0039CE                     	endif
 19926   0039CE                     	if	0	;tblptru may be non-zero
 19927   0039CE                     	endif
 19928   0039CE  0008               	tblrd		*
 19929   0039D0  50F5               	movf	tablat,w,c
 19930   0039D2  0A65               	xorlw	101
 19931   0039D4  B4D8               	btfsc	status,2,c
 19932   0039D6  EFEF  F01C         	goto	i2u900_41
 19933   0039DA  EFF1  F01C         	goto	i2u900_40
 19934   0039DE                     i2u900_41:
 19935   0039DE  EF4C  F01D         	goto	i2l8326
 19936   0039E2                     i2u900_40:
 19937   0039E2                     
 19938                           ; BSR set to: 0
 19939   0039E2  0060  F273  FFF6   	movff	i2vfpfcnvrt@cp,tblptrl
 19940   0039E8  0060  F277  FFF7   	movff	i2vfpfcnvrt@cp+1,tblptrh
 19941   0039EE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 19942   0039EE  6AF8               	clrf	tblptru,c
 19943   0039F0                     	endif
 19944   0039F0                     	if	0	;tblptru may be non-zero
 19945   0039F0                     	endif
 19946   0039F0  0008               	tblrd		*
 19947   0039F2  50F5               	movf	tablat,w,c
 19948   0039F4  0A66               	xorlw	102
 19949   0039F6  A4D8               	btfss	status,2,c
 19950   0039F8  EF00  F01D         	goto	i2u901_41
 19951   0039FC  EF02  F01D         	goto	i2u901_40
 19952   003A00                     i2u901_41:
 19953   003A00  EF99  F01D         	goto	i2l8338
 19954   003A04                     i2u901_40:
 19955   003A04  EF4C  F01D         	goto	i2l8326
 19956   003A08                     i2l8320:
 19957                           
 19958                           ; BSR set to: 0
 19959                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1756:      convar
      +                          g.f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
 19960   003A08  0060  F24F  FFD9   	movff	i2vfpfcnvrt@ap,fsr2l
 19961   003A0E  0060  F253  FFDA   	movff	i2vfpfcnvrt@ap+1,fsr2h
 19962   003A14  006F FF7C  F095    	movff	indf2,??i2_vfpfcnvrt
 19963   003A1A  0E04               	movlw	4
 19964   003A1C  26DE               	addwf	postinc2,f,c
 19965   003A1E  006F FF7C  F096    	movff	indf2,??i2_vfpfcnvrt+1
 19966   003A24  0E00               	movlw	0
 19967   003A26  22DD               	addwfc	postdec2,f,c
 19968   003A28  0060  F257  FFD9   	movff	??i2_vfpfcnvrt,fsr2l
 19969   003A2E  0060  F25B  FFDA   	movff	??i2_vfpfcnvrt+1,fsr2h
 19970   003A34  006F FF78  F097    	movff	postinc2,i2vfpfcnvrt@convarg
 19971   003A3A  006F FF78  F098    	movff	postinc2,i2vfpfcnvrt@convarg+1
 19972   003A40  006F FF78  F099    	movff	postinc2,i2vfpfcnvrt@convarg+2
 19973   003A46  006F FF78  F09A    	movff	postinc2,i2vfpfcnvrt@convarg+3
 19974                           
 19975                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1757:      break;
 19976   003A4C  EF57  F01D         	goto	i2l8328
 19977   003A50                     i2l8322:
 19978                           
 19979                           ; BSR set to: 0
 19980                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1759:      convar
      +                          g.f = (long double)(*(long double *)__va_arg(*(long double **)ap, (long double)0));
 19981   003A50  0060  F24F  FFD9   	movff	i2vfpfcnvrt@ap,fsr2l
 19982   003A56  0060  F253  FFDA   	movff	i2vfpfcnvrt@ap+1,fsr2h
 19983   003A5C  006F FF7C  F095    	movff	indf2,??i2_vfpfcnvrt
 19984   003A62  0E04               	movlw	4
 19985   003A64  26DE               	addwf	postinc2,f,c
 19986   003A66  006F FF7C  F096    	movff	indf2,??i2_vfpfcnvrt+1
 19987   003A6C  0E00               	movlw	0
 19988   003A6E  22DD               	addwfc	postdec2,f,c
 19989   003A70  0060  F257  FFD9   	movff	??i2_vfpfcnvrt,fsr2l
 19990   003A76  0060  F25B  FFDA   	movff	??i2_vfpfcnvrt+1,fsr2h
 19991   003A7C  006F FF78  F097    	movff	postinc2,i2vfpfcnvrt@convarg
 19992   003A82  006F FF78  F098    	movff	postinc2,i2vfpfcnvrt@convarg+1
 19993   003A88  006F FF78  F099    	movff	postinc2,i2vfpfcnvrt@convarg+2
 19994   003A8E  006F FF78  F09A    	movff	postinc2,i2vfpfcnvrt@convarg+3
 19995                           
 19996                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1760:      break;
 19997   003A94  EF57  F01D         	goto	i2l8328
 19998   003A98                     i2l8326:
 19999                           
 20000                           ; BSR set to: 0
 20001   003A98  519B               	movf	i2vfpfcnvrt@c& (0+255),w,b
 20002                           
 20003                           ; Switch size 1, requested type "simple"
 20004                           ; Number of cases is 2, Range of values is 76 to 108
 20005                           ; switch strategies available:
 20006                           ; Name         Instructions Cycles
 20007                           ; simple_byte            7     4 (average)
 20008                           ;	Chosen strategy is simple_byte
 20009   003A9A  0A4C               	xorlw	76	; case 76
 20010   003A9C  B4D8               	btfsc	status,2,c
 20011   003A9E  EF28  F01D         	goto	i2l8322
 20012   003AA2  0A20               	xorlw	32	; case 108
 20013   003AA4  B4D8               	btfsc	status,2,c
 20014   003AA6  EF04  F01D         	goto	i2l8320
 20015   003AAA  EF57  F01D         	goto	i2l8328
 20016   003AAE                     i2l8328:
 20017                           
 20018                           ; BSR set to: 0
 20019                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1762:    *fmt = c
      +                          p+1;
 20020   003AAE  0E01               	movlw	1
 20021   003AB0  259C               	addwf	i2vfpfcnvrt@cp& (0+255),w,b
 20022   003AB2  6F95               	movwf	??i2_vfpfcnvrt& (0+255),b
 20023   003AB4  0E00               	movlw	0
 20024   003AB6  219D               	addwfc	(i2vfpfcnvrt@cp+1)& (0+255),w,b
 20025   003AB8  6F96               	movwf	(??i2_vfpfcnvrt+1)& (0+255),b
 20026   003ABA  0060  F247  FFD9   	movff	i2vfpfcnvrt@fmt,fsr2l
 20027   003AC0  0060  F24B  FFDA   	movff	i2vfpfcnvrt@fmt+1,fsr2h
 20028   003AC6  0060  F257  FFDE   	movff	??i2_vfpfcnvrt,postinc2
 20029   003ACC  0060  F25B  FFDD   	movff	??i2_vfpfcnvrt+1,postdec2
 20030                           
 20031                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1763:    switch (
      +                          *cp) {
 20032   003AD2  EF86  F01D         	goto	i2l8336
 20033   003AD6                     i2l8330:
 20034                           
 20035                           ; BSR set to: 0
 20036                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1790:      return
      +                           (void) efgtoa(fp, convarg.f, *cp);;	Return value of i2_vfpfcnvrt is never used
 20037   003AD6  C08F  F055         	movff	i2vfpfcnvrt@fp,i2efgtoa@fp
 20038   003ADA  C090  F056         	movff	i2vfpfcnvrt@fp+1,i2efgtoa@fp+1
 20039   003ADE  C097  F057         	movff	i2vfpfcnvrt@convarg,i2efgtoa@f
 20040   003AE2  C098  F058         	movff	i2vfpfcnvrt@convarg+1,i2efgtoa@f+1
 20041   003AE6  C099  F059         	movff	i2vfpfcnvrt@convarg+2,i2efgtoa@f+2
 20042   003AEA  C09A  F05A         	movff	i2vfpfcnvrt@convarg+3,i2efgtoa@f+3
 20043   003AEE  0060  F273  FFF6   	movff	i2vfpfcnvrt@cp,tblptrl
 20044   003AF4  0060  F277  FFF7   	movff	i2vfpfcnvrt@cp+1,tblptrh
 20045   003AFA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 20046   003AFA  6AF8               	clrf	tblptru,c
 20047   003AFC                     	endif
 20048   003AFC                     	if	0	;tblptru may be non-zero
 20049   003AFC                     	endif
 20050   003AFC  0008               	tblrd		*
 20051   003AFE  006F FFD4  F05B    	movff	tablat,i2efgtoa@c
 20052   003B04  ECAE  F005         	call	i2_efgtoa	;wreg free
 20053   003B08  EFBD  F01D         	goto	i2l1685
 20054   003B0C                     i2l8336:
 20055                           
 20056                           ; BSR set to: 0
 20057   003B0C  0060  F273  FFF6   	movff	i2vfpfcnvrt@cp,tblptrl
 20058   003B12  0060  F277  FFF7   	movff	i2vfpfcnvrt@cp+1,tblptrh
 20059   003B18                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 20060   003B18  6AF8               	clrf	tblptru,c
 20061   003B1A                     	endif
 20062   003B1A                     	if	0	;tblptru may be non-zero
 20063   003B1A                     	endif
 20064   003B1A  0008               	tblrd		*
 20065   003B1C  50F5               	movf	tablat,w,c
 20066                           
 20067                           ; Switch size 1, requested type "simple"
 20068                           ; Number of cases is 2, Range of values is 101 to 102
 20069                           ; switch strategies available:
 20070                           ; Name         Instructions Cycles
 20071                           ; simple_byte            7     4 (average)
 20072                           ;	Chosen strategy is simple_byte
 20073   003B1E  0A65               	xorlw	101	; case 101
 20074   003B20  B4D8               	btfsc	status,2,c
 20075   003B22  EF6B  F01D         	goto	i2l8330
 20076   003B26  0A03               	xorlw	3	; case 102
 20077   003B28  B4D8               	btfsc	status,2,c
 20078   003B2A  EF6B  F01D         	goto	i2l8330
 20079   003B2E  EF99  F01D         	goto	i2l8338
 20080   003B32                     i2l8338:
 20081                           
 20082                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
 20083   003B32  0060  F247  FFD9   	movff	i2vfpfcnvrt@fmt,fsr2l
 20084   003B38  0060  F24B  FFDA   	movff	i2vfpfcnvrt@fmt+1,fsr2h
 20085   003B3E  2ADE               	incf	postinc2,f,c
 20086   003B40  0E00               	movlw	0
 20087   003B42  22DD               	addwfc	postdec2,f,c
 20088   003B44  EFBD  F01D         	goto	i2l1685
 20089   003B48                     i2l8342:
 20090                           
 20091                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
 20092   003B48  0060  F247  FFD9   	movff	i2vfpfcnvrt@fmt,fsr2l
 20093   003B4E  0060  F24B  FFDA   	movff	i2vfpfcnvrt@fmt+1,fsr2h
 20094   003B54  006F FF7B FFF6     	movff	postinc2,tblptrl
 20095   003B5A  006F FF77 FFF7     	movff	postdec2,tblptrh
 20096   003B60                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 20097   003B60  6AF8               	clrf	tblptru,c
 20098   003B62                     	endif
 20099   003B62                     	if	0	;tblptru may be non-zero
 20100   003B62                     	endif
 20101   003B62  0008               	tblrd		*
 20102   003B64  50F5               	movf	tablat,w,c
 20103   003B66  6E01               	movwf	i2fputc@c^0,c
 20104   003B68  6A02               	clrf	(i2fputc@c+1)^0,c
 20105   003B6A  C08F  F003         	movff	i2vfpfcnvrt@fp,i2fputc@fp
 20106   003B6E  C090  F004         	movff	i2vfpfcnvrt@fp+1,i2fputc@fp+1
 20107   003B72  EC00  F027         	call	i2_fputc	;wreg free
 20108   003B76  EF99  F01D         	goto	i2l8338
 20109   003B7A                     i2l1685:
 20110   003B7A  0012               	return		;funcret
 20111   003B7C                     __end_ofi2_vfpfcnvrt:
 20112                           	callstack 0
 20113                           
 20114 ;; *************** function i2_read_prec_or_width *****************
 20115 ;; Defined at:
 20116 ;;		line 1158 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
 20117 ;; Parameters:    Size  Location     Type
 20118 ;;  fmt             2    0[COMRAM] PTR PTR const unsigned c
 20119 ;;		 -> i2vfprintf@cfmt(2), vfprintf@cfmt(2), 
 20120 ;;  ap              2    2[COMRAM] PTR PTR void [1]
 20121 ;;		 -> i2sprintf@ap(2), sprintf@ap(2), 
 20122 ;; Auto vars:     Size  Location     Type
 20123 ;;  n               2    7[COMRAM] int 
 20124 ;;  c               1    6[COMRAM] unsigned char 
 20125 ;; Return value:  Size  Location     Type
 20126 ;;                  2    0[COMRAM] int 
 20127 ;; Registers used:
 20128 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 20129 ;; Tracked objects:
 20130 ;;		On entry : 0/0
 20131 ;;		On exit  : 0/0
 20132 ;;		Unchanged: 0/0
 20133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20134 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20135 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20136 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20137 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20138 ;;Total ram usage:        9 bytes
 20139 ;; Hardware stack levels used: 1
 20140 ;; This function calls:
 20141 ;;		Nothing
 20142 ;; This function is called by:
 20143 ;;		i2_vfpfcnvrt
 20144 ;; This function uses a non-reentrant model
 20145 ;;
 20146                           
 20147                           	psect	text78
 20148   004B56                     __ptext78:
 20149                           	callstack 0
 20150   004B56                     i2_read_prec_or_width:
 20151                           	callstack 13
 20152   004B56                     
 20153                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1159:     int n =
      +                           0;
 20154   004B56  0E00               	movlw	0
 20155   004B58  6E09               	movwf	(i2read_prec_or_width@n+1)^0,c
 20156   004B5A  0E00               	movlw	0
 20157   004B5C  6E08               	movwf	i2read_prec_or_width@n^0,c
 20158   004B5E                     
 20159                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1160:     if ((*f
      +                          mt)[0] == '*') {
 20160   004B5E  0060  F007  FFD9   	movff	i2read_prec_or_width@fmt,fsr2l
 20161   004B64  0060  F00B  FFDA   	movff	i2read_prec_or_width@fmt+1,fsr2h
 20162   004B6A  006F FF7B FFF6     	movff	postinc2,tblptrl
 20163   004B70  006F FF77 FFF7     	movff	postdec2,tblptrh
 20164   004B76                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 20165   004B76  6AF8               	clrf	tblptru,c
 20166   004B78                     	endif
 20167   004B78                     	if	0	;tblptru may be non-zero
 20168   004B78                     	endif
 20169   004B78  0008               	tblrd		*
 20170   004B7A  50F5               	movf	tablat,w,c
 20171   004B7C  0A2A               	xorlw	42
 20172   004B7E  A4D8               	btfss	status,2,c
 20173   004B80  EFC4  F025         	goto	i2u630_41
 20174   004B84  EFC6  F025         	goto	i2u630_40
 20175   004B88                     i2u630_41:
 20176   004B88  EF07  F026         	goto	i2l6166
 20177   004B8C                     i2u630_40:
 20178   004B8C                     
 20179                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1161:         ++*
      +                          fmt;
 20180   004B8C  0060  F007  FFD9   	movff	i2read_prec_or_width@fmt,fsr2l
 20181   004B92  0060  F00B  FFDA   	movff	i2read_prec_or_width@fmt+1,fsr2h
 20182   004B98  2ADE               	incf	postinc2,f,c
 20183   004B9A  0E00               	movlw	0
 20184   004B9C  22DD               	addwfc	postdec2,f,c
 20185                           
 20186                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1162:         n =
      +                           (*(int *)__va_arg(*(int **)*ap, (int)0));
 20187   004B9E  0060  F00F  FFD9   	movff	i2read_prec_or_width@ap,fsr2l
 20188   004BA4  0060  F013  FFDA   	movff	i2read_prec_or_width@ap+1,fsr2h
 20189   004BAA  006F FF7C  F005    	movff	indf2,??i2_read_prec_or_width
 20190   004BB0  0E02               	movlw	2
 20191   004BB2  26DE               	addwf	postinc2,f,c
 20192   004BB4  006F FF7C  F006    	movff	indf2,??i2_read_prec_or_width+1
 20193   004BBA  0E00               	movlw	0
 20194   004BBC  22DD               	addwfc	postdec2,f,c
 20195   004BBE  0060  F017  FFD9   	movff	??i2_read_prec_or_width,fsr2l
 20196   004BC4  0060  F01B  FFDA   	movff	??i2_read_prec_or_width+1,fsr2h
 20197   004BCA  006F FF78  F008    	movff	postinc2,i2read_prec_or_width@n
 20198   004BD0  006F FF74  F009    	movff	postdec2,i2read_prec_or_width@n+1
 20199                           
 20200                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1163:     } else 
      +                          {
 20201   004BD6  EF20  F026         	goto	i2l1659
 20202   004BDA                     i2l6162:
 20203                           
 20204                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1166:            
      +                           n = n * 10 + c;
 20205   004BDA  0E0A               	movlw	10
 20206   004BDC  0208               	mulwf	i2read_prec_or_width@n^0,c
 20207   004BDE  006F FFCC  F005    	movff	prodl,??i2_read_prec_or_width
 20208   004BE4  006F FFD0  F006    	movff	prodh,??i2_read_prec_or_width+1
 20209   004BEA  0209               	mulwf	(i2read_prec_or_width@n+1)^0,c
 20210   004BEC  50F3               	movf	prodl,w,c
 20211   004BEE  2606               	addwf	(??i2_read_prec_or_width+1)^0,f,c
 20212   004BF0  5007               	movf	i2read_prec_or_width@c^0,w,c
 20213   004BF2  2405               	addwf	??i2_read_prec_or_width^0,w,c
 20214   004BF4  6E08               	movwf	i2read_prec_or_width@n^0,c
 20215   004BF6  0E00               	movlw	0
 20216   004BF8  2006               	addwfc	(??i2_read_prec_or_width+1)^0,w,c
 20217   004BFA  6E09               	movwf	(i2read_prec_or_width@n+1)^0,c
 20218   004BFC                     
 20219                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1167:            
      +                           ++*fmt;
 20220   004BFC  0060  F007  FFD9   	movff	i2read_prec_or_width@fmt,fsr2l
 20221   004C02  0060  F00B  FFDA   	movff	i2read_prec_or_width@fmt+1,fsr2h
 20222   004C08  2ADE               	incf	postinc2,f,c
 20223   004C0A  0E00               	movlw	0
 20224   004C0C  22DD               	addwfc	postdec2,f,c
 20225   004C0E                     i2l6166:
 20226                           
 20227                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1165:         whi
      +                          le ((c = ((unsigned)(*fmt)[0]) - '0') < 10) {
 20228   004C0E  0060  F007  FFD9   	movff	i2read_prec_or_width@fmt,fsr2l
 20229   004C14  0060  F00B  FFDA   	movff	i2read_prec_or_width@fmt+1,fsr2h
 20230   004C1A  006F FF7B FFF6     	movff	postinc2,tblptrl
 20231   004C20  006F FF77 FFF7     	movff	postdec2,tblptrh
 20232   004C26                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 20233   004C26  6AF8               	clrf	tblptru,c
 20234   004C28                     	endif
 20235   004C28                     	if	0	;tblptru may be non-zero
 20236   004C28                     	endif
 20237   004C28  0008               	tblrd		*
 20238   004C2A  50F5               	movf	tablat,w,c
 20239   004C2C  0FD0               	addlw	208
 20240   004C2E  6E07               	movwf	i2read_prec_or_width@c^0,c
 20241   004C30  0E09               	movlw	9
 20242   004C32  6407               	cpfsgt	i2read_prec_or_width@c^0,c
 20243   004C34  EF1E  F026         	goto	i2u631_41
 20244   004C38  EF20  F026         	goto	i2u631_40
 20245   004C3C                     i2u631_41:
 20246   004C3C  EFED  F025         	goto	i2l6162
 20247   004C40                     i2u631_40:
 20248   004C40                     i2l1659:
 20249                           
 20250                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1170:     return 
      +                          n;
 20251   004C40  C008  F001         	movff	i2read_prec_or_width@n,?i2_read_prec_or_width
 20252   004C44  C009  F002         	movff	i2read_prec_or_width@n+1,?i2_read_prec_or_width+1
 20253   004C48  0012               	return		;funcret
 20254   004C4A                     __end_ofi2_read_prec_or_width:
 20255                           	callstack 0
 20256                           
 20257 ;; *************** function i2_efgtoa *****************
 20258 ;; Defined at:
 20259 ;;		line 587 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
 20260 ;; Parameters:    Size  Location     Type
 20261 ;;  fp              2   84[COMRAM] PTR struct _IO_FILE
 20262 ;;		 -> i2sprintf@f(11), sprintf@f(11), 
 20263 ;;  f               4   86[COMRAM] PTR struct _IO_FILE
 20264 ;;  c               1   90[COMRAM] unsigned char 
 20265 ;; Auto vars:     Size  Location     Type
 20266 ;;  u               4   43[BANK0 ] struct flui
 20267 ;;  g               4   39[BANK0 ] struct flui
 20268 ;;  l               4   28[BANK0 ] struct flui
 20269 ;;  h               4   24[BANK0 ] struct flui
 20270 ;;  ou              4   20[BANK0 ] struct flui
 20271 ;;  n               2   37[BANK0 ] int 
 20272 ;;  i               2   35[BANK0 ] int 
 20273 ;;  e               2   32[BANK0 ] int 
 20274 ;;  w               2   18[BANK0 ] int 
 20275 ;;  p               2   15[BANK0 ] int 
 20276 ;;  m               2   13[BANK0 ] int 
 20277 ;;  d               2   11[BANK0 ] int 
 20278 ;;  ne              2    6[BANK0 ] int 
 20279 ;;  t               2    0[BANK0 ] int 
 20280 ;;  sign            1   34[BANK0 ] unsigned char 
 20281 ;;  nmode           1   17[BANK0 ] unsigned char 
 20282 ;;  mode            1   10[BANK0 ] unsigned char 
 20283 ;;  esign           1    9[BANK0 ] unsigned char 
 20284 ;;  pp              1    8[BANK0 ] unsigned char 
 20285 ;; Return value:  Size  Location     Type
 20286 ;;                  1    wreg      void 
 20287 ;; Registers used:
 20288 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20289 ;; Tracked objects:
 20290 ;;		On entry : 0/0
 20291 ;;		On exit  : 0/0
 20292 ;;		Unchanged: 0/0
 20293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20294 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20295 ;;      Locals:         0      47       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20296 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20297 ;;      Totals:         9      47       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20298 ;;Total ram usage:       56 bytes
 20299 ;; Hardware stack levels used: 1
 20300 ;; Hardware stack levels required when called: 4
 20301 ;; This function calls:
 20302 ;;		i2___awdiv
 20303 ;;		i2___awmod
 20304 ;;		i2___fladd
 20305 ;;		i2___fldiv
 20306 ;;		i2___fleq
 20307 ;;		i2___flge
 20308 ;;		i2___flmul
 20309 ;;		i2___flneg
 20310 ;;		i2___flsub
 20311 ;;		i2___fltol
 20312 ;;		i2___fpclassifyf
 20313 ;;		i2_floorf
 20314 ;;		i2_labs
 20315 ;;		i2_memcpy
 20316 ;;		i2_pad
 20317 ;;		i2_strcpy
 20318 ;; This function is called by:
 20319 ;;		i2_vfpfcnvrt
 20320 ;; This function uses a non-reentrant model
 20321 ;;
 20322                           
 20323                           	psect	text79
 20324   000B5C                     __ptext79:
 20325                           	callstack 0
 20326   000B5C                     i2_efgtoa:
 20327                           	callstack 9
 20328   000B5C                     
 20329                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 587: static void 
      +                          efgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v3.00\pic\sources
      +                          \c99\common\doprnt.c: 588: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common
      +                          \doprnt.c: 589:     char mode, nmode, pp, sign, esign;;C:\Program Files\Microchip\xc8\v3
      +                          .00\pic\sources\c99\common\doprnt.c: 590:     int d, e, i, m, n, ne, p, t, w;;C:\Program
      +                           Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 591:     long double h, l;
 20330   000B5C  0100               	movlb	0	; () banked
 20331   000B5E  6B82               	clrf	i2efgtoa@sign& (0+255),b
 20332                           
 20333                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 596:     g.f = f;
 20334   000B60  C057  F087         	movff	i2efgtoa@f,i2efgtoa@g
 20335   000B64  C058  F088         	movff	i2efgtoa@f+1,i2efgtoa@g+1
 20336   000B68  C059  F089         	movff	i2efgtoa@f+2,i2efgtoa@g+2
 20337   000B6C  C05A  F08A         	movff	i2efgtoa@f+3,i2efgtoa@g+3
 20338   000B70                     
 20339                           ; BSR set to: 0
 20340                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 597:     if (g.f 
      +                          < 0.0) {
 20341   000B70  BF8A               	btfsc	(i2efgtoa@g+3)& (0+255),7,b
 20342   000B72  EFBF  F005         	goto	i2u592_40
 20343   000B76  EFBD  F005         	goto	i2u592_41
 20344   000B7A                     i2u592_41:
 20345   000B7A  EFD3  F005         	goto	i2l5900
 20346   000B7E                     i2u592_40:
 20347   000B7E                     
 20348                           ; BSR set to: 0
 20349                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 598:         sign
      +                           = 1;
 20350   000B7E  0E01               	movlw	1
 20351   000B80  6F82               	movwf	i2efgtoa@sign& (0+255),b
 20352   000B82                     
 20353                           ; BSR set to: 0
 20354                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 599:         g.f 
      +                          = -g.f;
 20355   000B82  C087  F001         	movff	i2efgtoa@g,i2___flneg@f1
 20356   000B86  C088  F002         	movff	i2efgtoa@g+1,i2___flneg@f1+1
 20357   000B8A  C089  F003         	movff	i2efgtoa@g+2,i2___flneg@f1+2
 20358   000B8E  C08A  F004         	movff	i2efgtoa@g+3,i2___flneg@f1+3
 20359   000B92  ECF1  F030         	call	i2___flneg	;wreg free
 20360   000B96  C001  F087         	movff	?i2___flneg,i2efgtoa@g
 20361   000B9A  C002  F088         	movff	?i2___flneg+1,i2efgtoa@g+1
 20362   000B9E  C003  F089         	movff	?i2___flneg+2,i2efgtoa@g+2
 20363   000BA2  C004  F08A         	movff	?i2___flneg+3,i2efgtoa@g+3
 20364   000BA6                     i2l5900:
 20365                           
 20366                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 603:     n = 0;
 20367   000BA6  0E00               	movlw	0
 20368   000BA8  0100               	movlb	0	; () banked
 20369   000BAA  6F86               	movwf	(i2efgtoa@n+1)& (0+255),b
 20370   000BAC  0E00               	movlw	0
 20371   000BAE  6F85               	movwf	i2efgtoa@n& (0+255),b
 20372   000BB0                     
 20373                           ; BSR set to: 0
 20374                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 604:     w = widt
      +                          h;
 20375   000BB0  C0DD  F072         	movff	_width,i2efgtoa@w
 20376   000BB4  C0DE  F073         	movff	_width+1,i2efgtoa@w+1
 20377   000BB8                     
 20378                           ; BSR set to: 0
 20379                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 605:     if (sign
 20380   000BB8  5182               	movf	i2efgtoa@sign& (0+255),w,b
 20381   000BBA  B4D8               	btfsc	status,2,c
 20382   000BBC  EFE2  F005         	goto	i2u593_41
 20383   000BC0  EFE4  F005         	goto	i2u593_40
 20384   000BC4                     i2u593_41:
 20385   000BC4  EFF8  F005         	goto	i2l5914
 20386   000BC8                     i2u593_40:
 20387   000BC8                     
 20388                           ; BSR set to: 0
 20389                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 609:    ) {;C:\Pr
      +                          ogram Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 610:   sign = sign ? '-
      +                          ' : '+';
 20390   000BC8  5182               	movf	i2efgtoa@sign& (0+255),w,b
 20391   000BCA  A4D8               	btfss	status,2,c
 20392   000BCC  EFEA  F005         	goto	i2u594_41
 20393   000BD0  EFEC  F005         	goto	i2u594_40
 20394   000BD4                     i2u594_41:
 20395   000BD4  EFF2  F005         	goto	i2l5910
 20396   000BD8                     i2u594_40:
 20397   000BD8                     
 20398                           ; BSR set to: 0
 20399   000BD8  0E00               	movlw	0
 20400   000BDA  6F63               	movwf	(i2_efgtoa$2326+1)& (0+255),b
 20401   000BDC  0E2B               	movlw	43
 20402   000BDE  6F62               	movwf	i2_efgtoa$2326& (0+255),b
 20403   000BE0  EFF6  F005         	goto	i2l5912
 20404   000BE4                     i2l5910:
 20405                           
 20406                           ; BSR set to: 0
 20407   000BE4  0E00               	movlw	0
 20408   000BE6  6F63               	movwf	(i2_efgtoa$2326+1)& (0+255),b
 20409   000BE8  0E2D               	movlw	45
 20410   000BEA  6F62               	movwf	i2_efgtoa$2326& (0+255),b
 20411   000BEC                     i2l5912:
 20412                           
 20413                           ; BSR set to: 0
 20414   000BEC  C062  F082         	movff	i2_efgtoa$2326,i2efgtoa@sign
 20415   000BF0                     i2l5914:
 20416                           
 20417                           ; BSR set to: 0
 20418                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 619:     if (( __
      +                          fpclassifyf(g.f) == 1 )) {
 20419   000BF0  C087  F001         	movff	i2efgtoa@g,i2___fpclassifyf@x
 20420   000BF4  C088  F002         	movff	i2efgtoa@g+1,i2___fpclassifyf@x+1
 20421   000BF8  C089  F003         	movff	i2efgtoa@g+2,i2___fpclassifyf@x+2
 20422   000BFC  C08A  F004         	movff	i2efgtoa@g+3,i2___fpclassifyf@x+3
 20423   000C00  ECB1  F024         	call	i2___fpclassifyf	;wreg free
 20424   000C04  0401               	decf	?i2___fpclassifyf^0,w,c
 20425   000C06  1002               	iorwf	(?i2___fpclassifyf+1)^0,w,c
 20426   000C08  A4D8               	btfss	status,2,c
 20427   000C0A  EF09  F006         	goto	i2u595_41
 20428   000C0E  EF0B  F006         	goto	i2u595_40
 20429   000C12                     i2u595_41:
 20430   000C12  EF3E  F006         	goto	i2l5932
 20431   000C16                     i2u595_40:
 20432   000C16                     
 20433                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 620:   if (sign) 
      +                          {
 20434   000C16  0100               	movlb	0	; () banked
 20435   000C18  5182               	movf	i2efgtoa@sign& (0+255),w,b
 20436   000C1A  B4D8               	btfsc	status,2,c
 20437   000C1C  EF12  F006         	goto	i2u596_41
 20438   000C20  EF14  F006         	goto	i2u596_40
 20439   000C24                     i2u596_41:
 20440   000C24  EF1D  F006         	goto	i2l5924
 20441   000C28                     i2u596_40:
 20442   000C28                     
 20443                           ; BSR set to: 0
 20444                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 621:    dbuf[0] =
      +                           sign;
 20445   000C28  C082  F200         	movff	i2efgtoa@sign,_dbuf
 20446   000C2C                     
 20447                           ; BSR set to: 0
 20448                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 622:    w--;
 20449   000C2C  0772               	decf	i2efgtoa@w& (0+255),f,b
 20450   000C2E  A0D8               	btfss	status,0,c
 20451   000C30  0773               	decf	(i2efgtoa@w+1)& (0+255),f,b
 20452   000C32                     
 20453                           ; BSR set to: 0
 20454                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 623:    n = 1;
 20455   000C32  0E00               	movlw	0
 20456   000C34  6F86               	movwf	(i2efgtoa@n+1)& (0+255),b
 20457   000C36  0E01               	movlw	1
 20458   000C38  6F85               	movwf	i2efgtoa@n& (0+255),b
 20459   000C3A                     i2l5924:
 20460                           
 20461                           ; BSR set to: 0
 20462                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 631:   {;C:\Progr
      +                          am Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 632:             strcpy(&d
      +                          buf[n], "inf");
 20463   000C3A  0E00               	movlw	low _dbuf
 20464   000C3C  2585               	addwf	i2efgtoa@n& (0+255),w,b
 20465   000C3E  6E01               	movwf	i2strcpy@dest^0,c
 20466   000C40  0E02               	movlw	high _dbuf
 20467   000C42  2186               	addwfc	(i2efgtoa@n+1)& (0+255),w,b
 20468   000C44  6E02               	movwf	(i2strcpy@dest+1)^0,c
 20469   000C46  0EF7               	movlw	low STR_20
 20470   000C48  6E03               	movwf	i2strcpy@src^0,c
 20471   000C4A  0EFF               	movlw	high STR_20
 20472   000C4C  6E04               	movwf	(i2strcpy@src+1)^0,c
 20473   000C4E  ECD4  F02F         	call	i2_strcpy	;wreg free
 20474   000C52                     i2l5926:
 20475                           
 20476                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 633:         };C:
      +                          \Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 634:         w -= ((
      +                          sizeof("inf")/sizeof("inf"[0]))-1);
 20477   000C52  0100               	movlb	0	; () banked
 20478   000C54  0EFD               	movlw	253
 20479   000C56  2772               	addwf	i2efgtoa@w& (0+255),f,b
 20480   000C58  0EFF               	movlw	255
 20481   000C5A  2373               	addwfc	(i2efgtoa@w+1)& (0+255),f,b
 20482   000C5C                     
 20483                           ; BSR set to: 0
 20484                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 635:         retu
      +                          rn (void) pad(fp, &dbuf[0], w);
 20485   000C5C  C055  F011         	movff	i2efgtoa@fp,i2pad@fp
 20486   000C60  C056  F012         	movff	i2efgtoa@fp+1,i2pad@fp+1
 20487   000C64  0E00               	movlw	low _dbuf
 20488   000C66  6E13               	movwf	i2pad@buf^0,c
 20489   000C68  0E02               	movlw	high _dbuf
 20490   000C6A  6E14               	movwf	(i2pad@buf+1)^0,c
 20491   000C6C  C072  F015         	movff	i2efgtoa@w,i2pad@p
 20492   000C70  C073  F016         	movff	i2efgtoa@w+1,i2pad@p+1
 20493   000C74  EC8D  F02C         	call	i2_pad	;wreg free
 20494   000C78  EF44  F00B         	goto	i2l1601
 20495   000C7C                     i2l5932:
 20496                           
 20497                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 637:     if (( __
      +                          fpclassifyf(g.f) == 0 )) {
 20498   000C7C  C087  F001         	movff	i2efgtoa@g,i2___fpclassifyf@x
 20499   000C80  C088  F002         	movff	i2efgtoa@g+1,i2___fpclassifyf@x+1
 20500   000C84  C089  F003         	movff	i2efgtoa@g+2,i2___fpclassifyf@x+2
 20501   000C88  C08A  F004         	movff	i2efgtoa@g+3,i2___fpclassifyf@x+3
 20502   000C8C  ECB1  F024         	call	i2___fpclassifyf	;wreg free
 20503   000C90  5001               	movf	?i2___fpclassifyf^0,w,c
 20504   000C92  1002               	iorwf	(?i2___fpclassifyf+1)^0,w,c
 20505   000C94  A4D8               	btfss	status,2,c
 20506   000C96  EF4F  F006         	goto	i2u597_41
 20507   000C9A  EF51  F006         	goto	i2u597_40
 20508   000C9E                     i2u597_41:
 20509   000C9E  EF71  F006         	goto	i2l5950
 20510   000CA2                     i2u597_40:
 20511   000CA2                     
 20512                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 638:   if (sign) 
      +                          {
 20513   000CA2  0100               	movlb	0	; () banked
 20514   000CA4  5182               	movf	i2efgtoa@sign& (0+255),w,b
 20515   000CA6  B4D8               	btfsc	status,2,c
 20516   000CA8  EF58  F006         	goto	i2u598_41
 20517   000CAC  EF5A  F006         	goto	i2u598_40
 20518   000CB0                     i2u598_41:
 20519   000CB0  EF63  F006         	goto	i2l5942
 20520   000CB4                     i2u598_40:
 20521   000CB4                     
 20522                           ; BSR set to: 0
 20523                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 639:    dbuf[0] =
      +                           sign;
 20524   000CB4  C082  F200         	movff	i2efgtoa@sign,_dbuf
 20525   000CB8                     
 20526                           ; BSR set to: 0
 20527                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 640:    w--;
 20528   000CB8  0772               	decf	i2efgtoa@w& (0+255),f,b
 20529   000CBA  A0D8               	btfss	status,0,c
 20530   000CBC  0773               	decf	(i2efgtoa@w+1)& (0+255),f,b
 20531   000CBE                     
 20532                           ; BSR set to: 0
 20533                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 641:    n = 1;
 20534   000CBE  0E00               	movlw	0
 20535   000CC0  6F86               	movwf	(i2efgtoa@n+1)& (0+255),b
 20536   000CC2  0E01               	movlw	1
 20537   000CC4  6F85               	movwf	i2efgtoa@n& (0+255),b
 20538   000CC6                     i2l5942:
 20539                           
 20540                           ; BSR set to: 0
 20541                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 649:   {;C:\Progr
      +                          am Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 650:             strcpy(&d
      +                          buf[n], "nan");
 20542   000CC6  0E00               	movlw	low _dbuf
 20543   000CC8  2585               	addwf	i2efgtoa@n& (0+255),w,b
 20544   000CCA  6E01               	movwf	i2strcpy@dest^0,c
 20545   000CCC  0E02               	movlw	high _dbuf
 20546   000CCE  2186               	addwfc	(i2efgtoa@n+1)& (0+255),w,b
 20547   000CD0  6E02               	movwf	(i2strcpy@dest+1)^0,c
 20548   000CD2  0EFB               	movlw	low STR_23
 20549   000CD4  6E03               	movwf	i2strcpy@src^0,c
 20550   000CD6  0EFF               	movlw	high STR_23
 20551   000CD8  6E04               	movwf	(i2strcpy@src+1)^0,c
 20552   000CDA  ECD4  F02F         	call	i2_strcpy	;wreg free
 20553   000CDE  EF29  F006         	goto	i2l5926
 20554   000CE2                     i2l5950:
 20555                           
 20556                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 657:     u.f = 1.
      +                          0;
 20557   000CE2  0E00               	movlw	0
 20558   000CE4  0100               	movlb	0	; () banked
 20559   000CE6  6F8B               	movwf	i2efgtoa@u& (0+255),b
 20560   000CE8  0E00               	movlw	0
 20561   000CEA  6F8C               	movwf	(i2efgtoa@u+1)& (0+255),b
 20562   000CEC  0E80               	movlw	128
 20563   000CEE  6F8D               	movwf	(i2efgtoa@u+2)& (0+255),b
 20564   000CF0  0E3F               	movlw	63
 20565   000CF2  6F8E               	movwf	(i2efgtoa@u+3)& (0+255),b
 20566                           
 20567                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 658:     e = 0;
 20568   000CF4  0E00               	movlw	0
 20569   000CF6  6F81               	movwf	(i2efgtoa@e+1)& (0+255),b
 20570   000CF8  0E00               	movlw	0
 20571   000CFA  6F80               	movwf	i2efgtoa@e& (0+255),b
 20572   000CFC                     
 20573                           ; BSR set to: 0
 20574                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 659:  if (!(g.f =
      +                          = 0.0)) {
 20575   000CFC  C087  F001         	movff	i2efgtoa@g,i2___fleq@ff1
 20576   000D00  C088  F002         	movff	i2efgtoa@g+1,i2___fleq@ff1+1
 20577   000D04  C089  F003         	movff	i2efgtoa@g+2,i2___fleq@ff1+2
 20578   000D08  C08A  F004         	movff	i2efgtoa@g+3,i2___fleq@ff1+3
 20579   000D0C  0E00               	movlw	0
 20580   000D0E  6E05               	movwf	i2___fleq@ff2^0,c
 20581   000D10  0E00               	movlw	0
 20582   000D12  6E06               	movwf	(i2___fleq@ff2+1)^0,c
 20583   000D14  0E00               	movlw	0
 20584   000D16  6E07               	movwf	(i2___fleq@ff2+2)^0,c
 20585   000D18  0E00               	movlw	0
 20586   000D1A  6E08               	movwf	(i2___fleq@ff2+3)^0,c
 20587   000D1C  ECAC  F02A         	call	i2___fleq	;wreg free
 20588   000D20  B0D8               	btfsc	status,0,c
 20589   000D22  EF95  F006         	goto	i2u599_41
 20590   000D26  EF97  F006         	goto	i2u599_40
 20591   000D2A                     i2u599_41:
 20592   000D2A  EF76  F007         	goto	i2l1604
 20593   000D2E                     i2u599_40:
 20594   000D2E  EFA4  F006         	goto	i2l5958
 20595   000D32                     i2l1606:
 20596                           
 20597                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 661:    u = ou;
 20598   000D32  C074  F08B         	movff	i2efgtoa@ou,i2efgtoa@u
 20599   000D36  C075  F08C         	movff	i2efgtoa@ou+1,i2efgtoa@u+1
 20600   000D3A  C076  F08D         	movff	i2efgtoa@ou+2,i2efgtoa@u+2
 20601   000D3E  C077  F08E         	movff	i2efgtoa@ou+3,i2efgtoa@u+3
 20602   000D42                     
 20603                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 662:    ++e;
 20604   000D42  0100               	movlb	0	; () banked
 20605   000D44  4B80               	infsnz	i2efgtoa@e& (0+255),f,b
 20606   000D46  2B81               	incf	(i2efgtoa@e+1)& (0+255),f,b
 20607   000D48                     i2l5958:
 20608                           
 20609                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 660:   while ((la
      +                          bs((g).u-((ou.f = u.f*10.0,ou)).u) <= 1) || g.f > ou.f) {
 20610   000D48  C08B  F00F         	movff	i2efgtoa@u,i2___flmul@b
 20611   000D4C  C08C  F010         	movff	i2efgtoa@u+1,i2___flmul@b+1
 20612   000D50  C08D  F011         	movff	i2efgtoa@u+2,i2___flmul@b+2
 20613   000D54  C08E  F012         	movff	i2efgtoa@u+3,i2___flmul@b+3
 20614   000D58  0E00               	movlw	0
 20615   000D5A  6E13               	movwf	i2___flmul@a^0,c
 20616   000D5C  0E00               	movlw	0
 20617   000D5E  6E14               	movwf	(i2___flmul@a+1)^0,c
 20618   000D60  0E20               	movlw	32
 20619   000D62  6E15               	movwf	(i2___flmul@a+2)^0,c
 20620   000D64  0E41               	movlw	65
 20621   000D66  6E16               	movwf	(i2___flmul@a+3)^0,c
 20622   000D68  EC22  F012         	call	i2___flmul	;wreg free
 20623   000D6C  C00F  F074         	movff	?i2___flmul,i2efgtoa@ou
 20624   000D70  C010  F075         	movff	?i2___flmul+1,i2efgtoa@ou+1
 20625   000D74  C011  F076         	movff	?i2___flmul+2,i2efgtoa@ou+2
 20626   000D78  C012  F077         	movff	?i2___flmul+3,i2efgtoa@ou+3
 20627   000D7C  0100               	movlb	0	; () banked
 20628   000D7E  5174               	movf	i2efgtoa@ou& (0+255),w,b
 20629   000D80  5D87               	subwf	i2efgtoa@g& (0+255),w,b
 20630   000D82  6E01               	movwf	i2labs@a^0,c
 20631   000D84  5175               	movf	(i2efgtoa@ou+1)& (0+255),w,b
 20632   000D86  5988               	subwfb	(i2efgtoa@g+1)& (0+255),w,b
 20633   000D88  6E02               	movwf	(i2labs@a+1)^0,c
 20634   000D8A  5176               	movf	(i2efgtoa@ou+2)& (0+255),w,b
 20635   000D8C  5989               	subwfb	(i2efgtoa@g+2)& (0+255),w,b
 20636   000D8E  6E03               	movwf	(i2labs@a+2)^0,c
 20637   000D90  5177               	movf	(i2efgtoa@ou+3)& (0+255),w,b
 20638   000D92  598A               	subwfb	(i2efgtoa@g+3)& (0+255),w,b
 20639   000D94  6E04               	movwf	(i2labs@a+3)^0,c
 20640   000D96  EC59  F02E         	call	i2_labs	;wreg free
 20641   000D9A  BE04               	btfsc	(?i2_labs+3)^0,7,c
 20642   000D9C  EFDB  F006         	goto	i2u600_41
 20643   000DA0  5004               	movf	(?i2_labs+3)^0,w,c
 20644   000DA2  1003               	iorwf	(?i2_labs+2)^0,w,c
 20645   000DA4  1002               	iorwf	(?i2_labs+1)^0,w,c
 20646   000DA6  E109               	bnz	i2u600_40
 20647   000DA8  0E02               	movlw	2
 20648   000DAA  5C01               	subwf	?i2_labs^0,w,c
 20649   000DAC  A0D8               	btfss	status,0,c
 20650   000DAE  EFDB  F006         	goto	i2u600_41
 20651   000DB2  EFDD  F006         	goto	i2u600_40
 20652   000DB6                     i2u600_41:
 20653   000DB6  EF99  F006         	goto	i2l1606
 20654   000DBA                     i2u600_40:
 20655   000DBA  C074  F028         	movff	i2efgtoa@ou,i2___flge@ff1
 20656   000DBE  C075  F029         	movff	i2efgtoa@ou+1,i2___flge@ff1+1
 20657   000DC2  C076  F02A         	movff	i2efgtoa@ou+2,i2___flge@ff1+2
 20658   000DC6  C077  F02B         	movff	i2efgtoa@ou+3,i2___flge@ff1+3
 20659   000DCA  C087  F02C         	movff	i2efgtoa@g,i2___flge@ff2
 20660   000DCE  C088  F02D         	movff	i2efgtoa@g+1,i2___flge@ff2+1
 20661   000DD2  C089  F02E         	movff	i2efgtoa@g+2,i2___flge@ff2+2
 20662   000DD6  C08A  F02F         	movff	i2efgtoa@g+3,i2___flge@ff2+3
 20663   000DDA  ECAF  F023         	call	i2___flge	;wreg free
 20664   000DDE  A0D8               	btfss	status,0,c
 20665   000DE0  EFF4  F006         	goto	i2u601_41
 20666   000DE4  EFF6  F006         	goto	i2u601_40
 20667   000DE8                     i2u601_41:
 20668   000DE8  EF99  F006         	goto	i2l1606
 20669   000DEC                     i2u601_40:
 20670   000DEC                     
 20671                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 664:   if ((labs(
      +                          (g).u-(u).u) <= 1)) {
 20672   000DEC  0100               	movlb	0	; () banked
 20673   000DEE  518B               	movf	i2efgtoa@u& (0+255),w,b
 20674   000DF0  5D87               	subwf	i2efgtoa@g& (0+255),w,b
 20675   000DF2  6E01               	movwf	i2labs@a^0,c
 20676   000DF4  518C               	movf	(i2efgtoa@u+1)& (0+255),w,b
 20677   000DF6  5988               	subwfb	(i2efgtoa@g+1)& (0+255),w,b
 20678   000DF8  6E02               	movwf	(i2labs@a+1)^0,c
 20679   000DFA  518D               	movf	(i2efgtoa@u+2)& (0+255),w,b
 20680   000DFC  5989               	subwfb	(i2efgtoa@g+2)& (0+255),w,b
 20681   000DFE  6E03               	movwf	(i2labs@a+2)^0,c
 20682   000E00  518E               	movf	(i2efgtoa@u+3)& (0+255),w,b
 20683   000E02  598A               	subwfb	(i2efgtoa@g+3)& (0+255),w,b
 20684   000E04  6E04               	movwf	(i2labs@a+3)^0,c
 20685   000E06  EC59  F02E         	call	i2_labs	;wreg free
 20686   000E0A  BE04               	btfsc	(?i2_labs+3)^0,7,c
 20687   000E0C  EF15  F007         	goto	i2u602_40
 20688   000E10  5004               	movf	(?i2_labs+3)^0,w,c
 20689   000E12  1003               	iorwf	(?i2_labs+2)^0,w,c
 20690   000E14  1002               	iorwf	(?i2_labs+1)^0,w,c
 20691   000E16  E107               	bnz	i2u602_41
 20692   000E18  0E02               	movlw	2
 20693   000E1A  5C01               	subwf	?i2_labs^0,w,c
 20694   000E1C  B0D8               	btfsc	status,0,c
 20695   000E1E  EF13  F007         	goto	i2u602_41
 20696   000E22  EF15  F007         	goto	i2u602_40
 20697   000E26                     i2u602_41:
 20698   000E26  EF5D  F007         	goto	i2l5976
 20699   000E2A                     i2u602_40:
 20700   000E2A                     i2l5966:
 20701                           
 20702                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 665:    g = u;
 20703   000E2A  C08B  F087         	movff	i2efgtoa@u,i2efgtoa@g
 20704   000E2E  C08C  F088         	movff	i2efgtoa@u+1,i2efgtoa@g+1
 20705   000E32  C08D  F089         	movff	i2efgtoa@u+2,i2efgtoa@g+2
 20706   000E36  C08E  F08A         	movff	i2efgtoa@u+3,i2efgtoa@g+3
 20707                           
 20708                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 666:   }
 20709   000E3A  EF76  F007         	goto	i2l1604
 20710   000E3E                     i2l5968:
 20711                           
 20712                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 669:     u.f = u.
      +                          f/10.0;
 20713   000E3E  C08B  F028         	movff	i2efgtoa@u,i2___fldiv@b
 20714   000E42  C08C  F029         	movff	i2efgtoa@u+1,i2___fldiv@b+1
 20715   000E46  C08D  F02A         	movff	i2efgtoa@u+2,i2___fldiv@b+2
 20716   000E4A  C08E  F02B         	movff	i2efgtoa@u+3,i2___fldiv@b+3
 20717   000E4E  0E00               	movlw	0
 20718   000E50  6E2C               	movwf	i2___fldiv@a^0,c
 20719   000E52  0E00               	movlw	0
 20720   000E54  6E2D               	movwf	(i2___fldiv@a+1)^0,c
 20721   000E56  0E20               	movlw	32
 20722   000E58  6E2E               	movwf	(i2___fldiv@a+2)^0,c
 20723   000E5A  0E41               	movlw	65
 20724   000E5C  6E2F               	movwf	(i2___fldiv@a+3)^0,c
 20725   000E5E  EC10  F016         	call	i2___fldiv	;wreg free
 20726   000E62  C028  F08B         	movff	?i2___fldiv,i2efgtoa@u
 20727   000E66  C029  F08C         	movff	?i2___fldiv+1,i2efgtoa@u+1
 20728   000E6A  C02A  F08D         	movff	?i2___fldiv+2,i2efgtoa@u+2
 20729   000E6E  C02B  F08E         	movff	?i2___fldiv+3,i2efgtoa@u+3
 20730   000E72                     
 20731                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 670:     --e;
 20732   000E72  0100               	movlb	0	; () banked
 20733   000E74  0780               	decf	i2efgtoa@e& (0+255),f,b
 20734   000E76  A0D8               	btfss	status,0,c
 20735   000E78  0781               	decf	(i2efgtoa@e+1)& (0+255),f,b
 20736   000E7A                     
 20737                           ; BSR set to: 0
 20738                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 671:     if ((lab
      +                          s((g).u-(u).u) <= 1)) {
 20739   000E7A  518B               	movf	i2efgtoa@u& (0+255),w,b
 20740   000E7C  5D87               	subwf	i2efgtoa@g& (0+255),w,b
 20741   000E7E  6E01               	movwf	i2labs@a^0,c
 20742   000E80  518C               	movf	(i2efgtoa@u+1)& (0+255),w,b
 20743   000E82  5988               	subwfb	(i2efgtoa@g+1)& (0+255),w,b
 20744   000E84  6E02               	movwf	(i2labs@a+1)^0,c
 20745   000E86  518D               	movf	(i2efgtoa@u+2)& (0+255),w,b
 20746   000E88  5989               	subwfb	(i2efgtoa@g+2)& (0+255),w,b
 20747   000E8A  6E03               	movwf	(i2labs@a+2)^0,c
 20748   000E8C  518E               	movf	(i2efgtoa@u+3)& (0+255),w,b
 20749   000E8E  598A               	subwfb	(i2efgtoa@g+3)& (0+255),w,b
 20750   000E90  6E04               	movwf	(i2labs@a+3)^0,c
 20751   000E92  EC59  F02E         	call	i2_labs	;wreg free
 20752   000E96  BE04               	btfsc	(?i2_labs+3)^0,7,c
 20753   000E98  EF5B  F007         	goto	i2u603_40
 20754   000E9C  5004               	movf	(?i2_labs+3)^0,w,c
 20755   000E9E  1003               	iorwf	(?i2_labs+2)^0,w,c
 20756   000EA0  1002               	iorwf	(?i2_labs+1)^0,w,c
 20757   000EA2  E107               	bnz	i2u603_41
 20758   000EA4  0E02               	movlw	2
 20759   000EA6  5C01               	subwf	?i2_labs^0,w,c
 20760   000EA8  B0D8               	btfsc	status,0,c
 20761   000EAA  EF59  F007         	goto	i2u603_41
 20762   000EAE  EF5B  F007         	goto	i2u603_40
 20763   000EB2                     i2u603_41:
 20764   000EB2  EF5D  F007         	goto	i2l5976
 20765   000EB6                     i2u603_40:
 20766   000EB6  EF15  F007         	goto	i2l5966
 20767   000EBA                     i2l5976:
 20768                           
 20769                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 668:    while (g.
      +                          f < u.f) {
 20770   000EBA  C087  F028         	movff	i2efgtoa@g,i2___flge@ff1
 20771   000EBE  C088  F029         	movff	i2efgtoa@g+1,i2___flge@ff1+1
 20772   000EC2  C089  F02A         	movff	i2efgtoa@g+2,i2___flge@ff1+2
 20773   000EC6  C08A  F02B         	movff	i2efgtoa@g+3,i2___flge@ff1+3
 20774   000ECA  C08B  F02C         	movff	i2efgtoa@u,i2___flge@ff2
 20775   000ECE  C08C  F02D         	movff	i2efgtoa@u+1,i2___flge@ff2+1
 20776   000ED2  C08D  F02E         	movff	i2efgtoa@u+2,i2___flge@ff2+2
 20777   000ED6  C08E  F02F         	movff	i2efgtoa@u+3,i2___flge@ff2+3
 20778   000EDA  ECAF  F023         	call	i2___flge	;wreg free
 20779   000EDE  A0D8               	btfss	status,0,c
 20780   000EE0  EF74  F007         	goto	i2u604_41
 20781   000EE4  EF76  F007         	goto	i2u604_40
 20782   000EE8                     i2u604_41:
 20783   000EE8  EF1F  F007         	goto	i2l5968
 20784   000EEC                     i2u604_40:
 20785   000EEC                     i2l1604:
 20786                           
 20787                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 683:  mode = c;
 20788   000EEC  C05B  F06A         	movff	i2efgtoa@c,i2efgtoa@mode
 20789                           
 20790                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 685:     nmode = 
      +                          mode;
 20791   000EF0  C06A  F071         	movff	i2efgtoa@mode,i2efgtoa@nmode
 20792   000EF4                     
 20793                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 695:  {;C:\Progra
      +                          m Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 696:         p = (prec < 0)
      +                           ? 6 : prec;
 20794   000EF4  0100               	movlb	0	; () banked
 20795   000EF6  BFE0               	btfsc	(_prec+1)& (0+255),7,b
 20796   000EF8  EF80  F007         	goto	i2u605_41
 20797   000EFC  EF82  F007         	goto	i2u605_40
 20798   000F00                     i2u605_41:
 20799   000F00  EF88  F007         	goto	i2l5982
 20800   000F04                     i2u605_40:
 20801   000F04                     
 20802                           ; BSR set to: 0
 20803   000F04  C0DF  F06F         	movff	_prec,i2efgtoa@p
 20804   000F08  C0E0  F070         	movff	_prec+1,i2efgtoa@p+1
 20805   000F0C  EF8C  F007         	goto	i2l5984
 20806   000F10                     i2l5982:
 20807                           
 20808                           ; BSR set to: 0
 20809   000F10  0E00               	movlw	0
 20810   000F12  6F70               	movwf	(i2efgtoa@p+1)& (0+255),b
 20811   000F14  0E06               	movlw	6
 20812   000F16  6F6F               	movwf	i2efgtoa@p& (0+255),b
 20813   000F18                     i2l5984:
 20814                           
 20815                           ; BSR set to: 0
 20816                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 697:     };C:\Pro
      +                          gram Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 711:     m = p;
 20817   000F18  C06F  F06D         	movff	i2efgtoa@p,i2efgtoa@m
 20818   000F1C  C070  F06E         	movff	i2efgtoa@p+1,i2efgtoa@m+1
 20819   000F20                     
 20820                           ; BSR set to: 0
 20821                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 715:  {;C:\Progra
      +                          m Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 716:         ++m;
 20822   000F20  4B6D               	infsnz	i2efgtoa@m& (0+255),f,b
 20823   000F22  2B6E               	incf	(i2efgtoa@m+1)& (0+255),f,b
 20824   000F24                     
 20825                           ; BSR set to: 0
 20826                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 717:     };C:\Pro
      +                          gram Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 721:     if (nmode == 'f
      +                          ') {
 20827   000F24  0E66               	movlw	102
 20828   000F26  1971               	xorwf	i2efgtoa@nmode& (0+255),w,b
 20829   000F28  A4D8               	btfss	status,2,c
 20830   000F2A  EF99  F007         	goto	i2u606_41
 20831   000F2E  EF9B  F007         	goto	i2u606_40
 20832   000F32                     i2u606_41:
 20833   000F32  EFBB  F007         	goto	i2l5998
 20834   000F36                     i2u606_40:
 20835   000F36                     
 20836                           ; BSR set to: 0
 20837                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 722:         if (
      +                          e < 0) {
 20838   000F36  BF81               	btfsc	(i2efgtoa@e+1)& (0+255),7,b
 20839   000F38  EFA2  F007         	goto	i2u607_40
 20840   000F3C  EFA0  F007         	goto	i2u607_41
 20841   000F40                     i2u607_41:
 20842   000F40  EFAE  F007         	goto	i2l5994
 20843   000F44                     i2u607_40:
 20844   000F44                     
 20845                           ; BSR set to: 0
 20846                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 723:             
      +                          u.f = 1.0;
 20847   000F44  0E00               	movlw	0
 20848   000F46  6F8B               	movwf	i2efgtoa@u& (0+255),b
 20849   000F48  0E00               	movlw	0
 20850   000F4A  6F8C               	movwf	(i2efgtoa@u+1)& (0+255),b
 20851   000F4C  0E80               	movlw	128
 20852   000F4E  6F8D               	movwf	(i2efgtoa@u+2)& (0+255),b
 20853   000F50  0E3F               	movlw	63
 20854   000F52  6F8E               	movwf	(i2efgtoa@u+3)& (0+255),b
 20855                           
 20856                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 724:             
      +                          e = 0;
 20857   000F54  0E00               	movlw	0
 20858   000F56  6F81               	movwf	(i2efgtoa@e+1)& (0+255),b
 20859   000F58  0E00               	movlw	0
 20860   000F5A  6F80               	movwf	i2efgtoa@e& (0+255),b
 20861   000F5C                     i2l5994:
 20862                           
 20863                           ; BSR set to: 0
 20864                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 726:         if (
      +                          !(mode == 'g')) {
 20865   000F5C  0E67               	movlw	103
 20866   000F5E  196A               	xorwf	i2efgtoa@mode& (0+255),w,b
 20867   000F60  B4D8               	btfsc	status,2,c
 20868   000F62  EFB5  F007         	goto	i2u608_41
 20869   000F66  EFB7  F007         	goto	i2u608_40
 20870   000F6A                     i2u608_41:
 20871   000F6A  EFBB  F007         	goto	i2l5998
 20872   000F6E                     i2u608_40:
 20873   000F6E                     
 20874                           ; BSR set to: 0
 20875                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 727:             
      +                          m += e;
 20876   000F6E  5180               	movf	i2efgtoa@e& (0+255),w,b
 20877   000F70  276D               	addwf	i2efgtoa@m& (0+255),f,b
 20878   000F72  5181               	movf	(i2efgtoa@e+1)& (0+255),w,b
 20879   000F74  236E               	addwfc	(i2efgtoa@m+1)& (0+255),f,b
 20880   000F76                     i2l5998:
 20881                           
 20882                           ; BSR set to: 0
 20883                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 733:     i = 0;
 20884   000F76  0E00               	movlw	0
 20885   000F78  6F84               	movwf	(i2efgtoa@i+1)& (0+255),b
 20886   000F7A  0E00               	movlw	0
 20887   000F7C  6F83               	movwf	i2efgtoa@i& (0+255),b
 20888   000F7E                     
 20889                           ; BSR set to: 0
 20890                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 734:     h = g.f;
 20891   000F7E  C087  F078         	movff	i2efgtoa@g,i2efgtoa@h
 20892   000F82  C088  F079         	movff	i2efgtoa@g+1,i2efgtoa@h+1
 20893   000F86  C089  F07A         	movff	i2efgtoa@g+2,i2efgtoa@h+2
 20894   000F8A  C08A  F07B         	movff	i2efgtoa@g+3,i2efgtoa@h+3
 20895   000F8E                     
 20896                           ; BSR set to: 0
 20897                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 735:     ou = u;
 20898   000F8E  C08B  F074         	movff	i2efgtoa@u,i2efgtoa@ou
 20899   000F92  C08C  F075         	movff	i2efgtoa@u+1,i2efgtoa@ou+1
 20900   000F96  C08D  F076         	movff	i2efgtoa@u+2,i2efgtoa@ou+2
 20901   000F9A  C08E  F077         	movff	i2efgtoa@u+3,i2efgtoa@ou+3
 20902                           
 20903                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 736:     while (i
      +                           < m) {
 20904   000F9E  EF4C  F008         	goto	i2l6012
 20905   000FA2                     i2l6004:
 20906                           
 20907                           ; BSR set to: 0
 20908                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 737:         l = 
      +                          floorf(h/u.f);
 20909   000FA2  C078  F028         	movff	i2efgtoa@h,i2___fldiv@b
 20910   000FA6  C079  F029         	movff	i2efgtoa@h+1,i2___fldiv@b+1
 20911   000FAA  C07A  F02A         	movff	i2efgtoa@h+2,i2___fldiv@b+2
 20912   000FAE  C07B  F02B         	movff	i2efgtoa@h+3,i2___fldiv@b+3
 20913   000FB2  C08B  F02C         	movff	i2efgtoa@u,i2___fldiv@a
 20914   000FB6  C08C  F02D         	movff	i2efgtoa@u+1,i2___fldiv@a+1
 20915   000FBA  C08D  F02E         	movff	i2efgtoa@u+2,i2___fldiv@a+2
 20916   000FBE  C08E  F02F         	movff	i2efgtoa@u+3,i2___fldiv@a+3
 20917   000FC2  EC10  F016         	call	i2___fldiv	;wreg free
 20918   000FC6  C028  F041         	movff	?i2___fldiv,i2floorf@x
 20919   000FCA  C029  F042         	movff	?i2___fldiv+1,i2floorf@x+1
 20920   000FCE  C02A  F043         	movff	?i2___fldiv+2,i2floorf@x+2
 20921   000FD2  C02B  F044         	movff	?i2___fldiv+3,i2floorf@x+3
 20922   000FD6  ECC9  F01E         	call	i2_floorf	;wreg free
 20923   000FDA  C041  F07C         	movff	?i2_floorf,i2efgtoa@l
 20924   000FDE  C042  F07D         	movff	?i2_floorf+1,i2efgtoa@l+1
 20925   000FE2  C043  F07E         	movff	?i2_floorf+2,i2efgtoa@l+2
 20926   000FE6  C044  F07F         	movff	?i2_floorf+3,i2efgtoa@l+3
 20927                           
 20928                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 738:         d = 
      +                          (int)l;
 20929   000FEA  C07C  F04B         	movff	i2efgtoa@l,i2___fltol@f1
 20930   000FEE  C07D  F04C         	movff	i2efgtoa@l+1,i2___fltol@f1+1
 20931   000FF2  C07E  F04D         	movff	i2efgtoa@l+2,i2___fltol@f1+2
 20932   000FF6  C07F  F04E         	movff	i2efgtoa@l+3,i2___fltol@f1+3
 20933   000FFA  EC2C  F023         	call	i2___fltol	;wreg free
 20934   000FFE  C04B  F06B         	movff	?i2___fltol,i2efgtoa@d
 20935   001002  C04C  F06C         	movff	?i2___fltol+1,i2efgtoa@d+1
 20936   001006                     
 20937                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 739:         h -=
      +                           l*u.f;
 20938   001006  C078  F028         	movff	i2efgtoa@h,i2___flsub@b
 20939   00100A  C079  F029         	movff	i2efgtoa@h+1,i2___flsub@b+1
 20940   00100E  C07A  F02A         	movff	i2efgtoa@h+2,i2___flsub@b+2
 20941   001012  C07B  F02B         	movff	i2efgtoa@h+3,i2___flsub@b+3
 20942   001016  C07C  F013         	movff	i2efgtoa@l,i2___flmul@a
 20943   00101A  C07D  F014         	movff	i2efgtoa@l+1,i2___flmul@a+1
 20944   00101E  C07E  F015         	movff	i2efgtoa@l+2,i2___flmul@a+2
 20945   001022  C07F  F016         	movff	i2efgtoa@l+3,i2___flmul@a+3
 20946   001026  C08B  F00F         	movff	i2efgtoa@u,i2___flmul@b
 20947   00102A  C08C  F010         	movff	i2efgtoa@u+1,i2___flmul@b+1
 20948   00102E  C08D  F011         	movff	i2efgtoa@u+2,i2___flmul@b+2
 20949   001032  C08E  F012         	movff	i2efgtoa@u+3,i2___flmul@b+3
 20950   001036  EC22  F012         	call	i2___flmul	;wreg free
 20951   00103A  C00F  F02C         	movff	?i2___flmul,i2___flsub@a
 20952   00103E  C010  F02D         	movff	?i2___flmul+1,i2___flsub@a+1
 20953   001042  C011  F02E         	movff	?i2___flmul+2,i2___flsub@a+2
 20954   001046  C012  F02F         	movff	?i2___flmul+3,i2___flsub@a+3
 20955   00104A  ECB1  F02F         	call	i2___flsub	;wreg free
 20956   00104E  C028  F078         	movff	?i2___flsub,i2efgtoa@h
 20957   001052  C029  F079         	movff	?i2___flsub+1,i2efgtoa@h+1
 20958   001056  C02A  F07A         	movff	?i2___flsub+2,i2efgtoa@h+2
 20959   00105A  C02B  F07B         	movff	?i2___flsub+3,i2efgtoa@h+3
 20960   00105E                     
 20961                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 740:         u.f 
      +                          = u.f/10.0;
 20962   00105E  C08B  F028         	movff	i2efgtoa@u,i2___fldiv@b
 20963   001062  C08C  F029         	movff	i2efgtoa@u+1,i2___fldiv@b+1
 20964   001066  C08D  F02A         	movff	i2efgtoa@u+2,i2___fldiv@b+2
 20965   00106A  C08E  F02B         	movff	i2efgtoa@u+3,i2___fldiv@b+3
 20966   00106E  0E00               	movlw	0
 20967   001070  6E2C               	movwf	i2___fldiv@a^0,c
 20968   001072  0E00               	movlw	0
 20969   001074  6E2D               	movwf	(i2___fldiv@a+1)^0,c
 20970   001076  0E20               	movlw	32
 20971   001078  6E2E               	movwf	(i2___fldiv@a+2)^0,c
 20972   00107A  0E41               	movlw	65
 20973   00107C  6E2F               	movwf	(i2___fldiv@a+3)^0,c
 20974   00107E  EC10  F016         	call	i2___fldiv	;wreg free
 20975   001082  C028  F08B         	movff	?i2___fldiv,i2efgtoa@u
 20976   001086  C029  F08C         	movff	?i2___fldiv+1,i2efgtoa@u+1
 20977   00108A  C02A  F08D         	movff	?i2___fldiv+2,i2efgtoa@u+2
 20978   00108E  C02B  F08E         	movff	?i2___fldiv+3,i2efgtoa@u+3
 20979   001092                     
 20980                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 741:         ++i;
 20981   001092  0100               	movlb	0	; () banked
 20982   001094  4B83               	infsnz	i2efgtoa@i& (0+255),f,b
 20983   001096  2B84               	incf	(i2efgtoa@i+1)& (0+255),f,b
 20984   001098                     i2l6012:
 20985                           
 20986                           ; BSR set to: 0
 20987                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 736:     while (i
      +                           < m) {
 20988   001098  516D               	movf	i2efgtoa@m& (0+255),w,b
 20989   00109A  5D83               	subwf	i2efgtoa@i& (0+255),w,b
 20990   00109C  5184               	movf	(i2efgtoa@i+1)& (0+255),w,b
 20991   00109E  0A80               	xorlw	128
 20992   0010A0  6E5C               	movwf	??i2_efgtoa^0,c
 20993   0010A2  516E               	movf	(i2efgtoa@m+1)& (0+255),w,b
 20994   0010A4  0A80               	xorlw	128
 20995   0010A6  585C               	subwfb	??i2_efgtoa^0,w,c
 20996   0010A8  A0D8               	btfss	status,0,c
 20997   0010AA  EF59  F008         	goto	i2u609_41
 20998   0010AE  EF5B  F008         	goto	i2u609_40
 20999   0010B2                     i2u609_41:
 21000   0010B2  EFD1  F007         	goto	i2l6004
 21001   0010B6                     i2u609_40:
 21002   0010B6                     
 21003                           ; BSR set to: 0
 21004                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 745:     l = u.f*
      +                          5.0;
 21005   0010B6  C08B  F00F         	movff	i2efgtoa@u,i2___flmul@b
 21006   0010BA  C08C  F010         	movff	i2efgtoa@u+1,i2___flmul@b+1
 21007   0010BE  C08D  F011         	movff	i2efgtoa@u+2,i2___flmul@b+2
 21008   0010C2  C08E  F012         	movff	i2efgtoa@u+3,i2___flmul@b+3
 21009   0010C6  0E00               	movlw	0
 21010   0010C8  6E13               	movwf	i2___flmul@a^0,c
 21011   0010CA  0E00               	movlw	0
 21012   0010CC  6E14               	movwf	(i2___flmul@a+1)^0,c
 21013   0010CE  0EA0               	movlw	160
 21014   0010D0  6E15               	movwf	(i2___flmul@a+2)^0,c
 21015   0010D2  0E40               	movlw	64
 21016   0010D4  6E16               	movwf	(i2___flmul@a+3)^0,c
 21017   0010D6  EC22  F012         	call	i2___flmul	;wreg free
 21018   0010DA  C00F  F07C         	movff	?i2___flmul,i2efgtoa@l
 21019   0010DE  C010  F07D         	movff	?i2___flmul+1,i2efgtoa@l+1
 21020   0010E2  C011  F07E         	movff	?i2___flmul+2,i2efgtoa@l+2
 21021   0010E6  C012  F07F         	movff	?i2___flmul+3,i2efgtoa@l+3
 21022   0010EA                     
 21023                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 746:     if (h < 
      +                          l) {
 21024   0010EA  C078  F028         	movff	i2efgtoa@h,i2___flge@ff1
 21025   0010EE  C079  F029         	movff	i2efgtoa@h+1,i2___flge@ff1+1
 21026   0010F2  C07A  F02A         	movff	i2efgtoa@h+2,i2___flge@ff1+2
 21027   0010F6  C07B  F02B         	movff	i2efgtoa@h+3,i2___flge@ff1+3
 21028   0010FA  C07C  F02C         	movff	i2efgtoa@l,i2___flge@ff2
 21029   0010FE  C07D  F02D         	movff	i2efgtoa@l+1,i2___flge@ff2+1
 21030   001102  C07E  F02E         	movff	i2efgtoa@l+2,i2___flge@ff2+2
 21031   001106  C07F  F02F         	movff	i2efgtoa@l+3,i2___flge@ff2+3
 21032   00110A  ECAF  F023         	call	i2___flge	;wreg free
 21033   00110E  B0D8               	btfsc	status,0,c
 21034   001110  EF8C  F008         	goto	i2u610_41
 21035   001114  EF8E  F008         	goto	i2u610_40
 21036   001118                     i2u610_41:
 21037   001118  EF99  F008         	goto	i2l6020
 21038   00111C                     i2u610_40:
 21039   00111C                     
 21040                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 747:         l = 
      +                          0.0;
 21041   00111C  0E00               	movlw	0
 21042   00111E  0100               	movlb	0	; () banked
 21043   001120  6F7C               	movwf	i2efgtoa@l& (0+255),b
 21044   001122  0E00               	movlw	0
 21045   001124  6F7D               	movwf	(i2efgtoa@l+1)& (0+255),b
 21046   001126  0E00               	movlw	0
 21047   001128  6F7E               	movwf	(i2efgtoa@l+2)& (0+255),b
 21048   00112A  0E00               	movlw	0
 21049   00112C  6F7F               	movwf	(i2efgtoa@l+3)& (0+255),b
 21050                           
 21051                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 748:     } else {
 21052   00112E  EFC2  F008         	goto	i2l6026
 21053   001132                     i2l6020:
 21054                           
 21055                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 750:         if (
      +                          (h == l) && !(d % 2)) {
 21056   001132  C078  F001         	movff	i2efgtoa@h,i2___fleq@ff1
 21057   001136  C079  F002         	movff	i2efgtoa@h+1,i2___fleq@ff1+1
 21058   00113A  C07A  F003         	movff	i2efgtoa@h+2,i2___fleq@ff1+2
 21059   00113E  C07B  F004         	movff	i2efgtoa@h+3,i2___fleq@ff1+3
 21060   001142  C07C  F005         	movff	i2efgtoa@l,i2___fleq@ff2
 21061   001146  C07D  F006         	movff	i2efgtoa@l+1,i2___fleq@ff2+1
 21062   00114A  C07E  F007         	movff	i2efgtoa@l+2,i2___fleq@ff2+2
 21063   00114E  C07F  F008         	movff	i2efgtoa@l+3,i2___fleq@ff2+3
 21064   001152  ECAC  F02A         	call	i2___fleq	;wreg free
 21065   001156  A0D8               	btfss	status,0,c
 21066   001158  EFB0  F008         	goto	i2u611_41
 21067   00115C  EFB2  F008         	goto	i2u611_40
 21068   001160                     i2u611_41:
 21069   001160  EFC2  F008         	goto	i2l6026
 21070   001164                     i2u611_40:
 21071   001164  0100               	movlb	0	; () banked
 21072   001166  B16B               	btfsc	i2efgtoa@d& (0+255),0,b
 21073   001168  EFB8  F008         	goto	i2u612_41
 21074   00116C  EFBA  F008         	goto	i2u612_40
 21075   001170                     i2u612_41:
 21076   001170  EFC2  F008         	goto	i2l6026
 21077   001174                     i2u612_40:
 21078   001174                     
 21079                           ; BSR set to: 0
 21080                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 751:             
      +                          l = 0.0;
 21081   001174  0E00               	movlw	0
 21082   001176  6F7C               	movwf	i2efgtoa@l& (0+255),b
 21083   001178  0E00               	movlw	0
 21084   00117A  6F7D               	movwf	(i2efgtoa@l+1)& (0+255),b
 21085   00117C  0E00               	movlw	0
 21086   00117E  6F7E               	movwf	(i2efgtoa@l+2)& (0+255),b
 21087   001180  0E00               	movlw	0
 21088   001182  6F7F               	movwf	(i2efgtoa@l+3)& (0+255),b
 21089   001184                     i2l6026:
 21090                           
 21091                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 756:     h = g.f 
      +                          + l;
 21092   001184  C087  F001         	movff	i2efgtoa@g,i2___fladd@b
 21093   001188  C088  F002         	movff	i2efgtoa@g+1,i2___fladd@b+1
 21094   00118C  C089  F003         	movff	i2efgtoa@g+2,i2___fladd@b+2
 21095   001190  C08A  F004         	movff	i2efgtoa@g+3,i2___fladd@b+3
 21096   001194  C07C  F005         	movff	i2efgtoa@l,i2___fladd@a
 21097   001198  C07D  F006         	movff	i2efgtoa@l+1,i2___fladd@a+1
 21098   00119C  C07E  F007         	movff	i2efgtoa@l+2,i2___fladd@a+2
 21099   0011A0  C07F  F008         	movff	i2efgtoa@l+3,i2___fladd@a+3
 21100   0011A4  ECA1  F00D         	call	i2___fladd	;wreg free
 21101   0011A8  C001  F078         	movff	?i2___fladd,i2efgtoa@h
 21102   0011AC  C002  F079         	movff	?i2___fladd+1,i2efgtoa@h+1
 21103   0011B0  C003  F07A         	movff	?i2___fladd+2,i2efgtoa@h+2
 21104   0011B4  C004  F07B         	movff	?i2___fladd+3,i2efgtoa@h+3
 21105   0011B8                     
 21106                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 758:  if (h >= (o
      +                          u.f*10.0)) {
 21107   0011B8  C078  F028         	movff	i2efgtoa@h,i2___flge@ff1
 21108   0011BC  C079  F029         	movff	i2efgtoa@h+1,i2___flge@ff1+1
 21109   0011C0  C07A  F02A         	movff	i2efgtoa@h+2,i2___flge@ff1+2
 21110   0011C4  C07B  F02B         	movff	i2efgtoa@h+3,i2___flge@ff1+3
 21111   0011C8  0E00               	movlw	0
 21112   0011CA  6E13               	movwf	i2___flmul@a^0,c
 21113   0011CC  0E00               	movlw	0
 21114   0011CE  6E14               	movwf	(i2___flmul@a+1)^0,c
 21115   0011D0  0E20               	movlw	32
 21116   0011D2  6E15               	movwf	(i2___flmul@a+2)^0,c
 21117   0011D4  0E41               	movlw	65
 21118   0011D6  6E16               	movwf	(i2___flmul@a+3)^0,c
 21119   0011D8  C074  F00F         	movff	i2efgtoa@ou,i2___flmul@b
 21120   0011DC  C075  F010         	movff	i2efgtoa@ou+1,i2___flmul@b+1
 21121   0011E0  C076  F011         	movff	i2efgtoa@ou+2,i2___flmul@b+2
 21122   0011E4  C077  F012         	movff	i2efgtoa@ou+3,i2___flmul@b+3
 21123   0011E8  EC22  F012         	call	i2___flmul	;wreg free
 21124   0011EC  C00F  F02C         	movff	?i2___flmul,i2___flge@ff2
 21125   0011F0  C010  F02D         	movff	?i2___flmul+1,i2___flge@ff2+1
 21126   0011F4  C011  F02E         	movff	?i2___flmul+2,i2___flge@ff2+2
 21127   0011F8  C012  F02F         	movff	?i2___flmul+3,i2___flge@ff2+3
 21128   0011FC  ECAF  F023         	call	i2___flge	;wreg free
 21129   001200  A0D8               	btfss	status,0,c
 21130   001202  EF05  F009         	goto	i2u613_41
 21131   001206  EF07  F009         	goto	i2u613_40
 21132   00120A                     i2u613_41:
 21133   00120A  EF30  F009         	goto	i2l6038
 21134   00120E                     i2u613_40:
 21135   00120E                     
 21136                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 759:   e++;
 21137   00120E  0100               	movlb	0	; () banked
 21138   001210  4B80               	infsnz	i2efgtoa@e& (0+255),f,b
 21139   001212  2B81               	incf	(i2efgtoa@e+1)& (0+255),f,b
 21140   001214                     
 21141                           ; BSR set to: 0
 21142                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 760:   ou.f *= 10
      +                          .0;
 21143   001214  C074  F00F         	movff	i2efgtoa@ou,i2___flmul@b
 21144   001218  C075  F010         	movff	i2efgtoa@ou+1,i2___flmul@b+1
 21145   00121C  C076  F011         	movff	i2efgtoa@ou+2,i2___flmul@b+2
 21146   001220  C077  F012         	movff	i2efgtoa@ou+3,i2___flmul@b+3
 21147   001224  0E00               	movlw	0
 21148   001226  6E13               	movwf	i2___flmul@a^0,c
 21149   001228  0E00               	movlw	0
 21150   00122A  6E14               	movwf	(i2___flmul@a+1)^0,c
 21151   00122C  0E20               	movlw	32
 21152   00122E  6E15               	movwf	(i2___flmul@a+2)^0,c
 21153   001230  0E41               	movlw	65
 21154   001232  6E16               	movwf	(i2___flmul@a+3)^0,c
 21155   001234  EC22  F012         	call	i2___flmul	;wreg free
 21156   001238  C00F  F074         	movff	?i2___flmul,i2efgtoa@ou
 21157   00123C  C010  F075         	movff	?i2___flmul+1,i2efgtoa@ou+1
 21158   001240  C011  F076         	movff	?i2___flmul+2,i2efgtoa@ou+2
 21159   001244  C012  F077         	movff	?i2___flmul+3,i2efgtoa@ou+3
 21160   001248                     
 21161                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 762:   if (nmode 
      +                          == 'f') {
 21162   001248  0E66               	movlw	102
 21163   00124A  0100               	movlb	0	; () banked
 21164   00124C  1971               	xorwf	i2efgtoa@nmode& (0+255),w,b
 21165   00124E  A4D8               	btfss	status,2,c
 21166   001250  EF2C  F009         	goto	i2u614_41
 21167   001254  EF2E  F009         	goto	i2u614_40
 21168   001258                     i2u614_41:
 21169   001258  EF30  F009         	goto	i2l6038
 21170   00125C                     i2u614_40:
 21171   00125C                     
 21172                           ; BSR set to: 0
 21173                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 764:    m++;
 21174   00125C  4B6D               	infsnz	i2efgtoa@m& (0+255),f,b
 21175   00125E  2B6E               	incf	(i2efgtoa@m+1)& (0+255),f,b
 21176   001260                     i2l6038:
 21177                           
 21178                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 770:     u = ou;
 21179   001260  C074  F08B         	movff	i2efgtoa@ou,i2efgtoa@u
 21180   001264  C075  F08C         	movff	i2efgtoa@ou+1,i2efgtoa@u+1
 21181   001268  C076  F08D         	movff	i2efgtoa@ou+2,i2efgtoa@u+2
 21182   00126C  C077  F08E         	movff	i2efgtoa@ou+3,i2efgtoa@u+3
 21183   001270                     
 21184                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 772:     ne = (nm
      +                          ode == 'e') ? 0 : e;
 21185   001270  0E65               	movlw	101
 21186   001272  0100               	movlb	0	; () banked
 21187   001274  1971               	xorwf	i2efgtoa@nmode& (0+255),w,b
 21188   001276  B4D8               	btfsc	status,2,c
 21189   001278  EF40  F009         	goto	i2u615_41
 21190   00127C  EF42  F009         	goto	i2u615_40
 21191   001280                     i2u615_41:
 21192   001280  EF48  F009         	goto	i2l6044
 21193   001284                     i2u615_40:
 21194   001284                     
 21195                           ; BSR set to: 0
 21196   001284  C080  F066         	movff	i2efgtoa@e,i2efgtoa@ne
 21197   001288  C081  F067         	movff	i2efgtoa@e+1,i2efgtoa@ne+1
 21198   00128C  EF4C  F009         	goto	i2l6046
 21199   001290                     i2l6044:
 21200                           
 21201                           ; BSR set to: 0
 21202   001290  0E00               	movlw	0
 21203   001292  6F67               	movwf	(i2efgtoa@ne+1)& (0+255),b
 21204   001294  0E00               	movlw	0
 21205   001296  6F66               	movwf	i2efgtoa@ne& (0+255),b
 21206   001298                     i2l6046:
 21207                           
 21208                           ; BSR set to: 0
 21209                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 776:     pp = 0;
 21210   001298  6B68               	clrf	i2efgtoa@pp& (0+255),b
 21211                           
 21212                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 777:     t = 0;
 21213   00129A  0E00               	movlw	0
 21214   00129C  6F61               	movwf	(i2efgtoa@t+1)& (0+255),b
 21215   00129E  0E00               	movlw	0
 21216   0012A0  6F60               	movwf	i2efgtoa@t& (0+255),b
 21217                           
 21218                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 778:     i = 0;
 21219   0012A2  0E00               	movlw	0
 21220   0012A4  6F84               	movwf	(i2efgtoa@i+1)& (0+255),b
 21221   0012A6  0E00               	movlw	0
 21222   0012A8  6F83               	movwf	i2efgtoa@i& (0+255),b
 21223                           
 21224                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 779:     while ((
      +                          i < m) && (n < (80 - 5))) {
 21225   0012AA  EF3C  F00A         	goto	i2l6088
 21226   0012AE                     i2l6048:
 21227                           
 21228                           ; BSR set to: 0
 21229                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 780:         l = 
      +                          floorf(h/u.f);
 21230   0012AE  C078  F028         	movff	i2efgtoa@h,i2___fldiv@b
 21231   0012B2  C079  F029         	movff	i2efgtoa@h+1,i2___fldiv@b+1
 21232   0012B6  C07A  F02A         	movff	i2efgtoa@h+2,i2___fldiv@b+2
 21233   0012BA  C07B  F02B         	movff	i2efgtoa@h+3,i2___fldiv@b+3
 21234   0012BE  C08B  F02C         	movff	i2efgtoa@u,i2___fldiv@a
 21235   0012C2  C08C  F02D         	movff	i2efgtoa@u+1,i2___fldiv@a+1
 21236   0012C6  C08D  F02E         	movff	i2efgtoa@u+2,i2___fldiv@a+2
 21237   0012CA  C08E  F02F         	movff	i2efgtoa@u+3,i2___fldiv@a+3
 21238   0012CE  EC10  F016         	call	i2___fldiv	;wreg free
 21239   0012D2  C028  F041         	movff	?i2___fldiv,i2floorf@x
 21240   0012D6  C029  F042         	movff	?i2___fldiv+1,i2floorf@x+1
 21241   0012DA  C02A  F043         	movff	?i2___fldiv+2,i2floorf@x+2
 21242   0012DE  C02B  F044         	movff	?i2___fldiv+3,i2floorf@x+3
 21243   0012E2  ECC9  F01E         	call	i2_floorf	;wreg free
 21244   0012E6  C041  F07C         	movff	?i2_floorf,i2efgtoa@l
 21245   0012EA  C042  F07D         	movff	?i2_floorf+1,i2efgtoa@l+1
 21246   0012EE  C043  F07E         	movff	?i2_floorf+2,i2efgtoa@l+2
 21247   0012F2  C044  F07F         	movff	?i2_floorf+3,i2efgtoa@l+3
 21248                           
 21249                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 781:         d = 
      +                          (int)l > 9 ? 9 : (int)l;
 21250   0012F6  C07C  F04B         	movff	i2efgtoa@l,i2___fltol@f1
 21251   0012FA  C07D  F04C         	movff	i2efgtoa@l+1,i2___fltol@f1+1
 21252   0012FE  C07E  F04D         	movff	i2efgtoa@l+2,i2___fltol@f1+2
 21253   001302  C07F  F04E         	movff	i2efgtoa@l+3,i2___fltol@f1+3
 21254   001306  EC2C  F023         	call	i2___fltol	;wreg free
 21255   00130A  BE4C               	btfsc	(?i2___fltol+1)^0,7,c
 21256   00130C  EF93  F009         	goto	i2u616_40
 21257   001310  504C               	movf	(?i2___fltol+1)^0,w,c
 21258   001312  E107               	bnz	i2u616_41
 21259   001314  0E0A               	movlw	10
 21260   001316  5C4B               	subwf	?i2___fltol^0,w,c
 21261   001318  B0D8               	btfsc	status,0,c
 21262   00131A  EF91  F009         	goto	i2u616_41
 21263   00131E  EF93  F009         	goto	i2u616_40
 21264   001322                     i2u616_41:
 21265   001322  EFA3  F009         	goto	i2l6052
 21266   001326                     i2u616_40:
 21267   001326  C07C  F04B         	movff	i2efgtoa@l,i2___fltol@f1
 21268   00132A  C07D  F04C         	movff	i2efgtoa@l+1,i2___fltol@f1+1
 21269   00132E  C07E  F04D         	movff	i2efgtoa@l+2,i2___fltol@f1+2
 21270   001332  C07F  F04E         	movff	i2efgtoa@l+3,i2___fltol@f1+3
 21271   001336  EC2C  F023         	call	i2___fltol	;wreg free
 21272   00133A  C04B  F06B         	movff	?i2___fltol,i2efgtoa@d
 21273   00133E  C04C  F06C         	movff	?i2___fltol+1,i2efgtoa@d+1
 21274   001342  EFA8  F009         	goto	i2l1638
 21275   001346                     i2l6052:
 21276   001346  0E00               	movlw	0
 21277   001348  0100               	movlb	0	; () banked
 21278   00134A  6F6C               	movwf	(i2efgtoa@d+1)& (0+255),b
 21279   00134C  0E09               	movlw	9
 21280   00134E  6F6B               	movwf	i2efgtoa@d& (0+255),b
 21281   001350                     i2l1638:
 21282                           
 21283                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 792:   {;C:\Progr
      +                          am Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 793:             if (!pp &
      +                          & (ne < 0)) {
 21284   001350  0100               	movlb	0	; () banked
 21285   001352  5168               	movf	i2efgtoa@pp& (0+255),w,b
 21286   001354  A4D8               	btfss	status,2,c
 21287   001356  EFAF  F009         	goto	i2u617_41
 21288   00135A  EFB1  F009         	goto	i2u617_40
 21289   00135E                     i2u617_41:
 21290   00135E  EFD9  F009         	goto	i2l6072
 21291   001362                     i2u617_40:
 21292   001362                     
 21293                           ; BSR set to: 0
 21294   001362  BF67               	btfsc	(i2efgtoa@ne+1)& (0+255),7,b
 21295   001364  EFB8  F009         	goto	i2u618_40
 21296   001368  EFB6  F009         	goto	i2u618_41
 21297   00136C                     i2u618_41:
 21298   00136C  EFD9  F009         	goto	i2l6072
 21299   001370                     i2u618_40:
 21300   001370                     
 21301                           ; BSR set to: 0
 21302                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 794:             
      +                              dbuf[n++] = '.';
 21303   001370  0E00               	movlw	low _dbuf
 21304   001372  2585               	addwf	i2efgtoa@n& (0+255),w,b
 21305   001374  6ED9               	movwf	fsr2l,c
 21306   001376  0E02               	movlw	high _dbuf
 21307   001378  2186               	addwfc	(i2efgtoa@n+1)& (0+255),w,b
 21308   00137A  6EDA               	movwf	fsr2h,c
 21309   00137C  0E2E               	movlw	46
 21310   00137E  6EDF               	movwf	indf2,c
 21311   001380                     
 21312                           ; BSR set to: 0
 21313   001380  4B85               	infsnz	i2efgtoa@n& (0+255),f,b
 21314   001382  2B86               	incf	(i2efgtoa@n+1)& (0+255),f,b
 21315   001384                     
 21316                           ; BSR set to: 0
 21317                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 795:             
      +                              --w;
 21318   001384  0772               	decf	i2efgtoa@w& (0+255),f,b
 21319   001386  A0D8               	btfss	status,0,c
 21320   001388  0773               	decf	(i2efgtoa@w+1)& (0+255),f,b
 21321   00138A                     
 21322                           ; BSR set to: 0
 21323                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 796:             
      +                              pp = 1;
 21324   00138A  0E01               	movlw	1
 21325   00138C  6F68               	movwf	i2efgtoa@pp& (0+255),b
 21326   00138E  EFD9  F009         	goto	i2l6072
 21327   001392                     i2l6064:
 21328                           
 21329                           ; BSR set to: 0
 21330                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 799:             
      +                              dbuf[n++] = '0';
 21331   001392  0E00               	movlw	low _dbuf
 21332   001394  2585               	addwf	i2efgtoa@n& (0+255),w,b
 21333   001396  6ED9               	movwf	fsr2l,c
 21334   001398  0E02               	movlw	high _dbuf
 21335   00139A  2186               	addwfc	(i2efgtoa@n+1)& (0+255),w,b
 21336   00139C  6EDA               	movwf	fsr2h,c
 21337   00139E  0E30               	movlw	48
 21338   0013A0  6EDF               	movwf	indf2,c
 21339   0013A2                     
 21340                           ; BSR set to: 0
 21341   0013A2  4B85               	infsnz	i2efgtoa@n& (0+255),f,b
 21342   0013A4  2B86               	incf	(i2efgtoa@n+1)& (0+255),f,b
 21343   0013A6                     
 21344                           ; BSR set to: 0
 21345                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 800:             
      +                              --w;
 21346   0013A6  0772               	decf	i2efgtoa@w& (0+255),f,b
 21347   0013A8  A0D8               	btfss	status,0,c
 21348   0013AA  0773               	decf	(i2efgtoa@w+1)& (0+255),f,b
 21349   0013AC                     
 21350                           ; BSR set to: 0
 21351                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 801:             
      +                              --t;
 21352   0013AC  0760               	decf	i2efgtoa@t& (0+255),f,b
 21353   0013AE  A0D8               	btfss	status,0,c
 21354   0013B0  0761               	decf	(i2efgtoa@t+1)& (0+255),f,b
 21355   0013B2                     i2l6072:
 21356                           
 21357                           ; BSR set to: 0
 21358                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 798:             
      +                          while (t) {
 21359   0013B2  5160               	movf	i2efgtoa@t& (0+255),w,b
 21360   0013B4  1161               	iorwf	(i2efgtoa@t+1)& (0+255),w,b
 21361   0013B6  A4D8               	btfss	status,2,c
 21362   0013B8  EFE0  F009         	goto	i2u619_41
 21363   0013BC  EFE2  F009         	goto	i2u619_40
 21364   0013C0                     i2u619_41:
 21365   0013C0  EFC9  F009         	goto	i2l6064
 21366   0013C4                     i2u619_40:
 21367   0013C4                     
 21368                           ; BSR set to: 0
 21369                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 803:             
      +                          dbuf[n++] = (char)((int)'0' + d);
 21370   0013C4  0E00               	movlw	low _dbuf
 21371   0013C6  2585               	addwf	i2efgtoa@n& (0+255),w,b
 21372   0013C8  6ED9               	movwf	fsr2l,c
 21373   0013CA  0E02               	movlw	high _dbuf
 21374   0013CC  2186               	addwfc	(i2efgtoa@n+1)& (0+255),w,b
 21375   0013CE  6EDA               	movwf	fsr2h,c
 21376   0013D0  516B               	movf	i2efgtoa@d& (0+255),w,b
 21377   0013D2  0F30               	addlw	48
 21378   0013D4  6EDF               	movwf	indf2,c
 21379   0013D6                     
 21380                           ; BSR set to: 0
 21381   0013D6  4B85               	infsnz	i2efgtoa@n& (0+255),f,b
 21382   0013D8  2B86               	incf	(i2efgtoa@n+1)& (0+255),f,b
 21383   0013DA                     
 21384                           ; BSR set to: 0
 21385                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 804:             
      +                          --w;
 21386   0013DA  0772               	decf	i2efgtoa@w& (0+255),f,b
 21387   0013DC  A0D8               	btfss	status,0,c
 21388   0013DE  0773               	decf	(i2efgtoa@w+1)& (0+255),f,b
 21389   0013E0                     
 21390                           ; BSR set to: 0
 21391                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 805:         };C:
      +                          \Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 806:         h -= l*
      +                          u.f;
 21392   0013E0  C078  F028         	movff	i2efgtoa@h,i2___flsub@b
 21393   0013E4  C079  F029         	movff	i2efgtoa@h+1,i2___flsub@b+1
 21394   0013E8  C07A  F02A         	movff	i2efgtoa@h+2,i2___flsub@b+2
 21395   0013EC  C07B  F02B         	movff	i2efgtoa@h+3,i2___flsub@b+3
 21396   0013F0  C07C  F013         	movff	i2efgtoa@l,i2___flmul@a
 21397   0013F4  C07D  F014         	movff	i2efgtoa@l+1,i2___flmul@a+1
 21398   0013F8  C07E  F015         	movff	i2efgtoa@l+2,i2___flmul@a+2
 21399   0013FC  C07F  F016         	movff	i2efgtoa@l+3,i2___flmul@a+3
 21400   001400  C08B  F00F         	movff	i2efgtoa@u,i2___flmul@b
 21401   001404  C08C  F010         	movff	i2efgtoa@u+1,i2___flmul@b+1
 21402   001408  C08D  F011         	movff	i2efgtoa@u+2,i2___flmul@b+2
 21403   00140C  C08E  F012         	movff	i2efgtoa@u+3,i2___flmul@b+3
 21404   001410  EC22  F012         	call	i2___flmul	;wreg free
 21405   001414  C00F  F02C         	movff	?i2___flmul,i2___flsub@a
 21406   001418  C010  F02D         	movff	?i2___flmul+1,i2___flsub@a+1
 21407   00141C  C011  F02E         	movff	?i2___flmul+2,i2___flsub@a+2
 21408   001420  C012  F02F         	movff	?i2___flmul+3,i2___flsub@a+3
 21409   001424  ECB1  F02F         	call	i2___flsub	;wreg free
 21410   001428  C028  F078         	movff	?i2___flsub,i2efgtoa@h
 21411   00142C  C029  F079         	movff	?i2___flsub+1,i2efgtoa@h+1
 21412   001430  C02A  F07A         	movff	?i2___flsub+2,i2efgtoa@h+2
 21413   001434  C02B  F07B         	movff	?i2___flsub+3,i2efgtoa@h+3
 21414   001438                     
 21415                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 807:         u.f 
      +                          = u.f/10.0;
 21416   001438  C08B  F028         	movff	i2efgtoa@u,i2___fldiv@b
 21417   00143C  C08C  F029         	movff	i2efgtoa@u+1,i2___fldiv@b+1
 21418   001440  C08D  F02A         	movff	i2efgtoa@u+2,i2___fldiv@b+2
 21419   001444  C08E  F02B         	movff	i2efgtoa@u+3,i2___fldiv@b+3
 21420   001448  0E00               	movlw	0
 21421   00144A  6E2C               	movwf	i2___fldiv@a^0,c
 21422   00144C  0E00               	movlw	0
 21423   00144E  6E2D               	movwf	(i2___fldiv@a+1)^0,c
 21424   001450  0E20               	movlw	32
 21425   001452  6E2E               	movwf	(i2___fldiv@a+2)^0,c
 21426   001454  0E41               	movlw	65
 21427   001456  6E2F               	movwf	(i2___fldiv@a+3)^0,c
 21428   001458  EC10  F016         	call	i2___fldiv	;wreg free
 21429   00145C  C028  F08B         	movff	?i2___fldiv,i2efgtoa@u
 21430   001460  C029  F08C         	movff	?i2___fldiv+1,i2efgtoa@u+1
 21431   001464  C02A  F08D         	movff	?i2___fldiv+2,i2efgtoa@u+2
 21432   001468  C02B  F08E         	movff	?i2___fldiv+3,i2efgtoa@u+3
 21433   00146C                     
 21434                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 808:         --ne
      +                          ;
 21435   00146C  0100               	movlb	0	; () banked
 21436   00146E  0766               	decf	i2efgtoa@ne& (0+255),f,b
 21437   001470  A0D8               	btfss	status,0,c
 21438   001472  0767               	decf	(i2efgtoa@ne+1)& (0+255),f,b
 21439   001474                     
 21440                           ; BSR set to: 0
 21441                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 809:         ++i;
 21442   001474  4B83               	infsnz	i2efgtoa@i& (0+255),f,b
 21443   001476  2B84               	incf	(i2efgtoa@i+1)& (0+255),f,b
 21444   001478                     i2l6088:
 21445                           
 21446                           ; BSR set to: 0
 21447                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 779:     while ((
      +                          i < m) && (n < (80 - 5))) {
 21448   001478  516D               	movf	i2efgtoa@m& (0+255),w,b
 21449   00147A  5D83               	subwf	i2efgtoa@i& (0+255),w,b
 21450   00147C  5184               	movf	(i2efgtoa@i+1)& (0+255),w,b
 21451   00147E  0A80               	xorlw	128
 21452   001480  6E5C               	movwf	??i2_efgtoa^0,c
 21453   001482  516E               	movf	(i2efgtoa@m+1)& (0+255),w,b
 21454   001484  0A80               	xorlw	128
 21455   001486  585C               	subwfb	??i2_efgtoa^0,w,c
 21456   001488  B0D8               	btfsc	status,0,c
 21457   00148A  EF49  F00A         	goto	i2u620_41
 21458   00148E  EF4B  F00A         	goto	i2u620_40
 21459   001492                     i2u620_41:
 21460   001492  EF59  F00A         	goto	i2l6092
 21461   001496                     i2u620_40:
 21462   001496                     
 21463                           ; BSR set to: 0
 21464   001496  BF86               	btfsc	(i2efgtoa@n+1)& (0+255),7,b
 21465   001498  EF57  F00A         	goto	i2u621_41
 21466   00149C  5186               	movf	(i2efgtoa@n+1)& (0+255),w,b
 21467   00149E  E109               	bnz	i2u621_40
 21468   0014A0  0E4B               	movlw	75
 21469   0014A2  5D85               	subwf	i2efgtoa@n& (0+255),w,b
 21470   0014A4  A0D8               	btfss	status,0,c
 21471   0014A6  EF57  F00A         	goto	i2u621_41
 21472   0014AA  EF59  F00A         	goto	i2u621_40
 21473   0014AE                     i2u621_41:
 21474   0014AE  EF57  F009         	goto	i2l6048
 21475   0014B2                     i2u621_40:
 21476   0014B2                     i2l6092:
 21477                           
 21478                           ; BSR set to: 0
 21479                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 816:  i = sizeof(
      +                          dbuf) - 1;
 21480   0014B2  0E00               	movlw	0
 21481   0014B4  6F84               	movwf	(i2efgtoa@i+1)& (0+255),b
 21482   0014B6  0E4F               	movlw	79
 21483   0014B8  6F83               	movwf	i2efgtoa@i& (0+255),b
 21484   0014BA                     
 21485                           ; BSR set to: 0
 21486                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 817:     dbuf[i] 
      +                          = '\0';
 21487   0014BA  0E00               	movlw	low _dbuf
 21488   0014BC  2583               	addwf	i2efgtoa@i& (0+255),w,b
 21489   0014BE  6ED9               	movwf	fsr2l,c
 21490   0014C0  0E02               	movlw	high _dbuf
 21491   0014C2  2184               	addwfc	(i2efgtoa@i+1)& (0+255),w,b
 21492   0014C4  6EDA               	movwf	fsr2h,c
 21493   0014C6  6ADF               	clrf	indf2,c
 21494   0014C8                     
 21495                           ; BSR set to: 0
 21496                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 821:     if (nmod
      +                          e == 'e') {
 21497   0014C8  0E65               	movlw	101
 21498   0014CA  1971               	xorwf	i2efgtoa@nmode& (0+255),w,b
 21499   0014CC  A4D8               	btfss	status,2,c
 21500   0014CE  EF6B  F00A         	goto	i2u622_41
 21501   0014D2  EF6D  F00A         	goto	i2u622_40
 21502   0014D6                     i2u622_41:
 21503   0014D6  EFF1  F00A         	goto	i2l6140
 21504   0014DA                     i2u622_40:
 21505   0014DA                     
 21506                           ; BSR set to: 0
 21507                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 822:         esig
      +                          n = 0;
 21508   0014DA  6B69               	clrf	i2efgtoa@esign& (0+255),b
 21509   0014DC                     
 21510                           ; BSR set to: 0
 21511                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 823:         if (
      +                          e < 0) {
 21512   0014DC  BF81               	btfsc	(i2efgtoa@e+1)& (0+255),7,b
 21513   0014DE  EF75  F00A         	goto	i2u623_40
 21514   0014E2  EF73  F00A         	goto	i2u623_41
 21515   0014E6                     i2u623_41:
 21516   0014E6  EF7B  F00A         	goto	i2l6106
 21517   0014EA                     i2u623_40:
 21518   0014EA                     
 21519                           ; BSR set to: 0
 21520                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 824:             
      +                          esign = 1;
 21521   0014EA  0E01               	movlw	1
 21522   0014EC  6F69               	movwf	i2efgtoa@esign& (0+255),b
 21523   0014EE                     
 21524                           ; BSR set to: 0
 21525                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 825:             
      +                          e = -e;
 21526   0014EE  6D80               	negf	i2efgtoa@e& (0+255),b
 21527   0014F0  1F81               	comf	(i2efgtoa@e+1)& (0+255),f,b
 21528   0014F2  B0D8               	btfsc	status,0,c
 21529   0014F4  2B81               	incf	(i2efgtoa@e+1)& (0+255),f,b
 21530   0014F6                     i2l6106:
 21531                           
 21532                           ; BSR set to: 0
 21533                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 827:         p = 
      +                          2;
 21534   0014F6  0E00               	movlw	0
 21535   0014F8  6F70               	movwf	(i2efgtoa@p+1)& (0+255),b
 21536   0014FA  0E02               	movlw	2
 21537   0014FC  6F6F               	movwf	i2efgtoa@p& (0+255),b
 21538                           
 21539                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 828:         whil
      +                          e (e || (0 < p)) {
 21540   0014FE  EFAC  F00A         	goto	i2l6118
 21541   001502                     i2l6108:
 21542                           
 21543                           ; BSR set to: 0
 21544                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 829:             
      +                          --i;
 21545   001502  0783               	decf	i2efgtoa@i& (0+255),f,b
 21546   001504  A0D8               	btfss	status,0,c
 21547   001506  0784               	decf	(i2efgtoa@i+1)& (0+255),f,b
 21548   001508                     
 21549                           ; BSR set to: 0
 21550                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 830:             
      +                          dbuf[i] = '0' + (e % 10);
 21551   001508  0E00               	movlw	low _dbuf
 21552   00150A  2583               	addwf	i2efgtoa@i& (0+255),w,b
 21553   00150C  6ED9               	movwf	fsr2l,c
 21554   00150E  0E02               	movlw	high _dbuf
 21555   001510  2184               	addwfc	(i2efgtoa@i+1)& (0+255),w,b
 21556   001512  6EDA               	movwf	fsr2h,c
 21557   001514  C080  F001         	movff	i2efgtoa@e,i2___awmod@dividend
 21558   001518  C081  F002         	movff	i2efgtoa@e+1,i2___awmod@dividend+1
 21559   00151C  0E00               	movlw	0
 21560   00151E  6E04               	movwf	(i2___awmod@divisor+1)^0,c
 21561   001520  0E0A               	movlw	10
 21562   001522  6E03               	movwf	i2___awmod@divisor^0,c
 21563   001524  ECA9  F029         	call	i2___awmod	;wreg free
 21564   001528  5001               	movf	?i2___awmod^0,w,c
 21565   00152A  0F30               	addlw	48
 21566   00152C  6EDF               	movwf	indf2,c
 21567   00152E                     
 21568                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 831:             
      +                          e = e / 10;
 21569   00152E  C080  F001         	movff	i2efgtoa@e,i2___awdiv@dividend
 21570   001532  C081  F002         	movff	i2efgtoa@e+1,i2___awdiv@dividend+1
 21571   001536  0E00               	movlw	0
 21572   001538  6E04               	movwf	(i2___awdiv@divisor+1)^0,c
 21573   00153A  0E0A               	movlw	10
 21574   00153C  6E03               	movwf	i2___awdiv@divisor^0,c
 21575   00153E  EC93  F028         	call	i2___awdiv	;wreg free
 21576   001542  C001  F080         	movff	?i2___awdiv,i2efgtoa@e
 21577   001546  C002  F081         	movff	?i2___awdiv+1,i2efgtoa@e+1
 21578   00154A                     
 21579                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 832:             
      +                          --p;
 21580   00154A  0100               	movlb	0	; () banked
 21581   00154C  076F               	decf	i2efgtoa@p& (0+255),f,b
 21582   00154E  A0D8               	btfss	status,0,c
 21583   001550  0770               	decf	(i2efgtoa@p+1)& (0+255),f,b
 21584   001552                     
 21585                           ; BSR set to: 0
 21586                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 833:             
      +                          --w;
 21587   001552  0772               	decf	i2efgtoa@w& (0+255),f,b
 21588   001554  A0D8               	btfss	status,0,c
 21589   001556  0773               	decf	(i2efgtoa@w+1)& (0+255),f,b
 21590   001558                     i2l6118:
 21591                           
 21592                           ; BSR set to: 0
 21593                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 828:         whil
      +                          e (e || (0 < p)) {
 21594   001558  5180               	movf	i2efgtoa@e& (0+255),w,b
 21595   00155A  1181               	iorwf	(i2efgtoa@e+1)& (0+255),w,b
 21596   00155C  A4D8               	btfss	status,2,c
 21597   00155E  EFB3  F00A         	goto	i2u624_41
 21598   001562  EFB5  F00A         	goto	i2u624_40
 21599   001566                     i2u624_41:
 21600   001566  EF81  F00A         	goto	i2l6108
 21601   00156A                     i2u624_40:
 21602   00156A                     
 21603                           ; BSR set to: 0
 21604   00156A  BF70               	btfsc	(i2efgtoa@p+1)& (0+255),7,b
 21605   00156C  EFC2  F00A         	goto	i2u625_40
 21606   001570  5170               	movf	(i2efgtoa@p+1)& (0+255),w,b
 21607   001572  E106               	bnz	i2u625_41
 21608   001574  056F               	decf	i2efgtoa@p& (0+255),w,b
 21609   001576  B0D8               	btfsc	status,0,c
 21610   001578  EFC0  F00A         	goto	i2u625_41
 21611   00157C  EFC2  F00A         	goto	i2u625_40
 21612   001580                     i2u625_41:
 21613   001580  EF81  F00A         	goto	i2l6108
 21614   001584                     i2u625_40:
 21615   001584                     
 21616                           ; BSR set to: 0
 21617                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 835:         --i;
 21618   001584  0783               	decf	i2efgtoa@i& (0+255),f,b
 21619   001586  A0D8               	btfss	status,0,c
 21620   001588  0784               	decf	(i2efgtoa@i+1)& (0+255),f,b
 21621   00158A                     
 21622                           ; BSR set to: 0
 21623                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 836:         dbuf
      +                          [i] = esign ? '-' : '+';
 21624   00158A  5169               	movf	i2efgtoa@esign& (0+255),w,b
 21625   00158C  A4D8               	btfss	status,2,c
 21626   00158E  EFCB  F00A         	goto	i2u626_41
 21627   001592  EFCD  F00A         	goto	i2u626_40
 21628   001596                     i2u626_41:
 21629   001596  EFD3  F00A         	goto	i2l6128
 21630   00159A                     i2u626_40:
 21631   00159A                     
 21632                           ; BSR set to: 0
 21633   00159A  0E00               	movlw	0
 21634   00159C  6F65               	movwf	(i2_efgtoa$2332+1)& (0+255),b
 21635   00159E  0E2B               	movlw	43
 21636   0015A0  6F64               	movwf	i2_efgtoa$2332& (0+255),b
 21637   0015A2  EFD7  F00A         	goto	i2l6130
 21638   0015A6                     i2l6128:
 21639                           
 21640                           ; BSR set to: 0
 21641   0015A6  0E00               	movlw	0
 21642   0015A8  6F65               	movwf	(i2_efgtoa$2332+1)& (0+255),b
 21643   0015AA  0E2D               	movlw	45
 21644   0015AC  6F64               	movwf	i2_efgtoa$2332& (0+255),b
 21645   0015AE                     i2l6130:
 21646                           
 21647                           ; BSR set to: 0
 21648   0015AE  0E00               	movlw	low _dbuf
 21649   0015B0  2583               	addwf	i2efgtoa@i& (0+255),w,b
 21650   0015B2  6ED9               	movwf	fsr2l,c
 21651   0015B4  0E02               	movlw	high _dbuf
 21652   0015B6  2184               	addwfc	(i2efgtoa@i+1)& (0+255),w,b
 21653   0015B8  6EDA               	movwf	fsr2h,c
 21654   0015BA  0060  F193  FFDF   	movff	i2_efgtoa$2332,indf2
 21655   0015C0                     
 21656                           ; BSR set to: 0
 21657                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 837:         --w;
 21658   0015C0  0772               	decf	i2efgtoa@w& (0+255),f,b
 21659   0015C2  A0D8               	btfss	status,0,c
 21660   0015C4  0773               	decf	(i2efgtoa@w+1)& (0+255),f,b
 21661   0015C6                     
 21662                           ; BSR set to: 0
 21663                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 838:         --i;
 21664   0015C6  0783               	decf	i2efgtoa@i& (0+255),f,b
 21665   0015C8  A0D8               	btfss	status,0,c
 21666   0015CA  0784               	decf	(i2efgtoa@i+1)& (0+255),f,b
 21667   0015CC                     
 21668                           ; BSR set to: 0
 21669                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 842:   dbuf[i] = 
      +                          'e';
 21670   0015CC  0E00               	movlw	low _dbuf
 21671   0015CE  2583               	addwf	i2efgtoa@i& (0+255),w,b
 21672   0015D0  6ED9               	movwf	fsr2l,c
 21673   0015D2  0E02               	movlw	high _dbuf
 21674   0015D4  2184               	addwfc	(i2efgtoa@i+1)& (0+255),w,b
 21675   0015D6  6EDA               	movwf	fsr2h,c
 21676   0015D8  0E65               	movlw	101
 21677   0015DA  6EDF               	movwf	indf2,c
 21678   0015DC                     
 21679                           ; BSR set to: 0
 21680                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 844:         --w;
 21681   0015DC  0772               	decf	i2efgtoa@w& (0+255),f,b
 21682   0015DE  A0D8               	btfss	status,0,c
 21683   0015E0  0773               	decf	(i2efgtoa@w+1)& (0+255),f,b
 21684   0015E2                     i2l6140:
 21685                           
 21686                           ; BSR set to: 0
 21687                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 848:  memcpy(&dbu
      +                          f[i-n], &dbuf[0], (size_t)n);
 21688   0015E2  0E00               	movlw	low _dbuf
 21689   0015E4  6E5C               	movwf	??i2_efgtoa^0,c
 21690   0015E6  0E02               	movlw	high _dbuf
 21691   0015E8  6E5D               	movwf	(??i2_efgtoa+1)^0,c
 21692   0015EA  5185               	movf	i2efgtoa@n& (0+255),w,b
 21693   0015EC  5E5C               	subwf	??i2_efgtoa^0,f,c
 21694   0015EE  5186               	movf	(i2efgtoa@n+1)& (0+255),w,b
 21695   0015F0  5A5D               	subwfb	(??i2_efgtoa+1)^0,f,c
 21696   0015F2  5183               	movf	i2efgtoa@i& (0+255),w,b
 21697   0015F4  245C               	addwf	??i2_efgtoa^0,w,c
 21698   0015F6  6E01               	movwf	i2memcpy@d1^0,c
 21699   0015F8  5184               	movf	(i2efgtoa@i+1)& (0+255),w,b
 21700   0015FA  205D               	addwfc	(??i2_efgtoa+1)^0,w,c
 21701   0015FC  6E02               	movwf	(i2memcpy@d1+1)^0,c
 21702   0015FE  0E00               	movlw	low _dbuf
 21703   001600  6E03               	movwf	i2memcpy@s1^0,c
 21704   001602  0E02               	movlw	high _dbuf
 21705   001604  6E04               	movwf	(i2memcpy@s1+1)^0,c
 21706   001606  C085  F005         	movff	i2efgtoa@n,i2memcpy@n
 21707   00160A  C086  F006         	movff	i2efgtoa@n+1,i2memcpy@n+1
 21708   00160E  EC7E  F02D         	call	i2_memcpy	;wreg free
 21709   001612                     
 21710                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 849:  n = i-n;
 21711   001612  0100               	movlb	0	; () banked
 21712   001614  5185               	movf	i2efgtoa@n& (0+255),w,b
 21713   001616  5D83               	subwf	i2efgtoa@i& (0+255),w,b
 21714   001618  6F85               	movwf	i2efgtoa@n& (0+255),b
 21715   00161A  5186               	movf	(i2efgtoa@n+1)& (0+255),w,b
 21716   00161C  5984               	subwfb	(i2efgtoa@i+1)& (0+255),w,b
 21717   00161E  6F86               	movwf	(i2efgtoa@n+1)& (0+255),b
 21718   001620                     
 21719                           ; BSR set to: 0
 21720                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 850:  i = sign ==
      +                           0 ? 0 : 1;
 21721   001620  5182               	movf	i2efgtoa@sign& (0+255),w,b
 21722   001622  A4D8               	btfss	status,2,c
 21723   001624  EF16  F00B         	goto	i2u627_41
 21724   001628  EF19  F00B         	goto	i2u627_40
 21725   00162C                     i2u627_41:
 21726   00162C  0E01               	movlw	1
 21727   00162E  EF1A  F00B         	goto	i2u628_40
 21728   001632                     i2u627_40:
 21729   001632  0E00               	movlw	0
 21730   001634                     i2u628_40:
 21731   001634  6F83               	movwf	i2efgtoa@i& (0+255),b
 21732   001636  6B84               	clrf	(i2efgtoa@i+1)& (0+255),b
 21733   001638                     
 21734                           ; BSR set to: 0
 21735                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 861:  if (sign) {
 21736   001638  5182               	movf	i2efgtoa@sign& (0+255),w,b
 21737   00163A  B4D8               	btfsc	status,2,c
 21738   00163C  EF22  F00B         	goto	i2u629_41
 21739   001640  EF24  F00B         	goto	i2u629_40
 21740   001644                     i2u629_41:
 21741   001644  EF30  F00B         	goto	i2l6150
 21742   001648                     i2u629_40:
 21743   001648                     
 21744                           ; BSR set to: 0
 21745                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 862:   dbuf[--n] 
      +                          = sign;
 21746   001648  0785               	decf	i2efgtoa@n& (0+255),f,b
 21747   00164A  A0D8               	btfss	status,0,c
 21748   00164C  0786               	decf	(i2efgtoa@n+1)& (0+255),f,b
 21749   00164E  0E00               	movlw	low _dbuf
 21750   001650  2585               	addwf	i2efgtoa@n& (0+255),w,b
 21751   001652  6ED9               	movwf	fsr2l,c
 21752   001654  0E02               	movlw	high _dbuf
 21753   001656  2186               	addwfc	(i2efgtoa@n+1)& (0+255),w,b
 21754   001658  6EDA               	movwf	fsr2h,c
 21755   00165A  0060  F20B  FFDF   	movff	i2efgtoa@sign,indf2
 21756   001660                     i2l6150:
 21757                           
 21758                           ; BSR set to: 0
 21759                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 864:  w -= i;
 21760   001660  5183               	movf	i2efgtoa@i& (0+255),w,b
 21761   001662  5F72               	subwf	i2efgtoa@w& (0+255),f,b
 21762   001664  5184               	movf	(i2efgtoa@i+1)& (0+255),w,b
 21763   001666  5B73               	subwfb	(i2efgtoa@w+1)& (0+255),f,b
 21764   001668                     
 21765                           ; BSR set to: 0
 21766                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 867:     return (
      +                          void) pad(fp, &dbuf[n], w);
 21767   001668  C055  F011         	movff	i2efgtoa@fp,i2pad@fp
 21768   00166C  C056  F012         	movff	i2efgtoa@fp+1,i2pad@fp+1
 21769   001670  0E00               	movlw	low _dbuf
 21770   001672  2585               	addwf	i2efgtoa@n& (0+255),w,b
 21771   001674  6E13               	movwf	i2pad@buf^0,c
 21772   001676  0E02               	movlw	high _dbuf
 21773   001678  2186               	addwfc	(i2efgtoa@n+1)& (0+255),w,b
 21774   00167A  6E14               	movwf	(i2pad@buf+1)^0,c
 21775   00167C  C072  F015         	movff	i2efgtoa@w,i2pad@p
 21776   001680  C073  F016         	movff	i2efgtoa@w+1,i2pad@p+1
 21777   001684  EC8D  F02C         	call	i2_pad	;wreg free
 21778   001688                     i2l1601:
 21779   001688  0012               	return		;funcret
 21780   00168A                     __end_ofi2_efgtoa:
 21781                           	callstack 0
 21782                           
 21783 ;; *************** function i2_strcpy *****************
 21784 ;; Defined at:
 21785 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\strcpy.c"
 21786 ;; Parameters:    Size  Location     Type
 21787 ;;  dest            2    0[COMRAM] PTR unsigned char 
 21788 ;;		 -> dbuf(80), 
 21789 ;;  src             2    2[COMRAM] PTR const unsigned char 
 21790 ;;		 -> STR_23(4), STR_20(4), 
 21791 ;; Auto vars:     Size  Location     Type
 21792 ;;  d               2    4[COMRAM] PTR unsigned char 
 21793 ;;		 -> dbuf(80), 
 21794 ;; Return value:  Size  Location     Type
 21795 ;;                  2    0[COMRAM] PTR unsigned char 
 21796 ;; Registers used:
 21797 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 21798 ;; Tracked objects:
 21799 ;;		On entry : 0/0
 21800 ;;		On exit  : 0/0
 21801 ;;		Unchanged: 0/0
 21802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21803 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21804 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21805 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21806 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21807 ;;Total ram usage:        6 bytes
 21808 ;; Hardware stack levels used: 1
 21809 ;; This function calls:
 21810 ;;		Nothing
 21811 ;; This function is called by:
 21812 ;;		i2_efgtoa
 21813 ;; This function uses a non-reentrant model
 21814 ;;
 21815                           
 21816                           	psect	text80
 21817   005FA8                     __ptext80:
 21818                           	callstack 0
 21819   005FA8                     i2_strcpy:
 21820                           	callstack 12
 21821   005FA8  C001  F005         	movff	i2strcpy@dest,i2strcpy@d
 21822   005FAC  C002  F006         	movff	i2strcpy@dest+1,i2strcpy@d+1
 21823   005FB0                     i2l5858:
 21824   005FB0  0060  F00F  FFF6   	movff	i2strcpy@src,tblptrl
 21825   005FB6  0060  F013  FFF7   	movff	i2strcpy@src+1,tblptrh
 21826   005FBC  4A03               	infsnz	i2strcpy@src^0,f,c
 21827   005FBE  2A04               	incf	(i2strcpy@src+1)^0,f,c
 21828   005FC0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 21829   005FC0  6AF8               	clrf	tblptru,c
 21830   005FC2                     	endif
 21831   005FC2                     	if	0	;tblptru may be non-zero
 21832   005FC2                     	endif
 21833   005FC2  0060  F017  FFD9   	movff	i2strcpy@d,fsr2l
 21834   005FC8  0060  F01B  FFDA   	movff	i2strcpy@d+1,fsr2h
 21835   005FCE  4A05               	infsnz	i2strcpy@d^0,f,c
 21836   005FD0  2A06               	incf	(i2strcpy@d+1)^0,f,c
 21837   005FD2  0008               	tblrd		*
 21838   005FD4  006F FFD7 FFDF     	movff	tablat,indf2
 21839   005FDA  50DF               	movf	indf2,w,c
 21840   005FDC  A4D8               	btfss	status,2,c
 21841   005FDE  EFF3  F02F         	goto	i2u586_41
 21842   005FE2  EFF5  F02F         	goto	i2u586_40
 21843   005FE6                     i2u586_41:
 21844   005FE6  EFD8  F02F         	goto	i2l5858
 21845   005FEA                     i2u586_40:
 21846   005FEA  0012               	return		;funcret
 21847   005FEC                     __end_ofi2_strcpy:
 21848                           	callstack 0
 21849                           
 21850 ;; *************** function i2_pad *****************
 21851 ;; Defined at:
 21852 ;;		line 193 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
 21853 ;; Parameters:    Size  Location     Type
 21854 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
 21855 ;;		 -> i2sprintf@f(11), sprintf@f(11), 
 21856 ;;  buf             2   18[COMRAM] PTR unsigned char 
 21857 ;;		 -> dbuf(80), 
 21858 ;;  p               2   20[COMRAM] int 
 21859 ;; Auto vars:     Size  Location     Type
 21860 ;;  i               2   23[COMRAM] int 
 21861 ;; Return value:  Size  Location     Type
 21862 ;;                  1    wreg      void 
 21863 ;; Registers used:
 21864 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 21865 ;; Tracked objects:
 21866 ;;		On entry : 0/0
 21867 ;;		On exit  : 0/0
 21868 ;;		Unchanged: 0/0
 21869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21870 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21871 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21872 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21873 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21874 ;;Total ram usage:        9 bytes
 21875 ;; Hardware stack levels used: 1
 21876 ;; Hardware stack levels required when called: 3
 21877 ;; This function calls:
 21878 ;;		i2_fputc
 21879 ;;		i2_fputs
 21880 ;; This function is called by:
 21881 ;;		i2_efgtoa
 21882 ;; This function uses a non-reentrant model
 21883 ;;
 21884                           
 21885                           	psect	text81
 21886   00591A                     __ptext81:
 21887                           	callstack 0
 21888   00591A                     i2_pad:
 21889                           	callstack 9
 21890   00591A                     
 21891                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 193: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\com
      +                          mon\doprnt.c: 194: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.
      +                          c: 195:     int i;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c:
      +                           205:  if (p < 0) {
 21892   00591A  BE16               	btfsc	(i2pad@p+1)^0,7,c
 21893   00591C  EF94  F02C         	goto	i2u565_40
 21894   005920  EF92  F02C         	goto	i2u565_41
 21895   005924                     i2u565_41:
 21896   005924  EF98  F02C         	goto	i2l1586
 21897   005928                     i2u565_40:
 21898   005928                     
 21899                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 206:   p = 0;
 21900   005928  0E00               	movlw	0
 21901   00592A  6E16               	movwf	(i2pad@p+1)^0,c
 21902   00592C  0E00               	movlw	0
 21903   00592E  6E15               	movwf	i2pad@p^0,c
 21904   005930                     i2l1586:
 21905                           
 21906                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 208:     i = 0;
 21907   005930  0E00               	movlw	0
 21908   005932  6E19               	movwf	(i2pad@i+1)^0,c
 21909   005934  0E00               	movlw	0
 21910   005936  6E18               	movwf	i2pad@i^0,c
 21911                           
 21912                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
 21913   005938  EFAA  F02C         	goto	i2l5782
 21914   00593C                     i2l5778:
 21915                           
 21916                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 210:         fput
      +                          c(' ', fp);
 21917   00593C  0E00               	movlw	0
 21918   00593E  6E02               	movwf	(i2fputc@c+1)^0,c
 21919   005940  0E20               	movlw	32
 21920   005942  6E01               	movwf	i2fputc@c^0,c
 21921   005944  C011  F003         	movff	i2pad@fp,i2fputc@fp
 21922   005948  C012  F004         	movff	i2pad@fp+1,i2fputc@fp+1
 21923   00594C  EC00  F027         	call	i2_fputc	;wreg free
 21924   005950                     
 21925                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 211:         ++i;
 21926   005950  4A18               	infsnz	i2pad@i^0,f,c
 21927   005952  2A19               	incf	(i2pad@i+1)^0,f,c
 21928   005954                     i2l5782:
 21929                           
 21930                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
 21931   005954  5015               	movf	i2pad@p^0,w,c
 21932   005956  5C18               	subwf	i2pad@i^0,w,c
 21933   005958  5019               	movf	(i2pad@i+1)^0,w,c
 21934   00595A  0A80               	xorlw	128
 21935   00595C  6E17               	movwf	??i2_pad^0,c
 21936   00595E  5016               	movf	(i2pad@p+1)^0,w,c
 21937   005960  0A80               	xorlw	128
 21938   005962  5817               	subwfb	??i2_pad^0,w,c
 21939   005964  A0D8               	btfss	status,0,c
 21940   005966  EFB7  F02C         	goto	i2u566_41
 21941   00596A  EFB9  F02C         	goto	i2u566_40
 21942   00596E                     i2u566_41:
 21943   00596E  EF9E  F02C         	goto	i2l5778
 21944   005972                     i2u566_40:
 21945   005972                     
 21946                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 218:         fput
      +                          s((const char *)buf, fp);
 21947   005972  C013  F00A         	movff	i2pad@buf,i2fputs@s
 21948   005976  C014  F00B         	movff	i2pad@buf+1,i2fputs@s+1
 21949   00597A  C011  F00C         	movff	i2pad@fp,i2fputs@fp
 21950   00597E  C012  F00D         	movff	i2pad@fp+1,i2fputs@fp+1
 21951   005982  ECF6  F02F         	call	i2_fputs	;wreg free
 21952   005986  0012               	return		;funcret
 21953   005988                     __end_ofi2_pad:
 21954                           	callstack 0
 21955                           
 21956 ;; *************** function i2_fputs *****************
 21957 ;; Defined at:
 21958 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\nf_fputs.c"
 21959 ;; Parameters:    Size  Location     Type
 21960 ;;  s               2    9[COMRAM] PTR const unsigned char 
 21961 ;;		 -> dbuf(80), 
 21962 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
 21963 ;;		 -> i2sprintf@f(11), sprintf@f(11), 
 21964 ;; Auto vars:     Size  Location     Type
 21965 ;;  i               2   14[COMRAM] int 
 21966 ;;  c               1   13[COMRAM] unsigned char 
 21967 ;; Return value:  Size  Location     Type
 21968 ;;                  2    9[COMRAM] int 
 21969 ;; Registers used:
 21970 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 21971 ;; Tracked objects:
 21972 ;;		On entry : 0/0
 21973 ;;		On exit  : 0/0
 21974 ;;		Unchanged: 0/0
 21975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21976 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21977 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21978 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21979 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21980 ;;Total ram usage:        7 bytes
 21981 ;; Hardware stack levels used: 1
 21982 ;; Hardware stack levels required when called: 2
 21983 ;; This function calls:
 21984 ;;		i2_fputc
 21985 ;; This function is called by:
 21986 ;;		i2_pad
 21987 ;; This function uses a non-reentrant model
 21988 ;;
 21989                           
 21990                           	psect	text82
 21991   005FEC                     __ptext82:
 21992                           	callstack 0
 21993   005FEC                     i2_fputs:
 21994                           	callstack 9
 21995   005FEC  0E00               	movlw	0
 21996   005FEE  6E10               	movwf	(i2fputs@i+1)^0,c
 21997   005FF0  0E00               	movlw	0
 21998   005FF2  6E0F               	movwf	i2fputs@i^0,c
 21999   005FF4  EF07  F030         	goto	i2l5322
 22000   005FF8                     i2l5318:
 22001   005FF8  C00E  F001         	movff	i2fputs@c,i2fputc@c
 22002   005FFC  6A02               	clrf	(i2fputc@c+1)^0,c
 22003   005FFE  C00C  F003         	movff	i2fputs@fp,i2fputc@fp
 22004   006002  C00D  F004         	movff	i2fputs@fp+1,i2fputc@fp+1
 22005   006006  EC00  F027         	call	i2_fputc	;wreg free
 22006   00600A  4A0F               	infsnz	i2fputs@i^0,f,c
 22007   00600C  2A10               	incf	(i2fputs@i+1)^0,f,c
 22008   00600E                     i2l5322:
 22009   00600E  500F               	movf	i2fputs@i^0,w,c
 22010   006010  240A               	addwf	i2fputs@s^0,w,c
 22011   006012  6ED9               	movwf	fsr2l,c
 22012   006014  5010               	movf	(i2fputs@i+1)^0,w,c
 22013   006016  200B               	addwfc	(i2fputs@s+1)^0,w,c
 22014   006018  6EDA               	movwf	fsr2h,c
 22015   00601A  50DF               	movf	indf2,w,c
 22016   00601C  6E0E               	movwf	i2fputs@c^0,c
 22017   00601E  500E               	movf	i2fputs@c^0,w,c
 22018   006020  A4D8               	btfss	status,2,c
 22019   006022  EF15  F030         	goto	i2u493_41
 22020   006026  EF17  F030         	goto	i2u493_40
 22021   00602A                     i2u493_41:
 22022   00602A  EFFC  F02F         	goto	i2l5318
 22023   00602E                     i2u493_40:
 22024   00602E  0012               	return		;funcret
 22025   006030                     __end_ofi2_fputs:
 22026                           	callstack 0
 22027                           
 22028 ;; *************** function i2_fputc *****************
 22029 ;; Defined at:
 22030 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\nf_fputc.c"
 22031 ;; Parameters:    Size  Location     Type
 22032 ;;  c               2    0[COMRAM] int 
 22033 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
 22034 ;;		 -> i2sprintf@f(11), sprintf@f(11), 
 22035 ;; Auto vars:     Size  Location     Type
 22036 ;;		None
 22037 ;; Return value:  Size  Location     Type
 22038 ;;                  2    0[COMRAM] int 
 22039 ;; Registers used:
 22040 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 22041 ;; Tracked objects:
 22042 ;;		On entry : 0/0
 22043 ;;		On exit  : 0/0
 22044 ;;		Unchanged: 0/0
 22045 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22046 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22047 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22048 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22049 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22050 ;;Total ram usage:        9 bytes
 22051 ;; Hardware stack levels used: 1
 22052 ;; Hardware stack levels required when called: 1
 22053 ;; This function calls:
 22054 ;;		i2_putch
 22055 ;; This function is called by:
 22056 ;;		i2_pad
 22057 ;;		i2_vfpfcnvrt
 22058 ;;		i2_fputs
 22059 ;; This function uses a non-reentrant model
 22060 ;;
 22061                           
 22062                           	psect	text83
 22063   004E00                     __ptext83:
 22064                           	callstack 0
 22065   004E00                     i2_fputc:
 22066                           	callstack 12
 22067   004E00  5003               	movf	i2fputc@fp^0,w,c
 22068   004E02  1004               	iorwf	(i2fputc@fp+1)^0,w,c
 22069   004E04  B4D8               	btfsc	status,2,c
 22070   004E06  EF07  F027         	goto	i2u450_41
 22071   004E0A  EF09  F027         	goto	i2u450_40
 22072   004E0E                     i2u450_41:
 22073   004E0E  EF12  F027         	goto	i2l5112
 22074   004E12                     i2u450_40:
 22075   004E12  5003               	movf	i2fputc@fp^0,w,c
 22076   004E14  1004               	iorwf	(i2fputc@fp+1)^0,w,c
 22077   004E16  A4D8               	btfss	status,2,c
 22078   004E18  EF10  F027         	goto	i2u451_41
 22079   004E1C  EF12  F027         	goto	i2u451_40
 22080   004E20                     i2u451_41:
 22081   004E20  EF17  F027         	goto	i2l5114
 22082   004E24                     i2u451_40:
 22083   004E24                     i2l5112:
 22084   004E24  5001               	movf	i2fputc@c^0,w,c
 22085   004E26  ECAB  F032         	call	i2_putch
 22086   004E2A  EF6B  F027         	goto	i2l1741
 22087   004E2E                     i2l5114:
 22088   004E2E  EE20 F009          	lfsr	2,9
 22089   004E32  5003               	movf	i2fputc@fp^0,w,c
 22090   004E34  26D9               	addwf	fsr2l,f,c
 22091   004E36  5004               	movf	(i2fputc@fp+1)^0,w,c
 22092   004E38  22DA               	addwfc	fsr2h,f,c
 22093   004E3A  50DE               	movf	postinc2,w,c
 22094   004E3C  10DE               	iorwf	postinc2,w,c
 22095   004E3E  B4D8               	btfsc	status,2,c
 22096   004E40  EF24  F027         	goto	i2u452_41
 22097   004E44  EF26  F027         	goto	i2u452_40
 22098   004E48                     i2u452_41:
 22099   004E48  EF41  F027         	goto	i2l5118
 22100   004E4C                     i2u452_40:
 22101   004E4C  EE20 F009          	lfsr	2,9
 22102   004E50  5003               	movf	i2fputc@fp^0,w,c
 22103   004E52  26D9               	addwf	fsr2l,f,c
 22104   004E54  5004               	movf	(i2fputc@fp+1)^0,w,c
 22105   004E56  22DA               	addwfc	fsr2h,f,c
 22106   004E58  EE10 F002          	lfsr	1,2
 22107   004E5C  5003               	movf	i2fputc@fp^0,w,c
 22108   004E5E  26E1               	addwf	fsr1l,f,c
 22109   004E60  5004               	movf	(i2fputc@fp+1)^0,w,c
 22110   004E62  22E2               	addwfc	fsr1h,f,c
 22111   004E64  50DE               	movf	postinc2,w,c
 22112   004E66  5CE6               	subwf	postinc1,w,c
 22113   004E68  50E6               	movf	postinc1,w,c
 22114   004E6A  0A80               	xorlw	128
 22115   004E6C  6E09               	movwf	(??i2_fputc+4)^0,c
 22116   004E6E  50DE               	movf	postinc2,w,c
 22117   004E70  0A80               	xorlw	128
 22118   004E72  5809               	subwfb	(??i2_fputc+4)^0,w,c
 22119   004E74  B0D8               	btfsc	status,0,c
 22120   004E76  EF3F  F027         	goto	i2u453_41
 22121   004E7A  EF41  F027         	goto	i2u453_40
 22122   004E7E                     i2u453_41:
 22123   004E7E  EF6B  F027         	goto	i2l1741
 22124   004E82                     i2u453_40:
 22125   004E82                     i2l5118:
 22126   004E82  EE20 F002          	lfsr	2,2
 22127   004E86  5003               	movf	i2fputc@fp^0,w,c
 22128   004E88  26D9               	addwf	fsr2l,f,c
 22129   004E8A  5004               	movf	(i2fputc@fp+1)^0,w,c
 22130   004E8C  22DA               	addwfc	fsr2h,f,c
 22131   004E8E  006F FF78  F005    	movff	postinc2,??i2_fputc
 22132   004E94  006F FF74  F006    	movff	postdec2,??i2_fputc+1
 22133   004E9A  0060  F00F  FFD9   	movff	i2fputc@fp,fsr2l
 22134   004EA0  0060  F013  FFDA   	movff	i2fputc@fp+1,fsr2h
 22135   004EA6  006F FF78  F007    	movff	postinc2,??i2_fputc+2
 22136   004EAC  006F FF74  F008    	movff	postdec2,??i2_fputc+3
 22137   004EB2  5005               	movf	??i2_fputc^0,w,c
 22138   004EB4  2407               	addwf	(??i2_fputc+2)^0,w,c
 22139   004EB6  6ED9               	movwf	fsr2l,c
 22140   004EB8  5006               	movf	(??i2_fputc+1)^0,w,c
 22141   004EBA  2008               	addwfc	(??i2_fputc+3)^0,w,c
 22142   004EBC  6EDA               	movwf	fsr2h,c
 22143   004EBE  0060  F007  FFDF   	movff	i2fputc@c,indf2
 22144   004EC4  EE20 F002          	lfsr	2,2
 22145   004EC8  5003               	movf	i2fputc@fp^0,w,c
 22146   004ECA  26D9               	addwf	fsr2l,f,c
 22147   004ECC  5004               	movf	(i2fputc@fp+1)^0,w,c
 22148   004ECE  22DA               	addwfc	fsr2h,f,c
 22149   004ED0  2ADE               	incf	postinc2,f,c
 22150   004ED2  0E00               	movlw	0
 22151   004ED4  22DD               	addwfc	postdec2,f,c
 22152   004ED6                     i2l1741:
 22153   004ED6  0012               	return		;funcret
 22154   004ED8                     __end_ofi2_fputc:
 22155                           	callstack 0
 22156                           
 22157 ;; *************** function i2_putch *****************
 22158 ;; Defined at:
 22159 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\putch.c"
 22160 ;; Parameters:    Size  Location     Type
 22161 ;;  c               1    wreg     unsigned char 
 22162 ;; Auto vars:     Size  Location     Type
 22163 ;;  c               1  (no storage) unsigned char 
 22164 ;; Return value:  Size  Location     Type
 22165 ;;                  1    wreg      void 
 22166 ;; Registers used:
 22167 ;;		wreg
 22168 ;; Tracked objects:
 22169 ;;		On entry : 0/0
 22170 ;;		On exit  : 0/0
 22171 ;;		Unchanged: 0/0
 22172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22173 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22174 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22175 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22176 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22177 ;;Total ram usage:        0 bytes
 22178 ;; Hardware stack levels used: 1
 22179 ;; This function calls:
 22180 ;;		Nothing
 22181 ;; This function is called by:
 22182 ;;		i2_fputc
 22183 ;; This function uses a non-reentrant model
 22184 ;;
 22185                           
 22186                           	psect	text84
 22187   006556                     __ptext84:
 22188                           	callstack 0
 22189   006556                     i2_putch:
 22190                           	callstack 12
 22191   006556  0012               	return		;funcret
 22192   006558                     __end_ofi2_putch:
 22193                           	callstack 0
 22194                           
 22195 ;; *************** function i2_memcpy *****************
 22196 ;; Defined at:
 22197 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\memcpy.c"
 22198 ;; Parameters:    Size  Location     Type
 22199 ;;  d1              2    0[COMRAM] PTR void 
 22200 ;;		 -> dbuf(80), 
 22201 ;;  s1              2    2[COMRAM] PTR const void 
 22202 ;;		 -> dbuf(80), 
 22203 ;;  n               2    4[COMRAM] unsigned int 
 22204 ;; Auto vars:     Size  Location     Type
 22205 ;;  s               2    8[COMRAM] PTR const unsigned char 
 22206 ;;		 -> dbuf(80), 
 22207 ;;  d               2    6[COMRAM] PTR unsigned char 
 22208 ;;		 -> dbuf(80), 
 22209 ;;  tmp             1   10[COMRAM] unsigned char 
 22210 ;; Return value:  Size  Location     Type
 22211 ;;                  2    0[COMRAM] PTR void 
 22212 ;; Registers used:
 22213 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 22214 ;; Tracked objects:
 22215 ;;		On entry : 0/0
 22216 ;;		On exit  : 0/0
 22217 ;;		Unchanged: 0/0
 22218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22219 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22220 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22221 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22222 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22223 ;;Total ram usage:       11 bytes
 22224 ;; Hardware stack levels used: 1
 22225 ;; This function calls:
 22226 ;;		Nothing
 22227 ;; This function is called by:
 22228 ;;		i2_efgtoa
 22229 ;; This function uses a non-reentrant model
 22230 ;;
 22231                           
 22232                           	psect	text85
 22233   005AFC                     __ptext85:
 22234                           	callstack 0
 22235   005AFC                     i2_memcpy:
 22236                           	callstack 12
 22237   005AFC  C003  F009         	movff	i2memcpy@s1,i2memcpy@s
 22238   005B00  C004  F00A         	movff	i2memcpy@s1+1,i2memcpy@s+1
 22239   005B04  C001  F007         	movff	i2memcpy@d1,i2memcpy@d
 22240   005B08  C002  F008         	movff	i2memcpy@d1+1,i2memcpy@d+1
 22241   005B0C  EF9D  F02D         	goto	i2l5854
 22242   005B10                     i2l5846:
 22243   005B10  0060  F027  FFD9   	movff	i2memcpy@s,fsr2l
 22244   005B16  0060  F02B  FFDA   	movff	i2memcpy@s+1,fsr2h
 22245   005B1C  50DF               	movf	indf2,w,c
 22246   005B1E  6E0B               	movwf	i2memcpy@tmp^0,c
 22247   005B20  4A09               	infsnz	i2memcpy@s^0,f,c
 22248   005B22  2A0A               	incf	(i2memcpy@s+1)^0,f,c
 22249   005B24  0060  F01F  FFD9   	movff	i2memcpy@d,fsr2l
 22250   005B2A  0060  F023  FFDA   	movff	i2memcpy@d+1,fsr2h
 22251   005B30  0060  F02F  FFDF   	movff	i2memcpy@tmp,indf2
 22252   005B36  4A07               	infsnz	i2memcpy@d^0,f,c
 22253   005B38  2A08               	incf	(i2memcpy@d+1)^0,f,c
 22254   005B3A                     i2l5854:
 22255   005B3A  0605               	decf	i2memcpy@n^0,f,c
 22256   005B3C  A0D8               	btfss	status,0,c
 22257   005B3E  0606               	decf	(i2memcpy@n+1)^0,f,c
 22258   005B40  2805               	incf	i2memcpy@n^0,w,c
 22259   005B42  E106               	bnz	i2u585_41
 22260   005B44  2806               	incf	(i2memcpy@n+1)^0,w,c
 22261   005B46  A4D8               	btfss	status,2,c
 22262   005B48  EFA8  F02D         	goto	i2u585_41
 22263   005B4C  EFAA  F02D         	goto	i2u585_40
 22264   005B50                     i2u585_41:
 22265   005B50  EF88  F02D         	goto	i2l5846
 22266   005B54                     i2u585_40:
 22267   005B54  0012               	return		;funcret
 22268   005B56                     __end_ofi2_memcpy:
 22269                           	callstack 0
 22270                           
 22271 ;; *************** function i2_labs *****************
 22272 ;; Defined at:
 22273 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\labs.c"
 22274 ;; Parameters:    Size  Location     Type
 22275 ;;  a               4    0[COMRAM] long 
 22276 ;; Auto vars:     Size  Location     Type
 22277 ;;		None
 22278 ;; Return value:  Size  Location     Type
 22279 ;;                  4    0[COMRAM] long 
 22280 ;; Registers used:
 22281 ;;		wreg, status,2, status,0
 22282 ;; Tracked objects:
 22283 ;;		On entry : 0/0
 22284 ;;		On exit  : 0/0
 22285 ;;		Unchanged: 0/0
 22286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22287 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22288 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22289 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22290 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22291 ;;Total ram usage:        8 bytes
 22292 ;; Hardware stack levels used: 1
 22293 ;; This function calls:
 22294 ;;		Nothing
 22295 ;; This function is called by:
 22296 ;;		i2_efgtoa
 22297 ;; This function uses a non-reentrant model
 22298 ;;
 22299                           
 22300                           	psect	text86
 22301   005CB2                     __ptext86:
 22302                           	callstack 0
 22303   005CB2                     i2_labs:
 22304                           	callstack 12
 22305   005CB2  BE04               	btfsc	(i2labs@a+3)^0,7,c
 22306   005CB4  EF5E  F02E         	goto	i2u584_41
 22307   005CB8  EF60  F02E         	goto	i2u584_40
 22308   005CBC                     i2u584_41:
 22309   005CBC  EF6A  F02E         	goto	i2l5840
 22310   005CC0                     i2u584_40:
 22311   005CC0  C001  F001         	movff	i2labs@a,?i2_labs
 22312   005CC4  C002  F002         	movff	i2labs@a+1,?i2_labs+1
 22313   005CC8  C003  F003         	movff	i2labs@a+2,?i2_labs+2
 22314   005CCC  C004  F004         	movff	i2labs@a+3,?i2_labs+3
 22315   005CD0  EF83  F02E         	goto	i2l1723
 22316   005CD4                     i2l5840:
 22317   005CD4  C001  F005         	movff	i2labs@a,??i2_labs
 22318   005CD8  C002  F006         	movff	i2labs@a+1,??i2_labs+1
 22319   005CDC  C003  F007         	movff	i2labs@a+2,??i2_labs+2
 22320   005CE0  C004  F008         	movff	i2labs@a+3,??i2_labs+3
 22321   005CE4  1E05               	comf	??i2_labs^0,f,c
 22322   005CE6  1E06               	comf	(??i2_labs+1)^0,f,c
 22323   005CE8  1E07               	comf	(??i2_labs+2)^0,f,c
 22324   005CEA  1E08               	comf	(??i2_labs+3)^0,f,c
 22325   005CEC  2A05               	incf	??i2_labs^0,f,c
 22326   005CEE  0E00               	movlw	0
 22327   005CF0  2206               	addwfc	(??i2_labs+1)^0,f,c
 22328   005CF2  2207               	addwfc	(??i2_labs+2)^0,f,c
 22329   005CF4  2208               	addwfc	(??i2_labs+3)^0,f,c
 22330   005CF6  C005  F001         	movff	??i2_labs,?i2_labs
 22331   005CFA  C006  F002         	movff	??i2_labs+1,?i2_labs+1
 22332   005CFE  C007  F003         	movff	??i2_labs+2,?i2_labs+2
 22333   005D02  C008  F004         	movff	??i2_labs+3,?i2_labs+3
 22334   005D06                     i2l1723:
 22335   005D06  0012               	return		;funcret
 22336   005D08                     __end_ofi2_labs:
 22337                           	callstack 0
 22338                           
 22339 ;; *************** function i2_floorf *****************
 22340 ;; Defined at:
 22341 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\floorf.c"
 22342 ;; Parameters:    Size  Location     Type
 22343 ;;  x               4   64[COMRAM] float 
 22344 ;; Auto vars:     Size  Location     Type
 22345 ;;  u               4   80[COMRAM] struct .
 22346 ;;  m               4   74[COMRAM] unsigned long 
 22347 ;;  e               2   78[COMRAM] int 
 22348 ;; Return value:  Size  Location     Type
 22349 ;;                  4   64[COMRAM] float 
 22350 ;; Registers used:
 22351 ;;		wreg, status,2, status,0
 22352 ;; Tracked objects:
 22353 ;;		On entry : 0/0
 22354 ;;		On exit  : 0/0
 22355 ;;		Unchanged: 0/0
 22356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22357 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22358 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22359 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22360 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22361 ;;Total ram usage:       20 bytes
 22362 ;; Hardware stack levels used: 1
 22363 ;; This function calls:
 22364 ;;		Nothing
 22365 ;; This function is called by:
 22366 ;;		i2_efgtoa
 22367 ;; This function uses a non-reentrant model
 22368 ;;
 22369                           
 22370                           	psect	text87
 22371   003D92                     __ptext87:
 22372                           	callstack 0
 22373   003D92                     i2_floorf:
 22374                           	callstack 12
 22375   003D92  C0D5  F051         	movff	floorf@F521,i2floorf@u
 22376   003D96  C0D6  F052         	movff	floorf@F521+1,i2floorf@u+1
 22377   003D9A  C0D7  F053         	movff	floorf@F521+2,i2floorf@u+2
 22378   003D9E  C0D8  F054         	movff	floorf@F521+3,i2floorf@u+3
 22379   003DA2  C041  F051         	movff	i2floorf@x,i2floorf@u
 22380   003DA6  C042  F052         	movff	i2floorf@x+1,i2floorf@u+1
 22381   003DAA  C043  F053         	movff	i2floorf@x+2,i2floorf@u+2
 22382   003DAE  C044  F054         	movff	i2floorf@x+3,i2floorf@u+3
 22383   003DB2  0E81               	movlw	129
 22384   003DB4  6E45               	movwf	??i2_floorf^0,c
 22385   003DB6  0EFF               	movlw	255
 22386   003DB8  6E46               	movwf	(??i2_floorf+1)^0,c
 22387   003DBA  C051  F047         	movff	i2floorf@u,??i2_floorf+2
 22388   003DBE  C052  F048         	movff	i2floorf@u+1,??i2_floorf+3
 22389   003DC2  C053  F049         	movff	i2floorf@u+2,??i2_floorf+4
 22390   003DC6  C054  F04A         	movff	i2floorf@u+3,??i2_floorf+5
 22391   003DCA  0E18               	movlw	24
 22392   003DCC  EFED  F01E         	goto	i2u574_40
 22393   003DD0                     i2u574_45:
 22394   003DD0  90D8               	bcf	status,0,c
 22395   003DD2  324A               	rrcf	(??i2_floorf+5)^0,f,c
 22396   003DD4  3249               	rrcf	(??i2_floorf+4)^0,f,c
 22397   003DD6  3248               	rrcf	(??i2_floorf+3)^0,f,c
 22398   003DD8  3247               	rrcf	(??i2_floorf+2)^0,f,c
 22399   003DDA                     i2u574_40:
 22400   003DDA  2EE8               	decfsz	wreg,f,c
 22401   003DDC  EFE8  F01E         	goto	i2u574_45
 22402   003DE0  5047               	movf	(??i2_floorf+2)^0,w,c
 22403   003DE2  2445               	addwf	??i2_floorf^0,w,c
 22404   003DE4  6E4F               	movwf	i2floorf@e^0,c
 22405   003DE6  0E00               	movlw	0
 22406   003DE8  2046               	addwfc	(??i2_floorf+1)^0,w,c
 22407   003DEA  6E50               	movwf	(i2floorf@e+1)^0,c
 22408   003DEC  BE50               	btfsc	(i2floorf@e+1)^0,7,c
 22409   003DEE  EF02  F01F         	goto	i2u575_41
 22410   003DF2  5050               	movf	(i2floorf@e+1)^0,w,c
 22411   003DF4  E109               	bnz	i2u575_40
 22412   003DF6  0E17               	movlw	23
 22413   003DF8  5C4F               	subwf	i2floorf@e^0,w,c
 22414   003DFA  A0D8               	btfss	status,0,c
 22415   003DFC  EF02  F01F         	goto	i2u575_41
 22416   003E00  EF04  F01F         	goto	i2u575_40
 22417   003E04                     i2u575_41:
 22418   003E04  EF0E  F01F         	goto	i2l5814
 22419   003E08                     i2u575_40:
 22420   003E08                     i2l5812:
 22421   003E08  C041  F041         	movff	i2floorf@x,?i2_floorf
 22422   003E0C  C042  F042         	movff	i2floorf@x+1,?i2_floorf+1
 22423   003E10  C043  F043         	movff	i2floorf@x+2,?i2_floorf+2
 22424   003E14  C044  F044         	movff	i2floorf@x+3,?i2_floorf+3
 22425   003E18  EFD1  F01F         	goto	i2l1709
 22426   003E1C                     i2l5814:
 22427   003E1C  BE50               	btfsc	(i2floorf@e+1)^0,7,c
 22428   003E1E  EF13  F01F         	goto	i2u576_41
 22429   003E22  EF15  F01F         	goto	i2u576_40
 22430   003E26                     i2u576_41:
 22431   003E26  EF85  F01F         	goto	i2l5824
 22432   003E2A                     i2u576_40:
 22433   003E2A  C04F  F045         	movff	i2floorf@e,??i2_floorf
 22434   003E2E  0EFF               	movlw	255
 22435   003E30  6E46               	movwf	(??i2_floorf+1)^0,c
 22436   003E32  0EFF               	movlw	255
 22437   003E34  6E47               	movwf	(??i2_floorf+2)^0,c
 22438   003E36  0E7F               	movlw	127
 22439   003E38  6E48               	movwf	(??i2_floorf+3)^0,c
 22440   003E3A  0E00               	movlw	0
 22441   003E3C  6E49               	movwf	(??i2_floorf+4)^0,c
 22442   003E3E                     i2u577_45:
 22443   003E3E  6645               	tstfsz	??i2_floorf^0,c
 22444   003E40  EF24  F01F         	goto	i2u577_46
 22445   003E44  EF2C  F01F         	goto	i2u577_47
 22446   003E48                     i2u577_46:
 22447   003E48  3449               	rlcf	(??i2_floorf+4)^0,w,c
 22448   003E4A  3249               	rrcf	(??i2_floorf+4)^0,f,c
 22449   003E4C  3248               	rrcf	(??i2_floorf+3)^0,f,c
 22450   003E4E  3247               	rrcf	(??i2_floorf+2)^0,f,c
 22451   003E50  3246               	rrcf	(??i2_floorf+1)^0,f,c
 22452   003E52  2E45               	decfsz	??i2_floorf^0,f,c
 22453   003E54  EF1F  F01F         	goto	i2u577_45
 22454   003E58                     i2u577_47:
 22455   003E58  C046  F04B         	movff	??i2_floorf+1,i2floorf@m
 22456   003E5C  C047  F04C         	movff	??i2_floorf+2,i2floorf@m+1
 22457   003E60  C048  F04D         	movff	??i2_floorf+3,i2floorf@m+2
 22458   003E64  C049  F04E         	movff	??i2_floorf+4,i2floorf@m+3
 22459   003E68  504B               	movf	i2floorf@m^0,w,c
 22460   003E6A  1451               	andwf	i2floorf@u^0,w,c
 22461   003E6C  6E45               	movwf	??i2_floorf^0,c
 22462   003E6E  504C               	movf	(i2floorf@m+1)^0,w,c
 22463   003E70  1452               	andwf	(i2floorf@u+1)^0,w,c
 22464   003E72  6E46               	movwf	(??i2_floorf+1)^0,c
 22465   003E74  504D               	movf	(i2floorf@m+2)^0,w,c
 22466   003E76  1453               	andwf	(i2floorf@u+2)^0,w,c
 22467   003E78  6E47               	movwf	(??i2_floorf+2)^0,c
 22468   003E7A  504E               	movf	(i2floorf@m+3)^0,w,c
 22469   003E7C  1454               	andwf	(i2floorf@u+3)^0,w,c
 22470   003E7E  6E48               	movwf	(??i2_floorf+3)^0,c
 22471   003E80  5045               	movf	??i2_floorf^0,w,c
 22472   003E82  1046               	iorwf	(??i2_floorf+1)^0,w,c
 22473   003E84  1047               	iorwf	(??i2_floorf+2)^0,w,c
 22474   003E86  1048               	iorwf	(??i2_floorf+3)^0,w,c
 22475   003E88  A4D8               	btfss	status,2,c
 22476   003E8A  EF49  F01F         	goto	i2u578_41
 22477   003E8E  EF4B  F01F         	goto	i2u578_40
 22478   003E92                     i2u578_41:
 22479   003E92  EF4D  F01F         	goto	i2l5820
 22480   003E96                     i2u578_40:
 22481   003E96  EF04  F01F         	goto	i2l5812
 22482   003E9A                     i2l5820:
 22483   003E9A  C051  F045         	movff	i2floorf@u,??i2_floorf
 22484   003E9E  C052  F046         	movff	i2floorf@u+1,??i2_floorf+1
 22485   003EA2  C053  F047         	movff	i2floorf@u+2,??i2_floorf+2
 22486   003EA6  C054  F048         	movff	i2floorf@u+3,??i2_floorf+3
 22487   003EAA  0E20               	movlw	32
 22488   003EAC  EF5D  F01F         	goto	i2u579_40
 22489   003EB0                     i2u579_45:
 22490   003EB0  90D8               	bcf	status,0,c
 22491   003EB2  3248               	rrcf	(??i2_floorf+3)^0,f,c
 22492   003EB4  3247               	rrcf	(??i2_floorf+2)^0,f,c
 22493   003EB6  3246               	rrcf	(??i2_floorf+1)^0,f,c
 22494   003EB8  3245               	rrcf	??i2_floorf^0,f,c
 22495   003EBA                     i2u579_40:
 22496   003EBA  2EE8               	decfsz	wreg,f,c
 22497   003EBC  EF58  F01F         	goto	i2u579_45
 22498   003EC0  5045               	movf	??i2_floorf^0,w,c
 22499   003EC2  1046               	iorwf	(??i2_floorf+1)^0,w,c
 22500   003EC4  1047               	iorwf	(??i2_floorf+2)^0,w,c
 22501   003EC6  1048               	iorwf	(??i2_floorf+3)^0,w,c
 22502   003EC8  B4D8               	btfsc	status,2,c
 22503   003ECA  EF69  F01F         	goto	i2u580_41
 22504   003ECE  EF6B  F01F         	goto	i2u580_40
 22505   003ED2                     i2u580_41:
 22506   003ED2  EF73  F01F         	goto	i2l1712
 22507   003ED6                     i2u580_40:
 22508   003ED6  504B               	movf	i2floorf@m^0,w,c
 22509   003ED8  2651               	addwf	i2floorf@u^0,f,c
 22510   003EDA  504C               	movf	(i2floorf@m+1)^0,w,c
 22511   003EDC  2252               	addwfc	(i2floorf@u+1)^0,f,c
 22512   003EDE  504D               	movf	(i2floorf@m+2)^0,w,c
 22513   003EE0  2253               	addwfc	(i2floorf@u+2)^0,f,c
 22514   003EE2  504E               	movf	(i2floorf@m+3)^0,w,c
 22515   003EE4  2254               	addwfc	(i2floorf@u+3)^0,f,c
 22516   003EE6                     i2l1712:
 22517   003EE6  1C4B               	comf	i2floorf@m^0,w,c
 22518   003EE8  6E45               	movwf	??i2_floorf^0,c
 22519   003EEA  1C4C               	comf	(i2floorf@m+1)^0,w,c
 22520   003EEC  6E46               	movwf	(??i2_floorf+1)^0,c
 22521   003EEE  1C4D               	comf	(i2floorf@m+2)^0,w,c
 22522   003EF0  6E47               	movwf	(??i2_floorf+2)^0,c
 22523   003EF2  1C4E               	comf	(i2floorf@m+3)^0,w,c
 22524   003EF4  6E48               	movwf	(??i2_floorf+3)^0,c
 22525   003EF6  5045               	movf	??i2_floorf^0,w,c
 22526   003EF8  1651               	andwf	i2floorf@u^0,f,c
 22527   003EFA  5046               	movf	(??i2_floorf+1)^0,w,c
 22528   003EFC  1652               	andwf	(i2floorf@u+1)^0,f,c
 22529   003EFE  5047               	movf	(??i2_floorf+2)^0,w,c
 22530   003F00  1653               	andwf	(i2floorf@u+2)^0,f,c
 22531   003F02  5048               	movf	(??i2_floorf+3)^0,w,c
 22532   003F04  1654               	andwf	(i2floorf@u+3)^0,f,c
 22533   003F06  EFC9  F01F         	goto	i2l5832
 22534   003F0A                     i2l5824:
 22535   003F0A  C051  F045         	movff	i2floorf@u,??i2_floorf
 22536   003F0E  C052  F046         	movff	i2floorf@u+1,??i2_floorf+1
 22537   003F12  C053  F047         	movff	i2floorf@u+2,??i2_floorf+2
 22538   003F16  C054  F048         	movff	i2floorf@u+3,??i2_floorf+3
 22539   003F1A  0E20               	movlw	32
 22540   003F1C  EF95  F01F         	goto	i2u581_40
 22541   003F20                     i2u581_45:
 22542   003F20  90D8               	bcf	status,0,c
 22543   003F22  3248               	rrcf	(??i2_floorf+3)^0,f,c
 22544   003F24  3247               	rrcf	(??i2_floorf+2)^0,f,c
 22545   003F26  3246               	rrcf	(??i2_floorf+1)^0,f,c
 22546   003F28  3245               	rrcf	??i2_floorf^0,f,c
 22547   003F2A                     i2u581_40:
 22548   003F2A  2EE8               	decfsz	wreg,f,c
 22549   003F2C  EF90  F01F         	goto	i2u581_45
 22550   003F30  5045               	movf	??i2_floorf^0,w,c
 22551   003F32  1046               	iorwf	(??i2_floorf+1)^0,w,c
 22552   003F34  1047               	iorwf	(??i2_floorf+2)^0,w,c
 22553   003F36  1048               	iorwf	(??i2_floorf+3)^0,w,c
 22554   003F38  A4D8               	btfss	status,2,c
 22555   003F3A  EFA1  F01F         	goto	i2u582_41
 22556   003F3E  EFA3  F01F         	goto	i2u582_40
 22557   003F42                     i2u582_41:
 22558   003F42  EFAD  F01F         	goto	i2l5828
 22559   003F46                     i2u582_40:
 22560   003F46  0E00               	movlw	0
 22561   003F48  6E51               	movwf	i2floorf@u^0,c
 22562   003F4A  0E00               	movlw	0
 22563   003F4C  6E52               	movwf	(i2floorf@u+1)^0,c
 22564   003F4E  0E00               	movlw	0
 22565   003F50  6E53               	movwf	(i2floorf@u+2)^0,c
 22566   003F52  0E00               	movlw	0
 22567   003F54  6E54               	movwf	(i2floorf@u+3)^0,c
 22568   003F56  EFC9  F01F         	goto	i2l5832
 22569   003F5A                     i2l5828:
 22570   003F5A  90D8               	bcf	status,0,c
 22571   003F5C  3451               	rlcf	i2floorf@u^0,w,c
 22572   003F5E  6E45               	movwf	??i2_floorf^0,c
 22573   003F60  3452               	rlcf	(i2floorf@u+1)^0,w,c
 22574   003F62  6E46               	movwf	(??i2_floorf+1)^0,c
 22575   003F64  3453               	rlcf	(i2floorf@u+2)^0,w,c
 22576   003F66  6E47               	movwf	(??i2_floorf+2)^0,c
 22577   003F68  3454               	rlcf	(i2floorf@u+3)^0,w,c
 22578   003F6A  6E48               	movwf	(??i2_floorf+3)^0,c
 22579   003F6C  5045               	movf	??i2_floorf^0,w,c
 22580   003F6E  1046               	iorwf	(??i2_floorf+1)^0,w,c
 22581   003F70  1047               	iorwf	(??i2_floorf+2)^0,w,c
 22582   003F72  1048               	iorwf	(??i2_floorf+3)^0,w,c
 22583   003F74  B4D8               	btfsc	status,2,c
 22584   003F76  EFBF  F01F         	goto	i2u583_41
 22585   003F7A  EFC1  F01F         	goto	i2u583_40
 22586   003F7E                     i2u583_41:
 22587   003F7E  EFC9  F01F         	goto	i2l5832
 22588   003F82                     i2u583_40:
 22589   003F82  0E00               	movlw	0
 22590   003F84  6E51               	movwf	i2floorf@u^0,c
 22591   003F86  0E00               	movlw	0
 22592   003F88  6E52               	movwf	(i2floorf@u+1)^0,c
 22593   003F8A  0E80               	movlw	128
 22594   003F8C  6E53               	movwf	(i2floorf@u+2)^0,c
 22595   003F8E  0EBF               	movlw	191
 22596   003F90  6E54               	movwf	(i2floorf@u+3)^0,c
 22597   003F92                     i2l5832:
 22598   003F92  C051  F041         	movff	i2floorf@u,?i2_floorf
 22599   003F96  C052  F042         	movff	i2floorf@u+1,?i2_floorf+1
 22600   003F9A  C053  F043         	movff	i2floorf@u+2,?i2_floorf+2
 22601   003F9E  C054  F044         	movff	i2floorf@u+3,?i2_floorf+3
 22602   003FA2                     i2l1709:
 22603   003FA2  0012               	return		;funcret
 22604   003FA4                     __end_ofi2_floorf:
 22605                           	callstack 0
 22606                           
 22607 ;; *************** function i2___fpclassifyf *****************
 22608 ;; Defined at:
 22609 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\__fpclassifyf.c"
 22610 ;; Parameters:    Size  Location     Type
 22611 ;;  x               4    0[COMRAM] float 
 22612 ;; Auto vars:     Size  Location     Type
 22613 ;;  u               4   10[COMRAM] struct .
 22614 ;;  e               2    8[COMRAM] int 
 22615 ;; Return value:  Size  Location     Type
 22616 ;;                  2    0[COMRAM] int 
 22617 ;; Registers used:
 22618 ;;		wreg, status,2, status,0
 22619 ;; Tracked objects:
 22620 ;;		On entry : 0/0
 22621 ;;		On exit  : 0/0
 22622 ;;		Unchanged: 0/0
 22623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22624 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22625 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22626 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22627 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22628 ;;Total ram usage:       14 bytes
 22629 ;; Hardware stack levels used: 1
 22630 ;; This function calls:
 22631 ;;		Nothing
 22632 ;; This function is called by:
 22633 ;;		i2_efgtoa
 22634 ;; This function uses a non-reentrant model
 22635 ;;
 22636                           
 22637                           	psect	text88
 22638   004962                     __ptext88:
 22639                           	callstack 0
 22640   004962                     i2___fpclassifyf:
 22641                           	callstack 12
 22642   004962  C0D9  F00B         	movff	___fpclassifyf@F465,i2___fpclassifyf@u
 22643   004966  C0DA  F00C         	movff	___fpclassifyf@F465+1,i2___fpclassifyf@u+1
 22644   00496A  C0DB  F00D         	movff	___fpclassifyf@F465+2,i2___fpclassifyf@u+2
 22645   00496E  C0DC  F00E         	movff	___fpclassifyf@F465+3,i2___fpclassifyf@u+3
 22646   004972  C001  F00B         	movff	i2___fpclassifyf@x,i2___fpclassifyf@u
 22647   004976  C002  F00C         	movff	i2___fpclassifyf@x+1,i2___fpclassifyf@u+1
 22648   00497A  C003  F00D         	movff	i2___fpclassifyf@x+2,i2___fpclassifyf@u+2
 22649   00497E  C004  F00E         	movff	i2___fpclassifyf@x+3,i2___fpclassifyf@u+3
 22650   004982  C00B  F005         	movff	i2___fpclassifyf@u,??i2___fpclassifyf
 22651   004986  C00C  F006         	movff	i2___fpclassifyf@u+1,??i2___fpclassifyf+1
 22652   00498A  C00D  F007         	movff	i2___fpclassifyf@u+2,??i2___fpclassifyf+2
 22653   00498E  C00E  F008         	movff	i2___fpclassifyf@u+3,??i2___fpclassifyf+3
 22654   004992  0E18               	movlw	24
 22655   004994  EFD1  F024         	goto	i2u567_40
 22656   004998                     i2u567_45:
 22657   004998  90D8               	bcf	status,0,c
 22658   00499A  3208               	rrcf	(??i2___fpclassifyf+3)^0,f,c
 22659   00499C  3207               	rrcf	(??i2___fpclassifyf+2)^0,f,c
 22660   00499E  3206               	rrcf	(??i2___fpclassifyf+1)^0,f,c
 22661   0049A0  3205               	rrcf	??i2___fpclassifyf^0,f,c
 22662   0049A2                     i2u567_40:
 22663   0049A2  2EE8               	decfsz	wreg,f,c
 22664   0049A4  EFCC  F024         	goto	i2u567_45
 22665   0049A8  5005               	movf	??i2___fpclassifyf^0,w,c
 22666   0049AA  6E09               	movwf	i2___fpclassifyf@e^0,c
 22667   0049AC  6A0A               	clrf	(i2___fpclassifyf@e+1)^0,c
 22668   0049AE  5009               	movf	i2___fpclassifyf@e^0,w,c
 22669   0049B0  100A               	iorwf	(i2___fpclassifyf@e+1)^0,w,c
 22670   0049B2  A4D8               	btfss	status,2,c
 22671   0049B4  EFDE  F024         	goto	i2u568_41
 22672   0049B8  EFE0  F024         	goto	i2u568_40
 22673   0049BC                     i2u568_41:
 22674   0049BC  EF00  F025         	goto	i2l5798
 22675   0049C0                     i2u568_40:
 22676   0049C0  90D8               	bcf	status,0,c
 22677   0049C2  340B               	rlcf	i2___fpclassifyf@u^0,w,c
 22678   0049C4  6E05               	movwf	??i2___fpclassifyf^0,c
 22679   0049C6  340C               	rlcf	(i2___fpclassifyf@u+1)^0,w,c
 22680   0049C8  6E06               	movwf	(??i2___fpclassifyf+1)^0,c
 22681   0049CA  340D               	rlcf	(i2___fpclassifyf@u+2)^0,w,c
 22682   0049CC  6E07               	movwf	(??i2___fpclassifyf+2)^0,c
 22683   0049CE  340E               	rlcf	(i2___fpclassifyf@u+3)^0,w,c
 22684   0049D0  6E08               	movwf	(??i2___fpclassifyf+3)^0,c
 22685   0049D2  5005               	movf	??i2___fpclassifyf^0,w,c
 22686   0049D4  1006               	iorwf	(??i2___fpclassifyf+1)^0,w,c
 22687   0049D6  1007               	iorwf	(??i2___fpclassifyf+2)^0,w,c
 22688   0049D8  1008               	iorwf	(??i2___fpclassifyf+3)^0,w,c
 22689   0049DA  A4D8               	btfss	status,2,c
 22690   0049DC  EFF2  F024         	goto	i2u569_41
 22691   0049E0  EFF4  F024         	goto	i2u569_40
 22692   0049E4                     i2u569_41:
 22693   0049E4  EFFA  F024         	goto	i2l5794
 22694   0049E8                     i2u569_40:
 22695   0049E8  0E00               	movlw	0
 22696   0049EA  6E02               	movwf	(?i2___fpclassifyf+1)^0,c
 22697   0049EC  0E02               	movlw	2
 22698   0049EE  6E01               	movwf	?i2___fpclassifyf^0,c
 22699   0049F0  EF2F  F025         	goto	i2l1702
 22700   0049F4                     i2l5794:
 22701   0049F4  0E00               	movlw	0
 22702   0049F6  6E02               	movwf	(?i2___fpclassifyf+1)^0,c
 22703   0049F8  0E03               	movlw	3
 22704   0049FA  6E01               	movwf	?i2___fpclassifyf^0,c
 22705   0049FC  EF2F  F025         	goto	i2l1702
 22706   004A00                     i2l5798:
 22707   004A00  2809               	incf	i2___fpclassifyf@e^0,w,c
 22708   004A02  100A               	iorwf	(i2___fpclassifyf@e+1)^0,w,c
 22709   004A04  A4D8               	btfss	status,2,c
 22710   004A06  EF07  F025         	goto	i2u570_41
 22711   004A0A  EF09  F025         	goto	i2u570_40
 22712   004A0E                     i2u570_41:
 22713   004A0E  EF2B  F025         	goto	i2l5804
 22714   004A12                     i2u570_40:
 22715   004A12  C00B  F005         	movff	i2___fpclassifyf@u,??i2___fpclassifyf
 22716   004A16  C00C  F006         	movff	i2___fpclassifyf@u+1,??i2___fpclassifyf+1
 22717   004A1A  C00D  F007         	movff	i2___fpclassifyf@u+2,??i2___fpclassifyf+2
 22718   004A1E  C00E  F008         	movff	i2___fpclassifyf@u+3,??i2___fpclassifyf+3
 22719   004A22  0E09               	movlw	9
 22720   004A24                     i2u571_45:
 22721   004A24  90D8               	bcf	status,0,c
 22722   004A26  3605               	rlcf	??i2___fpclassifyf^0,f,c
 22723   004A28  3606               	rlcf	(??i2___fpclassifyf+1)^0,f,c
 22724   004A2A  3607               	rlcf	(??i2___fpclassifyf+2)^0,f,c
 22725   004A2C  3608               	rlcf	(??i2___fpclassifyf+3)^0,f,c
 22726   004A2E  2EE8               	decfsz	wreg,f,c
 22727   004A30  EF12  F025         	goto	i2u571_45
 22728   004A34  5005               	movf	??i2___fpclassifyf^0,w,c
 22729   004A36  1006               	iorwf	(??i2___fpclassifyf+1)^0,w,c
 22730   004A38  1007               	iorwf	(??i2___fpclassifyf+2)^0,w,c
 22731   004A3A  1008               	iorwf	(??i2___fpclassifyf+3)^0,w,c
 22732   004A3C  B4D8               	btfsc	status,2,c
 22733   004A3E  EF23  F025         	goto	i2u572_41
 22734   004A42  EF26  F025         	goto	i2u572_40
 22735   004A46                     i2u572_41:
 22736   004A46  0E01               	movlw	1
 22737   004A48  EF27  F025         	goto	i2u573_40
 22738   004A4C                     i2u572_40:
 22739   004A4C  0E00               	movlw	0
 22740   004A4E                     i2u573_40:
 22741   004A4E  6E01               	movwf	?i2___fpclassifyf^0,c
 22742   004A50  6A02               	clrf	(?i2___fpclassifyf+1)^0,c
 22743   004A52  EF2F  F025         	goto	i2l1702
 22744   004A56                     i2l5804:
 22745   004A56  0E00               	movlw	0
 22746   004A58  6E02               	movwf	(?i2___fpclassifyf+1)^0,c
 22747   004A5A  0E04               	movlw	4
 22748   004A5C  6E01               	movwf	?i2___fpclassifyf^0,c
 22749   004A5E                     i2l1702:
 22750   004A5E  0012               	return		;funcret
 22751   004A60                     __end_ofi2___fpclassifyf:
 22752                           	callstack 0
 22753                           
 22754 ;; *************** function i2___fltol *****************
 22755 ;; Defined at:
 22756 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\fltol.c"
 22757 ;; Parameters:    Size  Location     Type
 22758 ;;  f1              4   74[COMRAM] int 
 22759 ;; Auto vars:     Size  Location     Type
 22760 ;;  exp1            1   83[COMRAM] unsigned char 
 22761 ;;  sign1           1   82[COMRAM] unsigned char 
 22762 ;; Return value:  Size  Location     Type
 22763 ;;                  4   74[COMRAM] long 
 22764 ;; Registers used:
 22765 ;;		wreg, status,2, status,0
 22766 ;; Tracked objects:
 22767 ;;		On entry : 0/0
 22768 ;;		On exit  : 0/0
 22769 ;;		Unchanged: 0/0
 22770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22771 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22772 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22773 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22774 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22775 ;;Total ram usage:       10 bytes
 22776 ;; Hardware stack levels used: 1
 22777 ;; This function calls:
 22778 ;;		Nothing
 22779 ;; This function is called by:
 22780 ;;		i2_LCD_UpdateMenu
 22781 ;;		i2_efgtoa
 22782 ;; This function uses a non-reentrant model
 22783 ;;
 22784                           
 22785                           	psect	text89
 22786   004658                     __ptext89:
 22787                           	callstack 0
 22788   004658                     i2___fltol:
 22789                           	callstack 12
 22790   004658  344D               	rlcf	(i2___fltol@f1+2)^0,w,c
 22791   00465A  344E               	rlcf	(i2___fltol@f1+3)^0,w,c
 22792   00465C  6E54               	movwf	i2___fltol@exp1^0,c
 22793   00465E  5054               	movf	i2___fltol@exp1^0,w,c
 22794   004660  A4D8               	btfss	status,2,c
 22795   004662  EF35  F023         	goto	i2u516_41
 22796   004666  EF37  F023         	goto	i2u516_40
 22797   00466A                     i2u516_41:
 22798   00466A  EF41  F023         	goto	i2l5466
 22799   00466E                     i2u516_40:
 22800   00466E                     i2l5462:
 22801   00466E  0E00               	movlw	0
 22802   004670  6E4B               	movwf	?i2___fltol^0,c
 22803   004672  0E00               	movlw	0
 22804   004674  6E4C               	movwf	(?i2___fltol+1)^0,c
 22805   004676  0E00               	movlw	0
 22806   004678  6E4D               	movwf	(?i2___fltol+2)^0,c
 22807   00467A  0E00               	movlw	0
 22808   00467C  6E4E               	movwf	(?i2___fltol+3)^0,c
 22809   00467E  EFAE  F023         	goto	i2l1178
 22810   004682                     i2l5466:
 22811   004682  C04B  F04F         	movff	i2___fltol@f1,??i2___fltol
 22812   004686  C04C  F050         	movff	i2___fltol@f1+1,??i2___fltol+1
 22813   00468A  C04D  F051         	movff	i2___fltol@f1+2,??i2___fltol+2
 22814   00468E  C04E  F052         	movff	i2___fltol@f1+3,??i2___fltol+3
 22815   004692  0E20               	movlw	32
 22816   004694  EF51  F023         	goto	i2u517_40
 22817   004698                     i2u517_45:
 22818   004698  90D8               	bcf	status,0,c
 22819   00469A  3252               	rrcf	(??i2___fltol+3)^0,f,c
 22820   00469C  3251               	rrcf	(??i2___fltol+2)^0,f,c
 22821   00469E  3250               	rrcf	(??i2___fltol+1)^0,f,c
 22822   0046A0  324F               	rrcf	??i2___fltol^0,f,c
 22823   0046A2                     i2u517_40:
 22824   0046A2  2EE8               	decfsz	wreg,f,c
 22825   0046A4  EF4C  F023         	goto	i2u517_45
 22826   0046A8  504F               	movf	??i2___fltol^0,w,c
 22827   0046AA  6E53               	movwf	i2___fltol@sign1^0,c
 22828   0046AC  8E4D               	bsf	(i2___fltol@f1+2)^0,7,c
 22829   0046AE  0EFF               	movlw	255
 22830   0046B0  164B               	andwf	i2___fltol@f1^0,f,c
 22831   0046B2  0EFF               	movlw	255
 22832   0046B4  164C               	andwf	(i2___fltol@f1+1)^0,f,c
 22833   0046B6  0EFF               	movlw	255
 22834   0046B8  164D               	andwf	(i2___fltol@f1+2)^0,f,c
 22835   0046BA  0E00               	movlw	0
 22836   0046BC  164E               	andwf	(i2___fltol@f1+3)^0,f,c
 22837   0046BE  0E96               	movlw	150
 22838   0046C0  5E54               	subwf	i2___fltol@exp1^0,f,c
 22839   0046C2  BE54               	btfsc	i2___fltol@exp1^0,7,c
 22840   0046C4  EF68  F023         	goto	i2u518_40
 22841   0046C8  EF66  F023         	goto	i2u518_41
 22842   0046CC                     i2u518_41:
 22843   0046CC  EF7E  F023         	goto	i2l5486
 22844   0046D0                     i2u518_40:
 22845   0046D0  5054               	movf	i2___fltol@exp1^0,w,c
 22846   0046D2  0A80               	xorlw	128
 22847   0046D4  0F97               	addlw	151
 22848   0046D6  B0D8               	btfsc	status,0,c
 22849   0046D8  EF70  F023         	goto	i2u519_41
 22850   0046DC  EF72  F023         	goto	i2u519_40
 22851   0046E0                     i2u519_41:
 22852   0046E0  EF74  F023         	goto	i2l5482
 22853   0046E4                     i2u519_40:
 22854   0046E4  EF37  F023         	goto	i2l5462
 22855   0046E8                     i2l5482:
 22856   0046E8  90D8               	bcf	status,0,c
 22857   0046EA  324E               	rrcf	(i2___fltol@f1+3)^0,f,c
 22858   0046EC  324D               	rrcf	(i2___fltol@f1+2)^0,f,c
 22859   0046EE  324C               	rrcf	(i2___fltol@f1+1)^0,f,c
 22860   0046F0  324B               	rrcf	i2___fltol@f1^0,f,c
 22861   0046F2  3E54               	incfsz	i2___fltol@exp1^0,f,c
 22862   0046F4  EF74  F023         	goto	i2l5482
 22863   0046F8  EF96  F023         	goto	i2l5496
 22864   0046FC                     i2l5486:
 22865   0046FC  0E1F               	movlw	31
 22866   0046FE  6454               	cpfsgt	i2___fltol@exp1^0,c
 22867   004700  EF84  F023         	goto	i2u520_41
 22868   004704  EF86  F023         	goto	i2u520_40
 22869   004708                     i2u520_41:
 22870   004708  EF8E  F023         	goto	i2l5494
 22871   00470C                     i2u520_40:
 22872   00470C  EF37  F023         	goto	i2l5462
 22873   004710                     i2l5492:
 22874   004710  90D8               	bcf	status,0,c
 22875   004712  364B               	rlcf	i2___fltol@f1^0,f,c
 22876   004714  364C               	rlcf	(i2___fltol@f1+1)^0,f,c
 22877   004716  364D               	rlcf	(i2___fltol@f1+2)^0,f,c
 22878   004718  364E               	rlcf	(i2___fltol@f1+3)^0,f,c
 22879   00471A  0654               	decf	i2___fltol@exp1^0,f,c
 22880   00471C                     i2l5494:
 22881   00471C  5054               	movf	i2___fltol@exp1^0,w,c
 22882   00471E  A4D8               	btfss	status,2,c
 22883   004720  EF94  F023         	goto	i2u521_41
 22884   004724  EF96  F023         	goto	i2u521_40
 22885   004728                     i2u521_41:
 22886   004728  EF88  F023         	goto	i2l5492
 22887   00472C                     i2u521_40:
 22888   00472C                     i2l5496:
 22889   00472C  5053               	movf	i2___fltol@sign1^0,w,c
 22890   00472E  B4D8               	btfsc	status,2,c
 22891   004730  EF9C  F023         	goto	i2u522_41
 22892   004734  EF9E  F023         	goto	i2u522_40
 22893   004738                     i2u522_41:
 22894   004738  EFA6  F023         	goto	i2l5500
 22895   00473C                     i2u522_40:
 22896   00473C  1E4E               	comf	(i2___fltol@f1+3)^0,f,c
 22897   00473E  1E4D               	comf	(i2___fltol@f1+2)^0,f,c
 22898   004740  1E4C               	comf	(i2___fltol@f1+1)^0,f,c
 22899   004742  6C4B               	negf	i2___fltol@f1^0,c
 22900   004744  0E00               	movlw	0
 22901   004746  224C               	addwfc	(i2___fltol@f1+1)^0,f,c
 22902   004748  224D               	addwfc	(i2___fltol@f1+2)^0,f,c
 22903   00474A  224E               	addwfc	(i2___fltol@f1+3)^0,f,c
 22904   00474C                     i2l5500:
 22905   00474C  C04B  F04B         	movff	i2___fltol@f1,?i2___fltol
 22906   004750  C04C  F04C         	movff	i2___fltol@f1+1,?i2___fltol+1
 22907   004754  C04D  F04D         	movff	i2___fltol@f1+2,?i2___fltol+2
 22908   004758  C04E  F04E         	movff	i2___fltol@f1+3,?i2___fltol+3
 22909   00475C                     i2l1178:
 22910   00475C  0012               	return		;funcret
 22911   00475E                     __end_ofi2___fltol:
 22912                           	callstack 0
 22913                           
 22914 ;; *************** function i2___flsub *****************
 22915 ;; Defined at:
 22916 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\sprcadd.c"
 22917 ;; Parameters:    Size  Location     Type
 22918 ;;  b               4   39[COMRAM] long 
 22919 ;;  a               4   43[COMRAM] long 
 22920 ;; Auto vars:     Size  Location     Type
 22921 ;;		None
 22922 ;; Return value:  Size  Location     Type
 22923 ;;                  4   39[COMRAM] long 
 22924 ;; Registers used:
 22925 ;;		wreg, status,2, status,0, cstack
 22926 ;; Tracked objects:
 22927 ;;		On entry : 0/0
 22928 ;;		On exit  : 0/0
 22929 ;;		Unchanged: 0/0
 22930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22931 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22932 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22933 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22934 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22935 ;;Total ram usage:        8 bytes
 22936 ;; Hardware stack levels used: 1
 22937 ;; Hardware stack levels required when called: 1
 22938 ;; This function calls:
 22939 ;;		i2___fladd
 22940 ;; This function is called by:
 22941 ;;		i2_efgtoa
 22942 ;; This function uses a non-reentrant model
 22943 ;;
 22944                           
 22945                           	psect	text90
 22946   005F62                     __ptext90:
 22947                           	callstack 0
 22948   005F62                     i2___flsub:
 22949                           	callstack 11
 22950   005F62  0E00               	movlw	0
 22951   005F64  1A2C               	xorwf	i2___flsub@a^0,f,c
 22952   005F66  0E00               	movlw	0
 22953   005F68  1A2D               	xorwf	(i2___flsub@a+1)^0,f,c
 22954   005F6A  0E00               	movlw	0
 22955   005F6C  1A2E               	xorwf	(i2___flsub@a+2)^0,f,c
 22956   005F6E  0E80               	movlw	128
 22957   005F70  1A2F               	xorwf	(i2___flsub@a+3)^0,f,c
 22958   005F72  C028  F001         	movff	i2___flsub@b,i2___fladd@b
 22959   005F76  C029  F002         	movff	i2___flsub@b+1,i2___fladd@b+1
 22960   005F7A  C02A  F003         	movff	i2___flsub@b+2,i2___fladd@b+2
 22961   005F7E  C02B  F004         	movff	i2___flsub@b+3,i2___fladd@b+3
 22962   005F82  C02C  F005         	movff	i2___flsub@a,i2___fladd@a
 22963   005F86  C02D  F006         	movff	i2___flsub@a+1,i2___fladd@a+1
 22964   005F8A  C02E  F007         	movff	i2___flsub@a+2,i2___fladd@a+2
 22965   005F8E  C02F  F008         	movff	i2___flsub@a+3,i2___fladd@a+3
 22966   005F92  ECA1  F00D         	call	i2___fladd	;wreg free
 22967   005F96  C001  F028         	movff	?i2___fladd,?i2___flsub
 22968   005F9A  C002  F029         	movff	?i2___fladd+1,?i2___flsub+1
 22969   005F9E  C003  F02A         	movff	?i2___fladd+2,?i2___flsub+2
 22970   005FA2  C004  F02B         	movff	?i2___fladd+3,?i2___flsub+3
 22971   005FA6  0012               	return		;funcret
 22972   005FA8                     __end_ofi2___flsub:
 22973                           	callstack 0
 22974                           
 22975 ;; *************** function i2___fladd *****************
 22976 ;; Defined at:
 22977 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\sprcadd.c"
 22978 ;; Parameters:    Size  Location     Type
 22979 ;;  b               4    0[COMRAM] long 
 22980 ;;  a               4    4[COMRAM] long 
 22981 ;; Auto vars:     Size  Location     Type
 22982 ;;  grs             1   15[COMRAM] unsigned char 
 22983 ;;  bexp            1   14[COMRAM] unsigned char 
 22984 ;;  aexp            1   13[COMRAM] unsigned char 
 22985 ;;  signs           1   12[COMRAM] unsigned char 
 22986 ;; Return value:  Size  Location     Type
 22987 ;;                  4    0[COMRAM] unsigned char 
 22988 ;; Registers used:
 22989 ;;		wreg, status,2, status,0
 22990 ;; Tracked objects:
 22991 ;;		On entry : 0/0
 22992 ;;		On exit  : 0/0
 22993 ;;		Unchanged: 0/0
 22994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22995 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22996 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22997 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22998 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22999 ;;Total ram usage:       16 bytes
 23000 ;; Hardware stack levels used: 1
 23001 ;; This function calls:
 23002 ;;		Nothing
 23003 ;; This function is called by:
 23004 ;;		i2___flsub
 23005 ;;		i2_efgtoa
 23006 ;; This function uses a non-reentrant model
 23007 ;;
 23008                           
 23009                           	psect	text91
 23010   001B42                     __ptext91:
 23011                           	callstack 0
 23012   001B42                     i2___fladd:
 23013                           	callstack 11
 23014   001B42  5004               	movf	(i2___fladd@b+3)^0,w,c
 23015   001B44  0B80               	andlw	128
 23016   001B46  6E0D               	movwf	i2___fladd@signs^0,c
 23017   001B48  5004               	movf	(i2___fladd@b+3)^0,w,c
 23018   001B4A  2404               	addwf	(i2___fladd@b+3)^0,w,c
 23019   001B4C  6E0F               	movwf	i2___fladd@bexp^0,c
 23020   001B4E  AE03               	btfss	(i2___fladd@b+2)^0,7,c
 23021   001B50  EFAC  F00D         	goto	i2u454_41
 23022   001B54  EFAE  F00D         	goto	i2u454_40
 23023   001B58                     i2u454_41:
 23024   001B58  EFAF  F00D         	goto	i2l5128
 23025   001B5C                     i2u454_40:
 23026   001B5C  800F               	bsf	i2___fladd@bexp^0,0,c
 23027   001B5E                     i2l5128:
 23028   001B5E  500F               	movf	i2___fladd@bexp^0,w,c
 23029   001B60  B4D8               	btfsc	status,2,c
 23030   001B62  EFB5  F00D         	goto	i2u455_41
 23031   001B66  EFB7  F00D         	goto	i2u455_40
 23032   001B6A                     i2u455_41:
 23033   001B6A  EFCB  F00D         	goto	i2l5138
 23034   001B6E                     i2u455_40:
 23035   001B6E  280F               	incf	i2___fladd@bexp^0,w,c
 23036   001B70  A4D8               	btfss	status,2,c
 23037   001B72  EFBD  F00D         	goto	i2u456_41
 23038   001B76  EFBF  F00D         	goto	i2u456_40
 23039   001B7A                     i2u456_41:
 23040   001B7A  EFC7  F00D         	goto	i2l5134
 23041   001B7E                     i2u456_40:
 23042   001B7E  0E00               	movlw	0
 23043   001B80  6E01               	movwf	i2___fladd@b^0,c
 23044   001B82  0E00               	movlw	0
 23045   001B84  6E02               	movwf	(i2___fladd@b+1)^0,c
 23046   001B86  0E00               	movlw	0
 23047   001B88  6E03               	movwf	(i2___fladd@b+2)^0,c
 23048   001B8A  0E00               	movlw	0
 23049   001B8C  6E04               	movwf	(i2___fladd@b+3)^0,c
 23050   001B8E                     i2l5134:
 23051   001B8E  8E03               	bsf	(i2___fladd@b+2)^0,7,c
 23052   001B90  6A04               	clrf	(i2___fladd@b+3)^0,c
 23053   001B92  EFD3  F00D         	goto	i2l5140
 23054   001B96                     i2l5138:
 23055   001B96  0E00               	movlw	0
 23056   001B98  6E01               	movwf	i2___fladd@b^0,c
 23057   001B9A  0E00               	movlw	0
 23058   001B9C  6E02               	movwf	(i2___fladd@b+1)^0,c
 23059   001B9E  0E00               	movlw	0
 23060   001BA0  6E03               	movwf	(i2___fladd@b+2)^0,c
 23061   001BA2  0E00               	movlw	0
 23062   001BA4  6E04               	movwf	(i2___fladd@b+3)^0,c
 23063   001BA6                     i2l5140:
 23064   001BA6  5008               	movf	(i2___fladd@a+3)^0,w,c
 23065   001BA8  0B80               	andlw	128
 23066   001BAA  6E0E               	movwf	i2___fladd@aexp^0,c
 23067   001BAC  500D               	movf	i2___fladd@signs^0,w,c
 23068   001BAE  180E               	xorwf	i2___fladd@aexp^0,w,c
 23069   001BB0  B4D8               	btfsc	status,2,c
 23070   001BB2  EFDD  F00D         	goto	i2u457_41
 23071   001BB6  EFDF  F00D         	goto	i2u457_40
 23072   001BBA                     i2u457_41:
 23073   001BBA  EFE0  F00D         	goto	i2l5146
 23074   001BBE                     i2u457_40:
 23075   001BBE  8C0D               	bsf	i2___fladd@signs^0,6,c
 23076   001BC0                     i2l5146:
 23077   001BC0  5008               	movf	(i2___fladd@a+3)^0,w,c
 23078   001BC2  2408               	addwf	(i2___fladd@a+3)^0,w,c
 23079   001BC4  6E0E               	movwf	i2___fladd@aexp^0,c
 23080   001BC6  AE07               	btfss	(i2___fladd@a+2)^0,7,c
 23081   001BC8  EFE8  F00D         	goto	i2u458_41
 23082   001BCC  EFEA  F00D         	goto	i2u458_40
 23083   001BD0                     i2u458_41:
 23084   001BD0  EFEB  F00D         	goto	i2l5152
 23085   001BD4                     i2u458_40:
 23086   001BD4  800E               	bsf	i2___fladd@aexp^0,0,c
 23087   001BD6                     i2l5152:
 23088   001BD6  500E               	movf	i2___fladd@aexp^0,w,c
 23089   001BD8  B4D8               	btfsc	status,2,c
 23090   001BDA  EFF1  F00D         	goto	i2u459_41
 23091   001BDE  EFF3  F00D         	goto	i2u459_40
 23092   001BE2                     i2u459_41:
 23093   001BE2  EF07  F00E         	goto	i2l5162
 23094   001BE6                     i2u459_40:
 23095   001BE6  280E               	incf	i2___fladd@aexp^0,w,c
 23096   001BE8  A4D8               	btfss	status,2,c
 23097   001BEA  EFF9  F00D         	goto	i2u460_41
 23098   001BEE  EFFB  F00D         	goto	i2u460_40
 23099   001BF2                     i2u460_41:
 23100   001BF2  EF03  F00E         	goto	i2l5158
 23101   001BF6                     i2u460_40:
 23102   001BF6  0E00               	movlw	0
 23103   001BF8  6E05               	movwf	i2___fladd@a^0,c
 23104   001BFA  0E00               	movlw	0
 23105   001BFC  6E06               	movwf	(i2___fladd@a+1)^0,c
 23106   001BFE  0E00               	movlw	0
 23107   001C00  6E07               	movwf	(i2___fladd@a+2)^0,c
 23108   001C02  0E00               	movlw	0
 23109   001C04  6E08               	movwf	(i2___fladd@a+3)^0,c
 23110   001C06                     i2l5158:
 23111   001C06  8E07               	bsf	(i2___fladd@a+2)^0,7,c
 23112   001C08  6A08               	clrf	(i2___fladd@a+3)^0,c
 23113   001C0A  EF0F  F00E         	goto	i2l5164
 23114   001C0E                     i2l5162:
 23115   001C0E  0E00               	movlw	0
 23116   001C10  6E05               	movwf	i2___fladd@a^0,c
 23117   001C12  0E00               	movlw	0
 23118   001C14  6E06               	movwf	(i2___fladd@a+1)^0,c
 23119   001C16  0E00               	movlw	0
 23120   001C18  6E07               	movwf	(i2___fladd@a+2)^0,c
 23121   001C1A  0E00               	movlw	0
 23122   001C1C  6E08               	movwf	(i2___fladd@a+3)^0,c
 23123   001C1E                     i2l5164:
 23124   001C1E  500F               	movf	i2___fladd@bexp^0,w,c
 23125   001C20  5C0E               	subwf	i2___fladd@aexp^0,w,c
 23126   001C22  B0D8               	btfsc	status,0,c
 23127   001C24  EF16  F00E         	goto	i2u461_41
 23128   001C28  EF18  F00E         	goto	i2u461_40
 23129   001C2C                     i2u461_41:
 23130   001C2C  EF3F  F00E         	goto	i2l5200
 23131   001C30                     i2u461_40:
 23132   001C30  AC0D               	btfss	i2___fladd@signs^0,6,c
 23133   001C32  EF1D  F00E         	goto	i2u462_41
 23134   001C36  EF1F  F00E         	goto	i2u462_40
 23135   001C3A                     i2u462_41:
 23136   001C3A  EF21  F00E         	goto	i2l5170
 23137   001C3E                     i2u462_40:
 23138   001C3E  0E80               	movlw	128
 23139   001C40  1A0D               	xorwf	i2___fladd@signs^0,f,c
 23140   001C42                     i2l5170:
 23141   001C42  C00F  F010         	movff	i2___fladd@bexp,i2___fladd@grs
 23142   001C46  C00E  F00F         	movff	i2___fladd@aexp,i2___fladd@bexp
 23143   001C4A  C010  F00E         	movff	i2___fladd@grs,i2___fladd@aexp
 23144   001C4E  C001  F010         	movff	i2___fladd@b,i2___fladd@grs
 23145   001C52  C005  F001         	movff	i2___fladd@a,i2___fladd@b
 23146   001C56  C010  F005         	movff	i2___fladd@grs,i2___fladd@a
 23147   001C5A  C002  F010         	movff	i2___fladd@b+1,i2___fladd@grs
 23148   001C5E  C006  F002         	movff	i2___fladd@a+1,i2___fladd@b+1
 23149   001C62  C010  F006         	movff	i2___fladd@grs,i2___fladd@a+1
 23150   001C66  C003  F010         	movff	i2___fladd@b+2,i2___fladd@grs
 23151   001C6A  C007  F003         	movff	i2___fladd@a+2,i2___fladd@b+2
 23152   001C6E  C010  F007         	movff	i2___fladd@grs,i2___fladd@a+2
 23153   001C72  C004  F010         	movff	i2___fladd@b+3,i2___fladd@grs
 23154   001C76  C008  F004         	movff	i2___fladd@a+3,i2___fladd@b+3
 23155   001C7A  C010  F008         	movff	i2___fladd@grs,i2___fladd@a+3
 23156   001C7E                     i2l5200:
 23157   001C7E  6A10               	clrf	i2___fladd@grs^0,c
 23158   001C80  500F               	movf	i2___fladd@bexp^0,w,c
 23159   001C82  C00E  F009         	movff	i2___fladd@aexp,??i2___fladd
 23160   001C86  6A0A               	clrf	(??i2___fladd+1)^0,c
 23161   001C88  5E09               	subwf	??i2___fladd^0,f,c
 23162   001C8A  0E00               	movlw	0
 23163   001C8C  5A0A               	subwfb	(??i2___fladd+1)^0,f,c
 23164   001C8E  BE0A               	btfsc	(??i2___fladd+1)^0,7,c
 23165   001C90  EF53  F00E         	goto	i2u463_41
 23166   001C94  500A               	movf	(??i2___fladd+1)^0,w,c
 23167   001C96  E109               	bnz	i2u463_40
 23168   001C98  0E1A               	movlw	26
 23169   001C9A  5C09               	subwf	??i2___fladd^0,w,c
 23170   001C9C  A0D8               	btfss	status,0,c
 23171   001C9E  EF53  F00E         	goto	i2u463_41
 23172   001CA2  EF55  F00E         	goto	i2u463_40
 23173   001CA6                     i2u463_41:
 23174   001CA6  EF8C  F00E         	goto	i2l1410
 23175   001CAA                     i2u463_40:
 23176   001CAA  5001               	movf	i2___fladd@b^0,w,c
 23177   001CAC  1002               	iorwf	(i2___fladd@b+1)^0,w,c
 23178   001CAE  1003               	iorwf	(i2___fladd@b+2)^0,w,c
 23179   001CB0  1004               	iorwf	(i2___fladd@b+3)^0,w,c
 23180   001CB2  A4D8               	btfss	status,2,c
 23181   001CB4  EF5E  F00E         	goto	i2u464_41
 23182   001CB8  EF61  F00E         	goto	i2u464_40
 23183   001CBC                     i2u464_41:
 23184   001CBC  0E01               	movlw	1
 23185   001CBE  EF62  F00E         	goto	i2u465_40
 23186   001CC2                     i2u464_40:
 23187   001CC2  0E00               	movlw	0
 23188   001CC4                     i2u465_40:
 23189   001CC4  6E10               	movwf	i2___fladd@grs^0,c
 23190   001CC6  0E00               	movlw	0
 23191   001CC8  6E01               	movwf	i2___fladd@b^0,c
 23192   001CCA  0E00               	movlw	0
 23193   001CCC  6E02               	movwf	(i2___fladd@b+1)^0,c
 23194   001CCE  0E00               	movlw	0
 23195   001CD0  6E03               	movwf	(i2___fladd@b+2)^0,c
 23196   001CD2  0E00               	movlw	0
 23197   001CD4  6E04               	movwf	(i2___fladd@b+3)^0,c
 23198   001CD6  C00E  F00F         	movff	i2___fladd@aexp,i2___fladd@bexp
 23199   001CDA  EF95  F00E         	goto	i2l1409
 23200   001CDE                     i2l1411:
 23201   001CDE  A010               	btfss	i2___fladd@grs^0,0,c
 23202   001CE0  EF74  F00E         	goto	i2u466_41
 23203   001CE4  EF76  F00E         	goto	i2u466_40
 23204   001CE8                     i2u466_41:
 23205   001CE8  EF7C  F00E         	goto	i2l5210
 23206   001CEC                     i2u466_40:
 23207   001CEC  90D8               	bcf	status,0,c
 23208   001CEE  3010               	rrcf	i2___fladd@grs^0,w,c
 23209   001CF0  0901               	iorlw	1
 23210   001CF2  6E10               	movwf	i2___fladd@grs^0,c
 23211   001CF4  EF7E  F00E         	goto	i2l5212
 23212   001CF8                     i2l5210:
 23213   001CF8  90D8               	bcf	status,0,c
 23214   001CFA  3210               	rrcf	i2___fladd@grs^0,f,c
 23215   001CFC                     i2l5212:
 23216   001CFC  A001               	btfss	i2___fladd@b^0,0,c
 23217   001CFE  EF83  F00E         	goto	i2u467_41
 23218   001D02  EF85  F00E         	goto	i2u467_40
 23219   001D06                     i2u467_41:
 23220   001D06  EF86  F00E         	goto	i2l5216
 23221   001D0A                     i2u467_40:
 23222   001D0A  8E10               	bsf	i2___fladd@grs^0,7,c
 23223   001D0C                     i2l5216:
 23224   001D0C  3404               	rlcf	(i2___fladd@b+3)^0,w,c
 23225   001D0E  3204               	rrcf	(i2___fladd@b+3)^0,f,c
 23226   001D10  3203               	rrcf	(i2___fladd@b+2)^0,f,c
 23227   001D12  3202               	rrcf	(i2___fladd@b+1)^0,f,c
 23228   001D14  3201               	rrcf	i2___fladd@b^0,f,c
 23229   001D16  2A0F               	incf	i2___fladd@bexp^0,f,c
 23230   001D18                     i2l1410:
 23231   001D18  500E               	movf	i2___fladd@aexp^0,w,c
 23232   001D1A  5C0F               	subwf	i2___fladd@bexp^0,w,c
 23233   001D1C  A0D8               	btfss	status,0,c
 23234   001D1E  EF93  F00E         	goto	i2u468_41
 23235   001D22  EF95  F00E         	goto	i2u468_40
 23236   001D26                     i2u468_41:
 23237   001D26  EF6F  F00E         	goto	i2l1411
 23238   001D2A                     i2u468_40:
 23239   001D2A                     i2l1409:
 23240   001D2A  BC0D               	btfsc	i2___fladd@signs^0,6,c
 23241   001D2C  EF9A  F00E         	goto	i2u469_41
 23242   001D30  EF9C  F00E         	goto	i2u469_40
 23243   001D34                     i2u469_41:
 23244   001D34  EFDC  F00E         	goto	i2l5244
 23245   001D38                     i2u469_40:
 23246   001D38  500F               	movf	i2___fladd@bexp^0,w,c
 23247   001D3A  A4D8               	btfss	status,2,c
 23248   001D3C  EFA2  F00E         	goto	i2u470_41
 23249   001D40  EFA4  F00E         	goto	i2u470_40
 23250   001D44                     i2u470_41:
 23251   001D44  EFAE  F00E         	goto	i2l5226
 23252   001D48                     i2u470_40:
 23253   001D48  0E00               	movlw	0
 23254   001D4A  6E01               	movwf	?i2___fladd^0,c
 23255   001D4C  0E00               	movlw	0
 23256   001D4E  6E02               	movwf	(?i2___fladd+1)^0,c
 23257   001D50  0E00               	movlw	0
 23258   001D52  6E03               	movwf	(?i2___fladd+2)^0,c
 23259   001D54  0E00               	movlw	0
 23260   001D56  6E04               	movwf	(?i2___fladd+3)^0,c
 23261   001D58  EFFB  F00F         	goto	i2l1418
 23262   001D5C                     i2l5226:
 23263   001D5C  5005               	movf	i2___fladd@a^0,w,c
 23264   001D5E  2601               	addwf	i2___fladd@b^0,f,c
 23265   001D60  5006               	movf	(i2___fladd@a+1)^0,w,c
 23266   001D62  2202               	addwfc	(i2___fladd@b+1)^0,f,c
 23267   001D64  5007               	movf	(i2___fladd@a+2)^0,w,c
 23268   001D66  2203               	addwfc	(i2___fladd@b+2)^0,f,c
 23269   001D68  5008               	movf	(i2___fladd@a+3)^0,w,c
 23270   001D6A  2204               	addwfc	(i2___fladd@b+3)^0,f,c
 23271   001D6C  A004               	btfss	(i2___fladd@b+3)^0,0,c
 23272   001D6E  EFBB  F00E         	goto	i2u471_41
 23273   001D72  EFBD  F00E         	goto	i2u471_40
 23274   001D76                     i2u471_41:
 23275   001D76  EF69  F00F         	goto	i2l1423
 23276   001D7A                     i2u471_40:
 23277   001D7A  A010               	btfss	i2___fladd@grs^0,0,c
 23278   001D7C  EFC2  F00E         	goto	i2u472_41
 23279   001D80  EFC4  F00E         	goto	i2u472_40
 23280   001D84                     i2u472_41:
 23281   001D84  EFCA  F00E         	goto	i2l5234
 23282   001D88                     i2u472_40:
 23283   001D88  90D8               	bcf	status,0,c
 23284   001D8A  3010               	rrcf	i2___fladd@grs^0,w,c
 23285   001D8C  0901               	iorlw	1
 23286   001D8E  6E10               	movwf	i2___fladd@grs^0,c
 23287   001D90  EFCC  F00E         	goto	i2l5236
 23288   001D94                     i2l5234:
 23289   001D94  90D8               	bcf	status,0,c
 23290   001D96  3210               	rrcf	i2___fladd@grs^0,f,c
 23291   001D98                     i2l5236:
 23292   001D98  A001               	btfss	i2___fladd@b^0,0,c
 23293   001D9A  EFD1  F00E         	goto	i2u473_41
 23294   001D9E  EFD3  F00E         	goto	i2u473_40
 23295   001DA2                     i2u473_41:
 23296   001DA2  EFD4  F00E         	goto	i2l5240
 23297   001DA6                     i2u473_40:
 23298   001DA6  8E10               	bsf	i2___fladd@grs^0,7,c
 23299   001DA8                     i2l5240:
 23300   001DA8  3404               	rlcf	(i2___fladd@b+3)^0,w,c
 23301   001DAA  3204               	rrcf	(i2___fladd@b+3)^0,f,c
 23302   001DAC  3203               	rrcf	(i2___fladd@b+2)^0,f,c
 23303   001DAE  3202               	rrcf	(i2___fladd@b+1)^0,f,c
 23304   001DB0  3201               	rrcf	i2___fladd@b^0,f,c
 23305   001DB2  2A0F               	incf	i2___fladd@bexp^0,f,c
 23306   001DB4  EF69  F00F         	goto	i2l1423
 23307   001DB8                     i2l5244:
 23308   001DB8  5005               	movf	i2___fladd@a^0,w,c
 23309   001DBA  5C01               	subwf	i2___fladd@b^0,w,c
 23310   001DBC  5006               	movf	(i2___fladd@a+1)^0,w,c
 23311   001DBE  5802               	subwfb	(i2___fladd@b+1)^0,w,c
 23312   001DC0  5007               	movf	(i2___fladd@a+2)^0,w,c
 23313   001DC2  5803               	subwfb	(i2___fladd@b+2)^0,w,c
 23314   001DC4  5004               	movf	(i2___fladd@b+3)^0,w,c
 23315   001DC6  0A80               	xorlw	128
 23316   001DC8  6E09               	movwf	??i2___fladd^0,c
 23317   001DCA  5008               	movf	(i2___fladd@a+3)^0,w,c
 23318   001DCC  0A80               	xorlw	128
 23319   001DCE  5809               	subwfb	??i2___fladd^0,w,c
 23320   001DD0  B0D8               	btfsc	status,0,c
 23321   001DD2  EFED  F00E         	goto	i2u474_41
 23322   001DD6  EFEF  F00E         	goto	i2u474_40
 23323   001DDA                     i2u474_41:
 23324   001DDA  EF1A  F00F         	goto	i2l5254
 23325   001DDE                     i2u474_40:
 23326   001DDE  5001               	movf	i2___fladd@b^0,w,c
 23327   001DE0  5C05               	subwf	i2___fladd@a^0,w,c
 23328   001DE2  6E09               	movwf	??i2___fladd^0,c
 23329   001DE4  5002               	movf	(i2___fladd@b+1)^0,w,c
 23330   001DE6  5806               	subwfb	(i2___fladd@a+1)^0,w,c
 23331   001DE8  6E0A               	movwf	(??i2___fladd+1)^0,c
 23332   001DEA  5003               	movf	(i2___fladd@b+2)^0,w,c
 23333   001DEC  5807               	subwfb	(i2___fladd@a+2)^0,w,c
 23334   001DEE  6E0B               	movwf	(??i2___fladd+2)^0,c
 23335   001DF0  5004               	movf	(i2___fladd@b+3)^0,w,c
 23336   001DF2  5808               	subwfb	(i2___fladd@a+3)^0,w,c
 23337   001DF4  6E0C               	movwf	(??i2___fladd+3)^0,c
 23338   001DF6  0EFF               	movlw	255
 23339   001DF8  2409               	addwf	??i2___fladd^0,w,c
 23340   001DFA  6E01               	movwf	i2___fladd@b^0,c
 23341   001DFC  0EFF               	movlw	255
 23342   001DFE  200A               	addwfc	(??i2___fladd+1)^0,w,c
 23343   001E00  6E02               	movwf	(i2___fladd@b+1)^0,c
 23344   001E02  0EFF               	movlw	255
 23345   001E04  200B               	addwfc	(??i2___fladd+2)^0,w,c
 23346   001E06  6E03               	movwf	(i2___fladd@b+2)^0,c
 23347   001E08  0EFF               	movlw	255
 23348   001E0A  200C               	addwfc	(??i2___fladd+3)^0,w,c
 23349   001E0C  6E04               	movwf	(i2___fladd@b+3)^0,c
 23350   001E0E  0E80               	movlw	128
 23351   001E10  1A0D               	xorwf	i2___fladd@signs^0,f,c
 23352   001E12  6C10               	negf	i2___fladd@grs^0,c
 23353   001E14  5010               	movf	i2___fladd@grs^0,w,c
 23354   001E16  A4D8               	btfss	status,2,c
 23355   001E18  EF10  F00F         	goto	i2u475_41
 23356   001E1C  EF12  F00F         	goto	i2u475_40
 23357   001E20                     i2u475_41:
 23358   001E20  EF22  F00F         	goto	i2l1426
 23359   001E24                     i2u475_40:
 23360   001E24  0E01               	movlw	1
 23361   001E26  2601               	addwf	i2___fladd@b^0,f,c
 23362   001E28  0E00               	movlw	0
 23363   001E2A  2202               	addwfc	(i2___fladd@b+1)^0,f,c
 23364   001E2C  2203               	addwfc	(i2___fladd@b+2)^0,f,c
 23365   001E2E  2204               	addwfc	(i2___fladd@b+3)^0,f,c
 23366   001E30  EF22  F00F         	goto	i2l1426
 23367   001E34                     i2l5254:
 23368   001E34  5005               	movf	i2___fladd@a^0,w,c
 23369   001E36  5E01               	subwf	i2___fladd@b^0,f,c
 23370   001E38  5006               	movf	(i2___fladd@a+1)^0,w,c
 23371   001E3A  5A02               	subwfb	(i2___fladd@b+1)^0,f,c
 23372   001E3C  5007               	movf	(i2___fladd@a+2)^0,w,c
 23373   001E3E  5A03               	subwfb	(i2___fladd@b+2)^0,f,c
 23374   001E40  5008               	movf	(i2___fladd@a+3)^0,w,c
 23375   001E42  5A04               	subwfb	(i2___fladd@b+3)^0,f,c
 23376   001E44                     i2l1426:
 23377   001E44  5001               	movf	i2___fladd@b^0,w,c
 23378   001E46  1002               	iorwf	(i2___fladd@b+1)^0,w,c
 23379   001E48  1003               	iorwf	(i2___fladd@b+2)^0,w,c
 23380   001E4A  1004               	iorwf	(i2___fladd@b+3)^0,w,c
 23381   001E4C  A4D8               	btfss	status,2,c
 23382   001E4E  EF2B  F00F         	goto	i2u476_41
 23383   001E52  EF2D  F00F         	goto	i2u476_40
 23384   001E56                     i2u476_41:
 23385   001E56  EF62  F00F         	goto	i2l5278
 23386   001E5A                     i2u476_40:
 23387   001E5A  5010               	movf	i2___fladd@grs^0,w,c
 23388   001E5C  A4D8               	btfss	status,2,c
 23389   001E5E  EF33  F00F         	goto	i2u477_41
 23390   001E62  EF35  F00F         	goto	i2u477_40
 23391   001E66                     i2u477_41:
 23392   001E66  EF62  F00F         	goto	i2l5278
 23393   001E6A                     i2u477_40:
 23394   001E6A  0E00               	movlw	0
 23395   001E6C  6E01               	movwf	?i2___fladd^0,c
 23396   001E6E  0E00               	movlw	0
 23397   001E70  6E02               	movwf	(?i2___fladd+1)^0,c
 23398   001E72  0E00               	movlw	0
 23399   001E74  6E03               	movwf	(?i2___fladd+2)^0,c
 23400   001E76  0E00               	movlw	0
 23401   001E78  6E04               	movwf	(?i2___fladd+3)^0,c
 23402   001E7A  EFFB  F00F         	goto	i2l1418
 23403   001E7E                     i2l5262:
 23404   001E7E  90D8               	bcf	status,0,c
 23405   001E80  3601               	rlcf	i2___fladd@b^0,f,c
 23406   001E82  3602               	rlcf	(i2___fladd@b+1)^0,f,c
 23407   001E84  3603               	rlcf	(i2___fladd@b+2)^0,f,c
 23408   001E86  3604               	rlcf	(i2___fladd@b+3)^0,f,c
 23409   001E88  AE10               	btfss	i2___fladd@grs^0,7,c
 23410   001E8A  EF49  F00F         	goto	i2u478_41
 23411   001E8E  EF4B  F00F         	goto	i2u478_40
 23412   001E92                     i2u478_41:
 23413   001E92  EF4C  F00F         	goto	i2l5268
 23414   001E96                     i2u478_40:
 23415   001E96  8001               	bsf	i2___fladd@b^0,0,c
 23416   001E98                     i2l5268:
 23417   001E98  A010               	btfss	i2___fladd@grs^0,0,c
 23418   001E9A  EF51  F00F         	goto	i2u479_41
 23419   001E9E  EF53  F00F         	goto	i2u479_40
 23420   001EA2                     i2u479_41:
 23421   001EA2  EF57  F00F         	goto	i2l5272
 23422   001EA6                     i2u479_40:
 23423   001EA6  80D8               	bsf	status,0,c
 23424   001EA8  3610               	rlcf	i2___fladd@grs^0,f,c
 23425   001EAA  EF59  F00F         	goto	i2l5274
 23426   001EAE                     i2l5272:
 23427   001EAE  90D8               	bcf	status,0,c
 23428   001EB0  3610               	rlcf	i2___fladd@grs^0,f,c
 23429   001EB2                     i2l5274:
 23430   001EB2  500F               	movf	i2___fladd@bexp^0,w,c
 23431   001EB4  B4D8               	btfsc	status,2,c
 23432   001EB6  EF5F  F00F         	goto	i2u480_41
 23433   001EBA  EF61  F00F         	goto	i2u480_40
 23434   001EBE                     i2u480_41:
 23435   001EBE  EF62  F00F         	goto	i2l5278
 23436   001EC2                     i2u480_40:
 23437   001EC2  060F               	decf	i2___fladd@bexp^0,f,c
 23438   001EC4                     i2l5278:
 23439   001EC4  AE03               	btfss	(i2___fladd@b+2)^0,7,c
 23440   001EC6  EF67  F00F         	goto	i2u481_41
 23441   001ECA  EF69  F00F         	goto	i2u481_40
 23442   001ECE                     i2u481_41:
 23443   001ECE  EF3F  F00F         	goto	i2l5262
 23444   001ED2                     i2u481_40:
 23445   001ED2                     i2l1423:
 23446   001ED2  6A0E               	clrf	i2___fladd@aexp^0,c
 23447   001ED4  AE10               	btfss	i2___fladd@grs^0,7,c
 23448   001ED6  EF6F  F00F         	goto	i2u482_41
 23449   001EDA  EF71  F00F         	goto	i2u482_40
 23450   001EDE                     i2u482_41:
 23451   001EDE  EF89  F00F         	goto	i2l1435
 23452   001EE2                     i2u482_40:
 23453   001EE2  C010  F009         	movff	i2___fladd@grs,??i2___fladd
 23454   001EE6  0E7F               	movlw	127
 23455   001EE8  1609               	andwf	??i2___fladd^0,f,c
 23456   001EEA  B4D8               	btfsc	status,2,c
 23457   001EEC  EF7A  F00F         	goto	i2u483_41
 23458   001EF0  EF7C  F00F         	goto	i2u483_40
 23459   001EF4                     i2u483_41:
 23460   001EF4  EF80  F00F         	goto	i2l1436
 23461   001EF8                     i2u483_40:
 23462   001EF8                     i2l5282:
 23463   001EF8  0E01               	movlw	1
 23464   001EFA  6E0E               	movwf	i2___fladd@aexp^0,c
 23465   001EFC  EF89  F00F         	goto	i2l1435
 23466   001F00                     i2l1436:
 23467   001F00  A001               	btfss	i2___fladd@b^0,0,c
 23468   001F02  EF85  F00F         	goto	i2u484_41
 23469   001F06  EF87  F00F         	goto	i2u484_40
 23470   001F0A                     i2u484_41:
 23471   001F0A  EF89  F00F         	goto	i2l1435
 23472   001F0E                     i2u484_40:
 23473   001F0E  EF7C  F00F         	goto	i2l5282
 23474   001F12                     i2l1435:
 23475   001F12  500E               	movf	i2___fladd@aexp^0,w,c
 23476   001F14  B4D8               	btfsc	status,2,c
 23477   001F16  EF8F  F00F         	goto	i2u485_41
 23478   001F1A  EF91  F00F         	goto	i2u485_40
 23479   001F1E                     i2u485_41:
 23480   001F1E  EFBC  F00F         	goto	i2l5294
 23481   001F22                     i2u485_40:
 23482   001F22  0E01               	movlw	1
 23483   001F24  2601               	addwf	i2___fladd@b^0,f,c
 23484   001F26  0E00               	movlw	0
 23485   001F28  2202               	addwfc	(i2___fladd@b+1)^0,f,c
 23486   001F2A  2203               	addwfc	(i2___fladd@b+2)^0,f,c
 23487   001F2C  2204               	addwfc	(i2___fladd@b+3)^0,f,c
 23488   001F2E  A004               	btfss	(i2___fladd@b+3)^0,0,c
 23489   001F30  EF9C  F00F         	goto	i2u486_41
 23490   001F34  EF9E  F00F         	goto	i2u486_40
 23491   001F38                     i2u486_41:
 23492   001F38  EFBC  F00F         	goto	i2l5294
 23493   001F3C                     i2u486_40:
 23494   001F3C  C001  F009         	movff	i2___fladd@b,??i2___fladd
 23495   001F40  C002  F00A         	movff	i2___fladd@b+1,??i2___fladd+1
 23496   001F44  C003  F00B         	movff	i2___fladd@b+2,??i2___fladd+2
 23497   001F48  C004  F00C         	movff	i2___fladd@b+3,??i2___fladd+3
 23498   001F4C  340C               	rlcf	(??i2___fladd+3)^0,w,c
 23499   001F4E  320C               	rrcf	(??i2___fladd+3)^0,f,c
 23500   001F50  320B               	rrcf	(??i2___fladd+2)^0,f,c
 23501   001F52  320A               	rrcf	(??i2___fladd+1)^0,f,c
 23502   001F54  3209               	rrcf	??i2___fladd^0,f,c
 23503   001F56  C009  F001         	movff	??i2___fladd,i2___fladd@b
 23504   001F5A  C00A  F002         	movff	??i2___fladd+1,i2___fladd@b+1
 23505   001F5E  C00B  F003         	movff	??i2___fladd+2,i2___fladd@b+2
 23506   001F62  C00C  F004         	movff	??i2___fladd+3,i2___fladd@b+3
 23507   001F66  280F               	incf	i2___fladd@bexp^0,w,c
 23508   001F68  B4D8               	btfsc	status,2,c
 23509   001F6A  EFB9  F00F         	goto	i2u487_41
 23510   001F6E  EFBB  F00F         	goto	i2u487_40
 23511   001F72                     i2u487_41:
 23512   001F72  EFBC  F00F         	goto	i2l5294
 23513   001F76                     i2u487_40:
 23514   001F76  2A0F               	incf	i2___fladd@bexp^0,f,c
 23515   001F78                     i2l5294:
 23516   001F78  280F               	incf	i2___fladd@bexp^0,w,c
 23517   001F7A  B4D8               	btfsc	status,2,c
 23518   001F7C  EFC2  F00F         	goto	i2u488_41
 23519   001F80  EFC4  F00F         	goto	i2u488_40
 23520   001F84                     i2u488_41:
 23521   001F84  EFCC  F00F         	goto	i2l5298
 23522   001F88                     i2u488_40:
 23523   001F88  500F               	movf	i2___fladd@bexp^0,w,c
 23524   001F8A  A4D8               	btfss	status,2,c
 23525   001F8C  EFCA  F00F         	goto	i2u489_41
 23526   001F90  EFCC  F00F         	goto	i2u489_40
 23527   001F94                     i2u489_41:
 23528   001F94  EFDD  F00F         	goto	i2l1442
 23529   001F98                     i2u489_40:
 23530   001F98                     i2l5298:
 23531   001F98  0E00               	movlw	0
 23532   001F9A  6E01               	movwf	i2___fladd@b^0,c
 23533   001F9C  0E00               	movlw	0
 23534   001F9E  6E02               	movwf	(i2___fladd@b+1)^0,c
 23535   001FA0  0E00               	movlw	0
 23536   001FA2  6E03               	movwf	(i2___fladd@b+2)^0,c
 23537   001FA4  0E00               	movlw	0
 23538   001FA6  6E04               	movwf	(i2___fladd@b+3)^0,c
 23539   001FA8  500F               	movf	i2___fladd@bexp^0,w,c
 23540   001FAA  A4D8               	btfss	status,2,c
 23541   001FAC  EFDA  F00F         	goto	i2u490_41
 23542   001FB0  EFDC  F00F         	goto	i2u490_40
 23543   001FB4                     i2u490_41:
 23544   001FB4  EFDD  F00F         	goto	i2l1442
 23545   001FB8                     i2u490_40:
 23546   001FB8  6A0D               	clrf	i2___fladd@signs^0,c
 23547   001FBA                     i2l1442:
 23548   001FBA  A00F               	btfss	i2___fladd@bexp^0,0,c
 23549   001FBC  EFE2  F00F         	goto	i2u491_41
 23550   001FC0  EFE4  F00F         	goto	i2u491_40
 23551   001FC4                     i2u491_41:
 23552   001FC4  EFE7  F00F         	goto	i2l5304
 23553   001FC8                     i2u491_40:
 23554   001FC8  8E03               	bsf	(i2___fladd@b+2)^0,7,c
 23555   001FCA  EFE8  F00F         	goto	i2l5306
 23556   001FCE                     i2l5304:
 23557   001FCE  9E03               	bcf	(i2___fladd@b+2)^0,7,c
 23558   001FD0                     i2l5306:
 23559   001FD0  90D8               	bcf	status,0,c
 23560   001FD2  300F               	rrcf	i2___fladd@bexp^0,w,c
 23561   001FD4  6E04               	movwf	(i2___fladd@b+3)^0,c
 23562   001FD6  AE0D               	btfss	i2___fladd@signs^0,7,c
 23563   001FD8  EFF0  F00F         	goto	i2u492_41
 23564   001FDC  EFF2  F00F         	goto	i2u492_40
 23565   001FE0                     i2u492_41:
 23566   001FE0  EFF3  F00F         	goto	i2l5312
 23567   001FE4                     i2u492_40:
 23568   001FE4  8E04               	bsf	(i2___fladd@b+3)^0,7,c
 23569   001FE6                     i2l5312:
 23570   001FE6  C001  F001         	movff	i2___fladd@b,?i2___fladd
 23571   001FEA  C002  F002         	movff	i2___fladd@b+1,?i2___fladd+1
 23572   001FEE  C003  F003         	movff	i2___fladd@b+2,?i2___fladd+2
 23573   001FF2  C004  F004         	movff	i2___fladd@b+3,?i2___fladd+3
 23574   001FF6                     i2l1418:
 23575   001FF6  0012               	return		;funcret
 23576   001FF8                     __end_ofi2___fladd:
 23577                           	callstack 0
 23578                           
 23579 ;; *************** function i2___flneg *****************
 23580 ;; Defined at:
 23581 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\flneg.c"
 23582 ;; Parameters:    Size  Location     Type
 23583 ;;  f1              4    0[COMRAM] unsigned char 
 23584 ;; Auto vars:     Size  Location     Type
 23585 ;;		None
 23586 ;; Return value:  Size  Location     Type
 23587 ;;                  4    0[COMRAM] unsigned char 
 23588 ;; Registers used:
 23589 ;;		wreg, status,2, status,0
 23590 ;; Tracked objects:
 23591 ;;		On entry : 0/0
 23592 ;;		On exit  : 0/0
 23593 ;;		Unchanged: 0/0
 23594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23595 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23596 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23597 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23598 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23599 ;;Total ram usage:        4 bytes
 23600 ;; Hardware stack levels used: 1
 23601 ;; This function calls:
 23602 ;;		Nothing
 23603 ;; This function is called by:
 23604 ;;		i2_efgtoa
 23605 ;; This function uses a non-reentrant model
 23606 ;;
 23607                           
 23608                           	psect	text92
 23609   0061E2                     __ptext92:
 23610                           	callstack 0
 23611   0061E2                     i2___flneg:
 23612                           	callstack 12
 23613   0061E2  5001               	movf	i2___flneg@f1^0,w,c
 23614   0061E4  1002               	iorwf	(i2___flneg@f1+1)^0,w,c
 23615   0061E6  1003               	iorwf	(i2___flneg@f1+2)^0,w,c
 23616   0061E8  1004               	iorwf	(i2___flneg@f1+3)^0,w,c
 23617   0061EA  B4D8               	btfsc	status,2,c
 23618   0061EC  EFFA  F030         	goto	i2u515_41
 23619   0061F0  EFFC  F030         	goto	i2u515_40
 23620   0061F4                     i2u515_41:
 23621   0061F4  EF04  F031         	goto	i2l5456
 23622   0061F8                     i2u515_40:
 23623   0061F8  0E00               	movlw	0
 23624   0061FA  1A01               	xorwf	i2___flneg@f1^0,f,c
 23625   0061FC  0E00               	movlw	0
 23626   0061FE  1A02               	xorwf	(i2___flneg@f1+1)^0,f,c
 23627   006200  0E00               	movlw	0
 23628   006202  1A03               	xorwf	(i2___flneg@f1+2)^0,f,c
 23629   006204  0E80               	movlw	128
 23630   006206  1A04               	xorwf	(i2___flneg@f1+3)^0,f,c
 23631   006208                     i2l5456:
 23632   006208  C001  F001         	movff	i2___flneg@f1,?i2___flneg
 23633   00620C  C002  F002         	movff	i2___flneg@f1+1,?i2___flneg+1
 23634   006210  C003  F003         	movff	i2___flneg@f1+2,?i2___flneg+2
 23635   006214  C004  F004         	movff	i2___flneg@f1+3,?i2___flneg+3
 23636   006218  0012               	return		;funcret
 23637   00621A                     __end_ofi2___flneg:
 23638                           	callstack 0
 23639                           
 23640 ;; *************** function i2___flge *****************
 23641 ;; Defined at:
 23642 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\flge.c"
 23643 ;; Parameters:    Size  Location     Type
 23644 ;;  ff1             4   39[COMRAM] unsigned char 
 23645 ;;  ff2             4   43[COMRAM] unsigned char 
 23646 ;; Auto vars:     Size  Location     Type
 23647 ;;		None
 23648 ;; Return value:  Size  Location     Type
 23649 ;;		None               void
 23650 ;; Registers used:
 23651 ;;		wreg, status,2, status,0
 23652 ;; Tracked objects:
 23653 ;;		On entry : 0/0
 23654 ;;		On exit  : 0/0
 23655 ;;		Unchanged: 0/0
 23656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23657 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23658 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23659 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23660 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23661 ;;Total ram usage:       12 bytes
 23662 ;; Hardware stack levels used: 1
 23663 ;; This function calls:
 23664 ;;		Nothing
 23665 ;; This function is called by:
 23666 ;;		i2_efgtoa
 23667 ;; This function uses a non-reentrant model
 23668 ;;
 23669                           
 23670                           	psect	text93
 23671   00475E                     __ptext93:
 23672                           	callstack 0
 23673   00475E                     i2___flge:
 23674                           	callstack 12
 23675   00475E  0E00               	movlw	0
 23676   004760  1428               	andwf	i2___flge@ff1^0,w,c
 23677   004762  6E30               	movwf	??i2___flge^0,c
 23678   004764  0E00               	movlw	0
 23679   004766  1429               	andwf	(i2___flge@ff1+1)^0,w,c
 23680   004768  6E31               	movwf	(??i2___flge+1)^0,c
 23681   00476A  0E80               	movlw	128
 23682   00476C  142A               	andwf	(i2___flge@ff1+2)^0,w,c
 23683   00476E  6E32               	movwf	(??i2___flge+2)^0,c
 23684   004770  0E7F               	movlw	127
 23685   004772  142B               	andwf	(i2___flge@ff1+3)^0,w,c
 23686   004774  6E33               	movwf	(??i2___flge+3)^0,c
 23687   004776  5030               	movf	??i2___flge^0,w,c
 23688   004778  1031               	iorwf	(??i2___flge+1)^0,w,c
 23689   00477A  1032               	iorwf	(??i2___flge+2)^0,w,c
 23690   00477C  1033               	iorwf	(??i2___flge+3)^0,w,c
 23691   00477E  A4D8               	btfss	status,2,c
 23692   004780  EFC4  F023         	goto	i2u510_41
 23693   004784  EFC6  F023         	goto	i2u510_40
 23694   004788                     i2u510_41:
 23695   004788  EFCE  F023         	goto	i2l5434
 23696   00478C                     i2u510_40:
 23697   00478C  0E00               	movlw	0
 23698   00478E  6E28               	movwf	i2___flge@ff1^0,c
 23699   004790  0E00               	movlw	0
 23700   004792  6E29               	movwf	(i2___flge@ff1+1)^0,c
 23701   004794  0E00               	movlw	0
 23702   004796  6E2A               	movwf	(i2___flge@ff1+2)^0,c
 23703   004798  0E00               	movlw	0
 23704   00479A  6E2B               	movwf	(i2___flge@ff1+3)^0,c
 23705   00479C                     i2l5434:
 23706   00479C  0E00               	movlw	0
 23707   00479E  142C               	andwf	i2___flge@ff2^0,w,c
 23708   0047A0  6E30               	movwf	??i2___flge^0,c
 23709   0047A2  0E00               	movlw	0
 23710   0047A4  142D               	andwf	(i2___flge@ff2+1)^0,w,c
 23711   0047A6  6E31               	movwf	(??i2___flge+1)^0,c
 23712   0047A8  0E80               	movlw	128
 23713   0047AA  142E               	andwf	(i2___flge@ff2+2)^0,w,c
 23714   0047AC  6E32               	movwf	(??i2___flge+2)^0,c
 23715   0047AE  0E7F               	movlw	127
 23716   0047B0  142F               	andwf	(i2___flge@ff2+3)^0,w,c
 23717   0047B2  6E33               	movwf	(??i2___flge+3)^0,c
 23718   0047B4  5030               	movf	??i2___flge^0,w,c
 23719   0047B6  1031               	iorwf	(??i2___flge+1)^0,w,c
 23720   0047B8  1032               	iorwf	(??i2___flge+2)^0,w,c
 23721   0047BA  1033               	iorwf	(??i2___flge+3)^0,w,c
 23722   0047BC  A4D8               	btfss	status,2,c
 23723   0047BE  EFE3  F023         	goto	i2u511_41
 23724   0047C2  EFE5  F023         	goto	i2u511_40
 23725   0047C6                     i2u511_41:
 23726   0047C6  EFED  F023         	goto	i2l5438
 23727   0047CA                     i2u511_40:
 23728   0047CA  0E00               	movlw	0
 23729   0047CC  6E2C               	movwf	i2___flge@ff2^0,c
 23730   0047CE  0E00               	movlw	0
 23731   0047D0  6E2D               	movwf	(i2___flge@ff2+1)^0,c
 23732   0047D2  0E00               	movlw	0
 23733   0047D4  6E2E               	movwf	(i2___flge@ff2+2)^0,c
 23734   0047D6  0E00               	movlw	0
 23735   0047D8  6E2F               	movwf	(i2___flge@ff2+3)^0,c
 23736   0047DA                     i2l5438:
 23737   0047DA  AE2B               	btfss	(i2___flge@ff1+3)^0,7,c
 23738   0047DC  EFF2  F023         	goto	i2u512_41
 23739   0047E0  EFF4  F023         	goto	i2u512_40
 23740   0047E4                     i2u512_41:
 23741   0047E4  EFFD  F023         	goto	i2l5442
 23742   0047E8                     i2u512_40:
 23743   0047E8  6C28               	negf	i2___flge@ff1^0,c
 23744   0047EA  1E29               	comf	(i2___flge@ff1+1)^0,f,c
 23745   0047EC  B0D8               	btfsc	status,0,c
 23746   0047EE  2A29               	incf	(i2___flge@ff1+1)^0,f,c
 23747   0047F0  1E2A               	comf	(i2___flge@ff1+2)^0,f,c
 23748   0047F2  B0D8               	btfsc	status,0,c
 23749   0047F4  2A2A               	incf	(i2___flge@ff1+2)^0,f,c
 23750   0047F6  0E80               	movlw	128
 23751   0047F8  562B               	subfwb	(i2___flge@ff1+3)^0,f,c
 23752   0047FA                     i2l5442:
 23753   0047FA  AE2F               	btfss	(i2___flge@ff2+3)^0,7,c
 23754   0047FC  EF02  F024         	goto	i2u513_41
 23755   004800  EF04  F024         	goto	i2u513_40
 23756   004804                     i2u513_41:
 23757   004804  EF0D  F024         	goto	i2l1146
 23758   004808                     i2u513_40:
 23759   004808  6C2C               	negf	i2___flge@ff2^0,c
 23760   00480A  1E2D               	comf	(i2___flge@ff2+1)^0,f,c
 23761   00480C  B0D8               	btfsc	status,0,c
 23762   00480E  2A2D               	incf	(i2___flge@ff2+1)^0,f,c
 23763   004810  1E2E               	comf	(i2___flge@ff2+2)^0,f,c
 23764   004812  B0D8               	btfsc	status,0,c
 23765   004814  2A2E               	incf	(i2___flge@ff2+2)^0,f,c
 23766   004816  0E80               	movlw	128
 23767   004818  562F               	subfwb	(i2___flge@ff2+3)^0,f,c
 23768   00481A                     i2l1146:
 23769   00481A  0E00               	movlw	0
 23770   00481C  1A28               	xorwf	i2___flge@ff1^0,f,c
 23771   00481E  0E00               	movlw	0
 23772   004820  1A29               	xorwf	(i2___flge@ff1+1)^0,f,c
 23773   004822  0E00               	movlw	0
 23774   004824  1A2A               	xorwf	(i2___flge@ff1+2)^0,f,c
 23775   004826  0E80               	movlw	128
 23776   004828  1A2B               	xorwf	(i2___flge@ff1+3)^0,f,c
 23777   00482A  0E00               	movlw	0
 23778   00482C  1A2C               	xorwf	i2___flge@ff2^0,f,c
 23779   00482E  0E00               	movlw	0
 23780   004830  1A2D               	xorwf	(i2___flge@ff2+1)^0,f,c
 23781   004832  0E00               	movlw	0
 23782   004834  1A2E               	xorwf	(i2___flge@ff2+2)^0,f,c
 23783   004836  0E80               	movlw	128
 23784   004838  1A2F               	xorwf	(i2___flge@ff2+3)^0,f,c
 23785   00483A  502C               	movf	i2___flge@ff2^0,w,c
 23786   00483C  5C28               	subwf	i2___flge@ff1^0,w,c
 23787   00483E  502D               	movf	(i2___flge@ff2+1)^0,w,c
 23788   004840  5829               	subwfb	(i2___flge@ff1+1)^0,w,c
 23789   004842  502E               	movf	(i2___flge@ff2+2)^0,w,c
 23790   004844  582A               	subwfb	(i2___flge@ff1+2)^0,w,c
 23791   004846  502F               	movf	(i2___flge@ff2+3)^0,w,c
 23792   004848  582B               	subwfb	(i2___flge@ff1+3)^0,w,c
 23793   00484A  B0D8               	btfsc	status,0,c
 23794   00484C  EF2A  F024         	goto	i2u514_41
 23795   004850  EF2C  F024         	goto	i2u514_40
 23796   004854                     i2u514_41:
 23797   004854  EF2F  F024         	goto	i2l5448
 23798   004858                     i2u514_40:
 23799   004858  90D8               	bcf	status,0,c
 23800   00485A  EF30  F024         	goto	i2l1151
 23801   00485E                     i2l5448:
 23802   00485E  80D8               	bsf	status,0,c
 23803   004860                     i2l1151:
 23804   004860  0012               	return		;funcret
 23805   004862                     __end_ofi2___flge:
 23806                           	callstack 0
 23807                           
 23808 ;; *************** function i2___fleq *****************
 23809 ;; Defined at:
 23810 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\fleq.c"
 23811 ;; Parameters:    Size  Location     Type
 23812 ;;  ff1             4    0[COMRAM] unsigned char 
 23813 ;;  ff2             4    4[COMRAM] unsigned char 
 23814 ;; Auto vars:     Size  Location     Type
 23815 ;;		None
 23816 ;; Return value:  Size  Location     Type
 23817 ;;		None               void
 23818 ;; Registers used:
 23819 ;;		wreg, status,2, status,0
 23820 ;; Tracked objects:
 23821 ;;		On entry : 0/0
 23822 ;;		On exit  : 0/0
 23823 ;;		Unchanged: 0/0
 23824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23825 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23826 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23827 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23828 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23829 ;;Total ram usage:       12 bytes
 23830 ;; Hardware stack levels used: 1
 23831 ;; This function calls:
 23832 ;;		Nothing
 23833 ;; This function is called by:
 23834 ;;		i2_efgtoa
 23835 ;; This function uses a non-reentrant model
 23836 ;;
 23837                           
 23838                           	psect	text94
 23839   005558                     __ptext94:
 23840                           	callstack 0
 23841   005558                     i2___fleq:
 23842                           	callstack 12
 23843   005558  0E00               	movlw	0
 23844   00555A  1401               	andwf	i2___fleq@ff1^0,w,c
 23845   00555C  6E09               	movwf	??i2___fleq^0,c
 23846   00555E  0E00               	movlw	0
 23847   005560  1402               	andwf	(i2___fleq@ff1+1)^0,w,c
 23848   005562  6E0A               	movwf	(??i2___fleq+1)^0,c
 23849   005564  0E80               	movlw	128
 23850   005566  1403               	andwf	(i2___fleq@ff1+2)^0,w,c
 23851   005568  6E0B               	movwf	(??i2___fleq+2)^0,c
 23852   00556A  0E7F               	movlw	127
 23853   00556C  1404               	andwf	(i2___fleq@ff1+3)^0,w,c
 23854   00556E  6E0C               	movwf	(??i2___fleq+3)^0,c
 23855   005570  5009               	movf	??i2___fleq^0,w,c
 23856   005572  100A               	iorwf	(??i2___fleq+1)^0,w,c
 23857   005574  100B               	iorwf	(??i2___fleq+2)^0,w,c
 23858   005576  100C               	iorwf	(??i2___fleq+3)^0,w,c
 23859   005578  A4D8               	btfss	status,2,c
 23860   00557A  EFC1  F02A         	goto	i2u507_41
 23861   00557E  EFC3  F02A         	goto	i2u507_40
 23862   005582                     i2u507_41:
 23863   005582  EFCB  F02A         	goto	i2l5418
 23864   005586                     i2u507_40:
 23865   005586  0E00               	movlw	0
 23866   005588  6E01               	movwf	i2___fleq@ff1^0,c
 23867   00558A  0E00               	movlw	0
 23868   00558C  6E02               	movwf	(i2___fleq@ff1+1)^0,c
 23869   00558E  0E00               	movlw	0
 23870   005590  6E03               	movwf	(i2___fleq@ff1+2)^0,c
 23871   005592  0E00               	movlw	0
 23872   005594  6E04               	movwf	(i2___fleq@ff1+3)^0,c
 23873   005596                     i2l5418:
 23874   005596  0E00               	movlw	0
 23875   005598  1405               	andwf	i2___fleq@ff2^0,w,c
 23876   00559A  6E09               	movwf	??i2___fleq^0,c
 23877   00559C  0E00               	movlw	0
 23878   00559E  1406               	andwf	(i2___fleq@ff2+1)^0,w,c
 23879   0055A0  6E0A               	movwf	(??i2___fleq+1)^0,c
 23880   0055A2  0E80               	movlw	128
 23881   0055A4  1407               	andwf	(i2___fleq@ff2+2)^0,w,c
 23882   0055A6  6E0B               	movwf	(??i2___fleq+2)^0,c
 23883   0055A8  0E7F               	movlw	127
 23884   0055AA  1408               	andwf	(i2___fleq@ff2+3)^0,w,c
 23885   0055AC  6E0C               	movwf	(??i2___fleq+3)^0,c
 23886   0055AE  5009               	movf	??i2___fleq^0,w,c
 23887   0055B0  100A               	iorwf	(??i2___fleq+1)^0,w,c
 23888   0055B2  100B               	iorwf	(??i2___fleq+2)^0,w,c
 23889   0055B4  100C               	iorwf	(??i2___fleq+3)^0,w,c
 23890   0055B6  A4D8               	btfss	status,2,c
 23891   0055B8  EFE0  F02A         	goto	i2u508_41
 23892   0055BC  EFE2  F02A         	goto	i2u508_40
 23893   0055C0                     i2u508_41:
 23894   0055C0  EFEA  F02A         	goto	i2l5422
 23895   0055C4                     i2u508_40:
 23896   0055C4  0E00               	movlw	0
 23897   0055C6  6E05               	movwf	i2___fleq@ff2^0,c
 23898   0055C8  0E00               	movlw	0
 23899   0055CA  6E06               	movwf	(i2___fleq@ff2+1)^0,c
 23900   0055CC  0E00               	movlw	0
 23901   0055CE  6E07               	movwf	(i2___fleq@ff2+2)^0,c
 23902   0055D0  0E00               	movlw	0
 23903   0055D2  6E08               	movwf	(i2___fleq@ff2+3)^0,c
 23904   0055D4                     i2l5422:
 23905   0055D4  5005               	movf	i2___fleq@ff2^0,w,c
 23906   0055D6  1801               	xorwf	i2___fleq@ff1^0,w,c
 23907   0055D8  E10F               	bnz	i2u509_40
 23908   0055DA  5006               	movf	(i2___fleq@ff2+1)^0,w,c
 23909   0055DC  1802               	xorwf	(i2___fleq@ff1+1)^0,w,c
 23910   0055DE  E10C               	bnz	i2u509_40
 23911   0055E0  5007               	movf	(i2___fleq@ff2+2)^0,w,c
 23912   0055E2  1803               	xorwf	(i2___fleq@ff1+2)^0,w,c
 23913   0055E4  E109               	bnz	i2u509_40
 23914   0055E6  5008               	movf	(i2___fleq@ff2+3)^0,w,c
 23915   0055E8  1804               	xorwf	(i2___fleq@ff1+3)^0,w,c
 23916   0055EA  B4D8               	btfsc	status,2,c
 23917   0055EC  EFFA  F02A         	goto	i2u509_41
 23918   0055F0  EFFC  F02A         	goto	i2u509_40
 23919   0055F4                     i2u509_41:
 23920   0055F4  EFFF  F02A         	goto	i2l5426
 23921   0055F8                     i2u509_40:
 23922   0055F8  90D8               	bcf	status,0,c
 23923   0055FA  EF00  F02B         	goto	i2l1140
 23924   0055FE                     i2l5426:
 23925   0055FE  80D8               	bsf	status,0,c
 23926   005600                     i2l1140:
 23927   005600  0012               	return		;funcret
 23928   005602                     __end_ofi2___fleq:
 23929                           	callstack 0
 23930                           
 23931 ;; *************** function i2___awmod *****************
 23932 ;; Defined at:
 23933 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\awmod.c"
 23934 ;; Parameters:    Size  Location     Type
 23935 ;;  dividend        2    0[COMRAM] int 
 23936 ;;  divisor         2    2[COMRAM] int 
 23937 ;; Auto vars:     Size  Location     Type
 23938 ;;  sign            1    5[COMRAM] unsigned char 
 23939 ;;  counter         1    4[COMRAM] unsigned char 
 23940 ;; Return value:  Size  Location     Type
 23941 ;;                  2    0[COMRAM] int 
 23942 ;; Registers used:
 23943 ;;		wreg, status,2, status,0
 23944 ;; Tracked objects:
 23945 ;;		On entry : 0/0
 23946 ;;		On exit  : 0/0
 23947 ;;		Unchanged: 0/0
 23948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23949 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23950 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23951 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23952 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23953 ;;Total ram usage:        6 bytes
 23954 ;; Hardware stack levels used: 1
 23955 ;; This function calls:
 23956 ;;		Nothing
 23957 ;; This function is called by:
 23958 ;;		i2_efgtoa
 23959 ;; This function uses a non-reentrant model
 23960 ;;
 23961                           
 23962                           	psect	text95
 23963   005352                     __ptext95:
 23964                           	callstack 0
 23965   005352                     i2___awmod:
 23966                           	callstack 12
 23967   005352  6A06               	clrf	i2___awmod@sign^0,c
 23968   005354  BE02               	btfsc	(i2___awmod@dividend+1)^0,7,c
 23969   005356  EFB1  F029         	goto	i2u501_40
 23970   00535A  EFAF  F029         	goto	i2u501_41
 23971   00535E                     i2u501_41:
 23972   00535E  EFB7  F029         	goto	i2l5386
 23973   005362                     i2u501_40:
 23974   005362  6C01               	negf	i2___awmod@dividend^0,c
 23975   005364  1E02               	comf	(i2___awmod@dividend+1)^0,f,c
 23976   005366  B0D8               	btfsc	status,0,c
 23977   005368  2A02               	incf	(i2___awmod@dividend+1)^0,f,c
 23978   00536A  0E01               	movlw	1
 23979   00536C  6E06               	movwf	i2___awmod@sign^0,c
 23980   00536E                     i2l5386:
 23981   00536E  BE04               	btfsc	(i2___awmod@divisor+1)^0,7,c
 23982   005370  EFBE  F029         	goto	i2u502_40
 23983   005374  EFBC  F029         	goto	i2u502_41
 23984   005378                     i2u502_41:
 23985   005378  EFC2  F029         	goto	i2l5390
 23986   00537C                     i2u502_40:
 23987   00537C  6C03               	negf	i2___awmod@divisor^0,c
 23988   00537E  1E04               	comf	(i2___awmod@divisor+1)^0,f,c
 23989   005380  B0D8               	btfsc	status,0,c
 23990   005382  2A04               	incf	(i2___awmod@divisor+1)^0,f,c
 23991   005384                     i2l5390:
 23992   005384  5003               	movf	i2___awmod@divisor^0,w,c
 23993   005386  1004               	iorwf	(i2___awmod@divisor+1)^0,w,c
 23994   005388  B4D8               	btfsc	status,2,c
 23995   00538A  EFC9  F029         	goto	i2u503_41
 23996   00538E  EFCB  F029         	goto	i2u503_40
 23997   005392                     i2u503_41:
 23998   005392  EFEF  F029         	goto	i2l5406
 23999   005396                     i2u503_40:
 24000   005396  0E01               	movlw	1
 24001   005398  6E05               	movwf	i2___awmod@counter^0,c
 24002   00539A  EFD3  F029         	goto	i2l5396
 24003   00539E                     i2l5394:
 24004   00539E  90D8               	bcf	status,0,c
 24005   0053A0  3603               	rlcf	i2___awmod@divisor^0,f,c
 24006   0053A2  3604               	rlcf	(i2___awmod@divisor+1)^0,f,c
 24007   0053A4  2A05               	incf	i2___awmod@counter^0,f,c
 24008   0053A6                     i2l5396:
 24009   0053A6  AE04               	btfss	(i2___awmod@divisor+1)^0,7,c
 24010   0053A8  EFD8  F029         	goto	i2u504_41
 24011   0053AC  EFDA  F029         	goto	i2u504_40
 24012   0053B0                     i2u504_41:
 24013   0053B0  EFCF  F029         	goto	i2l5394
 24014   0053B4                     i2u504_40:
 24015   0053B4                     i2l5398:
 24016   0053B4  5003               	movf	i2___awmod@divisor^0,w,c
 24017   0053B6  5C01               	subwf	i2___awmod@dividend^0,w,c
 24018   0053B8  5004               	movf	(i2___awmod@divisor+1)^0,w,c
 24019   0053BA  5802               	subwfb	(i2___awmod@dividend+1)^0,w,c
 24020   0053BC  A0D8               	btfss	status,0,c
 24021   0053BE  EFE3  F029         	goto	i2u505_41
 24022   0053C2  EFE5  F029         	goto	i2u505_40
 24023   0053C6                     i2u505_41:
 24024   0053C6  EFE9  F029         	goto	i2l5402
 24025   0053CA                     i2u505_40:
 24026   0053CA  5003               	movf	i2___awmod@divisor^0,w,c
 24027   0053CC  5E01               	subwf	i2___awmod@dividend^0,f,c
 24028   0053CE  5004               	movf	(i2___awmod@divisor+1)^0,w,c
 24029   0053D0  5A02               	subwfb	(i2___awmod@dividend+1)^0,f,c
 24030   0053D2                     i2l5402:
 24031   0053D2  90D8               	bcf	status,0,c
 24032   0053D4  3204               	rrcf	(i2___awmod@divisor+1)^0,f,c
 24033   0053D6  3203               	rrcf	i2___awmod@divisor^0,f,c
 24034   0053D8  2E05               	decfsz	i2___awmod@counter^0,f,c
 24035   0053DA  EFDA  F029         	goto	i2l5398
 24036   0053DE                     i2l5406:
 24037   0053DE  5006               	movf	i2___awmod@sign^0,w,c
 24038   0053E0  B4D8               	btfsc	status,2,c
 24039   0053E2  EFF5  F029         	goto	i2u506_41
 24040   0053E6  EFF7  F029         	goto	i2u506_40
 24041   0053EA                     i2u506_41:
 24042   0053EA  EFFB  F029         	goto	i2l5410
 24043   0053EE                     i2u506_40:
 24044   0053EE  6C01               	negf	i2___awmod@dividend^0,c
 24045   0053F0  1E02               	comf	(i2___awmod@dividend+1)^0,f,c
 24046   0053F2  B0D8               	btfsc	status,0,c
 24047   0053F4  2A02               	incf	(i2___awmod@dividend+1)^0,f,c
 24048   0053F6                     i2l5410:
 24049   0053F6  C001  F001         	movff	i2___awmod@dividend,?i2___awmod
 24050   0053FA  C002  F002         	movff	i2___awmod@dividend+1,?i2___awmod+1
 24051   0053FE  0012               	return		;funcret
 24052   005400                     __end_ofi2___awmod:
 24053                           	callstack 0
 24054                           
 24055 ;; *************** function i2___awdiv *****************
 24056 ;; Defined at:
 24057 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\awdiv.c"
 24058 ;; Parameters:    Size  Location     Type
 24059 ;;  dividend        2    0[COMRAM] int 
 24060 ;;  divisor         2    2[COMRAM] int 
 24061 ;; Auto vars:     Size  Location     Type
 24062 ;;  quotient        2    6[COMRAM] int 
 24063 ;;  sign            1    5[COMRAM] unsigned char 
 24064 ;;  counter         1    4[COMRAM] unsigned char 
 24065 ;; Return value:  Size  Location     Type
 24066 ;;                  2    0[COMRAM] int 
 24067 ;; Registers used:
 24068 ;;		wreg, status,2, status,0
 24069 ;; Tracked objects:
 24070 ;;		On entry : 0/0
 24071 ;;		On exit  : 0/0
 24072 ;;		Unchanged: 0/0
 24073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24074 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24075 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24076 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24077 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24078 ;;Total ram usage:        8 bytes
 24079 ;; Hardware stack levels used: 1
 24080 ;; This function calls:
 24081 ;;		Nothing
 24082 ;; This function is called by:
 24083 ;;		i2_efgtoa
 24084 ;; This function uses a non-reentrant model
 24085 ;;
 24086                           
 24087                           	psect	text96
 24088   005126                     __ptext96:
 24089                           	callstack 0
 24090   005126                     i2___awdiv:
 24091                           	callstack 12
 24092   005126  6A06               	clrf	i2___awdiv@sign^0,c
 24093   005128  BE04               	btfsc	(i2___awdiv@divisor+1)^0,7,c
 24094   00512A  EF9B  F028         	goto	i2u495_40
 24095   00512E  EF99  F028         	goto	i2u495_41
 24096   005132                     i2u495_41:
 24097   005132  EFA1  F028         	goto	i2l5342
 24098   005136                     i2u495_40:
 24099   005136  6C03               	negf	i2___awdiv@divisor^0,c
 24100   005138  1E04               	comf	(i2___awdiv@divisor+1)^0,f,c
 24101   00513A  B0D8               	btfsc	status,0,c
 24102   00513C  2A04               	incf	(i2___awdiv@divisor+1)^0,f,c
 24103   00513E  0E01               	movlw	1
 24104   005140  6E06               	movwf	i2___awdiv@sign^0,c
 24105   005142                     i2l5342:
 24106   005142  BE02               	btfsc	(i2___awdiv@dividend+1)^0,7,c
 24107   005144  EFA8  F028         	goto	i2u496_40
 24108   005148  EFA6  F028         	goto	i2u496_41
 24109   00514C                     i2u496_41:
 24110   00514C  EFAE  F028         	goto	i2l5348
 24111   005150                     i2u496_40:
 24112   005150  6C01               	negf	i2___awdiv@dividend^0,c
 24113   005152  1E02               	comf	(i2___awdiv@dividend+1)^0,f,c
 24114   005154  B0D8               	btfsc	status,0,c
 24115   005156  2A02               	incf	(i2___awdiv@dividend+1)^0,f,c
 24116   005158  0E01               	movlw	1
 24117   00515A  1A06               	xorwf	i2___awdiv@sign^0,f,c
 24118   00515C                     i2l5348:
 24119   00515C  0E00               	movlw	0
 24120   00515E  6E08               	movwf	(i2___awdiv@quotient+1)^0,c
 24121   005160  0E00               	movlw	0
 24122   005162  6E07               	movwf	i2___awdiv@quotient^0,c
 24123   005164  5003               	movf	i2___awdiv@divisor^0,w,c
 24124   005166  1004               	iorwf	(i2___awdiv@divisor+1)^0,w,c
 24125   005168  B4D8               	btfsc	status,2,c
 24126   00516A  EFB9  F028         	goto	i2u497_41
 24127   00516E  EFBB  F028         	goto	i2u497_40
 24128   005172                     i2u497_41:
 24129   005172  EFE3  F028         	goto	i2l5370
 24130   005176                     i2u497_40:
 24131   005176  0E01               	movlw	1
 24132   005178  6E05               	movwf	i2___awdiv@counter^0,c
 24133   00517A  EFC3  F028         	goto	i2l5356
 24134   00517E                     i2l5354:
 24135   00517E  90D8               	bcf	status,0,c
 24136   005180  3603               	rlcf	i2___awdiv@divisor^0,f,c
 24137   005182  3604               	rlcf	(i2___awdiv@divisor+1)^0,f,c
 24138   005184  2A05               	incf	i2___awdiv@counter^0,f,c
 24139   005186                     i2l5356:
 24140   005186  AE04               	btfss	(i2___awdiv@divisor+1)^0,7,c
 24141   005188  EFC8  F028         	goto	i2u498_41
 24142   00518C  EFCA  F028         	goto	i2u498_40
 24143   005190                     i2u498_41:
 24144   005190  EFBF  F028         	goto	i2l5354
 24145   005194                     i2u498_40:
 24146   005194                     i2l5358:
 24147   005194  90D8               	bcf	status,0,c
 24148   005196  3607               	rlcf	i2___awdiv@quotient^0,f,c
 24149   005198  3608               	rlcf	(i2___awdiv@quotient+1)^0,f,c
 24150   00519A  5003               	movf	i2___awdiv@divisor^0,w,c
 24151   00519C  5C01               	subwf	i2___awdiv@dividend^0,w,c
 24152   00519E  5004               	movf	(i2___awdiv@divisor+1)^0,w,c
 24153   0051A0  5802               	subwfb	(i2___awdiv@dividend+1)^0,w,c
 24154   0051A2  A0D8               	btfss	status,0,c
 24155   0051A4  EFD6  F028         	goto	i2u499_41
 24156   0051A8  EFD8  F028         	goto	i2u499_40
 24157   0051AC                     i2u499_41:
 24158   0051AC  EFDD  F028         	goto	i2l5366
 24159   0051B0                     i2u499_40:
 24160   0051B0  5003               	movf	i2___awdiv@divisor^0,w,c
 24161   0051B2  5E01               	subwf	i2___awdiv@dividend^0,f,c
 24162   0051B4  5004               	movf	(i2___awdiv@divisor+1)^0,w,c
 24163   0051B6  5A02               	subwfb	(i2___awdiv@dividend+1)^0,f,c
 24164   0051B8  8007               	bsf	i2___awdiv@quotient^0,0,c
 24165   0051BA                     i2l5366:
 24166   0051BA  90D8               	bcf	status,0,c
 24167   0051BC  3204               	rrcf	(i2___awdiv@divisor+1)^0,f,c
 24168   0051BE  3203               	rrcf	i2___awdiv@divisor^0,f,c
 24169   0051C0  2E05               	decfsz	i2___awdiv@counter^0,f,c
 24170   0051C2  EFCA  F028         	goto	i2l5358
 24171   0051C6                     i2l5370:
 24172   0051C6  5006               	movf	i2___awdiv@sign^0,w,c
 24173   0051C8  B4D8               	btfsc	status,2,c
 24174   0051CA  EFE9  F028         	goto	i2u500_41
 24175   0051CE  EFEB  F028         	goto	i2u500_40
 24176   0051D2                     i2u500_41:
 24177   0051D2  EFEF  F028         	goto	i2l5374
 24178   0051D6                     i2u500_40:
 24179   0051D6  6C07               	negf	i2___awdiv@quotient^0,c
 24180   0051D8  1E08               	comf	(i2___awdiv@quotient+1)^0,f,c
 24181   0051DA  B0D8               	btfsc	status,0,c
 24182   0051DC  2A08               	incf	(i2___awdiv@quotient+1)^0,f,c
 24183   0051DE                     i2l5374:
 24184   0051DE  C007  F001         	movff	i2___awdiv@quotient,?i2___awdiv
 24185   0051E2  C008  F002         	movff	i2___awdiv@quotient+1,?i2___awdiv+1
 24186   0051E6  0012               	return		;funcret
 24187   0051E8                     __end_ofi2___awdiv:
 24188                           	callstack 0
 24189                           
 24190 ;; *************** function i2_lire_tension *****************
 24191 ;; Defined at:
 24192 ;;		line 307 in file "main.c"
 24193 ;; Parameters:    Size  Location     Type
 24194 ;;		None
 24195 ;; Auto vars:     Size  Location     Type
 24196 ;;  tension         4   68[COMRAM] float 
 24197 ;;  adc_val         2   72[COMRAM] short 
 24198 ;; Return value:  Size  Location     Type
 24199 ;;                  4   64[COMRAM] float 
 24200 ;; Registers used:
 24201 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 24202 ;; Tracked objects:
 24203 ;;		On entry : 0/0
 24204 ;;		On exit  : 0/0
 24205 ;;		Unchanged: 0/0
 24206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24207 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24208 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24209 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24210 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24211 ;;Total ram usage:       10 bytes
 24212 ;; Hardware stack levels used: 1
 24213 ;; Hardware stack levels required when called: 1
 24214 ;; This function calls:
 24215 ;;		i2_ADC_ChannelSelect
 24216 ;;		i2_ADC_ConversionResultGet
 24217 ;;		i2_ADC_ConversionStart
 24218 ;;		i2___fldiv
 24219 ;;		i2___flmul
 24220 ;;		i2___xxtofl
 24221 ;; This function is called by:
 24222 ;;		i2_LCD_UpdateMenu
 24223 ;; This function uses a non-reentrant model
 24224 ;;
 24225                           
 24226                           	psect	text97
 24227   00569E                     __ptext97:
 24228                           	callstack 0
 24229   00569E                     i2_lire_tension:
 24230                           	callstack 15
 24231   00569E                     
 24232                           ;main.c: 309:     ADC_ChannelSelect(ADC_CHANNEL_ANA4);
 24233   00569E  0E04               	movlw	4
 24234   0056A0  EC95  F032         	call	i2_ADC_ChannelSelect
 24235   0056A4                     
 24236                           ;main.c: 310:     ADC_ConversionStart();
 24237   0056A4  EC9D  F032         	call	i2_ADC_ConversionStart	;wreg free
 24238   0056A8                     
 24239                           ;main.c: 311:     adc_result_t adc_val = ADC_ConversionResultGet();
 24240   0056A8  EC43  F032         	call	i2_ADC_ConversionResultGet	;wreg free
 24241   0056AC  C001  F049         	movff	?i2_ADC_ConversionResultGet,i2lire_tension@adc_val
 24242   0056B0  C002  F04A         	movff	?i2_ADC_ConversionResultGet+1,i2lire_tension@adc_val+1
 24243   0056B4                     
 24244                           ;main.c: 313:    float tension = (adc_val * 5.f) / 4095.0f;
 24245   0056B4  0E00               	movlw	0
 24246   0056B6  6E13               	movwf	i2___flmul@a^0,c
 24247   0056B8  0E00               	movlw	0
 24248   0056BA  6E14               	movwf	(i2___flmul@a+1)^0,c
 24249   0056BC  0EA0               	movlw	160
 24250   0056BE  6E15               	movwf	(i2___flmul@a+2)^0,c
 24251   0056C0  0E40               	movlw	64
 24252   0056C2  6E16               	movwf	(i2___flmul@a+3)^0,c
 24253   0056C4  C049  F001         	movff	i2lire_tension@adc_val,i2___xxtofl@val
 24254   0056C8  C04A  F002         	movff	i2lire_tension@adc_val+1,i2___xxtofl@val+1
 24255   0056CC  0E00               	movlw	0
 24256   0056CE  BE02               	btfsc	(i2___xxtofl@val+1)^0,7,c
 24257   0056D0  0EFF               	movlw	-1
 24258   0056D2  6E03               	movwf	(i2___xxtofl@val+2)^0,c
 24259   0056D4  6E04               	movwf	(i2___xxtofl@val+3)^0,c
 24260   0056D6  0E01               	movlw	1
 24261   0056D8  ECAE  F020         	call	i2___xxtofl
 24262   0056DC  C001  F00F         	movff	?i2___xxtofl,i2___flmul@b
 24263   0056E0  C002  F010         	movff	?i2___xxtofl+1,i2___flmul@b+1
 24264   0056E4  C003  F011         	movff	?i2___xxtofl+2,i2___flmul@b+2
 24265   0056E8  C004  F012         	movff	?i2___xxtofl+3,i2___flmul@b+3
 24266   0056EC  EC22  F012         	call	i2___flmul	;wreg free
 24267   0056F0  C00F  F028         	movff	?i2___flmul,i2___fldiv@b
 24268   0056F4  C010  F029         	movff	?i2___flmul+1,i2___fldiv@b+1
 24269   0056F8  C011  F02A         	movff	?i2___flmul+2,i2___fldiv@b+2
 24270   0056FC  C012  F02B         	movff	?i2___flmul+3,i2___fldiv@b+3
 24271   005700  0E00               	movlw	0
 24272   005702  6E2C               	movwf	i2___fldiv@a^0,c
 24273   005704  0EF0               	movlw	240
 24274   005706  6E2D               	movwf	(i2___fldiv@a+1)^0,c
 24275   005708  0E7F               	movlw	127
 24276   00570A  6E2E               	movwf	(i2___fldiv@a+2)^0,c
 24277   00570C  0E45               	movlw	69
 24278   00570E  6E2F               	movwf	(i2___fldiv@a+3)^0,c
 24279   005710  EC10  F016         	call	i2___fldiv	;wreg free
 24280   005714  C028  F045         	movff	?i2___fldiv,i2lire_tension@tension
 24281   005718  C029  F046         	movff	?i2___fldiv+1,i2lire_tension@tension+1
 24282   00571C  C02A  F047         	movff	?i2___fldiv+2,i2lire_tension@tension+2
 24283   005720  C02B  F048         	movff	?i2___fldiv+3,i2lire_tension@tension+3
 24284   005724                     
 24285                           ;main.c: 314:     return tension;
 24286   005724  C045  F041         	movff	i2lire_tension@tension,?i2_lire_tension
 24287   005728  C046  F042         	movff	i2lire_tension@tension+1,?i2_lire_tension+1
 24288   00572C  C047  F043         	movff	i2lire_tension@tension+2,?i2_lire_tension+2
 24289   005730  C048  F044         	movff	i2lire_tension@tension+3,?i2_lire_tension+3
 24290   005734  0012               	return		;funcret
 24291   005736                     __end_ofi2_lire_tension:
 24292                           	callstack 0
 24293                           
 24294 ;; *************** function i2___xxtofl *****************
 24295 ;; Defined at:
 24296 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\xxtofl.c"
 24297 ;; Parameters:    Size  Location     Type
 24298 ;;  sign            1    wreg     unsigned char 
 24299 ;;  val             4    0[COMRAM] long 
 24300 ;; Auto vars:     Size  Location     Type
 24301 ;;  sign            1    8[COMRAM] unsigned char 
 24302 ;;  arg             4   10[COMRAM] unsigned long 
 24303 ;;  exp             1    9[COMRAM] unsigned char 
 24304 ;; Return value:  Size  Location     Type
 24305 ;;                  4    0[COMRAM] unsigned char 
 24306 ;; Registers used:
 24307 ;;		wreg, status,2, status,0
 24308 ;; Tracked objects:
 24309 ;;		On entry : 0/0
 24310 ;;		On exit  : 0/0
 24311 ;;		Unchanged: 0/0
 24312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24313 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24314 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24315 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24316 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24317 ;;Total ram usage:       14 bytes
 24318 ;; Hardware stack levels used: 1
 24319 ;; This function calls:
 24320 ;;		Nothing
 24321 ;; This function is called by:
 24322 ;;		i2_lire_tension
 24323 ;; This function uses a non-reentrant model
 24324 ;;
 24325                           
 24326                           	psect	text98
 24327   00415C                     __ptext98:
 24328                           	callstack 0
 24329   00415C                     i2___xxtofl:
 24330                           	callstack 15
 24331                           
 24332                           ;incstack = 0
 24333                           ;i2___xxtofl@sign stored from wreg
 24334   00415C  6E09               	movwf	i2___xxtofl@sign^0,c
 24335   00415E  5009               	movf	i2___xxtofl@sign^0,w,c
 24336   004160  B4D8               	btfsc	status,2,c
 24337   004162  EFB5  F020         	goto	i2u770_41
 24338   004166  EFB7  F020         	goto	i2u770_40
 24339   00416A                     i2u770_41:
 24340   00416A  EFD9  F020         	goto	i2l1536
 24341   00416E                     i2u770_40:
 24342   00416E  BE04               	btfsc	(i2___xxtofl@val+3)^0,7,c
 24343   004170  EFBE  F020         	goto	i2u771_40
 24344   004174  EFBC  F020         	goto	i2u771_41
 24345   004178                     i2u771_41:
 24346   004178  EFD9  F020         	goto	i2l1536
 24347   00417C                     i2u771_40:
 24348   00417C  C001  F005         	movff	i2___xxtofl@val,??i2___xxtofl
 24349   004180  C002  F006         	movff	i2___xxtofl@val+1,??i2___xxtofl+1
 24350   004184  C003  F007         	movff	i2___xxtofl@val+2,??i2___xxtofl+2
 24351   004188  C004  F008         	movff	i2___xxtofl@val+3,??i2___xxtofl+3
 24352   00418C  1E05               	comf	??i2___xxtofl^0,f,c
 24353   00418E  1E06               	comf	(??i2___xxtofl+1)^0,f,c
 24354   004190  1E07               	comf	(??i2___xxtofl+2)^0,f,c
 24355   004192  1E08               	comf	(??i2___xxtofl+3)^0,f,c
 24356   004194  2A05               	incf	??i2___xxtofl^0,f,c
 24357   004196  0E00               	movlw	0
 24358   004198  2206               	addwfc	(??i2___xxtofl+1)^0,f,c
 24359   00419A  2207               	addwfc	(??i2___xxtofl+2)^0,f,c
 24360   00419C  2208               	addwfc	(??i2___xxtofl+3)^0,f,c
 24361   00419E  C005  F00B         	movff	??i2___xxtofl,i2___xxtofl@arg
 24362   0041A2  C006  F00C         	movff	??i2___xxtofl+1,i2___xxtofl@arg+1
 24363   0041A6  C007  F00D         	movff	??i2___xxtofl+2,i2___xxtofl@arg+2
 24364   0041AA  C008  F00E         	movff	??i2___xxtofl+3,i2___xxtofl@arg+3
 24365   0041AE  EFE1  F020         	goto	i2l7012
 24366   0041B2                     i2l1536:
 24367   0041B2  C001  F00B         	movff	i2___xxtofl@val,i2___xxtofl@arg
 24368   0041B6  C002  F00C         	movff	i2___xxtofl@val+1,i2___xxtofl@arg+1
 24369   0041BA  C003  F00D         	movff	i2___xxtofl@val+2,i2___xxtofl@arg+2
 24370   0041BE  C004  F00E         	movff	i2___xxtofl@val+3,i2___xxtofl@arg+3
 24371   0041C2                     i2l7012:
 24372   0041C2  5001               	movf	i2___xxtofl@val^0,w,c
 24373   0041C4  1002               	iorwf	(i2___xxtofl@val+1)^0,w,c
 24374   0041C6  1003               	iorwf	(i2___xxtofl@val+2)^0,w,c
 24375   0041C8  1004               	iorwf	(i2___xxtofl@val+3)^0,w,c
 24376   0041CA  A4D8               	btfss	status,2,c
 24377   0041CC  EFEA  F020         	goto	i2u772_41
 24378   0041D0  EFEC  F020         	goto	i2u772_40
 24379   0041D4                     i2u772_41:
 24380   0041D4  EFF6  F020         	goto	i2l7018
 24381   0041D8                     i2u772_40:
 24382   0041D8  0E00               	movlw	0
 24383   0041DA  6E01               	movwf	?i2___xxtofl^0,c
 24384   0041DC  0E00               	movlw	0
 24385   0041DE  6E02               	movwf	(?i2___xxtofl+1)^0,c
 24386   0041E0  0E00               	movlw	0
 24387   0041E2  6E03               	movwf	(?i2___xxtofl+2)^0,c
 24388   0041E4  0E00               	movlw	0
 24389   0041E6  6E04               	movwf	(?i2___xxtofl+3)^0,c
 24390   0041E8  EF87  F021         	goto	i2l1539
 24391   0041EC                     i2l7018:
 24392   0041EC  0E96               	movlw	150
 24393   0041EE  6E0A               	movwf	i2___xxtofl@exp^0,c
 24394   0041F0  EF00  F021         	goto	i2l7022
 24395   0041F4                     i2l7020:
 24396   0041F4  2A0A               	incf	i2___xxtofl@exp^0,f,c
 24397   0041F6  90D8               	bcf	status,0,c
 24398   0041F8  320E               	rrcf	(i2___xxtofl@arg+3)^0,f,c
 24399   0041FA  320D               	rrcf	(i2___xxtofl@arg+2)^0,f,c
 24400   0041FC  320C               	rrcf	(i2___xxtofl@arg+1)^0,f,c
 24401   0041FE  320B               	rrcf	i2___xxtofl@arg^0,f,c
 24402   004200                     i2l7022:
 24403   004200  0E00               	movlw	0
 24404   004202  140B               	andwf	i2___xxtofl@arg^0,w,c
 24405   004204  6E05               	movwf	??i2___xxtofl^0,c
 24406   004206  0E00               	movlw	0
 24407   004208  140C               	andwf	(i2___xxtofl@arg+1)^0,w,c
 24408   00420A  6E06               	movwf	(??i2___xxtofl+1)^0,c
 24409   00420C  0E00               	movlw	0
 24410   00420E  140D               	andwf	(i2___xxtofl@arg+2)^0,w,c
 24411   004210  6E07               	movwf	(??i2___xxtofl+2)^0,c
 24412   004212  0EFE               	movlw	254
 24413   004214  140E               	andwf	(i2___xxtofl@arg+3)^0,w,c
 24414   004216  6E08               	movwf	(??i2___xxtofl+3)^0,c
 24415   004218  5005               	movf	??i2___xxtofl^0,w,c
 24416   00421A  1006               	iorwf	(??i2___xxtofl+1)^0,w,c
 24417   00421C  1007               	iorwf	(??i2___xxtofl+2)^0,w,c
 24418   00421E  1008               	iorwf	(??i2___xxtofl+3)^0,w,c
 24419   004220  A4D8               	btfss	status,2,c
 24420   004222  EF15  F021         	goto	i2u773_41
 24421   004226  EF17  F021         	goto	i2u773_40
 24422   00422A                     i2u773_41:
 24423   00422A  EFFA  F020         	goto	i2l7020
 24424   00422E                     i2u773_40:
 24425   00422E  EF25  F021         	goto	i2l1543
 24426   004232                     i2l7024:
 24427   004232  2A0A               	incf	i2___xxtofl@exp^0,f,c
 24428   004234  0E01               	movlw	1
 24429   004236  260B               	addwf	i2___xxtofl@arg^0,f,c
 24430   004238  0E00               	movlw	0
 24431   00423A  220C               	addwfc	(i2___xxtofl@arg+1)^0,f,c
 24432   00423C  220D               	addwfc	(i2___xxtofl@arg+2)^0,f,c
 24433   00423E  220E               	addwfc	(i2___xxtofl@arg+3)^0,f,c
 24434   004240  90D8               	bcf	status,0,c
 24435   004242  320E               	rrcf	(i2___xxtofl@arg+3)^0,f,c
 24436   004244  320D               	rrcf	(i2___xxtofl@arg+2)^0,f,c
 24437   004246  320C               	rrcf	(i2___xxtofl@arg+1)^0,f,c
 24438   004248  320B               	rrcf	i2___xxtofl@arg^0,f,c
 24439   00424A                     i2l1543:
 24440   00424A  0E00               	movlw	0
 24441   00424C  140B               	andwf	i2___xxtofl@arg^0,w,c
 24442   00424E  6E05               	movwf	??i2___xxtofl^0,c
 24443   004250  0E00               	movlw	0
 24444   004252  140C               	andwf	(i2___xxtofl@arg+1)^0,w,c
 24445   004254  6E06               	movwf	(??i2___xxtofl+1)^0,c
 24446   004256  0E00               	movlw	0
 24447   004258  140D               	andwf	(i2___xxtofl@arg+2)^0,w,c
 24448   00425A  6E07               	movwf	(??i2___xxtofl+2)^0,c
 24449   00425C  0EFF               	movlw	255
 24450   00425E  140E               	andwf	(i2___xxtofl@arg+3)^0,w,c
 24451   004260  6E08               	movwf	(??i2___xxtofl+3)^0,c
 24452   004262  5005               	movf	??i2___xxtofl^0,w,c
 24453   004264  1006               	iorwf	(??i2___xxtofl+1)^0,w,c
 24454   004266  1007               	iorwf	(??i2___xxtofl+2)^0,w,c
 24455   004268  1008               	iorwf	(??i2___xxtofl+3)^0,w,c
 24456   00426A  A4D8               	btfss	status,2,c
 24457   00426C  EF3A  F021         	goto	i2u774_41
 24458   004270  EF3C  F021         	goto	i2u774_40
 24459   004274                     i2u774_41:
 24460   004274  EF19  F021         	goto	i2l7024
 24461   004278                     i2u774_40:
 24462   004278  EF44  F021         	goto	i2l7032
 24463   00427C                     i2l7030:
 24464   00427C  060A               	decf	i2___xxtofl@exp^0,f,c
 24465   00427E  90D8               	bcf	status,0,c
 24466   004280  360B               	rlcf	i2___xxtofl@arg^0,f,c
 24467   004282  360C               	rlcf	(i2___xxtofl@arg+1)^0,f,c
 24468   004284  360D               	rlcf	(i2___xxtofl@arg+2)^0,f,c
 24469   004286  360E               	rlcf	(i2___xxtofl@arg+3)^0,f,c
 24470   004288                     i2l7032:
 24471   004288  BE0D               	btfsc	(i2___xxtofl@arg+2)^0,7,c
 24472   00428A  EF49  F021         	goto	i2u775_41
 24473   00428E  EF4B  F021         	goto	i2u775_40
 24474   004292                     i2u775_41:
 24475   004292  EF53  F021         	goto	i2l1550
 24476   004296                     i2u775_40:
 24477   004296  0E02               	movlw	2
 24478   004298  600A               	cpfslt	i2___xxtofl@exp^0,c
 24479   00429A  EF51  F021         	goto	i2u776_41
 24480   00429E  EF53  F021         	goto	i2u776_40
 24481   0042A2                     i2u776_41:
 24482   0042A2  EF3E  F021         	goto	i2l7030
 24483   0042A6                     i2u776_40:
 24484   0042A6                     i2l1550:
 24485   0042A6  B00A               	btfsc	i2___xxtofl@exp^0,0,c
 24486   0042A8  EF58  F021         	goto	i2u777_41
 24487   0042AC  EF5A  F021         	goto	i2u777_40
 24488   0042B0                     i2u777_41:
 24489   0042B0  EF5B  F021         	goto	i2l7038
 24490   0042B4                     i2u777_40:
 24491   0042B4  9E0D               	bcf	(i2___xxtofl@arg+2)^0,7,c
 24492   0042B6                     i2l7038:
 24493   0042B6  90D8               	bcf	status,0,c
 24494   0042B8  320A               	rrcf	i2___xxtofl@exp^0,f,c
 24495   0042BA  C00A  F005         	movff	i2___xxtofl@exp,??i2___xxtofl
 24496   0042BE  6A06               	clrf	(??i2___xxtofl+1)^0,c
 24497   0042C0  6A07               	clrf	(??i2___xxtofl+2)^0,c
 24498   0042C2  6A08               	clrf	(??i2___xxtofl+3)^0,c
 24499   0042C4  C005  F008         	movff	??i2___xxtofl,??i2___xxtofl+3
 24500   0042C8  6A07               	clrf	(??i2___xxtofl+2)^0,c
 24501   0042CA  6A06               	clrf	(??i2___xxtofl+1)^0,c
 24502   0042CC  6A05               	clrf	??i2___xxtofl^0,c
 24503   0042CE  5005               	movf	??i2___xxtofl^0,w,c
 24504   0042D0  120B               	iorwf	i2___xxtofl@arg^0,f,c
 24505   0042D2  5006               	movf	(??i2___xxtofl+1)^0,w,c
 24506   0042D4  120C               	iorwf	(i2___xxtofl@arg+1)^0,f,c
 24507   0042D6  5007               	movf	(??i2___xxtofl+2)^0,w,c
 24508   0042D8  120D               	iorwf	(i2___xxtofl@arg+2)^0,f,c
 24509   0042DA  5008               	movf	(??i2___xxtofl+3)^0,w,c
 24510   0042DC  120E               	iorwf	(i2___xxtofl@arg+3)^0,f,c
 24511   0042DE  5009               	movf	i2___xxtofl@sign^0,w,c
 24512   0042E0  B4D8               	btfsc	status,2,c
 24513   0042E2  EF75  F021         	goto	i2u778_41
 24514   0042E6  EF77  F021         	goto	i2u778_40
 24515   0042EA                     i2u778_41:
 24516   0042EA  EF7F  F021         	goto	i2l7048
 24517   0042EE                     i2u778_40:
 24518   0042EE  BE04               	btfsc	(i2___xxtofl@val+3)^0,7,c
 24519   0042F0  EF7E  F021         	goto	i2u779_40
 24520   0042F4  EF7C  F021         	goto	i2u779_41
 24521   0042F8                     i2u779_41:
 24522   0042F8  EF7F  F021         	goto	i2l7048
 24523   0042FC                     i2u779_40:
 24524   0042FC  8E0E               	bsf	(i2___xxtofl@arg+3)^0,7,c
 24525   0042FE                     i2l7048:
 24526   0042FE  C00B  F001         	movff	i2___xxtofl@arg,?i2___xxtofl
 24527   004302  C00C  F002         	movff	i2___xxtofl@arg+1,?i2___xxtofl+1
 24528   004306  C00D  F003         	movff	i2___xxtofl@arg+2,?i2___xxtofl+2
 24529   00430A  C00E  F004         	movff	i2___xxtofl@arg+3,?i2___xxtofl+3
 24530   00430E                     i2l1539:
 24531   00430E  0012               	return		;funcret
 24532   004310                     __end_ofi2___xxtofl:
 24533                           	callstack 0
 24534                           
 24535 ;; *************** function i2___flmul *****************
 24536 ;; Defined at:
 24537 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\sprcmul.c"
 24538 ;; Parameters:    Size  Location     Type
 24539 ;;  b               4   14[COMRAM] unsigned char 
 24540 ;;  a               4   18[COMRAM] unsigned char 
 24541 ;; Auto vars:     Size  Location     Type
 24542 ;;  prod            4   33[COMRAM] struct .
 24543 ;;  grs             4   27[COMRAM] unsigned long 
 24544 ;;  temp            2   37[COMRAM] struct .
 24545 ;;  bexp            1   32[COMRAM] unsigned char 
 24546 ;;  aexp            1   31[COMRAM] unsigned char 
 24547 ;;  sign            1   26[COMRAM] unsigned char 
 24548 ;; Return value:  Size  Location     Type
 24549 ;;                  4   14[COMRAM] unsigned char 
 24550 ;; Registers used:
 24551 ;;		wreg, status,2, status,0, prodl, prodh
 24552 ;; Tracked objects:
 24553 ;;		On entry : 0/0
 24554 ;;		On exit  : 0/0
 24555 ;;		Unchanged: 0/0
 24556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24557 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24558 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24559 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24560 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24561 ;;Total ram usage:       25 bytes
 24562 ;; Hardware stack levels used: 1
 24563 ;; This function calls:
 24564 ;;		Nothing
 24565 ;; This function is called by:
 24566 ;;		i2_lire_tension
 24567 ;;		i2_efgtoa
 24568 ;; This function uses a non-reentrant model
 24569 ;;
 24570                           
 24571                           	psect	text99
 24572   002444                     __ptext99:
 24573                           	callstack 0
 24574   002444                     i2___flmul:
 24575                           	callstack 12
 24576   002444  5012               	movf	(i2___flmul@b+3)^0,w,c
 24577   002446  0B80               	andlw	128
 24578   002448  6E1B               	movwf	i2___flmul@sign^0,c
 24579   00244A  5012               	movf	(i2___flmul@b+3)^0,w,c
 24580   00244C  2412               	addwf	(i2___flmul@b+3)^0,w,c
 24581   00244E  6E21               	movwf	i2___flmul@bexp^0,c
 24582   002450  AE11               	btfss	(i2___flmul@b+2)^0,7,c
 24583   002452  EF2D  F012         	goto	i2u546_41
 24584   002456  EF2F  F012         	goto	i2u546_40
 24585   00245A                     i2u546_41:
 24586   00245A  EF30  F012         	goto	i2l5652
 24587   00245E                     i2u546_40:
 24588   00245E  8021               	bsf	i2___flmul@bexp^0,0,c
 24589   002460                     i2l5652:
 24590   002460  5021               	movf	i2___flmul@bexp^0,w,c
 24591   002462  B4D8               	btfsc	status,2,c
 24592   002464  EF36  F012         	goto	i2u547_41
 24593   002468  EF38  F012         	goto	i2u547_40
 24594   00246C                     i2u547_41:
 24595   00246C  EF4B  F012         	goto	i2l5660
 24596   002470                     i2u547_40:
 24597   002470  2821               	incf	i2___flmul@bexp^0,w,c
 24598   002472  A4D8               	btfss	status,2,c
 24599   002474  EF3E  F012         	goto	i2u548_41
 24600   002478  EF40  F012         	goto	i2u548_40
 24601   00247C                     i2u548_41:
 24602   00247C  EF48  F012         	goto	i2l5658
 24603   002480                     i2u548_40:
 24604   002480  0E00               	movlw	0
 24605   002482  6E0F               	movwf	i2___flmul@b^0,c
 24606   002484  0E00               	movlw	0
 24607   002486  6E10               	movwf	(i2___flmul@b+1)^0,c
 24608   002488  0E00               	movlw	0
 24609   00248A  6E11               	movwf	(i2___flmul@b+2)^0,c
 24610   00248C  0E00               	movlw	0
 24611   00248E  6E12               	movwf	(i2___flmul@b+3)^0,c
 24612   002490                     i2l5658:
 24613   002490  8E11               	bsf	(i2___flmul@b+2)^0,7,c
 24614   002492  EF53  F012         	goto	i2l5662
 24615   002496                     i2l5660:
 24616   002496  0E00               	movlw	0
 24617   002498  6E0F               	movwf	i2___flmul@b^0,c
 24618   00249A  0E00               	movlw	0
 24619   00249C  6E10               	movwf	(i2___flmul@b+1)^0,c
 24620   00249E  0E00               	movlw	0
 24621   0024A0  6E11               	movwf	(i2___flmul@b+2)^0,c
 24622   0024A2  0E00               	movlw	0
 24623   0024A4  6E12               	movwf	(i2___flmul@b+3)^0,c
 24624   0024A6                     i2l5662:
 24625   0024A6  5016               	movf	(i2___flmul@a+3)^0,w,c
 24626   0024A8  0B80               	andlw	128
 24627   0024AA  1A1B               	xorwf	i2___flmul@sign^0,f,c
 24628   0024AC  5016               	movf	(i2___flmul@a+3)^0,w,c
 24629   0024AE  2416               	addwf	(i2___flmul@a+3)^0,w,c
 24630   0024B0  6E20               	movwf	i2___flmul@aexp^0,c
 24631   0024B2  AE15               	btfss	(i2___flmul@a+2)^0,7,c
 24632   0024B4  EF5E  F012         	goto	i2u549_41
 24633   0024B8  EF60  F012         	goto	i2u549_40
 24634   0024BC                     i2u549_41:
 24635   0024BC  EF61  F012         	goto	i2l5670
 24636   0024C0                     i2u549_40:
 24637   0024C0  8020               	bsf	i2___flmul@aexp^0,0,c
 24638   0024C2                     i2l5670:
 24639   0024C2  5020               	movf	i2___flmul@aexp^0,w,c
 24640   0024C4  B4D8               	btfsc	status,2,c
 24641   0024C6  EF67  F012         	goto	i2u550_41
 24642   0024CA  EF69  F012         	goto	i2u550_40
 24643   0024CE                     i2u550_41:
 24644   0024CE  EF7C  F012         	goto	i2l5678
 24645   0024D2                     i2u550_40:
 24646   0024D2  2820               	incf	i2___flmul@aexp^0,w,c
 24647   0024D4  A4D8               	btfss	status,2,c
 24648   0024D6  EF6F  F012         	goto	i2u551_41
 24649   0024DA  EF71  F012         	goto	i2u551_40
 24650   0024DE                     i2u551_41:
 24651   0024DE  EF79  F012         	goto	i2l5676
 24652   0024E2                     i2u551_40:
 24653   0024E2  0E00               	movlw	0
 24654   0024E4  6E13               	movwf	i2___flmul@a^0,c
 24655   0024E6  0E00               	movlw	0
 24656   0024E8  6E14               	movwf	(i2___flmul@a+1)^0,c
 24657   0024EA  0E00               	movlw	0
 24658   0024EC  6E15               	movwf	(i2___flmul@a+2)^0,c
 24659   0024EE  0E00               	movlw	0
 24660   0024F0  6E16               	movwf	(i2___flmul@a+3)^0,c
 24661   0024F2                     i2l5676:
 24662   0024F2  8E15               	bsf	(i2___flmul@a+2)^0,7,c
 24663   0024F4  EF84  F012         	goto	i2l1495
 24664   0024F8                     i2l5678:
 24665   0024F8  0E00               	movlw	0
 24666   0024FA  6E13               	movwf	i2___flmul@a^0,c
 24667   0024FC  0E00               	movlw	0
 24668   0024FE  6E14               	movwf	(i2___flmul@a+1)^0,c
 24669   002500  0E00               	movlw	0
 24670   002502  6E15               	movwf	(i2___flmul@a+2)^0,c
 24671   002504  0E00               	movlw	0
 24672   002506  6E16               	movwf	(i2___flmul@a+3)^0,c
 24673   002508                     i2l1495:
 24674   002508  5020               	movf	i2___flmul@aexp^0,w,c
 24675   00250A  B4D8               	btfsc	status,2,c
 24676   00250C  EF8A  F012         	goto	i2u552_41
 24677   002510  EF8C  F012         	goto	i2u552_40
 24678   002514                     i2u552_41:
 24679   002514  EF94  F012         	goto	i2l5682
 24680   002518                     i2u552_40:
 24681   002518  5021               	movf	i2___flmul@bexp^0,w,c
 24682   00251A  A4D8               	btfss	status,2,c
 24683   00251C  EF92  F012         	goto	i2u553_41
 24684   002520  EF94  F012         	goto	i2u553_40
 24685   002524                     i2u553_41:
 24686   002524  EF9E  F012         	goto	i2l5686
 24687   002528                     i2u553_40:
 24688   002528                     i2l5682:
 24689   002528  0E00               	movlw	0
 24690   00252A  6E0F               	movwf	?i2___flmul^0,c
 24691   00252C  0E00               	movlw	0
 24692   00252E  6E10               	movwf	(?i2___flmul+1)^0,c
 24693   002530  0E00               	movlw	0
 24694   002532  6E11               	movwf	(?i2___flmul+2)^0,c
 24695   002534  0E00               	movlw	0
 24696   002536  6E12               	movwf	(?i2___flmul+3)^0,c
 24697   002538  EF46  F014         	goto	i2l1499
 24698   00253C                     i2l5686:
 24699   00253C  5015               	movf	(i2___flmul@a+2)^0,w,c
 24700   00253E  020F               	mulwf	i2___flmul@b^0,c
 24701   002540  006F FFCC  F026    	movff	prodl,i2___flmul@temp
 24702   002546  006F FFD0  F027    	movff	prodh,i2___flmul@temp+1
 24703   00254C  5026               	movf	i2___flmul@temp^0,w,c
 24704   00254E  6E1C               	movwf	i2___flmul@grs^0,c
 24705   002550  6A1D               	clrf	(i2___flmul@grs+1)^0,c
 24706   002552  6A1E               	clrf	(i2___flmul@grs+2)^0,c
 24707   002554  6A1F               	clrf	(i2___flmul@grs+3)^0,c
 24708   002556  5027               	movf	(i2___flmul@temp+1)^0,w,c
 24709   002558  6E22               	movwf	i2___flmul@prod^0,c
 24710   00255A  6A23               	clrf	(i2___flmul@prod+1)^0,c
 24711   00255C  6A24               	clrf	(i2___flmul@prod+2)^0,c
 24712   00255E  6A25               	clrf	(i2___flmul@prod+3)^0,c
 24713   002560  5014               	movf	(i2___flmul@a+1)^0,w,c
 24714   002562  0210               	mulwf	(i2___flmul@b+1)^0,c
 24715   002564  006F FFCC  F026    	movff	prodl,i2___flmul@temp
 24716   00256A  006F FFD0  F027    	movff	prodh,i2___flmul@temp+1
 24717   002570  5026               	movf	i2___flmul@temp^0,w,c
 24718   002572  261C               	addwf	i2___flmul@grs^0,f,c
 24719   002574  0E00               	movlw	0
 24720   002576  221D               	addwfc	(i2___flmul@grs+1)^0,f,c
 24721   002578  221E               	addwfc	(i2___flmul@grs+2)^0,f,c
 24722   00257A  221F               	addwfc	(i2___flmul@grs+3)^0,f,c
 24723   00257C  5027               	movf	(i2___flmul@temp+1)^0,w,c
 24724   00257E  2622               	addwf	i2___flmul@prod^0,f,c
 24725   002580  0E00               	movlw	0
 24726   002582  2223               	addwfc	(i2___flmul@prod+1)^0,f,c
 24727   002584  2224               	addwfc	(i2___flmul@prod+2)^0,f,c
 24728   002586  2225               	addwfc	(i2___flmul@prod+3)^0,f,c
 24729   002588  5013               	movf	i2___flmul@a^0,w,c
 24730   00258A  0211               	mulwf	(i2___flmul@b+2)^0,c
 24731   00258C  006F FFCC  F026    	movff	prodl,i2___flmul@temp
 24732   002592  006F FFD0  F027    	movff	prodh,i2___flmul@temp+1
 24733   002598  5026               	movf	i2___flmul@temp^0,w,c
 24734   00259A  261C               	addwf	i2___flmul@grs^0,f,c
 24735   00259C  0E00               	movlw	0
 24736   00259E  221D               	addwfc	(i2___flmul@grs+1)^0,f,c
 24737   0025A0  221E               	addwfc	(i2___flmul@grs+2)^0,f,c
 24738   0025A2  221F               	addwfc	(i2___flmul@grs+3)^0,f,c
 24739   0025A4  5027               	movf	(i2___flmul@temp+1)^0,w,c
 24740   0025A6  2622               	addwf	i2___flmul@prod^0,f,c
 24741   0025A8  0E00               	movlw	0
 24742   0025AA  2223               	addwfc	(i2___flmul@prod+1)^0,f,c
 24743   0025AC  2224               	addwfc	(i2___flmul@prod+2)^0,f,c
 24744   0025AE  2225               	addwfc	(i2___flmul@prod+3)^0,f,c
 24745   0025B0  C01E  F01F         	movff	i2___flmul@grs+2,i2___flmul@grs+3
 24746   0025B4  C01D  F01E         	movff	i2___flmul@grs+1,i2___flmul@grs+2
 24747   0025B8  C01C  F01D         	movff	i2___flmul@grs,i2___flmul@grs+1
 24748   0025BC  6A1C               	clrf	i2___flmul@grs^0,c
 24749   0025BE  5013               	movf	i2___flmul@a^0,w,c
 24750   0025C0  0210               	mulwf	(i2___flmul@b+1)^0,c
 24751   0025C2  006F FFCC  F026    	movff	prodl,i2___flmul@temp
 24752   0025C8  006F FFD0  F027    	movff	prodh,i2___flmul@temp+1
 24753   0025CE  5026               	movf	i2___flmul@temp^0,w,c
 24754   0025D0  261C               	addwf	i2___flmul@grs^0,f,c
 24755   0025D2  5027               	movf	(i2___flmul@temp+1)^0,w,c
 24756   0025D4  221D               	addwfc	(i2___flmul@grs+1)^0,f,c
 24757   0025D6  0E00               	movlw	0
 24758   0025D8  221E               	addwfc	(i2___flmul@grs+2)^0,f,c
 24759   0025DA  0E00               	movlw	0
 24760   0025DC  221F               	addwfc	(i2___flmul@grs+3)^0,f,c
 24761   0025DE  5014               	movf	(i2___flmul@a+1)^0,w,c
 24762   0025E0  020F               	mulwf	i2___flmul@b^0,c
 24763   0025E2  006F FFCC  F026    	movff	prodl,i2___flmul@temp
 24764   0025E8  006F FFD0  F027    	movff	prodh,i2___flmul@temp+1
 24765   0025EE  5026               	movf	i2___flmul@temp^0,w,c
 24766   0025F0  261C               	addwf	i2___flmul@grs^0,f,c
 24767   0025F2  5027               	movf	(i2___flmul@temp+1)^0,w,c
 24768   0025F4  221D               	addwfc	(i2___flmul@grs+1)^0,f,c
 24769   0025F6  0E00               	movlw	0
 24770   0025F8  221E               	addwfc	(i2___flmul@grs+2)^0,f,c
 24771   0025FA  0E00               	movlw	0
 24772   0025FC  221F               	addwfc	(i2___flmul@grs+3)^0,f,c
 24773   0025FE  C01E  F01F         	movff	i2___flmul@grs+2,i2___flmul@grs+3
 24774   002602  C01D  F01E         	movff	i2___flmul@grs+1,i2___flmul@grs+2
 24775   002606  C01C  F01D         	movff	i2___flmul@grs,i2___flmul@grs+1
 24776   00260A  6A1C               	clrf	i2___flmul@grs^0,c
 24777   00260C  5013               	movf	i2___flmul@a^0,w,c
 24778   00260E  020F               	mulwf	i2___flmul@b^0,c
 24779   002610  006F FFCC  F026    	movff	prodl,i2___flmul@temp
 24780   002616  006F FFD0  F027    	movff	prodh,i2___flmul@temp+1
 24781   00261C  5026               	movf	i2___flmul@temp^0,w,c
 24782   00261E  261C               	addwf	i2___flmul@grs^0,f,c
 24783   002620  5027               	movf	(i2___flmul@temp+1)^0,w,c
 24784   002622  221D               	addwfc	(i2___flmul@grs+1)^0,f,c
 24785   002624  0E00               	movlw	0
 24786   002626  221E               	addwfc	(i2___flmul@grs+2)^0,f,c
 24787   002628  0E00               	movlw	0
 24788   00262A  221F               	addwfc	(i2___flmul@grs+3)^0,f,c
 24789   00262C  5015               	movf	(i2___flmul@a+2)^0,w,c
 24790   00262E  0210               	mulwf	(i2___flmul@b+1)^0,c
 24791   002630  006F FFCC  F026    	movff	prodl,i2___flmul@temp
 24792   002636  006F FFD0  F027    	movff	prodh,i2___flmul@temp+1
 24793   00263C  5026               	movf	i2___flmul@temp^0,w,c
 24794   00263E  2622               	addwf	i2___flmul@prod^0,f,c
 24795   002640  5027               	movf	(i2___flmul@temp+1)^0,w,c
 24796   002642  2223               	addwfc	(i2___flmul@prod+1)^0,f,c
 24797   002644  0E00               	movlw	0
 24798   002646  2224               	addwfc	(i2___flmul@prod+2)^0,f,c
 24799   002648  0E00               	movlw	0
 24800   00264A  2225               	addwfc	(i2___flmul@prod+3)^0,f,c
 24801   00264C  5014               	movf	(i2___flmul@a+1)^0,w,c
 24802   00264E  0211               	mulwf	(i2___flmul@b+2)^0,c
 24803   002650  006F FFCC  F026    	movff	prodl,i2___flmul@temp
 24804   002656  006F FFD0  F027    	movff	prodh,i2___flmul@temp+1
 24805   00265C  5026               	movf	i2___flmul@temp^0,w,c
 24806   00265E  2622               	addwf	i2___flmul@prod^0,f,c
 24807   002660  5027               	movf	(i2___flmul@temp+1)^0,w,c
 24808   002662  2223               	addwfc	(i2___flmul@prod+1)^0,f,c
 24809   002664  0E00               	movlw	0
 24810   002666  2224               	addwfc	(i2___flmul@prod+2)^0,f,c
 24811   002668  0E00               	movlw	0
 24812   00266A  2225               	addwfc	(i2___flmul@prod+3)^0,f,c
 24813   00266C  5015               	movf	(i2___flmul@a+2)^0,w,c
 24814   00266E  0211               	mulwf	(i2___flmul@b+2)^0,c
 24815   002670  006F FFCC  F026    	movff	prodl,i2___flmul@temp
 24816   002676  006F FFD0  F027    	movff	prodh,i2___flmul@temp+1
 24817   00267C  5026               	movf	i2___flmul@temp^0,w,c
 24818   00267E  6E17               	movwf	??i2___flmul^0,c
 24819   002680  5027               	movf	(i2___flmul@temp+1)^0,w,c
 24820   002682  6E18               	movwf	(??i2___flmul+1)^0,c
 24821   002684  6A19               	clrf	(??i2___flmul+2)^0,c
 24822   002686  6A1A               	clrf	(??i2___flmul+3)^0,c
 24823   002688  C019  F01A         	movff	??i2___flmul+2,??i2___flmul+3
 24824   00268C  C018  F019         	movff	??i2___flmul+1,??i2___flmul+2
 24825   002690  C017  F018         	movff	??i2___flmul,??i2___flmul+1
 24826   002694  6A17               	clrf	??i2___flmul^0,c
 24827   002696  5017               	movf	??i2___flmul^0,w,c
 24828   002698  2622               	addwf	i2___flmul@prod^0,f,c
 24829   00269A  5018               	movf	(??i2___flmul+1)^0,w,c
 24830   00269C  2223               	addwfc	(i2___flmul@prod+1)^0,f,c
 24831   00269E  5019               	movf	(??i2___flmul+2)^0,w,c
 24832   0026A0  2224               	addwfc	(i2___flmul@prod+2)^0,f,c
 24833   0026A2  501A               	movf	(??i2___flmul+3)^0,w,c
 24834   0026A4  2225               	addwfc	(i2___flmul@prod+3)^0,f,c
 24835   0026A6  C01C  F017         	movff	i2___flmul@grs,??i2___flmul
 24836   0026AA  C01D  F018         	movff	i2___flmul@grs+1,??i2___flmul+1
 24837   0026AE  C01E  F019         	movff	i2___flmul@grs+2,??i2___flmul+2
 24838   0026B2  C01F  F01A         	movff	i2___flmul@grs+3,??i2___flmul+3
 24839   0026B6  0E19               	movlw	25
 24840   0026B8  EF63  F013         	goto	i2u554_40
 24841   0026BC                     i2u554_45:
 24842   0026BC  90D8               	bcf	status,0,c
 24843   0026BE  321A               	rrcf	(??i2___flmul+3)^0,f,c
 24844   0026C0  3219               	rrcf	(??i2___flmul+2)^0,f,c
 24845   0026C2  3218               	rrcf	(??i2___flmul+1)^0,f,c
 24846   0026C4  3217               	rrcf	??i2___flmul^0,f,c
 24847   0026C6                     i2u554_40:
 24848   0026C6  2EE8               	decfsz	wreg,f,c
 24849   0026C8  EF5E  F013         	goto	i2u554_45
 24850   0026CC  5017               	movf	??i2___flmul^0,w,c
 24851   0026CE  2622               	addwf	i2___flmul@prod^0,f,c
 24852   0026D0  5018               	movf	(??i2___flmul+1)^0,w,c
 24853   0026D2  2223               	addwfc	(i2___flmul@prod+1)^0,f,c
 24854   0026D4  5019               	movf	(??i2___flmul+2)^0,w,c
 24855   0026D6  2224               	addwfc	(i2___flmul@prod+2)^0,f,c
 24856   0026D8  501A               	movf	(??i2___flmul+3)^0,w,c
 24857   0026DA  2225               	addwfc	(i2___flmul@prod+3)^0,f,c
 24858   0026DC  C01E  F01F         	movff	i2___flmul@grs+2,i2___flmul@grs+3
 24859   0026E0  C01D  F01E         	movff	i2___flmul@grs+1,i2___flmul@grs+2
 24860   0026E4  C01C  F01D         	movff	i2___flmul@grs,i2___flmul@grs+1
 24861   0026E8  6A1C               	clrf	i2___flmul@grs^0,c
 24862   0026EA  5020               	movf	i2___flmul@aexp^0,w,c
 24863   0026EC  C021  F017         	movff	i2___flmul@bexp,??i2___flmul
 24864   0026F0  6A18               	clrf	(??i2___flmul+1)^0,c
 24865   0026F2  2617               	addwf	??i2___flmul^0,f,c
 24866   0026F4  0E00               	movlw	0
 24867   0026F6  2218               	addwfc	(??i2___flmul+1)^0,f,c
 24868   0026F8  0E82               	movlw	130
 24869   0026FA  2417               	addwf	??i2___flmul^0,w,c
 24870   0026FC  6E26               	movwf	i2___flmul@temp^0,c
 24871   0026FE  0EFF               	movlw	255
 24872   002700  2018               	addwfc	(??i2___flmul+1)^0,w,c
 24873   002702  6E27               	movwf	(i2___flmul@temp+1)^0,c
 24874   002704  EF99  F013         	goto	i2l5734
 24875   002708                     i2l5728:
 24876   002708  90D8               	bcf	status,0,c
 24877   00270A  3622               	rlcf	i2___flmul@prod^0,f,c
 24878   00270C  3623               	rlcf	(i2___flmul@prod+1)^0,f,c
 24879   00270E  3624               	rlcf	(i2___flmul@prod+2)^0,f,c
 24880   002710  3625               	rlcf	(i2___flmul@prod+3)^0,f,c
 24881   002712  AE1F               	btfss	(i2___flmul@grs+3)^0,7,c
 24882   002714  EF8E  F013         	goto	i2u555_41
 24883   002718  EF90  F013         	goto	i2u555_40
 24884   00271C                     i2u555_41:
 24885   00271C  EF91  F013         	goto	i2l1502
 24886   002720                     i2u555_40:
 24887   002720  8022               	bsf	i2___flmul@prod^0,0,c
 24888   002722                     i2l1502:
 24889   002722  90D8               	bcf	status,0,c
 24890   002724  361C               	rlcf	i2___flmul@grs^0,f,c
 24891   002726  361D               	rlcf	(i2___flmul@grs+1)^0,f,c
 24892   002728  361E               	rlcf	(i2___flmul@grs+2)^0,f,c
 24893   00272A  361F               	rlcf	(i2___flmul@grs+3)^0,f,c
 24894   00272C  0626               	decf	i2___flmul@temp^0,f,c
 24895   00272E  A0D8               	btfss	status,0,c
 24896   002730  0627               	decf	(i2___flmul@temp+1)^0,f,c
 24897   002732                     i2l5734:
 24898   002732  AE24               	btfss	(i2___flmul@prod+2)^0,7,c
 24899   002734  EF9E  F013         	goto	i2u556_41
 24900   002738  EFA0  F013         	goto	i2u556_40
 24901   00273C                     i2u556_41:
 24902   00273C  EF84  F013         	goto	i2l5728
 24903   002740                     i2u556_40:
 24904   002740  6A20               	clrf	i2___flmul@aexp^0,c
 24905   002742  AE1F               	btfss	(i2___flmul@grs+3)^0,7,c
 24906   002744  EFA6  F013         	goto	i2u557_41
 24907   002748  EFA8  F013         	goto	i2u557_40
 24908   00274C                     i2u557_41:
 24909   00274C  EFCC  F013         	goto	i2l1504
 24910   002750                     i2u557_40:
 24911   002750  0EFF               	movlw	255
 24912   002752  141C               	andwf	i2___flmul@grs^0,w,c
 24913   002754  6E17               	movwf	??i2___flmul^0,c
 24914   002756  0EFF               	movlw	255
 24915   002758  141D               	andwf	(i2___flmul@grs+1)^0,w,c
 24916   00275A  6E18               	movwf	(??i2___flmul+1)^0,c
 24917   00275C  0EFF               	movlw	255
 24918   00275E  141E               	andwf	(i2___flmul@grs+2)^0,w,c
 24919   002760  6E19               	movwf	(??i2___flmul+2)^0,c
 24920   002762  0E7F               	movlw	127
 24921   002764  141F               	andwf	(i2___flmul@grs+3)^0,w,c
 24922   002766  6E1A               	movwf	(??i2___flmul+3)^0,c
 24923   002768  5017               	movf	??i2___flmul^0,w,c
 24924   00276A  1018               	iorwf	(??i2___flmul+1)^0,w,c
 24925   00276C  1019               	iorwf	(??i2___flmul+2)^0,w,c
 24926   00276E  101A               	iorwf	(??i2___flmul+3)^0,w,c
 24927   002770  B4D8               	btfsc	status,2,c
 24928   002772  EFBD  F013         	goto	i2u558_41
 24929   002776  EFBF  F013         	goto	i2u558_40
 24930   00277A                     i2u558_41:
 24931   00277A  EFC3  F013         	goto	i2l1505
 24932   00277E                     i2u558_40:
 24933   00277E                     i2l5738:
 24934   00277E  0E01               	movlw	1
 24935   002780  6E20               	movwf	i2___flmul@aexp^0,c
 24936   002782  EFCC  F013         	goto	i2l1504
 24937   002786                     i2l1505:
 24938   002786  A022               	btfss	i2___flmul@prod^0,0,c
 24939   002788  EFC8  F013         	goto	i2u559_41
 24940   00278C  EFCA  F013         	goto	i2u559_40
 24941   002790                     i2u559_41:
 24942   002790  EFCC  F013         	goto	i2l1504
 24943   002794                     i2u559_40:
 24944   002794  EFBF  F013         	goto	i2l5738
 24945   002798                     i2l1504:
 24946   002798  5020               	movf	i2___flmul@aexp^0,w,c
 24947   00279A  B4D8               	btfsc	status,2,c
 24948   00279C  EFD2  F013         	goto	i2u560_41
 24949   0027A0  EFD4  F013         	goto	i2u560_40
 24950   0027A4                     i2u560_41:
 24951   0027A4  EFF8  F013         	goto	i2l5750
 24952   0027A8                     i2u560_40:
 24953   0027A8  0E01               	movlw	1
 24954   0027AA  2622               	addwf	i2___flmul@prod^0,f,c
 24955   0027AC  0E00               	movlw	0
 24956   0027AE  2223               	addwfc	(i2___flmul@prod+1)^0,f,c
 24957   0027B0  2224               	addwfc	(i2___flmul@prod+2)^0,f,c
 24958   0027B2  2225               	addwfc	(i2___flmul@prod+3)^0,f,c
 24959   0027B4  A025               	btfss	(i2___flmul@prod+3)^0,0,c
 24960   0027B6  EFDF  F013         	goto	i2u561_41
 24961   0027BA  EFE1  F013         	goto	i2u561_40
 24962   0027BE                     i2u561_41:
 24963   0027BE  EFF8  F013         	goto	i2l5750
 24964   0027C2                     i2u561_40:
 24965   0027C2  C022  F017         	movff	i2___flmul@prod,??i2___flmul
 24966   0027C6  C023  F018         	movff	i2___flmul@prod+1,??i2___flmul+1
 24967   0027CA  C024  F019         	movff	i2___flmul@prod+2,??i2___flmul+2
 24968   0027CE  C025  F01A         	movff	i2___flmul@prod+3,??i2___flmul+3
 24969   0027D2  341A               	rlcf	(??i2___flmul+3)^0,w,c
 24970   0027D4  321A               	rrcf	(??i2___flmul+3)^0,f,c
 24971   0027D6  3219               	rrcf	(??i2___flmul+2)^0,f,c
 24972   0027D8  3218               	rrcf	(??i2___flmul+1)^0,f,c
 24973   0027DA  3217               	rrcf	??i2___flmul^0,f,c
 24974   0027DC  C017  F022         	movff	??i2___flmul,i2___flmul@prod
 24975   0027E0  C018  F023         	movff	??i2___flmul+1,i2___flmul@prod+1
 24976   0027E4  C019  F024         	movff	??i2___flmul+2,i2___flmul@prod+2
 24977   0027E8  C01A  F025         	movff	??i2___flmul+3,i2___flmul@prod+3
 24978   0027EC  4A26               	infsnz	i2___flmul@temp^0,f,c
 24979   0027EE  2A27               	incf	(i2___flmul@temp+1)^0,f,c
 24980   0027F0                     i2l5750:
 24981   0027F0  BE27               	btfsc	(i2___flmul@temp+1)^0,7,c
 24982   0027F2  EF03  F014         	goto	i2u562_41
 24983   0027F6  5027               	movf	(i2___flmul@temp+1)^0,w,c
 24984   0027F8  E108               	bnz	i2u562_40
 24985   0027FA  2826               	incf	i2___flmul@temp^0,w,c
 24986   0027FC  A0D8               	btfss	status,0,c
 24987   0027FE  EF03  F014         	goto	i2u562_41
 24988   002802  EF05  F014         	goto	i2u562_40
 24989   002806                     i2u562_41:
 24990   002806  EF0F  F014         	goto	i2l5754
 24991   00280A                     i2u562_40:
 24992   00280A  0E00               	movlw	0
 24993   00280C  6E22               	movwf	i2___flmul@prod^0,c
 24994   00280E  0E00               	movlw	0
 24995   002810  6E23               	movwf	(i2___flmul@prod+1)^0,c
 24996   002812  0E80               	movlw	128
 24997   002814  6E24               	movwf	(i2___flmul@prod+2)^0,c
 24998   002816  0E7F               	movlw	127
 24999   002818  6E25               	movwf	(i2___flmul@prod+3)^0,c
 25000   00281A  EF3C  F014         	goto	i2l5768
 25001   00281E                     i2l5754:
 25002   00281E  BE27               	btfsc	(i2___flmul@temp+1)^0,7,c
 25003   002820  EF1C  F014         	goto	i2u563_40
 25004   002824  5027               	movf	(i2___flmul@temp+1)^0,w,c
 25005   002826  E106               	bnz	i2u563_41
 25006   002828  0426               	decf	i2___flmul@temp^0,w,c
 25007   00282A  B0D8               	btfsc	status,0,c
 25008   00282C  EF1A  F014         	goto	i2u563_41
 25009   002830  EF1C  F014         	goto	i2u563_40
 25010   002834                     i2u563_41:
 25011   002834  EF27  F014         	goto	i2l1512
 25012   002838                     i2u563_40:
 25013   002838  0E00               	movlw	0
 25014   00283A  6E22               	movwf	i2___flmul@prod^0,c
 25015   00283C  0E00               	movlw	0
 25016   00283E  6E23               	movwf	(i2___flmul@prod+1)^0,c
 25017   002840  0E00               	movlw	0
 25018   002842  6E24               	movwf	(i2___flmul@prod+2)^0,c
 25019   002844  0E00               	movlw	0
 25020   002846  6E25               	movwf	(i2___flmul@prod+3)^0,c
 25021   002848  6A1B               	clrf	i2___flmul@sign^0,c
 25022   00284A  EF3C  F014         	goto	i2l5768
 25023   00284E                     i2l1512:
 25024   00284E  C026  F021         	movff	i2___flmul@temp,i2___flmul@bexp
 25025   002852  0EFF               	movlw	255
 25026   002854  1622               	andwf	i2___flmul@prod^0,f,c
 25027   002856  0EFF               	movlw	255
 25028   002858  1623               	andwf	(i2___flmul@prod+1)^0,f,c
 25029   00285A  0E7F               	movlw	127
 25030   00285C  1624               	andwf	(i2___flmul@prod+2)^0,f,c
 25031   00285E  0E00               	movlw	0
 25032   002860  1625               	andwf	(i2___flmul@prod+3)^0,f,c
 25033   002862  A021               	btfss	i2___flmul@bexp^0,0,c
 25034   002864  EF36  F014         	goto	i2u564_41
 25035   002868  EF38  F014         	goto	i2u564_40
 25036   00286C                     i2u564_41:
 25037   00286C  EF39  F014         	goto	i2l5766
 25038   002870                     i2u564_40:
 25039   002870  8E24               	bsf	(i2___flmul@prod+2)^0,7,c
 25040   002872                     i2l5766:
 25041   002872  90D8               	bcf	status,0,c
 25042   002874  3021               	rrcf	i2___flmul@bexp^0,w,c
 25043   002876  6E25               	movwf	(i2___flmul@prod+3)^0,c
 25044   002878                     i2l5768:
 25045   002878  501B               	movf	i2___flmul@sign^0,w,c
 25046   00287A  1225               	iorwf	(i2___flmul@prod+3)^0,f,c
 25047   00287C  C022  F00F         	movff	i2___flmul@prod,?i2___flmul
 25048   002880  C023  F010         	movff	i2___flmul@prod+1,?i2___flmul+1
 25049   002884  C024  F011         	movff	i2___flmul@prod+2,?i2___flmul+2
 25050   002888  C025  F012         	movff	i2___flmul@prod+3,?i2___flmul+3
 25051   00288C                     i2l1499:
 25052   00288C  0012               	return		;funcret
 25053   00288E                     __end_ofi2___flmul:
 25054                           	callstack 0
 25055                           
 25056 ;; *************** function i2___fldiv *****************
 25057 ;; Defined at:
 25058 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\sprcdiv.c"
 25059 ;; Parameters:    Size  Location     Type
 25060 ;;  b               4   39[COMRAM] unsigned char 
 25061 ;;  a               4   43[COMRAM] unsigned char 
 25062 ;; Auto vars:     Size  Location     Type
 25063 ;;  grs             4   58[COMRAM] unsigned long 
 25064 ;;  rem             4   51[COMRAM] unsigned long 
 25065 ;;  new_exp         2   56[COMRAM] short 
 25066 ;;  aexp            1   63[COMRAM] unsigned char 
 25067 ;;  bexp            1   62[COMRAM] unsigned char 
 25068 ;;  sign            1   55[COMRAM] unsigned char 
 25069 ;; Return value:  Size  Location     Type
 25070 ;;                  4   39[COMRAM] unsigned char 
 25071 ;; Registers used:
 25072 ;;		wreg, status,2, status,0
 25073 ;; Tracked objects:
 25074 ;;		On entry : 0/0
 25075 ;;		On exit  : 0/0
 25076 ;;		Unchanged: 0/0
 25077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25078 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25079 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25080 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25081 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25082 ;;Total ram usage:       25 bytes
 25083 ;; Hardware stack levels used: 1
 25084 ;; This function calls:
 25085 ;;		Nothing
 25086 ;; This function is called by:
 25087 ;;		i2_lire_tension
 25088 ;;		i2_efgtoa
 25089 ;; This function uses a non-reentrant model
 25090 ;;
 25091                           
 25092                           	psect	text100
 25093   002C20                     __ptext100:
 25094                           	callstack 0
 25095   002C20                     i2___fldiv:
 25096                           	callstack 12
 25097   002C20  502B               	movf	(i2___fldiv@b+3)^0,w,c
 25098   002C22  0B80               	andlw	128
 25099   002C24  6E38               	movwf	i2___fldiv@sign^0,c
 25100   002C26  502B               	movf	(i2___fldiv@b+3)^0,w,c
 25101   002C28  242B               	addwf	(i2___fldiv@b+3)^0,w,c
 25102   002C2A  6E3F               	movwf	i2___fldiv@bexp^0,c
 25103   002C2C  AE2A               	btfss	(i2___fldiv@b+2)^0,7,c
 25104   002C2E  EF1B  F016         	goto	i2u523_41
 25105   002C32  EF1D  F016         	goto	i2u523_40
 25106   002C36                     i2u523_41:
 25107   002C36  EF1E  F016         	goto	i2l5516
 25108   002C3A                     i2u523_40:
 25109   002C3A  803F               	bsf	i2___fldiv@bexp^0,0,c
 25110   002C3C                     i2l5516:
 25111   002C3C  503F               	movf	i2___fldiv@bexp^0,w,c
 25112   002C3E  B4D8               	btfsc	status,2,c
 25113   002C40  EF24  F016         	goto	i2u524_41
 25114   002C44  EF26  F016         	goto	i2u524_40
 25115   002C48                     i2u524_41:
 25116   002C48  EF3A  F016         	goto	i2l5526
 25117   002C4C                     i2u524_40:
 25118   002C4C  283F               	incf	i2___fldiv@bexp^0,w,c
 25119   002C4E  A4D8               	btfss	status,2,c
 25120   002C50  EF2C  F016         	goto	i2u525_41
 25121   002C54  EF2E  F016         	goto	i2u525_40
 25122   002C58                     i2u525_41:
 25123   002C58  EF36  F016         	goto	i2l5522
 25124   002C5C                     i2u525_40:
 25125   002C5C  0E00               	movlw	0
 25126   002C5E  6E28               	movwf	i2___fldiv@b^0,c
 25127   002C60  0E00               	movlw	0
 25128   002C62  6E29               	movwf	(i2___fldiv@b+1)^0,c
 25129   002C64  0E00               	movlw	0
 25130   002C66  6E2A               	movwf	(i2___fldiv@b+2)^0,c
 25131   002C68  0E00               	movlw	0
 25132   002C6A  6E2B               	movwf	(i2___fldiv@b+3)^0,c
 25133   002C6C                     i2l5522:
 25134   002C6C  8E2A               	bsf	(i2___fldiv@b+2)^0,7,c
 25135   002C6E  6A2B               	clrf	(i2___fldiv@b+3)^0,c
 25136   002C70  EF42  F016         	goto	i2l5528
 25137   002C74                     i2l5526:
 25138   002C74  0E00               	movlw	0
 25139   002C76  6E28               	movwf	i2___fldiv@b^0,c
 25140   002C78  0E00               	movlw	0
 25141   002C7A  6E29               	movwf	(i2___fldiv@b+1)^0,c
 25142   002C7C  0E00               	movlw	0
 25143   002C7E  6E2A               	movwf	(i2___fldiv@b+2)^0,c
 25144   002C80  0E00               	movlw	0
 25145   002C82  6E2B               	movwf	(i2___fldiv@b+3)^0,c
 25146   002C84                     i2l5528:
 25147   002C84  502F               	movf	(i2___fldiv@a+3)^0,w,c
 25148   002C86  0B80               	andlw	128
 25149   002C88  1A38               	xorwf	i2___fldiv@sign^0,f,c
 25150   002C8A  502F               	movf	(i2___fldiv@a+3)^0,w,c
 25151   002C8C  242F               	addwf	(i2___fldiv@a+3)^0,w,c
 25152   002C8E  6E40               	movwf	i2___fldiv@aexp^0,c
 25153   002C90  AE2E               	btfss	(i2___fldiv@a+2)^0,7,c
 25154   002C92  EF4D  F016         	goto	i2u526_41
 25155   002C96  EF4F  F016         	goto	i2u526_40
 25156   002C9A                     i2u526_41:
 25157   002C9A  EF50  F016         	goto	i2l5536
 25158   002C9E                     i2u526_40:
 25159   002C9E  8040               	bsf	i2___fldiv@aexp^0,0,c
 25160   002CA0                     i2l5536:
 25161   002CA0  5040               	movf	i2___fldiv@aexp^0,w,c
 25162   002CA2  B4D8               	btfsc	status,2,c
 25163   002CA4  EF56  F016         	goto	i2u527_41
 25164   002CA8  EF58  F016         	goto	i2u527_40
 25165   002CAC                     i2u527_41:
 25166   002CAC  EF6C  F016         	goto	i2l5546
 25167   002CB0                     i2u527_40:
 25168   002CB0  2840               	incf	i2___fldiv@aexp^0,w,c
 25169   002CB2  A4D8               	btfss	status,2,c
 25170   002CB4  EF5E  F016         	goto	i2u528_41
 25171   002CB8  EF60  F016         	goto	i2u528_40
 25172   002CBC                     i2u528_41:
 25173   002CBC  EF68  F016         	goto	i2l5542
 25174   002CC0                     i2u528_40:
 25175   002CC0  0E00               	movlw	0
 25176   002CC2  6E2C               	movwf	i2___fldiv@a^0,c
 25177   002CC4  0E00               	movlw	0
 25178   002CC6  6E2D               	movwf	(i2___fldiv@a+1)^0,c
 25179   002CC8  0E00               	movlw	0
 25180   002CCA  6E2E               	movwf	(i2___fldiv@a+2)^0,c
 25181   002CCC  0E00               	movlw	0
 25182   002CCE  6E2F               	movwf	(i2___fldiv@a+3)^0,c
 25183   002CD0                     i2l5542:
 25184   002CD0  8E2E               	bsf	(i2___fldiv@a+2)^0,7,c
 25185   002CD2  6A2F               	clrf	(i2___fldiv@a+3)^0,c
 25186   002CD4  EF74  F016         	goto	i2l5548
 25187   002CD8                     i2l5546:
 25188   002CD8  0E00               	movlw	0
 25189   002CDA  6E2C               	movwf	i2___fldiv@a^0,c
 25190   002CDC  0E00               	movlw	0
 25191   002CDE  6E2D               	movwf	(i2___fldiv@a+1)^0,c
 25192   002CE0  0E00               	movlw	0
 25193   002CE2  6E2E               	movwf	(i2___fldiv@a+2)^0,c
 25194   002CE4  0E00               	movlw	0
 25195   002CE6  6E2F               	movwf	(i2___fldiv@a+3)^0,c
 25196   002CE8                     i2l5548:
 25197   002CE8  502C               	movf	i2___fldiv@a^0,w,c
 25198   002CEA  102D               	iorwf	(i2___fldiv@a+1)^0,w,c
 25199   002CEC  102E               	iorwf	(i2___fldiv@a+2)^0,w,c
 25200   002CEE  102F               	iorwf	(i2___fldiv@a+3)^0,w,c
 25201   002CF0  A4D8               	btfss	status,2,c
 25202   002CF2  EF7D  F016         	goto	i2u529_41
 25203   002CF6  EF7F  F016         	goto	i2u529_40
 25204   002CFA                     i2u529_41:
 25205   002CFA  EF97  F016         	goto	i2l5560
 25206   002CFE                     i2u529_40:
 25207   002CFE  0E00               	movlw	0
 25208   002D00  6E28               	movwf	i2___fldiv@b^0,c
 25209   002D02  0E00               	movlw	0
 25210   002D04  6E29               	movwf	(i2___fldiv@b+1)^0,c
 25211   002D06  0E00               	movlw	0
 25212   002D08  6E2A               	movwf	(i2___fldiv@b+2)^0,c
 25213   002D0A  0E00               	movlw	0
 25214   002D0C  6E2B               	movwf	(i2___fldiv@b+3)^0,c
 25215   002D0E  0E80               	movlw	128
 25216   002D10  122A               	iorwf	(i2___fldiv@b+2)^0,f,c
 25217   002D12  0E7F               	movlw	127
 25218   002D14  122B               	iorwf	(i2___fldiv@b+3)^0,f,c
 25219   002D16                     i2l5554:
 25220   002D16  5038               	movf	i2___fldiv@sign^0,w,c
 25221   002D18  122B               	iorwf	(i2___fldiv@b+3)^0,f,c
 25222   002D1A  C028  F028         	movff	i2___fldiv@b,?i2___fldiv
 25223   002D1E  C029  F029         	movff	i2___fldiv@b+1,?i2___fldiv+1
 25224   002D22  C02A  F02A         	movff	i2___fldiv@b+2,?i2___fldiv+2
 25225   002D26  C02B  F02B         	movff	i2___fldiv@b+3,?i2___fldiv+3
 25226   002D2A  EFD7  F017         	goto	i2l1463
 25227   002D2E                     i2l5560:
 25228   002D2E  503F               	movf	i2___fldiv@bexp^0,w,c
 25229   002D30  A4D8               	btfss	status,2,c
 25230   002D32  EF9D  F016         	goto	i2u530_41
 25231   002D36  EF9F  F016         	goto	i2u530_40
 25232   002D3A                     i2u530_41:
 25233   002D3A  EFA9  F016         	goto	i2l5568
 25234   002D3E                     i2u530_40:
 25235   002D3E  0E00               	movlw	0
 25236   002D40  6E28               	movwf	?i2___fldiv^0,c
 25237   002D42  0E00               	movlw	0
 25238   002D44  6E29               	movwf	(?i2___fldiv+1)^0,c
 25239   002D46  0E00               	movlw	0
 25240   002D48  6E2A               	movwf	(?i2___fldiv+2)^0,c
 25241   002D4A  0E00               	movlw	0
 25242   002D4C  6E2B               	movwf	(?i2___fldiv+3)^0,c
 25243   002D4E  EFD7  F017         	goto	i2l1463
 25244   002D52                     i2l5568:
 25245   002D52  5040               	movf	i2___fldiv@aexp^0,w,c
 25246   002D54  C03F  F030         	movff	i2___fldiv@bexp,??i2___fldiv
 25247   002D58  6A31               	clrf	(??i2___fldiv+1)^0,c
 25248   002D5A  5E30               	subwf	??i2___fldiv^0,f,c
 25249   002D5C  0E00               	movlw	0
 25250   002D5E  5A31               	subwfb	(??i2___fldiv+1)^0,f,c
 25251   002D60  0E7F               	movlw	127
 25252   002D62  2430               	addwf	??i2___fldiv^0,w,c
 25253   002D64  6E39               	movwf	i2___fldiv@new_exp^0,c
 25254   002D66  0E00               	movlw	0
 25255   002D68  2031               	addwfc	(??i2___fldiv+1)^0,w,c
 25256   002D6A  6E3A               	movwf	(i2___fldiv@new_exp+1)^0,c
 25257   002D6C  C028  F034         	movff	i2___fldiv@b,i2___fldiv@rem
 25258   002D70  C029  F035         	movff	i2___fldiv@b+1,i2___fldiv@rem+1
 25259   002D74  C02A  F036         	movff	i2___fldiv@b+2,i2___fldiv@rem+2
 25260   002D78  C02B  F037         	movff	i2___fldiv@b+3,i2___fldiv@rem+3
 25261   002D7C  0E00               	movlw	0
 25262   002D7E  6E28               	movwf	i2___fldiv@b^0,c
 25263   002D80  0E00               	movlw	0
 25264   002D82  6E29               	movwf	(i2___fldiv@b+1)^0,c
 25265   002D84  0E00               	movlw	0
 25266   002D86  6E2A               	movwf	(i2___fldiv@b+2)^0,c
 25267   002D88  0E00               	movlw	0
 25268   002D8A  6E2B               	movwf	(i2___fldiv@b+3)^0,c
 25269   002D8C  0E00               	movlw	0
 25270   002D8E  6E3B               	movwf	i2___fldiv@grs^0,c
 25271   002D90  0E00               	movlw	0
 25272   002D92  6E3C               	movwf	(i2___fldiv@grs+1)^0,c
 25273   002D94  0E00               	movlw	0
 25274   002D96  6E3D               	movwf	(i2___fldiv@grs+2)^0,c
 25275   002D98  0E00               	movlw	0
 25276   002D9A  6E3E               	movwf	(i2___fldiv@grs+3)^0,c
 25277   002D9C  6A40               	clrf	i2___fldiv@aexp^0,c
 25278   002D9E  EF09  F017         	goto	i2l1465
 25279   002DA2                     i2l5578:
 25280   002DA2  5040               	movf	i2___fldiv@aexp^0,w,c
 25281   002DA4  B4D8               	btfsc	status,2,c
 25282   002DA6  EFD7  F016         	goto	i2u531_41
 25283   002DAA  EFD9  F016         	goto	i2u531_40
 25284   002DAE                     i2u531_41:
 25285   002DAE  EFF0  F016         	goto	i2l5586
 25286   002DB2                     i2u531_40:
 25287   002DB2  90D8               	bcf	status,0,c
 25288   002DB4  3634               	rlcf	i2___fldiv@rem^0,f,c
 25289   002DB6  3635               	rlcf	(i2___fldiv@rem+1)^0,f,c
 25290   002DB8  3636               	rlcf	(i2___fldiv@rem+2)^0,f,c
 25291   002DBA  3637               	rlcf	(i2___fldiv@rem+3)^0,f,c
 25292   002DBC  90D8               	bcf	status,0,c
 25293   002DBE  3628               	rlcf	i2___fldiv@b^0,f,c
 25294   002DC0  3629               	rlcf	(i2___fldiv@b+1)^0,f,c
 25295   002DC2  362A               	rlcf	(i2___fldiv@b+2)^0,f,c
 25296   002DC4  362B               	rlcf	(i2___fldiv@b+3)^0,f,c
 25297   002DC6  AE3E               	btfss	(i2___fldiv@grs+3)^0,7,c
 25298   002DC8  EFE8  F016         	goto	i2u532_41
 25299   002DCC  EFEA  F016         	goto	i2u532_40
 25300   002DD0                     i2u532_41:
 25301   002DD0  EFEB  F016         	goto	i2l1468
 25302   002DD4                     i2u532_40:
 25303   002DD4  8028               	bsf	i2___fldiv@b^0,0,c
 25304   002DD6                     i2l1468:
 25305   002DD6  90D8               	bcf	status,0,c
 25306   002DD8  363B               	rlcf	i2___fldiv@grs^0,f,c
 25307   002DDA  363C               	rlcf	(i2___fldiv@grs+1)^0,f,c
 25308   002DDC  363D               	rlcf	(i2___fldiv@grs+2)^0,f,c
 25309   002DDE  363E               	rlcf	(i2___fldiv@grs+3)^0,f,c
 25310   002DE0                     i2l5586:
 25311   002DE0  502C               	movf	i2___fldiv@a^0,w,c
 25312   002DE2  5C34               	subwf	i2___fldiv@rem^0,w,c
 25313   002DE4  502D               	movf	(i2___fldiv@a+1)^0,w,c
 25314   002DE6  5835               	subwfb	(i2___fldiv@rem+1)^0,w,c
 25315   002DE8  502E               	movf	(i2___fldiv@a+2)^0,w,c
 25316   002DEA  5836               	subwfb	(i2___fldiv@rem+2)^0,w,c
 25317   002DEC  502F               	movf	(i2___fldiv@a+3)^0,w,c
 25318   002DEE  5837               	subwfb	(i2___fldiv@rem+3)^0,w,c
 25319   002DF0  A0D8               	btfss	status,0,c
 25320   002DF2  EFFD  F016         	goto	i2u533_41
 25321   002DF6  EFFF  F016         	goto	i2u533_40
 25322   002DFA                     i2u533_41:
 25323   002DFA  EF08  F017         	goto	i2l5592
 25324   002DFE                     i2u533_40:
 25325   002DFE  8C3E               	bsf	(i2___fldiv@grs+3)^0,6,c
 25326   002E00  502C               	movf	i2___fldiv@a^0,w,c
 25327   002E02  5E34               	subwf	i2___fldiv@rem^0,f,c
 25328   002E04  502D               	movf	(i2___fldiv@a+1)^0,w,c
 25329   002E06  5A35               	subwfb	(i2___fldiv@rem+1)^0,f,c
 25330   002E08  502E               	movf	(i2___fldiv@a+2)^0,w,c
 25331   002E0A  5A36               	subwfb	(i2___fldiv@rem+2)^0,f,c
 25332   002E0C  502F               	movf	(i2___fldiv@a+3)^0,w,c
 25333   002E0E  5A37               	subwfb	(i2___fldiv@rem+3)^0,f,c
 25334   002E10                     i2l5592:
 25335   002E10  2A40               	incf	i2___fldiv@aexp^0,f,c
 25336   002E12                     i2l1465:
 25337   002E12  0E19               	movlw	25
 25338   002E14  6440               	cpfsgt	i2___fldiv@aexp^0,c
 25339   002E16  EF0F  F017         	goto	i2u534_41
 25340   002E1A  EF11  F017         	goto	i2u534_40
 25341   002E1E                     i2u534_41:
 25342   002E1E  EFD1  F016         	goto	i2l5578
 25343   002E22                     i2u534_40:
 25344   002E22  5034               	movf	i2___fldiv@rem^0,w,c
 25345   002E24  1035               	iorwf	(i2___fldiv@rem+1)^0,w,c
 25346   002E26  1036               	iorwf	(i2___fldiv@rem+2)^0,w,c
 25347   002E28  1037               	iorwf	(i2___fldiv@rem+3)^0,w,c
 25348   002E2A  B4D8               	btfsc	status,2,c
 25349   002E2C  EF1A  F017         	goto	i2u535_41
 25350   002E30  EF1C  F017         	goto	i2u535_40
 25351   002E34                     i2u535_41:
 25352   002E34  EF34  F017         	goto	i2l5604
 25353   002E38                     i2u535_40:
 25354   002E38  803B               	bsf	i2___fldiv@grs^0,0,c
 25355   002E3A  EF34  F017         	goto	i2l5604
 25356   002E3E                     i2l5598:
 25357   002E3E  90D8               	bcf	status,0,c
 25358   002E40  3628               	rlcf	i2___fldiv@b^0,f,c
 25359   002E42  3629               	rlcf	(i2___fldiv@b+1)^0,f,c
 25360   002E44  362A               	rlcf	(i2___fldiv@b+2)^0,f,c
 25361   002E46  362B               	rlcf	(i2___fldiv@b+3)^0,f,c
 25362   002E48  AE3E               	btfss	(i2___fldiv@grs+3)^0,7,c
 25363   002E4A  EF29  F017         	goto	i2u536_41
 25364   002E4E  EF2B  F017         	goto	i2u536_40
 25365   002E52                     i2u536_41:
 25366   002E52  EF2C  F017         	goto	i2l1474
 25367   002E56                     i2u536_40:
 25368   002E56  8028               	bsf	i2___fldiv@b^0,0,c
 25369   002E58                     i2l1474:
 25370   002E58  90D8               	bcf	status,0,c
 25371   002E5A  363B               	rlcf	i2___fldiv@grs^0,f,c
 25372   002E5C  363C               	rlcf	(i2___fldiv@grs+1)^0,f,c
 25373   002E5E  363D               	rlcf	(i2___fldiv@grs+2)^0,f,c
 25374   002E60  363E               	rlcf	(i2___fldiv@grs+3)^0,f,c
 25375   002E62  0639               	decf	i2___fldiv@new_exp^0,f,c
 25376   002E64  A0D8               	btfss	status,0,c
 25377   002E66  063A               	decf	(i2___fldiv@new_exp+1)^0,f,c
 25378   002E68                     i2l5604:
 25379   002E68  AE2A               	btfss	(i2___fldiv@b+2)^0,7,c
 25380   002E6A  EF39  F017         	goto	i2u537_41
 25381   002E6E  EF3B  F017         	goto	i2u537_40
 25382   002E72                     i2u537_41:
 25383   002E72  EF1F  F017         	goto	i2l5598
 25384   002E76                     i2u537_40:
 25385   002E76  6A40               	clrf	i2___fldiv@aexp^0,c
 25386   002E78  AE3E               	btfss	(i2___fldiv@grs+3)^0,7,c
 25387   002E7A  EF41  F017         	goto	i2u538_41
 25388   002E7E  EF43  F017         	goto	i2u538_40
 25389   002E82                     i2u538_41:
 25390   002E82  EF67  F017         	goto	i2l1476
 25391   002E86                     i2u538_40:
 25392   002E86  0EFF               	movlw	255
 25393   002E88  143B               	andwf	i2___fldiv@grs^0,w,c
 25394   002E8A  6E30               	movwf	??i2___fldiv^0,c
 25395   002E8C  0EFF               	movlw	255
 25396   002E8E  143C               	andwf	(i2___fldiv@grs+1)^0,w,c
 25397   002E90  6E31               	movwf	(??i2___fldiv+1)^0,c
 25398   002E92  0EFF               	movlw	255
 25399   002E94  143D               	andwf	(i2___fldiv@grs+2)^0,w,c
 25400   002E96  6E32               	movwf	(??i2___fldiv+2)^0,c
 25401   002E98  0E7F               	movlw	127
 25402   002E9A  143E               	andwf	(i2___fldiv@grs+3)^0,w,c
 25403   002E9C  6E33               	movwf	(??i2___fldiv+3)^0,c
 25404   002E9E  5030               	movf	??i2___fldiv^0,w,c
 25405   002EA0  1031               	iorwf	(??i2___fldiv+1)^0,w,c
 25406   002EA2  1032               	iorwf	(??i2___fldiv+2)^0,w,c
 25407   002EA4  1033               	iorwf	(??i2___fldiv+3)^0,w,c
 25408   002EA6  B4D8               	btfsc	status,2,c
 25409   002EA8  EF58  F017         	goto	i2u539_41
 25410   002EAC  EF5A  F017         	goto	i2u539_40
 25411   002EB0                     i2u539_41:
 25412   002EB0  EF5E  F017         	goto	i2l1477
 25413   002EB4                     i2u539_40:
 25414   002EB4                     i2l5608:
 25415   002EB4  0E01               	movlw	1
 25416   002EB6  6E40               	movwf	i2___fldiv@aexp^0,c
 25417   002EB8  EF67  F017         	goto	i2l1476
 25418   002EBC                     i2l1477:
 25419   002EBC  A028               	btfss	i2___fldiv@b^0,0,c
 25420   002EBE  EF63  F017         	goto	i2u540_41
 25421   002EC2  EF65  F017         	goto	i2u540_40
 25422   002EC6                     i2u540_41:
 25423   002EC6  EF67  F017         	goto	i2l1476
 25424   002ECA                     i2u540_40:
 25425   002ECA  EF5A  F017         	goto	i2l5608
 25426   002ECE                     i2l1476:
 25427   002ECE  5040               	movf	i2___fldiv@aexp^0,w,c
 25428   002ED0  B4D8               	btfsc	status,2,c
 25429   002ED2  EF6D  F017         	goto	i2u541_41
 25430   002ED6  EF6F  F017         	goto	i2u541_40
 25431   002EDA                     i2u541_41:
 25432   002EDA  EF93  F017         	goto	i2l5620
 25433   002EDE                     i2u541_40:
 25434   002EDE  0E01               	movlw	1
 25435   002EE0  2628               	addwf	i2___fldiv@b^0,f,c
 25436   002EE2  0E00               	movlw	0
 25437   002EE4  2229               	addwfc	(i2___fldiv@b+1)^0,f,c
 25438   002EE6  222A               	addwfc	(i2___fldiv@b+2)^0,f,c
 25439   002EE8  222B               	addwfc	(i2___fldiv@b+3)^0,f,c
 25440   002EEA  A02B               	btfss	(i2___fldiv@b+3)^0,0,c
 25441   002EEC  EF7A  F017         	goto	i2u542_41
 25442   002EF0  EF7C  F017         	goto	i2u542_40
 25443   002EF4                     i2u542_41:
 25444   002EF4  EF93  F017         	goto	i2l5620
 25445   002EF8                     i2u542_40:
 25446   002EF8  C028  F030         	movff	i2___fldiv@b,??i2___fldiv
 25447   002EFC  C029  F031         	movff	i2___fldiv@b+1,??i2___fldiv+1
 25448   002F00  C02A  F032         	movff	i2___fldiv@b+2,??i2___fldiv+2
 25449   002F04  C02B  F033         	movff	i2___fldiv@b+3,??i2___fldiv+3
 25450   002F08  3433               	rlcf	(??i2___fldiv+3)^0,w,c
 25451   002F0A  3233               	rrcf	(??i2___fldiv+3)^0,f,c
 25452   002F0C  3232               	rrcf	(??i2___fldiv+2)^0,f,c
 25453   002F0E  3231               	rrcf	(??i2___fldiv+1)^0,f,c
 25454   002F10  3230               	rrcf	??i2___fldiv^0,f,c
 25455   002F12  C030  F028         	movff	??i2___fldiv,i2___fldiv@b
 25456   002F16  C031  F029         	movff	??i2___fldiv+1,i2___fldiv@b+1
 25457   002F1A  C032  F02A         	movff	??i2___fldiv+2,i2___fldiv@b+2
 25458   002F1E  C033  F02B         	movff	??i2___fldiv+3,i2___fldiv@b+3
 25459   002F22  4A39               	infsnz	i2___fldiv@new_exp^0,f,c
 25460   002F24  2A3A               	incf	(i2___fldiv@new_exp+1)^0,f,c
 25461   002F26                     i2l5620:
 25462   002F26  BE3A               	btfsc	(i2___fldiv@new_exp+1)^0,7,c
 25463   002F28  EF9E  F017         	goto	i2u543_41
 25464   002F2C  503A               	movf	(i2___fldiv@new_exp+1)^0,w,c
 25465   002F2E  E108               	bnz	i2u543_40
 25466   002F30  2839               	incf	i2___fldiv@new_exp^0,w,c
 25467   002F32  A0D8               	btfss	status,0,c
 25468   002F34  EF9E  F017         	goto	i2u543_41
 25469   002F38  EFA0  F017         	goto	i2u543_40
 25470   002F3C                     i2u543_41:
 25471   002F3C  EFAB  F017         	goto	i2l5624
 25472   002F40                     i2u543_40:
 25473   002F40  0E00               	movlw	0
 25474   002F42  6E3A               	movwf	(i2___fldiv@new_exp+1)^0,c
 25475   002F44  6839               	setf	i2___fldiv@new_exp^0,c
 25476   002F46  0E00               	movlw	0
 25477   002F48  6E28               	movwf	i2___fldiv@b^0,c
 25478   002F4A  0E00               	movlw	0
 25479   002F4C  6E29               	movwf	(i2___fldiv@b+1)^0,c
 25480   002F4E  0E00               	movlw	0
 25481   002F50  6E2A               	movwf	(i2___fldiv@b+2)^0,c
 25482   002F52  0E00               	movlw	0
 25483   002F54  6E2B               	movwf	(i2___fldiv@b+3)^0,c
 25484   002F56                     i2l5624:
 25485   002F56  BE3A               	btfsc	(i2___fldiv@new_exp+1)^0,7,c
 25486   002F58  EFB8  F017         	goto	i2u544_40
 25487   002F5C  503A               	movf	(i2___fldiv@new_exp+1)^0,w,c
 25488   002F5E  E106               	bnz	i2u544_41
 25489   002F60  0439               	decf	i2___fldiv@new_exp^0,w,c
 25490   002F62  B0D8               	btfsc	status,0,c
 25491   002F64  EFB6  F017         	goto	i2u544_41
 25492   002F68  EFB8  F017         	goto	i2u544_40
 25493   002F6C                     i2u544_41:
 25494   002F6C  EFC5  F017         	goto	i2l5630
 25495   002F70                     i2u544_40:
 25496   002F70  0E00               	movlw	0
 25497   002F72  6E3A               	movwf	(i2___fldiv@new_exp+1)^0,c
 25498   002F74  0E00               	movlw	0
 25499   002F76  6E39               	movwf	i2___fldiv@new_exp^0,c
 25500   002F78  0E00               	movlw	0
 25501   002F7A  6E28               	movwf	i2___fldiv@b^0,c
 25502   002F7C  0E00               	movlw	0
 25503   002F7E  6E29               	movwf	(i2___fldiv@b+1)^0,c
 25504   002F80  0E00               	movlw	0
 25505   002F82  6E2A               	movwf	(i2___fldiv@b+2)^0,c
 25506   002F84  0E00               	movlw	0
 25507   002F86  6E2B               	movwf	(i2___fldiv@b+3)^0,c
 25508   002F88  6A38               	clrf	i2___fldiv@sign^0,c
 25509   002F8A                     i2l5630:
 25510   002F8A  C039  F03F         	movff	i2___fldiv@new_exp,i2___fldiv@bexp
 25511   002F8E  A03F               	btfss	i2___fldiv@bexp^0,0,c
 25512   002F90  EFCC  F017         	goto	i2u545_41
 25513   002F94  EFCE  F017         	goto	i2u545_40
 25514   002F98                     i2u545_41:
 25515   002F98  EFD1  F017         	goto	i2l5636
 25516   002F9C                     i2u545_40:
 25517   002F9C  8E2A               	bsf	(i2___fldiv@b+2)^0,7,c
 25518   002F9E  EFD2  F017         	goto	i2l5638
 25519   002FA2                     i2l5636:
 25520   002FA2  9E2A               	bcf	(i2___fldiv@b+2)^0,7,c
 25521   002FA4                     i2l5638:
 25522   002FA4  90D8               	bcf	status,0,c
 25523   002FA6  303F               	rrcf	i2___fldiv@bexp^0,w,c
 25524   002FA8  6E2B               	movwf	(i2___fldiv@b+3)^0,c
 25525   002FAA  EF8B  F016         	goto	i2l5554
 25526   002FAE                     i2l1463:
 25527   002FAE  0012               	return		;funcret
 25528   002FB0                     __end_ofi2___fldiv:
 25529                           	callstack 0
 25530                           
 25531 ;; *************** function i2_ADC_ConversionStart *****************
 25532 ;; Defined at:
 25533 ;;		line 144 in file "mcc_generated_files/adc/src/adc.c"
 25534 ;; Parameters:    Size  Location     Type
 25535 ;;		None
 25536 ;; Auto vars:     Size  Location     Type
 25537 ;;		None
 25538 ;; Return value:  Size  Location     Type
 25539 ;;                  1    wreg      void 
 25540 ;; Registers used:
 25541 ;;		None
 25542 ;; Tracked objects:
 25543 ;;		On entry : 0/0
 25544 ;;		On exit  : 0/0
 25545 ;;		Unchanged: 0/0
 25546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25547 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25548 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25549 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25550 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25551 ;;Total ram usage:        0 bytes
 25552 ;; Hardware stack levels used: 1
 25553 ;; This function calls:
 25554 ;;		Nothing
 25555 ;; This function is called by:
 25556 ;;		i2_lire_tension
 25557 ;; This function uses a non-reentrant model
 25558 ;;
 25559                           
 25560                           	psect	text101
 25561   00653A                     __ptext101:
 25562                           	callstack 0
 25563   00653A                     i2_ADC_ConversionStart:
 25564                           	callstack 15
 25565   00653A                     
 25566                           ;mcc_generated_files/adc/src/adc.c: 146:     ADCON0bits.ADGO = 1;
 25567   00653A  013E               	movlb	62	; () banked
 25568   00653C  81F8               	bsf	248,0,b	;volatile
 25569   00653E                     
 25570                           ; BSR set to: 62
 25571   00653E  0012               	return		;funcret
 25572   006540                     __end_ofi2_ADC_ConversionStart:
 25573                           	callstack 0
 25574                           
 25575 ;; *************** function i2_ADC_ConversionResultGet *****************
 25576 ;; Defined at:
 25577 ;;		line 159 in file "mcc_generated_files/adc/src/adc.c"
 25578 ;; Parameters:    Size  Location     Type
 25579 ;;		None
 25580 ;; Auto vars:     Size  Location     Type
 25581 ;;		None
 25582 ;; Return value:  Size  Location     Type
 25583 ;;                  2    0[COMRAM] short 
 25584 ;; Registers used:
 25585 ;;		wreg, status,2, status,0
 25586 ;; Tracked objects:
 25587 ;;		On entry : 0/0
 25588 ;;		On exit  : 0/0
 25589 ;;		Unchanged: 0/0
 25590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25591 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25592 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25593 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25594 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25595 ;;Total ram usage:        4 bytes
 25596 ;; Hardware stack levels used: 1
 25597 ;; This function calls:
 25598 ;;		Nothing
 25599 ;; This function is called by:
 25600 ;;		i2_lire_tension
 25601 ;; This function uses a non-reentrant model
 25602 ;;
 25603                           
 25604                           	psect	text102
 25605   006486                     __ptext102:
 25606                           	callstack 0
 25607   006486                     i2_ADC_ConversionResultGet:
 25608                           	callstack 15
 25609   006486                     
 25610                           ;mcc_generated_files/adc/src/adc.c: 161:     return ((adc_result_t)((ADRESH << 8) + ADRE
      +                          SL));
 25611   006486  013E               	movlb	62	; () banked
 25612   006488  51F0               	movf	240,w,b	;volatile
 25613   00648A  6E04               	movwf	(??i2_ADC_ConversionResultGet+1)^0,c
 25614   00648C  6A03               	clrf	??i2_ADC_ConversionResultGet^0,c
 25615   00648E  51EF               	movf	239,w,b	;volatile
 25616   006490  2403               	addwf	??i2_ADC_ConversionResultGet^0,w,c
 25617   006492  6E01               	movwf	?i2_ADC_ConversionResultGet^0,c
 25618   006494  0E00               	movlw	0
 25619   006496  2004               	addwfc	(??i2_ADC_ConversionResultGet+1)^0,w,c
 25620   006498  6E02               	movwf	(?i2_ADC_ConversionResultGet+1)^0,c
 25621   00649A                     
 25622                           ; BSR set to: 62
 25623   00649A  0012               	return		;funcret
 25624   00649C                     __end_ofi2_ADC_ConversionResultGet:
 25625                           	callstack 0
 25626                           
 25627 ;; *************** function i2_ADC_ChannelSelect *****************
 25628 ;; Defined at:
 25629 ;;		line 139 in file "mcc_generated_files/adc/src/adc.c"
 25630 ;; Parameters:    Size  Location     Type
 25631 ;;  channel         1    wreg     enum E15638
 25632 ;; Auto vars:     Size  Location     Type
 25633 ;;  channel         1    0[COMRAM] enum E15638
 25634 ;; Return value:  Size  Location     Type
 25635 ;;                  1    wreg      void 
 25636 ;; Registers used:
 25637 ;;		wreg
 25638 ;; Tracked objects:
 25639 ;;		On entry : 0/0
 25640 ;;		On exit  : 0/0
 25641 ;;		Unchanged: 0/0
 25642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25643 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25644 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25645 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25646 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25647 ;;Total ram usage:        1 bytes
 25648 ;; Hardware stack levels used: 1
 25649 ;; This function calls:
 25650 ;;		Nothing
 25651 ;; This function is called by:
 25652 ;;		i2_lire_tension
 25653 ;; This function uses a non-reentrant model
 25654 ;;
 25655                           
 25656                           	psect	text103
 25657   00652A                     __ptext103:
 25658                           	callstack 0
 25659   00652A                     i2_ADC_ChannelSelect:
 25660                           	callstack 15
 25661                           
 25662                           ; BSR set to: 62
 25663                           ;incstack = 0
 25664                           ;i2ADC_ChannelSelect@channel stored from wreg
 25665   00652A  6E01               	movwf	i2ADC_ChannelSelect@channel^0,c
 25666   00652C                     
 25667                           ;mcc_generated_files/adc/src/adc.c: 139: void ADC_ChannelSelect(adc_channel_t channel);m
      +                          cc_generated_files/adc/src/adc.c: 140: {;mcc_generated_files/adc/src/adc.c: 141:    ADPC
      +                          H = channel;
 25668   00652C  0060  F007  FEF1   	movff	i2ADC_ChannelSelect@channel,16113	;volatile
 25669   006532  0012               	return		;funcret
 25670   006534                     __end_ofi2_ADC_ChannelSelect:
 25671                           	callstack 0
 25672                           
 25673 ;; *************** function i2_LCD_String *****************
 25674 ;; Defined at:
 25675 ;;		line 35 in file "LCM_S01604DSF.c"
 25676 ;; Parameters:    Size  Location     Type
 25677 ;;  str             2    2[COMRAM] PTR const unsigned char 
 25678 ;;		 -> i2LCD_UpdateMenu@buffer(16), STR_18(14), LCD_UpdateMenu@buffer(16), STR_16(8), 
 25679 ;;		 -> STR_15(9), STR_14(15), STR_13(14), STR_12(16), 
 25680 ;;		 -> STR_11(15), STR_10(16), STR_9(14), STR_8(14), 
 25681 ;;		 -> STR_7(15), STR_6(15), STR_5(16), STR_4(5), 
 25682 ;;		 -> STR_3(16), STR_2(17), STR_1(7), 
 25683 ;; Auto vars:     Size  Location     Type
 25684 ;;		None
 25685 ;; Return value:  Size  Location     Type
 25686 ;;                  1    wreg      void 
 25687 ;; Registers used:
 25688 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 25689 ;; Tracked objects:
 25690 ;;		On entry : 0/0
 25691 ;;		On exit  : 0/0
 25692 ;;		Unchanged: 0/0
 25693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25694 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25695 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25696 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25697 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25698 ;;Total ram usage:        2 bytes
 25699 ;; Hardware stack levels used: 1
 25700 ;; Hardware stack levels required when called: 2
 25701 ;; This function calls:
 25702 ;;		i2_LCD_Char
 25703 ;; This function is called by:
 25704 ;;		i2_LCD_UpdateMenu
 25705 ;; This function uses a non-reentrant model
 25706 ;;
 25707                           
 25708                           	psect	text104
 25709   0058A8                     __ptext104:
 25710                           	callstack 0
 25711   0058A8                     i2_LCD_String:
 25712                           	callstack 14
 25713   0058A8                     
 25714                           ;LCM_S01604DSF.c: 36:     while (*str) {
 25715   0058A8  EF6F  F02C         	goto	i2l7392
 25716   0058AC                     i2l7388:
 25717                           
 25718                           ;LCM_S01604DSF.c: 37:         LCD_Char(*str++);
 25719   0058AC  0060  F00F  FFF6   	movff	i2LCD_String@str,tblptrl
 25720   0058B2  0060  F013  FFF7   	movff	i2LCD_String@str+1,tblptrh
 25721   0058B8  0E00               	movlw	low (__mediumconst shr (0+16))
 25722   0058BA  6EF8               	movwf	tblptru,c
 25723   0058BC  0E0F               	movlw	(high __ramtop+-1)
 25724   0058BE  64F7               	cpfsgt	tblptrh,c
 25725   0058C0  D003               	bra	i2u825_47
 25726   0058C2  0008               	tblrd		*
 25727   0058C4  50F5               	movf	tablat,w,c
 25728   0058C6  D007               	bra	i2u825_40
 25729   0058C8                     i2u825_47:
 25730   0058C8  006F FFDB FFE9     	movff	tblptrl,fsr0l
 25731   0058CE  006F FFDF FFEA     	movff	tblptrh,fsr0h
 25732   0058D4  50EF               	movf	indf0,w,c
 25733   0058D6                     i2u825_40:
 25734   0058D6  ECE5  F031         	call	i2_LCD_Char
 25735   0058DA  4A03               	infsnz	i2LCD_String@str^0,f,c
 25736   0058DC  2A04               	incf	(i2LCD_String@str+1)^0,f,c
 25737   0058DE                     i2l7392:
 25738                           
 25739                           ;LCM_S01604DSF.c: 36:     while (*str) {
 25740   0058DE  0060  F00F  FFF6   	movff	i2LCD_String@str,tblptrl
 25741   0058E4  0060  F013  FFF7   	movff	i2LCD_String@str+1,tblptrh
 25742   0058EA  0E00               	movlw	low (__mediumconst shr (0+16))
 25743   0058EC  6EF8               	movwf	tblptru,c
 25744   0058EE  0E0F               	movlw	(high __ramtop+-1)
 25745   0058F0  64F7               	cpfsgt	tblptrh,c
 25746   0058F2  D003               	bra	i2u826_47
 25747   0058F4  0008               	tblrd		*
 25748   0058F6  50F5               	movf	tablat,w,c
 25749   0058F8  D007               	bra	i2u826_40
 25750   0058FA                     i2u826_47:
 25751   0058FA  006F FFDB FFE9     	movff	tblptrl,fsr0l
 25752   005900  006F FFDF FFEA     	movff	tblptrh,fsr0h
 25753   005906  50EF               	movf	indf0,w,c
 25754   005908                     i2u826_40:
 25755   005908  0900               	iorlw	0
 25756   00590A  A4D8               	btfss	status,2,c
 25757   00590C  EF8A  F02C         	goto	i2u827_41
 25758   005910  EF8C  F02C         	goto	i2u827_40
 25759   005914                     i2u827_41:
 25760   005914  EF56  F02C         	goto	i2l7388
 25761   005918                     i2u827_40:
 25762   005918  0012               	return		;funcret
 25763   00591A                     __end_ofi2_LCD_String:
 25764                           	callstack 0
 25765                           
 25766 ;; *************** function i2_LCD_Char *****************
 25767 ;; Defined at:
 25768 ;;		line 28 in file "LCM_S01604DSF.c"
 25769 ;; Parameters:    Size  Location     Type
 25770 ;;  data            1    wreg     unsigned char 
 25771 ;; Auto vars:     Size  Location     Type
 25772 ;;  data            1    1[COMRAM] unsigned char 
 25773 ;; Return value:  Size  Location     Type
 25774 ;;                  1    wreg      void 
 25775 ;; Registers used:
 25776 ;;		wreg, cstack
 25777 ;; Tracked objects:
 25778 ;;		On entry : 0/0
 25779 ;;		On exit  : 0/0
 25780 ;;		Unchanged: 0/0
 25781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25782 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25783 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25784 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25785 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25786 ;;Total ram usage:        2 bytes
 25787 ;; Hardware stack levels used: 1
 25788 ;; Hardware stack levels required when called: 1
 25789 ;; This function calls:
 25790 ;;		i2_LCD_EnablePulse
 25791 ;; This function is called by:
 25792 ;;		i2_LCD_String
 25793 ;;		i2_LCD_UpdateMenu
 25794 ;; This function uses a non-reentrant model
 25795 ;;
 25796                           
 25797                           	psect	text105
 25798   0063CA                     __ptext105:
 25799                           	callstack 0
 25800   0063CA                     i2_LCD_Char:
 25801                           	callstack 14
 25802                           
 25803                           ;incstack = 0
 25804                           ;i2LCD_Char@data stored from wreg
 25805   0063CA  6E02               	movwf	i2LCD_Char@data^0,c
 25806   0063CC  82BB               	bsf	187,1,c	;volatile
 25807   0063CE                     
 25808                           ;LCM_S01604DSF.c: 30:     LATC = data;
 25809   0063CE  0060  F00B  FFBC   	movff	i2LCD_Char@data,16316	;volatile
 25810   0063D4                     
 25811                           ;LCM_S01604DSF.c: 31:     LCD_EnablePulse();
 25812   0063D4  EC12  F032         	call	i2_LCD_EnablePulse	;wreg free
 25813   0063D8                     
 25814                           ;LCM_S01604DSF.c: 32:     _delay((unsigned long)((1)*(64000000UL/4000.0)));
 25815   0063D8  0E15               	movlw	21
 25816   0063DA  6E01               	movwf	??i2_LCD_Char^0,c
 25817   0063DC  0EC6               	movlw	198
 25818   0063DE                     i2u944_47:
 25819   0063DE  2EE8               	decfsz	wreg,f,c
 25820   0063E0  D7FE               	bra	i2u944_47
 25821   0063E2  2E01               	decfsz	??i2_LCD_Char^0,f,c
 25822   0063E4  D7FC               	bra	i2u944_47
 25823   0063E6  D000               	nop2	
 25824   0063E8  0012               	return		;funcret
 25825   0063EA                     __end_ofi2_LCD_Char:
 25826                           	callstack 0
 25827                           
 25828 ;; *************** function i2_LCD_SetCursor *****************
 25829 ;; Defined at:
 25830 ;;		line 41 in file "LCM_S01604DSF.c"
 25831 ;; Parameters:    Size  Location     Type
 25832 ;;  row             1    wreg     unsigned char 
 25833 ;;  column          1    2[COMRAM] unsigned char 
 25834 ;; Auto vars:     Size  Location     Type
 25835 ;;  row             1    7[COMRAM] unsigned char 
 25836 ;;  row_offsets     4    3[COMRAM] const unsigned char [4]
 25837 ;; Return value:  Size  Location     Type
 25838 ;;                  1    wreg      void 
 25839 ;; Registers used:
 25840 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 25841 ;; Tracked objects:
 25842 ;;		On entry : 0/0
 25843 ;;		On exit  : 0/0
 25844 ;;		Unchanged: 0/0
 25845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25846 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25847 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25848 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25849 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25850 ;;Total ram usage:        6 bytes
 25851 ;; Hardware stack levels used: 1
 25852 ;; Hardware stack levels required when called: 2
 25853 ;; This function calls:
 25854 ;;		i2_LCD_Command
 25855 ;; This function is called by:
 25856 ;;		i2_LCD_UpdateMenu
 25857 ;; This function uses a non-reentrant model
 25858 ;;
 25859                           
 25860                           	psect	text106
 25861   005D08                     __ptext106:
 25862                           	callstack 0
 25863   005D08                     i2_LCD_SetCursor:
 25864                           	callstack 14
 25865                           
 25866                           ;incstack = 0
 25867                           ;i2LCD_SetCursor@row stored from wreg
 25868   005D08  6E08               	movwf	i2LCD_SetCursor@row^0,c
 25869   005D0A                     
 25870                           ;LCM_S01604DSF.c: 42:     const uint8_t row_offsets[] = {0x00, 0x40, 0x10, 0x50};
 25871   005D0A  0E03               	movlw	low LCD_SetCursor@F16382
 25872   005D0C  6EF6               	movwf	tblptrl,c
 25873   005D0E                     	if	1	;There is more than 1 active tblptr byte
 25874   005D0E  0EFF               	movlw	high LCD_SetCursor@F16382
 25875   005D10  6EF7               	movwf	tblptrh,c
 25876   005D12                     	endif
 25877   005D12                     	if	1	;There are 3 active tblptr bytes
 25878   005D12  0E00               	movlw	low (LCD_SetCursor@F16382 shr (0+16))
 25879   005D14  6EF8               	movwf	tblptru,c
 25880   005D16                     	endif
 25881   005D16  0009               	tblrd		*+
 25882   005D18  006F FFD4  F004    	movff	tablat,i2LCD_SetCursor@row_offsets
 25883   005D1E  0009               	tblrd		*+
 25884   005D20  006F FFD4  F005    	movff	tablat,i2LCD_SetCursor@row_offsets+1
 25885   005D26  0009               	tblrd		*+
 25886   005D28  006F FFD4  F006    	movff	tablat,i2LCD_SetCursor@row_offsets+2
 25887   005D2E  000A               	tblrd		*-
 25888   005D30  006F FFD4  F007    	movff	tablat,i2LCD_SetCursor@row_offsets+3
 25889   005D36                     
 25890                           ;LCM_S01604DSF.c: 43:     if (row > 3) row = 3;
 25891   005D36  0E03               	movlw	3
 25892   005D38  6408               	cpfsgt	i2LCD_SetCursor@row^0,c
 25893   005D3A  EFA1  F02E         	goto	i2u828_41
 25894   005D3E  EFA3  F02E         	goto	i2u828_40
 25895   005D42                     i2u828_41:
 25896   005D42  EFA5  F02E         	goto	i2l7400
 25897   005D46                     i2u828_40:
 25898   005D46  0E03               	movlw	3
 25899   005D48  6E08               	movwf	i2LCD_SetCursor@row^0,c
 25900   005D4A                     i2l7400:
 25901                           
 25902                           ;LCM_S01604DSF.c: 44:     LCD_Command(0x80 | (row_offsets[row] + column));
 25903   005D4A  5008               	movf	i2LCD_SetCursor@row^0,w,c
 25904   005D4C  0F04               	addlw	low i2LCD_SetCursor@row_offsets
 25905   005D4E  6ED9               	movwf	fsr2l,c
 25906   005D50  6ADA               	clrf	fsr2h,c
 25907   005D52  50DF               	movf	indf2,w,c
 25908   005D54  2403               	addwf	i2LCD_SetCursor@column^0,w,c
 25909   005D56  0980               	iorlw	128
 25910   005D58  ECF5  F031         	call	i2_LCD_Command
 25911   005D5C  0012               	return		;funcret
 25912   005D5E                     __end_ofi2_LCD_SetCursor:
 25913                           	callstack 0
 25914                           
 25915 ;; *************** function i2_LCD_Init *****************
 25916 ;; Defined at:
 25917 ;;		line 52 in file "LCM_S01604DSF.c"
 25918 ;; Parameters:    Size  Location     Type
 25919 ;;		None
 25920 ;; Auto vars:     Size  Location     Type
 25921 ;;		None
 25922 ;; Return value:  Size  Location     Type
 25923 ;;                  1    wreg      void 
 25924 ;; Registers used:
 25925 ;;		wreg, cstack
 25926 ;; Tracked objects:
 25927 ;;		On entry : 0/0
 25928 ;;		On exit  : 0/0
 25929 ;;		Unchanged: 0/0
 25930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25931 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25932 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25933 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25934 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25935 ;;Total ram usage:        2 bytes
 25936 ;; Hardware stack levels used: 1
 25937 ;; Hardware stack levels required when called: 3
 25938 ;; This function calls:
 25939 ;;		i2_LCD_Clear
 25940 ;;		i2_LCD_Command
 25941 ;; This function is called by:
 25942 ;;		i2_LCD_UpdateMenu
 25943 ;; This function uses a non-reentrant model
 25944 ;;
 25945                           
 25946                           	psect	text107
 25947   006250                     __ptext107:
 25948                           	callstack 0
 25949   006250                     i2_LCD_Init:
 25950                           	callstack 13
 25951   006250  92BB               	bcf	187,1,c	;volatile
 25952   006252  90BB               	bcf	187,0,c	;volatile
 25953   006254                     
 25954                           ;LCM_S01604DSF.c: 56:     _delay((unsigned long)((20)*(64000000UL/4000.0)));
 25955   006254  0E02               	movlw	2
 25956   006256  6E05               	movwf	(??i2_LCD_Init+1)^0,c
 25957   006258  0EA0               	movlw	160
 25958   00625A  6E04               	movwf	??i2_LCD_Init^0,c
 25959   00625C  0E92               	movlw	146
 25960   00625E                     i2u945_47:
 25961   00625E  2EE8               	decfsz	wreg,f,c
 25962   006260  D7FE               	bra	i2u945_47
 25963   006262  2E04               	decfsz	??i2_LCD_Init^0,f,c
 25964   006264  D7FC               	bra	i2u945_47
 25965   006266  2E05               	decfsz	(??i2_LCD_Init+1)^0,f,c
 25966   006268  D7FA               	bra	i2u945_47
 25967   00626A  D000               	nop2	
 25968   00626C                     
 25969                           ;LCM_S01604DSF.c: 58:     LCD_Command(0x38);
 25970   00626C  0E38               	movlw	56
 25971   00626E  ECF5  F031         	call	i2_LCD_Command
 25972   006272                     
 25973                           ;LCM_S01604DSF.c: 59:     LCD_Command(0x0C);
 25974   006272  0E0C               	movlw	12
 25975   006274  ECF5  F031         	call	i2_LCD_Command
 25976   006278                     
 25977                           ;LCM_S01604DSF.c: 60:     LCD_Command(0x06);
 25978   006278  0E06               	movlw	6
 25979   00627A  ECF5  F031         	call	i2_LCD_Command
 25980   00627E                     
 25981                           ;LCM_S01604DSF.c: 61:     LCD_Clear();
 25982   00627E  EC4E  F032         	call	i2_LCD_Clear	;wreg free
 25983   006282  0012               	return		;funcret
 25984   006284                     __end_ofi2_LCD_Init:
 25985                           	callstack 0
 25986                           
 25987 ;; *************** function i2_LCD_Clear *****************
 25988 ;; Defined at:
 25989 ;;		line 47 in file "LCM_S01604DSF.c"
 25990 ;; Parameters:    Size  Location     Type
 25991 ;;		None
 25992 ;; Auto vars:     Size  Location     Type
 25993 ;;		None
 25994 ;; Return value:  Size  Location     Type
 25995 ;;                  1    wreg      void 
 25996 ;; Registers used:
 25997 ;;		wreg, cstack
 25998 ;; Tracked objects:
 25999 ;;		On entry : 0/0
 26000 ;;		On exit  : 0/0
 26001 ;;		Unchanged: 0/0
 26002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26003 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26004 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26005 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26006 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26007 ;;Total ram usage:        1 bytes
 26008 ;; Hardware stack levels used: 1
 26009 ;; Hardware stack levels required when called: 2
 26010 ;; This function calls:
 26011 ;;		i2_LCD_Command
 26012 ;; This function is called by:
 26013 ;;		i2_LCD_Init
 26014 ;; This function uses a non-reentrant model
 26015 ;;
 26016                           
 26017                           	psect	text108
 26018   00649C                     __ptext108:
 26019                           	callstack 0
 26020   00649C                     i2_LCD_Clear:
 26021                           	callstack 13
 26022   00649C                     
 26023                           ;LCM_S01604DSF.c: 48:     LCD_Command(0x01);
 26024   00649C  0E01               	movlw	1
 26025   00649E  ECF5  F031         	call	i2_LCD_Command
 26026   0064A2                     
 26027                           ;LCM_S01604DSF.c: 49:     _delay((unsigned long)((2)*(64000000UL/4000.0)));
 26028   0064A2  0E2A               	movlw	42
 26029   0064A4  6E03               	movwf	??i2_LCD_Clear^0,c
 26030   0064A6  0E8E               	movlw	142
 26031   0064A8                     i2u946_47:
 26032   0064A8  2EE8               	decfsz	wreg,f,c
 26033   0064AA  D7FE               	bra	i2u946_47
 26034   0064AC  2E03               	decfsz	??i2_LCD_Clear^0,f,c
 26035   0064AE  D7FC               	bra	i2u946_47
 26036   0064B0  0012               	return		;funcret
 26037   0064B2                     __end_ofi2_LCD_Clear:
 26038                           	callstack 0
 26039                           
 26040 ;; *************** function i2_LCD_Command *****************
 26041 ;; Defined at:
 26042 ;;		line 21 in file "LCM_S01604DSF.c"
 26043 ;; Parameters:    Size  Location     Type
 26044 ;;  cmd             1    wreg     unsigned char 
 26045 ;; Auto vars:     Size  Location     Type
 26046 ;;  cmd             1    1[COMRAM] unsigned char 
 26047 ;; Return value:  Size  Location     Type
 26048 ;;                  1    wreg      void 
 26049 ;; Registers used:
 26050 ;;		wreg, cstack
 26051 ;; Tracked objects:
 26052 ;;		On entry : 0/0
 26053 ;;		On exit  : 0/0
 26054 ;;		Unchanged: 0/0
 26055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26056 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26057 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26058 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26059 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26060 ;;Total ram usage:        2 bytes
 26061 ;; Hardware stack levels used: 1
 26062 ;; Hardware stack levels required when called: 1
 26063 ;; This function calls:
 26064 ;;		i2_LCD_EnablePulse
 26065 ;; This function is called by:
 26066 ;;		i2_LCD_SetCursor
 26067 ;;		i2_LCD_Clear
 26068 ;;		i2_LCD_Init
 26069 ;; This function uses a non-reentrant model
 26070 ;;
 26071                           
 26072                           	psect	text109
 26073   0063EA                     __ptext109:
 26074                           	callstack 0
 26075   0063EA                     i2_LCD_Command:
 26076                           	callstack 14
 26077                           
 26078                           ;incstack = 0
 26079                           ;i2LCD_Command@cmd stored from wreg
 26080   0063EA  6E02               	movwf	i2LCD_Command@cmd^0,c
 26081   0063EC  92BB               	bcf	187,1,c	;volatile
 26082   0063EE                     
 26083                           ;LCM_S01604DSF.c: 23:     LATC = cmd;
 26084   0063EE  0060  F00B  FFBC   	movff	i2LCD_Command@cmd,16316	;volatile
 26085   0063F4                     
 26086                           ;LCM_S01604DSF.c: 24:     LCD_EnablePulse();
 26087   0063F4  EC12  F032         	call	i2_LCD_EnablePulse	;wreg free
 26088   0063F8                     
 26089                           ;LCM_S01604DSF.c: 25:     _delay((unsigned long)((2)*(64000000UL/4000.0)));
 26090   0063F8  0E2A               	movlw	42
 26091   0063FA  6E01               	movwf	??i2_LCD_Command^0,c
 26092   0063FC  0E8E               	movlw	142
 26093   0063FE                     i2u947_47:
 26094   0063FE  2EE8               	decfsz	wreg,f,c
 26095   006400  D7FE               	bra	i2u947_47
 26096   006402  2E01               	decfsz	??i2_LCD_Command^0,f,c
 26097   006404  D7FC               	bra	i2u947_47
 26098   006406  0012               	return		;funcret
 26099   006408                     __end_ofi2_LCD_Command:
 26100                           	callstack 0
 26101                           
 26102 ;; *************** function i2_LCD_EnablePulse *****************
 26103 ;; Defined at:
 26104 ;;		line 14 in file "LCM_S01604DSF.c"
 26105 ;; Parameters:    Size  Location     Type
 26106 ;;		None
 26107 ;; Auto vars:     Size  Location     Type
 26108 ;;		None
 26109 ;; Return value:  Size  Location     Type
 26110 ;;                  1    wreg      void 
 26111 ;; Registers used:
 26112 ;;		wreg
 26113 ;; Tracked objects:
 26114 ;;		On entry : 0/0
 26115 ;;		On exit  : 0/0
 26116 ;;		Unchanged: 0/0
 26117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26118 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26119 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26120 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26121 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26122 ;;Total ram usage:        0 bytes
 26123 ;; Hardware stack levels used: 1
 26124 ;; This function calls:
 26125 ;;		Nothing
 26126 ;; This function is called by:
 26127 ;;		i2_LCD_Command
 26128 ;;		i2_LCD_Char
 26129 ;; This function uses a non-reentrant model
 26130 ;;
 26131                           
 26132                           	psect	text110
 26133   006424                     __ptext110:
 26134                           	callstack 0
 26135   006424                     i2_LCD_EnablePulse:
 26136                           	callstack 14
 26137   006424  80BB               	bsf	187,0,c	;volatile
 26138   006426                     
 26139                           ;LCM_S01604DSF.c: 16:     _delay((unsigned long)((1)*(64000000UL/4000000.0)));
 26140   006426  0E05               	movlw	5
 26141   006428                     i2u948_47:
 26142   006428  2EE8               	decfsz	wreg,f,c
 26143   00642A  D7FE               	bra	i2u948_47
 26144   00642C  0000               	nop	
 26145   00642E  90BB               	bcf	187,0,c	;volatile
 26146   006430                     
 26147                           ;LCM_S01604DSF.c: 18:     _delay((unsigned long)((100)*(64000000UL/4000000.0)));
 26148   006430  0EE4               	movlw	228
 26149   006432                     i2u949_47:
 26150   006432  D000               	nop2	
 26151   006434  D000               	nop2	
 26152   006436  2EE8               	decfsz	wreg,f,c
 26153   006438  D7FC               	bra	i2u949_47
 26154   00643A  D000               	nop2	
 26155   00643C  D000               	nop2	
 26156   00643E  0012               	return		;funcret
 26157   006440                     __end_ofi2_LCD_EnablePulse:
 26158                           	callstack 0
 26159                           
 26160 ;; *************** function _ADC_ThresholdISR *****************
 26161 ;; Defined at:
 26162 ;;		line 422 in file "mcc_generated_files/adc/src/adc.c"
 26163 ;; Parameters:    Size  Location     Type
 26164 ;;		None
 26165 ;; Auto vars:     Size  Location     Type
 26166 ;;		None
 26167 ;; Return value:  Size  Location     Type
 26168 ;;                  1    wreg      void 
 26169 ;; Registers used:
 26170 ;;		None
 26171 ;; Tracked objects:
 26172 ;;		On entry : 0/0
 26173 ;;		On exit  : 0/0
 26174 ;;		Unchanged: 0/0
 26175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26176 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26177 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26178 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26179 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26180 ;;Total ram usage:        0 bytes
 26181 ;; Hardware stack levels used: 1
 26182 ;; This function calls:
 26183 ;;		Nothing
 26184 ;; This function is called by:
 26185 ;;		_INTERRUPT_InterruptManager
 26186 ;; This function uses a non-reentrant model
 26187 ;;
 26188                           
 26189                           	psect	text111
 26190   006540                     __ptext111:
 26191                           	callstack 0
 26192   006540                     _ADC_ThresholdISR:
 26193                           	callstack 20
 26194   006540                     
 26195                           ;mcc_generated_files/adc/src/adc.c: 424:     PIR1bits.ADTIF = 0;
 26196   006540  0139               	movlb	57	; () banked
 26197   006542  97A1               	bcf	161,3,b	;volatile
 26198   006544                     
 26199                           ; BSR set to: 57
 26200   006544  0012               	return		;funcret
 26201   006546                     __end_of_ADC_ThresholdISR:
 26202                           	callstack 0
 26203                           
 26204 ;; *************** function _ADC_ISR *****************
 26205 ;; Defined at:
 26206 ;;		line 408 in file "mcc_generated_files/adc/src/adc.c"
 26207 ;; Parameters:    Size  Location     Type
 26208 ;;		None
 26209 ;; Auto vars:     Size  Location     Type
 26210 ;;		None
 26211 ;; Return value:  Size  Location     Type
 26212 ;;                  1    wreg      void 
 26213 ;; Registers used:
 26214 ;;		None
 26215 ;; Tracked objects:
 26216 ;;		On entry : 0/0
 26217 ;;		On exit  : 0/0
 26218 ;;		Unchanged: 0/0
 26219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26220 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26221 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26222 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26223 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26224 ;;Total ram usage:        0 bytes
 26225 ;; Hardware stack levels used: 1
 26226 ;; This function calls:
 26227 ;;		Nothing
 26228 ;; This function is called by:
 26229 ;;		_INTERRUPT_InterruptManager
 26230 ;; This function uses a non-reentrant model
 26231 ;;
 26232                           
 26233                           	psect	text112
 26234   006546                     __ptext112:
 26235                           	callstack 0
 26236   006546                     _ADC_ISR:
 26237                           	callstack 20
 26238   006546                     
 26239                           ;mcc_generated_files/adc/src/adc.c: 410:     PIR1bits.ADIF = 0;
 26240   006546  0139               	movlb	57	; () banked
 26241   006548  95A1               	bcf	161,2,b	;volatile
 26242   00654A                     
 26243                           ; BSR set to: 57
 26244   00654A  0012               	return		;funcret
 26245   00654C                     __end_of_ADC_ISR:
 26246                           	callstack 0
 26247                           
 26248                           ;
 26249                           ; H/W Interrupt Vector Table @ 0x8
 26250                           ;
 26251                           
 26252                           	psect	ivt0x8
 26253   000008                     __pivt0x8:
 26254                           	callstack 0
 26255   000008                     ivt0x8_base:
 26256                           	callstack 0
 26257                           
 26258                           ; high-priority vector
 26259   000008  EF25  F026         	goto	_INTERRUPT_InterruptManager
 26260   000018                     	org	16
 26261                           
 26262                           ; low-priority vector
 26263   000018  00FF               	reset	
 26264                           
 26265                           	psect	rparam
 26266   000001                     ___rparam_used  equ	1
 26267   000000                     ___param_bank   equ	0
 26268   000000                     __Lparam        equ	__Lrparam
 26269   000000                     __Hparam        equ	__Hrparam
 26270                           
 26271                           	psect	config
 26272                           
 26273                           ;Config register CONFIG1L @ 0x300000
 26274                           ;	External Oscillator Selection
 26275                           ;	FEXTOSC = ECH, EC (external clock) above 8 MHz; PFM set to high power
 26276                           ;	Reset Oscillator Selection
 26277                           ;	RSTOSC = HFINTOSC_64MHZ, HFINTOSC with HFFRQ = 64 MHz and CDIV = 1:1
 26278   300000                     	org	3145728
 26279   300000  8F                 	db	143
 26280                           
 26281                           ;Config register CONFIG1H @ 0x300001
 26282                           ;	Clock out Enable bit
 26283                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
 26284                           ;	PRLOCKED One-Way Set Enable bit
 26285                           ;	PR1WAY = ON, PRLOCK bit can be cleared and set only once
 26286                           ;	Clock Switch Enable bit
 26287                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 26288                           ;	Fail-Safe Clock Monitor Enable bit
 26289                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
 26290   300001                     	org	3145729
 26291   300001  FF                 	db	255
 26292                           
 26293                           ;Config register CONFIG2L @ 0x300002
 26294                           ;	MCLR Enable bit
 26295                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
 26296                           ;	Power-up timer selection bits
 26297                           ;	PWRTS = PWRT_OFF, PWRT is disabled
 26298                           ;	Multi-vector enable bit
 26299                           ;	MVECEN = OFF, Interrupt contoller does not use vector table to prioritze interrupts
 26300                           ;	IVTLOCK bit One-way set enable bit
 26301                           ;	IVT1WAY = ON, IVTLOCK bit can be cleared and set only once
 26302                           ;	Low Power BOR Enable bit
 26303                           ;	LPBOREN = OFF, ULPBOR disabled
 26304                           ;	Brown-out Reset Enable bits
 26305                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
 26306   300002                     	org	3145730
 26307   300002  F7                 	db	247
 26308                           
 26309                           ;Config register CONFIG2H @ 0x300003
 26310                           ;	Brown-out Reset Voltage Selection bits
 26311                           ;	BORV = VBOR_2P45, Brown-out Reset Voltage (VBOR) set to 2.45V
 26312                           ;	ZCD Disable bit
 26313                           ;	ZCD = OFF, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
 26314                           ;	PPSLOCK bit One-Way Set Enable bit
 26315                           ;	PPS1WAY = ON, PPSLOCK bit can be cleared and set only once; PPS registers remain locke
      +                          d after one clear/set cycle
 26316                           ;	Stack Full/Underflow Reset Enable bit
 26317                           ;	STVREN = ON, Stack full/underflow will cause Reset
 26318                           ;	Debugger Enable bit
 26319                           ;	DEBUG = 0x1, unprogrammed default
 26320                           ;	Extended Instruction Set Enable bit
 26321                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
 26322   300003                     	org	3145731
 26323   300003  FF                 	db	255
 26324                           
 26325                           ;Config register CONFIG3L @ 0x300004
 26326                           ;	WDT Period selection bits
 26327                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 26328                           ;	WDT operating mode
 26329                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
 26330   300004                     	org	3145732
 26331   300004  9F                 	db	159
 26332                           
 26333                           ;Config register CONFIG3H @ 0x300005
 26334                           ;	WDT Window Select bits
 26335                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
 26336                           ;	WDT input clock selector
 26337                           ;	WDTCCS = SC, Software Control
 26338   300005                     	org	3145733
 26339   300005  FF                 	db	255
 26340                           
 26341                           ;Config register CONFIG4L @ 0x300006
 26342                           ;	Boot Block Size selection bits
 26343                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
 26344                           ;	Boot Block enable bit
 26345                           ;	BBEN = OFF, Boot block disabled
 26346                           ;	Storage Area Flash enable bit
 26347                           ;	SAFEN = OFF, SAF disabled
 26348                           ;	Application Block write protection bit
 26349                           ;	WRTAPP = OFF, Application Block not write protected
 26350   300006                     	org	3145734
 26351   300006  FF                 	db	255
 26352                           
 26353                           ;Config register CONFIG4H @ 0x300007
 26354                           ;	Boot Block Write Protection bit
 26355                           ;	WRTB = OFF, Boot Block not write-protected
 26356                           ;	Configuration Register Write Protection bit
 26357                           ;	WRTC = OFF, Configuration registers not write-protected
 26358                           ;	Data EEPROM Write Protection bit
 26359                           ;	WRTD = OFF, Data EEPROM not write-protected
 26360                           ;	SAF Write protection bit
 26361                           ;	WRTSAF = OFF, SAF not Write Protected
 26362                           ;	Low Voltage Programming Enable bit
 26363                           ;	LVP = ON, Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored
 26364   300007                     	org	3145735
 26365   300007  FF                 	db	255
 26366                           
 26367                           ;Config register CONFIG5L @ 0x300008
 26368                           ;	PFM and Data EEPROM Code Protection bit
 26369                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
 26370   300008                     	org	3145736
 26371   300008  FF                 	db	255
 26372                           
 26373                           ;Config register CONFIG5H @ 0x300009
 26374                           ;	unspecified, using default values
 26375   300009                     	org	3145737
 26376   300009  FF                 	db	255
 26377                           tosu	equ	0x3FFF
 26378                           tosh	equ	0x3FFE
 26379                           tosl	equ	0x3FFD
 26380                           stkptr	equ	0x3FFC
 26381                           pclatu	equ	0x3FFB
 26382                           pclath	equ	0x3FFA
 26383                           pcl	equ	0x3FF9
 26384                           tblptru	equ	0x3FF8
 26385                           tblptrh	equ	0x3FF7
 26386                           tblptrl	equ	0x3FF6
 26387                           tablat	equ	0x3FF5
 26388                           prodh	equ	0x3FF4
 26389                           prodl	equ	0x3FF3
 26390                           indf0	equ	0x3FEF
 26391                           postinc0	equ	0x3FEE
 26392                           postdec0	equ	0x3FED
 26393                           preinc0	equ	0x3FEC
 26394                           plusw0	equ	0x3FEB
 26395                           fsr0h	equ	0x3FEA
 26396                           fsr0l	equ	0x3FE9
 26397                           wreg	equ	0x3FE8
 26398                           indf1	equ	0x3FE7
 26399                           postinc1	equ	0x3FE6
 26400                           postdec1	equ	0x3FE5
 26401                           preinc1	equ	0x3FE4
 26402                           plusw1	equ	0x3FE3
 26403                           fsr1h	equ	0x3FE2
 26404                           fsr1l	equ	0x3FE1
 26405                           bsr	equ	0x3FE0
 26406                           indf2	equ	0x3FDF
 26407                           postinc2	equ	0x3FDE
 26408                           postdec2	equ	0x3FDD
 26409                           preinc2	equ	0x3FDC
 26410                           plusw2	equ	0x3FDB
 26411                           fsr2h	equ	0x3FDA
 26412                           fsr2l	equ	0x3FD9
 26413                           status	equ	0x3FD8

Data Sizes:
    Strings     248
    Constant    28
    Data        0
    BSS         537
    Persistent  16
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     93      94
    BANK0           160    117     155
    BANK1           256    214     216
    BANK2           256      0      80
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0

Pointer List with Targets:

    ADC_ConversionDoneCallback	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), NULL(NULL[0]), 

    ADC_ThresholdCallback	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), NULL(NULL[0]), 

    BP1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> BP1_DefaultInterruptHandler(), int_BP1(), NULL(), 

    BP1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> BP1_DefaultInterruptHandler(), int_BP1(), 

    BP2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> BP2_DefaultInterruptHandler(), int_BP2(), NULL(), 

    BP2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> BP2_DefaultInterruptHandler(), int_BP2(), 

    BP3_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> BP3_DefaultInterruptHandler(), int_BP3(), NULL(), 

    BP3_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> BP3_DefaultInterruptHandler(), int_BP3(), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK1[11]), 

    f$.$buffer	PTR unsigned char  size(2) Largest target is 16
		 -> LCD_UpdateMenu@buffer(BANK1[16]), 

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK1[11]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 16
		 -> LCD_UpdateMenu@buffer(BANK1[16]), 

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK1[11]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    i2sprintf@f$.$buffer	PTR unsigned char  size(2) Largest target is 16
		 -> i2LCD_UpdateMenu@buffer(BANK0[16]), LCD_UpdateMenu@buffer(BANK1[16]), 

    i2sprintf@f$.$source	PTR const unsigned char  size(2) Largest target is 0

    INT0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), NULL(), 

    INT0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), 

    INT1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), NULL(), 

    INT1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), 

    INT2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT2_DefaultInterruptHandler(), NULL(), 

    INT2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT2_DefaultInterruptHandler(), 

    LCD_String@str	PTR const unsigned char  size(2) Largest target is 17
		 -> LCD_UpdateMenu@buffer(BANK1[16]), STR_1(CODE[7]), STR_10(CODE[16]), STR_11(CODE[15]), 
		 -> STR_12(CODE[16]), STR_13(CODE[14]), STR_14(CODE[15]), STR_15(CODE[9]), 
		 -> STR_16(CODE[8]), STR_18(CODE[14]), STR_2(CODE[17]), STR_3(CODE[16]), 
		 -> STR_4(CODE[5]), STR_5(CODE[16]), STR_6(CODE[15]), STR_7(CODE[15]), 
		 -> STR_8(CODE[14]), STR_9(CODE[14]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    memcpy@d1	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    memcpy@s1	PTR const void  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK1[11]), 

    read_prec_or_width@ap	PTR PTR void [1] size(2) Largest target is 2
		 -> sprintf@ap(BANK1[2]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK1[2]), 

    S2201$buffer	PTR unsigned char  size(2) Largest target is 16
		 -> LCD_UpdateMenu@buffer(BANK1[16]), 

    S2201$source	PTR const unsigned char  size(2) Largest target is 0

    sp__memcpy	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_17(CODE[7]), STR_19(CODE[7]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 16
		 -> LCD_UpdateMenu@buffer(BANK1[16]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_20(CODE[4]), STR_23(CODE[4]), 

    TMR1_GateCallback	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_DefaultGateCallback(), NULL(), 

    TMR1_OverflowCallback	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_DefaultOverflowCallback(), TMR1_handler(), NULL(), 

    TMR1_OverflowCallbackRegister@CallbackHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_handler(), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK1[2]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 7
		 -> STR_17(CODE[7]), STR_19(CODE[7]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK1[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK1[11]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK1[2]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 7
		 -> STR_17(CODE[7]), STR_19(CODE[7]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_17(CODE[7]), STR_19(CODE[7]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK1[11]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _TMR1_OverflowISR->_TMR1_CounterSet
    _appliquer_action->_on_leds
    _on_leds->_send_leds
    _off_leds->_send_leds
    _send_leds->_send_color
    _send_color->_send_byte
    _send_byte->_send_bit
    i2_vfpfcnvrt->i2_efgtoa
    i2_efgtoa->i2___fltol
    i2_efgtoa->i2_floorf
    i2_pad->i2_fputs
    i2_fputs->i2_fputc
    i2_floorf->i2___fldiv
    i2___fltol->i2_lire_tension
    i2___flsub->i2___flmul
    i2___flge->i2___flmul
    i2_lire_tension->i2___fldiv
    i2___flmul->i2___xxtofl
    i2___fldiv->i2___flmul
    i2_LCD_String->i2_LCD_Char
    i2_LCD_SetCursor->i2_LCD_Command
    i2_LCD_Init->i2_LCD_Clear
    i2_LCD_Clear->i2_LCD_Command

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    _BP3_ISR->_int_BP3
    _int_BP3->i2_LCD_UpdateMenu
    _BP2_ISR->_int_BP2
    _int_BP2->i2_LCD_UpdateMenu
    _BP1_ISR->_int_BP1
    _int_BP1->i2_LCD_UpdateMenu
    i2_LCD_UpdateMenu->i2_sprintf
    i2_sprintf->i2_vfprintf
    i2_vfprintf->i2_vfpfcnvrt
    i2_vfpfcnvrt->i2_efgtoa

Critical Paths under _main in BANK1

    _main->_LCD_UpdateMenu
    _SYSTEM_Initialize->_TMR1_Initialize
    _PIN_MANAGER_Initialize->_BP1_SetInterruptHandler
    _PIN_MANAGER_Initialize->_BP2_SetInterruptHandler
    _PIN_MANAGER_Initialize->_BP3_SetInterruptHandler
    _INTERRUPT_Initialize->_INT0_SetInterruptHandler
    _INTERRUPT_Initialize->_INT1_SetInterruptHandler
    _INTERRUPT_Initialize->_INT2_SetInterruptHandler
    _LCD_UpdateMenu->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->___fltol
    _efgtoa->_floorf
    _pad->_fputs
    _fputs->_fputc
    _floorf->___fldiv
    ___fltol->_lire_tension
    ___flsub->___flmul
    ___flge->___flmul
    _lire_tension->___fldiv
    ___flmul->___xxtofl
    ___fldiv->___flmul
    _LCD_String->_LCD_Char
    _LCD_SetCursor->_LCD_Command
    _LCD_Init->_LCD_Clear
    _LCD_Clear->_LCD_Command

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   17116
                     _ADC_Initialize
            _BP1_SetInterruptHandler
            _BP2_SetInterruptHandler
            _BP3_SetInterruptHandler
                     _LCD_UpdateMenu
                  _SYSTEM_Initialize
      _TMR1_OverflowCallbackRegister
 ---------------------------------------------------------------------------------
 (1) _TMR1_OverflowCallbackRegister                        2     0      2      23
                                              6 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     141
                     _ADC_Initialize
                   _CLOCK_Initialize
               _INTERRUPT_Initialize
             _PIN_MANAGER_Initialize
                    _TMR1_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      2     2      0       0
                                              6 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0      72
            _BP1_SetInterruptHandler
            _BP2_SetInterruptHandler
            _BP3_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _BP3_SetInterruptHandler                              2     0      2      24
                                              6 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (3) _BP2_SetInterruptHandler                              2     0      2      24
                                              6 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (3) _BP1_SetInterruptHandler                              2     0      2      24
                                              6 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0      69
           _INT0_SetInterruptHandler
           _INT1_SetInterruptHandler
           _INT2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT2_SetInterruptHandler                             2     0      2      23
                                              6 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (3) _INT1_SetInterruptHandler                             2     0      2      23
                                              6 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             2     0      2      23
                                              6 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _CLOCK_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_UpdateMenu                                      24    24      0   16877
                                            190 BANK1     24    24      0
                           _LCD_Char
                           _LCD_Init
                      _LCD_SetCursor
                         _LCD_String
                            ___fltol
                       _lire_tension
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             23    15      8   13136
                                            169 BANK1     21    13      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6   12916
                                            161 BANK1      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           16    10      6   12762
                                            146 BANK1     15     9      6
                             _efgtoa
                              _fputc
                 _read_prec_or_width
 ---------------------------------------------------------------------------------
 (5) _read_prec_or_width                                   9     5      4     182
                                              6 BANK1      9     5      4
 ---------------------------------------------------------------------------------
 (5) _efgtoa                                              56    49      7   11810
                                             90 BANK1     56    49      7
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                               _labs
                             _memcpy
                                _pad
                             _strcpy
 ---------------------------------------------------------------------------------
 (6) _strcpy                                               6     2      4      77
                                              6 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (6) _pad                                                  9     3      6     707
                                             22 BANK1      9     3      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4     331
                                             15 BANK1      7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                9     5      4     232
                                              6 BANK1      9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _memcpy                                              11     5      6     146
                                              6 BANK1     11     5      6
 ---------------------------------------------------------------------------------
 (6) _labs                                                 8     4      4      69
                                              6 BANK1      8     4      4
 ---------------------------------------------------------------------------------
 (6) _floorf                                              20    16      4     340
                                             70 BANK1     20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fpclassifyf                                       14    10      4     137
                                              6 BANK1     14    10      4
 ---------------------------------------------------------------------------------
 (6) ___fltol                                             10     6      4     234
                                             80 BANK1     10     6      4
                       _lire_tension (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flsub                                              8     0      8    2037
                                             45 BANK1      8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fladd                                             16     8      8    1988
                                              6 BANK1     16     8      8
 ---------------------------------------------------------------------------------
 (6) ___flneg                                              4     0      4      46
                                              6 BANK1      4     0      4
 ---------------------------------------------------------------------------------
 (6) ___flge                                              12     4      8     190
                                             45 BANK1     12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fleq                                              12     4      8      94
                                              6 BANK1     12     4      8
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4     298
                                              6 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4     302
                                              6 BANK1      8     4      4
 ---------------------------------------------------------------------------------
 (2) _lire_tension                                        10     6      4    3026
                                             70 BANK1     10     6      4
                  _ADC_ChannelSelect
            _ADC_ConversionResultGet
                _ADC_ConversionStart
                            ___fldiv
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     338
                                              6 BANK1     14    10      4
 ---------------------------------------------------------------------------------
 (6) ___flmul                                             25    17      8    1480
                                             20 BANK1     25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fldiv                                             25    17      8    1133
                                             45 BANK1     25    17      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) _ADC_ConversionStart                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _ADC_ConversionResultGet                              4     2      2       0
                                              6 BANK1      4     2      2
 ---------------------------------------------------------------------------------
 (3) _ADC_ChannelSelect                                    1     1      0      29
                                              6 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (2) _LCD_String                                           2     0      2      93
                                              8 BANK1      2     0      2
                           _LCD_Char
 ---------------------------------------------------------------------------------
 (3) _LCD_Char                                             2     2      0      29
                                              6 BANK1      2     2      0
                    _LCD_EnablePulse
 ---------------------------------------------------------------------------------
 (2) _LCD_SetCursor                                        6     5      1     155
                                              8 BANK1      6     5      1
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (2) _LCD_Init                                             2     2      0      58
                                              9 BANK1      2     2      0
                          _LCD_Clear
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (3) _LCD_Clear                                            1     1      0      29
                                              8 BANK1      1     1      0
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (3) _LCD_Command                                          2     2      0      29
                                              6 BANK1      2     2      0
                    _LCD_EnablePulse
 ---------------------------------------------------------------------------------
 (4) _LCD_EnablePulse                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _INTERRUPT_InterruptManager                          6     6      0   53576
                                              0 BANK1      6     6      0
                            _ADC_ISR
                   _ADC_ThresholdISR
                    _PIN_MANAGER_IOC
                   _TMR1_OverflowISR
 ---------------------------------------------------------------------------------
 (11) _TMR1_OverflowISR                                    0     0      0     113
                                NULL *
                    _TMR1_CounterSet
       _TMR1_DefaultOverflowCallback *
                       _TMR1_handler *
 ---------------------------------------------------------------------------------
 (12) _TMR1_handler                                        2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (12) _TMR1_DefaultOverflowCallback                        0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _TMR1_CounterSet                                     3     1      2     113
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (11) _PIN_MANAGER_IOC                                     0     0      0   53463
                            _BP1_ISR
                            _BP2_ISR
                            _BP3_ISR
 ---------------------------------------------------------------------------------
 (12) _BP3_ISR                                             0     0      0   18761
                                NULL *
        _BP3_DefaultInterruptHandler *
                            _int_BP3 *
 ---------------------------------------------------------------------------------
 (13) _int_BP3                                             2     2      0   18761
                                            115 BANK0      2     2      0
                   _appliquer_action
                   i2_LCD_UpdateMenu
 ---------------------------------------------------------------------------------
 (14) _appliquer_action                                    7     7      0    1410
                                             29 COMRAM     7     7      0
                           _off_leds
                            _on_leds
 ---------------------------------------------------------------------------------
 (15) _on_leds                                             9     7      2     708
                                             20 COMRAM     9     7      2
                          _send_leds
 ---------------------------------------------------------------------------------
 (15) _off_leds                                            6     6      0     633
                                             20 COMRAM     6     6      0
                          _send_leds
 ---------------------------------------------------------------------------------
 (16) _send_leds                                          14    14      0     407
                                              6 COMRAM    14    14      0
                         _send_color
                       _ws2812_reset
 ---------------------------------------------------------------------------------
 (17) _ws2812_reset                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _send_color                                          3     1      2     181
                                              3 COMRAM     3     1      2
                          _send_byte
 ---------------------------------------------------------------------------------
 (18) _send_byte                                           2     2      0     106
                                              1 COMRAM     2     2      0
                           _send_bit
 ---------------------------------------------------------------------------------
 (19) _send_bit                                            1     1      0      29
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (13) _BP3_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _BP2_ISR                                             0     0      0   17351
                                NULL *
        _BP2_DefaultInterruptHandler *
                            _int_BP2 *
 ---------------------------------------------------------------------------------
 (13) _int_BP2                                             2     2      0   17351
                                            115 BANK0      2     2      0
                   i2_LCD_UpdateMenu
 ---------------------------------------------------------------------------------
 (13) _BP2_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _BP1_ISR                                             0     0      0   17351
                                NULL *
        _BP1_DefaultInterruptHandler *
                            _int_BP1 *
 ---------------------------------------------------------------------------------
 (13) _int_BP1                                             2     2      0   17351
                                            115 BANK0      2     2      0
                   i2_LCD_UpdateMenu
 ---------------------------------------------------------------------------------
 (14) i2_LCD_UpdateMenu                                   24    24      0   17351
                                             91 BANK0     24    24      0
                         i2_LCD_Char
                         i2_LCD_Init
                    i2_LCD_SetCursor
                       i2_LCD_String
                          i2___fltol
                     i2_lire_tension
                          i2_sprintf
 ---------------------------------------------------------------------------------
 (15) i2_sprintf                                          23    15      8   13554
                                             70 BANK0     21    13      8
                         i2_vfprintf
 ---------------------------------------------------------------------------------
 (16) i2_vfprintf                                          8     2      6   13224
                                             62 BANK0      8     2      6
                        i2_vfpfcnvrt
 ---------------------------------------------------------------------------------
 (17) i2_vfpfcnvrt                                        16    10      6   12997
                                             47 BANK0     15     9      6
                           i2_efgtoa
                            i2_fputc
               i2_read_prec_or_width
 ---------------------------------------------------------------------------------
 (18) i2_read_prec_or_width                                9     5      4     182
                                              0 COMRAM     9     5      4
 ---------------------------------------------------------------------------------
 (18) i2_efgtoa                                           56    49      7   11809
                                             84 COMRAM     9     2      7
                                              0 BANK0     47    47      0
                          i2___awdiv
                          i2___awmod
                          i2___fladd
                          i2___fldiv
                           i2___fleq
                           i2___flge
                          i2___flmul
                          i2___flneg
                          i2___flsub
                          i2___fltol
                    i2___fpclassifyf
                           i2_floorf
                             i2_labs
                           i2_memcpy
                              i2_pad
                           i2_strcpy
 ---------------------------------------------------------------------------------
 (19) i2_strcpy                                            6     2      4      77
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (19) i2_pad                                               9     3      6     707
                                             16 COMRAM     9     3      6
                            i2_fputc
                            i2_fputs
 ---------------------------------------------------------------------------------
 (20) i2_fputs                                             7     3      4     331
                                              9 COMRAM     7     3      4
                            i2_fputc
 ---------------------------------------------------------------------------------
 (18) i2_fputc                                             9     5      4     232
                                              0 COMRAM     9     5      4
                            i2_putch
 ---------------------------------------------------------------------------------
 (19) i2_putch                                             1     1      0       0
 ---------------------------------------------------------------------------------
 (19) i2_memcpy                                           11     5      6     146
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (19) i2_labs                                              8     4      4      69
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (19) i2_floorf                                           20    16      4     340
                                             64 COMRAM    20    16      4
                          i2___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (19) i2___fpclassifyf                                    14    10      4     137
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (19) i2___fltol                                          10     6      4     233
                                             74 COMRAM    10     6      4
                     i2_lire_tension (ARG)
 ---------------------------------------------------------------------------------
 (19) i2___flsub                                           8     0      8    2037
                                             39 COMRAM     8     0      8
                          i2___fladd
                          i2___flmul (ARG)
 ---------------------------------------------------------------------------------
 (20) i2___fladd                                          16     8      8    1988
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (19) i2___flneg                                           4     0      4      46
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (19) i2___flge                                           12     4      8     190
                                             39 COMRAM    12     4      8
                          i2___flmul (ARG)
 ---------------------------------------------------------------------------------
 (19) i2___fleq                                           12     4      8      94
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (19) i2___awmod                                           6     2      4     298
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (19) i2___awdiv                                           8     4      4     302
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (15) i2_lire_tension                                     10     6      4    3025
                                             64 COMRAM    10     6      4
                i2_ADC_ChannelSelect
          i2_ADC_ConversionResultGet
              i2_ADC_ConversionStart
                          i2___fldiv
                          i2___flmul
                         i2___xxtofl
 ---------------------------------------------------------------------------------
 (16) i2___xxtofl                                         14    10      4     337
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (19) i2___flmul                                          25    17      8    1480
                                             14 COMRAM    25    17      8
                         i2___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (19) i2___fldiv                                          25    17      8    1133
                                             39 COMRAM    25    17      8
                          i2___flmul (ARG)
                         i2___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (16) i2_ADC_ConversionStart                               0     0      0       0
 ---------------------------------------------------------------------------------
 (16) i2_ADC_ConversionResultGet                           4     2      2       0
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (16) i2_ADC_ChannelSelect                                 1     1      0      29
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (15) i2_LCD_String                                        2     0      2      93
                                              2 COMRAM     2     0      2
                         i2_LCD_Char
 ---------------------------------------------------------------------------------
 (16) i2_LCD_Char                                          2     2      0      29
                                              0 COMRAM     2     2      0
                  i2_LCD_EnablePulse
 ---------------------------------------------------------------------------------
 (15) i2_LCD_SetCursor                                     6     5      1     155
                                              2 COMRAM     6     5      1
                      i2_LCD_Command
 ---------------------------------------------------------------------------------
 (15) i2_LCD_Init                                          2     2      0      58
                                              3 COMRAM     2     2      0
                        i2_LCD_Clear
                      i2_LCD_Command
 ---------------------------------------------------------------------------------
 (16) i2_LCD_Clear                                         1     1      0      29
                                              2 COMRAM     1     1      0
                      i2_LCD_Command
 ---------------------------------------------------------------------------------
 (16) i2_LCD_Command                                       2     2      0      29
                                              0 COMRAM     2     2      0
                  i2_LCD_EnablePulse
 ---------------------------------------------------------------------------------
 (17) i2_LCD_EnablePulse                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _BP1_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (12) NULL(Fake)                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _ADC_ThresholdISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _ADC_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 20
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Initialize
   _BP1_SetInterruptHandler
   _BP2_SetInterruptHandler
   _BP3_SetInterruptHandler
   _LCD_UpdateMenu
     _LCD_Char
       _LCD_EnablePulse
     _LCD_Init
       _LCD_Clear
         _LCD_Command
           _LCD_EnablePulse
       _LCD_Command
     _LCD_SetCursor
       _LCD_Command
     _LCD_String
       _LCD_Char
     ___fltol
       _lire_tension (ARG)
         _ADC_ChannelSelect
         _ADC_ConversionResultGet
         _ADC_ConversionStart
         ___fldiv
           ___flmul (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul
         ___xxtofl
     _lire_tension
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
               ___flmul (ARG)
             ___flmul
             ___flneg
             ___flsub
               ___fladd
               ___flmul (ARG)
             ___fltol
             ___fpclassifyf
             _floorf
               ___fldiv (ARG)
             _labs
             _memcpy
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
             _strcpy
           _fputc
           _read_prec_or_width
   _SYSTEM_Initialize
     _ADC_Initialize
     _CLOCK_Initialize
     _INTERRUPT_Initialize
       _INT0_SetInterruptHandler
       _INT1_SetInterruptHandler
       _INT2_SetInterruptHandler
     _PIN_MANAGER_Initialize
       _BP1_SetInterruptHandler
       _BP2_SetInterruptHandler
       _BP3_SetInterruptHandler
     _TMR1_Initialize
   _TMR1_OverflowCallbackRegister

 _INTERRUPT_InterruptManager (ROOT)
   _ADC_ISR
   _ADC_ThresholdISR
   _PIN_MANAGER_IOC
     _BP1_ISR
       NULL(Fake) *
       _BP1_DefaultInterruptHandler *
       _int_BP1 *
         i2_LCD_UpdateMenu
           i2_LCD_Char
             i2_LCD_EnablePulse
           i2_LCD_Init
             i2_LCD_Clear
               i2_LCD_Command
                 i2_LCD_EnablePulse
             i2_LCD_Command
           i2_LCD_SetCursor
             i2_LCD_Command
           i2_LCD_String
             i2_LCD_Char
           i2___fltol
             i2_lire_tension (ARG)
               i2_ADC_ChannelSelect
               i2_ADC_ConversionResultGet
               i2_ADC_ConversionStart
               i2___fldiv
                 i2___flmul (ARG)
                   i2___xxtofl (ARG)
                 i2___xxtofl (ARG)
               i2___flmul
               i2___xxtofl
           i2_lire_tension
           i2_sprintf
             i2_vfprintf
               i2_vfpfcnvrt
                 i2_efgtoa
                   i2___awdiv
                   i2___awmod
                   i2___fladd
                   i2___fldiv
                   i2___fleq
                   i2___flge
                     i2___flmul (ARG)
                   i2___flmul
                   i2___flneg
                   i2___flsub
                     i2___fladd
                     i2___flmul (ARG)
                   i2___fltol
                   i2___fpclassifyf
                   i2_floorf
                     i2___fldiv (ARG)
                   i2_labs
                   i2_memcpy
                   i2_pad
                     i2_fputc
                       i2_putch
                     i2_fputs
                       i2_fputc
                   i2_strcpy
                 i2_fputc
                 i2_read_prec_or_width
     _BP2_ISR
       NULL(Fake) *
       _BP2_DefaultInterruptHandler *
       _int_BP2 *
         i2_LCD_UpdateMenu
     _BP3_ISR
       NULL(Fake) *
       _BP3_DefaultInterruptHandler *
       _int_BP3 *
         _appliquer_action
           _off_leds
             _send_leds
               _send_color
                 _send_byte
                   _send_bit
               _ws2812_reset
           _on_leds
             _send_leds
         i2_LCD_UpdateMenu
   _TMR1_OverflowISR
     NULL(Fake) *
     _TMR1_CounterSet *
     _TMR1_DefaultOverflowCallback *
     _TMR1_handler *

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM            4095      0     432     10.5%
BITBIGSFRllh      1329      0       0      0.0%
BITBIGSFRllll      400      0       0      0.0%
BITBIGSFRh         263      0       0      0.0%
BITBANK15          256      0       0      0.0%
BANK15             256      0       0      0.0%
BITBANK14          256      0       0      0.0%
BANK14             256      0       0      0.0%
BITBANK13          256      0       0      0.0%
BANK13             256      0       0      0.0%
BITBANK12          256      0       0      0.0%
BANK12             256      0       0      0.0%
BITBANK11          256      0       0      0.0%
BANK11             256      0       0      0.0%
BITBANK10          256      0       0      0.0%
BANK10             256      0       0      0.0%
BITBANK9           256      0       0      0.0%
BANK9              256      0       0      0.0%
BITBANK8           256      0       0      0.0%
BANK8              256      0       0      0.0%
BITBANK7           256      0       0      0.0%
BANK7              256      0       0      0.0%
BITBANK6           256      0       0      0.0%
BANK6              256      0       0      0.0%
BITBANK5           256      0       0      0.0%
BANK5              256      0       0      0.0%
BITBANK4           256      0       0      0.0%
BANK4              256      0       0      0.0%
BITBANK3           256      0       0      0.0%
BANK3              256      0       0      0.0%
BITBANK2           256      0       0      0.0%
BANK2              256      0      80     31.2%
BITBANK1           256      0       0      0.0%
BANK1              256    214     216     84.4%
BITBANK0           160      0       0      0.0%
BANK0              160    117     155     96.9%
BITCOMRAM           95      0       0      0.0%
COMRAM              95     93      94     98.9%
BITBIGSFRlh         32      0       0      0.0%
BITBIGSFRlllh       20      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0     975      0.0%


Microchip Technology PIC18 Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Wed Jun 11 14:40:37 2025

                                           l9 6408                                  ___fldiv@aexp 0145  
                                ___fldiv@bexp 0144                                  ___fldiv@sign 013D  
                                ?_LCD_Command 0001                                            l12 6414  
                                          l13 6422                                            l21 631E  
                                          l23 633C                                            l16 6342  
                                          l41 621A                                            l18 6360  
                                          l43 621C                                            l35 59E4  
                                          l45 624E                                            l29 5834  
                                          l38 6458                                  ___awdiv@sign 010B  
                                 ?_LCD_String 0108                             ?_ADC_ThresholdISR 0001  
                               _LCD_SetCursor 5988                                           l150 64E2  
                                         l153 6538                                           l162 63C8  
                                         l138 5A9E                                           l326 64D6  
                                         l339 646E                                           l461 650A  
                                         l622 6070                                           l471 6500  
                                         l560 6528                                           l448 57C0  
                                         l537 60F0                                           l481 64F6  
                                         l573 651E                                           l816 569C  
                                         l761 32D8                                           l681 64EC  
                                         l586 6514                                           l875 5C54  
                                         l876 5C54                                           i2l9 6424  
                                 i2___fladd@a 0005                                   i2___fladd@b 0001  
                  ??_INT0_SetInterruptHandler 0108                            ??_ADC_ThresholdISR 0001  
                             _timer1ReloadVal 00E3                                           _pad 5836  
                             __end_of_ADC_ISR 654C                                   i2___fldiv@a 002C  
                                 i2___fldiv@b 0028                                  ___awmod@sign 010B  
                                  i2___xxtofl 415C                                           prod 3FF3  
                             __end_of_BP1_ISR 631A                               ?i2_lire_tension 0041  
                             __end_of_BP2_ISR 62E8                                           tosl 3FFD  
                             __end_of_BP3_ISR 62B6                                           wreg 3FE8  
                                 i2___flmul@a 0013                                   i2___flmul@b 000F  
                         __end_ofi2_vfpfcnvrt 3B7C                                   i2___flsub@a 002C  
                                 i2___flsub@b 0028                                  ___flmul@aexp 0125  
                                ___flmul@bexp 0126               __end_of_BP3_SetInterruptHandler 64F8  
                                ___flmul@sign 0120                                  ___flmul@temp 012B  
                                ___flmul@prod 0127                                  ___fltol@exp1 0159  
                                        l1112 5062                                          l1140 54AA  
                                        l1125 5350                                          l1151 4656  
                                        l1146 4610                                          l1410 1862  
                                        l1155 61A6                                          l1411 1828  
                                        l1502 22D8                                          l1503 22F6  
                                        l1423 1A1C                                          l1512 2404  
                                        l1504 234E                                          l1505 233C  
                                        l1409 1874                                          l1601 0B5A  
                                        l1442 1B04                                          l1426 198E  
                                        l1418 1B40                                          l1178 4550  
                                        l1435 1A5C                                          l1451 5ED4  
                                        l1436 1A4A                                          l1604 03B4  
                                        l1550 40F2                                          l1702 4960  
                                        l1606 01F4                                          l1463 2C1E  
                                        l1543 4096                                          l1536 3FFE  
                                        l1712 3CD4                                          l1465 2A82  
                                        l1474 2AC8                                          l1475 2AE6  
                                        l1539 415A                                          l1723 5C04  
                                        l1476 2B3E                                          l1468 2A46  
                                        l1477 2B2C                                          l1709 3D90  
                                        l1741 4DFE                                          l1590 58A6  
                                        l1638 081E                                          l1495 20BE  
                                        l1663 4B54                                          l1559 5DAC  
                                        l1752 654C                                          l1729 5AFA  
                                        l1586 584E                                          l1674 36B6  
                                        l1499 2442                                          l1659 4B4C  
                                        l1692 5BAC                                          l1749 5E8C  
                                        l1685 38A0                                          l1758 5F1A  
                                        l6200 1710                                          l6210 1750  
                                        l6202 171E                                          l6300 195C  
                                        l6220 1788                                          l6212 1752  
                                        l6204 1720                                          l6310 19B4  
                                        l6302 195E                                          l6230 179C  
                                        l6222 178C                                          l6206 1730  
                                        l6214 1758                                          l7110 001E  
                                        ?_pad 0116                                          l6320 19E2  
                                        l6304 196E                                          l6240 17B0  
                                        l6232 17A0                                          l6224 1790  
                                        l6216 1768                                          l6208 1740  
                                        l7200 03D8                                          l7120 0072  
                                        l7112 0032                                          l6322 19F0  
                                        l6314 19C8                                          l6330 1A0E  
                                        l6306 197E                                          l6250 17C4  
                                        l6242 17B4                                          l6234 17A4  
                                        l6226 1794                                          l6218 177A  
                                        l7210 0410                                          l7202 03E2  
                                        l7130 00AE                                          l7122 007A  
                                        l7114 0040                                          l6500 2958  
                                        l6340 1A78                                          l6332 1A2C  
                                        l6324 19F8                                          l6316 19D2  
                                        l6308 19A4                                          l6260 1836  
                                        l6244 17B8                                          l6236 17A8  
                                        l6228 1798                                          l6252 17C8  
                                        l6180 16A8                                          l7300 0906  
                                        l7220 045A                                          l7212 0428  
                                        l7204 03EA                                          l7140 00F4  
                                        l7124 008A                                          l7132 00B2  
                                        l7116 0044                                          l8020 2FC2  
                                        l7062 640A                                          l6502 296E  
                                        l6350 1AE2                                          l6342 1A86  
                                        l6334 1A42                                          l6326 19FC  
                                        l6318 19E0                                          l6270 1860  
                                        l6262 1842                                          l6254 17F4  
                                        l6246 17BC                                          l6238 17AC  
                                        l6182 16B8                                          l6190 16E0  
                                        l6174 168A                                          l7310 0982  
                                        l7302 093C                                          l7222 046E  
                                        l7230 0566                                          l7214 043A  
                                        l7206 03F0                                          l7142 00FC  
                                        l7134 00DA                                          l7150 013E  
                                        l7126 009A                                          l7118 0068  
                                        l8030 3012                                          l8022 2FD0  
                                        l8102 324A                                          l8014 64E4  
                                        l7064 6412                                          l6520 29C2  
                                        l6504 297E                                          l6512 299E  
                                        l6600 2006                                          l6360 1B20  
                                        l6352 1B02                                          l6344 1AC0  
                                        l6328 1A0C                                          l6280 18B6  
                                        l6272 1882                                          l6264 1846  
                                        l6256 1810                                          l6248 17C0  
                                        l6192 16F0                                          l6184 16C8  
                                        l6176 1698                                          l7320 09BA  
                                        l7312 098A                                          l7304 0944  
                                        l7240 0634                                          l7232 0584  
                                        l7224 04D2                                          l7208 0402  
                                        l7216 0442                                          l7160 0188  
                                        l7152 0166                                          l7144 0114  
                                        l7136 00EA                                          l7128 00A6  
                                        l8040 3064                                          l8032 3020  
                                        l8024 2FEA                                          l8016 2FB0  
                                        l6530 2A12                                          l6522 29DC  
                                        l6514 29AE                                          l6506 2986  
                                        l6610 2046                                          l6602 2014  
                                        l6362 1B2E                                          l6354 1B12  
                                        l6338 1A6C                                          l6346 1AC2  
                                        l6290 18F0                                          l6282 18C4  
                                        l6274 1892                                          l6266 1854  
                                        l6258 1820                                          l6194 16F6  
                                        l6186 16D8                                          l6178 16A6  
                                        l6370 5E54                                          l7330 0A00  
                                        l7322 09BE                                          l7314 0998  
                                        l7306 0948                                          l7250 06E4  
                                        l7242 0642                                          l7234 05B8  
                                        l7226 052A                                          l7218 044A  
                                        l7170 01BC                                          l7154 0176  
                                        l7146 011E                                          l7138 00EE  
                                        l8050 30A4                                          l8042 3072  
                                        l8034 303E                                          l8026 2FF6  
                                        l8018 2FB8                                          l6540 2A6E  
                                        l6532 2A22                                          l6524 29EC  
                                        l6516 29AE                                          l6508 298A  
                                        l6700 23A2                                          l6620 2076  
                                        l6612 204C                                          l6604 2016  
                                        l6364 1B30                                          l6356 1B18  
                                        l6348 1AD2                                          l6292 18F2  
                                        l6284 18D2                                          l6268 1856  
                                        l6196 1708                                          l6188 16DA  
                                        l6372 5E66                                          l7340 0A56  
                                        l7332 0A1C                                          l7324 09C6  
                                        l7316 09AA                                          l7308 0966  
                                        l7260 0752                                          l7252 0718  
                                        l7244 0652                                          l7236 05EC  
                                        l7228 0560                                          l7180 027C  
                                        l7156 017A                                          l8060 30E6  
                                        l8052 30AE                                          l8044 307E  
                                        l8036 3048                                          l8028 3008  
                                        l6550 2AAE                                          l6542 2A70  
                                        l6534 2A36                                          l6526 29FC  
                                        l6470 28BC                                          l6462 288E  
                                        l6710 23FE                                          l6702 23A6  
                                        l6630 20AE                                          l6622 2078  
                                        l6614 205C                                          l6606 2026  
                                        l6358 1B1A                                          l6294 18FC  
                                        l6286 18DE                                          l6278 18A6  
                                        l6198 170A                                          l6374 5E6C  
                                        l7350 0A92                                          l7342 0A5C  
                                        l7334 0A24                                          l7326 09D2  
                                        l7318 09AC                                          l7270 0816  
                                        l7262 075E                                          l7254 072C  
                                        l7246 0686                                          l7238 0600  
                                        l7190 033E                                          l7182 02B0  
                                        l7174 0204                                          l7158 0180  
                                        l7510 386C                                          l8070 3130  
                                        l8062 30F8                                          l8054 30C0  
                                        l8046 3088                                          l8038 305A  
                                        _ADCP 3ED7                                          l7440 634E  
                                        l6560 2B24                                          l6552 2AB8  
                                        l6544 2A80                                          l6536 2A44  
                                        l6528 2A0C                                          l6480 28F4  
                                        l6472 28CC                                          l6464 289C  
                                        l6712 2408                                          l6720 242E  
                                        l6704 23C0                                          l6640 2102  
                                        l6632 20CE                                          l6624 2088  
                                        l6616 2062                                          l6608 2036  
                                        l6800 5324                                          l6288 18E2  
                                        l6296 1902                                          l6368 5E46  
                                        l7360 0AE4                                          l7352 0A98  
                                        l7344 0A6C                                          l7328 09D8  
                                        l7336 0A2A                                          l7280 0858  
                                        l7272 0830                                          l7264 0766  
                                        l7248 06E0                                          l7256 0730  
                                        l7184 02EE                                          l7176 0208  
                                        l7168 01A4                                          l7504 3830  
                                        l8080 3172                                          l8072 313A  
                                        l8064 3102                                          l8056 30CA  
                                        l8048 3092                                          l7610 6326  
                                        l6570 2B92                                          l6554 2AC6  
                                        l6546 2A92                                          l6538 2A50  
                                        l6490 2920                                          l6482 28FA  
                                        l6474 28DC                                          l6466 28AA  
                                        l6722 2432                                          l6714 2418  
                                        l6706 23D4                                          l6650 215A  
                                        l6642 210C                                          l6634 20DE  
                                        l6626 2098                                          l6618 2068  
                                        l6802 532A                                          l6298 1928  
                                        l7370 0B3A                                          l7362 0AF2  
                                        l7354 0A9E                                          l7346 0A78  
                                        l7338 0A3C                                          l7282 0860  
                                        l7274 083E                                          l7290 0880  
                                        l7266 077C                                          l7258 0740  
                                        l7186 0302                                          l7194 0380  
                                        l7178 023C                                          l7506 3856  
                                        l8090 31D4                                          l8082 3180  
                                        l8074 314C                                          l8066 3114  
                                        l8058 30DC                                          l7436 6344  
                                        l7612 632A                                          l7620 6534  
                                        l6580 2BF8                                          l6564 2B4E  
                                        l6572 2B96                                          l6548 2AA8  
                                        l6556 2AD8                                          l6492 2930  
                                        l6484 2900                                          l6476 28DE  
                                        l6468 28AC                                          l6716 2426  
                                        l6708 23EE                                          l6660 21A4  
                                        l6652 2166                                          l6644 2126  
                                        l6628 20A8                                          l6740 4FBE  
                                        l6732 4FA0                                          l6804 5330  
                                        l6820 547E                                          l6812 5400  
                                        l7364 0B0A                                          l7356 0AAE  
                                        l7348 0A80                                          l7292 0892  
                                        l7284 0870                                          l7276 084E  
                                        l7268 07F6                                          l7196 03BC  
                                        l7188 0336                                          l7380 4AE6  
                                        l7460 35F4                                          l8092 31E0  
                                        l8084 318C                                          l8076 3156  
                                        l8068 311E                                          l7438 634A  
                                        l7614 6440                                          l7622 63AA  
                                        l6590 2C14                                          l6582 2BFA  
                                        l6574 2BB0                                          l6566 2B5A  
                                        l6558 2AF6                                          l6494 2940  
                                        l6486 290E                                          l6478 28E4  
                                        l6718 2428                                          l6670 2212  
                                        l6662 21B4                                          l6654 2174  
                                        l6646 2132                                          l6638 20F2  
                                        l7710 3FC8                                          l6750 4FF2  
                                        l6742 4FCC                                          l6734 4FA4  
                                        l6806 5340                                          l6822 54A2  
                                        l6814 5430                                          l6830 4582  
                                        l6726 5E8E                                          l6910 5874  
                                        l6902 5836                                          l7366 0B1A  
                                        l7358 0AB4                                          l7294 08A4  
                                        l7286 0874                                          l7278 0852  
                                        l7198 03CC                                          l7382 4B08  
                                        l7374 4A60                                          l7470 3658  
                                        l7462 3606                                          l8094 31EE  
                                        l8086 31A0                                          l8078 3168  
                                        l7630 64EE                                          l7616 6446  
                                        l7608 6320                                          l6584 2BFE  
                                        l6576 2BC6                                          l6568 2B68  
                                        l6496 2942                                          l6488 2910  
                                        l6680 22BE                                          l6672 2232  
                                        l6664 21D2                                          l6656 2184  
                                        l6648 214E                                          l7720 4040  
                                        l7712 400E                                          l6760 502C  
                                        l6752 4FFA                                          l6744 4FD4  
                                        l6736 4FB2                                          l6808 5348  
                                        l6824 54A8                                          l6816 5440  
                                        l6840 45F0                                          l6832 4592  
                                        l6728 5EA0                                          l6920 48EA  
                                        l5880 4D56                                          l6912 5892  
                                        l6904 5846                                          l7368 0B32  
                                        l7296 08A8                                          l7288 087A  
                                        l7384 4B1A                                          l7376 4A6A  
                                        l7472 3674                                          l7464 3614  
                                        l8096 31FA                                          l8088 31C6  
                                        l7800 5A84                                          l7632 6520  
                                        l7618 64DC                                          l6586 2C0C  
                                        l6578 2BE0                                          l6498 2948  
                                        l6690 2334                                          l6682 22C8  
                                        l6674 225C                                          l6666 21E2  
                                        l6658 2194                                          l7730 40C8  
                                        l7722 404C                                          l7714 4024  
                                        l7706 3FA8                                          l6770 5052  
                                        l6762 5034                                          l6754 5002  
                                        l6746 4FD8                                          l6738 4FBA  
                                        l6818 546E                                          l6842 45FE  
                                        l6834 45C0                                          l6850 616E  
                                        l6922 48F6                                          l6914 4862  
                                        l5882 4D74                                          l5874 4D26  
                                        l6906 585A                                          l7298 08AE  
                                        l7378 4A98                                          l7490 3774  
                                        l7482 36BC                                          l7474 368C  
                                        l7466 3618                                          l7458 35C6  
                                        l8098 321A                                          l7810 5A96  
                                        l7802 5A8C                                          l7634 6516  
                                        l7626 6502                                          l6588 2C12  
                                        l6684 22D6                                          l6676 2292  
                                        l6668 2202                                          l7740 4106  
                                        l7732 40D4                                          l7724 407E  
                                        l7708 3FBA                                          l6772 505A  
                                        l6764 5036                                          l6756 5010  
                                        l6748 4FE0                                          l6780 52B4  
                                        l6844 464E                                          l6836 45D0  
                                        l6828 4552                                          l6852 6186  
                                        l6860 4462                                          l6932 4958  
                                        l6916 4882                                          l6940 5BAE  
                                        l5884 4DAA                                          l5876 4D3A  
                                        l6908 586E                                          l7484 36E4  
                                        l7476 36A6                                          l7468 3646  
                                        l7804 5A8E                                          l7812 64C6  
                                        l7636 650C                                          l7900 60B2  
                                        l7628 64F8                                          l7820 5736  
                                        l6694 235E                                          l6686 22E8  
                                        l6678 22A0                                          l6598 1FF8  
                                        l7742 412A                                          l7734 40E2  
                                        l7726 4080                                          l7718 4038  
                                        l6766 503C                                          l6758 5016  
                                        l6790 52E8                                          l6782 52BC  
                                        l6846 4654                                          l6838 45DE  
                                        l6854 6196                                          l6870 44B2  
                                        l6918 48C2                                          l6926 4902  
                                        l6950 3B9C                                          l6942 5BBE  
                                        l5878 4D4C                                          l7486 3706  
                                        l7494 37BC                                          l7478 36AE  
                                        l7806 5A92                                          l7814 64CC  
                                        l7910 60E0                                          l7902 60BA  
                                        l7830 575A                                          l7822 5744  
                                        l6696 236A                                          l6688 2306  
                                        l7744 413A                                          l7736 4100  
                                        l7728 408C                                          l6768 5042  
                                        l6792 52F0                                          l6784 52C0  
                                        l6776 52A2                                          l6880 44DC  
                                        l6872 44B6                                          l6864 4476  
                                        l6928 4914                                          l6960 3C88  
                                        l6952 3BF4                                          l6944 5BD2  
                                        l6936 5ED6                                          l7496 37D2  
                                        l7488 372C                                          l7752 5B56  
                                        l7808 5A94                                          l7816 64CE  
                                        l7904 60C8                                          l7840 5764  
                                        l7832 575C                                          l7824 574C  
                                        l7770 598C                                          l7762 57C2  
                                        l6698 2378                                          l7746 4148  
                                        l7738 4102                                          l6794 52F8  
                                        l6786 52CE                                          l6778 52A6  
                                        l6890 4504                                          l6882 44E6  
                                        l6874 44C4                                          l6866 44A0  
                                        l6858 444A                                          l6970 3D70  
                                        l6962 3CC4                                          l6954 3C08  
                                        l6938 5EDE                                          l7498 37FA  
                                        l7754 5B62                                          l7818 64D4  
                                        l7906 60CC                                          l7850 5772  
                                        l7842 5766                                          l7834 575E  
                                        l7826 5756                                          l7780 6238  
                                        l7772 59B8                                          l7764 57C6  
                                        l7748 414A                                          l6796 5306  
                                        l6788 52D6                                          l6892 4510  
                                        l6884 44F0                                          l6868 44A2  
                                        l6972 3D80                                          l6956 3C16  
                                        l6964 3CF8                                          l6948 3B7C  
                                        l6980 5AC4                                          l7756 5B80  
                                        l7908 60DC                                          l7860 5780  
                                        l7852 5774                                          l7844 5768  
                                        l7836 5760                                          l7828 5758  
                                        l8580 5C46                                          l7782 623E  
                                        l7774 59CA                                          l7766 57F4  
                                        l7950 568C                                          l7942 5602  
                                        l6798 531C                                          l6894 4520  
                                        l6966 3D34                                          l6982 5AC8  
                                        l7758 5BA2                                          l7790 5A68  
                                        l7870 578A                                          l7862 5782  
                                        l7854 5776                                          l7846 576A  
                                        l7838 5762                                          l8590 5C50  
                                        l8582 5C48                                          l7784 6244  
                                        l7776 59CE                                          l7768 57FA  
                                        l7944 5608                                          l6896 4530  
                                        l6968 3D48                                          l6984 5ADA  
                                        l6976 5AA0                                          l7960 5D80  
                                        l8664 3262                                          l7792 5A70  
                                        l7880 57A0                                          l7872 578C  
                                        l7864 5784                                          l7856 577C  
                                        l7848 5770                                          l8592 5C54  
                                        l8584 5C4A                                          l7786 624A  
                                        l7778 621E                                          l7946 560C  
                                        l6898 4540                                          l6978 5AB4  
                                        l6986 5ADE                                          l7962 5D9C  
                                        l7954 5D5E                                          l7794 5A72  
                                        l7882 57AE                                          l7874 578E  
                                        l7866 5786                                          l7858 577E  
                                        l7890 6052                                          l8586 5C4C  
                                        l8578 5C06                                          l7948 5618  
                                        l7956 5D70                                          l7796 5A78  
                                        l7788 5A44                                          l7884 57BC  
                                        l7876 5790                                          l7868 5788  
                                        l7892 605A                                          l8588 5C4E  
                                        l7958 5D78                                          l7798 5A7A  
                                        l7878 5792                                          l7894 6064  
                                        l7886 6030                                          l7990 6466  
                                        l7896 6068                                          l7888 6036  
                                        l7992 646A                                          l7984 645A  
                                        l7898 606A                                          l7986 645E  
                                        l7988 6462                                          STR_1 FFDD  
                                        STR_2 FF07                                          STR_3 FF48  
                                        STR_4 FFF2                                          STR_5 FF28  
                                        STR_6 FF85                                          STR_7 FF67  
                                        STR_8 FFB0                                          STR_9 FFBE  
                                        _LATA 3FBA                                          _LATB 3FBB  
                                        _LATC 3FBC                                          u7000 2C0C  
                                        u7001 2C08                                          u7010 2014  
                                        u7011 2010                                          u7100 22D6  
                                        u7020 2026                                          u7101 22D2  
                                        u7021 2022                                          u7110 22F6  
                                        u7030 2036                                          u7111 22F2  
                                        u7031 2032                                          u7120 2306  
                                        u7040 2076                                          u7200 4FB2  
                                        u6400 1788                                          u6320 16A6  
                                        u8000 0410                                          u7121 2302  
                                        u7041 2072                                          u7201 4FAE  
                                        u6401 1784                                          u6321 16A2  
                                        u8001 040C                                          u7130 2334  
                                        u7050 2088                                          u7210 4FCC  
                                        u6410 17F4                                          u6330 16B8  
                                        u8010 043A                                          u7131 2330  
                                        u7051 2084                                          u7211 4FC8  
                                        u6411 17F0                                          u6331 16B4  
                                        u8011 0436                                          i2l12 6430  
                                        u7140 234A                                          u7060 2098  
                                        u7220 4FF2                                          u7300 531C  
                                        u6500 18D2                                          u6420 180C  
                                        u6340 16C8                                          u8100 0830  
                                        u8020 0584                                          i2l13 643E  
                                        i2l21 63CC                                          u7141 2346  
                                        u7061 2094                                          u7221 4FEE  
                                        u7301 5318                                          u6501 18CE  
                                        u6421 1806                                          u6341 16C4  
                                        u8101 082C                                          u8021 0580  
                                        u7150 235E                                          u7070 20CE  
                                        u7230 5010                                          u7310 5340  
                                        u6510 18F0                                          u6430 180E  
                                        u6350 1708                                          u8110 083E  
                                        u8030 05EC                                          i2l23 63E8  
                                        u7151 235A                                          u7071 20CA  
                                        u7231 500C                                          u7311 533C  
                                        u6511 18EC                                          u6351 1704  
                                        u8111 083A                                          u8031 05E8  
                                        i2l16 63EC                                          u7160 2378  
                                        u7080 20DE                                          u7240 502C  
                                        u7320 5430                                          u7400 6186  
                                        u6600 1A2C                                          u6520 1928  
                                        u6440 1836                                          u6360 171E  
                                        u8200 0B04                                          u8120 0892  
                                        u8040 0634                                          i2l41 6250  
                                        u7161 2374                                          u7081 20DA  
                                        u7241 5028                                          u7321 542C  
                                        u7401 6182                                          u6601 1A28  
                                        u6521 1924                                          u6441 1832  
                                        u6361 171A                                          u8201 0AFE  
                                        u8121 088E                                          u8041 0630  
                                        i2l18 6406                                          u7170 23C0  
                                        u7090 227C                                          u7250 5052  
                                        u7330 546E                                          u6610 1A42  
                                        u6530 196E                                          u6450 1854  
                                        u6370 1730                                          u7410 4462  
                                        u8210 0B06                                          u8130 0966  
                                        u8050 0642                                          i2l43 6252  
                                        i2l35 5D5C                                          u7171 23BC  
                                        u7251 504E                                          u7331 546A  
                                        u6611 1A3E                                          u6531 196A  
                                        u6451 1850                                          u6371 172C  
                                        u7411 445E                                          u8131 0962  
                                        u8051 063E                                          u7180 23EE  
                                        u7260 52B4                                          u7340 54A2  
                                        u6700 1B2E                                          u6620 1A58  
                                        u6540 19A4                                          u6460 1874  
                                        u6380 1740                                          u7420 4496  
                                        u7500 48A4                                          u5900 4D74  
                                        u8220 0B1A                                          u8140 0982  
                                        u8060 06E0                                          i2l45 6282  
                                        i2l29 5918                                          u7181 23EA  
                                        u7261 52B0                                          u7341 549E  
                                        u6701 1B2A                                          u6621 1A54  
                                        u6541 19A0                                          u6461 1870  
                                        u6381 173C                                          u5901 4D70  
                                        u8221 0B16                                          u8141 097E  
                                        u8061 06DC                                          i2l38 64B0  
                                        u7190 2426                                          u7270 52CE  
                                        u7350 4582                                          u6630 1A6C  
                                        u6550 19B4                                          u6470 1882  
                                        u6390 177A                                          u7430 44C4  
                                        u7510 48C2                                          u5910 4DAA  
                                        u6710 5E8C                                          u8150 09AA  
                                        u8070 072C                                          u8230 4A98  
                                        u7191 2422                                          u7095 2272  
                                        u7271 52CA                                          u7351 457E  
                                        u6631 1A68                                          u6551 19B0  
                                        u6471 187E                                          u6391 1776  
                                        u7431 44C0                                          u7511 48BE  
                                        u5911 4DA6                                          u6711 5E88  
                                        u8151 09A6                                          u8071 0728  
                                        u8231 4A94                                          u6800 28CC  
                                        u7280 52E8                                          u7360 45C0  
                                        u6640 1A86                                          u6560 19E0  
                                        u6480 1892                                          u7440 44D8  
                                        u7520 48EA                                          u7600 3BF4  
                                        u8160 09BA                                          u8080 0752  
                                        u8240 4B4C                                          u6801 28C8  
                                        u7281 52E4                                          u7361 45BC  
                                        u6641 1A82                                          u6561 19DC  
                                        u6481 188E                                          u7441 44D4  
                                        u7425 448C                                          u7521 48E6  
                                        u7505 4898                                          u7601 3BF0  
                                        u8161 09B6                                          u8081 074E  
                                        u8241 4B48                                          u6810 290E  
                                        u7290 5306                                          u7370 45DE  
                                        u6650 1AC0                                          u6570 19F0  
                                        u6490 18C4                                          u7450 4500  
                                        u7530 4914                                          u7610 3C16  
                                        u8170 0A3C                                          u8090 07F6  
                                        u8330 35F4                                          u6811 290A  
                                        u7291 5302                                          u7371 45DA  
                                        u6651 1ABC                                          u6571 19EC  
                                        u6491 18C0                                          u7451 44FC  
                                        u7531 4910                                          u7611 3C12  
                                        u8171 0A38                                          u8091 07F2  
                                        u8331 35F0                                          u6900 2AA8  
                                        u6820 2920                                          u8500 4024  
                                        u7380 45FE                                          u6660 1AD2  
                                        u6580 1A0C                                          u7460 4520  
                                        u8180 0A56                                          u8340 3646  
                                        u6901 2AA4                                          u6821 291C  
                                        u8501 4020                                          u7381 45FA  
                                        u6661 1ACE                                          u6581 1A08  
                                        u7461 451C                                          u8181 0A52  
                                        u8341 3642                                          u6910 2AC6  
                                        u6830 2930                                          u8510 407A  
                                        u7390 464E                                          u6670 1AE2  
                                        u6590 1A1C                                          u7470 4530  
                                        u7550 494E                                          u7630 3C84  
                                        u8190 0A6C                                          u8350 3706  
                                        u6911 2AC2                                          u6831 292C  
                                        u8511 4076                                          u7391 464A  
                                        u6671 1ADE                                          u6591 1A18  
                                        u7471 452C                                          u7551 4948  
                                        u7631 3C80                                          u8191 0A68  
                                        u8351 3702                                          u8600 5824  
                                        u6920 2AE6                                          u6840 296E  
                                        u8520 40C4                                          u6680 1B02  
                                        u7560 4950                                          u7640 3CA8  
                                        u5880 4D3A                                          u7480 5846  
                                        u8360 3728                                          u6921 2AE2  
                                        u6841 296A                                          u8521 40C0  
                                        u6681 1AFE                                          u7545 4926  
                                        u7625 3C2A                                          u5881 4D36  
                                        u7481 5842                                          u8361 3724  
                                        u8610 5834                                          u6930 2AF6  
                                        u6850 29AE                                          u8530 40E2  
                                        u6690 1B12                                          u7650 3CC4  
                                        u7626 3C34                                          u5890 4D4C  
                                        u7490 5892                                          u7570 5F1A  
                                        u8611 5830                                          u6931 2AF2  
                                        u6851 29AA                                          u8531 40DE  
                                        u6691 1B0E                                          u7651 3CC0  
                                        u7627 3C44                                          u5891 4D48  
                                        u7491 588E                                          u7571 5F16  
                                        u8620 59CA                                          u6940 2B24  
                                        u6860 2A22                                          u6780 28AA  
                                        u8540 40F2                                          u7660 3D18  
                                        u7580 5BBE                                          u7900 0166  
                                        u8621 59C6                                          u9317 6332  
                                        u6941 2B20                                          u6861 2A1E  
                                        u6781 28A6                                          u8541 40EE  
                                        u7645 3C9E                                          u7581 5BBA  
                                        u7901 0162                                          u6950 2B3A  
                                        u6870 2A44                                          u6790 28BC  
                                        u8550 4100                                          u7670 3D34  
                                        u7590 3BC6                                          u7910 0176  
                                        u9327 622A                                          u8607 5816  
                                        u6951 2B36                                          u6871 2A40  
                                        u6791 28B8                                          u8551 40FC  
                                        u7671 3D30                                          u7911 0172  
                                        u6960 2B4E                                          u6880 2A6E  
                                        u8560 413A                                          u8480 3FBA  
                                        u7680 3D70                                          u7920 01F0  
                                        u9337 644E                                          u6961 2B4A  
                                        u6881 2A6A                                          u8561 4136  
                                        u8481 3FB6                                          u7681 3D6C  
                                        u7665 3D0E                                          u7921 01EC  
                                        u6970 2B68                                          u6890 2A92  
                                        u8570 4148                                          u8490 3FC8  
                                        u7690 5AFA                                          u7930 027C  
                                        u7850 0040                                          u9347 6356  
                                        u6971 2B64                                          u6891 2A8E  
                                        u8571 4144                                          u8491 3FC4  
                                        u7595 3BBC                                          u7691 5AF6  
                                        u7931 0278                                          u7851 003C  
                                        u6980 2BB0                                          u7940 02B0  
                                        u7860 008A                                          u8580 5BA2  
                                        u9357 640C                                          u6981 2BAC  
                                        u7941 02AC                                          u7861 0086  
                                        u8581 5B9E                                          u8590 57F0  
                                        u6990 2BE0                                          u7950 02EE  
                                        u7870 009A                                          u9367 6416  
                                        u6991 2BDC                                          u7951 02EA  
                                        u7871 0096                                          u7960 037C  
                                        u7880 00DA                                          u7961 0378  
                                        u7881 00D6                                          u7970 03B4  
                                        u7890 00EA                                          u7971 03B0  
                                        u7891 00E6                                          u7980 03CC  
                                        u8597 57E2                                          u7981 03C8  
                                        u7990 0402                                          u7991 03FE  
                      ??i2_read_prec_or_width 0005                                          _WPUA 3A41  
                                        _WPUB 3A51                                          _WPUC 3A61  
                                        _WPUE 3A81                                  i2___flge@ff1 0028  
                                i2___flge@ff2 002C                                   ?i2_LCD_Char 0001  
                                i2___fleq@ff1 0001                                  i2___fleq@ff2 0005  
                                        _dbuf 0200                                   ?i2_LCD_Init 0001  
                                        _labs 5BAE                                          _main 5C06  
                                        _prec 00DF                                          pad@i 011D  
                                        pad@p 011A                                          fsr0h 3FEA  
                                        fsr1h 3FE2                                          indf0 3FEF  
                                        fsr2h 3FDA                                          fsr0l 3FE9  
                                        indf2 3FDF                                          fsr1l 3FE1  
                                        fsr2l 3FD9                                  i2___flneg@f1 0001  
                               ___fpclassifyf 4862                     ?_INT2_SetInterruptHandler 0106  
                                        prodh 3FF4                                          prodl 3FF3  
                                        start 001A                   __end_of_ADC_ConversionStart 653A  
                                i2___fltol@f1 004B                               ___fldiv@new_exp 013E  
                             __end_ofi2_fputc 4ED8                               __end_ofi2_fputs 6030  
                        _BP1_InterruptHandler 00F9                               __end_ofi2_putch 6558  
                                  i2efgtoa@fp 0055                                    i2efgtoa@ne 0066  
                                  i2efgtoa@pp 0068                                    i2efgtoa@ou 0074  
                                ___param_bank 0000                       _BP2_SetInterruptHandler 64F8  
                                       ??_pad 011C                              __end_of_LCD_Char 633E  
                                  i2_vfprintf 5C5C                              __end_of_LCD_Init 6250  
                                LCD_Char@data 0107                                ?_LCD_SetCursor 0108  
                               ___fltol@sign1 0158                ??_TMR1_DefaultOverflowCallback 0001  
                                       ?_labs 0106                                         _ADCAP 3EF5  
                                       _ADACT 3EFE                               __end_of___fladd 1B42  
                                       ?_main 0001                                         _ADCLK 3EFF  
                                       _ADCNT 3EEB                                         _ADPCH 3EF1  
                             __end_of___fldiv 2C20                                         _ADREF 3EFD  
                             __end_of___awdiv 5064                               __end_of___flneg 61A8  
                                       STR_10 FF18                                         STR_11 FF76  
                                       STR_20 FFF7                                         STR_12 FF38  
                                       STR_13 FFA2                                         STR_14 FF58  
                                       STR_23 FFFB                                         STR_15 FFCC  
                                       STR_16 FFD5                                         STR_17 FFEB  
                                       STR_18 FF94                                         STR_19 FFE4  
                             __end_of___awmod 5352                                         _ADRPT 3EEC  
                             __end_of___flmul 2444                               __end_of___flsub 5ED6  
                             __end_of___fltol 4552                                _LCD_UpdateMenu 2FB0  
                                       _T1CLK 3FB5                               ___awdiv@divisor 0108  
                                       _T1CON 3FB2                                         _IOCAF 3A47  
                                       _IOCBF 3A57                                         _IOCCF 3A67  
                                       _IOCAN 3A46                                         _IOCEF 3A87  
                                       _IOCAP 3A45                                         _IOCBN 3A56  
                                       _IOCBP 3A55                                         _IOCCN 3A66  
                                       _IOCCP 3A65                                         _IOCEN 3A86  
                                       _IOCEP 3A85                                         i2l150 6532  
                                       i2l313 6544                                         i2l153 653E  
                     __end_of_TMR1_CounterSet 5F62                                         i2l162 649A  
                                       i2l308 654A                                         i2l454 616C  
                                       i2l550 4D00                                         i2l542 4C94  
                                       i2l464 6554                                         i2l800 61D0  
                                       i2l544 4CB8                                         i2l545 4D00  
                                       i2l458 6318                                         i2l474 6552  
                                       i2l802 61E0                                         i2l810 6484  
                                       i2l546 4CDC                                         i2l468 62E6  
                                       i2l484 6550                                         i2l813 64C4  
                                       i2l478 62B4                                         i2l807 63A8  
                                       i2l639 5F60                                         i2l816 5734  
                                       i2l761 35C4                                         i2l825 5A0C  
                                       i2l673 612E                                         i2l770 51EC  
                                       i2l827 5A42                                         i2l851 4448  
                                       i2l845 4444                                         i2l781 4F9E  
                                       i2l774 52A0                                         i2l862 5556  
                                       i2l854 6384                                         i2l870 5DFA  
                                       i2l687 654E                                         i2l784 5068  
                                       i2l777 4EDE                                         i2l788 5124  
                             ___awdiv@counter 010A                                         _OSCEN 39DD  
                                vfpfcnvrt@fmt 0194                                         _TMR1H 3FB1  
                                       _TMR1L 3FB0                                         _TRISA 3FC2  
                                       _TRISB 3FC3                                         _TRISC 3FC4  
                                       i2_pad 591A                          __end_of_ws2812_reset 64C6  
                               i2___fladd@grs 0010                                    i2memcpy@d1 0001  
                                  i2memcpy@s1 0003                    i2ADC_ChannelSelect@channel 0001  
                                ?i2_LCD_Clear 0001                 __end_ofi2_ADC_ConversionStart 6540  
                             __end_of_int_BP1 5A44                               __end_of_int_BP2 444A  
                             __end_of_int_BP3 6386                       __end_of_PIN_MANAGER_IOC 616E  
                                       _flags 00E9                           read_prec_or_width@c 010C  
                         read_prec_or_width@n 010D                                         _fputc 4D26  
                                       _fputs 5E46                                 i2___fldiv@grs 003B  
                               i2___fldiv@rem 0034                                         labs@a 0106  
                                       pad@fp 0116                                         _width 00DD  
                                       _putch 654C                               __end_of_on_leds 4FA0  
                    _INT1_SetInterruptHandler 6516                       __end_of_TMR1_Initialize 6072  
                                       pclath 3FFA                                         pclatu 3FFB  
                            __end_ofi2___flge 4862                              __end_ofi2___fleq 5602  
                                       tablat 3FF5                             ?_appliquer_action 0001  
                                       status 3FD8                              __end_ofi2_efgtoa 168A  
                             __end_of_sprintf 5DAE                                ?___fpclassifyf 0106  
                               i2___flmul@grs 001C                              __end_ofi2_floorf 3FA4  
                          ??_appliquer_action 001E                              __end_ofi2_memcpy 5B56  
                            ?_LCD_EnablePulse 0001                  ?_BP3_DefaultInterruptHandler 0001  
                            __end_ofi2_strcpy 5FEC                               __initialization 6072  
                                __end_of_labs 5C06                                  __end_of_main 5C5C  
                            _TMR1_OverflowISR 60F2                    i2LCD_SetCursor@row_offsets 0004  
                                   ??_ADC_ISR 0001                   ?_INTERRUPT_InterruptManager 0001  
                      __end_of_LCD_UpdateMenu 32DA                                   i2_vfpfcnvrt 38A2  
                                   ??_BP1_ISR 005E                                     ??_BP2_ISR 005E  
                                   ??_BP3_ISR 005E                                 i2vfpfcnvrt@ap 0093  
                               i2vfpfcnvrt@cp 009C                                 i2vfpfcnvrt@fp 008F  
                                      ??_labs 010A                                        ??_main 01D6  
                           __end_of_LCD_Clear 645A                                 __activetblptr 0003  
                                  i2sprintf@f 00B0                                    i2sprintf@s 00A6  
                    __end_ofi2_LCD_UpdateMenu 35C6                                   ?i2___xxtofl 0001  
                                      ?i2_pad 0011                    __end_of_read_prec_or_width 4B56  
                                      _ADACCH 3EE9                                        _ADACCL 3EE8  
                                      _ADACCU 3EEA                                        _ADACQH 3EF4  
                                      _ADACQL 3EF3                          TMR1_handler@timer_1s 00E1  
                                      _ADCON0 3EF8                                        _ADCON1 3EF9  
                                      _ADCON2 3EFA                                        _ADCON3 3EFB  
                                      _ADERRH 3EE3                                        _ADERRL 3EE2  
                                      ?_fputc 0106                                        _ADLTHH 3EDF  
                                      _ADLTHL 3EDE                                        ?_fputs 010F  
                                      _ADRESH 3EF0                                        _ADRESL 3EEF  
                                      _ADPREH 3EF7                                        _ADPREL 3EF6  
                                      _ADSTAT 3EFC                                        _ADUTHH 3EE1  
                            ___awdiv@dividend 0106                                        _ADUTHL 3EE0  
       __end_of_TMR1_OverflowCallbackRegister 64EE                 _TMR1_OverflowCallbackRegister 64E4  
                                      _ANSELA 3A40                                        ?_putch 0001  
                                      _ANSELB 3A50                                        _ANSELC 3A60  
                                      _RB1I2C 3A5A                                        _T1GATE 3FB4  
                                      _RB2I2C 3A5B                                        _T1GCON 3FB3  
                                      _RC3I2C 3A6A                                        _RC4I2C 3A6B  
                                      _ODCONA 3A42                                        _ODCONB 3A52  
                                      _ODCONC 3A62                                        i2l1112 51E6  
                                      i2l1140 5600                                        i2l1125 53FE  
                                      i2l1151 4860                                        i2l1146 481A  
                                      i2l1410 1D18                                        i2l1155 6218  
                                      i2l1411 1CDE                                        i2l1502 2722  
                                      i2l1503 2740                                        i2l1423 1ED2  
                                      i2l1512 284E                                        i2l1504 2798  
                                      i2l1505 2786                                        i2l1409 1D2A  
                                      i2l1601 1688                                        i2l1442 1FBA  
                                      i2l1426 1E44                                        i2l1418 1FF6  
                                      i2l1178 475C                                        i2l1435 1F12  
                                      i2l1451 5FA6                                        i2l1436 1F00  
                                      i2l1604 0EEC                                        i2l1550 42A6  
                                      i2l1702 4A5E                                        i2l1606 0D32  
                                      i2l1463 2FAE                                        i2l1543 424A  
                                      i2l1536 41B2                                        i2l1712 3EE6  
                                      i2l1465 2E12                                        i2l1474 2E58  
                                      i2l1475 2E76                                        i2l1539 430E  
                                      i2l1723 5D06                                        i2l1476 2ECE  
                                      i2l1468 2DD6                                        i2l1477 2EBC  
                                      i2l1709 3FA2                                        i2l1741 4ED6  
                                      i2l5110 4E12                                        i2l1590 5986  
                                      i2l1638 1350                                        i2l1495 2508  
                                      i2l1663 4C48                                        i2l1559 5E44  
                                      i2l5200 1C7E                                        i2l1752 6556  
                                      i2l5112 4E24                                        i2l6000 0F7E  
                                      i2l1729 5B54                                        i2l5210 1CF8  
                                      i2l5202 1CAA                                        i2l5130 1B6E  
                                      i2l5122 1B42                                        i2l5114 4E2E  
                                      i2l1586 5930                                        i2l6010 1092  
                                      i2l6002 0F8E                                        i2l1674 3992  
                                      i2l1499 288C                                        i2l1659 4C40  
                                      i2l5300 1FB8                                        i2l5220 1D38  
                                      i2l5212 1CFC                                        i2l5204 1CC6  
                                      i2l5140 1BA6                                        i2l5132 1B7E  
                                      i2l5124 1B4E                                        i2l5116 4E4C  
                                      i2l5108 4E00                                        i2l6100 14DC  
                                      i2l6020 1132                                        i2l6004 0FA2  
                                      i2l6012 1098                                        i2l1692 5CB0  
                                      i2l1749 602E                                        i2l1685 3B7A  
                                      i2l5310 1FE4                                        i2l5302 1FC8  
                                      i2l5230 1D7A                                        i2l5222 1D48  
                                      i2l5214 1D0A                                        i2l5206 1CD6  
                                      i2l5150 1BD4                                        i2l5142 1BAC  
                                      i2l5134 1B8E                                        i2l5126 1B5C  
                                      i2l5118 4E82                                        i2l1758 5FEA  
                                      i2l6110 1508                                        i2l6102 14EA  
                                      i2l6030 120E                                        i2l6022 1164  
                                      i2l6014 10B6                                        i2l6006 1006  
                                      i2l7000 653A                                        i2l5400 53CA  
                                      i2l5312 1FE6                                        i2l5304 1FCE  
                                      i2l5240 1DA8                                        i2l5232 1D88  
                                      i2l5216 1D0C                                        i2l5208 1CEC  
                                      i2l5160 1C08                                        i2l5152 1BD6  
                                      i2l5144 1BBE                                        i2l5136 1B90  
                                      i2l5128 1B5E                                        i2l5320 600A  
                                      i2l6120 156A                                        i2l6112 152E  
                                      i2l6104 14EE                                        i2l6040 1270  
                                      i2l6032 1214                                        i2l6024 1174  
                                      i2l6016 10EA                                        i2l6008 105E  
                                      i2l7002 6486                                        i2l7010 417C  
                                      i2l5410 53F6                                        i2l5402 53D2  
                                      i2l5306 1FD0                                        i2l5250 1E14  
                                      i2l5242 1DB2                                        i2l5234 1D94  
                                      i2l5226 1D5C                                        i2l5218 1D16  
                                      i2l5170 1C42                                        i2l5154 1BE6  
                                      i2l5162 1C0E                                        i2l5146 1BC0  
                                      i2l5138 1B96                                        i2l5322 600E  
                                      i2l6130 15AE                                        i2l6122 1584  
                                      i2l6114 154A                                        i2l6106 14F6  
                                      i2l6050 1326                                        i2l6042 1284  
                                      i2l6034 1248                                        i2l6026 1184  
                                      i2l6018 111C                                        i2l5330 61C4  
                                      i2l7020 41F4                                        i2l7012 41C2  
                                      i2l5340 513E                                        i2l5404 53D8  
                                      i2l5420 55C4                                        i2l5308 1FD6  
                                      i2l5252 1E24                                        i2l5236 1D98  
                                      i2l5228 1D6C                                        i2l5244 1DB8  
                                      i2l5180 1C56                                        i2l5172 1C46  
                                      i2l5164 1C1E                                        i2l5156 1BF6  
                                      i2l5148 1BC6                                        i2l5500 474C  
                                      i2l5316 5FEC                                        i2l6132 15C0  
                                      i2l6124 158A                                        i2l6116 1552  
                                      i2l6108 1502                                        i2l6140 15E2  
                                      i2l6060 1384                                        i2l6052 1346  
                                      i2l6044 1290                                        i2l6036 125C  
                                      i2l6028 11B8                                        i2l5332 61DA  
                                      i2l5324 61AA                                        i2l7100 4F76  
                                      i2l5510 2C20                                        i2l7030 427C  
                                      i2l7022 4200                                        i2l7014 41D8  
                                      i2l7006 415E                                        i2l5350 5164  
                                      i2l5342 5142                                        i2l5334 5126  
                                      i2l5406 53DE                                        i2l5422 55D4  
                                      i2l5414 5558                                        i2l5430 475E  
                                      i2l5270 1EA6                                        i2l5262 1E7E  
                                      i2l5246 1DDE                                        i2l5254 1E34  
                                      i2l5238 1DA6                                        i2l5190 1C6A  
                                      i2l5182 1C5A                                        i2l5174 1C4A  
                                      i2l5166 1C30                                        i2l5158 1C06  
                                      i2l5318 5FF8                                        i2l6150 1660  
                                      i2l6142 1612                                        i2l6134 15C6  
                                      i2l6126 159A                                        i2l6118 1558  
                                      i2l6070 13AC                                        i2l6062 138A  
                                      i2l6054 1362                                        i2l6046 1298  
                                      i2l6038 1260                                        i2l5326 61BA  
                                      i2l7102 4F78                                        i2l5600 2E48  
                                      i2l5520 2C5C                                        i2l5512 2C2C  
                                      i2l7040 42BA                                        i2l7032 4288  
                                      i2l7024 4232                                        i2l7008 416E  
                                      i2l5360 519A                                        i2l5352 5176  
                                      i2l5344 5150                                        i2l5336 5128  
                                      i2l5408 53EE                                        i2l5424 55F8  
                                      i2l5416 5586                                        i2l5440 47E8  
                                      i2l5432 478C                                        i2l5280 1EE2  
                                      i2l5272 1EAE                                        i2l5264 1E88  
                                      i2l5256 1E5A                                        i2l5248 1E12  
                                      i2l5192 1C6E                                        i2l5184 1C5E  
                                      i2l5176 1C4E                                        i2l5168 1C3E  
                                      i2l5504 5F62                                        i2l6152 1668  
                                      i2l6144 1620                                        i2l6136 15CC  
                                      i2l6128 15A6                                        i2l6080 13E0  
                                      i2l6064 1392                                        i2l6056 1370  
                                      i2l6072 13B2                                        i2l6048 12AE  
                                      i2l6160 4B8C                                        i2l5328 61BC  
                                      i2l7104 4F88                                        _INLVLA 3A44  
                                      i2l5602 2E56                                        i2l5530 2C8A  
                                      i2l5522 2C6C                                        i2l5514 2C3A  
                                      i2l7042 42DE                                        i2l7034 4296  
                                      i2l7026 4234                                        i2l7018 41EC  
                                      i2l5362 51B0                                        i2l5354 517E  
                                      i2l5370 51C6                                        i2l5346 5158  
                                      i2l5338 5136                                        i2l5426 55FE  
                                      i2l5418 5596                                        i2l5442 47FA  
                                      i2l5434 479C                                        i2l5290 1F3C  
                                      i2l5282 1EF8                                        i2l5274 1EB2  
                                      i2l5266 1E96                                        i2l5258 1E6A  
                                      i2l5194 1C72                                        i2l5186 1C62  
                                      i2l5178 1C52                                        i2l5506 5F72  
                                      i2l6146 1638                                        i2l6138 15DC  
                                      i2l6090 1496                                        i2l6082 1438  
                                      i2l6074 13C4                                        i2l6066 13A2  
                                      i2l6058 1380                                        i2l6162 4BDA  
                                      i2l6170 64B2                                        i2l7106 4F8A  
                                      i2l8010 6112                                        _INLVLB 3A54  
                                      _INLVLC 3A64                                        i2l5612 2EDE  
                                      i2l5620 2F26                                        i2l5604 2E68  
                                      i2l5540 2CC0                                        i2l5532 2C90  
                                      i2l5524 2C6E                                        i2l5516 2C3C  
                                      i2l5700 25B0                                        i2l7044 42EE  
                                      i2l7036 42B4                                        i2l7028 4240  
                                      i2l5372 51D6                                        i2l5364 51B8  
                                      i2l5356 5186                                        i2l5348 515C  
                                      i2l5380 5354                                        i2l5444 4808  
                                      i2l5436 47CA                                        i2l5452 61E2  
                                      i2l5292 1F76                                        i2l5276 1EC2  
                                      i2l5268 1E98                                        i2l5196 1C76  
                                      i2l5188 1C66                                        i2l5460 4658  
                                      i2l6148 1648                                        i2l6092 14B2  
                                      i2l6084 146C                                        i2l6076 13D6  
                                      i2l6068 13A6                                        i2l6164 4BFC  
                                      i2l6156 4B56                                        i2l6172 64B4  
                                      i2l7108 4F9A                                        i2l8012 612A  
                                      _INLVLE 3A84                                        i2l5630 2F8A  
                                      i2l5622 2F40                                        i2l5614 2EEA  
                                      i2l5606 2E86                                        i2l5550 2CFE  
                                      i2l5542 2CD0                                        i2l5534 2C9E  
                                      i2l5518 2C4C                                        i2l5526 2C74  
                                      i2l5710 25FE                                        i2l5702 25BE  
                                      i2l7046 42FC                                        i2l7038 42B6  
                                      i2l5374 51DE                                        i2l5366 51BA  
                                      i2l5358 5194                                        i2l5390 5384  
                                      i2l5382 5362                                        i2l5446 4858  
                                      i2l5438 47DA                                        i2l5454 61F8  
                                      i2l5286 1F22                                        i2l5294 1F78  
                                      i2l5278 1EC4                                        i2l5198 1C7A  
                                      i2l5470 46AE                                        i2l5462 466E  
                                      i2l6094 14BA                                        i2l6086 1474  
                                      i2l6078 13DA                                        i2l6166 4C0E  
                                      i2l6158 4B5E                                        i2l8006 60F2  
                                      i2l7400 5D4A                                        i2l5632 2F8E  
                                      i2l5624 2F56                                        i2l5616 2EF8  
                                      i2l5608 2EB4                                        i2l5552 2D0E  
                                      i2l5560 2D2E                                        i2l5544 2CD2  
                                      i2l5536 2CA0                                        i2l5528 2C84  
                                      i2l5720 267C                                        i2l5712 261C  
                                      i2l5704 25CE                                        i2l7048 42FE  
                                      i2l5368 51C0                                        i2l5392 5396  
                                      i2l5384 536A                                        i2l5448 485E  
                                      i2l5456 6208                                        i2l5296 1F88  
                                      i2l5288 1F2E                                        i2l5472 46BE  
                                      i2l5800 4A12                                        i2l6096 14C8  
                                      i2l6088 1478                                        i2l6168 6472  
                                      i2l6440 5064                                        i2l7080 527A  
                                      i2l8008 60FE                                        i2l7410 627E  
                                      i2l7402 6254                                        i2l5634 2F9C  
                                      i2l5626 2F70                                        i2l5618 2F22  
                                      i2l5570 2D6C                                        i2l5562 2D3E  
                                      i2l5554 2D16                                        i2l5538 2CB0  
                                      i2l5546 2CD8                                        i2l5730 2712  
                                      i2l5722 26A6                                        i2l5714 262C  
                                      i2l5706 25DE                                        i2l5650 245E  
                                      i2l5394 539E                                        i2l5386 536E  
                                      i2l5378 5352                                        i2l5298 1F98  
                                      i2l5482 46E8                                        i2l5474 46C2  
                                      i2l5466 4682                                        i2l5810 3DB2  
                                      i2l6098 14DA                                        i2l6450 506A  
                                      i2l7082 528A                                        i2l7066 51E8  
                                      i2l6380 63F8                                        i2l7404 626C  
                                      i2l5636 2FA2                                        i2l5628 2F88  
                                      i2l5580 2DB2                                        i2l5572 2D7C  
                                      i2l5564 2D3E                                        i2l5556 2D1A  
                                      i2l5548 2CE8                                        i2l5732 2720  
                                      i2l5724 26DC                                        i2l5716 264C  
                                      i2l5708 25EE                                        i2l5660 2496  
                                      i2l5652 2460                                        i2l7420 5724  
                                      i2l7412 569E                                        i2l5396 53A6  
                                      i2l5388 537C                                        i2l5492 4710  
                                      i2l5484 46F2                                        i2l5476 46D0  
                                      i2l5468 46AC                                        i2l5804 4A56  
                                      i2l5820 3E9A                                        i2l5812 3E08  
                                      i2l5900 0BA6                                        i2l8300 3922  
                                      i2l6460 5120                                        i2l6452 50FC  
                                      i2l7084 528C                                        i2l7076 51EE  
                                      i2l7406 6272                                        i2l5638 2FA4  
                                      i2l5590 2E00                                        i2l5582 2DC6  
                                      i2l5574 2D8C                                        i2l5742 27A8  
                                      i2l5750 27F0                                        i2l5734 2732  
                                      i2l5726 26EA                                        i2l5718 265C  
                                      i2l5670 24C2                                        i2l5662 24A6  
                                      i2l5654 2470                                        i2l5646 2444  
                                      i2l7414 56A4                                        i2l5398 53B4  
                                      i2l5494 471C                                        i2l5486 46FC  
                                      i2l5830 3F82                                        i2l5822 3ED6  
                                      i2l5814 3E1C                                        i2l5910 0BE4  
                                      i2l5902 0BB0                                        i2l8310 398A  
                                      i2l8302 3934                                        i2l6454 50FE  
                                      i2l7086 529C                                        i2l7078 5278  
                                      i2l6376 63EE                                        i2l7408 6278  
                                      i2l5592 2E10                                        i2l5584 2DD4  
                                      i2l5576 2D9C                                        i2l5568 2D52  
                                      i2l5760 2852                                        i2l5752 280A  
                                      i2l5744 27B4                                        i2l5736 2750  
                                      i2l5728 2708                                        i2l5680 2518  
                                      i2l5672 24D2                                        i2l5664 24AC  
                                      i2l5656 2480                                        i2l5648 2450  
                                      i2l7416 56A8                                        i2l5496 472C  
                                      i2l5832 3F92                                        i2l5816 3E2A  
                                      i2l5824 3F0A                                        i2l5808 3D92  
                                      i2l5840 5CD4                                        i2l5920 0C2C  
                                      i2l5912 0BEC                                        i2l5904 0BB8  
                                      i2l8320 3A08                                        i2l8304 3950  
                                      i2l8400 339C                                        i2l6456 510E  
                                      i2l7088 4EDA                                        i2l6378 63F4  
                                      i2l5594 2E22                                        i2l5586 2DE0  
                                      i2l5578 2DA2                                        i2l5770 287C  
                                      i2l5762 2862                                        i2l5754 281E  
                                      i2l5746 27C2                                        i2l5738 277E  
                                      i2l5690 2556                                        i2l5682 2528  
                                      i2l5674 24E2                                        i2l5666 24B2  
                                      i2l5658 2490                                        i2l7418 56B4  
                                      i2l5498 473C                                        i2l5826 3F46  
                                      i2l5850 5B24                                        i2l5922 0C32  
                                      i2l5906 0BC8                                        i2l5914 0BF0  
                                      i2l8330 3AD6                                        i2l8322 3A50  
                                      i2l8314 3998                                        i2l8306 3968  
                                      i2l8410 33DA                                        i2l8402 33A6  
                                      i2l6458 5110                                        i2l7098 4EE0  
                                      i2l7450 5526                                        i2l7442 54AC  
                                      i2l5596 2E38                                        i2l5588 2DFE  
                                      i2l5764 2870                                        i2l5756 2838  
                                      i2l5748 27EC                                        i2l5692 2570  
                                      i2l5676 24F2                                        i2l5668 24C0  
                                      i2l5828 3F5A                                        i2l5836 5CB2  
                                      i2l5852 5B36                                        i2l5844 5AFC  
                                      i2l5780 5950                                        i2l5940 0CBE  
                                      i2l5924 0C3A                                        i2l5916 0C16  
                                      i2l5932 0C7C                                        i2l5908 0BD8  
                                      i2l8316 39C0                                        i2l8308 3982  
                                      i2l8420 341E                                        i2l8412 33EA  
                                      i2l8404 33B6                                        i2l8500 43BE  
                                      i2l5860 6388                                        i2l7452 5538  
                                      i2l7444 54BE                                        i2l7390 58DA  
                                      i2l5598 2E3E                                        i2l5766 2872  
                                      i2l5758 2848                                        i2l5694 257C  
                                      i2l5686 253C                                        i2l5678 24F8  
                                      i2l5790 49C0                                        i2l5838 5CC0  
                                      i2l5846 5B10                                        i2l5854 5B3A  
                                      i2l5782 5954                                        i2l5774 591A  
                                      i2l5942 0CC6                                        i2l5934 0CA2  
                                      i2l5950 0CE2                                        i2l5926 0C52  
                                      i2l5918 0C28                                        i2l8318 39E2  
                                      i2l8326 3A98                                        i2l8342 3B48  
                                      i2l8350 5C68                                        i2l8430 345C  
                                      i2l8422 3428                                        i2l8414 33F4  
                                      i2l8406 33C0                                        i2l8510 43FA  
                                      i2l8502 43C6                                        i2l5870 6396  
                                      i2l7454 5540                                        i2l7446 54CE  
                                      i2l7392 58DE                                        i2l5768 2878  
                                      i2l5696 2598                                        i2l5688 254C  
                                      i2l5792 49E8                                        i2l5848 5B20  
                                      i2l5784 5972                                        i2l5776 5928  
                                      i2l5856 5FA8                                        i2l5960 0D7C  
                                      i2l5952 0CFC                                        i2l5936 0CB4  
                                      i2l5928 0C5C                                        i2l8336 3B0C  
                                      i2l8328 3AAE                                        i2l8352 5C84  
                                      i2l8360 5E0C                                        i2l8440 34A0  
                                      i2l8432 346C                                        i2l8424 3438  
                                      i2l8416 3404                                        i2l8408 33D0  
                                      i2l8520 443C                                        i2l8512 440C  
                                      i2l8504 43D8                                        i2l5872 6398  
                                      i2l7456 5552                                        i2l7448 5514  
                                      i2l5890 642E                                        i2l7394 5D0A  
                                      i2l7386 58A8                                        i2l5698 25A4  
                                      i2l5794 49F4                                        i2l5786 4962  
                                      i2l5778 593C                                        i2l5858 5FB0  
                                      i2l5970 0E72                                        i2l5962 0DBA  
                                      i2l5938 0CB8                                        i2l8338 3B32  
                                      i2l8290 38A2                                        i2l8354 5CA6  
                                      i2l8362 5E14                                        i2l8450 34EE  
                                      i2l8442 34C4                                        i2l8434 3476  
                                      i2l8426 3442                                        i2l8418 340E  
                                      i2l8370 32DA                                        i2l8530 62E8  
                                      i2l8514 4414                                        i2l8506 43E0  
                                      i2l8522 4444                                        i2l5866 638A  
                                      i2l7396 5D36                                        i2l7388 58AC  
                                      i2l5788 4982                                        i2l5980 0F04  
                                      i2l5972 0E7A                                        i2l5964 0DEC  
                                      i2l5956 0D42                                        i2l5892 0B5C  
                                      i2l8292 38D0                                        i2l8348 5C5C  
                                      i2l8364 5E1C                                        i2l8452 350E  
                                      i2l8444 34CE                                        i2l8436 3482  
                                      i2l8428 3452                                        i2l8380 3318  
                                      i2l8372 32E2                                        i2l8532 62FC  
                                      i2l8516 4426                                        i2l8508 43F2  
                                      i2l8540 62E2                                        i2l5868 6392  
                                      i2l8524 6362                                        i2l7398 5D46  
                                      i2l5798 4A00                                        i2l5990 0F36  
                                      i2l5982 0F10                                        i2l5966 0E2A  
                                      i2l5958 0D48                                        i2l5894 0B70  
                                      i2l8294 38E2                                        i2l8366 5E34  
                                      i2l8358 5DFC                                        i2l8446 34D8  
                                      i2l8438 348C                                        i2l8390 3362  
                                      i2l8382 3328                                        i2l8374 32EC  
                                      i2l8470 5A3E                                        i2l8462 59E6  
                                      i2l8534 6314                                        i2l8518 442C  
                                      i2l8526 637C                                        i2l8542 6284  
                                      i2l8550 6140                                        i2l5888 6426  
                                      i2l5992 0F44                                        i2l5984 0F18  
                                      i2l5968 0E3E                                        i2l5976 0EBA  
                                      i2l5896 0B7E                                        i2l8296 38F0  
                                      i2l8448 34E4                                        i2l8392 3372  
                                      i2l8384 3332                                        i2l8376 32F8  
                                      i2l8456 3538                                        i2l8464 5A04  
                                      i2l8480 433C                                        i2l8536 62B6  
                                      i2l8528 6380                                        i2l8544 6298  
                                      i2l8552 6144                                        i2l8560 4C6E  
                                      i2l5994 0F5C                                        i2l5986 0F20  
                                      i2l5978 0EF4                                        i2l5898 0B82  
                                      i2l8298 38F4                                        i2l8394 337C  
                                      i2l8386 333E                                        i2l8378 330E  
                                      i2l8490 4378                                        i2l8482 4344  
                                      i2l8538 62CA                                        i2l8546 62B0  
                                      i2l8554 6154                                        i2l7930 5F1C  
                                      i2l8570 4CC6                                        i2l8562 4C7E  
                                      i2l5996 0F6E                                        i2l5988 0F24  
                                      i2l8396 3388                                        i2l8388 3358  
                                      i2l8468 5A12                                        i2l8492 438A  
                                      i2l8484 4356                                        i2l8476 4310  
                                      i2l8556 6158                                        i2l8548 6130  
                                      i2l7940 5F5A                                        i2l7932 5F2A  
                                      i2l8572 4CD4                                        i2l8564 4C8C  
                                      i2l6990 63D4                                        i2l5998 0F76  
                                      i2l8398 3392                                        i2l8494 4392  
                                      i2l8486 435E                                        i2l8478 432A  
                                      i2l8558 6168                                        i2l7934 5F42  
                                      i2l8574 4CEA                                        i2l8566 4CA2  
                                      i2l6992 63D8                                        i2l8496 43A4  
                                      i2l8488 4370                                        i2l7936 5F48  
                                      i2l8576 4CF8                                        i2l8568 4CB0  
                                      i2l6994 649C                                        i2l8666 5A28  
                                      i2l8498 43AC                                        i2l7938 5F56  
                                      i2l7970 5DDA                                        i2l7972 6546  
                                      i2l6996 64A2                                        i2l6988 63CE  
                                      i2l8668 354E                                        i2l6998 652C  
                                      i2l7966 5DAE                                        i2l7968 5DD2  
                                      i2l7978 6540                                     ??i2_fputc 0005  
                                   ??i2_fputs 000E                                        _OSCFRQ 39DF  
                                   ??i2_putch 0001                              __end_of___xxtofl 415C  
                                      i2_labs 5CB2                                        i2pad@i 0018  
                                      i2pad@p 0015                     ??_BP2_SetInterruptHandler 0108  
                           ??i2_LCD_SetCursor 0004                                i2___fladd@aexp 000E  
                              i2___fladd@bexp 000F                                   i2memcpy@tmp 000B  
                                vfprintf@cfmt 01A7                                        ___flge 4552  
                                      ___fleq 5400                                 i2vfprintf@fmt 00A0  
                                   ??___fladd 010E                                     ??___fldiv 0135  
                                   ??___awdiv 010A                                     ??___flneg 010A  
                                   ??___awmod 010A                               ??_LCD_SetCursor 0109  
                                   ??___flmul 011C                                     ??___flsub 0135  
                                   ??___fltol 0154                                        _efgtoa 001E  
                                 ?i2_vfprintf 009E                              __end_of_off_leds 52A2  
                                      _floorf 3B7C                                        _memcpy 5AA0  
                        read_prec_or_width@ap 0108                               ?_LCD_UpdateMenu 0001  
                                      clear_0 607A                                        clear_1 608C  
                                      clear_2 6098                              ___awdiv@quotient 010C  
                              i2___fldiv@aexp 0040                                i2___fldiv@bexp 003F  
                             ___awmod@divisor 0108                                 ?i2_LCD_String 0003  
                                      isa$std 0001                                i2___fldiv@sign 0038  
                             ___awmod@counter 010A                                        pad@buf 0118  
                       appliquer_action@color 0022                             ?_CLOCK_Initialize 0001  
                                      _strcpy 5ED6                                i2___awdiv@sign 0006  
                                   ??_int_BP1 00D3                                     ??_int_BP2 00D3  
                                   ??_int_BP3 00D3                              __end_of_send_bit 61E2  
                                      fputc@c 0106                              ?_TMR1_CounterSet 0001  
                               ?_lire_tension 0146                  _INT2_DefaultInterruptHandler 0000  
                                      fputs@c 0113                                        fputs@i 0114  
                                      fputs@s 010F                             __end_ofi2___fladd 1FF8  
                           __end_ofi2___fldiv 2FB0                             __end_ofi2___awdiv 51E8  
                           __end_ofi2___flneg 621A                             __end_ofi2___awmod 5400  
                           __end_ofi2___flmul 288E                            ??_CLOCK_Initialize 0106  
                           __end_ofi2___flsub 5FA8                             __end_ofi2___fltol 475E  
                             ___fpclassifyf@e 010E                               ___fpclassifyf@u 0110  
                             ___fpclassifyf@x 0106                                     ??_on_leds 0017  
                        _BP2_InterruptHandler 00F7                                  __mediumconst FEEA  
                           ??i2___fpclassifyf 0005                                        tblptrh 3FF7  
                                      tblptrl 3FF6                                        tblptru 3FF8  
                                      putch@c 0001                              __end_of_vfprintf 5BAE  
                              i2___awmod@sign 0006      INT2_SetInterruptHandler@InterruptHandler 0106  
    INT1_SetInterruptHandler@InterruptHandler 0106      INT0_SetInterruptHandler@InterruptHandler 0106  
     BP3_SetInterruptHandler@InterruptHandler 0106       BP2_SetInterruptHandler@InterruptHandler 0106  
     BP1_SetInterruptHandler@InterruptHandler 0106                              ?_PIN_MANAGER_IOC 0001  
                                   ??_sprintf 01B1                                i2___flmul@aexp 0020  
                              i2___flmul@bexp 0021                                i2___flmul@sign 001B  
                              i2___flmul@temp 0026                                i2___flmul@prod 0022  
                    ?_BP1_SetInterruptHandler 0106                                    ___flge@ff1 012D  
                                  ___flge@ff2 0131                               ??___fpclassifyf 010A  
                            ?_TMR1_Initialize 0001                                  ___xxtofl@arg 0110  
                                ___xxtofl@exp 010F                             _SYSTEM_Initialize 645A  
                                ___xxtofl@val 0106                                    ___fleq@ff1 0106  
                                  ___fleq@ff2 010A                                     ?_LCD_Char 0001  
                                  __accesstop 0060                       __end_of__initialization 60AC  
                              i2___fltol@exp1 0054                                     ?_LCD_Init 0001  
                                  ___flneg@f1 0106           __end_of_BP2_DefaultInterruptHandler 6554  
                 _BP2_DefaultInterruptHandler 6552                            ?_SYSTEM_Initialize 0001  
                               ___rparam_used 0001                                    ___fltol@f1 0150  
                           __end_ofi2_sprintf 5E46                                 __end_ofi2_pad 5988  
                               i2_efgtoa$2332 0064                                 i2_efgtoa$2326 0062  
                              __pcstackCOMRAM 0001                                  i2efgtoa@mode 006A  
                                i2efgtoa@sign 0082                           ??_SYSTEM_Initialize 0108  
               ??_BP2_DefaultInterruptHandler 0001                                 __end_of_fputc 4E00  
                               __end_of_fputs 5E8E                                 __end_of_putch 654E  
                              ??i2_LCD_String 0005                              ??i2_lire_tension 0045  
                                ??_LCD_String 010A                            __end_of_COLORS_TAB FF03  
                  _ADC_ConversionDoneCallback 00E7                                     ?i2___flge 0028  
                                   ?i2___fleq 0001                                ??_lire_tension 014A  
                              i2LCD_Char@data 0002                              i2LCD_Command@cmd 0002  
                                   ?i2_efgtoa 0055                                       ??i2_pad 0017  
                                   ?i2_floorf 0041                                     ?i2_memcpy 0001  
            __end_of_INT2_SetInterruptHandler 6516                                i2vfpfcnvrt@fmt 0091  
                                   ?i2_strcpy 0001                                       ??_fputc 010A  
                   __end_of_SYSTEM_Initialize 6470                                       ??_fputs 0113  
                                     ??_putch 0106                                    __pbssBANK0 00D5  
                                  __pbssBANK2 0200                                   i2sprintf@ap 00AE  
                                ??i2_LCD_Char 0001                                    ??_LCD_Char 0106  
                                ??i2_LCD_Init 0004                                    ??_LCD_Init 0109  
                       _INT0_InterruptHandler 00F3                ?_TMR1_OverflowCallbackRegister 0106  
                                     ?i2_labs 0001                            __end_of_LCD_String 5836  
                                 i2strcpy@src 0003                    ?i2_ADC_ConversionResultGet 0001  
                     _ADC_ConversionResultGet 63AA                           i2_ADC_ChannelSelect 652A  
                                     IVTBASEH 3FD6                                       IVTBASEL 3FD5  
                                     IVTBASEU 3FD7                                  _ws2812_reset 64B2  
                                     ?___flge 012D                                       ?___fleq 0106  
                                     ?_efgtoa 015A                                       _ADFLTRH 3EE7  
                                     ?_floorf 0146                                       _ADFLTRL 3EE6  
                                     ?_memcpy 0106                                       _ADC_ISR 6546  
                                     _ADPREVH 3EEE                                       _ADPREVL 3EED  
                                     _BP1_ISR 62E8                                 i2_LCD_Command 63EA  
                                     _BP2_ISR 62B6                                       _ADSTPTH 3EE5  
                                     _ADSTPTL 3EE4                                       _BP3_ISR 6284  
                                  _flag_start 00EA                                    ??i2___flge 0030  
                                  ??i2___fleq 0009                                       ?_strcpy 0106  
                        ?i2_ADC_ChannelSelect 0001                    ??_INT1_SetInterruptHandler 0108  
                                  ??i2_efgtoa 005C                            __end_ofi2_LCD_Char 63EA  
                          __end_ofi2_LCD_Init 6284                                     ?___xxtofl 0106  
                                  ??i2_floorf 0045                                    ??i2_memcpy 0007  
                                     _OSCCON1 39D9                                       _OSCCON3 39DB  
             __end_of_BP1_SetInterruptHandler 650C                                       _OSCTUNE 39DE  
                    ADC_ChannelSelect@channel 0106                                       _SLRCONA 3A43  
                                     _SLRCONB 3A53                                   send_bit@bit 0001  
                                     _SLRCONC 3A63                                    ??i2_strcpy 0005  
                    __end_of_TMR1_OverflowISR 6130                                   send_color@b 0005  
                                 send_color@g 0004                                   send_color@r 0006  
                                     i2_fputc 4E00                                       i2_fputs 5FEC  
                                     i2labs@a 0001                                       i2pad@fp 0011  
                                     i2_putch 6556                                     ?_off_leds 0001  
                   ?_INT0_SetInterruptHandler 0106                               i2___fladd@signs 000D  
                               LCD_String@str 0108                                     ?_send_bit 0001  
                                     __Hparam 0000             __end_ofi2_ADC_ConversionResultGet 649C  
                        _BP3_InterruptHandler 00F5                         i2LCD_SetCursor@column 0003  
                                     __Lparam 0000                       _BP3_SetInterruptHandler 64EE  
                                     ___fladd 168A                                       ___fldiv 288E  
                                     ___awdiv 4FA0                                       ___flneg 616E  
                                     ___awmod 52A2                                       ___flmul 1FF8  
                                     ___flsub 5E8E                                       ___fltol 444A  
                                   ?_vfprintf 01A1                                i2vfprintf@cfmt 00A4  
                              ?i2_LCD_Command 0001                      LCD_SetCursor@row_offsets 0109  
                                ?i2_vfpfcnvrt 008F                                       __pcinit 6072  
                                     __ramtop 1000                                       __ptext0 5C06  
                                     __ptext1 64E4                                       __ptext2 645A  
                                     __ptext3 6030                                       __ptext4 5736  
                                     __ptext5 64EE                                       __ptext6 64F8  
                                     __ptext7 6502                                       __ptext8 60B2  
                                     __ptext9 650C                                    _matrix_tab 0250  
                       ??i2_ADC_ChannelSelect 0001                                       _int_BP1 59E6  
                                     _int_BP2 4310                                       _int_BP3 6362  
                                   _T1CONbits 3FB2                         read_prec_or_width@fmt 0106  
                                ??i2___xxtofl 0005                        TMR1_CounterSet@onState 0003  
                                  ??___xxtofl 010A                              ___awmod@dividend 0106  
                                     _on_leds 4ED8                             ?i2_LCD_UpdateMenu 0001  
                    ??_PIN_MANAGER_Initialize 0108                                     _IOCAFbits 3A47  
                               ?_TMR1_handler 0001                         _ADC_ThresholdCallback 00E5  
                                     efgtoa@c 0160                                       efgtoa@d 016E  
                                     efgtoa@e 0183                                       efgtoa@f 015C  
                                     efgtoa@g 018A                                       efgtoa@h 017B  
                                     efgtoa@i 0186                                       efgtoa@l 017F  
                                     efgtoa@m 0170                                       efgtoa@n 0188  
                                     efgtoa@p 0172                                       efgtoa@t 0163  
                                     efgtoa@u 018E                                       efgtoa@w 0175  
                                   _LCD_Clear 6440                               i2_LCD_SetCursor 5D08  
                          ??i2_LCD_UpdateMenu 00BB                                       _sprintf 5D5E  
                        end_of_initialization 60AC                         i2_ADC_ConversionStart 653A  
                                     floorf@e 0154                                       floorf@m 0150  
                    _INT2_SetInterruptHandler 650C                                       floorf@u 0156  
                                     floorf@x 0146                             __end_of_send_leds 5126  
                           __end_of_send_byte 63AA                  ?_BP1_DefaultInterruptHandler 0001  
                   ??_ADC_ConversionResultGet 0108                                       memcpy@d 010C  
                                     memcpy@n 010A                                       memcpy@s 010E  
                        __end_ofi2_LCD_String 591A                              LCD_SetCursor@row 010D  
                                     fputc@fp 0108                                    ??_off_leds 0015  
                              LCD_Command@cmd 0107                                    _send_color 6470  
                                     fputs@fp 0111                            _read_prec_or_width 4A60  
                              i2___xxtofl@arg 000B                                i2___xxtofl@exp 000A  
                              i2___xxtofl@val 0001                          __end_of_lire_tension 569E  
                                  ??_send_bit 0001                        i2LCD_UpdateMenu@buffer 00BD  
                            ??_LCD_UpdateMenu 01BE                             __end_of_vfpfcnvrt 38A2  
                                  efgtoa@mode 016D                                    efgtoa@sign 0185  
               rainbow_scroll_vertical@offset 005E                            __end_ofi2___xxtofl 4310  
                                     postdec1 3FE5                                       postdec2 3FDD  
                         ?_read_prec_or_width 0106                                       postinc0 3FEE  
                                     postinc1 3FE6                                       postinc2 3FDE  
                            vfpfcnvrt@convarg 019A                               i2___fpclassifyf 4962  
                                ??i2_vfprintf 005E                                    ??_vfprintf 01A7  
                                     strcpy@d 010A                         _INT1_InterruptHandler 00F1  
                       _TMR1_OverflowCallback 00ED                                   ___fladd@grs 0115  
                              ??_TMR1_handler 0001                                 ___xxtofl@sign 010E  
TMR1_OverflowCallbackRegister@CallbackHandler 0106                                     _TRISAbits 3FC2  
                                   _TRISBbits 3FC3                                    ?_LCD_Clear 0001  
                        ??_read_prec_or_width 010A                                   ___fldiv@grs 0140  
                                 ___fldiv@rem 0139                               i2___fltol@sign1 0053  
                                   i2___fladd 1B42                                     i2___fldiv 2C20  
                                   i2___awdiv 5126                                     i2___flneg 61E2  
                                   i2___awmod 5352                                     i2___flmul 2444  
                                   i2___flsub 5F62                                     i2___fltol 4658  
                            _ADC_ThresholdISR 6540                                   ___flmul@grs 0121  
                          __end_ofi2_vfprintf 5CB2                            i2___awdiv@dividend 0001  
                               send_byte@byte 0002                     ??_BP3_SetInterruptHandler 0108  
                              __end_ofi2_labs 5D08                                     i2efgtoa@c 005B  
                                   i2efgtoa@d 006B                                     i2efgtoa@e 0080  
                                   i2efgtoa@f 0057                                     i2efgtoa@g 0087  
                                   i2efgtoa@h 0078                                     i2efgtoa@i 0083  
                                   i2efgtoa@l 007C                                     i2efgtoa@m 006D  
                                   i2efgtoa@n 0085                                     i2efgtoa@p 006F  
                                   i2efgtoa@t 0060                                     i2efgtoa@u 008B  
                                   i2efgtoa@w 0072                               ??i2_LCD_Command 0001  
                               i2efgtoa@esign 0069                                     i2_sprintf 5DFC  
                __end_of_INTERRUPT_Initialize 60F2                                 ??_LCD_Command 0106  
                               i2efgtoa@nmode 0071                                __end_of___flge 4658  
                              __end_of___fleq 54AC                  _INT0_DefaultInterruptHandler 0000  
                                   i2floorf@e 004F                                   vfpfcnvrt@ap 0196  
                                   i2floorf@m 004B                                   vfpfcnvrt@cp 019F  
                                   i2floorf@u 0051                                   vfpfcnvrt@fp 0192  
                                   i2floorf@x 0041                         __end_of_LCD_SetCursor 59E6  
                           i2_LCD_EnablePulse 6424                                __end_of_efgtoa 0B5C  
                                   i2memcpy@d 0007                                     i2memcpy@n 0005  
                                   i2memcpy@s 0009                                _ADC_Initialize 5A44  
                                   i2fputc@fp 0003                                  _etat_courant 00EB  
                              __end_of_floorf 3D92                           LCD_SetCursor@F16382 FF03  
                              __end_of_memcpy 5AFC                                     i2fputs@fp 000C  
                                  floorf@F521 00D5                       __end_ofi2_LCD_SetCursor 5D5E  
                          ?i2_LCD_EnablePulse 0001                                __end_of_strcpy 5F1C  
                         start_initialization 6072                            i2___awdiv@quotient 0007  
                                 __end_of_pad 58A8                           ??i2_LCD_EnablePulse 0001  
                      ?i2_ADC_ConversionStart 0001                                    ?i2___fladd 0001  
                                  ?i2___fldiv 0028                                    ?i2___awdiv 0001  
                                  ?i2___flneg 0001                                    ?i2___awmod 0001  
                                  ?i2___flmul 000F                                    ?i2___flsub 0028  
                                  ?i2___fltol 004B                                  i2vfpfcnvrt@c 009B  
                                  ivt0x8_base 0008                      ?_BP2_SetInterruptHandler 0106  
                                   i2strcpy@d 0005                                   ?_send_color 0004  
                       __end_of___fpclassifyf 4962                                      ??i2_labs 0005  
                     __end_ofi2___fpclassifyf 4A60                   ??i2_ADC_ConversionResultGet 0003  
         __end_of_BP3_DefaultInterruptHandler 6552                   _BP3_DefaultInterruptHandler 6550  
                         LCD_SetCursor@column 0108                                   vfprintf@fmt 01A3  
                                i2vfprintf@ap 00A2                                  i2vfprintf@fp 009E  
                                    ??___flge 0135                                      ??___fleq 010E  
                   __end_ofi2_LCD_EnablePulse 6440                      _TMR1_DefaultGateCallback 0000  
                                  ?i2_sprintf 00A6                                      ??_efgtoa 0161  
                      __end_of_ADC_Initialize 5AA0                              _appliquer_action 54AC  
                                    ??_floorf 014A                                      ??_memcpy 010C  
                                    ?_ADC_ISR 0001                 ??_BP3_DefaultInterruptHandler 0001  
                                    ?_BP1_ISR 0001                                      ?_BP2_ISR 0001  
                                    ?_BP3_ISR 0001               ??_TMR1_OverflowCallbackRegister 0108  
                                    ??_strcpy 010A                       i2read_prec_or_width@fmt 0001  
                                   ___fladd@a 010A                                     ___fladd@b 0106  
                                   ___fldiv@a 0131                                     ___fldiv@b 012D  
                                 __pbssBIGRAM 0250                             _ADC_ChannelSelect 64D8  
                         __end_of_LCD_Command 6362                                  i2sprintf@fmt 00A8  
                           ??_LCD_EnablePulse 0106                                     ___flmul@a 0118  
                                   ___flmul@b 0114                                   __pbssCOMRAM 005E  
                                   ___flsub@a 0131                                     ___flsub@b 012D  
            __end_of_INT0_SetInterruptHandler 652A                                 __pcstackBANK0 0060  
                               __pcstackBANK1 0100                                 ??i2_LCD_Clear 0003  
                          ?_ADC_ChannelSelect 0001                                   ??_LCD_Clear 0108  
                           _TMR1_GateCallback 01D6                             ?_TMR1_OverflowISR 0001  
                         _ADC_ConversionStart 6534                                      ?i2_fputc 0001  
                                    ?i2_fputs 000A                                  i2strcpy@dest 0001  
                         ??_ADC_ChannelSelect 0106                                      ?i2_putch 0001  
                          ??_TMR1_OverflowISR 0004                         _INT2_InterruptHandler 00EF  
                                   __pnvBANK0 00ED                                     __pnvBANK1 01D6  
                                 _efgtoa$2332 0167                                   _efgtoa$2326 0165  
                        __end_of_TMR1_handler 5DFC                        _PIN_MANAGER_Initialize 5736  
                               __pmediumconst FEEA                                      ?___fladd 0106  
                                    ?___fldiv 012D                                      ?___awdiv 0106  
                                   __ptext100 2C20                                     __ptext101 653A  
                                   __ptext110 6424                                     __ptext102 6486  
                                    ?___flneg 0106                                     __ptext111 6540  
                                   __ptext103 652A                                     __ptext112 6546  
                                   __ptext104 58A8                                     __ptext105 63CA  
                                   __ptext106 5D08                                     __ptext107 6250  
                                   __ptext108 649C                                     __ptext109 63EA  
                                    ?___awmod 0106                                      ?___flmul 0114  
                                    ?___flsub 012D                                      ?___fltol 0150  
                             ?_ADC_Initialize 0001                          ?_ADC_ConversionStart 0001  
                ??_INTERRUPT_InterruptManager 0100                  __end_ofi2_read_prec_or_width 4C4A  
                   __end_of_ADC_ChannelSelect 64E4                                  i2_LCD_String 58A8  
                            ?i2_LCD_SetCursor 0003                         i2lire_tension@adc_val 0049  
                                  send_leds@i 0013                                    send_leds@j 0014  
                                    ?_int_BP1 0001                                      ?_int_BP2 0001  
                                    ?_int_BP3 0001                                    send_byte@i 0003  
                                 __smallconst FEEA                     i2_ADC_ConversionResultGet 6486  
                  ??_INT2_SetInterruptHandler 0108                                  _lire_tension 5602  
                                    _ADCPbits 3ED7                                      ?_on_leds 0015  
             __end_of_BP2_SetInterruptHandler 6502                                   ??i2___fladd 0009  
                                 ??i2___fldiv 0030                                   ??i2___awdiv 0005  
                                 ??i2___flneg 0005                                   ??i2___awmod 0005  
                                    ?_sprintf 01A9                                   ??i2___flmul 0017  
                                 ??i2___flsub 0030                                   ??i2___fltol 004F  
                        _INTERRUPT_Initialize 60B2                         i2lire_tension@tension 0045  
                            _CLOCK_Initialize 64C6                                      _LCD_Char 631A  
                         __end_ofi2_LCD_Clear 64B2                                      _LCD_Init 621A  
                                    _LATAbits 3FBA                                      _LATBbits 3FBB  
                   ?_INT1_SetInterruptHandler 0106                                      _PIE0bits 3990  
                                    _PIE1bits 3991                                      _PIE4bits 3994  
                                   _send_leds 5064                                     _send_byte 6386  
                            ?i2___fpclassifyf 0001                             ??_TMR1_CounterSet 0003  
                                    i2u500_40 51D6                                      i2u500_41 51D2  
                                    i2u501_40 5362                                      i2u501_41 535E  
                                    i2u502_40 537C                                      i2u510_40 478C  
                                    i2u502_41 5378                                      i2u510_41 4788  
                                    i2u503_40 5396                                      i2u511_40 47CA  
                                    i2u503_41 5392                                      i2u511_41 47C6  
                                    _PIR0bits 39A0                                      i2u504_40 53B4  
                                    i2u512_40 47E8                                      i2u520_40 470C  
                                    i2u600_40 0DBA                                      i2u504_41 53B0  
                                    i2u512_41 47E4                                      i2u520_41 4708  
                                    i2u600_41 0DB6                                      i2u505_40 53CA  
                                    i2u513_40 4808                                      i2u521_40 472C  
                                    i2u601_40 0DEC                                      i2u505_41 53C6  
                                    i2u513_41 4804                                      i2u521_41 4728  
                                    i2u601_41 0DE8                                      _PIR1bits 39A1  
                                    i2u530_40 2D3E                                      i2u506_40 53EE  
                                    i2u514_40 4858                                      i2u522_40 473C  
                                    i2u450_40 4E12                                      i2u610_40 111C  
                                    i2u602_40 0E2A                                      i2u530_41 2D3A  
                                    i2u506_41 53EA                                      i2u514_41 4854  
                                    i2u522_41 4738                                      i2u450_41 4E0E  
                                    i2u610_41 1118                                      i2u602_41 0E26  
                                    i2u531_40 2DB2                                      i2u523_40 2C3A  
                                    i2u507_40 5586                                      i2u515_40 61F8  
                                    i2u451_40 4E24                                      i2u611_40 1164  
                                    i2u603_40 0EB6                                      i2u531_41 2DAE  
                                    i2u523_41 2C36                                      i2u507_41 5582  
                                    i2u515_41 61F4                                      i2u451_41 4E20  
                                    i2u611_41 1160                                      i2u603_41 0EB2  
                                    i2u540_40 2ECA                                      i2u532_40 2DD4  
                                    i2u524_40 2C4C                                      i2u508_40 55C4  
                                    i2u460_40 1BF6                                      i2u516_40 466E  
                                    i2u452_40 4E4C                                      i2u620_40 1496  
                                    i2u612_40 1174                                      i2u604_40 0EEC  
                                    i2u540_41 2EC6                                      i2u532_41 2DD0  
                                    i2u524_41 2C48                                      i2u508_41 55C0  
                                    i2u460_41 1BF2                                      i2u516_41 466A  
                                    i2u452_41 4E48                                      i2u620_41 1492  
                                    i2u612_41 1170                                      i2u604_41 0EE8  
                                    i2u541_40 2EDE                                      i2u533_40 2DFE  
                                    i2u525_40 2C5C                                      i2u509_40 55F8  
                                    i2u461_40 1C30                                      i2u517_40 46A2  
                                    i2u453_40 4E82                                      i2u621_40 14B2  
                                    i2u613_40 120E                                      i2u605_40 0F04  
                                    i2u541_41 2EDA                                      i2u533_41 2DFA  
                                    i2u525_41 2C58                                      i2u509_41 55F4  
                                    i2u461_41 1C2C                                      i2u453_41 4E7E  
                                    i2u621_41 14AE                                      i2u613_41 120A  
                                    i2u605_41 0F00                                      i2u517_45 4698  
                                    i2u542_40 2EF8                                      i2u534_40 2E22  
                                    i2u526_40 2C9E                                      i2u550_40 24D2  
                                    i2u470_40 1D48                                      i2u462_40 1C3E  
                                    i2u454_40 1B5C                                      i2u518_40 46D0  
                                    i2u622_40 14DA                                      i2u614_40 125C  
                                    i2u606_40 0F36                                      i2u630_40 4B8C  
                                    i2u542_41 2EF4                                      i2u534_41 2E1E  
                                    i2u526_41 2C9A                                      i2u550_41 24CE  
                                    i2u470_41 1D44                                      i2u462_41 1C3A  
                                    i2u454_41 1B58                                      i2u518_41 46CC  
                                    i2u622_41 14D6                                      i2u614_41 1258  
                                    i2u606_41 0F32                                      i2u630_41 4B88  
                                    i2u543_40 2F40                                      i2u535_40 2E38  
                                    i2u527_40 2CB0                                      i2u551_40 24E2  
                                    i2u471_40 1D7A                                      i2u463_40 1CAA  
                                    i2u455_40 1B6E                                      i2u519_40 46E4  
                                    i2u623_40 14EA                                      i2u615_40 1284  
                                    i2u607_40 0F44                                      i2u631_40 4C40  
                                    i2u543_41 2F3C                                      i2u535_41 2E34  
                                    i2u527_41 2CAC                                      i2u551_41 24DE  
                                    i2u471_41 1D76                                      i2u463_41 1CA6  
                                    i2u455_41 1B6A                                      i2u519_41 46E0  
                                    i2u623_41 14E6                                      i2u615_41 1280  
                                    i2u607_41 0F40                                      i2u631_41 4C3C  
                                    _PIR4bits 39A4                                      i2u544_40 2F70  
                                    i2u536_40 2E56                                      i2u528_40 2CC0  
                                    i2u560_40 27A8                                      i2u552_40 2518  
                                    i2u480_40 1EC2                                      i2u472_40 1D88  
                                    i2u464_40 1CC2                                      i2u456_40 1B7E  
                                    i2u624_40 156A                                      i2u616_40 1326  
                                    i2u608_40 0F6E                                      i2u544_41 2F6C  
                                    i2u536_41 2E52                                      i2u528_41 2CBC  
                                    i2u560_41 27A4                                      i2u552_41 2514  
                                    i2u480_41 1EBE                                      i2u472_41 1D84  
                                    i2u464_41 1CBC                                      i2u456_41 1B7A  
                                    i2u624_41 1566                                      i2u616_41 1322  
                                    i2u608_41 0F6A                                      i2u545_40 2F9C  
                                    i2u537_40 2E76                                      i2u529_40 2CFE  
                                    i2u561_40 27C2                                      i2u553_40 2528  
                                    i2u481_40 1ED2                                      i2u473_40 1DA6  
                                    i2u465_40 1CC4                                      i2u457_40 1BBE  
                                    i2u625_40 1584                                      i2u617_40 1362  
                                    i2u609_40 10B6                                      i2u545_41 2F98  
                                    i2u537_41 2E72                                      i2u529_41 2CFA  
                                    i2u561_41 27BE                                      i2u553_41 2524  
                                    i2u481_41 1ECE                                      i2u473_41 1DA2  
                                    i2u457_41 1BBA                                      i2u625_41 1580  
                                    i2u617_41 135E                                      i2u609_41 10B2  
                                    _PIR5bits 39A5                                      i2u538_40 2E86  
                                    i2u562_40 280A                                      i2u554_40 26C6  
                                    i2u546_40 245E                                      i2u490_40 1FB8  
                                    i2u482_40 1EE2                                      i2u474_40 1DDE  
                                    i2u466_40 1CEC                                      i2u458_40 1BD4  
                                    i2u570_40 4A12                                      i2u626_40 159A  
                                    i2u618_40 1370                                      i2u538_41 2E82  
                                    i2u562_41 2806                                      i2u546_41 245A  
                                    i2u490_41 1FB4                                      i2u482_41 1EDE  
                                    i2u474_41 1DDA                                      i2u466_41 1CE8  
                                    i2u458_41 1BD0                                      i2u570_41 4A0E  
                                    i2u626_41 1596                                      i2u618_41 136C  
                                    i2u554_45 26BC                                      i2u539_40 2EB4  
                                    i2u563_40 2838                                      i2u555_40 2720  
                                    i2u547_40 2470                                      i2u491_40 1FC8  
                                    i2u483_40 1EF8                                      i2u475_40 1E24  
                                    i2u467_40 1D0A                                      i2u459_40 1BE6  
                                    i2u627_40 1632                                      i2u619_40 13C4  
                                    i2u539_41 2EB0                                      i2u563_41 2834  
                                    i2u555_41 271C                                      i2u547_41 246C  
                                    i2u491_41 1FC4                                      i2u483_41 1EF4  
                                    i2u475_41 1E20                                      i2u467_41 1D06  
                                    i2u459_41 1BE2                                      i2u627_41 162C  
                                    i2u619_41 13C0                                      i2u571_45 4A24  
                                    i2u564_40 2870                                      i2u556_40 2740  
                                    i2u548_40 2480                                      i2u492_40 1FE4  
                                    i2u484_40 1F0E                                      i2u476_40 1E5A  
                                    i2u468_40 1D2A                                      i2u572_40 4A4C  
                                    i2u580_40 3ED6                                      i2u628_40 1634  
                                    i2u900_40 39E2                                      i2u564_41 286C  
                                    i2u556_41 273C                                      i2u548_41 247C  
                                    i2u492_41 1FE0                                      i2u484_41 1F0A  
                                    i2u476_41 1E56                                      i2u468_41 1D26  
                                    i2u572_41 4A46                                      i2u580_41 3ED2  
                                    i2u900_41 39DE                                      i2u557_40 2750  
                                    i2u549_40 24C0                                      i2u485_40 1F22  
                                    i2u477_40 1E6A                                      i2u469_40 1D38  
                                    i2u573_40 4A4E                                      i2u581_40 3F2A  
                                    i2u493_40 602E                                      i2u565_40 5928  
                                    i2u629_40 1648                                      i2u901_40 3A04  
                                    i2u557_41 274C                                      i2u549_41 24BC  
                                    i2u485_41 1F1E                                      i2u477_41 1E66  
                                    i2u469_41 1D34                                      i2u493_41 602A  
                                    i2u565_41 5924                                      i2u629_41 1644  
                                    i2u901_41 3A00                                      _PIR7bits 39A7  
                                    i2u581_45 3F20                                      i2u558_40 277E  
                                    i2u486_40 1F3C                                      i2u478_40 1E96  
                                    i2u582_40 3F46                                      i2u574_40 3DDA  
                                    i2u566_40 5972                                      i2u902_40 5CA6  
                                    i2u910_40 43F2                                      i2u494_40 61BA  
                                    i2u830_40 54CE                                      i2u558_41 277A  
                                    i2u486_41 1F38                                      i2u478_41 1E92  
                                    i2u582_41 3F42                                      i2u566_41 596E  
                                    i2u902_41 5CA2                                      i2u910_41 43EE  
                                    i2u494_41 61B6                                      i2u830_41 54CA  
                                    i2u574_45 3DD0                                      i2u559_40 2794  
                                    i2u495_40 5136                                      i2u487_40 1F76  
                                    i2u479_40 1EA6                                      i2u567_40 49A2  
                                    i2u583_40 3F82                                      i2u575_40 3E08  
                                    i2u911_40 440C                                      i2u903_40 433C  
                                    i2u831_40 5538                                      i2u559_41 2790  
                                    i2u495_41 5132                                      i2u487_41 1F72  
                                    i2u479_41 1EA2                                      i2u583_41 3F7E  
                                    i2u575_41 3E04                                      i2u911_41 4408  
                                    i2u903_41 4338                                      i2u831_41 5534  
                                    i2u567_45 4998                                      i2u496_40 5150  
                                    i2u488_40 1F88                                      i2u568_40 49C0  
                                    i2u576_40 3E2A                                      i2u584_40 5CC0  
                                    i2u592_40 0B7E                                      i2u912_40 4426  
                                    i2u904_40 4356                                      i2u832_40 5552  
                                    i2u920_40 6140                                      i2u496_41 514C  
                                    i2u488_41 1F84                                      i2u568_41 49BC  
                                    i2u576_41 3E26                                      i2u584_41 5CBC  
                                    i2u592_41 0B7A                                      i2u912_41 4422  
                                    i2u904_41 4352                                      i2u832_41 554E  
                                    i2u920_41 613C                                      i2u825_40 58D6  
                                    i2u497_40 5176                                      i2u489_40 1F98  
                                    i2u569_40 49E8                                      i2u585_40 5B54  
                                    i2u593_40 0BC8                                      i2u913_40 443C  
                                    i2u905_40 4370                                      i2u921_40 6154  
                                    i2u497_41 5172                                      i2u489_41 1F94  
                                    i2u569_41 49E4                                      i2u585_41 5B50  
                                    i2u593_41 0BC4                                      i2u913_41 4438  
                                    i2u905_41 436C                                      i2u921_41 6150  
                                    i2u577_45 3E3E                                      i2u577_46 3E48  
                                    i2u825_47 58C8                                      i2u577_47 3E58  
                                    i2u826_40 5908                                      i2u770_40 416E  
                                    i2u498_40 5194                                      i2u578_40 3E96  
                                    i2u586_40 5FEA                                      i2u594_40 0BD8  
                                    i2u914_40 62FC                                      i2u906_40 438A  
                                    i2u922_40 6168                                      i2u930_40 4CF8  
                                    i2u770_41 416A                                      i2u498_41 5190  
                                    i2u578_41 3E92                                      i2u586_41 5FE6  
                                    i2u594_41 0BD4                                      i2u914_41 62F8  
                                    i2u906_41 4386                                      i2u922_41 6164  
                                    i2u930_41 4CF4                                      i2u826_47 58FA  
                                    i2u827_40 5918                                      i2u771_40 417C  
                                    i2u499_40 51B0                                      i2u579_40 3EBA  
                                    i2u595_40 0C16                                      i2u907_40 43A4  
                                    i2u587_40 63A8                                      i2u923_40 4C7E  
                                    i2u827_41 5914                                      i2u771_41 4178  
                                    i2u499_41 51AC                                      i2u595_41 0C12  
                                    i2u907_41 43A0                                      i2u587_41 63A4  
                                    i2u923_41 4C7A                                      i2u579_45 3EB0  
                                    i2u828_40 5D46                                      i2u772_40 41D8  
                                    i2u596_40 0C28                                      i2u915_48 6302  
                                    i2u908_40 43BE                                      i2u916_40 62CA  
                                    i2u676_40 510E                                      i2u924_40 4C8C  
                                    i2u828_41 5D42                                      i2u772_41 41D4  
                                    i2u596_41 0C24                                      i2u915_49 6314  
                                    i2u908_41 43BA                                      i2u916_41 62C6  
                                    i2u676_41 510A                                      i2u924_41 4C88  
                                    i2u940_47 61C8                                      i2u773_40 422E  
                                    i2u597_40 0CA2                                      i2u909_40 43D8  
                                    i2u677_40 5120                                      i2u781_40 528A  
                                    i2u829_40 54BE                                      i2u925_40 4CA2  
                                    i2u773_41 422A                                      i2u597_41 0C9E  
                                    i2u909_41 43D4                                      i2u677_41 511C  
                                    i2u781_41 5286                                      i2u829_41 54BA  
                                    i2u925_41 4C9E                                      i2u941_47 61DC  
                                    i2u774_40 4278                                      i2u598_40 0CB4  
                                    i2u917_48 62D0                                      i2u782_40 529C  
                                    i2u918_40 6298                                      i2u870_40 5F3A  
                                    i2u926_40 4CB0                                      i2u774_41 4274  
                                    i2u598_41 0CB0                                      i2u917_49 62E2  
                                    i2u782_41 5298                                      i2u918_41 6294  
                                    i2u870_41 5F34                                      i2u926_41 4CAC  
                                    i2u870_46 5F3C                                      i2u942_47 431C  
                                    i2u775_40 4296                                      i2u599_40 0D2E  
                                    i2u783_40 4F88                                      i2u927_40 4CC6  
                                    i2u775_41 4292                                      i2u599_41 0D2A  
                                    i2u783_41 4F84                                      i2u927_41 4CC2  
                                    i2u871_45 5F50                                      i2u871_46 5F52  
                                    i2u943_47 59F2                                      i2u776_40 42A6  
                                    i2u784_40 4F9A                                      i2u919_48 629E  
                                    i2u872_40 5DD2                                      i2u928_40 4CD4  
                                    i2u776_41 42A2                                      i2u784_41 4F96  
                                    i2u919_49 62B0                                      i2u872_41 5DCE  
                                    i2u928_41 4CD0                                      i2u944_47 63DE  
                                    i2u777_40 42B4                                      i2u873_40 5DEA  
                                    i2u929_40 4CEA                                      i2u777_41 42B0  
                                    i2u873_41 5DE4                                      i2u929_41 4CE6  
                     _BP1_SetInterruptHandler 6502                                      i2u873_46 5DEC  
                                    i2u945_47 625E                                      i2u937_47 636E  
                                    i2u778_40 42EE                                      i2u778_41 42EA  
                                    i2u946_47 64A8                                      i2u938_47 64B6  
                                    i2u779_40 42FC                                      i2u779_41 42F8  
                                    i2u947_47 63FE                                      i2u939_47 61BE  
                                    i2u948_47 6428                                      i2u869_40 5F2A  
                                    i2u877_40 6112                                      i2u869_41 5F26  
                                    i2u877_41 610E                                      i2u949_47 6432  
                                    i2u878_48 6118                                      i2u878_49 612A  
                                    i2u898_40 38D0                                      i2u898_41 38CC  
                                    i2u899_40 3922                                      i2u899_41 391E  
                           i2___fldiv@new_exp 0039                         LCD_UpdateMenu@courant 01D4  
                                 ??i2_sprintf 005E                   __end_ofi2_ADC_ChannelSelect 6534  
                       ??_ADC_ConversionStart 0106                             ??_PIN_MANAGER_IOC 005E  
                                 _LCD_Command 633E                      __end_of_ADC_ThresholdISR 6546  
                                   _vfpfcnvrt 35C6                         LCD_UpdateMenu@tension 01D0  
                           ??_TMR1_Initialize 0106                                    _ADCON0bits 3EF8  
                                  _ADCON1bits 3EF9                                    _ADCON2bits 3EFA  
                                    i2___flge 475E                                    _ADCON3bits 3EFB  
                                    i2___fleq 5558                                      i2_efgtoa 0B5C  
                                    i2_floorf 3D92                                      i2_memcpy 5AFC  
                           i2___awdiv@divisor 0003                             i2___awdiv@counter 0005  
                                    i2pad@buf 0013                                      i2_strcpy 5FA8  
                                  vfpfcnvrt@c 019E                                   _INTCON0bits 3FD2  
                                    i2fputc@c 0001                         ?_INTERRUPT_Initialize 0001  
                                    i2fputs@c 000E                                      i2fputs@i 000F  
                                    i2fputs@s 000A                      _INT0_SetInterruptHandler 6520  
                          i2___awmod@dividend 0001                  ?_BP2_DefaultInterruptHandler 0001  
                                  ?_send_leds 0001                                    ?_send_byte 0001  
                                  _ADSTATbits 3EFC                                      __Hrparam 0000  
                                   off_leds@i 0019                                     off_leds@j 001A  
                                   memcpy@tmp 0110                                    vfprintf@ap 01A5  
                                    __Lrparam 0000                                    vfprintf@fp 01A1  
                          i2LCD_SetCursor@row 0008                               _adc_busy_status 00EC  
                      i2read_prec_or_width@ap 0003                               i2LCD_String@str 0003  
                                  ?_vfpfcnvrt 0192                            ___fpclassifyf@F465 00D9  
                          i2vfpfcnvrt@convarg 0097                                    sprintf@fmt 01AB  
                     ??i2_ADC_ConversionStart 0001                                      ___xxtofl 3FA4  
                                    __pivt0x8 0008                                   i2_LCD_Clear 649C  
                    ?_ADC_ConversionResultGet 0106                                      __ptext10 6516  
                                    __ptext11 6520                                      __ptext20 5ED6  
                                    __ptext12 64C6                                      __ptext21 5836  
                                    __ptext13 5A44                                    _T1GCONbits 3FB3  
                                    __ptext30 5E8E                                      __ptext22 5E46  
                                    __ptext14 2FB0                                      __ptext31 168A  
                                    __ptext23 4D26                                      __ptext15 5D5E  
                                    __ptext40 288E                                      __ptext32 616E  
                                    __ptext24 654C                                      __ptext16 5B56  
                                    __ptext41 6534                                      __ptext33 4552  
                                    __ptext25 5AA0                                      __ptext17 35C6  
                                    __ptext50 6408                                      __ptext42 63AA  
                                    __ptext34 5400                                      __ptext26 5BAE  
                                    __ptext18 4A60                                      __ptext51 4C4A  
                                    __ptext43 64D8                                      __ptext35 52A2  
                                    __ptext27 3B7C                                      __ptext19 001E  
                                    __ptext60 54AC                                      __ptext52 60F2  
                                    __ptext44 57C2                                      __ptext36 4FA0  
                                    __ptext28 4862                                      __ptext61 4ED8  
                                    __ptext53 654E                                      __ptext45 631A  
                                    __ptext37 5602                                      __ptext29 444A  
                                    __ptext70 4310                                      __ptext62 51E8  
                                    __ptext54 5DAE                                      __ptext46 5988  
                                    __ptext38 3FA4                                      __ptext71 62E8  
                                    __ptext63 5064                                      __ptext55 5F1C  
                                    __ptext47 621A                                      __ptext39 1FF8  
                                    __ptext80 5FA8                                      __ptext72 6554  
                                    __ptext64 64B2                                      __ptext56 6130  
                                    __ptext48 6440                                      __ptext81 591A  
                                    __ptext73 59E6                                      __ptext65 6470  
                                    __ptext57 6284                                      __ptext49 633E  
                                    __ptext90 5F62                                      __ptext82 5FEC  
                                    __ptext74 32DA                                      __ptext66 6386  
                                    __ptext58 6550                                      __ptext91 1B42  
                                    __ptext83 4E00                                      __ptext75 5DFC  
                                    __ptext67 61A8                                      __ptext59 6362  
                                    __ptext92 61E2                                      __ptext84 6556  
                                    __ptext76 5C5C                                      __ptext68 62B6  
                                    __ptext93 475E                                      __ptext85 5AFC  
                                    __ptext77 38A2                                      __ptext69 6552  
                                    __ptext94 5558                                      __ptext86 5CB2  
                                    __ptext78 4B56                                      __ptext95 5352  
                                    __ptext87 3D92                                      __ptext79 0B5C  
                                    __ptext96 5126                                      __ptext88 4962  
                                    __ptext97 569E                                      __ptext89 4658  
                                    __ptext98 415C                                      __ptext99 2444  
                                  _COLORS_TAB FEEB                      __end_of_appliquer_action 5558  
                                  strcpy@dest 0106                                  ??_send_color 0006  
                                    _off_leds 51E8                          i2_read_prec_or_width 4B56  
                   ??_BP1_SetInterruptHandler 0108                                      _send_bit 61A8  
        __end_of_TMR1_DefaultOverflowCallback 6550                  _TMR1_DefaultOverflowCallback 654E  
                               ?_ws2812_reset 0001                                      efgtoa@fp 015A  
                                    efgtoa@ne 0169                                      efgtoa@pp 016B  
                        LCD_UpdateMenu@buffer 01C0                                      efgtoa@ou 0177  
                                    isa$xinst 0000                       TMR1_CounterSet@timerVal 0001  
                             _LCD_EnablePulse 6408                                      _vfprintf 5B56  
          __end_of_INTERRUPT_InterruptManager 4D26                    _INTERRUPT_InterruptManager 4C4A  
                       __end_ofi2_LCD_Command 6408                                    _LCD_String 57C2  
                _INT1_DefaultInterruptHandler 0000                           lire_tension@adc_val 014E  
                           i2___awmod@divisor 0003                             i2___awmod@counter 0005  
                          __end_of_send_color 6486                                      memcpy@d1 0106  
                                    memcpy@s1 0108                                  _TMR1_handler 5DAE  
                              i2_lire_tension 569E                        ??_INTERRUPT_Initialize 0108  
                           i2___fpclassifyf@e 0009                             i2___fpclassifyf@u 000B  
                           i2___fpclassifyf@x 0001                         i2read_prec_or_width@c 0007  
                       i2read_prec_or_width@n 0008           __end_of_BP1_DefaultInterruptHandler 6556  
                 _BP1_DefaultInterruptHandler 6554                                      intlevel2 0000  
                                   sprintf@ap 01B1                                      on_leds@b 0016  
                                    on_leds@g 0015                                      on_leds@i 001C  
                                    on_leds@j 001D                                      on_leds@r 001B  
                    ?_BP3_SetInterruptHandler 0106                               i2___xxtofl@sign 0009  
                         lire_tension@tension 014A                                    i2_LCD_Char 63CA  
                       ?i2_read_prec_or_width 0001                                    i2_LCD_Init 6250  
                     ?_PIN_MANAGER_Initialize 0001                                     strcpy@src 0108  
                                 ??_send_leds 0007                              i2_LCD_UpdateMenu 32DA  
                                 ??_send_byte 0002                                ??_ws2812_reset 0001  
                            ??_ADC_Initialize 0106                       i2LCD_UpdateMenu@courant 00D1  
               ??_BP1_DefaultInterruptHandler 0001                                   efgtoa@esign 016C  
                                 efgtoa@nmode 0174                 ?_TMR1_DefaultOverflowCallback 0001  
                     i2LCD_UpdateMenu@tension 00CD                                 ??i2_vfpfcnvrt 0095  
                                 ??_vfpfcnvrt 0198                      __end_of_CLOCK_Initialize 64D8  
                                    sprintf@f 01B3                                      sprintf@s 01A9  
             __end_of_ADC_ConversionResultGet 63CA                        __end_ofi2_lire_tension 5736  
            __end_of_INT1_SetInterruptHandler 6520                   __end_ofLCD_SetCursor@F16382 FF07  
                             _TMR1_CounterSet 5F1C                                 ___fladd@signs 0112  
              __end_of_PIN_MANAGER_Initialize 57C2                                  ___fladd@aexp 0113  
                                ___fladd@bexp 0114                               _PIN_MANAGER_IOC 6130  
                     __end_of_LCD_EnablePulse 6424                               _TMR1_Initialize 6030  
